; ModuleID = 'blender/source/blender/editors/curve/editcurve.c'
source_filename = "blender/source/blender/editors/curve/editcurve.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.BPoint = type { [4 x float], float, float, i16, i16, float, float }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.AnimData = type { %struct.bAction*, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.NlaStrip*, %struct.ListBase, %struct.ListBase, i32, i32, i16, i16, float }
%struct.AnimMapper = type { %struct.AnimMapper*, %struct.AnimMapper*, %struct.bAction*, %struct.ListBase }
%struct.NlaStrip = type { %struct.NlaStrip*, %struct.NlaStrip*, %struct.ListBase, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.ListBase, [64 x i8], float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i8*, i32, i32 }
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type { %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Path* }
%struct.Path = type { %struct.PathPoint*, i32, float }
%struct.PathPoint = type { [4 x float], [4 x float], float, float }
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.StructRNA = type opaque
%struct.rctf = type { float, float, float, float }
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type opaque
%struct.anim = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.Curve = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.ListBase, %struct.EditNurb*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.Key*, %struct.Material**, [3 x float], [3 x float], [3 x float], i16, i16, i16, i16, float, float, i32, i16, i16, i32, float, float, float, i16, i16, i16, i16, i32, i32, [4 x i8], i16, i8, i8, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i8*, %struct.EditFont*, [64 x i8], %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.TextBox*, i32, i32, %struct.CharInfo*, %struct.CharInfo, float, float, float, i8, i8, [2 x i8] }
%struct.EditNurb = type { %struct.ListBase, %struct.GHash*, i32, [4 x i8] }
%struct.Key = type { %struct.ID, %struct.AnimData*, %struct.KeyBlock*, [32 x i8], i32, i32, %struct.ListBase, %struct.Ipo*, %struct.ID*, i16, i16, i16, i16, float, i32 }
%struct.KeyBlock = type { %struct.KeyBlock*, %struct.KeyBlock*, float, float, i16, i16, i16, i16, i32, i32, i8*, [64 x i8], [64 x i8], float, float }
%struct.EditFont = type opaque
%struct.VFont = type opaque
%struct.TextBox = type { float, float, float, float }
%struct.CharInfo = type { i16, i16, i8, i8, i16 }
%struct.Nurb = type { %struct.Nurb*, %struct.Nurb*, i16, i16, i16, i16, i32, i32, [2 x i16], i16, i16, i16, i16, i16, i16, float*, float*, %struct.BPoint*, %struct.BezTriple*, i16, i16, i32 }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.CVKeyIndex = type { i8*, i32, i32, i32, i32, i8, %struct.Nurb* }
%struct.FCurve = type { %struct.FCurve*, %struct.FCurve*, %struct.bActionGroup*, %struct.ChannelDriver*, %struct.ListBase, %struct.BezTriple*, %struct.FPoint*, i32, float, i16, i16, i32, i8*, i32, [3 x float], float, float }
%struct.bActionGroup = type { %struct.bActionGroup*, %struct.bActionGroup*, %struct.ListBase, i32, i32, [64 x i8], %struct.ThemeWireColor }
%struct.ThemeWireColor = type { [4 x i8], [4 x i8], [4 x i8], i16, i16 }
%struct.ChannelDriver = type { %struct.ListBase, [256 x i8], i8*, float, float, i32, i32 }
%struct.FPoint = type { [2 x float], i32, i32 }
%struct.ModifierData = type { %struct.ModifierData*, %struct.ModifierData*, i32, i32, i32, i32, [64 x i8], %struct.Scene*, i8* }
%struct.HookModifierData = type { %struct.ModifierData, %struct.Object*, [64 x i8], [4 x [4 x float]], [3 x float], float, i32*, i32, float, [64 x i8] }
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.bContext = type opaque
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.uiLayout = type opaque
%struct.PropertyRNA = type opaque
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.ViewContext = type { %struct.Scene*, %struct.Object*, %struct.Object*, %struct.ARegion*, %struct.View3D*, %struct.RegionView3D*, %struct.BMEditMesh*, [2 x i32] }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type opaque
%struct.View3D = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], [4 x float], float, float, i8, [3 x i8], i32, i32, i16, i16, %struct.Object*, %struct.Object*, %struct.rctf, %struct.ListBase, %struct.BGpic*, %struct.View3D*, [64 x i8], i32, i32, i16, i16, i16, i16, i16, i16, float, float, float, float, [3 x float], [3 x float], i16, i16, i16, i8, i8, i8, i8, [2 x i8], %struct.ListBase, %struct.ListBase, %struct.ListBase, i8, i8, i8, [5 x i8], i8*, %struct.Material*, %struct.bGPdata* }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.BGpic = type { %struct.BGpic*, %struct.BGpic*, %struct.Image*, %struct.ImageUser, %struct.MovieClip*, %struct.MovieClipUser, float, float, float, float, i16, i16, i16, i16 }
%struct.MovieClipUser = type { i32, i16, i16 }
%struct.RegionView3D = type { [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [6 x [4 x float]], [6 x [4 x float]], %struct.BoundBox*, %struct.RegionView3D*, %struct.RenderEngine*, %struct.ViewDepths*, i8*, %struct.SmoothView3DStore*, %struct.wmTimer*, [4 x [4 x float]], [4 x float], float, float, float, float, [3 x float], float, i8, i8, i8, i8, i8, [3 x i8], [2 x float], i16, i16, [4 x float], i16, i16, float, [3 x float], float, [3 x float] }
%struct.RenderEngine = type opaque
%struct.ViewDepths = type { i16, i16, i16, i16, float*, [2 x double], i8 }
%struct.SmoothView3DStore = type opaque
%struct.BMEditMesh = type opaque
%struct.anon.0 = type { %struct.BPoint*, %struct.BezTriple*, %struct.Nurb*, float, i32, i32, [2 x float] }
%struct.uiPopupMenu = type opaque
%struct.CollectionPointerLink = type { %struct.CollectionPointerLink*, %struct.CollectionPointerLink*, %struct.PointerRNA }
%struct.UndoCurve = type { %struct.ListBase, i32, %struct.GHash*, %struct.ListBase, %struct.ListBase, i32 }
%struct.NurbSort = type { %struct.NurbSort*, %struct.NurbSort*, %struct.Nurb*, [3 x float] }
%struct.anon.1 = type { %struct.BPoint*, %struct.BezTriple*, %struct.Nurb*, float, i32, i32, [2 x float] }
%struct.GHashIterator = type { %struct.GHash*, %struct.Entry*, i32 }
%struct.Entry = type opaque
%struct._gh_Entry = type { i8*, i8*, i8* }

@.str = private unnamed_addr constant [14 x i8] c"knotu %d: %f\0A\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"knotv %d: %f\0A\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.2 = private unnamed_addr constant [9 x i8] c"editnurb\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"Separate\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"CURVE_OT_separate\00", align 1
@.str.5 = private unnamed_addr constant [76 x i8] c"Separate selected points from connected unselected points into a new object\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"Split\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"CURVE_OT_split\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"Split off selected points from connected unselected points\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.9 = private unnamed_addr constant [13 x i8] c"extrudeNurb1\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.10 = private unnamed_addr constant [17 x i8] c"Switch Direction\00", align 1
@.str.11 = private unnamed_addr constant [37 x i8] c"Switch direction of selected splines\00", align 1
@.str.12 = private unnamed_addr constant [26 x i8] c"CURVE_OT_switch_direction\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"Set Goal Weight\00", align 1
@.str.14 = private unnamed_addr constant [45 x i8] c"Set softbody goal weight for selected points\00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c"CURVE_OT_spline_weight_set\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"weight\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"Weight\00", align 1
@.str.18 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"Set Curve Radius\00", align 1
@.str.20 = private unnamed_addr constant [54 x i8] c"Set per-point radius which is used for bevel tapering\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"CURVE_OT_radius_set\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"radius\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"Radius\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c"Smooth\00", align 1
@.str.25 = private unnamed_addr constant [34 x i8] c"Flatten angles of selected points\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"CURVE_OT_smooth\00", align 1
@.str.27 = private unnamed_addr constant [20 x i8] c"Smooth Curve Weight\00", align 1
@.str.28 = private unnamed_addr constant [38 x i8] c"Interpolate weight of selected points\00", align 1
@.str.29 = private unnamed_addr constant [23 x i8] c"CURVE_OT_smooth_weight\00", align 1
@.str.30 = private unnamed_addr constant [20 x i8] c"Smooth Curve Radius\00", align 1
@.str.31 = private unnamed_addr constant [37 x i8] c"Interpolate radii of selected points\00", align 1
@.str.32 = private unnamed_addr constant [23 x i8] c"CURVE_OT_smooth_radius\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"Smooth Curve Tilt\00", align 1
@.str.34 = private unnamed_addr constant [36 x i8] c"Interpolate tilt of selected points\00", align 1
@.str.35 = private unnamed_addr constant [21 x i8] c"CURVE_OT_smooth_tilt\00", align 1
@.str.36 = private unnamed_addr constant [17 x i8] c"(De)select First\00", align 1
@.str.37 = private unnamed_addr constant [25 x i8] c"CURVE_OT_de_select_first\00", align 1
@.str.38 = private unnamed_addr constant [47 x i8] c"(De)select first of visible part of each NURBS\00", align 1
@.str.39 = private unnamed_addr constant [16 x i8] c"(De)select Last\00", align 1
@.str.40 = private unnamed_addr constant [24 x i8] c"CURVE_OT_de_select_last\00", align 1
@.str.41 = private unnamed_addr constant [46 x i8] c"(De)select last of visible part of each NURBS\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"(De)select All\00", align 1
@.str.43 = private unnamed_addr constant [20 x i8] c"CURVE_OT_select_all\00", align 1
@.str.44 = private unnamed_addr constant [30 x i8] c"(De)select all control points\00", align 1
@.str.45 = private unnamed_addr constant [14 x i8] c"Hide Selected\00", align 1
@.str.46 = private unnamed_addr constant [14 x i8] c"CURVE_OT_hide\00", align 1
@.str.47 = private unnamed_addr constant [33 x i8] c"Hide (un)selected control points\00", align 1
@.str.48 = private unnamed_addr constant [11 x i8] c"unselected\00", align 1
@.str.49 = private unnamed_addr constant [11 x i8] c"Unselected\00", align 1
@.str.50 = private unnamed_addr constant [37 x i8] c"Hide unselected rather than selected\00", align 1
@.str.51 = private unnamed_addr constant [14 x i8] c"Reveal Hidden\00", align 1
@.str.52 = private unnamed_addr constant [16 x i8] c"CURVE_OT_reveal\00", align 1
@.str.53 = private unnamed_addr constant [33 x i8] c"Show again hidden control points\00", align 1
@.str.54 = private unnamed_addr constant [10 x i8] c"Subdivide\00", align 1
@.str.55 = private unnamed_addr constant [28 x i8] c"Subdivide selected segments\00", align 1
@.str.56 = private unnamed_addr constant [19 x i8] c"CURVE_OT_subdivide\00", align 1
@.str.57 = private unnamed_addr constant [12 x i8] c"number_cuts\00", align 1
@.str.58 = private unnamed_addr constant [15 x i8] c"Number of cuts\00", align 1
@CURVE_OT_spline_type_set.type_items = internal global [4 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !0
@.str.59 = private unnamed_addr constant [5 x i8] c"POLY\00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"Poly\00", align 1
@.str.61 = private unnamed_addr constant [7 x i8] c"BEZIER\00", align 1
@.str.62 = private unnamed_addr constant [7 x i8] c"Bezier\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"NURBS\00", align 1
@.str.64 = private unnamed_addr constant [16 x i8] c"Set Spline Type\00", align 1
@.str.65 = private unnamed_addr constant [26 x i8] c"Set type of active spline\00", align 1
@.str.66 = private unnamed_addr constant [25 x i8] c"CURVE_OT_spline_type_set\00", align 1
@.str.67 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"Type\00", align 1
@.str.69 = private unnamed_addr constant [12 x i8] c"Spline type\00", align 1
@.str.70 = private unnamed_addr constant [12 x i8] c"use_handles\00", align 1
@.str.71 = private unnamed_addr constant [8 x i8] c"Handles\00", align 1
@.str.72 = private unnamed_addr constant [56 x i8] c"Use handles when converting bezier curves into polygons\00", align 1
@CURVE_OT_handle_type_set.editcurve_handle_type_items = internal global [6 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.73, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.75, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.79, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.81, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3202
@.str.73 = private unnamed_addr constant [10 x i8] c"AUTOMATIC\00", align 1
@.str.74 = private unnamed_addr constant [10 x i8] c"Automatic\00", align 1
@.str.75 = private unnamed_addr constant [7 x i8] c"VECTOR\00", align 1
@.str.76 = private unnamed_addr constant [7 x i8] c"Vector\00", align 1
@.str.77 = private unnamed_addr constant [8 x i8] c"ALIGNED\00", align 1
@.str.78 = private unnamed_addr constant [8 x i8] c"Aligned\00", align 1
@.str.79 = private unnamed_addr constant [11 x i8] c"FREE_ALIGN\00", align 1
@.str.80 = private unnamed_addr constant [5 x i8] c"Free\00", align 1
@.str.81 = private unnamed_addr constant [18 x i8] c"TOGGLE_FREE_ALIGN\00", align 1
@.str.82 = private unnamed_addr constant [18 x i8] c"Toggle Free/Align\00", align 1
@.str.83 = private unnamed_addr constant [16 x i8] c"Set Handle Type\00", align 1
@.str.84 = private unnamed_addr constant [48 x i8] c"Set type of handles for selected control points\00", align 1
@.str.85 = private unnamed_addr constant [25 x i8] c"CURVE_OT_handle_type_set\00", align 1
@.str.86 = private unnamed_addr constant [15 x i8] c"Recalc Normals\00", align 1
@.str.87 = private unnamed_addr constant [46 x i8] c"Recalculate the direction of selected handles\00", align 1
@.str.88 = private unnamed_addr constant [33 x i8] c"CURVE_OT_normals_make_consistent\00", align 1
@.str.89 = private unnamed_addr constant [12 x i8] c"calc_length\00", align 1
@.str.90 = private unnamed_addr constant [7 x i8] c"Length\00", align 1
@.str.91 = private unnamed_addr constant [26 x i8] c"Recalculate handle length\00", align 1
@.str.92 = private unnamed_addr constant [13 x i8] c"Make Segment\00", align 1
@.str.93 = private unnamed_addr constant [22 x i8] c"CURVE_OT_make_segment\00", align 1
@.str.94 = private unnamed_addr constant [39 x i8] c"Join two curves by their selected ends\00", align 1
@.str.95 = private unnamed_addr constant [5 x i8] c"Spin\00", align 1
@.str.96 = private unnamed_addr constant [14 x i8] c"CURVE_OT_spin\00", align 1
@.str.97 = private unnamed_addr constant [71 x i8] c"Extrude selected boundary row around pivot point and current view axis\00", align 1
@.str.98 = private unnamed_addr constant [7 x i8] c"center\00", align 1
@.str.99 = private unnamed_addr constant [7 x i8] c"Center\00", align 1
@.str.100 = private unnamed_addr constant [28 x i8] c"Center in global view space\00", align 1
@.str.101 = private unnamed_addr constant [5 x i8] c"axis\00", align 1
@.str.102 = private unnamed_addr constant [5 x i8] c"Axis\00", align 1
@.str.103 = private unnamed_addr constant [26 x i8] c"Axis in global view space\00", align 1
@.str.104 = private unnamed_addr constant [11 x i8] c"Add Vertex\00", align 1
@.str.105 = private unnamed_addr constant [20 x i8] c"CURVE_OT_vertex_add\00", align 1
@.str.106 = private unnamed_addr constant [72 x i8] c"Add a new control point (linked to only selected end-curve one, if any)\00", align 1
@.str.107 = private unnamed_addr constant [9 x i8] c"location\00", align 1
@.str.108 = private unnamed_addr constant [9 x i8] c"Location\00", align 1
@.str.109 = private unnamed_addr constant [30 x i8] c"Location to add new vertex at\00", align 1
@.str.110 = private unnamed_addr constant [8 x i8] c"Extrude\00", align 1
@.str.111 = private unnamed_addr constant [34 x i8] c"Extrude selected control point(s)\00", align 1
@.str.112 = private unnamed_addr constant [17 x i8] c"CURVE_OT_extrude\00", align 1
@.str.113 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@transform_mode_types = external dso_local global [0 x %struct.EnumPropertyItem], align 8
@.str.114 = private unnamed_addr constant [5 x i8] c"Mode\00", align 1
@CURVE_OT_cyclic_toggle.direction_items = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.115, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3215
@.str.115 = private unnamed_addr constant [9 x i8] c"CYCLIC_U\00", align 1
@.str.116 = private unnamed_addr constant [9 x i8] c"Cyclic U\00", align 1
@.str.117 = private unnamed_addr constant [9 x i8] c"CYCLIC_V\00", align 1
@.str.118 = private unnamed_addr constant [9 x i8] c"Cyclic V\00", align 1
@.str.119 = private unnamed_addr constant [14 x i8] c"Toggle Cyclic\00", align 1
@.str.120 = private unnamed_addr constant [38 x i8] c"Make active spline closed/opened loop\00", align 1
@.str.121 = private unnamed_addr constant [23 x i8] c"CURVE_OT_cyclic_toggle\00", align 1
@.str.122 = private unnamed_addr constant [10 x i8] c"direction\00", align 1
@.str.123 = private unnamed_addr constant [10 x i8] c"Direction\00", align 1
@.str.124 = private unnamed_addr constant [36 x i8] c"Direction to make surface cyclic in\00", align 1
@.str.125 = private unnamed_addr constant [18 x i8] c"Select Linked All\00", align 1
@.str.126 = private unnamed_addr constant [23 x i8] c"CURVE_OT_select_linked\00", align 1
@.str.127 = private unnamed_addr constant [47 x i8] c"Select all control points linked to active one\00", align 1
@.str.128 = private unnamed_addr constant [14 x i8] c"Select Linked\00", align 1
@.str.129 = private unnamed_addr constant [28 x i8] c"CURVE_OT_select_linked_pick\00", align 1
@.str.130 = private unnamed_addr constant [58 x i8] c"Select all control points linked to already selected ones\00", align 1
@.str.131 = private unnamed_addr constant [9 x i8] c"deselect\00", align 1
@.str.132 = private unnamed_addr constant [9 x i8] c"Deselect\00", align 1
@.str.133 = private unnamed_addr constant [58 x i8] c"Deselect linked control points rather than selecting them\00", align 1
@.str.134 = private unnamed_addr constant [25 x i8] c"Select Control Point Row\00", align 1
@.str.135 = private unnamed_addr constant [20 x i8] c"CURVE_OT_select_row\00", align 1
@.str.136 = private unnamed_addr constant [52 x i8] c"Select a row of control points including active one\00", align 1
@.str.137 = private unnamed_addr constant [12 x i8] c"Select Next\00", align 1
@.str.138 = private unnamed_addr constant [21 x i8] c"CURVE_OT_select_next\00", align 1
@.str.139 = private unnamed_addr constant [71 x i8] c"Select control points following already selected ones along the curves\00", align 1
@.str.140 = private unnamed_addr constant [16 x i8] c"Select Previous\00", align 1
@.str.141 = private unnamed_addr constant [25 x i8] c"CURVE_OT_select_previous\00", align 1
@.str.142 = private unnamed_addr constant [71 x i8] c"Select control points preceding already selected ones along the curves\00", align 1
@.str.143 = private unnamed_addr constant [12 x i8] c"Select More\00", align 1
@.str.144 = private unnamed_addr constant [21 x i8] c"CURVE_OT_select_more\00", align 1
@.str.145 = private unnamed_addr constant [63 x i8] c"Select control points directly linked to already selected ones\00", align 1
@.str.146 = private unnamed_addr constant [12 x i8] c"Select Less\00", align 1
@.str.147 = private unnamed_addr constant [21 x i8] c"CURVE_OT_select_less\00", align 1
@.str.148 = private unnamed_addr constant [58 x i8] c"Reduce current selection by deselecting boundary elements\00", align 1
@.str.149 = private unnamed_addr constant [14 x i8] c"Select Random\00", align 1
@.str.150 = private unnamed_addr constant [23 x i8] c"CURVE_OT_select_random\00", align 1
@.str.151 = private unnamed_addr constant [36 x i8] c"Randomly select some control points\00", align 1
@.str.152 = private unnamed_addr constant [8 x i8] c"percent\00", align 1
@.str.153 = private unnamed_addr constant [8 x i8] c"Percent\00", align 1
@.str.154 = private unnamed_addr constant [42 x i8] c"Percentage of elements to select randomly\00", align 1
@.str.155 = private unnamed_addr constant [17 x i8] c"Checker Deselect\00", align 1
@.str.156 = private unnamed_addr constant [28 x i8] c"Deselect every other vertex\00", align 1
@.str.157 = private unnamed_addr constant [20 x i8] c"CURVE_OT_select_nth\00", align 1
@.str.158 = private unnamed_addr constant [4 x i8] c"nth\00", align 1
@.str.159 = private unnamed_addr constant [14 x i8] c"Nth Selection\00", align 1
@.str.160 = private unnamed_addr constant [16 x i8] c"Duplicate Curve\00", align 1
@.str.161 = private unnamed_addr constant [34 x i8] c"Duplicate selected control points\00", align 1
@.str.162 = private unnamed_addr constant [19 x i8] c"CURVE_OT_duplicate\00", align 1
@.str.163 = private unnamed_addr constant [7 x i8] c"Delete\00", align 1
@.str.164 = private unnamed_addr constant [43 x i8] c"Delete selected control points or segments\00", align 1
@.str.165 = private unnamed_addr constant [16 x i8] c"CURVE_OT_delete\00", align 1
@curve_delete_type_items = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.226, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.227, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.228, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.229, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3232
@.str.166 = private unnamed_addr constant [25 x i8] c"Which elements to delete\00", align 1
@.str.167 = private unnamed_addr constant [13 x i8] c"Shade Smooth\00", align 1
@.str.168 = private unnamed_addr constant [22 x i8] c"CURVE_OT_shade_smooth\00", align 1
@.str.169 = private unnamed_addr constant [22 x i8] c"Set shading to smooth\00", align 1
@.str.170 = private unnamed_addr constant [11 x i8] c"Shade Flat\00", align 1
@.str.171 = private unnamed_addr constant [20 x i8] c"CURVE_OT_shade_flat\00", align 1
@.str.172 = private unnamed_addr constant [20 x i8] c"Set shading to flat\00", align 1
@.str.173 = private unnamed_addr constant [38 x i8] c"Active object is not a selected curve\00", align 1
@.str.174 = private unnamed_addr constant [11 x i8] c"Clear Tilt\00", align 1
@.str.175 = private unnamed_addr constant [20 x i8] c"CURVE_OT_tilt_clear\00", align 1
@.str.176 = private unnamed_addr constant [42 x i8] c"Clear the tilt of selected control points\00", align 1
@.str.177 = private unnamed_addr constant [20 x i8] c"Match Texture Space\00", align 1
@.str.178 = private unnamed_addr constant [29 x i8] c"CURVE_OT_match_texture_space\00", align 1
@.str.179 = private unnamed_addr constant [45 x i8] c"Match texture space to object's bounding box\00", align 1
@.str.180 = private unnamed_addr constant [30 x i8] c"splines[%d].bezier_points[%d]\00", align 1
@.str.181 = private unnamed_addr constant [15 x i8] c"%s.handle_left\00", align 1
@.str.182 = private unnamed_addr constant [16 x i8] c"%s.handle_right\00", align 1
@.str.183 = private unnamed_addr constant [23 x i8] c"splines[%d].points[%d]\00", align 1
@.str.184 = private unnamed_addr constant [8 x i8] c"splines\00", align 1
@.str.185 = private unnamed_addr constant [15 x i8] c".bezier_points\00", align 1
@.str.186 = private unnamed_addr constant [8 x i8] c".points\00", align 1
@.str.187 = private unnamed_addr constant [12 x i8] c"splines[%d]\00", align 1
@.str.188 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@G = external dso_local global %struct.Global, align 8
@.str.189 = private unnamed_addr constant [27 x i8] c"curve old to new index map\00", align 1
@.str.190 = private unnamed_addr constant [14 x i8] c"currkey->data\00", align 1
@.str.191 = private unnamed_addr constant [18 x i8] c"editNurb keyIndex\00", align 1
@.str.192 = private unnamed_addr constant [16 x i8] c"init_cvKeyIndex\00", align 1
@.str.193 = private unnamed_addr constant [41 x i8] c"Cannot separate a curve with vertex keys\00", align 1
@.str.194 = private unnamed_addr constant [34 x i8] c"Cannot separate current selection\00", align 1
@.str.195 = private unnamed_addr constant [14 x i8] c"adduplicateN3\00", align 1
@.str.196 = private unnamed_addr constant [22 x i8] c"Can't duplicate Nurb\0A\00", align 1
@.str.197 = private unnamed_addr constant [31 x i8] c"Cannot split current selection\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@.str.198 = private unnamed_addr constant [7 x i8] c"action\00", align 1
@.str.199 = private unnamed_addr constant [11 x i8] c"subdivNurb\00", align 1
@.str.200 = private unnamed_addr constant [12 x i8] c"subdivNurb2\00", align 1
@.str.201 = private unnamed_addr constant [14 x i8] c"subivideNurb3\00", align 1
@.str.202 = private unnamed_addr constant [15 x i8] c"subdivideNurb4\00", align 1
@.str.203 = private unnamed_addr constant [20 x i8] c"Not yet implemented\00", align 1
@.str.204 = private unnamed_addr constant [23 x i8] c"No conversion possible\00", align 1
@.str.205 = private unnamed_addr constant [12 x i8] c"addsegmentN\00", align 1
@.str.206 = private unnamed_addr constant [13 x i8] c"addsegmentN2\00", align 1
@.str.207 = private unnamed_addr constant [20 x i8] c"Cannot make segment\00", align 1
@nsortbase = internal global %struct.ListBase zeroinitializer, align 8, !dbg !3219
@.str.208 = private unnamed_addr constant [28 x i8] c"Too few selections to merge\00", align 1
@.str.209 = private unnamed_addr constant [26 x i8] c"Resolution does not match\00", align 1
@.str.210 = private unnamed_addr constant [5 x i8] c"sort\00", align 1
@.str.211 = private unnamed_addr constant [8 x i8] c"mergeBP\00", align 1
@.str.212 = private unnamed_addr constant [13 x i8] c"switchdirect\00", align 1
@.str.213 = private unnamed_addr constant [12 x i8] c"Cannot spin\00", align 1
@__const.spin_invoke.axis = private unnamed_addr constant [3 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4
@.str.214 = private unnamed_addr constant [13 x i8] c"addvert_Nurb\00", align 1
@.str.215 = private unnamed_addr constant [19 x i8] c"addvert_Nurb newnu\00", align 1
@.str.216 = private unnamed_addr constant [14 x i8] c"addvert_Nurb5\00", align 1
@.str.217 = private unnamed_addr constant [14 x i8] c"addvert_Nurb4\00", align 1
@.str.218 = private unnamed_addr constant [14 x i8] c"addvert_Nurb3\00", align 1
@select_row_exec.last = internal global %struct.BPoint* null, align 8, !dbg !3221
@select_row_exec.direction = internal global i32 0, align 4, !dbg !3230
@.str.219 = private unnamed_addr constant [11 x i8] c"selectlist\00", align 1
@.str.220 = private unnamed_addr constant [33 x i8] c"Surface has not got active point\00", align 1
@.str.221 = private unnamed_addr constant [31 x i8] c"Curve has not got active point\00", align 1
@.str.222 = private unnamed_addr constant [35 x i8] c"Cannot duplicate current selection\00", align 1
@.str.223 = private unnamed_addr constant [11 x i8] c"deleteNurb\00", align 1
@.str.224 = private unnamed_addr constant [8 x i8] c"delNurb\00", align 1
@.str.225 = private unnamed_addr constant [9 x i8] c"delNurb2\00", align 1
@.str.226 = private unnamed_addr constant [5 x i8] c"VERT\00", align 1
@.str.227 = private unnamed_addr constant [9 x i8] c"Vertices\00", align 1
@.str.228 = private unnamed_addr constant [8 x i8] c"SEGMENT\00", align 1
@.str.229 = private unnamed_addr constant [9 x i8] c"Segments\00", align 1
@.str.230 = private unnamed_addr constant [18 x i8] c"dupli_keyIndex gh\00", align 1
@.str.231 = private unnamed_addr constant [25 x i8] c"dupli_keyIndexHash index\00", align 1
@.str.232 = private unnamed_addr constant [10 x i8] c"undoCurve\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ListBase* @object_editcurve_get(%struct.Object* %ob) #0 !dbg !3239 {
entry:
  %retval = alloca %struct.ListBase*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3244, metadata !DIExpression()), !dbg !3245
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3246
  %tobool = icmp ne %struct.Object* %0, null, !dbg !3246
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3248

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3249
  %type = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 3, !dbg !3249
  %2 = load i16, i16* %type, align 8, !dbg !3249
  %conv = sext i16 %2 to i32, !dbg !3249
  %cmp = icmp eq i32 %conv, 2, !dbg !3249
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3249

lor.lhs.false:                                    ; preds = %land.lhs.true
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3249
  %type2 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 3, !dbg !3249
  %4 = load i16, i16* %type2, align 8, !dbg !3249
  %conv3 = sext i16 %4 to i32, !dbg !3249
  %cmp4 = icmp eq i32 %conv3, 3, !dbg !3249
  br i1 %cmp4, label %if.then, label %if.end, !dbg !3250

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !3251, metadata !DIExpression()), !dbg !3253
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3254
  %data = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 19, !dbg !3255
  %6 = load i8*, i8** %data, align 8, !dbg !3255
  %7 = bitcast i8* %6 to %struct.Curve*, !dbg !3254
  store %struct.Curve* %7, %struct.Curve** %cu, align 8, !dbg !3253
  %8 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3256
  %editnurb = getelementptr inbounds %struct.Curve, %struct.Curve* %8, i32 0, i32 4, !dbg !3257
  %9 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !3257
  %nurbs = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %9, i32 0, i32 0, !dbg !3258
  store %struct.ListBase* %nurbs, %struct.ListBase** %retval, align 8, !dbg !3259
  br label %return, !dbg !3259

if.end:                                           ; preds = %lor.lhs.false, %entry
  store %struct.ListBase* null, %struct.ListBase** %retval, align 8, !dbg !3260
  br label %return, !dbg !3260

return:                                           ; preds = %if.end, %if.then
  %10 = load %struct.ListBase*, %struct.ListBase** %retval, align 8, !dbg !3261
  ret %struct.ListBase* %10, !dbg !3261
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @isNurbsel(%struct.Nurb* %nu) #0 !dbg !3262 {
entry:
  %retval = alloca i32, align 4
  %nu.addr = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !3265, metadata !DIExpression()), !dbg !3266
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !3267, metadata !DIExpression()), !dbg !3268
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !3269, metadata !DIExpression()), !dbg !3270
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3271, metadata !DIExpression()), !dbg !3272
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3273
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %0, i32 0, i32 2, !dbg !3275
  %1 = load i16, i16* %type, align 8, !dbg !3275
  %conv = sext i16 %1 to i32, !dbg !3273
  %cmp = icmp eq i32 %conv, 1, !dbg !3276
  br i1 %cmp, label %if.then, label %if.else, !dbg !3277

if.then:                                          ; preds = %entry
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3278
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %2, i32 0, i32 18, !dbg !3280
  %3 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !3280
  store %struct.BezTriple* %3, %struct.BezTriple** %bezt, align 8, !dbg !3281
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3282
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 6, !dbg !3283
  %5 = load i32, i32* %pntsu, align 8, !dbg !3283
  store i32 %5, i32* %a, align 4, !dbg !3284
  br label %while.cond, !dbg !3285

while.cond:                                       ; preds = %if.end, %if.then
  %6 = load i32, i32* %a, align 4, !dbg !3286
  %dec = add nsw i32 %6, -1, !dbg !3286
  store i32 %dec, i32* %a, align 4, !dbg !3286
  %tobool = icmp ne i32 %6, 0, !dbg !3285
  br i1 %tobool, label %while.body, label %while.end, !dbg !3285

while.body:                                       ; preds = %while.cond
  %7 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3287
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %7, i32 0, i32 7, !dbg !3290
  %8 = load i8, i8* %f1, align 1, !dbg !3290
  %conv3 = zext i8 %8 to i32, !dbg !3287
  %and = and i32 %conv3, 1, !dbg !3291
  %tobool4 = icmp ne i32 %and, 0, !dbg !3291
  br i1 %tobool4, label %if.then12, label %lor.lhs.false, !dbg !3292

lor.lhs.false:                                    ; preds = %while.body
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3293
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %9, i32 0, i32 8, !dbg !3294
  %10 = load i8, i8* %f2, align 4, !dbg !3294
  %conv5 = zext i8 %10 to i32, !dbg !3293
  %and6 = and i32 %conv5, 1, !dbg !3295
  %tobool7 = icmp ne i32 %and6, 0, !dbg !3295
  br i1 %tobool7, label %if.then12, label %lor.lhs.false8, !dbg !3296

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3297
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %11, i32 0, i32 9, !dbg !3298
  %12 = load i8, i8* %f3, align 1, !dbg !3298
  %conv9 = zext i8 %12 to i32, !dbg !3297
  %and10 = and i32 %conv9, 1, !dbg !3299
  %tobool11 = icmp ne i32 %and10, 0, !dbg !3299
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !3300

if.then12:                                        ; preds = %lor.lhs.false8, %lor.lhs.false, %while.body
  store i32 1, i32* %retval, align 4, !dbg !3301
  br label %return, !dbg !3301

if.end:                                           ; preds = %lor.lhs.false8
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3302
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %13, i32 1, !dbg !3302
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !3302
  br label %while.cond, !dbg !3285, !llvm.loop !3303

while.end:                                        ; preds = %while.cond
  br label %if.end27, !dbg !3305

if.else:                                          ; preds = %entry
  %14 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3306
  %bp13 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 17, !dbg !3308
  %15 = load %struct.BPoint*, %struct.BPoint** %bp13, align 8, !dbg !3308
  store %struct.BPoint* %15, %struct.BPoint** %bp, align 8, !dbg !3309
  %16 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3310
  %pntsu14 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %16, i32 0, i32 6, !dbg !3311
  %17 = load i32, i32* %pntsu14, align 8, !dbg !3311
  %18 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3312
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %18, i32 0, i32 7, !dbg !3313
  %19 = load i32, i32* %pntsv, align 4, !dbg !3313
  %mul = mul nsw i32 %17, %19, !dbg !3314
  store i32 %mul, i32* %a, align 4, !dbg !3315
  br label %while.cond15, !dbg !3316

while.cond15:                                     ; preds = %if.end24, %if.else
  %20 = load i32, i32* %a, align 4, !dbg !3317
  %dec16 = add nsw i32 %20, -1, !dbg !3317
  store i32 %dec16, i32* %a, align 4, !dbg !3317
  %tobool17 = icmp ne i32 %20, 0, !dbg !3316
  br i1 %tobool17, label %while.body18, label %while.end26, !dbg !3316

while.body18:                                     ; preds = %while.cond15
  %21 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !3318
  %f119 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %21, i32 0, i32 3, !dbg !3321
  %22 = load i16, i16* %f119, align 4, !dbg !3321
  %conv20 = sext i16 %22 to i32, !dbg !3318
  %and21 = and i32 %conv20, 1, !dbg !3322
  %tobool22 = icmp ne i32 %and21, 0, !dbg !3322
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !3323

if.then23:                                        ; preds = %while.body18
  store i32 1, i32* %retval, align 4, !dbg !3324
  br label %return, !dbg !3324

if.end24:                                         ; preds = %while.body18
  %23 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !3325
  %incdec.ptr25 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %23, i32 1, !dbg !3325
  store %struct.BPoint* %incdec.ptr25, %struct.BPoint** %bp, align 8, !dbg !3325
  br label %while.cond15, !dbg !3316, !llvm.loop !3326

while.end26:                                      ; preds = %while.cond15
  br label %if.end27

if.end27:                                         ; preds = %while.end26, %while.end
  store i32 0, i32* %retval, align 4, !dbg !3328
  br label %return, !dbg !3328

return:                                           ; preds = %if.end27, %if.then23, %if.then12
  %24 = load i32, i32* %retval, align 4, !dbg !3329
  ret i32 %24, !dbg !3329
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @printknots(%struct.Object* %obedit) #0 !dbg !3330 {
entry:
  %obedit.addr = alloca %struct.Object*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %a = alloca i32, align 4
  %num = alloca i32, align 4
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !3333, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !3335, metadata !DIExpression()), !dbg !3336
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !3337
  %call = call %struct.ListBase* @object_editcurve_get(%struct.Object* %0), !dbg !3338
  store %struct.ListBase* %call, %struct.ListBase** %editnurb, align 8, !dbg !3336
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !3339, metadata !DIExpression()), !dbg !3340
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3341, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.declare(metadata i32* %num, metadata !3343, metadata !DIExpression()), !dbg !3344
  %1 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !3345
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !3347
  %2 = load i8*, i8** %first, align 8, !dbg !3347
  %3 = bitcast i8* %2 to %struct.Nurb*, !dbg !3345
  store %struct.Nurb* %3, %struct.Nurb** %nu, align 8, !dbg !3348
  br label %for.cond, !dbg !3349

for.cond:                                         ; preds = %for.inc48, %entry
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3350
  %tobool = icmp ne %struct.Nurb* %4, null, !dbg !3352
  br i1 %tobool, label %for.body, label %for.end49, !dbg !3352

for.body:                                         ; preds = %for.cond
  %5 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3353
  %call1 = call i32 @isNurbsel(%struct.Nurb* %5), !dbg !3356
  %tobool2 = icmp ne i32 %call1, 0, !dbg !3356
  br i1 %tobool2, label %land.lhs.true, label %if.end47, !dbg !3357

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3358
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 2, !dbg !3359
  %7 = load i16, i16* %type, align 8, !dbg !3359
  %conv = sext i16 %7 to i32, !dbg !3358
  %cmp = icmp eq i32 %conv, 4, !dbg !3360
  br i1 %cmp, label %if.then, label %if.end47, !dbg !3361

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3362
  %knotsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 15, !dbg !3365
  %9 = load float*, float** %knotsu, align 8, !dbg !3365
  %tobool4 = icmp ne float* %9, null, !dbg !3362
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !3366

if.then5:                                         ; preds = %if.then
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3367
  %orderu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 11, !dbg !3367
  %11 = load i16, i16* %orderu, align 8, !dbg !3367
  %conv6 = sext i16 %11 to i32, !dbg !3367
  %12 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3367
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 6, !dbg !3367
  %13 = load i32, i32* %pntsu, align 8, !dbg !3367
  %add = add nsw i32 %conv6, %13, !dbg !3367
  %14 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3367
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 13, !dbg !3367
  %15 = load i16, i16* %flagu, align 4, !dbg !3367
  %conv7 = sext i16 %15 to i32, !dbg !3367
  %and = and i32 %conv7, 1, !dbg !3367
  %tobool8 = icmp ne i32 %and, 0, !dbg !3367
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !3367

cond.true:                                        ; preds = %if.then5
  %16 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3367
  %orderu9 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %16, i32 0, i32 11, !dbg !3367
  %17 = load i16, i16* %orderu9, align 8, !dbg !3367
  %conv10 = sext i16 %17 to i32, !dbg !3367
  %sub = sub nsw i32 %conv10, 1, !dbg !3367
  br label %cond.end, !dbg !3367

cond.false:                                       ; preds = %if.then5
  br label %cond.end, !dbg !3367

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ 0, %cond.false ], !dbg !3367
  %add11 = add nsw i32 %add, %cond, !dbg !3367
  store i32 %add11, i32* %num, align 4, !dbg !3369
  store i32 0, i32* %a, align 4, !dbg !3370
  br label %for.cond12, !dbg !3372

for.cond12:                                       ; preds = %for.inc, %cond.end
  %18 = load i32, i32* %a, align 4, !dbg !3373
  %19 = load i32, i32* %num, align 4, !dbg !3375
  %cmp13 = icmp slt i32 %18, %19, !dbg !3376
  br i1 %cmp13, label %for.body15, label %for.end, !dbg !3377

for.body15:                                       ; preds = %for.cond12
  %20 = load i32, i32* %a, align 4, !dbg !3378
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3379
  %knotsu16 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 15, !dbg !3380
  %22 = load float*, float** %knotsu16, align 8, !dbg !3380
  %23 = load i32, i32* %a, align 4, !dbg !3381
  %idxprom = sext i32 %23 to i64, !dbg !3379
  %arrayidx = getelementptr inbounds float, float* %22, i64 %idxprom, !dbg !3379
  %24 = load float, float* %arrayidx, align 4, !dbg !3379
  %conv17 = fpext float %24 to double, !dbg !3379
  %call18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 %20, double %conv17), !dbg !3382
  br label %for.inc, !dbg !3382

for.inc:                                          ; preds = %for.body15
  %25 = load i32, i32* %a, align 4, !dbg !3383
  %inc = add nsw i32 %25, 1, !dbg !3383
  store i32 %inc, i32* %a, align 4, !dbg !3383
  br label %for.cond12, !dbg !3384, !llvm.loop !3385

for.end:                                          ; preds = %for.cond12
  br label %if.end, !dbg !3387

if.end:                                           ; preds = %for.end, %if.then
  %26 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3388
  %knotsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %26, i32 0, i32 16, !dbg !3390
  %27 = load float*, float** %knotsv, align 8, !dbg !3390
  %tobool19 = icmp ne float* %27, null, !dbg !3388
  br i1 %tobool19, label %if.then20, label %if.end46, !dbg !3391

if.then20:                                        ; preds = %if.end
  %28 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3392
  %orderv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 12, !dbg !3392
  %29 = load i16, i16* %orderv, align 2, !dbg !3392
  %conv21 = sext i16 %29 to i32, !dbg !3392
  %30 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3392
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %30, i32 0, i32 7, !dbg !3392
  %31 = load i32, i32* %pntsv, align 4, !dbg !3392
  %add22 = add nsw i32 %conv21, %31, !dbg !3392
  %32 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3392
  %flagv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %32, i32 0, i32 14, !dbg !3392
  %33 = load i16, i16* %flagv, align 2, !dbg !3392
  %conv23 = sext i16 %33 to i32, !dbg !3392
  %and24 = and i32 %conv23, 1, !dbg !3392
  %tobool25 = icmp ne i32 %and24, 0, !dbg !3392
  br i1 %tobool25, label %cond.true26, label %cond.false30, !dbg !3392

cond.true26:                                      ; preds = %if.then20
  %34 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3392
  %orderv27 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %34, i32 0, i32 12, !dbg !3392
  %35 = load i16, i16* %orderv27, align 2, !dbg !3392
  %conv28 = sext i16 %35 to i32, !dbg !3392
  %sub29 = sub nsw i32 %conv28, 1, !dbg !3392
  br label %cond.end31, !dbg !3392

cond.false30:                                     ; preds = %if.then20
  br label %cond.end31, !dbg !3392

cond.end31:                                       ; preds = %cond.false30, %cond.true26
  %cond32 = phi i32 [ %sub29, %cond.true26 ], [ 0, %cond.false30 ], !dbg !3392
  %add33 = add nsw i32 %add22, %cond32, !dbg !3392
  store i32 %add33, i32* %num, align 4, !dbg !3394
  store i32 0, i32* %a, align 4, !dbg !3395
  br label %for.cond34, !dbg !3397

for.cond34:                                       ; preds = %for.inc43, %cond.end31
  %36 = load i32, i32* %a, align 4, !dbg !3398
  %37 = load i32, i32* %num, align 4, !dbg !3400
  %cmp35 = icmp slt i32 %36, %37, !dbg !3401
  br i1 %cmp35, label %for.body37, label %for.end45, !dbg !3402

for.body37:                                       ; preds = %for.cond34
  %38 = load i32, i32* %a, align 4, !dbg !3403
  %39 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3404
  %knotsv38 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %39, i32 0, i32 16, !dbg !3405
  %40 = load float*, float** %knotsv38, align 8, !dbg !3405
  %41 = load i32, i32* %a, align 4, !dbg !3406
  %idxprom39 = sext i32 %41 to i64, !dbg !3404
  %arrayidx40 = getelementptr inbounds float, float* %40, i64 %idxprom39, !dbg !3404
  %42 = load float, float* %arrayidx40, align 4, !dbg !3404
  %conv41 = fpext float %42 to double, !dbg !3404
  %call42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i32 %38, double %conv41), !dbg !3407
  br label %for.inc43, !dbg !3407

for.inc43:                                        ; preds = %for.body37
  %43 = load i32, i32* %a, align 4, !dbg !3408
  %inc44 = add nsw i32 %43, 1, !dbg !3408
  store i32 %inc44, i32* %a, align 4, !dbg !3408
  br label %for.cond34, !dbg !3409, !llvm.loop !3410

for.end45:                                        ; preds = %for.cond34
  br label %if.end46, !dbg !3412

if.end46:                                         ; preds = %for.end45, %if.end
  br label %if.end47, !dbg !3413

if.end47:                                         ; preds = %if.end46, %land.lhs.true, %for.body
  br label %for.inc48, !dbg !3414

for.inc48:                                        ; preds = %if.end47
  %44 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3415
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %44, i32 0, i32 0, !dbg !3416
  %45 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !3416
  store %struct.Nurb* %45, %struct.Nurb** %nu, align 8, !dbg !3417
  br label %for.cond, !dbg !3418, !llvm.loop !3419

for.end49:                                        ; preds = %for.cond
  ret void, !dbg !3421
}

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_curve_updateAnimPaths(%struct.Curve* %cu) #0 !dbg !3422 {
entry:
  %retval = alloca i32, align 4
  %cu.addr = alloca %struct.Curve*, align 8
  %adt = alloca %struct.AnimData*, align 8
  %editnurb = alloca %struct.EditNurb*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !3425, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !3427, metadata !DIExpression()), !dbg !3430
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !3431
  %id = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 0, !dbg !3432
  %call = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %id), !dbg !3433
  store %struct.AnimData* %call, %struct.AnimData** %adt, align 8, !dbg !3430
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb, metadata !3434, metadata !DIExpression()), !dbg !3435
  %1 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !3436
  %editnurb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %1, i32 0, i32 4, !dbg !3437
  %2 = load %struct.EditNurb*, %struct.EditNurb** %editnurb1, align 8, !dbg !3437
  store %struct.EditNurb* %2, %struct.EditNurb** %editnurb, align 8, !dbg !3435
  %3 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !3438
  %keyindex = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %3, i32 0, i32 1, !dbg !3440
  %4 = load %struct.GHash*, %struct.GHash** %keyindex, align 8, !dbg !3440
  %tobool = icmp ne %struct.GHash* %4, null, !dbg !3438
  br i1 %tobool, label %if.end, label %if.then, !dbg !3441

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3442
  br label %return, !dbg !3442

if.end:                                           ; preds = %entry
  %5 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !3443
  %call2 = call zeroext i8 @curve_is_animated(%struct.Curve* %5), !dbg !3445
  %tobool3 = icmp ne i8 %call2, 0, !dbg !3445
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !3446

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !3447
  br label %return, !dbg !3447

if.end5:                                          ; preds = %if.end
  %6 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3448
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %6, i32 0, i32 0, !dbg !3450
  %7 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !3450
  %tobool6 = icmp ne %struct.bAction* %7, null, !dbg !3448
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !3451

if.then7:                                         ; preds = %if.end5
  %8 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !3452
  %9 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3453
  %action8 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %9, i32 0, i32 0, !dbg !3454
  %10 = load %struct.bAction*, %struct.bAction** %action8, align 8, !dbg !3454
  %curves = getelementptr inbounds %struct.bAction, %struct.bAction* %10, i32 0, i32 1, !dbg !3455
  call void @curve_rename_fcurves(%struct.Curve* %8, %struct.ListBase* %curves), !dbg !3456
  br label %if.end9, !dbg !3456

if.end9:                                          ; preds = %if.then7, %if.end5
  %11 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !3457
  %12 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3458
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %12, i32 0, i32 5, !dbg !3459
  call void @curve_rename_fcurves(%struct.Curve* %11, %struct.ListBase* %drivers), !dbg !3460
  store i32 1, i32* %retval, align 4, !dbg !3461
  br label %return, !dbg !3461

return:                                           ; preds = %if.end9, %if.then4, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !3462
  ret i32 %13, !dbg !3462
}

declare dso_local %struct.AnimData* @BKE_animdata_from_id(%struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @curve_is_animated(%struct.Curve* %cu) #0 !dbg !3463 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %ad = alloca %struct.AnimData*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !3466, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.declare(metadata %struct.AnimData** %ad, metadata !3468, metadata !DIExpression()), !dbg !3469
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !3470
  %id = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 0, !dbg !3471
  %call = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %id), !dbg !3472
  store %struct.AnimData* %call, %struct.AnimData** %ad, align 8, !dbg !3469
  %1 = load %struct.AnimData*, %struct.AnimData** %ad, align 8, !dbg !3473
  %tobool = icmp ne %struct.AnimData* %1, null, !dbg !3473
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3474

land.rhs:                                         ; preds = %entry
  %2 = load %struct.AnimData*, %struct.AnimData** %ad, align 8, !dbg !3475
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %2, i32 0, i32 0, !dbg !3476
  %3 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !3476
  %tobool1 = icmp ne %struct.bAction* %3, null, !dbg !3475
  br i1 %tobool1, label %lor.end, label %lor.rhs, !dbg !3477

lor.rhs:                                          ; preds = %land.rhs
  %4 = load %struct.AnimData*, %struct.AnimData** %ad, align 8, !dbg !3478
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %4, i32 0, i32 5, !dbg !3479
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %drivers, i32 0, i32 0, !dbg !3480
  %5 = load i8*, i8** %first, align 8, !dbg !3480
  %tobool2 = icmp ne i8* %5, null, !dbg !3477
  br label %lor.end, !dbg !3477

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %6 = phi i1 [ true, %land.rhs ], [ %tobool2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %entry
  %7 = phi i1 [ false, %entry ], [ %6, %lor.end ], !dbg !3481
  %land.ext = zext i1 %7 to i32, !dbg !3474
  %conv = trunc i32 %land.ext to i8, !dbg !3473
  ret i8 %conv, !dbg !3482
}

; Function Attrs: noinline nounwind uwtable
define internal void @curve_rename_fcurves(%struct.Curve* %cu, %struct.ListBase* %orig_curves) #0 !dbg !3483 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %orig_curves.addr = alloca %struct.ListBase*, align 8
  %nu_index = alloca i32, align 4
  %a = alloca i32, align 4
  %pt_index = alloca i32, align 4
  %editnurb = alloca %struct.EditNurb*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %keyIndex = alloca %struct.CVKeyIndex*, align 8
  %rna_path = alloca [64 x i8], align 16
  %orig_rna_path = alloca [64 x i8], align 16
  %adt = alloca %struct.AnimData*, align 8
  %curves = alloca %struct.ListBase, align 8
  %fcu = alloca %struct.FCurve*, align 8
  %next = alloca %struct.FCurve*, align 8
  %bezt2 = alloca %struct.BezTriple*, align 8
  %handle_path = alloca [64 x i8], align 16
  %orig_handle_path = alloca [64 x i8], align 16
  %bp = alloca %struct.BPoint*, align 8
  %ch = alloca i8*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !3486, metadata !DIExpression()), !dbg !3487
  store %struct.ListBase* %orig_curves, %struct.ListBase** %orig_curves.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %orig_curves.addr, metadata !3488, metadata !DIExpression()), !dbg !3489
  call void @llvm.dbg.declare(metadata i32* %nu_index, metadata !3490, metadata !DIExpression()), !dbg !3491
  store i32 0, i32* %nu_index, align 4, !dbg !3491
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3492, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.declare(metadata i32* %pt_index, metadata !3494, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb, metadata !3496, metadata !DIExpression()), !dbg !3497
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !3498
  %editnurb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 4, !dbg !3499
  %1 = load %struct.EditNurb*, %struct.EditNurb** %editnurb1, align 8, !dbg !3499
  store %struct.EditNurb* %1, %struct.EditNurb** %editnurb, align 8, !dbg !3497
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !3500, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.declare(metadata %struct.CVKeyIndex** %keyIndex, metadata !3502, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.declare(metadata [64 x i8]* %rna_path, metadata !3515, metadata !DIExpression()), !dbg !3516
  call void @llvm.dbg.declare(metadata [64 x i8]* %orig_rna_path, metadata !3517, metadata !DIExpression()), !dbg !3518
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !3519, metadata !DIExpression()), !dbg !3520
  %2 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !3521
  %id = getelementptr inbounds %struct.Curve, %struct.Curve* %2, i32 0, i32 0, !dbg !3522
  %call = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %id), !dbg !3523
  store %struct.AnimData* %call, %struct.AnimData** %adt, align 8, !dbg !3520
  call void @llvm.dbg.declare(metadata %struct.ListBase* %curves, metadata !3524, metadata !DIExpression()), !dbg !3525
  %3 = bitcast %struct.ListBase* %curves to i8*, !dbg !3525
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false), !dbg !3525
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !3526, metadata !DIExpression()), !dbg !3588
  call void @llvm.dbg.declare(metadata %struct.FCurve** %next, metadata !3589, metadata !DIExpression()), !dbg !3590
  %4 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !3591
  %nurbs = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %4, i32 0, i32 0, !dbg !3593
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurbs, i32 0, i32 0, !dbg !3594
  %5 = load i8*, i8** %first, align 8, !dbg !3594
  %6 = bitcast i8* %5 to %struct.Nurb*, !dbg !3591
  store %struct.Nurb* %6, %struct.Nurb** %nu, align 8, !dbg !3595
  store i32 0, i32* %nu_index, align 4, !dbg !3596
  br label %for.cond, !dbg !3597

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3598
  %cmp = icmp ne %struct.Nurb* %7, null, !dbg !3600
  br i1 %cmp, label %for.body, label %for.end, !dbg !3601

for.body:                                         ; preds = %for.cond
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3602
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 18, !dbg !3605
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3605
  %tobool = icmp ne %struct.BezTriple* %9, null, !dbg !3602
  br i1 %tobool, label %if.then, label %if.else, !dbg !3606

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt2, metadata !3607, metadata !DIExpression()), !dbg !3609
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3610
  %bezt3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 18, !dbg !3611
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt3, align 8, !dbg !3611
  store %struct.BezTriple* %11, %struct.BezTriple** %bezt2, align 8, !dbg !3609
  %12 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3612
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 6, !dbg !3613
  %13 = load i32, i32* %pntsu, align 8, !dbg !3613
  store i32 %13, i32* %a, align 4, !dbg !3614
  store i32 0, i32* %pt_index, align 4, !dbg !3615
  br label %while.cond, !dbg !3616

while.cond:                                       ; preds = %if.end35, %if.then
  %14 = load i32, i32* %a, align 4, !dbg !3617
  %dec = add nsw i32 %14, -1, !dbg !3617
  store i32 %dec, i32* %a, align 4, !dbg !3617
  %tobool4 = icmp ne i32 %14, 0, !dbg !3616
  br i1 %tobool4, label %while.body, label %while.end, !dbg !3616

while.body:                                       ; preds = %while.cond
  %15 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !3618
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !3620
  %17 = bitcast %struct.BezTriple* %16 to i8*, !dbg !3620
  %call5 = call %struct.CVKeyIndex* @getCVKeyIndex(%struct.EditNurb* %15, i8* %17), !dbg !3621
  store %struct.CVKeyIndex* %call5, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !3622
  %18 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !3623
  %tobool6 = icmp ne %struct.CVKeyIndex* %18, null, !dbg !3623
  br i1 %tobool6, label %if.then7, label %if.end35, !dbg !3625

if.then7:                                         ; preds = %while.body
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %rna_path, i64 0, i64 0, !dbg !3626
  %19 = load i32, i32* %nu_index, align 4, !dbg !3628
  %20 = load i32, i32* %pt_index, align 4, !dbg !3629
  %call8 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay, i64 64, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.180, i64 0, i64 0), i32 %19, i32 %20), !dbg !3630
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %orig_rna_path, i64 0, i64 0, !dbg !3631
  %21 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !3632
  %nu_index10 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %21, i32 0, i32 2, !dbg !3633
  %22 = load i32, i32* %nu_index10, align 4, !dbg !3633
  %23 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !3634
  %pt_index11 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %23, i32 0, i32 3, !dbg !3635
  %24 = load i32, i32* %pt_index11, align 8, !dbg !3635
  %call12 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay9, i64 64, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.180, i64 0, i64 0), i32 %22, i32 %24), !dbg !3636
  %25 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !3637
  %switched = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %25, i32 0, i32 5, !dbg !3639
  %26 = load i8, i8* %switched, align 8, !dbg !3639
  %tobool13 = icmp ne i8 %26, 0, !dbg !3637
  br i1 %tobool13, label %if.then14, label %if.end, !dbg !3640

if.then14:                                        ; preds = %if.then7
  call void @llvm.dbg.declare(metadata [64 x i8]* %handle_path, metadata !3641, metadata !DIExpression()), !dbg !3643
  call void @llvm.dbg.declare(metadata [64 x i8]* %orig_handle_path, metadata !3644, metadata !DIExpression()), !dbg !3645
  %arraydecay15 = getelementptr inbounds [64 x i8], [64 x i8]* %orig_handle_path, i64 0, i64 0, !dbg !3646
  %arraydecay16 = getelementptr inbounds [64 x i8], [64 x i8]* %orig_rna_path, i64 0, i64 0, !dbg !3647
  %call17 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay15, i64 64, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.181, i64 0, i64 0), i8* %arraydecay16), !dbg !3648
  %arraydecay18 = getelementptr inbounds [64 x i8], [64 x i8]* %handle_path, i64 0, i64 0, !dbg !3649
  %arraydecay19 = getelementptr inbounds [64 x i8], [64 x i8]* %rna_path, i64 0, i64 0, !dbg !3650
  %call20 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay18, i64 64, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.182, i64 0, i64 0), i8* %arraydecay19), !dbg !3651
  %27 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3652
  %arraydecay21 = getelementptr inbounds [64 x i8], [64 x i8]* %orig_handle_path, i64 0, i64 0, !dbg !3653
  %arraydecay22 = getelementptr inbounds [64 x i8], [64 x i8]* %handle_path, i64 0, i64 0, !dbg !3654
  %28 = load %struct.ListBase*, %struct.ListBase** %orig_curves.addr, align 8, !dbg !3655
  call void @fcurve_path_rename(%struct.AnimData* %27, i8* %arraydecay21, i8* %arraydecay22, %struct.ListBase* %28, %struct.ListBase* %curves), !dbg !3656
  %arraydecay23 = getelementptr inbounds [64 x i8], [64 x i8]* %orig_handle_path, i64 0, i64 0, !dbg !3657
  %arraydecay24 = getelementptr inbounds [64 x i8], [64 x i8]* %orig_rna_path, i64 0, i64 0, !dbg !3658
  %call25 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay23, i64 64, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.182, i64 0, i64 0), i8* %arraydecay24), !dbg !3659
  %arraydecay26 = getelementptr inbounds [64 x i8], [64 x i8]* %handle_path, i64 0, i64 0, !dbg !3660
  %arraydecay27 = getelementptr inbounds [64 x i8], [64 x i8]* %rna_path, i64 0, i64 0, !dbg !3661
  %call28 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay26, i64 64, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.181, i64 0, i64 0), i8* %arraydecay27), !dbg !3662
  %29 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3663
  %arraydecay29 = getelementptr inbounds [64 x i8], [64 x i8]* %orig_handle_path, i64 0, i64 0, !dbg !3664
  %arraydecay30 = getelementptr inbounds [64 x i8], [64 x i8]* %handle_path, i64 0, i64 0, !dbg !3665
  %30 = load %struct.ListBase*, %struct.ListBase** %orig_curves.addr, align 8, !dbg !3666
  call void @fcurve_path_rename(%struct.AnimData* %29, i8* %arraydecay29, i8* %arraydecay30, %struct.ListBase* %30, %struct.ListBase* %curves), !dbg !3667
  br label %if.end, !dbg !3668

if.end:                                           ; preds = %if.then14, %if.then7
  %31 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3669
  %arraydecay31 = getelementptr inbounds [64 x i8], [64 x i8]* %orig_rna_path, i64 0, i64 0, !dbg !3670
  %arraydecay32 = getelementptr inbounds [64 x i8], [64 x i8]* %rna_path, i64 0, i64 0, !dbg !3671
  %32 = load %struct.ListBase*, %struct.ListBase** %orig_curves.addr, align 8, !dbg !3672
  call void @fcurve_path_rename(%struct.AnimData* %31, i8* %arraydecay31, i8* %arraydecay32, %struct.ListBase* %32, %struct.ListBase* %curves), !dbg !3673
  %33 = load i32, i32* %nu_index, align 4, !dbg !3674
  %34 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !3675
  %nu_index33 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %34, i32 0, i32 2, !dbg !3676
  store i32 %33, i32* %nu_index33, align 4, !dbg !3677
  %35 = load i32, i32* %pt_index, align 4, !dbg !3678
  %36 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !3679
  %pt_index34 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %36, i32 0, i32 3, !dbg !3680
  store i32 %35, i32* %pt_index34, align 8, !dbg !3681
  br label %if.end35, !dbg !3682

if.end35:                                         ; preds = %if.end, %while.body
  %37 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !3683
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %37, i32 1, !dbg !3683
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt2, align 8, !dbg !3683
  %38 = load i32, i32* %pt_index, align 4, !dbg !3684
  %inc = add nsw i32 %38, 1, !dbg !3684
  store i32 %inc, i32* %pt_index, align 4, !dbg !3684
  br label %while.cond, !dbg !3616, !llvm.loop !3685

while.end:                                        ; preds = %while.cond
  br label %if.end59, !dbg !3687

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !3688, metadata !DIExpression()), !dbg !3690
  %39 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3691
  %bp36 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %39, i32 0, i32 17, !dbg !3692
  %40 = load %struct.BPoint*, %struct.BPoint** %bp36, align 8, !dbg !3692
  store %struct.BPoint* %40, %struct.BPoint** %bp, align 8, !dbg !3690
  %41 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3693
  %pntsu37 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %41, i32 0, i32 6, !dbg !3694
  %42 = load i32, i32* %pntsu37, align 8, !dbg !3694
  %43 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3695
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %43, i32 0, i32 7, !dbg !3696
  %44 = load i32, i32* %pntsv, align 4, !dbg !3696
  %mul = mul nsw i32 %42, %44, !dbg !3697
  store i32 %mul, i32* %a, align 4, !dbg !3698
  store i32 0, i32* %pt_index, align 4, !dbg !3699
  br label %while.cond38, !dbg !3700

while.cond38:                                     ; preds = %if.end55, %if.else
  %45 = load i32, i32* %a, align 4, !dbg !3701
  %dec39 = add nsw i32 %45, -1, !dbg !3701
  store i32 %dec39, i32* %a, align 4, !dbg !3701
  %tobool40 = icmp ne i32 %45, 0, !dbg !3700
  br i1 %tobool40, label %while.body41, label %while.end58, !dbg !3700

while.body41:                                     ; preds = %while.cond38
  %46 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !3702
  %47 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !3704
  %48 = bitcast %struct.BPoint* %47 to i8*, !dbg !3704
  %call42 = call %struct.CVKeyIndex* @getCVKeyIndex(%struct.EditNurb* %46, i8* %48), !dbg !3705
  store %struct.CVKeyIndex* %call42, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !3706
  %49 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !3707
  %tobool43 = icmp ne %struct.CVKeyIndex* %49, null, !dbg !3707
  br i1 %tobool43, label %if.then44, label %if.end55, !dbg !3709

if.then44:                                        ; preds = %while.body41
  %arraydecay45 = getelementptr inbounds [64 x i8], [64 x i8]* %rna_path, i64 0, i64 0, !dbg !3710
  %50 = load i32, i32* %nu_index, align 4, !dbg !3712
  %51 = load i32, i32* %pt_index, align 4, !dbg !3713
  %call46 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay45, i64 64, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.183, i64 0, i64 0), i32 %50, i32 %51), !dbg !3714
  %arraydecay47 = getelementptr inbounds [64 x i8], [64 x i8]* %orig_rna_path, i64 0, i64 0, !dbg !3715
  %52 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !3716
  %nu_index48 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %52, i32 0, i32 2, !dbg !3717
  %53 = load i32, i32* %nu_index48, align 4, !dbg !3717
  %54 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !3718
  %pt_index49 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %54, i32 0, i32 3, !dbg !3719
  %55 = load i32, i32* %pt_index49, align 8, !dbg !3719
  %call50 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay47, i64 64, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.183, i64 0, i64 0), i32 %53, i32 %55), !dbg !3720
  %56 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3721
  %arraydecay51 = getelementptr inbounds [64 x i8], [64 x i8]* %orig_rna_path, i64 0, i64 0, !dbg !3722
  %arraydecay52 = getelementptr inbounds [64 x i8], [64 x i8]* %rna_path, i64 0, i64 0, !dbg !3723
  %57 = load %struct.ListBase*, %struct.ListBase** %orig_curves.addr, align 8, !dbg !3724
  call void @fcurve_path_rename(%struct.AnimData* %56, i8* %arraydecay51, i8* %arraydecay52, %struct.ListBase* %57, %struct.ListBase* %curves), !dbg !3725
  %58 = load i32, i32* %nu_index, align 4, !dbg !3726
  %59 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !3727
  %nu_index53 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %59, i32 0, i32 2, !dbg !3728
  store i32 %58, i32* %nu_index53, align 4, !dbg !3729
  %60 = load i32, i32* %pt_index, align 4, !dbg !3730
  %61 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !3731
  %pt_index54 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %61, i32 0, i32 3, !dbg !3732
  store i32 %60, i32* %pt_index54, align 8, !dbg !3733
  br label %if.end55, !dbg !3734

if.end55:                                         ; preds = %if.then44, %while.body41
  %62 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !3735
  %incdec.ptr56 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %62, i32 1, !dbg !3735
  store %struct.BPoint* %incdec.ptr56, %struct.BPoint** %bp, align 8, !dbg !3735
  %63 = load i32, i32* %pt_index, align 4, !dbg !3736
  %inc57 = add nsw i32 %63, 1, !dbg !3736
  store i32 %inc57, i32* %pt_index, align 4, !dbg !3736
  br label %while.cond38, !dbg !3700, !llvm.loop !3737

while.end58:                                      ; preds = %while.cond38
  br label %if.end59

if.end59:                                         ; preds = %while.end58, %while.end
  br label %for.inc, !dbg !3739

for.inc:                                          ; preds = %if.end59
  %64 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3740
  %next60 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %64, i32 0, i32 0, !dbg !3741
  %65 = load %struct.Nurb*, %struct.Nurb** %next60, align 8, !dbg !3741
  store %struct.Nurb* %65, %struct.Nurb** %nu, align 8, !dbg !3742
  %66 = load i32, i32* %nu_index, align 4, !dbg !3743
  %inc61 = add nsw i32 %66, 1, !dbg !3743
  store i32 %inc61, i32* %nu_index, align 4, !dbg !3743
  br label %for.cond, !dbg !3744, !llvm.loop !3745

for.end:                                          ; preds = %for.cond
  %67 = load %struct.ListBase*, %struct.ListBase** %orig_curves.addr, align 8, !dbg !3747
  %first62 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %67, i32 0, i32 0, !dbg !3749
  %68 = load i8*, i8** %first62, align 8, !dbg !3749
  %69 = bitcast i8* %68 to %struct.FCurve*, !dbg !3747
  store %struct.FCurve* %69, %struct.FCurve** %fcu, align 8, !dbg !3750
  br label %for.cond63, !dbg !3751

for.cond63:                                       ; preds = %for.inc81, %for.end
  %70 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3752
  %tobool64 = icmp ne %struct.FCurve* %70, null, !dbg !3754
  br i1 %tobool64, label %for.body65, label %for.end82, !dbg !3754

for.body65:                                       ; preds = %for.cond63
  %71 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3755
  %next66 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %71, i32 0, i32 0, !dbg !3757
  %72 = load %struct.FCurve*, %struct.FCurve** %next66, align 8, !dbg !3757
  store %struct.FCurve* %72, %struct.FCurve** %next, align 8, !dbg !3758
  %73 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3759
  %rna_path67 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %73, i32 0, i32 12, !dbg !3761
  %74 = load i8*, i8** %rna_path67, align 8, !dbg !3761
  %call68 = call i32 @strncmp(i8* %74, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.184, i64 0, i64 0), i64 7) #7, !dbg !3762
  %tobool69 = icmp ne i32 %call68, 0, !dbg !3762
  br i1 %tobool69, label %if.end80, label %if.then70, !dbg !3763

if.then70:                                        ; preds = %for.body65
  call void @llvm.dbg.declare(metadata i8** %ch, metadata !3764, metadata !DIExpression()), !dbg !3766
  %75 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3767
  %rna_path71 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %75, i32 0, i32 12, !dbg !3768
  %76 = load i8*, i8** %rna_path71, align 8, !dbg !3768
  %call72 = call i8* @strchr(i8* %76, i32 46) #7, !dbg !3769
  store i8* %call72, i8** %ch, align 8, !dbg !3766
  %77 = load i8*, i8** %ch, align 8, !dbg !3770
  %tobool73 = icmp ne i8* %77, null, !dbg !3770
  br i1 %tobool73, label %land.lhs.true, label %if.end79, !dbg !3772

land.lhs.true:                                    ; preds = %if.then70
  %78 = load i8*, i8** %ch, align 8, !dbg !3773
  %call74 = call i32 @strncmp(i8* %78, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.185, i64 0, i64 0), i64 14) #7, !dbg !3774
  %tobool75 = icmp ne i32 %call74, 0, !dbg !3774
  br i1 %tobool75, label %lor.lhs.false, label %if.then78, !dbg !3775

lor.lhs.false:                                    ; preds = %land.lhs.true
  %79 = load i8*, i8** %ch, align 8, !dbg !3776
  %call76 = call i32 @strncmp(i8* %79, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.186, i64 0, i64 0), i64 7) #7, !dbg !3777
  %tobool77 = icmp ne i32 %call76, 0, !dbg !3777
  br i1 %tobool77, label %if.end79, label %if.then78, !dbg !3778

if.then78:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %80 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3779
  %81 = load %struct.ListBase*, %struct.ListBase** %orig_curves.addr, align 8, !dbg !3780
  %82 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3781
  call void @fcurve_remove(%struct.AnimData* %80, %struct.ListBase* %81, %struct.FCurve* %82), !dbg !3782
  br label %if.end79, !dbg !3782

if.end79:                                         ; preds = %if.then78, %lor.lhs.false, %if.then70
  br label %if.end80, !dbg !3783

if.end80:                                         ; preds = %if.end79, %for.body65
  br label %for.inc81, !dbg !3784

for.inc81:                                        ; preds = %if.end80
  %83 = load %struct.FCurve*, %struct.FCurve** %next, align 8, !dbg !3785
  store %struct.FCurve* %83, %struct.FCurve** %fcu, align 8, !dbg !3786
  br label %for.cond63, !dbg !3787, !llvm.loop !3788

for.end82:                                        ; preds = %for.cond63
  %84 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !3790
  %nurbs83 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %84, i32 0, i32 0, !dbg !3792
  %first84 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurbs83, i32 0, i32 0, !dbg !3793
  %85 = load i8*, i8** %first84, align 8, !dbg !3793
  %86 = bitcast i8* %85 to %struct.Nurb*, !dbg !3790
  store %struct.Nurb* %86, %struct.Nurb** %nu, align 8, !dbg !3794
  store i32 0, i32* %nu_index, align 4, !dbg !3795
  br label %for.cond85, !dbg !3796

for.cond85:                                       ; preds = %for.inc112, %for.end82
  %87 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3797
  %cmp86 = icmp ne %struct.Nurb* %87, null, !dbg !3799
  br i1 %cmp86, label %for.body87, label %for.end115, !dbg !3800

for.body87:                                       ; preds = %for.cond85
  store %struct.CVKeyIndex* null, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !3801
  %88 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3803
  %pntsu88 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %88, i32 0, i32 6, !dbg !3805
  %89 = load i32, i32* %pntsu88, align 8, !dbg !3805
  %tobool89 = icmp ne i32 %89, 0, !dbg !3803
  br i1 %tobool89, label %if.then90, label %if.end101, !dbg !3806

if.then90:                                        ; preds = %for.body87
  %90 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3807
  %bezt91 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %90, i32 0, i32 18, !dbg !3810
  %91 = load %struct.BezTriple*, %struct.BezTriple** %bezt91, align 8, !dbg !3810
  %tobool92 = icmp ne %struct.BezTriple* %91, null, !dbg !3807
  br i1 %tobool92, label %if.then93, label %if.else96, !dbg !3811

if.then93:                                        ; preds = %if.then90
  %92 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !3812
  %93 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3813
  %bezt94 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %93, i32 0, i32 18, !dbg !3814
  %94 = load %struct.BezTriple*, %struct.BezTriple** %bezt94, align 8, !dbg !3814
  %arrayidx = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %94, i64 0, !dbg !3813
  %95 = bitcast %struct.BezTriple* %arrayidx to i8*, !dbg !3815
  %call95 = call %struct.CVKeyIndex* @getCVKeyIndex(%struct.EditNurb* %92, i8* %95), !dbg !3816
  store %struct.CVKeyIndex* %call95, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !3817
  br label %if.end100, !dbg !3818

if.else96:                                        ; preds = %if.then90
  %96 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !3819
  %97 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3820
  %bp97 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %97, i32 0, i32 17, !dbg !3821
  %98 = load %struct.BPoint*, %struct.BPoint** %bp97, align 8, !dbg !3821
  %arrayidx98 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %98, i64 0, !dbg !3820
  %99 = bitcast %struct.BPoint* %arrayidx98 to i8*, !dbg !3822
  %call99 = call %struct.CVKeyIndex* @getCVKeyIndex(%struct.EditNurb* %96, i8* %99), !dbg !3823
  store %struct.CVKeyIndex* %call99, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !3824
  br label %if.end100

if.end100:                                        ; preds = %if.else96, %if.then93
  br label %if.end101, !dbg !3825

if.end101:                                        ; preds = %if.end100, %for.body87
  %100 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !3826
  %tobool102 = icmp ne %struct.CVKeyIndex* %100, null, !dbg !3826
  br i1 %tobool102, label %if.then103, label %if.end111, !dbg !3828

if.then103:                                       ; preds = %if.end101
  %arraydecay104 = getelementptr inbounds [64 x i8], [64 x i8]* %rna_path, i64 0, i64 0, !dbg !3829
  %101 = load i32, i32* %nu_index, align 4, !dbg !3831
  %call105 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay104, i64 64, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.187, i64 0, i64 0), i32 %101), !dbg !3832
  %arraydecay106 = getelementptr inbounds [64 x i8], [64 x i8]* %orig_rna_path, i64 0, i64 0, !dbg !3833
  %102 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !3834
  %nu_index107 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %102, i32 0, i32 2, !dbg !3835
  %103 = load i32, i32* %nu_index107, align 4, !dbg !3835
  %call108 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay106, i64 64, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.187, i64 0, i64 0), i32 %103), !dbg !3836
  %104 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3837
  %arraydecay109 = getelementptr inbounds [64 x i8], [64 x i8]* %orig_rna_path, i64 0, i64 0, !dbg !3838
  %arraydecay110 = getelementptr inbounds [64 x i8], [64 x i8]* %rna_path, i64 0, i64 0, !dbg !3839
  %105 = load %struct.ListBase*, %struct.ListBase** %orig_curves.addr, align 8, !dbg !3840
  call void @fcurve_path_rename(%struct.AnimData* %104, i8* %arraydecay109, i8* %arraydecay110, %struct.ListBase* %105, %struct.ListBase* %curves), !dbg !3841
  br label %if.end111, !dbg !3842

if.end111:                                        ; preds = %if.then103, %if.end101
  br label %for.inc112, !dbg !3843

for.inc112:                                       ; preds = %if.end111
  %106 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3844
  %next113 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %106, i32 0, i32 0, !dbg !3845
  %107 = load %struct.Nurb*, %struct.Nurb** %next113, align 8, !dbg !3845
  store %struct.Nurb* %107, %struct.Nurb** %nu, align 8, !dbg !3846
  %108 = load i32, i32* %nu_index, align 4, !dbg !3847
  %inc114 = add nsw i32 %108, 1, !dbg !3847
  store i32 %inc114, i32* %nu_index, align 4, !dbg !3847
  br label %for.cond85, !dbg !3848, !llvm.loop !3849

for.end115:                                       ; preds = %for.cond85
  %109 = load %struct.ListBase*, %struct.ListBase** %orig_curves.addr, align 8, !dbg !3851
  %first116 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %109, i32 0, i32 0, !dbg !3853
  %110 = load i8*, i8** %first116, align 8, !dbg !3853
  %111 = bitcast i8* %110 to %struct.FCurve*, !dbg !3851
  store %struct.FCurve* %111, %struct.FCurve** %fcu, align 8, !dbg !3854
  br label %for.cond117, !dbg !3855

for.cond117:                                      ; preds = %for.inc127, %for.end115
  %112 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3856
  %tobool118 = icmp ne %struct.FCurve* %112, null, !dbg !3858
  br i1 %tobool118, label %for.body119, label %for.end128, !dbg !3858

for.body119:                                      ; preds = %for.cond117
  %113 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3859
  %next120 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %113, i32 0, i32 0, !dbg !3861
  %114 = load %struct.FCurve*, %struct.FCurve** %next120, align 8, !dbg !3861
  store %struct.FCurve* %114, %struct.FCurve** %next, align 8, !dbg !3862
  %115 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3863
  %rna_path121 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %115, i32 0, i32 12, !dbg !3865
  %116 = load i8*, i8** %rna_path121, align 8, !dbg !3865
  %call122 = call i32 @strncmp(i8* %116, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.184, i64 0, i64 0), i64 7) #7, !dbg !3866
  %tobool123 = icmp ne i32 %call122, 0, !dbg !3866
  br i1 %tobool123, label %if.else125, label %if.then124, !dbg !3867

if.then124:                                       ; preds = %for.body119
  %117 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !3868
  %118 = load %struct.ListBase*, %struct.ListBase** %orig_curves.addr, align 8, !dbg !3869
  %119 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3870
  call void @fcurve_remove(%struct.AnimData* %117, %struct.ListBase* %118, %struct.FCurve* %119), !dbg !3871
  br label %if.end126, !dbg !3871

if.else125:                                       ; preds = %for.body119
  %120 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3872
  %121 = bitcast %struct.FCurve* %120 to i8*, !dbg !3872
  call void @BLI_addtail(%struct.ListBase* %curves, i8* %121), !dbg !3873
  br label %if.end126

if.end126:                                        ; preds = %if.else125, %if.then124
  br label %for.inc127, !dbg !3874

for.inc127:                                       ; preds = %if.end126
  %122 = load %struct.FCurve*, %struct.FCurve** %next, align 8, !dbg !3875
  store %struct.FCurve* %122, %struct.FCurve** %fcu, align 8, !dbg !3876
  br label %for.cond117, !dbg !3877, !llvm.loop !3878

for.end128:                                       ; preds = %for.cond117
  %123 = load %struct.ListBase*, %struct.ListBase** %orig_curves.addr, align 8, !dbg !3880
  %124 = bitcast %struct.ListBase* %123 to i8*, !dbg !3881
  %125 = bitcast %struct.ListBase* %curves to i8*, !dbg !3881
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 16, i1 false), !dbg !3881
  ret void, !dbg !3882
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @load_editNurb(%struct.Object* %obedit) #0 !dbg !3883 {
entry:
  %obedit.addr = alloca %struct.Object*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %cu = alloca %struct.Curve*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %newnu = alloca %struct.Nurb*, align 8
  %newnurb = alloca %struct.ListBase, align 8
  %oldnurb = alloca %struct.ListBase, align 8
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !3884, metadata !DIExpression()), !dbg !3885
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !3886, metadata !DIExpression()), !dbg !3887
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !3888
  %call = call %struct.ListBase* @object_editcurve_get(%struct.Object* %0), !dbg !3889
  store %struct.ListBase* %call, %struct.ListBase** %editnurb, align 8, !dbg !3887
  %1 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !3890
  %cmp = icmp eq %struct.Object* %1, null, !dbg !3892
  br i1 %cmp, label %if.then, label %if.end, !dbg !3893

if.then:                                          ; preds = %entry
  br label %if.end19, !dbg !3894

if.end:                                           ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !3895
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !3895
  %3 = load i16, i16* %type, align 8, !dbg !3895
  %conv = sext i16 %3 to i32, !dbg !3895
  %cmp1 = icmp eq i32 %conv, 2, !dbg !3895
  br i1 %cmp1, label %if.then7, label %lor.lhs.false, !dbg !3895

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !3895
  %type3 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 3, !dbg !3895
  %5 = load i16, i16* %type3, align 8, !dbg !3895
  %conv4 = sext i16 %5 to i32, !dbg !3895
  %cmp5 = icmp eq i32 %conv4, 3, !dbg !3895
  br i1 %cmp5, label %if.then7, label %if.end19, !dbg !3897

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !3898, metadata !DIExpression()), !dbg !3900
  %6 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !3901
  %data = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 19, !dbg !3902
  %7 = load i8*, i8** %data, align 8, !dbg !3902
  %8 = bitcast i8* %7 to %struct.Curve*, !dbg !3901
  store %struct.Curve* %8, %struct.Curve** %cu, align 8, !dbg !3900
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !3903, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.declare(metadata %struct.Nurb** %newnu, metadata !3905, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.declare(metadata %struct.ListBase* %newnurb, metadata !3907, metadata !DIExpression()), !dbg !3908
  %9 = bitcast %struct.ListBase* %newnurb to i8*, !dbg !3908
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false), !dbg !3908
  call void @llvm.dbg.declare(metadata %struct.ListBase* %oldnurb, metadata !3909, metadata !DIExpression()), !dbg !3910
  %10 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3911
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %10, i32 0, i32 3, !dbg !3912
  %11 = bitcast %struct.ListBase* %oldnurb to i8*, !dbg !3912
  %12 = bitcast %struct.ListBase* %nurb to i8*, !dbg !3912
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false), !dbg !3912
  %13 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !3913
  call void @remap_hooks_and_vertex_parents(%struct.Object* %13), !dbg !3914
  %14 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !3915
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %14, i32 0, i32 0, !dbg !3917
  %15 = load i8*, i8** %first, align 8, !dbg !3917
  %16 = bitcast i8* %15 to %struct.Nurb*, !dbg !3915
  store %struct.Nurb* %16, %struct.Nurb** %nu, align 8, !dbg !3918
  br label %for.cond, !dbg !3919

for.cond:                                         ; preds = %for.inc, %if.then7
  %17 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3920
  %tobool = icmp ne %struct.Nurb* %17, null, !dbg !3922
  br i1 %tobool, label %for.body, label %for.end, !dbg !3922

for.body:                                         ; preds = %for.cond
  %18 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3923
  %call8 = call %struct.Nurb* @BKE_nurb_duplicate(%struct.Nurb* %18), !dbg !3925
  store %struct.Nurb* %call8, %struct.Nurb** %newnu, align 8, !dbg !3926
  %19 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !3927
  %20 = bitcast %struct.Nurb* %19 to i8*, !dbg !3927
  call void @BLI_addtail(%struct.ListBase* %newnurb, i8* %20), !dbg !3928
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3929
  %type9 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 2, !dbg !3931
  %22 = load i16, i16* %type9, align 8, !dbg !3931
  %conv10 = sext i16 %22 to i32, !dbg !3929
  %cmp11 = icmp eq i32 %conv10, 4, !dbg !3932
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !3933

if.then13:                                        ; preds = %for.body
  %23 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3934
  %call14 = call zeroext i8 @BKE_nurb_order_clamp_u(%struct.Nurb* %23), !dbg !3936
  br label %if.end15, !dbg !3937

if.end15:                                         ; preds = %if.then13, %for.body
  br label %for.inc, !dbg !3938

for.inc:                                          ; preds = %if.end15
  %24 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3939
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %24, i32 0, i32 0, !dbg !3940
  %25 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !3940
  store %struct.Nurb* %25, %struct.Nurb** %nu, align 8, !dbg !3941
  br label %for.cond, !dbg !3942, !llvm.loop !3943

for.end:                                          ; preds = %for.cond
  %26 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3945
  %nurb16 = getelementptr inbounds %struct.Curve, %struct.Curve* %26, i32 0, i32 3, !dbg !3946
  %27 = bitcast %struct.ListBase* %nurb16 to i8*, !dbg !3947
  %28 = bitcast %struct.ListBase* %newnurb to i8*, !dbg !3947
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 16, i1 false), !dbg !3947
  %29 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !3948
  call void @calc_shapeKeys(%struct.Object* %29), !dbg !3949
  %30 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !3950
  %data17 = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 19, !dbg !3951
  %31 = load i8*, i8** %data17, align 8, !dbg !3951
  %32 = bitcast i8* %31 to %struct.Curve*, !dbg !3950
  %call18 = call i32 @ED_curve_updateAnimPaths(%struct.Curve* %32), !dbg !3952
  call void @BKE_nurbList_free(%struct.ListBase* %oldnurb), !dbg !3953
  br label %if.end19, !dbg !3954

if.end19:                                         ; preds = %if.then, %for.end, %lor.lhs.false
  ret void, !dbg !3955
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @remap_hooks_and_vertex_parents(%struct.Object* %obedit) #0 !dbg !3956 {
entry:
  %obedit.addr = alloca %struct.Object*, align 8
  %object = alloca %struct.Object*, align 8
  %curve = alloca %struct.Curve*, align 8
  %editnurb = alloca %struct.EditNurb*, align 8
  %old_to_new_map = alloca i32*, align 8
  %old_totvert = alloca i32, align 4
  %md = alloca %struct.ModifierData*, align 8
  %index = alloca i32, align 4
  %hmd = alloca %struct.HookModifierData*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !3957, metadata !DIExpression()), !dbg !3958
  call void @llvm.dbg.declare(metadata %struct.Object** %object, metadata !3959, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.declare(metadata %struct.Curve** %curve, metadata !3961, metadata !DIExpression()), !dbg !3962
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !3963
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !3964
  %1 = load i8*, i8** %data, align 8, !dbg !3964
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !3965
  store %struct.Curve* %2, %struct.Curve** %curve, align 8, !dbg !3962
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb, metadata !3966, metadata !DIExpression()), !dbg !3967
  %3 = load %struct.Curve*, %struct.Curve** %curve, align 8, !dbg !3968
  %editnurb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 4, !dbg !3969
  %4 = load %struct.EditNurb*, %struct.EditNurb** %editnurb1, align 8, !dbg !3969
  store %struct.EditNurb* %4, %struct.EditNurb** %editnurb, align 8, !dbg !3967
  call void @llvm.dbg.declare(metadata i32** %old_to_new_map, metadata !3970, metadata !DIExpression()), !dbg !3971
  store i32* null, i32** %old_to_new_map, align 8, !dbg !3971
  call void @llvm.dbg.declare(metadata i32* %old_totvert, metadata !3972, metadata !DIExpression()), !dbg !3973
  %5 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !3974
  %keyindex = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %5, i32 0, i32 1, !dbg !3976
  %6 = load %struct.GHash*, %struct.GHash** %keyindex, align 8, !dbg !3976
  %cmp = icmp eq %struct.GHash* %6, null, !dbg !3977
  br i1 %cmp, label %if.then, label %if.end, !dbg !3978

if.then:                                          ; preds = %entry
  br label %if.end105, !dbg !3979

if.end:                                           ; preds = %entry
  %7 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !3981
  %object2 = getelementptr inbounds %struct.Main, %struct.Main* %7, i32 0, i32 13, !dbg !3983
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object2, i32 0, i32 0, !dbg !3984
  %8 = load i8*, i8** %first, align 8, !dbg !3984
  %9 = bitcast i8* %8 to %struct.Object*, !dbg !3985
  store %struct.Object* %9, %struct.Object** %object, align 8, !dbg !3986
  br label %for.cond, !dbg !3987

for.cond:                                         ; preds = %for.inc99, %if.end
  %10 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !3988
  %tobool = icmp ne %struct.Object* %10, null, !dbg !3990
  br i1 %tobool, label %for.body, label %for.end101, !dbg !3990

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !3991, metadata !DIExpression()), !dbg !3994
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3995, metadata !DIExpression()), !dbg !3996
  %11 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !3997
  %parent = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 9, !dbg !3999
  %12 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !3999
  %tobool3 = icmp ne %struct.Object* %12, null, !dbg !4000
  br i1 %tobool3, label %land.lhs.true, label %if.end53, !dbg !4001

land.lhs.true:                                    ; preds = %for.body
  %13 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !4002
  %parent4 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 9, !dbg !4003
  %14 = load %struct.Object*, %struct.Object** %parent4, align 8, !dbg !4003
  %data5 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 19, !dbg !4004
  %15 = load i8*, i8** %data5, align 8, !dbg !4004
  %16 = load %struct.Curve*, %struct.Curve** %curve, align 8, !dbg !4005
  %17 = bitcast %struct.Curve* %16 to i8*, !dbg !4005
  %cmp6 = icmp eq i8* %15, %17, !dbg !4006
  br i1 %cmp6, label %land.lhs.true7, label %if.end53, !dbg !4007

land.lhs.true7:                                   ; preds = %land.lhs.true
  %18 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !4008
  %partype = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 4, !dbg !4008
  %19 = load i16, i16* %partype, align 2, !dbg !4008
  %conv = sext i16 %19 to i32, !dbg !4008
  %cmp8 = icmp eq i32 %conv, 5, !dbg !4008
  br i1 %cmp8, label %if.then14, label %lor.lhs.false, !dbg !4008

lor.lhs.false:                                    ; preds = %land.lhs.true7
  %20 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !4008
  %partype10 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 4, !dbg !4008
  %21 = load i16, i16* %partype10, align 2, !dbg !4008
  %conv11 = sext i16 %21 to i32, !dbg !4008
  %cmp12 = icmp eq i32 %conv11, 6, !dbg !4008
  br i1 %cmp12, label %if.then14, label %if.end53, !dbg !4009

if.then14:                                        ; preds = %lor.lhs.false, %land.lhs.true7
  %22 = load i32*, i32** %old_to_new_map, align 8, !dbg !4010
  %cmp15 = icmp eq i32* %22, null, !dbg !4013
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !4014

if.then17:                                        ; preds = %if.then14
  %23 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !4015
  %call = call i32* @initialize_index_map(%struct.Object* %23, i32* %old_totvert), !dbg !4017
  store i32* %call, i32** %old_to_new_map, align 8, !dbg !4018
  br label %if.end18, !dbg !4019

if.end18:                                         ; preds = %if.then17, %if.then14
  %24 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !4020
  %par1 = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 5, !dbg !4022
  %25 = load i32, i32* %par1, align 4, !dbg !4022
  %26 = load i32, i32* %old_totvert, align 4, !dbg !4023
  %cmp19 = icmp slt i32 %25, %26, !dbg !4024
  br i1 %cmp19, label %if.then21, label %if.end28, !dbg !4025

if.then21:                                        ; preds = %if.end18
  %27 = load i32*, i32** %old_to_new_map, align 8, !dbg !4026
  %28 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !4028
  %par122 = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 5, !dbg !4029
  %29 = load i32, i32* %par122, align 4, !dbg !4029
  %idxprom = sext i32 %29 to i64, !dbg !4026
  %arrayidx = getelementptr inbounds i32, i32* %27, i64 %idxprom, !dbg !4026
  %30 = load i32, i32* %arrayidx, align 4, !dbg !4026
  store i32 %30, i32* %index, align 4, !dbg !4030
  %31 = load i32, i32* %index, align 4, !dbg !4031
  %cmp23 = icmp ne i32 %31, -1, !dbg !4033
  br i1 %cmp23, label %if.then25, label %if.end27, !dbg !4034

if.then25:                                        ; preds = %if.then21
  %32 = load i32, i32* %index, align 4, !dbg !4035
  %33 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !4037
  %par126 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 5, !dbg !4038
  store i32 %32, i32* %par126, align 4, !dbg !4039
  br label %if.end27, !dbg !4040

if.end27:                                         ; preds = %if.then25, %if.then21
  br label %if.end28, !dbg !4041

if.end28:                                         ; preds = %if.end27, %if.end18
  %34 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !4042
  %par2 = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 6, !dbg !4044
  %35 = load i32, i32* %par2, align 8, !dbg !4044
  %36 = load i32, i32* %old_totvert, align 4, !dbg !4045
  %cmp29 = icmp slt i32 %35, %36, !dbg !4046
  br i1 %cmp29, label %if.then31, label %if.end40, !dbg !4047

if.then31:                                        ; preds = %if.end28
  %37 = load i32*, i32** %old_to_new_map, align 8, !dbg !4048
  %38 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !4050
  %par232 = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 6, !dbg !4051
  %39 = load i32, i32* %par232, align 8, !dbg !4051
  %idxprom33 = sext i32 %39 to i64, !dbg !4048
  %arrayidx34 = getelementptr inbounds i32, i32* %37, i64 %idxprom33, !dbg !4048
  %40 = load i32, i32* %arrayidx34, align 4, !dbg !4048
  store i32 %40, i32* %index, align 4, !dbg !4052
  %41 = load i32, i32* %index, align 4, !dbg !4053
  %cmp35 = icmp ne i32 %41, -1, !dbg !4055
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !4056

if.then37:                                        ; preds = %if.then31
  %42 = load i32, i32* %index, align 4, !dbg !4057
  %43 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !4059
  %par238 = getelementptr inbounds %struct.Object, %struct.Object* %43, i32 0, i32 6, !dbg !4060
  store i32 %42, i32* %par238, align 8, !dbg !4061
  br label %if.end39, !dbg !4062

if.end39:                                         ; preds = %if.then37, %if.then31
  br label %if.end40, !dbg !4063

if.end40:                                         ; preds = %if.end39, %if.end28
  %44 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !4064
  %par3 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 7, !dbg !4066
  %45 = load i32, i32* %par3, align 4, !dbg !4066
  %46 = load i32, i32* %old_totvert, align 4, !dbg !4067
  %cmp41 = icmp slt i32 %45, %46, !dbg !4068
  br i1 %cmp41, label %if.then43, label %if.end52, !dbg !4069

if.then43:                                        ; preds = %if.end40
  %47 = load i32*, i32** %old_to_new_map, align 8, !dbg !4070
  %48 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !4072
  %par344 = getelementptr inbounds %struct.Object, %struct.Object* %48, i32 0, i32 7, !dbg !4073
  %49 = load i32, i32* %par344, align 4, !dbg !4073
  %idxprom45 = sext i32 %49 to i64, !dbg !4070
  %arrayidx46 = getelementptr inbounds i32, i32* %47, i64 %idxprom45, !dbg !4070
  %50 = load i32, i32* %arrayidx46, align 4, !dbg !4070
  store i32 %50, i32* %index, align 4, !dbg !4074
  %51 = load i32, i32* %index, align 4, !dbg !4075
  %cmp47 = icmp ne i32 %51, -1, !dbg !4077
  br i1 %cmp47, label %if.then49, label %if.end51, !dbg !4078

if.then49:                                        ; preds = %if.then43
  %52 = load i32, i32* %index, align 4, !dbg !4079
  %53 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !4081
  %par350 = getelementptr inbounds %struct.Object, %struct.Object* %53, i32 0, i32 7, !dbg !4082
  store i32 %52, i32* %par350, align 4, !dbg !4083
  br label %if.end51, !dbg !4084

if.end51:                                         ; preds = %if.then49, %if.then43
  br label %if.end52, !dbg !4085

if.end52:                                         ; preds = %if.end51, %if.end40
  br label %if.end53, !dbg !4086

if.end53:                                         ; preds = %if.end52, %lor.lhs.false, %land.lhs.true, %for.body
  %54 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !4087
  %data54 = getelementptr inbounds %struct.Object, %struct.Object* %54, i32 0, i32 19, !dbg !4089
  %55 = load i8*, i8** %data54, align 8, !dbg !4089
  %56 = load %struct.Curve*, %struct.Curve** %curve, align 8, !dbg !4090
  %57 = bitcast %struct.Curve* %56 to i8*, !dbg !4090
  %cmp55 = icmp eq i8* %55, %57, !dbg !4091
  br i1 %cmp55, label %if.then57, label %if.end98, !dbg !4092

if.then57:                                        ; preds = %if.end53
  %58 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !4093
  %modifiers = getelementptr inbounds %struct.Object, %struct.Object* %58, i32 0, i32 26, !dbg !4096
  %first58 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modifiers, i32 0, i32 0, !dbg !4097
  %59 = load i8*, i8** %first58, align 8, !dbg !4097
  %60 = bitcast i8* %59 to %struct.ModifierData*, !dbg !4093
  store %struct.ModifierData* %60, %struct.ModifierData** %md, align 8, !dbg !4098
  br label %for.cond59, !dbg !4099

for.cond59:                                       ; preds = %for.inc96, %if.then57
  %61 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !4100
  %tobool60 = icmp ne %struct.ModifierData* %61, null, !dbg !4102
  br i1 %tobool60, label %for.body61, label %for.end97, !dbg !4102

for.body61:                                       ; preds = %for.cond59
  %62 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !4103
  %type = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %62, i32 0, i32 2, !dbg !4106
  %63 = load i32, i32* %type, align 8, !dbg !4106
  %cmp62 = icmp eq i32 %63, 9, !dbg !4107
  br i1 %cmp62, label %if.then64, label %if.end95, !dbg !4108

if.then64:                                        ; preds = %for.body61
  call void @llvm.dbg.declare(metadata %struct.HookModifierData** %hmd, metadata !4109, metadata !DIExpression()), !dbg !4111
  %64 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !4112
  %65 = bitcast %struct.ModifierData* %64 to %struct.HookModifierData*, !dbg !4113
  store %struct.HookModifierData* %65, %struct.HookModifierData** %hmd, align 8, !dbg !4111
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4114, metadata !DIExpression()), !dbg !4115
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4116, metadata !DIExpression()), !dbg !4117
  %66 = load i32*, i32** %old_to_new_map, align 8, !dbg !4118
  %cmp65 = icmp eq i32* %66, null, !dbg !4120
  br i1 %cmp65, label %if.then67, label %if.end69, !dbg !4121

if.then67:                                        ; preds = %if.then64
  %67 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !4122
  %call68 = call i32* @initialize_index_map(%struct.Object* %67, i32* %old_totvert), !dbg !4124
  store i32* %call68, i32** %old_to_new_map, align 8, !dbg !4125
  br label %if.end69, !dbg !4126

if.end69:                                         ; preds = %if.then67, %if.then64
  store i32 0, i32* %j, align 4, !dbg !4127
  store i32 0, i32* %i, align 4, !dbg !4129
  br label %for.cond70, !dbg !4130

for.cond70:                                       ; preds = %for.inc, %if.end69
  %68 = load i32, i32* %i, align 4, !dbg !4131
  %69 = load %struct.HookModifierData*, %struct.HookModifierData** %hmd, align 8, !dbg !4133
  %totindex = getelementptr inbounds %struct.HookModifierData, %struct.HookModifierData* %69, i32 0, i32 7, !dbg !4134
  %70 = load i32, i32* %totindex, align 8, !dbg !4134
  %cmp71 = icmp slt i32 %68, %70, !dbg !4135
  br i1 %cmp71, label %for.body73, label %for.end, !dbg !4136

for.body73:                                       ; preds = %for.cond70
  %71 = load %struct.HookModifierData*, %struct.HookModifierData** %hmd, align 8, !dbg !4137
  %indexar = getelementptr inbounds %struct.HookModifierData, %struct.HookModifierData* %71, i32 0, i32 6, !dbg !4140
  %72 = load i32*, i32** %indexar, align 8, !dbg !4140
  %73 = load i32, i32* %i, align 4, !dbg !4141
  %idxprom74 = sext i32 %73 to i64, !dbg !4137
  %arrayidx75 = getelementptr inbounds i32, i32* %72, i64 %idxprom74, !dbg !4137
  %74 = load i32, i32* %arrayidx75, align 4, !dbg !4137
  %75 = load i32, i32* %old_totvert, align 4, !dbg !4142
  %cmp76 = icmp slt i32 %74, %75, !dbg !4143
  br i1 %cmp76, label %if.then78, label %if.else, !dbg !4144

if.then78:                                        ; preds = %for.body73
  %76 = load i32*, i32** %old_to_new_map, align 8, !dbg !4145
  %77 = load %struct.HookModifierData*, %struct.HookModifierData** %hmd, align 8, !dbg !4147
  %indexar79 = getelementptr inbounds %struct.HookModifierData, %struct.HookModifierData* %77, i32 0, i32 6, !dbg !4148
  %78 = load i32*, i32** %indexar79, align 8, !dbg !4148
  %79 = load i32, i32* %i, align 4, !dbg !4149
  %idxprom80 = sext i32 %79 to i64, !dbg !4147
  %arrayidx81 = getelementptr inbounds i32, i32* %78, i64 %idxprom80, !dbg !4147
  %80 = load i32, i32* %arrayidx81, align 4, !dbg !4147
  %idxprom82 = sext i32 %80 to i64, !dbg !4145
  %arrayidx83 = getelementptr inbounds i32, i32* %76, i64 %idxprom82, !dbg !4145
  %81 = load i32, i32* %arrayidx83, align 4, !dbg !4145
  store i32 %81, i32* %index, align 4, !dbg !4150
  %82 = load i32, i32* %index, align 4, !dbg !4151
  %cmp84 = icmp ne i32 %82, -1, !dbg !4153
  br i1 %cmp84, label %if.then86, label %if.end90, !dbg !4154

if.then86:                                        ; preds = %if.then78
  %83 = load i32, i32* %index, align 4, !dbg !4155
  %84 = load %struct.HookModifierData*, %struct.HookModifierData** %hmd, align 8, !dbg !4157
  %indexar87 = getelementptr inbounds %struct.HookModifierData, %struct.HookModifierData* %84, i32 0, i32 6, !dbg !4158
  %85 = load i32*, i32** %indexar87, align 8, !dbg !4158
  %86 = load i32, i32* %j, align 4, !dbg !4159
  %inc = add nsw i32 %86, 1, !dbg !4159
  store i32 %inc, i32* %j, align 4, !dbg !4159
  %idxprom88 = sext i32 %86 to i64, !dbg !4157
  %arrayidx89 = getelementptr inbounds i32, i32* %85, i64 %idxprom88, !dbg !4157
  store i32 %83, i32* %arrayidx89, align 4, !dbg !4160
  br label %if.end90, !dbg !4161

if.end90:                                         ; preds = %if.then86, %if.then78
  br label %if.end92, !dbg !4162

if.else:                                          ; preds = %for.body73
  %87 = load i32, i32* %j, align 4, !dbg !4163
  %inc91 = add nsw i32 %87, 1, !dbg !4163
  store i32 %inc91, i32* %j, align 4, !dbg !4163
  br label %if.end92

if.end92:                                         ; preds = %if.else, %if.end90
  br label %for.inc, !dbg !4165

for.inc:                                          ; preds = %if.end92
  %88 = load i32, i32* %i, align 4, !dbg !4166
  %inc93 = add nsw i32 %88, 1, !dbg !4166
  store i32 %inc93, i32* %i, align 4, !dbg !4166
  br label %for.cond70, !dbg !4167, !llvm.loop !4168

for.end:                                          ; preds = %for.cond70
  %89 = load i32, i32* %j, align 4, !dbg !4170
  %90 = load %struct.HookModifierData*, %struct.HookModifierData** %hmd, align 8, !dbg !4171
  %totindex94 = getelementptr inbounds %struct.HookModifierData, %struct.HookModifierData* %90, i32 0, i32 7, !dbg !4172
  store i32 %89, i32* %totindex94, align 8, !dbg !4173
  br label %if.end95, !dbg !4174

if.end95:                                         ; preds = %for.end, %for.body61
  br label %for.inc96, !dbg !4175

for.inc96:                                        ; preds = %if.end95
  %91 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !4176
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %91, i32 0, i32 0, !dbg !4177
  %92 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !4177
  store %struct.ModifierData* %92, %struct.ModifierData** %md, align 8, !dbg !4178
  br label %for.cond59, !dbg !4179, !llvm.loop !4180

for.end97:                                        ; preds = %for.cond59
  br label %if.end98, !dbg !4182

if.end98:                                         ; preds = %for.end97, %if.end53
  br label %for.inc99, !dbg !4183

for.inc99:                                        ; preds = %if.end98
  %93 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !4184
  %id = getelementptr inbounds %struct.Object, %struct.Object* %93, i32 0, i32 0, !dbg !4185
  %next100 = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 0, !dbg !4186
  %94 = load i8*, i8** %next100, align 8, !dbg !4186
  %95 = bitcast i8* %94 to %struct.Object*, !dbg !4184
  store %struct.Object* %95, %struct.Object** %object, align 8, !dbg !4187
  br label %for.cond, !dbg !4188, !llvm.loop !4189

for.end101:                                       ; preds = %for.cond
  %96 = load i32*, i32** %old_to_new_map, align 8, !dbg !4191
  %cmp102 = icmp ne i32* %96, null, !dbg !4193
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !4194

if.then104:                                       ; preds = %for.end101
  %97 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4195
  %98 = load i32*, i32** %old_to_new_map, align 8, !dbg !4197
  %99 = bitcast i32* %98 to i8*, !dbg !4197
  call void %97(i8* %99), !dbg !4195
  br label %if.end105, !dbg !4198

if.end105:                                        ; preds = %if.then, %if.then104, %for.end101
  ret void, !dbg !4199
}

declare dso_local %struct.Nurb* @BKE_nurb_duplicate(%struct.Nurb*) #2

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

declare dso_local zeroext i8 @BKE_nurb_order_clamp_u(%struct.Nurb*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @calc_shapeKeys(%struct.Object* %obedit) #0 !dbg !4200 {
entry:
  %obedit.addr = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %a = alloca i32, align 4
  %i = alloca i32, align 4
  %editnurb = alloca %struct.EditNurb*, align 8
  %currkey = alloca %struct.KeyBlock*, align 8
  %actkey = alloca %struct.KeyBlock*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %oldbezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %oldbp = alloca %struct.BPoint*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %totvert = alloca i32, align 4
  %ofs = alloca [3 x float]*, align 8
  %oldkey = alloca float*, align 8
  %newkey = alloca float*, align 8
  %ofp = alloca float*, align 8
  %act_is_basis = alloca i32, align 4
  %totvec = alloca i32, align 4
  %j = alloca i32, align 4
  %apply_offset = alloca i32, align 4
  %fp = alloca float*, align 8
  %restore = alloca i32, align 4
  %j148 = alloca i32, align 4
  %index = alloca i32, align 4
  %curofp = alloca float*, align 8
  %j234 = alloca i32, align 4
  %j263 = alloca i32, align 4
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !4201, metadata !DIExpression()), !dbg !4202
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !4203, metadata !DIExpression()), !dbg !4204
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !4205
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !4206
  %1 = load i8*, i8** %data, align 8, !dbg !4206
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !4207
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !4204
  %3 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4208
  %key = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 9, !dbg !4210
  %4 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !4210
  %tobool = icmp ne %struct.Key* %4, null, !dbg !4208
  br i1 %tobool, label %if.then, label %if.end342, !dbg !4211

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4212, metadata !DIExpression()), !dbg !4214
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4215, metadata !DIExpression()), !dbg !4216
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb, metadata !4217, metadata !DIExpression()), !dbg !4218
  %5 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4219
  %editnurb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %5, i32 0, i32 4, !dbg !4220
  %6 = load %struct.EditNurb*, %struct.EditNurb** %editnurb1, align 8, !dbg !4220
  store %struct.EditNurb* %6, %struct.EditNurb** %editnurb, align 8, !dbg !4218
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %currkey, metadata !4221, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %actkey, metadata !4223, metadata !DIExpression()), !dbg !4224
  %7 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4225
  %key2 = getelementptr inbounds %struct.Curve, %struct.Curve* %7, i32 0, i32 9, !dbg !4226
  %8 = load %struct.Key*, %struct.Key** %key2, align 8, !dbg !4226
  %block = getelementptr inbounds %struct.Key, %struct.Key* %8, i32 0, i32 6, !dbg !4227
  %9 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4228
  %shapenr = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %9, i32 0, i32 2, !dbg !4229
  %10 = load i32, i32* %shapenr, align 8, !dbg !4229
  %sub = sub nsw i32 %10, 1, !dbg !4230
  %call = call i8* @BLI_findlink(%struct.ListBase* %block, i32 %sub), !dbg !4231
  %11 = bitcast i8* %call to %struct.KeyBlock*, !dbg !4231
  store %struct.KeyBlock* %11, %struct.KeyBlock** %actkey, align 8, !dbg !4224
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !4232, metadata !DIExpression()), !dbg !4233
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %oldbezt, metadata !4234, metadata !DIExpression()), !dbg !4235
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !4236, metadata !DIExpression()), !dbg !4237
  call void @llvm.dbg.declare(metadata %struct.BPoint** %oldbp, metadata !4238, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !4240, metadata !DIExpression()), !dbg !4241
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !4242, metadata !DIExpression()), !dbg !4243
  %12 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4244
  %nurbs = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %12, i32 0, i32 0, !dbg !4245
  %call3 = call i32 @BKE_nurbList_verts_count(%struct.ListBase* %nurbs), !dbg !4246
  store i32 %call3, i32* %totvert, align 4, !dbg !4243
  call void @llvm.dbg.declare(metadata [3 x float]** %ofs, metadata !4247, metadata !DIExpression()), !dbg !4249
  store [3 x float]* null, [3 x float]** %ofs, align 8, !dbg !4249
  call void @llvm.dbg.declare(metadata float** %oldkey, metadata !4250, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.declare(metadata float** %newkey, metadata !4252, metadata !DIExpression()), !dbg !4253
  call void @llvm.dbg.declare(metadata float** %ofp, metadata !4254, metadata !DIExpression()), !dbg !4255
  %13 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4256
  %key4 = getelementptr inbounds %struct.Curve, %struct.Curve* %13, i32 0, i32 9, !dbg !4258
  %14 = load %struct.Key*, %struct.Key** %key4, align 8, !dbg !4258
  %type = getelementptr inbounds %struct.Key, %struct.Key* %14, i32 0, i32 9, !dbg !4259
  %15 = load i16, i16* %type, align 8, !dbg !4259
  %conv = sext i16 %15 to i32, !dbg !4256
  %cmp = icmp eq i32 %conv, 1, !dbg !4260
  br i1 %cmp, label %if.then6, label %if.end107, !dbg !4261

if.then6:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %act_is_basis, metadata !4262, metadata !DIExpression()), !dbg !4264
  store i32 0, i32* %act_is_basis, align 4, !dbg !4264
  %16 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4265
  %key7 = getelementptr inbounds %struct.Curve, %struct.Curve* %16, i32 0, i32 9, !dbg !4267
  %17 = load %struct.Key*, %struct.Key** %key7, align 8, !dbg !4267
  %block8 = getelementptr inbounds %struct.Key, %struct.Key* %17, i32 0, i32 6, !dbg !4268
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block8, i32 0, i32 0, !dbg !4269
  %18 = load i8*, i8** %first, align 8, !dbg !4269
  %19 = bitcast i8* %18 to %struct.KeyBlock*, !dbg !4265
  store %struct.KeyBlock* %19, %struct.KeyBlock** %currkey, align 8, !dbg !4270
  br label %for.cond, !dbg !4271

for.cond:                                         ; preds = %for.inc, %if.then6
  %20 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !4272
  %tobool9 = icmp ne %struct.KeyBlock* %20, null, !dbg !4274
  br i1 %tobool9, label %for.body, label %for.end, !dbg !4274

for.body:                                         ; preds = %for.cond
  %21 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4275
  %shapenr10 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %21, i32 0, i32 2, !dbg !4278
  %22 = load i32, i32* %shapenr10, align 8, !dbg !4278
  %sub11 = sub nsw i32 %22, 1, !dbg !4279
  %23 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !4280
  %relative = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %23, i32 0, i32 6, !dbg !4281
  %24 = load i16, i16* %relative, align 4, !dbg !4281
  %conv12 = sext i16 %24 to i32, !dbg !4280
  %cmp13 = icmp eq i32 %sub11, %conv12, !dbg !4282
  br i1 %cmp13, label %if.then15, label %if.end, !dbg !4283

if.then15:                                        ; preds = %for.body
  store i32 1, i32* %act_is_basis, align 4, !dbg !4284
  br label %for.end, !dbg !4286

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4287

for.inc:                                          ; preds = %if.end
  %25 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !4288
  %next = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %25, i32 0, i32 0, !dbg !4289
  %26 = load %struct.KeyBlock*, %struct.KeyBlock** %next, align 8, !dbg !4289
  store %struct.KeyBlock* %26, %struct.KeyBlock** %currkey, align 8, !dbg !4290
  br label %for.cond, !dbg !4291, !llvm.loop !4292

for.end:                                          ; preds = %if.then15, %for.cond
  %27 = load i32, i32* %act_is_basis, align 4, !dbg !4294
  %tobool16 = icmp ne i32 %27, 0, !dbg !4294
  br i1 %tobool16, label %if.then17, label %if.end106, !dbg !4296

if.then17:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %totvec, metadata !4297, metadata !DIExpression()), !dbg !4299
  store i32 0, i32* %totvec, align 4, !dbg !4299
  %28 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4300
  %nurbs18 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %28, i32 0, i32 0, !dbg !4301
  %first19 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurbs18, i32 0, i32 0, !dbg !4302
  %29 = load i8*, i8** %first19, align 8, !dbg !4302
  %30 = bitcast i8* %29 to %struct.Nurb*, !dbg !4300
  store %struct.Nurb* %30, %struct.Nurb** %nu, align 8, !dbg !4303
  br label %while.cond, !dbg !4304

while.cond:                                       ; preds = %if.end28, %if.then17
  %31 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4305
  %tobool20 = icmp ne %struct.Nurb* %31, null, !dbg !4304
  br i1 %tobool20, label %while.body, label %while.end, !dbg !4304

while.body:                                       ; preds = %while.cond
  %32 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4306
  %bezt21 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %32, i32 0, i32 18, !dbg !4309
  %33 = load %struct.BezTriple*, %struct.BezTriple** %bezt21, align 8, !dbg !4309
  %tobool22 = icmp ne %struct.BezTriple* %33, null, !dbg !4306
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !4310

if.then23:                                        ; preds = %while.body
  %34 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4311
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %34, i32 0, i32 6, !dbg !4313
  %35 = load i32, i32* %pntsu, align 8, !dbg !4313
  %mul = mul nsw i32 %35, 4, !dbg !4314
  %36 = load i32, i32* %totvec, align 4, !dbg !4315
  %add = add nsw i32 %36, %mul, !dbg !4315
  store i32 %add, i32* %totvec, align 4, !dbg !4315
  br label %if.end28, !dbg !4316

if.else:                                          ; preds = %while.body
  %37 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4317
  %pntsu24 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %37, i32 0, i32 6, !dbg !4319
  %38 = load i32, i32* %pntsu24, align 8, !dbg !4319
  %mul25 = mul nsw i32 2, %38, !dbg !4320
  %39 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4321
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %39, i32 0, i32 7, !dbg !4322
  %40 = load i32, i32* %pntsv, align 4, !dbg !4322
  %mul26 = mul nsw i32 %mul25, %40, !dbg !4323
  %41 = load i32, i32* %totvec, align 4, !dbg !4324
  %add27 = add nsw i32 %41, %mul26, !dbg !4324
  store i32 %add27, i32* %totvec, align 4, !dbg !4324
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then23
  %42 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4325
  %next29 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %42, i32 0, i32 0, !dbg !4326
  %43 = load %struct.Nurb*, %struct.Nurb** %next29, align 8, !dbg !4326
  store %struct.Nurb* %43, %struct.Nurb** %nu, align 8, !dbg !4327
  br label %while.cond, !dbg !4304, !llvm.loop !4328

while.end:                                        ; preds = %while.cond
  %44 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4330
  %45 = load i32, i32* %totvec, align 4, !dbg !4331
  %conv30 = sext i32 %45 to i64, !dbg !4331
  %mul31 = mul i64 12, %conv30, !dbg !4332
  %call32 = call i8* %44(i64 %mul31, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.190, i64 0, i64 0)), !dbg !4330
  %46 = bitcast i8* %call32 to [3 x float]*, !dbg !4330
  store [3 x float]* %46, [3 x float]** %ofs, align 8, !dbg !4333
  %47 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4334
  %nurbs33 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %47, i32 0, i32 0, !dbg !4335
  %first34 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurbs33, i32 0, i32 0, !dbg !4336
  %48 = load i8*, i8** %first34, align 8, !dbg !4336
  %49 = bitcast i8* %48 to %struct.Nurb*, !dbg !4334
  store %struct.Nurb* %49, %struct.Nurb** %nu, align 8, !dbg !4337
  store i32 0, i32* %i, align 4, !dbg !4338
  br label %while.cond35, !dbg !4339

while.cond35:                                     ; preds = %if.end103, %while.end
  %50 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4340
  %tobool36 = icmp ne %struct.Nurb* %50, null, !dbg !4339
  br i1 %tobool36, label %while.body37, label %while.end105, !dbg !4339

while.body37:                                     ; preds = %while.cond35
  %51 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4341
  %bezt38 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %51, i32 0, i32 18, !dbg !4344
  %52 = load %struct.BezTriple*, %struct.BezTriple** %bezt38, align 8, !dbg !4344
  %tobool39 = icmp ne %struct.BezTriple* %52, null, !dbg !4341
  br i1 %tobool39, label %if.then40, label %if.else73, !dbg !4345

if.then40:                                        ; preds = %while.body37
  %53 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4346
  %bezt41 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %53, i32 0, i32 18, !dbg !4348
  %54 = load %struct.BezTriple*, %struct.BezTriple** %bezt41, align 8, !dbg !4348
  store %struct.BezTriple* %54, %struct.BezTriple** %bezt, align 8, !dbg !4349
  %55 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4350
  %pntsu42 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %55, i32 0, i32 6, !dbg !4351
  %56 = load i32, i32* %pntsu42, align 8, !dbg !4351
  store i32 %56, i32* %a, align 4, !dbg !4352
  br label %while.cond43, !dbg !4353

while.cond43:                                     ; preds = %if.end71, %if.then40
  %57 = load i32, i32* %a, align 4, !dbg !4354
  %dec = add nsw i32 %57, -1, !dbg !4354
  store i32 %dec, i32* %a, align 4, !dbg !4354
  %tobool44 = icmp ne i32 %57, 0, !dbg !4353
  br i1 %tobool44, label %while.body45, label %while.end72, !dbg !4353

while.body45:                                     ; preds = %while.cond43
  %58 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4355
  %59 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4357
  %call46 = call %struct.BezTriple* @getKeyIndexOrig_bezt(%struct.EditNurb* %58, %struct.BezTriple* %59), !dbg !4358
  store %struct.BezTriple* %call46, %struct.BezTriple** %oldbezt, align 8, !dbg !4359
  %60 = load %struct.BezTriple*, %struct.BezTriple** %oldbezt, align 8, !dbg !4360
  %tobool47 = icmp ne %struct.BezTriple* %60, null, !dbg !4360
  br i1 %tobool47, label %if.then48, label %if.else69, !dbg !4362

if.then48:                                        ; preds = %while.body45
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4363, metadata !DIExpression()), !dbg !4365
  store i32 0, i32* %j, align 4, !dbg !4366
  br label %for.cond49, !dbg !4368

for.cond49:                                       ; preds = %for.inc60, %if.then48
  %61 = load i32, i32* %j, align 4, !dbg !4369
  %cmp50 = icmp slt i32 %61, 3, !dbg !4371
  br i1 %cmp50, label %for.body52, label %for.end62, !dbg !4372

for.body52:                                       ; preds = %for.cond49
  %62 = load [3 x float]*, [3 x float]** %ofs, align 8, !dbg !4373
  %63 = load i32, i32* %i, align 4, !dbg !4375
  %idxprom = sext i32 %63 to i64, !dbg !4373
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %62, i64 %idxprom, !dbg !4373
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !4373
  %64 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4376
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %64, i32 0, i32 0, !dbg !4377
  %65 = load i32, i32* %j, align 4, !dbg !4378
  %idxprom53 = sext i32 %65 to i64, !dbg !4376
  %arrayidx54 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 %idxprom53, !dbg !4376
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx54, i64 0, i64 0, !dbg !4376
  %66 = load %struct.BezTriple*, %struct.BezTriple** %oldbezt, align 8, !dbg !4379
  %vec56 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %66, i32 0, i32 0, !dbg !4380
  %67 = load i32, i32* %j, align 4, !dbg !4381
  %idxprom57 = sext i32 %67 to i64, !dbg !4379
  %arrayidx58 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec56, i64 0, i64 %idxprom57, !dbg !4379
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx58, i64 0, i64 0, !dbg !4379
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay55, float* %arraydecay59), !dbg !4382
  %68 = load i32, i32* %i, align 4, !dbg !4383
  %inc = add nsw i32 %68, 1, !dbg !4383
  store i32 %inc, i32* %i, align 4, !dbg !4383
  br label %for.inc60, !dbg !4384

for.inc60:                                        ; preds = %for.body52
  %69 = load i32, i32* %j, align 4, !dbg !4385
  %inc61 = add nsw i32 %69, 1, !dbg !4385
  store i32 %inc61, i32* %j, align 4, !dbg !4385
  br label %for.cond49, !dbg !4386, !llvm.loop !4387

for.end62:                                        ; preds = %for.cond49
  %70 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4389
  %alfa = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %70, i32 0, i32 1, !dbg !4390
  %71 = load float, float* %alfa, align 4, !dbg !4390
  %72 = load %struct.BezTriple*, %struct.BezTriple** %oldbezt, align 8, !dbg !4391
  %alfa63 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %72, i32 0, i32 1, !dbg !4392
  %73 = load float, float* %alfa63, align 4, !dbg !4392
  %sub64 = fsub float %71, %73, !dbg !4393
  %74 = load [3 x float]*, [3 x float]** %ofs, align 8, !dbg !4394
  %75 = load i32, i32* %i, align 4, !dbg !4395
  %inc65 = add nsw i32 %75, 1, !dbg !4395
  store i32 %inc65, i32* %i, align 4, !dbg !4395
  %idxprom66 = sext i32 %75 to i64, !dbg !4394
  %arrayidx67 = getelementptr inbounds [3 x float], [3 x float]* %74, i64 %idxprom66, !dbg !4394
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx67, i64 0, i64 0, !dbg !4394
  store float %sub64, float* %arrayidx68, align 4, !dbg !4396
  br label %if.end71, !dbg !4397

if.else69:                                        ; preds = %while.body45
  %76 = load i32, i32* %i, align 4, !dbg !4398
  %add70 = add nsw i32 %76, 4, !dbg !4398
  store i32 %add70, i32* %i, align 4, !dbg !4398
  br label %if.end71

if.end71:                                         ; preds = %if.else69, %for.end62
  %77 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4400
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %77, i32 1, !dbg !4400
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !4400
  br label %while.cond43, !dbg !4353, !llvm.loop !4401

while.end72:                                      ; preds = %while.cond43
  br label %if.end103, !dbg !4403

if.else73:                                        ; preds = %while.body37
  %78 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4404
  %bp74 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %78, i32 0, i32 17, !dbg !4406
  %79 = load %struct.BPoint*, %struct.BPoint** %bp74, align 8, !dbg !4406
  store %struct.BPoint* %79, %struct.BPoint** %bp, align 8, !dbg !4407
  %80 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4408
  %pntsu75 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %80, i32 0, i32 6, !dbg !4409
  %81 = load i32, i32* %pntsu75, align 8, !dbg !4409
  %82 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4410
  %pntsv76 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %82, i32 0, i32 7, !dbg !4411
  %83 = load i32, i32* %pntsv76, align 4, !dbg !4411
  %mul77 = mul nsw i32 %81, %83, !dbg !4412
  store i32 %mul77, i32* %a, align 4, !dbg !4413
  br label %while.cond78, !dbg !4414

while.cond78:                                     ; preds = %if.end99, %if.else73
  %84 = load i32, i32* %a, align 4, !dbg !4415
  %dec79 = add nsw i32 %84, -1, !dbg !4415
  store i32 %dec79, i32* %a, align 4, !dbg !4415
  %tobool80 = icmp ne i32 %84, 0, !dbg !4414
  br i1 %tobool80, label %while.body81, label %while.end102, !dbg !4414

while.body81:                                     ; preds = %while.cond78
  %85 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4416
  %86 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4418
  %call82 = call %struct.BPoint* @getKeyIndexOrig_bp(%struct.EditNurb* %85, %struct.BPoint* %86), !dbg !4419
  store %struct.BPoint* %call82, %struct.BPoint** %oldbp, align 8, !dbg !4420
  %87 = load %struct.BPoint*, %struct.BPoint** %oldbp, align 8, !dbg !4421
  %tobool83 = icmp ne %struct.BPoint* %87, null, !dbg !4421
  br i1 %tobool83, label %if.then84, label %if.end99, !dbg !4423

if.then84:                                        ; preds = %while.body81
  %88 = load [3 x float]*, [3 x float]** %ofs, align 8, !dbg !4424
  %89 = load i32, i32* %i, align 4, !dbg !4426
  %idxprom85 = sext i32 %89 to i64, !dbg !4424
  %arrayidx86 = getelementptr inbounds [3 x float], [3 x float]* %88, i64 %idxprom85, !dbg !4424
  %arraydecay87 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx86, i64 0, i64 0, !dbg !4424
  %90 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4427
  %vec88 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %90, i32 0, i32 0, !dbg !4428
  %arraydecay89 = getelementptr inbounds [4 x float], [4 x float]* %vec88, i64 0, i64 0, !dbg !4427
  %91 = load %struct.BPoint*, %struct.BPoint** %oldbp, align 8, !dbg !4429
  %vec90 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %91, i32 0, i32 0, !dbg !4430
  %arraydecay91 = getelementptr inbounds [4 x float], [4 x float]* %vec90, i64 0, i64 0, !dbg !4429
  call void @sub_v3_v3v3(float* %arraydecay87, float* %arraydecay89, float* %arraydecay91), !dbg !4431
  %92 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4432
  %alfa92 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %92, i32 0, i32 1, !dbg !4433
  %93 = load float, float* %alfa92, align 4, !dbg !4433
  %94 = load %struct.BPoint*, %struct.BPoint** %oldbp, align 8, !dbg !4434
  %alfa93 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %94, i32 0, i32 1, !dbg !4435
  %95 = load float, float* %alfa93, align 4, !dbg !4435
  %sub94 = fsub float %93, %95, !dbg !4436
  %96 = load [3 x float]*, [3 x float]** %ofs, align 8, !dbg !4437
  %97 = load i32, i32* %i, align 4, !dbg !4438
  %add95 = add nsw i32 %97, 1, !dbg !4439
  %idxprom96 = sext i32 %add95 to i64, !dbg !4437
  %arrayidx97 = getelementptr inbounds [3 x float], [3 x float]* %96, i64 %idxprom96, !dbg !4437
  %arrayidx98 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx97, i64 0, i64 0, !dbg !4437
  store float %sub94, float* %arrayidx98, align 4, !dbg !4440
  br label %if.end99, !dbg !4441

if.end99:                                         ; preds = %if.then84, %while.body81
  %98 = load i32, i32* %i, align 4, !dbg !4442
  %add100 = add nsw i32 %98, 2, !dbg !4442
  store i32 %add100, i32* %i, align 4, !dbg !4442
  %99 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4443
  %incdec.ptr101 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %99, i32 1, !dbg !4443
  store %struct.BPoint* %incdec.ptr101, %struct.BPoint** %bp, align 8, !dbg !4443
  br label %while.cond78, !dbg !4414, !llvm.loop !4444

while.end102:                                     ; preds = %while.cond78
  br label %if.end103

if.end103:                                        ; preds = %while.end102, %while.end72
  %100 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4446
  %next104 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %100, i32 0, i32 0, !dbg !4447
  %101 = load %struct.Nurb*, %struct.Nurb** %next104, align 8, !dbg !4447
  store %struct.Nurb* %101, %struct.Nurb** %nu, align 8, !dbg !4448
  br label %while.cond35, !dbg !4339, !llvm.loop !4449

while.end105:                                     ; preds = %while.cond35
  br label %if.end106, !dbg !4451

if.end106:                                        ; preds = %while.end105, %for.end
  br label %if.end107, !dbg !4452

if.end107:                                        ; preds = %if.end106, %if.then
  %102 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4453
  %key108 = getelementptr inbounds %struct.Curve, %struct.Curve* %102, i32 0, i32 9, !dbg !4454
  %103 = load %struct.Key*, %struct.Key** %key108, align 8, !dbg !4454
  %block109 = getelementptr inbounds %struct.Key, %struct.Key* %103, i32 0, i32 6, !dbg !4455
  %first110 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block109, i32 0, i32 0, !dbg !4456
  %104 = load i8*, i8** %first110, align 8, !dbg !4456
  %105 = bitcast i8* %104 to %struct.KeyBlock*, !dbg !4453
  store %struct.KeyBlock* %105, %struct.KeyBlock** %currkey, align 8, !dbg !4457
  br label %while.cond111, !dbg !4458

while.cond111:                                    ; preds = %if.end335, %if.end107
  %106 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !4459
  %tobool112 = icmp ne %struct.KeyBlock* %106, null, !dbg !4458
  br i1 %tobool112, label %while.body113, label %while.end338, !dbg !4458

while.body113:                                    ; preds = %while.cond111
  call void @llvm.dbg.declare(metadata i32* %apply_offset, metadata !4460, metadata !DIExpression()), !dbg !4462
  %107 = load [3 x float]*, [3 x float]** %ofs, align 8, !dbg !4463
  %tobool114 = icmp ne [3 x float]* %107, null, !dbg !4463
  br i1 %tobool114, label %land.lhs.true, label %land.end, !dbg !4464

land.lhs.true:                                    ; preds = %while.body113
  %108 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !4465
  %109 = load %struct.KeyBlock*, %struct.KeyBlock** %actkey, align 8, !dbg !4466
  %cmp115 = icmp ne %struct.KeyBlock* %108, %109, !dbg !4467
  br i1 %cmp115, label %land.rhs, label %land.end, !dbg !4468

land.rhs:                                         ; preds = %land.lhs.true
  %110 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4469
  %shapenr117 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %110, i32 0, i32 2, !dbg !4470
  %111 = load i32, i32* %shapenr117, align 8, !dbg !4470
  %sub118 = sub nsw i32 %111, 1, !dbg !4471
  %112 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !4472
  %relative119 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %112, i32 0, i32 6, !dbg !4473
  %113 = load i16, i16* %relative119, align 4, !dbg !4473
  %conv120 = sext i16 %113 to i32, !dbg !4472
  %cmp121 = icmp eq i32 %sub118, %conv120, !dbg !4474
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.body113
  %114 = phi i1 [ false, %land.lhs.true ], [ false, %while.body113 ], [ %cmp121, %land.rhs ], !dbg !4475
  %land.ext = zext i1 %114 to i32, !dbg !4468
  store i32 %land.ext, i32* %apply_offset, align 4, !dbg !4462
  call void @llvm.dbg.declare(metadata float** %fp, metadata !4476, metadata !DIExpression()), !dbg !4477
  %115 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4478
  %116 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4479
  %key123 = getelementptr inbounds %struct.Curve, %struct.Curve* %116, i32 0, i32 9, !dbg !4480
  %117 = load %struct.Key*, %struct.Key** %key123, align 8, !dbg !4480
  %elemsize = getelementptr inbounds %struct.Key, %struct.Key* %117, i32 0, i32 4, !dbg !4481
  %118 = load i32, i32* %elemsize, align 8, !dbg !4481
  %119 = load i32, i32* %totvert, align 4, !dbg !4482
  %mul124 = mul nsw i32 %118, %119, !dbg !4483
  %conv125 = sext i32 %mul124 to i64, !dbg !4479
  %call126 = call i8* %115(i64 %conv125, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.190, i64 0, i64 0)), !dbg !4478
  %120 = bitcast i8* %call126 to float*, !dbg !4478
  store float* %120, float** %newkey, align 8, !dbg !4484
  store float* %120, float** %fp, align 8, !dbg !4477
  %121 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !4485
  %data127 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %121, i32 0, i32 10, !dbg !4486
  %122 = load i8*, i8** %data127, align 8, !dbg !4486
  %123 = bitcast i8* %122 to float*, !dbg !4485
  store float* %123, float** %oldkey, align 8, !dbg !4487
  store float* %123, float** %ofp, align 8, !dbg !4488
  %124 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4489
  %nurbs128 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %124, i32 0, i32 0, !dbg !4490
  %first129 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurbs128, i32 0, i32 0, !dbg !4491
  %125 = load i8*, i8** %first129, align 8, !dbg !4491
  %126 = bitcast i8* %125 to %struct.Nurb*, !dbg !4489
  store %struct.Nurb* %126, %struct.Nurb** %nu, align 8, !dbg !4492
  store i32 0, i32* %i, align 4, !dbg !4493
  br label %while.cond130, !dbg !4494

while.cond130:                                    ; preds = %if.end324, %land.end
  %127 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4495
  %tobool131 = icmp ne %struct.Nurb* %127, null, !dbg !4494
  br i1 %tobool131, label %while.body132, label %while.end326, !dbg !4494

while.body132:                                    ; preds = %while.cond130
  %128 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !4496
  %129 = load %struct.KeyBlock*, %struct.KeyBlock** %actkey, align 8, !dbg !4499
  %cmp133 = icmp eq %struct.KeyBlock* %128, %129, !dbg !4500
  br i1 %cmp133, label %if.then135, label %if.else218, !dbg !4501

if.then135:                                       ; preds = %while.body132
  call void @llvm.dbg.declare(metadata i32* %restore, metadata !4502, metadata !DIExpression()), !dbg !4504
  %130 = load %struct.KeyBlock*, %struct.KeyBlock** %actkey, align 8, !dbg !4505
  %131 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4506
  %key136 = getelementptr inbounds %struct.Curve, %struct.Curve* %131, i32 0, i32 9, !dbg !4507
  %132 = load %struct.Key*, %struct.Key** %key136, align 8, !dbg !4507
  %refkey = getelementptr inbounds %struct.Key, %struct.Key* %132, i32 0, i32 2, !dbg !4508
  %133 = load %struct.KeyBlock*, %struct.KeyBlock** %refkey, align 8, !dbg !4508
  %cmp137 = icmp ne %struct.KeyBlock* %130, %133, !dbg !4509
  %conv138 = zext i1 %cmp137 to i32, !dbg !4509
  store i32 %conv138, i32* %restore, align 4, !dbg !4504
  %134 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4510
  %bezt139 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %134, i32 0, i32 18, !dbg !4512
  %135 = load %struct.BezTriple*, %struct.BezTriple** %bezt139, align 8, !dbg !4512
  %tobool140 = icmp ne %struct.BezTriple* %135, null, !dbg !4510
  br i1 %tobool140, label %if.then141, label %if.else188, !dbg !4513

if.then141:                                       ; preds = %if.then135
  %136 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4514
  %bezt142 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %136, i32 0, i32 18, !dbg !4516
  %137 = load %struct.BezTriple*, %struct.BezTriple** %bezt142, align 8, !dbg !4516
  store %struct.BezTriple* %137, %struct.BezTriple** %bezt, align 8, !dbg !4517
  %138 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4518
  %pntsu143 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %138, i32 0, i32 6, !dbg !4519
  %139 = load i32, i32* %pntsu143, align 8, !dbg !4519
  store i32 %139, i32* %a, align 4, !dbg !4520
  br label %while.cond144, !dbg !4521

while.cond144:                                    ; preds = %if.end183, %if.then141
  %140 = load i32, i32* %a, align 4, !dbg !4522
  %dec145 = add nsw i32 %140, -1, !dbg !4522
  store i32 %dec145, i32* %a, align 4, !dbg !4522
  %tobool146 = icmp ne i32 %140, 0, !dbg !4521
  br i1 %tobool146, label %while.body147, label %while.end187, !dbg !4521

while.body147:                                    ; preds = %while.cond144
  call void @llvm.dbg.declare(metadata i32* %j148, metadata !4523, metadata !DIExpression()), !dbg !4525
  %141 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4526
  %142 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4527
  %call149 = call %struct.BezTriple* @getKeyIndexOrig_bezt(%struct.EditNurb* %141, %struct.BezTriple* %142), !dbg !4528
  store %struct.BezTriple* %call149, %struct.BezTriple** %oldbezt, align 8, !dbg !4529
  store i32 0, i32* %j148, align 4, !dbg !4530
  br label %for.cond150, !dbg !4532

for.cond150:                                      ; preds = %for.inc171, %while.body147
  %143 = load i32, i32* %j148, align 4, !dbg !4533
  %cmp151 = icmp slt i32 %143, 3, !dbg !4535
  br i1 %cmp151, label %for.body153, label %for.end174, !dbg !4536

for.body153:                                      ; preds = %for.cond150
  %144 = load float*, float** %fp, align 8, !dbg !4537
  %145 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4539
  %vec154 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %145, i32 0, i32 0, !dbg !4540
  %146 = load i32, i32* %j148, align 4, !dbg !4541
  %idxprom155 = sext i32 %146 to i64, !dbg !4539
  %arrayidx156 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec154, i64 0, i64 %idxprom155, !dbg !4539
  %arraydecay157 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx156, i64 0, i64 0, !dbg !4539
  call void @copy_v3_v3(float* %144, float* %arraydecay157), !dbg !4542
  %147 = load i32, i32* %restore, align 4, !dbg !4543
  %tobool158 = icmp ne i32 %147, 0, !dbg !4543
  br i1 %tobool158, label %land.lhs.true159, label %if.end170, !dbg !4545

land.lhs.true159:                                 ; preds = %for.body153
  %148 = load %struct.BezTriple*, %struct.BezTriple** %oldbezt, align 8, !dbg !4546
  %tobool160 = icmp ne %struct.BezTriple* %148, null, !dbg !4546
  br i1 %tobool160, label %if.then161, label %if.end170, !dbg !4547

if.then161:                                       ; preds = %land.lhs.true159
  %149 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4548
  %vec162 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %149, i32 0, i32 0, !dbg !4550
  %150 = load i32, i32* %j148, align 4, !dbg !4551
  %idxprom163 = sext i32 %150 to i64, !dbg !4548
  %arrayidx164 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec162, i64 0, i64 %idxprom163, !dbg !4548
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx164, i64 0, i64 0, !dbg !4548
  %151 = load %struct.BezTriple*, %struct.BezTriple** %oldbezt, align 8, !dbg !4552
  %vec166 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %151, i32 0, i32 0, !dbg !4553
  %152 = load i32, i32* %j148, align 4, !dbg !4554
  %idxprom167 = sext i32 %152 to i64, !dbg !4552
  %arrayidx168 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec166, i64 0, i64 %idxprom167, !dbg !4552
  %arraydecay169 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx168, i64 0, i64 0, !dbg !4552
  call void @copy_v3_v3(float* %arraydecay165, float* %arraydecay169), !dbg !4555
  br label %if.end170, !dbg !4556

if.end170:                                        ; preds = %if.then161, %land.lhs.true159, %for.body153
  %153 = load float*, float** %fp, align 8, !dbg !4557
  %add.ptr = getelementptr inbounds float, float* %153, i64 3, !dbg !4557
  store float* %add.ptr, float** %fp, align 8, !dbg !4557
  br label %for.inc171, !dbg !4558

for.inc171:                                       ; preds = %if.end170
  %154 = load i32, i32* %j148, align 4, !dbg !4559
  %inc172 = add nsw i32 %154, 1, !dbg !4559
  store i32 %inc172, i32* %j148, align 4, !dbg !4559
  %155 = load i32, i32* %i, align 4, !dbg !4560
  %inc173 = add nsw i32 %155, 1, !dbg !4560
  store i32 %inc173, i32* %i, align 4, !dbg !4560
  br label %for.cond150, !dbg !4561, !llvm.loop !4562

for.end174:                                       ; preds = %for.cond150
  %156 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4564
  %alfa175 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %156, i32 0, i32 1, !dbg !4565
  %157 = load float, float* %alfa175, align 4, !dbg !4565
  %158 = load float*, float** %fp, align 8, !dbg !4566
  %arrayidx176 = getelementptr inbounds float, float* %158, i64 0, !dbg !4566
  store float %157, float* %arrayidx176, align 4, !dbg !4567
  %159 = load i32, i32* %restore, align 4, !dbg !4568
  %tobool177 = icmp ne i32 %159, 0, !dbg !4568
  br i1 %tobool177, label %land.lhs.true178, label %if.end183, !dbg !4570

land.lhs.true178:                                 ; preds = %for.end174
  %160 = load %struct.BezTriple*, %struct.BezTriple** %oldbezt, align 8, !dbg !4571
  %tobool179 = icmp ne %struct.BezTriple* %160, null, !dbg !4571
  br i1 %tobool179, label %if.then180, label %if.end183, !dbg !4572

if.then180:                                       ; preds = %land.lhs.true178
  %161 = load %struct.BezTriple*, %struct.BezTriple** %oldbezt, align 8, !dbg !4573
  %alfa181 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %161, i32 0, i32 1, !dbg !4575
  %162 = load float, float* %alfa181, align 4, !dbg !4575
  %163 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4576
  %alfa182 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %163, i32 0, i32 1, !dbg !4577
  store float %162, float* %alfa182, align 4, !dbg !4578
  br label %if.end183, !dbg !4579

if.end183:                                        ; preds = %if.then180, %land.lhs.true178, %for.end174
  %164 = load float*, float** %fp, align 8, !dbg !4580
  %add.ptr184 = getelementptr inbounds float, float* %164, i64 3, !dbg !4580
  store float* %add.ptr184, float** %fp, align 8, !dbg !4580
  %165 = load i32, i32* %i, align 4, !dbg !4581
  %inc185 = add nsw i32 %165, 1, !dbg !4581
  store i32 %inc185, i32* %i, align 4, !dbg !4581
  %166 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4582
  %incdec.ptr186 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %166, i32 1, !dbg !4582
  store %struct.BezTriple* %incdec.ptr186, %struct.BezTriple** %bezt, align 8, !dbg !4582
  br label %while.cond144, !dbg !4521, !llvm.loop !4583

while.end187:                                     ; preds = %while.cond144
  br label %if.end217, !dbg !4585

if.else188:                                       ; preds = %if.then135
  %167 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4586
  %bp189 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %167, i32 0, i32 17, !dbg !4588
  %168 = load %struct.BPoint*, %struct.BPoint** %bp189, align 8, !dbg !4588
  store %struct.BPoint* %168, %struct.BPoint** %bp, align 8, !dbg !4589
  %169 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4590
  %pntsu190 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %169, i32 0, i32 6, !dbg !4591
  %170 = load i32, i32* %pntsu190, align 8, !dbg !4591
  %171 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4592
  %pntsv191 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %171, i32 0, i32 7, !dbg !4593
  %172 = load i32, i32* %pntsv191, align 4, !dbg !4593
  %mul192 = mul nsw i32 %170, %172, !dbg !4594
  store i32 %mul192, i32* %a, align 4, !dbg !4595
  br label %while.cond193, !dbg !4596

while.cond193:                                    ; preds = %if.end212, %if.else188
  %173 = load i32, i32* %a, align 4, !dbg !4597
  %dec194 = add nsw i32 %173, -1, !dbg !4597
  store i32 %dec194, i32* %a, align 4, !dbg !4597
  %tobool195 = icmp ne i32 %173, 0, !dbg !4596
  br i1 %tobool195, label %while.body196, label %while.end216, !dbg !4596

while.body196:                                    ; preds = %while.cond193
  %174 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4598
  %175 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4600
  %call197 = call %struct.BPoint* @getKeyIndexOrig_bp(%struct.EditNurb* %174, %struct.BPoint* %175), !dbg !4601
  store %struct.BPoint* %call197, %struct.BPoint** %oldbp, align 8, !dbg !4602
  %176 = load float*, float** %fp, align 8, !dbg !4603
  %177 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4604
  %vec198 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %177, i32 0, i32 0, !dbg !4605
  %arraydecay199 = getelementptr inbounds [4 x float], [4 x float]* %vec198, i64 0, i64 0, !dbg !4604
  call void @copy_v3_v3(float* %176, float* %arraydecay199), !dbg !4606
  %178 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4607
  %alfa200 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %178, i32 0, i32 1, !dbg !4608
  %179 = load float, float* %alfa200, align 4, !dbg !4608
  %180 = load float*, float** %fp, align 8, !dbg !4609
  %arrayidx201 = getelementptr inbounds float, float* %180, i64 3, !dbg !4609
  store float %179, float* %arrayidx201, align 4, !dbg !4610
  %181 = load i32, i32* %restore, align 4, !dbg !4611
  %tobool202 = icmp ne i32 %181, 0, !dbg !4611
  br i1 %tobool202, label %land.lhs.true203, label %if.end212, !dbg !4613

land.lhs.true203:                                 ; preds = %while.body196
  %182 = load %struct.BPoint*, %struct.BPoint** %oldbp, align 8, !dbg !4614
  %tobool204 = icmp ne %struct.BPoint* %182, null, !dbg !4614
  br i1 %tobool204, label %if.then205, label %if.end212, !dbg !4615

if.then205:                                       ; preds = %land.lhs.true203
  %183 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4616
  %vec206 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %183, i32 0, i32 0, !dbg !4618
  %arraydecay207 = getelementptr inbounds [4 x float], [4 x float]* %vec206, i64 0, i64 0, !dbg !4616
  %184 = load %struct.BPoint*, %struct.BPoint** %oldbp, align 8, !dbg !4619
  %vec208 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %184, i32 0, i32 0, !dbg !4620
  %arraydecay209 = getelementptr inbounds [4 x float], [4 x float]* %vec208, i64 0, i64 0, !dbg !4619
  call void @copy_v3_v3(float* %arraydecay207, float* %arraydecay209), !dbg !4621
  %185 = load %struct.BPoint*, %struct.BPoint** %oldbp, align 8, !dbg !4622
  %alfa210 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %185, i32 0, i32 1, !dbg !4623
  %186 = load float, float* %alfa210, align 4, !dbg !4623
  %187 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4624
  %alfa211 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %187, i32 0, i32 1, !dbg !4625
  store float %186, float* %alfa211, align 4, !dbg !4626
  br label %if.end212, !dbg !4627

if.end212:                                        ; preds = %if.then205, %land.lhs.true203, %while.body196
  %188 = load float*, float** %fp, align 8, !dbg !4628
  %add.ptr213 = getelementptr inbounds float, float* %188, i64 4, !dbg !4628
  store float* %add.ptr213, float** %fp, align 8, !dbg !4628
  %189 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4629
  %incdec.ptr214 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %189, i32 1, !dbg !4629
  store %struct.BPoint* %incdec.ptr214, %struct.BPoint** %bp, align 8, !dbg !4629
  %190 = load i32, i32* %i, align 4, !dbg !4630
  %add215 = add nsw i32 %190, 2, !dbg !4630
  store i32 %add215, i32* %i, align 4, !dbg !4630
  br label %while.cond193, !dbg !4596, !llvm.loop !4631

while.end216:                                     ; preds = %while.cond193
  br label %if.end217

if.end217:                                        ; preds = %while.end216, %while.end187
  br label %if.end324, !dbg !4633

if.else218:                                       ; preds = %while.body132
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4634, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.declare(metadata float** %curofp, metadata !4637, metadata !DIExpression()), !dbg !4640
  %191 = load float*, float** %oldkey, align 8, !dbg !4641
  %tobool219 = icmp ne float* %191, null, !dbg !4641
  br i1 %tobool219, label %if.then220, label %if.end323, !dbg !4643

if.then220:                                       ; preds = %if.else218
  %192 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4644
  %bezt221 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %192, i32 0, i32 18, !dbg !4647
  %193 = load %struct.BezTriple*, %struct.BezTriple** %bezt221, align 8, !dbg !4647
  %tobool222 = icmp ne %struct.BezTriple* %193, null, !dbg !4644
  br i1 %tobool222, label %if.then223, label %if.else283, !dbg !4648

if.then223:                                       ; preds = %if.then220
  %194 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4649
  %bezt224 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %194, i32 0, i32 18, !dbg !4651
  %195 = load %struct.BezTriple*, %struct.BezTriple** %bezt224, align 8, !dbg !4651
  store %struct.BezTriple* %195, %struct.BezTriple** %bezt, align 8, !dbg !4652
  %196 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4653
  %pntsu225 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %196, i32 0, i32 6, !dbg !4654
  %197 = load i32, i32* %pntsu225, align 8, !dbg !4654
  store i32 %197, i32* %a, align 4, !dbg !4655
  br label %while.cond226, !dbg !4656

while.cond226:                                    ; preds = %if.end280, %if.then223
  %198 = load i32, i32* %a, align 4, !dbg !4657
  %dec227 = add nsw i32 %198, -1, !dbg !4657
  store i32 %dec227, i32* %a, align 4, !dbg !4657
  %tobool228 = icmp ne i32 %198, 0, !dbg !4656
  br i1 %tobool228, label %while.body229, label %while.end282, !dbg !4656

while.body229:                                    ; preds = %while.cond226
  %199 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4658
  %200 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4660
  %201 = bitcast %struct.BezTriple* %200 to i8*, !dbg !4660
  %call230 = call i32 @getKeyIndexOrig_keyIndex(%struct.EditNurb* %199, i8* %201), !dbg !4661
  store i32 %call230, i32* %index, align 4, !dbg !4662
  %202 = load i32, i32* %index, align 4, !dbg !4663
  %cmp231 = icmp sge i32 %202, 0, !dbg !4665
  br i1 %cmp231, label %if.then233, label %if.else262, !dbg !4666

if.then233:                                       ; preds = %while.body229
  call void @llvm.dbg.declare(metadata i32* %j234, metadata !4667, metadata !DIExpression()), !dbg !4669
  %203 = load float*, float** %ofp, align 8, !dbg !4670
  %204 = load i32, i32* %index, align 4, !dbg !4671
  %idx.ext = sext i32 %204 to i64, !dbg !4672
  %add.ptr235 = getelementptr inbounds float, float* %203, i64 %idx.ext, !dbg !4672
  store float* %add.ptr235, float** %curofp, align 8, !dbg !4673
  store i32 0, i32* %j234, align 4, !dbg !4674
  br label %for.cond236, !dbg !4676

for.cond236:                                      ; preds = %for.inc248, %if.then233
  %205 = load i32, i32* %j234, align 4, !dbg !4677
  %cmp237 = icmp slt i32 %205, 3, !dbg !4679
  br i1 %cmp237, label %for.body239, label %for.end251, !dbg !4680

for.body239:                                      ; preds = %for.cond236
  %206 = load float*, float** %fp, align 8, !dbg !4681
  %207 = load float*, float** %curofp, align 8, !dbg !4683
  call void @copy_v3_v3(float* %206, float* %207), !dbg !4684
  %208 = load i32, i32* %apply_offset, align 4, !dbg !4685
  %tobool240 = icmp ne i32 %208, 0, !dbg !4685
  br i1 %tobool240, label %if.then241, label %if.end245, !dbg !4687

if.then241:                                       ; preds = %for.body239
  %209 = load float*, float** %fp, align 8, !dbg !4688
  %210 = load [3 x float]*, [3 x float]** %ofs, align 8, !dbg !4690
  %211 = load i32, i32* %i, align 4, !dbg !4691
  %idxprom242 = sext i32 %211 to i64, !dbg !4690
  %arrayidx243 = getelementptr inbounds [3 x float], [3 x float]* %210, i64 %idxprom242, !dbg !4690
  %arraydecay244 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx243, i64 0, i64 0, !dbg !4690
  call void @add_v3_v3(float* %209, float* %arraydecay244), !dbg !4692
  br label %if.end245, !dbg !4693

if.end245:                                        ; preds = %if.then241, %for.body239
  %212 = load float*, float** %fp, align 8, !dbg !4694
  %add.ptr246 = getelementptr inbounds float, float* %212, i64 3, !dbg !4694
  store float* %add.ptr246, float** %fp, align 8, !dbg !4694
  %213 = load float*, float** %curofp, align 8, !dbg !4695
  %add.ptr247 = getelementptr inbounds float, float* %213, i64 3, !dbg !4695
  store float* %add.ptr247, float** %curofp, align 8, !dbg !4695
  br label %for.inc248, !dbg !4696

for.inc248:                                       ; preds = %if.end245
  %214 = load i32, i32* %j234, align 4, !dbg !4697
  %inc249 = add nsw i32 %214, 1, !dbg !4697
  store i32 %inc249, i32* %j234, align 4, !dbg !4697
  %215 = load i32, i32* %i, align 4, !dbg !4698
  %inc250 = add nsw i32 %215, 1, !dbg !4698
  store i32 %inc250, i32* %i, align 4, !dbg !4698
  br label %for.cond236, !dbg !4699, !llvm.loop !4700

for.end251:                                       ; preds = %for.cond236
  %216 = load float*, float** %curofp, align 8, !dbg !4702
  %arrayidx252 = getelementptr inbounds float, float* %216, i64 0, !dbg !4702
  %217 = load float, float* %arrayidx252, align 4, !dbg !4702
  %218 = load float*, float** %fp, align 8, !dbg !4703
  %arrayidx253 = getelementptr inbounds float, float* %218, i64 0, !dbg !4703
  store float %217, float* %arrayidx253, align 4, !dbg !4704
  %219 = load i32, i32* %apply_offset, align 4, !dbg !4705
  %tobool254 = icmp ne i32 %219, 0, !dbg !4705
  br i1 %tobool254, label %if.then255, label %if.end260, !dbg !4707

if.then255:                                       ; preds = %for.end251
  %220 = load float*, float** %fp, align 8, !dbg !4708
  %221 = load [3 x float]*, [3 x float]** %ofs, align 8, !dbg !4710
  %222 = load i32, i32* %i, align 4, !dbg !4711
  %idxprom256 = sext i32 %222 to i64, !dbg !4710
  %arrayidx257 = getelementptr inbounds [3 x float], [3 x float]* %221, i64 %idxprom256, !dbg !4710
  %arraydecay258 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx257, i64 0, i64 0, !dbg !4710
  call void @add_v3_v3(float* %220, float* %arraydecay258), !dbg !4712
  %223 = load i32, i32* %i, align 4, !dbg !4713
  %inc259 = add nsw i32 %223, 1, !dbg !4713
  store i32 %inc259, i32* %i, align 4, !dbg !4713
  br label %if.end260, !dbg !4714

if.end260:                                        ; preds = %if.then255, %for.end251
  %224 = load float*, float** %fp, align 8, !dbg !4715
  %add.ptr261 = getelementptr inbounds float, float* %224, i64 3, !dbg !4715
  store float* %add.ptr261, float** %fp, align 8, !dbg !4715
  br label %if.end280, !dbg !4716

if.else262:                                       ; preds = %while.body229
  call void @llvm.dbg.declare(metadata i32* %j263, metadata !4717, metadata !DIExpression()), !dbg !4719
  store i32 0, i32* %j263, align 4, !dbg !4720
  br label %for.cond264, !dbg !4722

for.cond264:                                      ; preds = %for.inc273, %if.else262
  %225 = load i32, i32* %j263, align 4, !dbg !4723
  %cmp265 = icmp slt i32 %225, 3, !dbg !4725
  br i1 %cmp265, label %for.body267, label %for.end276, !dbg !4726

for.body267:                                      ; preds = %for.cond264
  %226 = load float*, float** %fp, align 8, !dbg !4727
  %227 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4729
  %vec268 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %227, i32 0, i32 0, !dbg !4730
  %228 = load i32, i32* %j263, align 4, !dbg !4731
  %idxprom269 = sext i32 %228 to i64, !dbg !4729
  %arrayidx270 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec268, i64 0, i64 %idxprom269, !dbg !4729
  %arraydecay271 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx270, i64 0, i64 0, !dbg !4729
  call void @copy_v3_v3(float* %226, float* %arraydecay271), !dbg !4732
  %229 = load float*, float** %fp, align 8, !dbg !4733
  %add.ptr272 = getelementptr inbounds float, float* %229, i64 3, !dbg !4733
  store float* %add.ptr272, float** %fp, align 8, !dbg !4733
  br label %for.inc273, !dbg !4734

for.inc273:                                       ; preds = %for.body267
  %230 = load i32, i32* %j263, align 4, !dbg !4735
  %inc274 = add nsw i32 %230, 1, !dbg !4735
  store i32 %inc274, i32* %j263, align 4, !dbg !4735
  %231 = load i32, i32* %i, align 4, !dbg !4736
  %inc275 = add nsw i32 %231, 1, !dbg !4736
  store i32 %inc275, i32* %i, align 4, !dbg !4736
  br label %for.cond264, !dbg !4737, !llvm.loop !4738

for.end276:                                       ; preds = %for.cond264
  %232 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4740
  %alfa277 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %232, i32 0, i32 1, !dbg !4741
  %233 = load float, float* %alfa277, align 4, !dbg !4741
  %234 = load float*, float** %fp, align 8, !dbg !4742
  %arrayidx278 = getelementptr inbounds float, float* %234, i64 0, !dbg !4742
  store float %233, float* %arrayidx278, align 4, !dbg !4743
  %235 = load float*, float** %fp, align 8, !dbg !4744
  %add.ptr279 = getelementptr inbounds float, float* %235, i64 3, !dbg !4744
  store float* %add.ptr279, float** %fp, align 8, !dbg !4744
  br label %if.end280

if.end280:                                        ; preds = %for.end276, %if.end260
  %236 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4745
  %incdec.ptr281 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %236, i32 1, !dbg !4745
  store %struct.BezTriple* %incdec.ptr281, %struct.BezTriple** %bezt, align 8, !dbg !4745
  br label %while.cond226, !dbg !4656, !llvm.loop !4746

while.end282:                                     ; preds = %while.cond226
  br label %if.end322, !dbg !4748

if.else283:                                       ; preds = %if.then220
  %237 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4749
  %bp284 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %237, i32 0, i32 17, !dbg !4751
  %238 = load %struct.BPoint*, %struct.BPoint** %bp284, align 8, !dbg !4751
  store %struct.BPoint* %238, %struct.BPoint** %bp, align 8, !dbg !4752
  %239 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4753
  %pntsu285 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %239, i32 0, i32 6, !dbg !4754
  %240 = load i32, i32* %pntsu285, align 8, !dbg !4754
  %241 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4755
  %pntsv286 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %241, i32 0, i32 7, !dbg !4756
  %242 = load i32, i32* %pntsv286, align 4, !dbg !4756
  %mul287 = mul nsw i32 %240, %242, !dbg !4757
  store i32 %mul287, i32* %a, align 4, !dbg !4758
  br label %while.cond288, !dbg !4759

while.cond288:                                    ; preds = %if.end317, %if.else283
  %243 = load i32, i32* %a, align 4, !dbg !4760
  %dec289 = add nsw i32 %243, -1, !dbg !4760
  store i32 %dec289, i32* %a, align 4, !dbg !4760
  %tobool290 = icmp ne i32 %243, 0, !dbg !4759
  br i1 %tobool290, label %while.body291, label %while.end321, !dbg !4759

while.body291:                                    ; preds = %while.cond288
  %244 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4761
  %245 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4763
  %246 = bitcast %struct.BPoint* %245 to i8*, !dbg !4763
  %call292 = call i32 @getKeyIndexOrig_keyIndex(%struct.EditNurb* %244, i8* %246), !dbg !4764
  store i32 %call292, i32* %index, align 4, !dbg !4765
  %247 = load i32, i32* %index, align 4, !dbg !4766
  %cmp293 = icmp sge i32 %247, 0, !dbg !4768
  br i1 %cmp293, label %if.then295, label %if.else312, !dbg !4769

if.then295:                                       ; preds = %while.body291
  %248 = load float*, float** %ofp, align 8, !dbg !4770
  %249 = load i32, i32* %index, align 4, !dbg !4772
  %idx.ext296 = sext i32 %249 to i64, !dbg !4773
  %add.ptr297 = getelementptr inbounds float, float* %248, i64 %idx.ext296, !dbg !4773
  store float* %add.ptr297, float** %curofp, align 8, !dbg !4774
  %250 = load float*, float** %fp, align 8, !dbg !4775
  %251 = load float*, float** %curofp, align 8, !dbg !4776
  call void @copy_v3_v3(float* %250, float* %251), !dbg !4777
  %252 = load float*, float** %curofp, align 8, !dbg !4778
  %arrayidx298 = getelementptr inbounds float, float* %252, i64 3, !dbg !4778
  %253 = load float, float* %arrayidx298, align 4, !dbg !4778
  %254 = load float*, float** %fp, align 8, !dbg !4779
  %arrayidx299 = getelementptr inbounds float, float* %254, i64 3, !dbg !4779
  store float %253, float* %arrayidx299, align 4, !dbg !4780
  %255 = load i32, i32* %apply_offset, align 4, !dbg !4781
  %tobool300 = icmp ne i32 %255, 0, !dbg !4781
  br i1 %tobool300, label %if.then301, label %if.end311, !dbg !4783

if.then301:                                       ; preds = %if.then295
  %256 = load float*, float** %fp, align 8, !dbg !4784
  %257 = load [3 x float]*, [3 x float]** %ofs, align 8, !dbg !4786
  %258 = load i32, i32* %i, align 4, !dbg !4787
  %idxprom302 = sext i32 %258 to i64, !dbg !4786
  %arrayidx303 = getelementptr inbounds [3 x float], [3 x float]* %257, i64 %idxprom302, !dbg !4786
  %arraydecay304 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx303, i64 0, i64 0, !dbg !4786
  call void @add_v3_v3(float* %256, float* %arraydecay304), !dbg !4788
  %259 = load [3 x float]*, [3 x float]** %ofs, align 8, !dbg !4789
  %260 = load i32, i32* %i, align 4, !dbg !4790
  %add305 = add nsw i32 %260, 1, !dbg !4791
  %idxprom306 = sext i32 %add305 to i64, !dbg !4789
  %arrayidx307 = getelementptr inbounds [3 x float], [3 x float]* %259, i64 %idxprom306, !dbg !4789
  %arrayidx308 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx307, i64 0, i64 0, !dbg !4789
  %261 = load float, float* %arrayidx308, align 4, !dbg !4789
  %262 = load float*, float** %fp, align 8, !dbg !4792
  %arrayidx309 = getelementptr inbounds float, float* %262, i64 3, !dbg !4792
  %263 = load float, float* %arrayidx309, align 4, !dbg !4793
  %add310 = fadd float %263, %261, !dbg !4793
  store float %add310, float* %arrayidx309, align 4, !dbg !4793
  br label %if.end311, !dbg !4794

if.end311:                                        ; preds = %if.then301, %if.then295
  br label %if.end317, !dbg !4795

if.else312:                                       ; preds = %while.body291
  %264 = load float*, float** %fp, align 8, !dbg !4796
  %265 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4798
  %vec313 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %265, i32 0, i32 0, !dbg !4799
  %arraydecay314 = getelementptr inbounds [4 x float], [4 x float]* %vec313, i64 0, i64 0, !dbg !4798
  call void @copy_v3_v3(float* %264, float* %arraydecay314), !dbg !4800
  %266 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4801
  %alfa315 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %266, i32 0, i32 1, !dbg !4802
  %267 = load float, float* %alfa315, align 4, !dbg !4802
  %268 = load float*, float** %fp, align 8, !dbg !4803
  %arrayidx316 = getelementptr inbounds float, float* %268, i64 3, !dbg !4803
  store float %267, float* %arrayidx316, align 4, !dbg !4804
  br label %if.end317

if.end317:                                        ; preds = %if.else312, %if.end311
  %269 = load float*, float** %fp, align 8, !dbg !4805
  %add.ptr318 = getelementptr inbounds float, float* %269, i64 4, !dbg !4805
  store float* %add.ptr318, float** %fp, align 8, !dbg !4805
  %270 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4806
  %incdec.ptr319 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %270, i32 1, !dbg !4806
  store %struct.BPoint* %incdec.ptr319, %struct.BPoint** %bp, align 8, !dbg !4806
  %271 = load i32, i32* %i, align 4, !dbg !4807
  %add320 = add nsw i32 %271, 2, !dbg !4807
  store i32 %add320, i32* %i, align 4, !dbg !4807
  br label %while.cond288, !dbg !4759, !llvm.loop !4808

while.end321:                                     ; preds = %while.cond288
  br label %if.end322

if.end322:                                        ; preds = %while.end321, %while.end282
  br label %if.end323, !dbg !4810

if.end323:                                        ; preds = %if.end322, %if.else218
  br label %if.end324

if.end324:                                        ; preds = %if.end323, %if.end217
  %272 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4811
  %next325 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %272, i32 0, i32 0, !dbg !4812
  %273 = load %struct.Nurb*, %struct.Nurb** %next325, align 8, !dbg !4812
  store %struct.Nurb* %273, %struct.Nurb** %nu, align 8, !dbg !4813
  br label %while.cond130, !dbg !4494, !llvm.loop !4814

while.end326:                                     ; preds = %while.cond130
  %274 = load i32, i32* %apply_offset, align 4, !dbg !4816
  %tobool327 = icmp ne i32 %274, 0, !dbg !4816
  br i1 %tobool327, label %if.then328, label %if.end330, !dbg !4818

if.then328:                                       ; preds = %while.end326
  %275 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4819
  %nurbs329 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %275, i32 0, i32 0, !dbg !4821
  %276 = load float*, float** %newkey, align 8, !dbg !4822
  call void @calc_keyHandles(%struct.ListBase* %nurbs329, float* %276), !dbg !4823
  br label %if.end330, !dbg !4824

if.end330:                                        ; preds = %if.then328, %while.end326
  %277 = load i32, i32* %totvert, align 4, !dbg !4825
  %278 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !4826
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %278, i32 0, i32 8, !dbg !4827
  store i32 %277, i32* %totelem, align 8, !dbg !4828
  %279 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !4829
  %data331 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %279, i32 0, i32 10, !dbg !4831
  %280 = load i8*, i8** %data331, align 8, !dbg !4831
  %tobool332 = icmp ne i8* %280, null, !dbg !4829
  br i1 %tobool332, label %if.then333, label %if.end335, !dbg !4832

if.then333:                                       ; preds = %if.end330
  %281 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4833
  %282 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !4834
  %data334 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %282, i32 0, i32 10, !dbg !4835
  %283 = load i8*, i8** %data334, align 8, !dbg !4835
  call void %281(i8* %283), !dbg !4833
  br label %if.end335, !dbg !4833

if.end335:                                        ; preds = %if.then333, %if.end330
  %284 = load float*, float** %newkey, align 8, !dbg !4836
  %285 = bitcast float* %284 to i8*, !dbg !4836
  %286 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !4837
  %data336 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %286, i32 0, i32 10, !dbg !4838
  store i8* %285, i8** %data336, align 8, !dbg !4839
  %287 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !4840
  %next337 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %287, i32 0, i32 0, !dbg !4841
  %288 = load %struct.KeyBlock*, %struct.KeyBlock** %next337, align 8, !dbg !4841
  store %struct.KeyBlock* %288, %struct.KeyBlock** %currkey, align 8, !dbg !4842
  br label %while.cond111, !dbg !4458, !llvm.loop !4843

while.end338:                                     ; preds = %while.cond111
  %289 = load [3 x float]*, [3 x float]** %ofs, align 8, !dbg !4845
  %tobool339 = icmp ne [3 x float]* %289, null, !dbg !4845
  br i1 %tobool339, label %if.then340, label %if.end341, !dbg !4847

if.then340:                                       ; preds = %while.end338
  %290 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4848
  %291 = load [3 x float]*, [3 x float]** %ofs, align 8, !dbg !4849
  %292 = bitcast [3 x float]* %291 to i8*, !dbg !4849
  call void %290(i8* %292), !dbg !4848
  br label %if.end341, !dbg !4848

if.end341:                                        ; preds = %if.then340, %while.end338
  br label %if.end342, !dbg !4850

if.end342:                                        ; preds = %if.end341, %entry
  ret void, !dbg !4851
}

declare dso_local void @BKE_nurbList_free(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @make_editNurb(%struct.Object* %obedit) #0 !dbg !4852 {
entry:
  %obedit.addr = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %editnurb = alloca %struct.EditNurb*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %newnu = alloca %struct.Nurb*, align 8
  %actkey = alloca %struct.KeyBlock*, align 8
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !4853, metadata !DIExpression()), !dbg !4854
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !4855, metadata !DIExpression()), !dbg !4856
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !4857
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !4858
  %1 = load i8*, i8** %data, align 8, !dbg !4858
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !4859
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !4856
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb, metadata !4860, metadata !DIExpression()), !dbg !4861
  %3 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4862
  %editnurb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 4, !dbg !4863
  %4 = load %struct.EditNurb*, %struct.EditNurb** %editnurb1, align 8, !dbg !4863
  store %struct.EditNurb* %4, %struct.EditNurb** %editnurb, align 8, !dbg !4861
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !4864, metadata !DIExpression()), !dbg !4865
  call void @llvm.dbg.declare(metadata %struct.Nurb** %newnu, metadata !4866, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %actkey, metadata !4868, metadata !DIExpression()), !dbg !4869
  %5 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !4870
  %type = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 3, !dbg !4870
  %6 = load i16, i16* %type, align 8, !dbg !4870
  %conv = sext i16 %6 to i32, !dbg !4870
  %cmp = icmp eq i32 %conv, 2, !dbg !4870
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4870

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !4870
  %type3 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 3, !dbg !4870
  %8 = load i16, i16* %type3, align 8, !dbg !4870
  %conv4 = sext i16 %8 to i32, !dbg !4870
  %cmp5 = icmp eq i32 %conv4, 3, !dbg !4870
  br i1 %cmp5, label %if.then, label %if.end23, !dbg !4872

if.then:                                          ; preds = %lor.lhs.false, %entry
  %9 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !4873
  %call = call %struct.KeyBlock* @BKE_keyblock_from_object(%struct.Object* %9), !dbg !4875
  store %struct.KeyBlock* %call, %struct.KeyBlock** %actkey, align 8, !dbg !4876
  %10 = load %struct.KeyBlock*, %struct.KeyBlock** %actkey, align 8, !dbg !4877
  %tobool = icmp ne %struct.KeyBlock* %10, null, !dbg !4877
  br i1 %tobool, label %if.then7, label %if.end, !dbg !4879

if.then7:                                         ; preds = %if.then
  call void @undo_editmode_clear(), !dbg !4880
  %11 = load %struct.KeyBlock*, %struct.KeyBlock** %actkey, align 8, !dbg !4882
  %12 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4883
  %13 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4884
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %13, i32 0, i32 3, !dbg !4885
  call void @BKE_key_convert_to_curve(%struct.KeyBlock* %11, %struct.Curve* %12, %struct.ListBase* %nurb), !dbg !4886
  br label %if.end, !dbg !4887

if.end:                                           ; preds = %if.then7, %if.then
  %14 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4888
  %tobool8 = icmp ne %struct.EditNurb* %14, null, !dbg !4888
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !4890

if.then9:                                         ; preds = %if.end
  %15 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4891
  %nurbs = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %15, i32 0, i32 0, !dbg !4893
  call void @BKE_nurbList_free(%struct.ListBase* %nurbs), !dbg !4894
  %16 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4895
  call void @BKE_curve_editNurb_keyIndex_free(%struct.EditNurb* %16), !dbg !4896
  %17 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4897
  %keyindex = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %17, i32 0, i32 1, !dbg !4898
  store %struct.GHash* null, %struct.GHash** %keyindex, align 8, !dbg !4899
  br label %if.end12, !dbg !4900

if.else:                                          ; preds = %if.end
  %18 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4901
  %call10 = call i8* %18(i64 32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0)), !dbg !4901
  %19 = bitcast i8* %call10 to %struct.EditNurb*, !dbg !4901
  store %struct.EditNurb* %19, %struct.EditNurb** %editnurb, align 8, !dbg !4903
  %20 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4904
  %21 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4905
  %editnurb11 = getelementptr inbounds %struct.Curve, %struct.Curve* %21, i32 0, i32 4, !dbg !4906
  store %struct.EditNurb* %20, %struct.EditNurb** %editnurb11, align 8, !dbg !4907
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then9
  %22 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4908
  %nurb13 = getelementptr inbounds %struct.Curve, %struct.Curve* %22, i32 0, i32 3, !dbg !4909
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb13, i32 0, i32 0, !dbg !4910
  %23 = load i8*, i8** %first, align 8, !dbg !4910
  %24 = bitcast i8* %23 to %struct.Nurb*, !dbg !4908
  store %struct.Nurb* %24, %struct.Nurb** %nu, align 8, !dbg !4911
  br label %while.cond, !dbg !4912

while.cond:                                       ; preds = %while.body, %if.end12
  %25 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4913
  %tobool14 = icmp ne %struct.Nurb* %25, null, !dbg !4912
  br i1 %tobool14, label %while.body, label %while.end, !dbg !4912

while.body:                                       ; preds = %while.cond
  %26 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4914
  %call15 = call %struct.Nurb* @BKE_nurb_duplicate(%struct.Nurb* %26), !dbg !4916
  store %struct.Nurb* %call15, %struct.Nurb** %newnu, align 8, !dbg !4917
  %27 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !4918
  call void @BKE_nurb_test2D(%struct.Nurb* %27), !dbg !4919
  %28 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4920
  %nurbs16 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %28, i32 0, i32 0, !dbg !4921
  %29 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !4922
  %30 = bitcast %struct.Nurb* %29 to i8*, !dbg !4922
  call void @BLI_addtail(%struct.ListBase* %nurbs16, i8* %30), !dbg !4923
  %31 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4924
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %31, i32 0, i32 0, !dbg !4925
  %32 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !4925
  store %struct.Nurb* %32, %struct.Nurb** %nu, align 8, !dbg !4926
  br label %while.cond, !dbg !4912, !llvm.loop !4927

while.end:                                        ; preds = %while.cond
  %33 = load %struct.KeyBlock*, %struct.KeyBlock** %actkey, align 8, !dbg !4929
  %tobool17 = icmp ne %struct.KeyBlock* %33, null, !dbg !4929
  br i1 %tobool17, label %if.then18, label %if.end21, !dbg !4931

if.then18:                                        ; preds = %while.end
  %34 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !4932
  %shapenr = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 115, !dbg !4933
  %35 = load i16, i16* %shapenr, align 2, !dbg !4933
  %conv19 = sext i16 %35 to i32, !dbg !4932
  %36 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4934
  %shapenr20 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %36, i32 0, i32 2, !dbg !4935
  store i32 %conv19, i32* %shapenr20, align 8, !dbg !4936
  br label %if.end21, !dbg !4934

if.end21:                                         ; preds = %if.then18, %while.end
  %37 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4937
  %38 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4938
  %nurb22 = getelementptr inbounds %struct.Curve, %struct.Curve* %38, i32 0, i32 3, !dbg !4939
  call void @init_editNurb_keyIndex(%struct.EditNurb* %37, %struct.ListBase* %nurb22), !dbg !4940
  br label %if.end23, !dbg !4941

if.end23:                                         ; preds = %if.end21, %lor.lhs.false
  ret void, !dbg !4942
}

declare dso_local %struct.KeyBlock* @BKE_keyblock_from_object(%struct.Object*) #2

declare dso_local void @undo_editmode_clear() #2

declare dso_local void @BKE_key_convert_to_curve(%struct.KeyBlock*, %struct.Curve*, %struct.ListBase*) #2

declare dso_local void @BKE_curve_editNurb_keyIndex_free(%struct.EditNurb*) #2

declare dso_local void @BKE_nurb_test2D(%struct.Nurb*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @init_editNurb_keyIndex(%struct.EditNurb* %editnurb, %struct.ListBase* %origBase) #0 !dbg !4943 {
entry:
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %origBase.addr = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %orignu = alloca %struct.Nurb*, align 8
  %gh = alloca %struct.GHash*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %origbezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %origbp = alloca %struct.BPoint*, align 8
  %keyIndex = alloca %struct.CVKeyIndex*, align 8
  %a = alloca i32, align 4
  %key_index = alloca i32, align 4
  %nu_index = alloca i32, align 4
  %pt_index = alloca i32, align 4
  %vertex_index = alloca i32, align 4
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !4946, metadata !DIExpression()), !dbg !4947
  store %struct.ListBase* %origBase, %struct.ListBase** %origBase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %origBase.addr, metadata !4948, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !4950, metadata !DIExpression()), !dbg !4951
  %0 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !4952
  %nurbs = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %0, i32 0, i32 0, !dbg !4953
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurbs, i32 0, i32 0, !dbg !4954
  %1 = load i8*, i8** %first, align 8, !dbg !4954
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !4952
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !4951
  call void @llvm.dbg.declare(metadata %struct.Nurb** %orignu, metadata !4955, metadata !DIExpression()), !dbg !4956
  %3 = load %struct.ListBase*, %struct.ListBase** %origBase.addr, align 8, !dbg !4957
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %3, i32 0, i32 0, !dbg !4958
  %4 = load i8*, i8** %first1, align 8, !dbg !4958
  %5 = bitcast i8* %4 to %struct.Nurb*, !dbg !4957
  store %struct.Nurb* %5, %struct.Nurb** %orignu, align 8, !dbg !4956
  call void @llvm.dbg.declare(metadata %struct.GHash** %gh, metadata !4959, metadata !DIExpression()), !dbg !4962
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !4963, metadata !DIExpression()), !dbg !4964
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %origbezt, metadata !4965, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !4967, metadata !DIExpression()), !dbg !4968
  call void @llvm.dbg.declare(metadata %struct.BPoint** %origbp, metadata !4969, metadata !DIExpression()), !dbg !4970
  call void @llvm.dbg.declare(metadata %struct.CVKeyIndex** %keyIndex, metadata !4971, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4973, metadata !DIExpression()), !dbg !4974
  call void @llvm.dbg.declare(metadata i32* %key_index, metadata !4975, metadata !DIExpression()), !dbg !4976
  store i32 0, i32* %key_index, align 4, !dbg !4976
  call void @llvm.dbg.declare(metadata i32* %nu_index, metadata !4977, metadata !DIExpression()), !dbg !4978
  store i32 0, i32* %nu_index, align 4, !dbg !4978
  call void @llvm.dbg.declare(metadata i32* %pt_index, metadata !4979, metadata !DIExpression()), !dbg !4980
  store i32 0, i32* %pt_index, align 4, !dbg !4980
  call void @llvm.dbg.declare(metadata i32* %vertex_index, metadata !4981, metadata !DIExpression()), !dbg !4982
  store i32 0, i32* %vertex_index, align 4, !dbg !4982
  %6 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !4983
  %keyindex = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %6, i32 0, i32 1, !dbg !4985
  %7 = load %struct.GHash*, %struct.GHash** %keyindex, align 8, !dbg !4985
  %tobool = icmp ne %struct.GHash* %7, null, !dbg !4983
  br i1 %tobool, label %if.then, label %if.end, !dbg !4986

if.then:                                          ; preds = %entry
  br label %return, !dbg !4987

if.end:                                           ; preds = %entry
  %call = call %struct.GHash* @BLI_ghash_ptr_new(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.191, i64 0, i64 0)), !dbg !4988
  store %struct.GHash* %call, %struct.GHash** %gh, align 8, !dbg !4989
  br label %while.cond, !dbg !4990

while.cond:                                       ; preds = %if.end28, %if.end
  %8 = load %struct.Nurb*, %struct.Nurb** %orignu, align 8, !dbg !4991
  %tobool2 = icmp ne %struct.Nurb* %8, null, !dbg !4990
  br i1 %tobool2, label %while.body, label %while.end31, !dbg !4990

while.body:                                       ; preds = %while.cond
  %9 = load %struct.Nurb*, %struct.Nurb** %orignu, align 8, !dbg !4992
  %bezt3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 18, !dbg !4995
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt3, align 8, !dbg !4995
  %tobool4 = icmp ne %struct.BezTriple* %10, null, !dbg !4992
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !4996

if.then5:                                         ; preds = %while.body
  %11 = load %struct.Nurb*, %struct.Nurb** %orignu, align 8, !dbg !4997
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 6, !dbg !4999
  %12 = load i32, i32* %pntsu, align 8, !dbg !4999
  store i32 %12, i32* %a, align 4, !dbg !5000
  %13 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5001
  %bezt6 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 18, !dbg !5002
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt6, align 8, !dbg !5002
  store %struct.BezTriple* %14, %struct.BezTriple** %bezt, align 8, !dbg !5003
  %15 = load %struct.Nurb*, %struct.Nurb** %orignu, align 8, !dbg !5004
  %bezt7 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %15, i32 0, i32 18, !dbg !5005
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt7, align 8, !dbg !5005
  store %struct.BezTriple* %16, %struct.BezTriple** %origbezt, align 8, !dbg !5006
  store i32 0, i32* %pt_index, align 4, !dbg !5007
  br label %while.cond8, !dbg !5008

while.cond8:                                      ; preds = %while.body10, %if.then5
  %17 = load i32, i32* %a, align 4, !dbg !5009
  %dec = add nsw i32 %17, -1, !dbg !5009
  store i32 %dec, i32* %a, align 4, !dbg !5009
  %tobool9 = icmp ne i32 %17, 0, !dbg !5008
  br i1 %tobool9, label %while.body10, label %while.end, !dbg !5008

while.body10:                                     ; preds = %while.cond8
  %18 = load %struct.BezTriple*, %struct.BezTriple** %origbezt, align 8, !dbg !5010
  %19 = bitcast %struct.BezTriple* %18 to i8*, !dbg !5010
  %20 = load i32, i32* %key_index, align 4, !dbg !5012
  %21 = load i32, i32* %nu_index, align 4, !dbg !5013
  %22 = load i32, i32* %pt_index, align 4, !dbg !5014
  %23 = load i32, i32* %vertex_index, align 4, !dbg !5015
  %24 = load %struct.Nurb*, %struct.Nurb** %orignu, align 8, !dbg !5016
  %call11 = call %struct.CVKeyIndex* @init_cvKeyIndex(i8* %19, i32 %20, i32 %21, i32 %22, i32 %23, %struct.Nurb* %24), !dbg !5017
  store %struct.CVKeyIndex* %call11, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !5018
  %25 = load %struct.GHash*, %struct.GHash** %gh, align 8, !dbg !5019
  %26 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5020
  %27 = bitcast %struct.BezTriple* %26 to i8*, !dbg !5020
  %28 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !5021
  %29 = bitcast %struct.CVKeyIndex* %28 to i8*, !dbg !5021
  call void @BLI_ghash_insert(%struct.GHash* %25, i8* %27, i8* %29), !dbg !5022
  %30 = load i32, i32* %key_index, align 4, !dbg !5023
  %add = add nsw i32 %30, 12, !dbg !5023
  store i32 %add, i32* %key_index, align 4, !dbg !5023
  %31 = load i32, i32* %vertex_index, align 4, !dbg !5024
  %add12 = add nsw i32 %31, 3, !dbg !5024
  store i32 %add12, i32* %vertex_index, align 4, !dbg !5024
  %32 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5025
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %32, i32 1, !dbg !5025
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !5025
  %33 = load %struct.BezTriple*, %struct.BezTriple** %origbezt, align 8, !dbg !5026
  %incdec.ptr13 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %33, i32 1, !dbg !5026
  store %struct.BezTriple* %incdec.ptr13, %struct.BezTriple** %origbezt, align 8, !dbg !5026
  %34 = load i32, i32* %pt_index, align 4, !dbg !5027
  %inc = add nsw i32 %34, 1, !dbg !5027
  store i32 %inc, i32* %pt_index, align 4, !dbg !5027
  br label %while.cond8, !dbg !5008, !llvm.loop !5028

while.end:                                        ; preds = %while.cond8
  br label %if.end28, !dbg !5030

if.else:                                          ; preds = %while.body
  %35 = load %struct.Nurb*, %struct.Nurb** %orignu, align 8, !dbg !5031
  %pntsu14 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %35, i32 0, i32 6, !dbg !5033
  %36 = load i32, i32* %pntsu14, align 8, !dbg !5033
  %37 = load %struct.Nurb*, %struct.Nurb** %orignu, align 8, !dbg !5034
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %37, i32 0, i32 7, !dbg !5035
  %38 = load i32, i32* %pntsv, align 4, !dbg !5035
  %mul = mul nsw i32 %36, %38, !dbg !5036
  store i32 %mul, i32* %a, align 4, !dbg !5037
  %39 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5038
  %bp15 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %39, i32 0, i32 17, !dbg !5039
  %40 = load %struct.BPoint*, %struct.BPoint** %bp15, align 8, !dbg !5039
  store %struct.BPoint* %40, %struct.BPoint** %bp, align 8, !dbg !5040
  %41 = load %struct.Nurb*, %struct.Nurb** %orignu, align 8, !dbg !5041
  %bp16 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %41, i32 0, i32 17, !dbg !5042
  %42 = load %struct.BPoint*, %struct.BPoint** %bp16, align 8, !dbg !5042
  store %struct.BPoint* %42, %struct.BPoint** %origbp, align 8, !dbg !5043
  store i32 0, i32* %pt_index, align 4, !dbg !5044
  br label %while.cond17, !dbg !5045

while.cond17:                                     ; preds = %while.body20, %if.else
  %43 = load i32, i32* %a, align 4, !dbg !5046
  %dec18 = add nsw i32 %43, -1, !dbg !5046
  store i32 %dec18, i32* %a, align 4, !dbg !5046
  %tobool19 = icmp ne i32 %43, 0, !dbg !5045
  br i1 %tobool19, label %while.body20, label %while.end27, !dbg !5045

while.body20:                                     ; preds = %while.cond17
  %44 = load %struct.BPoint*, %struct.BPoint** %origbp, align 8, !dbg !5047
  %45 = bitcast %struct.BPoint* %44 to i8*, !dbg !5047
  %46 = load i32, i32* %key_index, align 4, !dbg !5049
  %47 = load i32, i32* %nu_index, align 4, !dbg !5050
  %48 = load i32, i32* %pt_index, align 4, !dbg !5051
  %49 = load i32, i32* %vertex_index, align 4, !dbg !5052
  %50 = load %struct.Nurb*, %struct.Nurb** %orignu, align 8, !dbg !5053
  %call21 = call %struct.CVKeyIndex* @init_cvKeyIndex(i8* %45, i32 %46, i32 %47, i32 %48, i32 %49, %struct.Nurb* %50), !dbg !5054
  store %struct.CVKeyIndex* %call21, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !5055
  %51 = load %struct.GHash*, %struct.GHash** %gh, align 8, !dbg !5056
  %52 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5057
  %53 = bitcast %struct.BPoint* %52 to i8*, !dbg !5057
  %54 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !5058
  %55 = bitcast %struct.CVKeyIndex* %54 to i8*, !dbg !5058
  call void @BLI_ghash_insert(%struct.GHash* %51, i8* %53, i8* %55), !dbg !5059
  %56 = load i32, i32* %key_index, align 4, !dbg !5060
  %add22 = add nsw i32 %56, 4, !dbg !5060
  store i32 %add22, i32* %key_index, align 4, !dbg !5060
  %57 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5061
  %incdec.ptr23 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %57, i32 1, !dbg !5061
  store %struct.BPoint* %incdec.ptr23, %struct.BPoint** %bp, align 8, !dbg !5061
  %58 = load %struct.BPoint*, %struct.BPoint** %origbp, align 8, !dbg !5062
  %incdec.ptr24 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %58, i32 1, !dbg !5062
  store %struct.BPoint* %incdec.ptr24, %struct.BPoint** %origbp, align 8, !dbg !5062
  %59 = load i32, i32* %pt_index, align 4, !dbg !5063
  %inc25 = add nsw i32 %59, 1, !dbg !5063
  store i32 %inc25, i32* %pt_index, align 4, !dbg !5063
  %60 = load i32, i32* %vertex_index, align 4, !dbg !5064
  %inc26 = add nsw i32 %60, 1, !dbg !5064
  store i32 %inc26, i32* %vertex_index, align 4, !dbg !5064
  br label %while.cond17, !dbg !5045, !llvm.loop !5065

while.end27:                                      ; preds = %while.cond17
  br label %if.end28

if.end28:                                         ; preds = %while.end27, %while.end
  %61 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5067
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %61, i32 0, i32 0, !dbg !5068
  %62 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !5068
  store %struct.Nurb* %62, %struct.Nurb** %nu, align 8, !dbg !5069
  %63 = load %struct.Nurb*, %struct.Nurb** %orignu, align 8, !dbg !5070
  %next29 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %63, i32 0, i32 0, !dbg !5071
  %64 = load %struct.Nurb*, %struct.Nurb** %next29, align 8, !dbg !5071
  store %struct.Nurb* %64, %struct.Nurb** %orignu, align 8, !dbg !5072
  %65 = load i32, i32* %nu_index, align 4, !dbg !5073
  %inc30 = add nsw i32 %65, 1, !dbg !5073
  store i32 %inc30, i32* %nu_index, align 4, !dbg !5073
  br label %while.cond, !dbg !4990, !llvm.loop !5074

while.end31:                                      ; preds = %while.cond
  %66 = load %struct.GHash*, %struct.GHash** %gh, align 8, !dbg !5076
  %67 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !5077
  %keyindex32 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %67, i32 0, i32 1, !dbg !5078
  store %struct.GHash* %66, %struct.GHash** %keyindex32, align 8, !dbg !5079
  br label %return, !dbg !5080

return:                                           ; preds = %while.end31, %if.then
  ret void, !dbg !5080
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @free_editNurb(%struct.Object* %obedit) #0 !dbg !5081 {
entry:
  %obedit.addr = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !5082, metadata !DIExpression()), !dbg !5083
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !5084, metadata !DIExpression()), !dbg !5085
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !5086
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !5087
  %1 = load i8*, i8** %data, align 8, !dbg !5087
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !5086
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !5085
  %3 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5088
  call void @BKE_curve_editNurb_free(%struct.Curve* %3), !dbg !5089
  ret void, !dbg !5090
}

declare dso_local void @BKE_curve_editNurb_free(%struct.Curve*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_curve_deselect_all(%struct.EditNurb* %editnurb) #0 !dbg !5091 {
entry:
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %a = alloca i32, align 4
  %bezt2 = alloca %struct.BezTriple*, align 8
  %bp15 = alloca %struct.BPoint*, align 8
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !5094, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !5096, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5098, metadata !DIExpression()), !dbg !5099
  %0 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !5100
  %nurbs = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %0, i32 0, i32 0, !dbg !5102
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurbs, i32 0, i32 0, !dbg !5103
  %1 = load i8*, i8** %first, align 8, !dbg !5103
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !5100
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !5104
  br label %for.cond, !dbg !5105

for.cond:                                         ; preds = %for.inc31, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5106
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !5108
  br i1 %tobool, label %for.body, label %for.end32, !dbg !5108

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5109
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 18, !dbg !5112
  %5 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5112
  %tobool1 = icmp ne %struct.BezTriple* %5, null, !dbg !5109
  br i1 %tobool1, label %if.then, label %if.else, !dbg !5113

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt2, metadata !5114, metadata !DIExpression()), !dbg !5116
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5117
  %bezt3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 18, !dbg !5119
  %7 = load %struct.BezTriple*, %struct.BezTriple** %bezt3, align 8, !dbg !5119
  store %struct.BezTriple* %7, %struct.BezTriple** %bezt2, align 8, !dbg !5120
  store i32 0, i32* %a, align 4, !dbg !5121
  br label %for.cond4, !dbg !5122

for.cond4:                                        ; preds = %for.inc, %if.then
  %8 = load i32, i32* %a, align 4, !dbg !5123
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5125
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 6, !dbg !5126
  %10 = load i32, i32* %pntsu, align 8, !dbg !5126
  %cmp = icmp slt i32 %8, %10, !dbg !5127
  br i1 %cmp, label %for.body5, label %for.end, !dbg !5128

for.body5:                                        ; preds = %for.cond4
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !5129
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %11, i32 0, i32 7, !dbg !5131
  %12 = load i8, i8* %f1, align 1, !dbg !5132
  %conv = zext i8 %12 to i32, !dbg !5132
  %and = and i32 %conv, -2, !dbg !5132
  %conv6 = trunc i32 %and to i8, !dbg !5132
  store i8 %conv6, i8* %f1, align 1, !dbg !5132
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !5133
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %13, i32 0, i32 8, !dbg !5134
  %14 = load i8, i8* %f2, align 4, !dbg !5135
  %conv7 = zext i8 %14 to i32, !dbg !5135
  %and8 = and i32 %conv7, -2, !dbg !5135
  %conv9 = trunc i32 %and8 to i8, !dbg !5135
  store i8 %conv9, i8* %f2, align 4, !dbg !5135
  %15 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !5136
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %15, i32 0, i32 9, !dbg !5137
  %16 = load i8, i8* %f3, align 1, !dbg !5138
  %conv10 = zext i8 %16 to i32, !dbg !5138
  %and11 = and i32 %conv10, -2, !dbg !5138
  %conv12 = trunc i32 %and11 to i8, !dbg !5138
  store i8 %conv12, i8* %f3, align 1, !dbg !5138
  br label %for.inc, !dbg !5139

for.inc:                                          ; preds = %for.body5
  %17 = load i32, i32* %a, align 4, !dbg !5140
  %inc = add nsw i32 %17, 1, !dbg !5140
  store i32 %inc, i32* %a, align 4, !dbg !5140
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !5141
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %18, i32 1, !dbg !5141
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt2, align 8, !dbg !5141
  br label %for.cond4, !dbg !5142, !llvm.loop !5143

for.end:                                          ; preds = %for.cond4
  br label %if.end30, !dbg !5145

if.else:                                          ; preds = %for.body
  %19 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5146
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %19, i32 0, i32 17, !dbg !5148
  %20 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5148
  %tobool13 = icmp ne %struct.BPoint* %20, null, !dbg !5146
  br i1 %tobool13, label %if.then14, label %if.end, !dbg !5149

if.then14:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp15, metadata !5150, metadata !DIExpression()), !dbg !5152
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5153
  %bp16 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 17, !dbg !5155
  %22 = load %struct.BPoint*, %struct.BPoint** %bp16, align 8, !dbg !5155
  store %struct.BPoint* %22, %struct.BPoint** %bp15, align 8, !dbg !5156
  store i32 0, i32* %a, align 4, !dbg !5157
  br label %for.cond17, !dbg !5158

for.cond17:                                       ; preds = %for.inc26, %if.then14
  %23 = load i32, i32* %a, align 4, !dbg !5159
  %24 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5161
  %pntsu18 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %24, i32 0, i32 6, !dbg !5162
  %25 = load i32, i32* %pntsu18, align 8, !dbg !5162
  %26 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5163
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %26, i32 0, i32 7, !dbg !5164
  %27 = load i32, i32* %pntsv, align 4, !dbg !5164
  %mul = mul nsw i32 %25, %27, !dbg !5165
  %cmp19 = icmp slt i32 %23, %mul, !dbg !5166
  br i1 %cmp19, label %for.body21, label %for.end29, !dbg !5167

for.body21:                                       ; preds = %for.cond17
  %28 = load %struct.BPoint*, %struct.BPoint** %bp15, align 8, !dbg !5168
  %f122 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %28, i32 0, i32 3, !dbg !5170
  %29 = load i16, i16* %f122, align 4, !dbg !5171
  %conv23 = sext i16 %29 to i32, !dbg !5171
  %and24 = and i32 %conv23, -2, !dbg !5171
  %conv25 = trunc i32 %and24 to i16, !dbg !5171
  store i16 %conv25, i16* %f122, align 4, !dbg !5171
  br label %for.inc26, !dbg !5172

for.inc26:                                        ; preds = %for.body21
  %30 = load i32, i32* %a, align 4, !dbg !5173
  %inc27 = add nsw i32 %30, 1, !dbg !5173
  store i32 %inc27, i32* %a, align 4, !dbg !5173
  %31 = load %struct.BPoint*, %struct.BPoint** %bp15, align 8, !dbg !5174
  %incdec.ptr28 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %31, i32 1, !dbg !5174
  store %struct.BPoint* %incdec.ptr28, %struct.BPoint** %bp15, align 8, !dbg !5174
  br label %for.cond17, !dbg !5175, !llvm.loop !5176

for.end29:                                        ; preds = %for.cond17
  br label %if.end, !dbg !5178

if.end:                                           ; preds = %for.end29, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end, %for.end
  br label %for.inc31, !dbg !5179

for.inc31:                                        ; preds = %if.end30
  %32 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5180
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %32, i32 0, i32 0, !dbg !5181
  %33 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !5181
  store %struct.Nurb* %33, %struct.Nurb** %nu, align 8, !dbg !5182
  br label %for.cond, !dbg !5183, !llvm.loop !5184

for.end32:                                        ; preds = %for.cond
  ret void, !dbg !5186
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_curve_select_all(%struct.EditNurb* %editnurb) #0 !dbg !5187 {
entry:
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %a = alloca i32, align 4
  %bezt2 = alloca %struct.BezTriple*, align 8
  %bp19 = alloca %struct.BPoint*, align 8
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !5188, metadata !DIExpression()), !dbg !5189
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !5190, metadata !DIExpression()), !dbg !5191
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5192, metadata !DIExpression()), !dbg !5193
  %0 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !5194
  %nurbs = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %0, i32 0, i32 0, !dbg !5196
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurbs, i32 0, i32 0, !dbg !5197
  %1 = load i8*, i8** %first, align 8, !dbg !5197
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !5194
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !5198
  br label %for.cond, !dbg !5199

for.cond:                                         ; preds = %for.inc42, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5200
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !5202
  br i1 %tobool, label %for.body, label %for.end43, !dbg !5202

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5203
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 18, !dbg !5206
  %5 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5206
  %tobool1 = icmp ne %struct.BezTriple* %5, null, !dbg !5203
  br i1 %tobool1, label %if.then, label %if.else, !dbg !5207

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt2, metadata !5208, metadata !DIExpression()), !dbg !5210
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5211
  %bezt3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 18, !dbg !5213
  %7 = load %struct.BezTriple*, %struct.BezTriple** %bezt3, align 8, !dbg !5213
  store %struct.BezTriple* %7, %struct.BezTriple** %bezt2, align 8, !dbg !5214
  store i32 0, i32* %a, align 4, !dbg !5215
  br label %for.cond4, !dbg !5216

for.cond4:                                        ; preds = %for.inc, %if.then
  %8 = load i32, i32* %a, align 4, !dbg !5217
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5219
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 6, !dbg !5220
  %10 = load i32, i32* %pntsu, align 8, !dbg !5220
  %cmp = icmp slt i32 %8, %10, !dbg !5221
  br i1 %cmp, label %for.body5, label %for.end, !dbg !5222

for.body5:                                        ; preds = %for.cond4
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !5223
  %hide = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %11, i32 0, i32 10, !dbg !5226
  %12 = load i8, i8* %hide, align 2, !dbg !5226
  %conv = zext i8 %12 to i32, !dbg !5223
  %cmp6 = icmp eq i32 %conv, 0, !dbg !5227
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !5228

if.then8:                                         ; preds = %for.body5
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !5229
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %13, i32 0, i32 7, !dbg !5231
  %14 = load i8, i8* %f1, align 1, !dbg !5232
  %conv9 = zext i8 %14 to i32, !dbg !5232
  %or = or i32 %conv9, 1, !dbg !5232
  %conv10 = trunc i32 %or to i8, !dbg !5232
  store i8 %conv10, i8* %f1, align 1, !dbg !5232
  %15 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !5233
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %15, i32 0, i32 8, !dbg !5234
  %16 = load i8, i8* %f2, align 4, !dbg !5235
  %conv11 = zext i8 %16 to i32, !dbg !5235
  %or12 = or i32 %conv11, 1, !dbg !5235
  %conv13 = trunc i32 %or12 to i8, !dbg !5235
  store i8 %conv13, i8* %f2, align 4, !dbg !5235
  %17 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !5236
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %17, i32 0, i32 9, !dbg !5237
  %18 = load i8, i8* %f3, align 1, !dbg !5238
  %conv14 = zext i8 %18 to i32, !dbg !5238
  %or15 = or i32 %conv14, 1, !dbg !5238
  %conv16 = trunc i32 %or15 to i8, !dbg !5238
  store i8 %conv16, i8* %f3, align 1, !dbg !5238
  br label %if.end, !dbg !5239

if.end:                                           ; preds = %if.then8, %for.body5
  br label %for.inc, !dbg !5240

for.inc:                                          ; preds = %if.end
  %19 = load i32, i32* %a, align 4, !dbg !5241
  %inc = add nsw i32 %19, 1, !dbg !5241
  store i32 %inc, i32* %a, align 4, !dbg !5241
  %20 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !5242
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %20, i32 1, !dbg !5242
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt2, align 8, !dbg !5242
  br label %for.cond4, !dbg !5243, !llvm.loop !5244

for.end:                                          ; preds = %for.cond4
  br label %if.end41, !dbg !5246

if.else:                                          ; preds = %for.body
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5247
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 17, !dbg !5249
  %22 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5249
  %tobool17 = icmp ne %struct.BPoint* %22, null, !dbg !5247
  br i1 %tobool17, label %if.then18, label %if.end40, !dbg !5250

if.then18:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp19, metadata !5251, metadata !DIExpression()), !dbg !5253
  %23 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5254
  %bp20 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %23, i32 0, i32 17, !dbg !5256
  %24 = load %struct.BPoint*, %struct.BPoint** %bp20, align 8, !dbg !5256
  store %struct.BPoint* %24, %struct.BPoint** %bp19, align 8, !dbg !5257
  store i32 0, i32* %a, align 4, !dbg !5258
  br label %for.cond21, !dbg !5259

for.cond21:                                       ; preds = %for.inc36, %if.then18
  %25 = load i32, i32* %a, align 4, !dbg !5260
  %26 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5262
  %pntsu22 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %26, i32 0, i32 6, !dbg !5263
  %27 = load i32, i32* %pntsu22, align 8, !dbg !5263
  %28 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5264
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 7, !dbg !5265
  %29 = load i32, i32* %pntsv, align 4, !dbg !5265
  %mul = mul nsw i32 %27, %29, !dbg !5266
  %cmp23 = icmp slt i32 %25, %mul, !dbg !5267
  br i1 %cmp23, label %for.body25, label %for.end39, !dbg !5268

for.body25:                                       ; preds = %for.cond21
  %30 = load %struct.BPoint*, %struct.BPoint** %bp19, align 8, !dbg !5269
  %hide26 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %30, i32 0, i32 4, !dbg !5272
  %31 = load i16, i16* %hide26, align 2, !dbg !5272
  %conv27 = sext i16 %31 to i32, !dbg !5269
  %cmp28 = icmp eq i32 %conv27, 0, !dbg !5273
  br i1 %cmp28, label %if.then30, label %if.end35, !dbg !5274

if.then30:                                        ; preds = %for.body25
  %32 = load %struct.BPoint*, %struct.BPoint** %bp19, align 8, !dbg !5275
  %f131 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %32, i32 0, i32 3, !dbg !5276
  %33 = load i16, i16* %f131, align 4, !dbg !5277
  %conv32 = sext i16 %33 to i32, !dbg !5277
  %or33 = or i32 %conv32, 1, !dbg !5277
  %conv34 = trunc i32 %or33 to i16, !dbg !5277
  store i16 %conv34, i16* %f131, align 4, !dbg !5277
  br label %if.end35, !dbg !5275

if.end35:                                         ; preds = %if.then30, %for.body25
  br label %for.inc36, !dbg !5278

for.inc36:                                        ; preds = %if.end35
  %34 = load i32, i32* %a, align 4, !dbg !5279
  %inc37 = add nsw i32 %34, 1, !dbg !5279
  store i32 %inc37, i32* %a, align 4, !dbg !5279
  %35 = load %struct.BPoint*, %struct.BPoint** %bp19, align 8, !dbg !5280
  %incdec.ptr38 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %35, i32 1, !dbg !5280
  store %struct.BPoint* %incdec.ptr38, %struct.BPoint** %bp19, align 8, !dbg !5280
  br label %for.cond21, !dbg !5281, !llvm.loop !5282

for.end39:                                        ; preds = %for.cond21
  br label %if.end40, !dbg !5284

if.end40:                                         ; preds = %for.end39, %if.else
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %for.end
  br label %for.inc42, !dbg !5285

for.inc42:                                        ; preds = %if.end41
  %36 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5286
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %36, i32 0, i32 0, !dbg !5287
  %37 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !5287
  store %struct.Nurb* %37, %struct.Nurb** %nu, align 8, !dbg !5288
  br label %for.cond, !dbg !5289, !llvm.loop !5290

for.end43:                                        ; preds = %for.cond
  ret void, !dbg !5292
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_curve_select_swap(%struct.EditNurb* %editnurb, i8 zeroext %hide_handles) #0 !dbg !5293 {
entry:
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %hide_handles.addr = alloca i8, align 1
  %nu = alloca %struct.Nurb*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %a = alloca i32, align 4
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !5296, metadata !DIExpression()), !dbg !5297
  store i8 %hide_handles, i8* %hide_handles.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hide_handles.addr, metadata !5298, metadata !DIExpression()), !dbg !5299
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !5300, metadata !DIExpression()), !dbg !5301
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !5302, metadata !DIExpression()), !dbg !5303
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !5304, metadata !DIExpression()), !dbg !5305
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5306, metadata !DIExpression()), !dbg !5307
  %0 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !5308
  %nurbs = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %0, i32 0, i32 0, !dbg !5310
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurbs, i32 0, i32 0, !dbg !5311
  %1 = load i8*, i8** %first, align 8, !dbg !5311
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !5308
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !5312
  br label %for.cond, !dbg !5313

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5314
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !5316
  br i1 %tobool, label %for.body, label %for.end, !dbg !5316

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5317
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 2, !dbg !5320
  %5 = load i16, i16* %type, align 8, !dbg !5320
  %conv = sext i16 %5 to i32, !dbg !5317
  %cmp = icmp eq i32 %conv, 1, !dbg !5321
  br i1 %cmp, label %if.then, label %if.else, !dbg !5322

if.then:                                          ; preds = %for.body
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5323
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 18, !dbg !5325
  %7 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !5325
  store %struct.BezTriple* %7, %struct.BezTriple** %bezt, align 8, !dbg !5326
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5327
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 6, !dbg !5328
  %9 = load i32, i32* %pntsu, align 8, !dbg !5328
  store i32 %9, i32* %a, align 4, !dbg !5329
  br label %while.cond, !dbg !5330

while.cond:                                       ; preds = %if.end18, %if.then
  %10 = load i32, i32* %a, align 4, !dbg !5331
  %dec = add nsw i32 %10, -1, !dbg !5331
  store i32 %dec, i32* %a, align 4, !dbg !5331
  %tobool3 = icmp ne i32 %10, 0, !dbg !5330
  br i1 %tobool3, label %while.body, label %while.end, !dbg !5330

while.body:                                       ; preds = %while.cond
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5332
  %hide = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %11, i32 0, i32 10, !dbg !5335
  %12 = load i8, i8* %hide, align 2, !dbg !5335
  %conv4 = zext i8 %12 to i32, !dbg !5332
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !5336
  br i1 %cmp5, label %if.then7, label %if.end18, !dbg !5337

if.then7:                                         ; preds = %while.body
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5338
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %13, i32 0, i32 8, !dbg !5340
  %14 = load i8, i8* %f2, align 4, !dbg !5341
  %conv8 = zext i8 %14 to i32, !dbg !5341
  %xor = xor i32 %conv8, 1, !dbg !5341
  %conv9 = trunc i32 %xor to i8, !dbg !5341
  store i8 %conv9, i8* %f2, align 4, !dbg !5341
  %15 = load i8, i8* %hide_handles.addr, align 1, !dbg !5342
  %tobool10 = icmp ne i8 %15, 0, !dbg !5342
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !5344

if.then11:                                        ; preds = %if.then7
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5345
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %16, i32 0, i32 7, !dbg !5347
  %17 = load i8, i8* %f1, align 1, !dbg !5348
  %conv12 = zext i8 %17 to i32, !dbg !5348
  %xor13 = xor i32 %conv12, 1, !dbg !5348
  %conv14 = trunc i32 %xor13 to i8, !dbg !5348
  store i8 %conv14, i8* %f1, align 1, !dbg !5348
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5349
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %18, i32 0, i32 9, !dbg !5350
  %19 = load i8, i8* %f3, align 1, !dbg !5351
  %conv15 = zext i8 %19 to i32, !dbg !5351
  %xor16 = xor i32 %conv15, 1, !dbg !5351
  %conv17 = trunc i32 %xor16 to i8, !dbg !5351
  store i8 %conv17, i8* %f3, align 1, !dbg !5351
  br label %if.end, !dbg !5352

if.end:                                           ; preds = %if.then11, %if.then7
  br label %if.end18, !dbg !5353

if.end18:                                         ; preds = %if.end, %while.body
  %20 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5354
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %20, i32 1, !dbg !5354
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !5354
  br label %while.cond, !dbg !5330, !llvm.loop !5355

while.end:                                        ; preds = %while.cond
  br label %if.end27, !dbg !5357

if.else:                                          ; preds = %for.body
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5358
  %bp19 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 17, !dbg !5360
  %22 = load %struct.BPoint*, %struct.BPoint** %bp19, align 8, !dbg !5360
  store %struct.BPoint* %22, %struct.BPoint** %bp, align 8, !dbg !5361
  %23 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5362
  %pntsu20 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %23, i32 0, i32 6, !dbg !5363
  %24 = load i32, i32* %pntsu20, align 8, !dbg !5363
  %25 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5364
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %25, i32 0, i32 7, !dbg !5365
  %26 = load i32, i32* %pntsv, align 4, !dbg !5365
  %mul = mul nsw i32 %24, %26, !dbg !5366
  store i32 %mul, i32* %a, align 4, !dbg !5367
  br label %while.cond21, !dbg !5368

while.cond21:                                     ; preds = %while.body24, %if.else
  %27 = load i32, i32* %a, align 4, !dbg !5369
  %dec22 = add nsw i32 %27, -1, !dbg !5369
  store i32 %dec22, i32* %a, align 4, !dbg !5369
  %tobool23 = icmp ne i32 %27, 0, !dbg !5368
  br i1 %tobool23, label %while.body24, label %while.end26, !dbg !5368

while.body24:                                     ; preds = %while.cond21
  %28 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5370
  %call = call zeroext i8 @swap_selection_bpoint(%struct.BPoint* %28), !dbg !5372
  %29 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5373
  %incdec.ptr25 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %29, i32 1, !dbg !5373
  store %struct.BPoint* %incdec.ptr25, %struct.BPoint** %bp, align 8, !dbg !5373
  br label %while.cond21, !dbg !5368, !llvm.loop !5374

while.end26:                                      ; preds = %while.cond21
  br label %if.end27

if.end27:                                         ; preds = %while.end26, %while.end
  br label %for.inc, !dbg !5376

for.inc:                                          ; preds = %if.end27
  %30 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5377
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %30, i32 0, i32 0, !dbg !5378
  %31 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !5378
  store %struct.Nurb* %31, %struct.Nurb** %nu, align 8, !dbg !5379
  br label %for.cond, !dbg !5380, !llvm.loop !5381

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5383
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @swap_selection_bpoint(%struct.BPoint* %bp) #0 !dbg !5384 {
entry:
  %retval = alloca i8, align 1
  %bp.addr = alloca %struct.BPoint*, align 8
  store %struct.BPoint* %bp, %struct.BPoint** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp.addr, metadata !5387, metadata !DIExpression()), !dbg !5388
  %0 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !5389
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %0, i32 0, i32 3, !dbg !5391
  %1 = load i16, i16* %f1, align 4, !dbg !5391
  %conv = sext i16 %1 to i32, !dbg !5389
  %and = and i32 %conv, 1, !dbg !5392
  %tobool = icmp ne i32 %and, 0, !dbg !5392
  br i1 %tobool, label %if.then, label %if.else, !dbg !5393

if.then:                                          ; preds = %entry
  %2 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !5394
  %call = call zeroext i8 @select_bpoint(%struct.BPoint* %2, i8 zeroext 0, i16 signext 1, i8 zeroext 0), !dbg !5395
  store i8 %call, i8* %retval, align 1, !dbg !5396
  br label %return, !dbg !5396

if.else:                                          ; preds = %entry
  %3 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !5397
  %call1 = call zeroext i8 @select_bpoint(%struct.BPoint* %3, i8 zeroext 1, i16 signext 1, i8 zeroext 0), !dbg !5398
  store i8 %call1, i8* %retval, align 1, !dbg !5399
  br label %return, !dbg !5399

return:                                           ; preds = %if.else, %if.then
  %4 = load i8, i8* %retval, align 1, !dbg !5400
  ret i8 %4, !dbg !5400
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_separate(%struct.wmOperatorType* %ot) #0 !dbg !5401 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5402, metadata !DIExpression()), !dbg !5403
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5404
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5405
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8** %name, align 8, !dbg !5406
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5407
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5408
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8** %idname, align 8, !dbg !5409
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5410
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5411
  store i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.5, i64 0, i64 0), i8** %description, align 8, !dbg !5412
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5413
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5414
  store i32 (%struct.bContext*, %struct.wmOperator*)* @separate_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5415
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5416
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5417
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !5418
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5419
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5420
  store i16 3, i16* %flag, align 8, !dbg !5421
  ret void, !dbg !5422
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @separate_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5423 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %bmain = alloca %struct.Main*, align 8
  %scene = alloca %struct.Scene*, align 8
  %oldob = alloca %struct.Object*, align 8
  %newob = alloca %struct.Object*, align 8
  %oldbase = alloca %struct.Base*, align 8
  %newbase = alloca %struct.Base*, align 8
  %oldcu = alloca %struct.Curve*, align 8
  %newcu = alloca %struct.Curve*, align 8
  %newedit = alloca %struct.EditNurb*, align 8
  %newnurb = alloca %struct.ListBase, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5424, metadata !DIExpression()), !dbg !5425
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5426, metadata !DIExpression()), !dbg !5427
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !5428, metadata !DIExpression()), !dbg !5493
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5494
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !5495
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !5493
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !5496, metadata !DIExpression()), !dbg !5499
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5500
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !5501
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !5499
  call void @llvm.dbg.declare(metadata %struct.Object** %oldob, metadata !5502, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.declare(metadata %struct.Object** %newob, metadata !5504, metadata !DIExpression()), !dbg !5505
  call void @llvm.dbg.declare(metadata %struct.Base** %oldbase, metadata !5506, metadata !DIExpression()), !dbg !5509
  call void @llvm.dbg.declare(metadata %struct.Base** %newbase, metadata !5510, metadata !DIExpression()), !dbg !5511
  call void @llvm.dbg.declare(metadata %struct.Curve** %oldcu, metadata !5512, metadata !DIExpression()), !dbg !5513
  call void @llvm.dbg.declare(metadata %struct.Curve** %newcu, metadata !5514, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %newedit, metadata !5516, metadata !DIExpression()), !dbg !5517
  call void @llvm.dbg.declare(metadata %struct.ListBase* %newnurb, metadata !5518, metadata !DIExpression()), !dbg !5519
  %2 = bitcast %struct.ListBase* %newnurb to i8*, !dbg !5519
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false), !dbg !5519
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5520
  %call2 = call %struct.Base* @CTX_data_active_base(%struct.bContext* %3), !dbg !5521
  store %struct.Base* %call2, %struct.Base** %oldbase, align 8, !dbg !5522
  %4 = load %struct.Base*, %struct.Base** %oldbase, align 8, !dbg !5523
  %object = getelementptr inbounds %struct.Base, %struct.Base* %4, i32 0, i32 7, !dbg !5524
  %5 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !5524
  store %struct.Object* %5, %struct.Object** %oldob, align 8, !dbg !5525
  %6 = load %struct.Object*, %struct.Object** %oldob, align 8, !dbg !5526
  %data = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 19, !dbg !5527
  %7 = load i8*, i8** %data, align 8, !dbg !5527
  %8 = bitcast i8* %7 to %struct.Curve*, !dbg !5526
  store %struct.Curve* %8, %struct.Curve** %oldcu, align 8, !dbg !5528
  %9 = load %struct.Curve*, %struct.Curve** %oldcu, align 8, !dbg !5529
  %key = getelementptr inbounds %struct.Curve, %struct.Curve* %9, i32 0, i32 9, !dbg !5531
  %10 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !5531
  %tobool = icmp ne %struct.Key* %10, null, !dbg !5529
  br i1 %tobool, label %if.then, label %if.end, !dbg !5532

if.then:                                          ; preds = %entry
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5533
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %11, i32 0, i32 8, !dbg !5535
  %12 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !5535
  call void @BKE_report(%struct.ReportList* %12, i32 32, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.193, i64 0, i64 0)), !dbg !5536
  store i32 2, i32* %retval, align 4, !dbg !5537
  br label %return, !dbg !5537

if.end:                                           ; preds = %entry
  call void @WM_cursor_wait(i8 zeroext 1), !dbg !5538
  %13 = load %struct.Object*, %struct.Object** %oldob, align 8, !dbg !5539
  call void @adduplicateflagNurb(%struct.Object* %13, %struct.ListBase* %newnurb, i16 signext 1, i8 zeroext 1), !dbg !5540
  %call3 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %newnurb), !dbg !5541
  %tobool4 = icmp ne i8 %call3, 0, !dbg !5541
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !5543

if.then5:                                         ; preds = %if.end
  call void @WM_cursor_wait(i8 zeroext 0), !dbg !5544
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5546
  %reports6 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 8, !dbg !5547
  %15 = load %struct.ReportList*, %struct.ReportList** %reports6, align 8, !dbg !5547
  call void @BKE_report(%struct.ReportList* %15, i32 32, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.194, i64 0, i64 0)), !dbg !5548
  store i32 2, i32* %retval, align 4, !dbg !5549
  br label %return, !dbg !5549

if.end7:                                          ; preds = %if.end
  %16 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !5550
  %17 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5551
  %18 = load %struct.Base*, %struct.Base** %oldbase, align 8, !dbg !5552
  %call8 = call %struct.Base* @ED_object_add_duplicate(%struct.Main* %16, %struct.Scene* %17, %struct.Base* %18, i32 0), !dbg !5553
  store %struct.Base* %call8, %struct.Base** %newbase, align 8, !dbg !5554
  %19 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !5555
  call void @DAG_relations_tag_update(%struct.Main* %19), !dbg !5556
  %20 = load %struct.Base*, %struct.Base** %newbase, align 8, !dbg !5557
  %object9 = getelementptr inbounds %struct.Base, %struct.Base* %20, i32 0, i32 7, !dbg !5558
  %21 = load %struct.Object*, %struct.Object** %object9, align 8, !dbg !5558
  store %struct.Object* %21, %struct.Object** %newob, align 8, !dbg !5559
  %22 = load %struct.Curve*, %struct.Curve** %oldcu, align 8, !dbg !5560
  %call10 = call %struct.Curve* @BKE_curve_copy(%struct.Curve* %22), !dbg !5561
  %23 = bitcast %struct.Curve* %call10 to i8*, !dbg !5561
  %24 = load %struct.Object*, %struct.Object** %newob, align 8, !dbg !5562
  %data11 = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 19, !dbg !5563
  store i8* %23, i8** %data11, align 8, !dbg !5564
  %25 = bitcast i8* %23 to %struct.Curve*, !dbg !5562
  store %struct.Curve* %25, %struct.Curve** %newcu, align 8, !dbg !5565
  %26 = load %struct.Curve*, %struct.Curve** %newcu, align 8, !dbg !5566
  %editnurb = getelementptr inbounds %struct.Curve, %struct.Curve* %26, i32 0, i32 4, !dbg !5567
  store %struct.EditNurb* null, %struct.EditNurb** %editnurb, align 8, !dbg !5568
  %27 = load %struct.Curve*, %struct.Curve** %oldcu, align 8, !dbg !5569
  %id = getelementptr inbounds %struct.Curve, %struct.Curve* %27, i32 0, i32 0, !dbg !5570
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !5571
  %28 = load i32, i32* %us, align 4, !dbg !5572
  %dec = add nsw i32 %28, -1, !dbg !5572
  store i32 %dec, i32* %us, align 4, !dbg !5572
  %29 = load %struct.Object*, %struct.Object** %newob, align 8, !dbg !5573
  call void @make_editNurb(%struct.Object* %29), !dbg !5574
  %30 = load %struct.Curve*, %struct.Curve** %newcu, align 8, !dbg !5575
  %editnurb12 = getelementptr inbounds %struct.Curve, %struct.Curve* %30, i32 0, i32 4, !dbg !5576
  %31 = load %struct.EditNurb*, %struct.EditNurb** %editnurb12, align 8, !dbg !5576
  store %struct.EditNurb* %31, %struct.EditNurb** %newedit, align 8, !dbg !5577
  %32 = load %struct.EditNurb*, %struct.EditNurb** %newedit, align 8, !dbg !5578
  %nurbs = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %32, i32 0, i32 0, !dbg !5579
  call void @BKE_nurbList_free(%struct.ListBase* %nurbs), !dbg !5580
  %33 = load %struct.EditNurb*, %struct.EditNurb** %newedit, align 8, !dbg !5581
  call void @BKE_curve_editNurb_keyIndex_free(%struct.EditNurb* %33), !dbg !5582
  %34 = load %struct.EditNurb*, %struct.EditNurb** %newedit, align 8, !dbg !5583
  %keyindex = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %34, i32 0, i32 1, !dbg !5584
  store %struct.GHash* null, %struct.GHash** %keyindex, align 8, !dbg !5585
  %35 = load %struct.EditNurb*, %struct.EditNurb** %newedit, align 8, !dbg !5586
  %nurbs13 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %35, i32 0, i32 0, !dbg !5587
  call void @BLI_movelisttolist(%struct.ListBase* %nurbs13, %struct.ListBase* %newnurb), !dbg !5588
  %36 = load %struct.Object*, %struct.Object** %newob, align 8, !dbg !5589
  call void @load_editNurb(%struct.Object* %36), !dbg !5590
  %37 = load %struct.Object*, %struct.Object** %newob, align 8, !dbg !5591
  call void @free_editNurb(%struct.Object* %37), !dbg !5592
  %38 = load %struct.Object*, %struct.Object** %oldob, align 8, !dbg !5593
  %call14 = call i32 @curve_delete_segments(%struct.Object* %38, i8 zeroext 1), !dbg !5594
  %39 = load %struct.Object*, %struct.Object** %oldob, align 8, !dbg !5595
  %id15 = getelementptr inbounds %struct.Object, %struct.Object* %39, i32 0, i32 0, !dbg !5596
  call void @DAG_id_tag_update(%struct.ID* %id15, i16 signext 2), !dbg !5597
  %40 = load %struct.Object*, %struct.Object** %newob, align 8, !dbg !5598
  %id16 = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 0, !dbg !5599
  call void @DAG_id_tag_update(%struct.ID* %id16, i16 signext 2), !dbg !5600
  %41 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5601
  %42 = load %struct.Object*, %struct.Object** %oldob, align 8, !dbg !5602
  %data17 = getelementptr inbounds %struct.Object, %struct.Object* %42, i32 0, i32 19, !dbg !5603
  %43 = load i8*, i8** %data17, align 8, !dbg !5603
  call void @WM_event_add_notifier(%struct.bContext* %41, i32 274399232, i8* %43), !dbg !5604
  %44 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5605
  %45 = load %struct.Object*, %struct.Object** %newob, align 8, !dbg !5606
  %46 = bitcast %struct.Object* %45 to i8*, !dbg !5606
  call void @WM_event_add_notifier(%struct.bContext* %44, i32 85393408, i8* %46), !dbg !5607
  call void @WM_cursor_wait(i8 zeroext 0), !dbg !5608
  store i32 4, i32* %retval, align 4, !dbg !5609
  br label %return, !dbg !5609

return:                                           ; preds = %if.end7, %if.then5, %if.then
  %47 = load i32, i32* %retval, align 4, !dbg !5610
  ret i32 %47, !dbg !5610
}

declare dso_local i32 @ED_operator_editsurfcurve(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_split(%struct.wmOperatorType* %ot) #0 !dbg !5611 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5612, metadata !DIExpression()), !dbg !5613
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5614
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5615
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i8** %name, align 8, !dbg !5616
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5617
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5618
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0), i8** %idname, align 8, !dbg !5619
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5620
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5621
  store i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i8** %description, align 8, !dbg !5622
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5623
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5624
  store i32 (%struct.bContext*, %struct.wmOperator*)* @curve_split_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5625
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5626
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5627
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !5628
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5629
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5630
  store i16 3, i16* %flag, align 8, !dbg !5631
  ret void, !dbg !5632
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @curve_split_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5633 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %newnurb = alloca %struct.ListBase, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5634, metadata !DIExpression()), !dbg !5635
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5636, metadata !DIExpression()), !dbg !5637
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !5638, metadata !DIExpression()), !dbg !5639
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5640
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !5641
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !5639
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !5642, metadata !DIExpression()), !dbg !5643
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5644
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %1), !dbg !5645
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !5643
  call void @llvm.dbg.declare(metadata %struct.ListBase* %newnurb, metadata !5646, metadata !DIExpression()), !dbg !5647
  %2 = bitcast %struct.ListBase* %newnurb to i8*, !dbg !5647
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false), !dbg !5647
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5648
  call void @adduplicateflagNurb(%struct.Object* %3, %struct.ListBase* %newnurb, i16 signext 1, i8 zeroext 1), !dbg !5649
  %call2 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %newnurb), !dbg !5650
  %conv = zext i8 %call2 to i32, !dbg !5650
  %cmp = icmp eq i32 %conv, 0, !dbg !5652
  br i1 %cmp, label %if.then, label %if.else, !dbg !5653

if.then:                                          ; preds = %entry
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5654
  %call4 = call i32 @curve_delete_segments(%struct.Object* %4, i8 zeroext 1), !dbg !5656
  %5 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !5657
  call void @BLI_movelisttolist(%struct.ListBase* %5, %struct.ListBase* %newnurb), !dbg !5658
  %6 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5659
  %data = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 19, !dbg !5661
  %7 = load i8*, i8** %data, align 8, !dbg !5661
  %8 = bitcast i8* %7 to %struct.Curve*, !dbg !5659
  %call5 = call i32 @ED_curve_updateAnimPaths(%struct.Curve* %8), !dbg !5662
  %tobool = icmp ne i32 %call5, 0, !dbg !5662
  br i1 %tobool, label %if.then6, label %if.end, !dbg !5663

if.then6:                                         ; preds = %if.then
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5664
  %10 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5665
  %11 = bitcast %struct.Object* %10 to i8*, !dbg !5665
  call void @WM_event_add_notifier(%struct.bContext* %9, i32 85524480, i8* %11), !dbg !5666
  br label %if.end, !dbg !5666

if.end:                                           ; preds = %if.then6, %if.then
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5667
  %13 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5668
  %data7 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 19, !dbg !5669
  %14 = load i8*, i8** %data7, align 8, !dbg !5669
  call void @WM_event_add_notifier(%struct.bContext* %12, i32 274399232, i8* %14), !dbg !5670
  %15 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5671
  %data8 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 19, !dbg !5672
  %16 = load i8*, i8** %data8, align 8, !dbg !5672
  %17 = bitcast i8* %16 to %struct.ID*, !dbg !5671
  call void @DAG_id_tag_update(%struct.ID* %17, i16 signext 0), !dbg !5673
  br label %if.end9, !dbg !5674

if.else:                                          ; preds = %entry
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5675
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %18, i32 0, i32 8, !dbg !5677
  %19 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !5677
  call void @BKE_report(%struct.ReportList* %19, i32 32, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.197, i64 0, i64 0)), !dbg !5678
  store i32 2, i32* %retval, align 4, !dbg !5679
  br label %return, !dbg !5679

if.end9:                                          ; preds = %if.end
  store i32 4, i32* %retval, align 4, !dbg !5680
  br label %return, !dbg !5680

return:                                           ; preds = %if.end9, %if.else
  %20 = load i32, i32* %retval, align 4, !dbg !5681
  ret i32 %20, !dbg !5681
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ed_editnurb_translate_flag(%struct.ListBase* %editnurb, i16 signext %flag, float* %vec) #0 !dbg !5682 {
entry:
  %editnurb.addr = alloca %struct.ListBase*, align 8
  %flag.addr = alloca i16, align 2
  %vec.addr = alloca float*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  store %struct.ListBase* %editnurb, %struct.ListBase** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb.addr, metadata !5685, metadata !DIExpression()), !dbg !5686
  store i16 %flag, i16* %flag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %flag.addr, metadata !5687, metadata !DIExpression()), !dbg !5688
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !5689, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !5691, metadata !DIExpression()), !dbg !5692
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !5693, metadata !DIExpression()), !dbg !5694
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !5695, metadata !DIExpression()), !dbg !5696
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5697, metadata !DIExpression()), !dbg !5698
  %0 = load %struct.ListBase*, %struct.ListBase** %editnurb.addr, align 8, !dbg !5699
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !5701
  %1 = load i8*, i8** %first, align 8, !dbg !5701
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !5699
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !5702
  br label %for.cond, !dbg !5703

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5704
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !5706
  br i1 %tobool, label %for.body, label %for.end, !dbg !5706

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5707
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 2, !dbg !5710
  %5 = load i16, i16* %type, align 8, !dbg !5710
  %conv = sext i16 %5 to i32, !dbg !5707
  %cmp = icmp eq i32 %conv, 1, !dbg !5711
  br i1 %cmp, label %if.then, label %if.else, !dbg !5712

if.then:                                          ; preds = %for.body
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5713
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 6, !dbg !5715
  %7 = load i32, i32* %pntsu, align 8, !dbg !5715
  store i32 %7, i32* %a, align 4, !dbg !5716
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5717
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 18, !dbg !5718
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !5718
  store %struct.BezTriple* %9, %struct.BezTriple** %bezt, align 8, !dbg !5719
  br label %while.cond, !dbg !5720

while.cond:                                       ; preds = %if.end26, %if.then
  %10 = load i32, i32* %a, align 4, !dbg !5721
  %dec = add nsw i32 %10, -1, !dbg !5721
  store i32 %dec, i32* %a, align 4, !dbg !5721
  %tobool3 = icmp ne i32 %10, 0, !dbg !5720
  br i1 %tobool3, label %while.body, label %while.end, !dbg !5720

while.body:                                       ; preds = %while.cond
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5722
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %11, i32 0, i32 7, !dbg !5725
  %12 = load i8, i8* %f1, align 1, !dbg !5725
  %conv4 = zext i8 %12 to i32, !dbg !5722
  %13 = load i16, i16* %flag.addr, align 2, !dbg !5726
  %conv5 = sext i16 %13 to i32, !dbg !5726
  %and = and i32 %conv4, %conv5, !dbg !5727
  %tobool6 = icmp ne i32 %and, 0, !dbg !5727
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !5728

if.then7:                                         ; preds = %while.body
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5729
  %vec8 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %14, i32 0, i32 0, !dbg !5730
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec8, i64 0, i64 0, !dbg !5729
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !5729
  %15 = load float*, float** %vec.addr, align 8, !dbg !5731
  call void @add_v3_v3(float* %arraydecay, float* %15), !dbg !5732
  br label %if.end, !dbg !5732

if.end:                                           ; preds = %if.then7, %while.body
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5733
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %16, i32 0, i32 8, !dbg !5735
  %17 = load i8, i8* %f2, align 4, !dbg !5735
  %conv9 = zext i8 %17 to i32, !dbg !5733
  %18 = load i16, i16* %flag.addr, align 2, !dbg !5736
  %conv10 = sext i16 %18 to i32, !dbg !5736
  %and11 = and i32 %conv9, %conv10, !dbg !5737
  %tobool12 = icmp ne i32 %and11, 0, !dbg !5737
  br i1 %tobool12, label %if.then13, label %if.end17, !dbg !5738

if.then13:                                        ; preds = %if.end
  %19 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5739
  %vec14 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %19, i32 0, i32 0, !dbg !5740
  %arrayidx15 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec14, i64 0, i64 1, !dbg !5739
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx15, i64 0, i64 0, !dbg !5739
  %20 = load float*, float** %vec.addr, align 8, !dbg !5741
  call void @add_v3_v3(float* %arraydecay16, float* %20), !dbg !5742
  br label %if.end17, !dbg !5742

if.end17:                                         ; preds = %if.then13, %if.end
  %21 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5743
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %21, i32 0, i32 9, !dbg !5745
  %22 = load i8, i8* %f3, align 1, !dbg !5745
  %conv18 = zext i8 %22 to i32, !dbg !5743
  %23 = load i16, i16* %flag.addr, align 2, !dbg !5746
  %conv19 = sext i16 %23 to i32, !dbg !5746
  %and20 = and i32 %conv18, %conv19, !dbg !5747
  %tobool21 = icmp ne i32 %and20, 0, !dbg !5747
  br i1 %tobool21, label %if.then22, label %if.end26, !dbg !5748

if.then22:                                        ; preds = %if.end17
  %24 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5749
  %vec23 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %24, i32 0, i32 0, !dbg !5750
  %arrayidx24 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec23, i64 0, i64 2, !dbg !5749
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx24, i64 0, i64 0, !dbg !5749
  %25 = load float*, float** %vec.addr, align 8, !dbg !5751
  call void @add_v3_v3(float* %arraydecay25, float* %25), !dbg !5752
  br label %if.end26, !dbg !5752

if.end26:                                         ; preds = %if.then22, %if.end17
  %26 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !5753
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %26, i32 1, !dbg !5753
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !5753
  br label %while.cond, !dbg !5720, !llvm.loop !5754

while.end:                                        ; preds = %while.cond
  br label %if.end44, !dbg !5756

if.else:                                          ; preds = %for.body
  %27 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5757
  %pntsu27 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %27, i32 0, i32 6, !dbg !5759
  %28 = load i32, i32* %pntsu27, align 8, !dbg !5759
  %29 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5760
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %29, i32 0, i32 7, !dbg !5761
  %30 = load i32, i32* %pntsv, align 4, !dbg !5761
  %mul = mul nsw i32 %28, %30, !dbg !5762
  store i32 %mul, i32* %a, align 4, !dbg !5763
  %31 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5764
  %bp28 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %31, i32 0, i32 17, !dbg !5765
  %32 = load %struct.BPoint*, %struct.BPoint** %bp28, align 8, !dbg !5765
  store %struct.BPoint* %32, %struct.BPoint** %bp, align 8, !dbg !5766
  br label %while.cond29, !dbg !5767

while.cond29:                                     ; preds = %if.end41, %if.else
  %33 = load i32, i32* %a, align 4, !dbg !5768
  %dec30 = add nsw i32 %33, -1, !dbg !5768
  store i32 %dec30, i32* %a, align 4, !dbg !5768
  %tobool31 = icmp ne i32 %33, 0, !dbg !5767
  br i1 %tobool31, label %while.body32, label %while.end43, !dbg !5767

while.body32:                                     ; preds = %while.cond29
  %34 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5769
  %f133 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %34, i32 0, i32 3, !dbg !5772
  %35 = load i16, i16* %f133, align 4, !dbg !5772
  %conv34 = sext i16 %35 to i32, !dbg !5769
  %36 = load i16, i16* %flag.addr, align 2, !dbg !5773
  %conv35 = sext i16 %36 to i32, !dbg !5773
  %and36 = and i32 %conv34, %conv35, !dbg !5774
  %tobool37 = icmp ne i32 %and36, 0, !dbg !5774
  br i1 %tobool37, label %if.then38, label %if.end41, !dbg !5775

if.then38:                                        ; preds = %while.body32
  %37 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5776
  %vec39 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %37, i32 0, i32 0, !dbg !5777
  %arraydecay40 = getelementptr inbounds [4 x float], [4 x float]* %vec39, i64 0, i64 0, !dbg !5776
  %38 = load float*, float** %vec.addr, align 8, !dbg !5778
  call void @add_v3_v3(float* %arraydecay40, float* %38), !dbg !5779
  br label %if.end41, !dbg !5779

if.end41:                                         ; preds = %if.then38, %while.body32
  %39 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5780
  %incdec.ptr42 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %39, i32 1, !dbg !5780
  store %struct.BPoint* %incdec.ptr42, %struct.BPoint** %bp, align 8, !dbg !5780
  br label %while.cond29, !dbg !5767, !llvm.loop !5781

while.end43:                                      ; preds = %while.cond29
  br label %if.end44

if.end44:                                         ; preds = %while.end43, %while.end
  %40 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5783
  call void @BKE_nurb_test2D(%struct.Nurb* %40), !dbg !5784
  br label %for.inc, !dbg !5785

for.inc:                                          ; preds = %if.end44
  %41 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5786
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %41, i32 0, i32 0, !dbg !5787
  %42 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !5787
  store %struct.Nurb* %42, %struct.Nurb** %nu, align 8, !dbg !5788
  br label %for.cond, !dbg !5789, !llvm.loop !5790

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5792
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !5793 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5797, metadata !DIExpression()), !dbg !5798
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5799, metadata !DIExpression()), !dbg !5800
  %0 = load float*, float** %a.addr, align 8, !dbg !5801
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5801
  %1 = load float, float* %arrayidx, align 4, !dbg !5801
  %2 = load float*, float** %r.addr, align 8, !dbg !5802
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5802
  %3 = load float, float* %arrayidx1, align 4, !dbg !5803
  %add = fadd float %3, %1, !dbg !5803
  store float %add, float* %arrayidx1, align 4, !dbg !5803
  %4 = load float*, float** %a.addr, align 8, !dbg !5804
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5804
  %5 = load float, float* %arrayidx2, align 4, !dbg !5804
  %6 = load float*, float** %r.addr, align 8, !dbg !5805
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5805
  %7 = load float, float* %arrayidx3, align 4, !dbg !5806
  %add4 = fadd float %7, %5, !dbg !5806
  store float %add4, float* %arrayidx3, align 4, !dbg !5806
  %8 = load float*, float** %a.addr, align 8, !dbg !5807
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5807
  %9 = load float, float* %arrayidx5, align 4, !dbg !5807
  %10 = load float*, float** %r.addr, align 8, !dbg !5808
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !5808
  %11 = load float, float* %arrayidx6, align 4, !dbg !5809
  %add7 = fadd float %11, %9, !dbg !5809
  store float %add7, float* %arrayidx6, align 4, !dbg !5809
  ret void, !dbg !5810
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ed_editnurb_extrude_flag(%struct.EditNurb* %editnurb, i16 signext %flag) #0 !dbg !5811 {
entry:
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %flag.addr = alloca i16, align 2
  %nu = alloca %struct.Nurb*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %bpn = alloca %struct.BPoint*, align 8
  %newbp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %len = alloca i32, align 4
  %ok = alloca i8, align 1
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !5814, metadata !DIExpression()), !dbg !5815
  store i16 %flag, i16* %flag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %flag.addr, metadata !5816, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !5818, metadata !DIExpression()), !dbg !5819
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !5820, metadata !DIExpression()), !dbg !5821
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bpn, metadata !5822, metadata !DIExpression()), !dbg !5823
  call void @llvm.dbg.declare(metadata %struct.BPoint** %newbp, metadata !5824, metadata !DIExpression()), !dbg !5825
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5826, metadata !DIExpression()), !dbg !5827
  call void @llvm.dbg.declare(metadata i32* %u, metadata !5828, metadata !DIExpression()), !dbg !5829
  call void @llvm.dbg.declare(metadata i32* %v, metadata !5830, metadata !DIExpression()), !dbg !5831
  call void @llvm.dbg.declare(metadata i32* %len, metadata !5832, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !5834, metadata !DIExpression()), !dbg !5835
  store i8 0, i8* %ok, align 1, !dbg !5835
  %0 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !5836
  %nurbs = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %0, i32 0, i32 0, !dbg !5837
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurbs, i32 0, i32 0, !dbg !5838
  %1 = load i8*, i8** %first, align 8, !dbg !5838
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !5836
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !5839
  br label %while.cond, !dbg !5840

while.cond:                                       ; preds = %if.end155, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5841
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !5840
  br i1 %tobool, label %while.body, label %while.end156, !dbg !5840

while.body:                                       ; preds = %while.cond
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5842
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 7, !dbg !5845
  %5 = load i32, i32* %pntsv, align 4, !dbg !5845
  %cmp = icmp eq i32 %5, 1, !dbg !5846
  br i1 %cmp, label %if.then, label %if.else33, !dbg !5847

if.then:                                          ; preds = %while.body
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5848
  %bp1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 17, !dbg !5850
  %7 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !5850
  store %struct.BPoint* %7, %struct.BPoint** %bp, align 8, !dbg !5851
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5852
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 6, !dbg !5853
  %9 = load i32, i32* %pntsu, align 8, !dbg !5853
  store i32 %9, i32* %a, align 4, !dbg !5854
  br label %while.cond2, !dbg !5855

while.cond2:                                      ; preds = %if.end, %if.then
  %10 = load i32, i32* %a, align 4, !dbg !5856
  %tobool3 = icmp ne i32 %10, 0, !dbg !5855
  br i1 %tobool3, label %while.body4, label %while.end, !dbg !5855

while.body4:                                      ; preds = %while.cond2
  %11 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5857
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %11, i32 0, i32 3, !dbg !5860
  %12 = load i16, i16* %f1, align 4, !dbg !5860
  %conv = sext i16 %12 to i32, !dbg !5857
  %13 = load i16, i16* %flag.addr, align 2, !dbg !5861
  %conv5 = sext i16 %13 to i32, !dbg !5861
  %and = and i32 %conv, %conv5, !dbg !5862
  %tobool6 = icmp ne i32 %and, 0, !dbg !5862
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !5863

if.then7:                                         ; preds = %while.body4
  br label %if.end, !dbg !5864

if.else:                                          ; preds = %while.body4
  br label %while.end, !dbg !5866

if.end:                                           ; preds = %if.then7
  %14 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5868
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %14, i32 1, !dbg !5868
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp, align 8, !dbg !5868
  %15 = load i32, i32* %a, align 4, !dbg !5869
  %dec = add nsw i32 %15, -1, !dbg !5869
  store i32 %dec, i32* %a, align 4, !dbg !5869
  br label %while.cond2, !dbg !5855, !llvm.loop !5870

while.end:                                        ; preds = %if.else, %while.cond2
  %16 = load i32, i32* %a, align 4, !dbg !5872
  %cmp8 = icmp eq i32 %16, 0, !dbg !5874
  br i1 %cmp8, label %if.then10, label %if.end32, !dbg !5875

if.then10:                                        ; preds = %while.end
  store i8 1, i8* %ok, align 1, !dbg !5876
  %17 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5878
  %18 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5879
  %pntsu11 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %18, i32 0, i32 6, !dbg !5880
  %19 = load i32, i32* %pntsu11, align 8, !dbg !5880
  %mul = mul nsw i32 2, %19, !dbg !5881
  %conv12 = sext i32 %mul to i64, !dbg !5882
  %mul13 = mul i64 %conv12, 36, !dbg !5883
  %call = call i8* %17(i64 %mul13, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)), !dbg !5878
  %20 = bitcast i8* %call to %struct.BPoint*, !dbg !5884
  store %struct.BPoint* %20, %struct.BPoint** %newbp, align 8, !dbg !5885
  %21 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !5886
  %22 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !5887
  %23 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5888
  %bp14 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %23, i32 0, i32 17, !dbg !5889
  %24 = load %struct.BPoint*, %struct.BPoint** %bp14, align 8, !dbg !5889
  %25 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5890
  %pntsu15 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %25, i32 0, i32 6, !dbg !5891
  %26 = load i32, i32* %pntsu15, align 8, !dbg !5891
  call void @ED_curve_bpcpy(%struct.EditNurb* %21, %struct.BPoint* %22, %struct.BPoint* %24, i32 %26), !dbg !5892
  %27 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !5893
  %28 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5894
  %pntsu16 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 6, !dbg !5895
  %29 = load i32, i32* %pntsu16, align 8, !dbg !5895
  %idx.ext = sext i32 %29 to i64, !dbg !5896
  %add.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %27, i64 %idx.ext, !dbg !5896
  store %struct.BPoint* %add.ptr, %struct.BPoint** %bp, align 8, !dbg !5897
  %30 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !5898
  %31 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5899
  %32 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5900
  %bp17 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %32, i32 0, i32 17, !dbg !5901
  %33 = load %struct.BPoint*, %struct.BPoint** %bp17, align 8, !dbg !5901
  %34 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5902
  %pntsu18 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %34, i32 0, i32 6, !dbg !5903
  %35 = load i32, i32* %pntsu18, align 8, !dbg !5903
  call void @ED_curve_bpcpy(%struct.EditNurb* %30, %struct.BPoint* %31, %struct.BPoint* %33, i32 %35), !dbg !5904
  %36 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5905
  %37 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5906
  %bp19 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %37, i32 0, i32 17, !dbg !5907
  %38 = load %struct.BPoint*, %struct.BPoint** %bp19, align 8, !dbg !5907
  %39 = bitcast %struct.BPoint* %38 to i8*, !dbg !5906
  call void %36(i8* %39), !dbg !5905
  %40 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !5908
  %41 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5909
  %bp20 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %41, i32 0, i32 17, !dbg !5910
  store %struct.BPoint* %40, %struct.BPoint** %bp20, align 8, !dbg !5911
  %42 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5912
  %pntsu21 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %42, i32 0, i32 6, !dbg !5913
  %43 = load i32, i32* %pntsu21, align 8, !dbg !5913
  store i32 %43, i32* %a, align 4, !dbg !5914
  br label %while.cond22, !dbg !5915

while.cond22:                                     ; preds = %while.body25, %if.then10
  %44 = load i32, i32* %a, align 4, !dbg !5916
  %dec23 = add nsw i32 %44, -1, !dbg !5916
  store i32 %dec23, i32* %a, align 4, !dbg !5916
  %tobool24 = icmp ne i32 %44, 0, !dbg !5915
  br i1 %tobool24, label %while.body25, label %while.end30, !dbg !5915

while.body25:                                     ; preds = %while.cond22
  %45 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5917
  %46 = load i16, i16* %flag.addr, align 2, !dbg !5919
  %call26 = call zeroext i8 @select_bpoint(%struct.BPoint* %45, i8 zeroext 1, i16 signext %46, i8 zeroext 1), !dbg !5920
  %47 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !5921
  %48 = load i16, i16* %flag.addr, align 2, !dbg !5922
  %call27 = call zeroext i8 @select_bpoint(%struct.BPoint* %47, i8 zeroext 0, i16 signext %48, i8 zeroext 1), !dbg !5923
  %49 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5924
  %incdec.ptr28 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %49, i32 1, !dbg !5924
  store %struct.BPoint* %incdec.ptr28, %struct.BPoint** %bp, align 8, !dbg !5924
  %50 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !5925
  %incdec.ptr29 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %50, i32 1, !dbg !5925
  store %struct.BPoint* %incdec.ptr29, %struct.BPoint** %newbp, align 8, !dbg !5925
  br label %while.cond22, !dbg !5915, !llvm.loop !5926

while.end30:                                      ; preds = %while.cond22
  %51 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5928
  %pntsv31 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %51, i32 0, i32 7, !dbg !5929
  store i32 2, i32* %pntsv31, align 4, !dbg !5930
  %52 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5931
  %orderv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %52, i32 0, i32 12, !dbg !5932
  store i16 2, i16* %orderv, align 2, !dbg !5933
  %53 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5934
  call void @BKE_nurb_knot_calc_v(%struct.Nurb* %53), !dbg !5935
  br label %if.end32, !dbg !5936

if.end32:                                         ; preds = %while.end30, %while.end
  br label %if.end155, !dbg !5937

if.else33:                                        ; preds = %while.body
  %54 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5938
  %55 = load i16, i16* %flag.addr, align 2, !dbg !5941
  %conv34 = sext i16 %55 to i32, !dbg !5941
  %call35 = call signext i16 @isNurbselUV(%struct.Nurb* %54, i32* %u, i32* %v, i32 %conv34), !dbg !5942
  %tobool36 = icmp ne i16 %call35, 0, !dbg !5942
  br i1 %tobool36, label %if.then37, label %if.end154, !dbg !5943

if.then37:                                        ; preds = %if.else33
  %56 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5944
  %bp38 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %56, i32 0, i32 17, !dbg !5946
  %57 = load %struct.BPoint*, %struct.BPoint** %bp38, align 8, !dbg !5946
  store %struct.BPoint* %57, %struct.BPoint** %bp, align 8, !dbg !5947
  %58 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5948
  %pntsu39 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %58, i32 0, i32 6, !dbg !5949
  %59 = load i32, i32* %pntsu39, align 8, !dbg !5949
  %60 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5950
  %pntsv40 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %60, i32 0, i32 7, !dbg !5951
  %61 = load i32, i32* %pntsv40, align 4, !dbg !5951
  %mul41 = mul nsw i32 %59, %61, !dbg !5952
  store i32 %mul41, i32* %a, align 4, !dbg !5953
  br label %while.cond42, !dbg !5954

while.cond42:                                     ; preds = %while.body45, %if.then37
  %62 = load i32, i32* %a, align 4, !dbg !5955
  %dec43 = add nsw i32 %62, -1, !dbg !5955
  store i32 %dec43, i32* %a, align 4, !dbg !5955
  %tobool44 = icmp ne i32 %62, 0, !dbg !5954
  br i1 %tobool44, label %while.body45, label %while.end48, !dbg !5954

while.body45:                                     ; preds = %while.cond42
  %63 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5956
  %64 = load i16, i16* %flag.addr, align 2, !dbg !5958
  %call46 = call zeroext i8 @select_bpoint(%struct.BPoint* %63, i8 zeroext 0, i16 signext %64, i8 zeroext 1), !dbg !5959
  %65 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5960
  %incdec.ptr47 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %65, i32 1, !dbg !5960
  store %struct.BPoint* %incdec.ptr47, %struct.BPoint** %bp, align 8, !dbg !5960
  br label %while.cond42, !dbg !5954, !llvm.loop !5961

while.end48:                                      ; preds = %while.cond42
  %66 = load i32, i32* %u, align 4, !dbg !5963
  %cmp49 = icmp eq i32 %66, 0, !dbg !5965
  br i1 %cmp49, label %if.then54, label %lor.lhs.false, !dbg !5966

lor.lhs.false:                                    ; preds = %while.end48
  %67 = load i32, i32* %u, align 4, !dbg !5967
  %68 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5968
  %pntsv51 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %68, i32 0, i32 7, !dbg !5969
  %69 = load i32, i32* %pntsv51, align 4, !dbg !5969
  %sub = sub nsw i32 %69, 1, !dbg !5970
  %cmp52 = icmp eq i32 %67, %sub, !dbg !5971
  br i1 %cmp52, label %if.then54, label %if.else98, !dbg !5972

if.then54:                                        ; preds = %lor.lhs.false, %while.end48
  store i8 1, i8* %ok, align 1, !dbg !5973
  %70 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5975
  %71 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5976
  %pntsu55 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %71, i32 0, i32 6, !dbg !5977
  %72 = load i32, i32* %pntsu55, align 8, !dbg !5977
  %73 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5978
  %pntsv56 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %73, i32 0, i32 7, !dbg !5979
  %74 = load i32, i32* %pntsv56, align 4, !dbg !5979
  %add = add nsw i32 %74, 1, !dbg !5980
  %mul57 = mul nsw i32 %72, %add, !dbg !5981
  %conv58 = sext i32 %mul57 to i64, !dbg !5976
  %mul59 = mul i64 %conv58, 36, !dbg !5982
  %call60 = call i8* %70(i64 %mul59, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)), !dbg !5975
  %75 = bitcast i8* %call60 to %struct.BPoint*, !dbg !5983
  store %struct.BPoint* %75, %struct.BPoint** %newbp, align 8, !dbg !5984
  %76 = load i32, i32* %u, align 4, !dbg !5985
  %cmp61 = icmp eq i32 %76, 0, !dbg !5987
  br i1 %cmp61, label %if.then63, label %if.else73, !dbg !5988

if.then63:                                        ; preds = %if.then54
  %77 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5989
  %pntsv64 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %77, i32 0, i32 7, !dbg !5991
  %78 = load i32, i32* %pntsv64, align 4, !dbg !5991
  %79 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5992
  %pntsu65 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %79, i32 0, i32 6, !dbg !5993
  %80 = load i32, i32* %pntsu65, align 8, !dbg !5993
  %mul66 = mul nsw i32 %78, %80, !dbg !5994
  store i32 %mul66, i32* %len, align 4, !dbg !5995
  %81 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !5996
  %82 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !5997
  %83 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5998
  %pntsu67 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %83, i32 0, i32 6, !dbg !5999
  %84 = load i32, i32* %pntsu67, align 8, !dbg !5999
  %idx.ext68 = sext i32 %84 to i64, !dbg !6000
  %add.ptr69 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %82, i64 %idx.ext68, !dbg !6000
  %85 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6001
  %bp70 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %85, i32 0, i32 17, !dbg !6002
  %86 = load %struct.BPoint*, %struct.BPoint** %bp70, align 8, !dbg !6002
  %87 = load i32, i32* %len, align 4, !dbg !6003
  call void @ED_curve_bpcpy(%struct.EditNurb* %81, %struct.BPoint* %add.ptr69, %struct.BPoint* %86, i32 %87), !dbg !6004
  %88 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !6005
  %89 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !6006
  %90 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6007
  %bp71 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %90, i32 0, i32 17, !dbg !6008
  %91 = load %struct.BPoint*, %struct.BPoint** %bp71, align 8, !dbg !6008
  %92 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6009
  %pntsu72 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %92, i32 0, i32 6, !dbg !6010
  %93 = load i32, i32* %pntsu72, align 8, !dbg !6010
  call void @ED_curve_bpcpy(%struct.EditNurb* %88, %struct.BPoint* %89, %struct.BPoint* %91, i32 %93), !dbg !6011
  %94 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !6012
  store %struct.BPoint* %94, %struct.BPoint** %bp, align 8, !dbg !6013
  br label %if.end86, !dbg !6014

if.else73:                                        ; preds = %if.then54
  %95 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6015
  %pntsv74 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %95, i32 0, i32 7, !dbg !6017
  %96 = load i32, i32* %pntsv74, align 4, !dbg !6017
  %97 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6018
  %pntsu75 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %97, i32 0, i32 6, !dbg !6019
  %98 = load i32, i32* %pntsu75, align 8, !dbg !6019
  %mul76 = mul nsw i32 %96, %98, !dbg !6020
  store i32 %mul76, i32* %len, align 4, !dbg !6021
  %99 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !6022
  %100 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !6023
  %101 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6024
  %bp77 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %101, i32 0, i32 17, !dbg !6025
  %102 = load %struct.BPoint*, %struct.BPoint** %bp77, align 8, !dbg !6025
  %103 = load i32, i32* %len, align 4, !dbg !6026
  call void @ED_curve_bpcpy(%struct.EditNurb* %99, %struct.BPoint* %100, %struct.BPoint* %102, i32 %103), !dbg !6027
  %104 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !6028
  %105 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !6029
  %106 = load i32, i32* %len, align 4, !dbg !6030
  %idx.ext78 = sext i32 %106 to i64, !dbg !6031
  %add.ptr79 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %105, i64 %idx.ext78, !dbg !6031
  %107 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6032
  %bp80 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %107, i32 0, i32 17, !dbg !6033
  %108 = load %struct.BPoint*, %struct.BPoint** %bp80, align 8, !dbg !6033
  %109 = load i32, i32* %len, align 4, !dbg !6034
  %110 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6035
  %pntsu81 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %110, i32 0, i32 6, !dbg !6036
  %111 = load i32, i32* %pntsu81, align 8, !dbg !6036
  %sub82 = sub nsw i32 %109, %111, !dbg !6037
  %idxprom = sext i32 %sub82 to i64, !dbg !6032
  %arrayidx = getelementptr inbounds %struct.BPoint, %struct.BPoint* %108, i64 %idxprom, !dbg !6032
  %112 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6038
  %pntsu83 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %112, i32 0, i32 6, !dbg !6039
  %113 = load i32, i32* %pntsu83, align 8, !dbg !6039
  call void @ED_curve_bpcpy(%struct.EditNurb* %104, %struct.BPoint* %add.ptr79, %struct.BPoint* %arrayidx, i32 %113), !dbg !6040
  %114 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !6041
  %115 = load i32, i32* %len, align 4, !dbg !6042
  %idx.ext84 = sext i32 %115 to i64, !dbg !6043
  %add.ptr85 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %114, i64 %idx.ext84, !dbg !6043
  store %struct.BPoint* %add.ptr85, %struct.BPoint** %bp, align 8, !dbg !6044
  br label %if.end86

if.end86:                                         ; preds = %if.else73, %if.then63
  %116 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6045
  %pntsu87 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %116, i32 0, i32 6, !dbg !6046
  %117 = load i32, i32* %pntsu87, align 8, !dbg !6046
  store i32 %117, i32* %a, align 4, !dbg !6047
  br label %while.cond88, !dbg !6048

while.cond88:                                     ; preds = %while.body91, %if.end86
  %118 = load i32, i32* %a, align 4, !dbg !6049
  %dec89 = add nsw i32 %118, -1, !dbg !6049
  store i32 %dec89, i32* %a, align 4, !dbg !6049
  %tobool90 = icmp ne i32 %118, 0, !dbg !6048
  br i1 %tobool90, label %while.body91, label %while.end94, !dbg !6048

while.body91:                                     ; preds = %while.cond88
  %119 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6050
  %120 = load i16, i16* %flag.addr, align 2, !dbg !6052
  %call92 = call zeroext i8 @select_bpoint(%struct.BPoint* %119, i8 zeroext 1, i16 signext %120, i8 zeroext 1), !dbg !6053
  %121 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6054
  %incdec.ptr93 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %121, i32 1, !dbg !6054
  store %struct.BPoint* %incdec.ptr93, %struct.BPoint** %bp, align 8, !dbg !6054
  br label %while.cond88, !dbg !6048, !llvm.loop !6055

while.end94:                                      ; preds = %while.cond88
  %122 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6057
  %123 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6058
  %bp95 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %123, i32 0, i32 17, !dbg !6059
  %124 = load %struct.BPoint*, %struct.BPoint** %bp95, align 8, !dbg !6059
  %125 = bitcast %struct.BPoint* %124 to i8*, !dbg !6058
  call void %122(i8* %125), !dbg !6057
  %126 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !6060
  %127 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6061
  %bp96 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %127, i32 0, i32 17, !dbg !6062
  store %struct.BPoint* %126, %struct.BPoint** %bp96, align 8, !dbg !6063
  %128 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6064
  %pntsv97 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %128, i32 0, i32 7, !dbg !6065
  %129 = load i32, i32* %pntsv97, align 4, !dbg !6066
  %inc = add nsw i32 %129, 1, !dbg !6066
  store i32 %inc, i32* %pntsv97, align 4, !dbg !6066
  %130 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6067
  call void @BKE_nurb_knot_calc_v(%struct.Nurb* %130), !dbg !6068
  br label %if.end153, !dbg !6069

if.else98:                                        ; preds = %lor.lhs.false
  %131 = load i32, i32* %v, align 4, !dbg !6070
  %cmp99 = icmp eq i32 %131, 0, !dbg !6072
  br i1 %cmp99, label %if.then106, label %lor.lhs.false101, !dbg !6073

lor.lhs.false101:                                 ; preds = %if.else98
  %132 = load i32, i32* %v, align 4, !dbg !6074
  %133 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6075
  %pntsu102 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %133, i32 0, i32 6, !dbg !6076
  %134 = load i32, i32* %pntsu102, align 8, !dbg !6076
  %sub103 = sub nsw i32 %134, 1, !dbg !6077
  %cmp104 = icmp eq i32 %132, %sub103, !dbg !6078
  br i1 %cmp104, label %if.then106, label %if.end152, !dbg !6079

if.then106:                                       ; preds = %lor.lhs.false101, %if.else98
  store i8 1, i8* %ok, align 1, !dbg !6080
  %135 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6082
  %136 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6083
  %pntsu107 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %136, i32 0, i32 6, !dbg !6084
  %137 = load i32, i32* %pntsu107, align 8, !dbg !6084
  %add108 = add nsw i32 %137, 1, !dbg !6085
  %138 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6086
  %pntsv109 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %138, i32 0, i32 7, !dbg !6087
  %139 = load i32, i32* %pntsv109, align 4, !dbg !6087
  %mul110 = mul nsw i32 %add108, %139, !dbg !6088
  %conv111 = sext i32 %mul110 to i64, !dbg !6089
  %mul112 = mul i64 %conv111, 36, !dbg !6090
  %call113 = call i8* %135(i64 %mul112, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)), !dbg !6082
  %140 = bitcast i8* %call113 to %struct.BPoint*, !dbg !6091
  store %struct.BPoint* %140, %struct.BPoint** %newbp, align 8, !dbg !6092
  store %struct.BPoint* %140, %struct.BPoint** %bpn, align 8, !dbg !6093
  %141 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6094
  %bp114 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %141, i32 0, i32 17, !dbg !6095
  %142 = load %struct.BPoint*, %struct.BPoint** %bp114, align 8, !dbg !6095
  store %struct.BPoint* %142, %struct.BPoint** %bp, align 8, !dbg !6096
  store i32 0, i32* %a, align 4, !dbg !6097
  br label %for.cond, !dbg !6099

for.cond:                                         ; preds = %for.inc, %if.then106
  %143 = load i32, i32* %a, align 4, !dbg !6100
  %144 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6102
  %pntsv115 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %144, i32 0, i32 7, !dbg !6103
  %145 = load i32, i32* %pntsv115, align 4, !dbg !6103
  %cmp116 = icmp slt i32 %143, %145, !dbg !6104
  br i1 %cmp116, label %for.body, label %for.end, !dbg !6105

for.body:                                         ; preds = %for.cond
  %146 = load i32, i32* %v, align 4, !dbg !6106
  %cmp118 = icmp eq i32 %146, 0, !dbg !6109
  br i1 %cmp118, label %if.then120, label %if.end126, !dbg !6110

if.then120:                                       ; preds = %for.body
  %147 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !6111
  %148 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6113
  %149 = bitcast %struct.BPoint* %147 to i8*, !dbg !6114
  %150 = bitcast %struct.BPoint* %148 to i8*, !dbg !6114
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %149, i8* align 4 %150, i64 36, i1 false), !dbg !6114
  %151 = load i16, i16* %flag.addr, align 2, !dbg !6115
  %conv121 = sext i16 %151 to i32, !dbg !6115
  %152 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !6116
  %f1122 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %152, i32 0, i32 3, !dbg !6117
  %153 = load i16, i16* %f1122, align 4, !dbg !6118
  %conv123 = sext i16 %153 to i32, !dbg !6118
  %or = or i32 %conv123, %conv121, !dbg !6118
  %conv124 = trunc i32 %or to i16, !dbg !6118
  store i16 %conv124, i16* %f1122, align 4, !dbg !6118
  %154 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !6119
  %incdec.ptr125 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %154, i32 1, !dbg !6119
  store %struct.BPoint* %incdec.ptr125, %struct.BPoint** %bpn, align 8, !dbg !6119
  br label %if.end126, !dbg !6120

if.end126:                                        ; preds = %if.then120, %for.body
  %155 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !6121
  %156 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !6122
  %157 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6123
  %158 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6124
  %pntsu127 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %158, i32 0, i32 6, !dbg !6125
  %159 = load i32, i32* %pntsu127, align 8, !dbg !6125
  call void @ED_curve_bpcpy(%struct.EditNurb* %155, %struct.BPoint* %156, %struct.BPoint* %157, i32 %159), !dbg !6126
  %160 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6127
  %pntsu128 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %160, i32 0, i32 6, !dbg !6128
  %161 = load i32, i32* %pntsu128, align 8, !dbg !6128
  %162 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6129
  %idx.ext129 = sext i32 %161 to i64, !dbg !6129
  %add.ptr130 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %162, i64 %idx.ext129, !dbg !6129
  store %struct.BPoint* %add.ptr130, %struct.BPoint** %bp, align 8, !dbg !6129
  %163 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6130
  %pntsu131 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %163, i32 0, i32 6, !dbg !6131
  %164 = load i32, i32* %pntsu131, align 8, !dbg !6131
  %165 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !6132
  %idx.ext132 = sext i32 %164 to i64, !dbg !6132
  %add.ptr133 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %165, i64 %idx.ext132, !dbg !6132
  store %struct.BPoint* %add.ptr133, %struct.BPoint** %bpn, align 8, !dbg !6132
  %166 = load i32, i32* %v, align 4, !dbg !6133
  %167 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6135
  %pntsu134 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %167, i32 0, i32 6, !dbg !6136
  %168 = load i32, i32* %pntsu134, align 8, !dbg !6136
  %sub135 = sub nsw i32 %168, 1, !dbg !6137
  %cmp136 = icmp eq i32 %166, %sub135, !dbg !6138
  br i1 %cmp136, label %if.then138, label %if.end146, !dbg !6139

if.then138:                                       ; preds = %if.end126
  %169 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !6140
  %170 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6142
  %add.ptr139 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %170, i64 -1, !dbg !6143
  %171 = bitcast %struct.BPoint* %169 to i8*, !dbg !6144
  %172 = bitcast %struct.BPoint* %add.ptr139 to i8*, !dbg !6144
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %171, i8* align 4 %172, i64 36, i1 false), !dbg !6144
  %173 = load i16, i16* %flag.addr, align 2, !dbg !6145
  %conv140 = sext i16 %173 to i32, !dbg !6145
  %174 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !6146
  %f1141 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %174, i32 0, i32 3, !dbg !6147
  %175 = load i16, i16* %f1141, align 4, !dbg !6148
  %conv142 = sext i16 %175 to i32, !dbg !6148
  %or143 = or i32 %conv142, %conv140, !dbg !6148
  %conv144 = trunc i32 %or143 to i16, !dbg !6148
  store i16 %conv144, i16* %f1141, align 4, !dbg !6148
  %176 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !6149
  %incdec.ptr145 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %176, i32 1, !dbg !6149
  store %struct.BPoint* %incdec.ptr145, %struct.BPoint** %bpn, align 8, !dbg !6149
  br label %if.end146, !dbg !6150

if.end146:                                        ; preds = %if.then138, %if.end126
  br label %for.inc, !dbg !6151

for.inc:                                          ; preds = %if.end146
  %177 = load i32, i32* %a, align 4, !dbg !6152
  %inc147 = add nsw i32 %177, 1, !dbg !6152
  store i32 %inc147, i32* %a, align 4, !dbg !6152
  br label %for.cond, !dbg !6153, !llvm.loop !6154

for.end:                                          ; preds = %for.cond
  %178 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6156
  %179 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6157
  %bp148 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %179, i32 0, i32 17, !dbg !6158
  %180 = load %struct.BPoint*, %struct.BPoint** %bp148, align 8, !dbg !6158
  %181 = bitcast %struct.BPoint* %180 to i8*, !dbg !6157
  call void %178(i8* %181), !dbg !6156
  %182 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !6159
  %183 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6160
  %bp149 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %183, i32 0, i32 17, !dbg !6161
  store %struct.BPoint* %182, %struct.BPoint** %bp149, align 8, !dbg !6162
  %184 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6163
  %pntsu150 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %184, i32 0, i32 6, !dbg !6164
  %185 = load i32, i32* %pntsu150, align 8, !dbg !6165
  %inc151 = add nsw i32 %185, 1, !dbg !6165
  store i32 %inc151, i32* %pntsu150, align 8, !dbg !6165
  %186 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6166
  call void @BKE_nurb_knot_calc_u(%struct.Nurb* %186), !dbg !6167
  br label %if.end152, !dbg !6168

if.end152:                                        ; preds = %for.end, %lor.lhs.false101
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %while.end94
  br label %if.end154, !dbg !6169

if.end154:                                        ; preds = %if.end153, %if.else33
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.end32
  %187 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6170
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %187, i32 0, i32 0, !dbg !6171
  %188 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !6171
  store %struct.Nurb* %188, %struct.Nurb** %nu, align 8, !dbg !6172
  br label %while.cond, !dbg !5840, !llvm.loop !6173

while.end156:                                     ; preds = %while.cond
  %189 = load i8, i8* %ok, align 1, !dbg !6175
  ret i8 %189, !dbg !6176
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_curve_bpcpy(%struct.EditNurb* %editnurb, %struct.BPoint* %dst, %struct.BPoint* %src, i32 %count) #0 !dbg !6177 {
entry:
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %dst.addr = alloca %struct.BPoint*, align 8
  %src.addr = alloca %struct.BPoint*, align 8
  %count.addr = alloca i32, align 4
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !6180, metadata !DIExpression()), !dbg !6181
  store %struct.BPoint* %dst, %struct.BPoint** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BPoint** %dst.addr, metadata !6182, metadata !DIExpression()), !dbg !6183
  store %struct.BPoint* %src, %struct.BPoint** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BPoint** %src.addr, metadata !6184, metadata !DIExpression()), !dbg !6185
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !6186, metadata !DIExpression()), !dbg !6187
  %0 = load %struct.BPoint*, %struct.BPoint** %dst.addr, align 8, !dbg !6188
  %1 = bitcast %struct.BPoint* %0 to i8*, !dbg !6189
  %2 = load %struct.BPoint*, %struct.BPoint** %src.addr, align 8, !dbg !6190
  %3 = bitcast %struct.BPoint* %2 to i8*, !dbg !6189
  %4 = load i32, i32* %count.addr, align 4, !dbg !6191
  %conv = sext i32 %4 to i64, !dbg !6191
  %mul = mul i64 %conv, 36, !dbg !6192
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %3, i64 %mul, i1 false), !dbg !6189
  %5 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !6193
  %6 = load %struct.BPoint*, %struct.BPoint** %src.addr, align 8, !dbg !6194
  %7 = load %struct.BPoint*, %struct.BPoint** %dst.addr, align 8, !dbg !6195
  %8 = load i32, i32* %count.addr, align 4, !dbg !6196
  call void @keyIndex_updateBP(%struct.EditNurb* %5, %struct.BPoint* %6, %struct.BPoint* %7, i32 %8), !dbg !6197
  ret void, !dbg !6198
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @select_bpoint(%struct.BPoint* %bp, i8 zeroext %selstatus, i16 signext %flag, i8 zeroext %hidden) #0 !dbg !6199 {
entry:
  %retval = alloca i8, align 1
  %bp.addr = alloca %struct.BPoint*, align 8
  %selstatus.addr = alloca i8, align 1
  %flag.addr = alloca i16, align 2
  %hidden.addr = alloca i8, align 1
  store %struct.BPoint* %bp, %struct.BPoint** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp.addr, metadata !6202, metadata !DIExpression()), !dbg !6203
  store i8 %selstatus, i8* %selstatus.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %selstatus.addr, metadata !6204, metadata !DIExpression()), !dbg !6205
  store i16 %flag, i16* %flag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %flag.addr, metadata !6206, metadata !DIExpression()), !dbg !6207
  store i8 %hidden, i8* %hidden.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hidden.addr, metadata !6208, metadata !DIExpression()), !dbg !6209
  %0 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !6210
  %hide = getelementptr inbounds %struct.BPoint, %struct.BPoint* %0, i32 0, i32 4, !dbg !6212
  %1 = load i16, i16* %hide, align 2, !dbg !6212
  %conv = sext i16 %1 to i32, !dbg !6210
  %cmp = icmp eq i32 %conv, 0, !dbg !6213
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6214

lor.lhs.false:                                    ; preds = %entry
  %2 = load i8, i8* %hidden.addr, align 1, !dbg !6215
  %conv2 = zext i8 %2 to i32, !dbg !6215
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !6216
  br i1 %cmp3, label %if.then, label %if.end, !dbg !6217

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load i8, i8* %selstatus.addr, align 1, !dbg !6218
  %conv5 = zext i8 %3 to i32, !dbg !6218
  %cmp6 = icmp eq i32 %conv5, 1, !dbg !6221
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !6222

if.then8:                                         ; preds = %if.then
  %4 = load i16, i16* %flag.addr, align 2, !dbg !6223
  %conv9 = sext i16 %4 to i32, !dbg !6223
  %5 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !6225
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %5, i32 0, i32 3, !dbg !6226
  %6 = load i16, i16* %f1, align 4, !dbg !6227
  %conv10 = sext i16 %6 to i32, !dbg !6227
  %or = or i32 %conv10, %conv9, !dbg !6227
  %conv11 = trunc i32 %or to i16, !dbg !6227
  store i16 %conv11, i16* %f1, align 4, !dbg !6227
  store i8 1, i8* %retval, align 1, !dbg !6228
  br label %return, !dbg !6228

if.else:                                          ; preds = %if.then
  %7 = load i16, i16* %flag.addr, align 2, !dbg !6229
  %conv12 = sext i16 %7 to i32, !dbg !6229
  %neg = xor i32 %conv12, -1, !dbg !6231
  %8 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !6232
  %f113 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %8, i32 0, i32 3, !dbg !6233
  %9 = load i16, i16* %f113, align 4, !dbg !6234
  %conv14 = sext i16 %9 to i32, !dbg !6234
  %and = and i32 %conv14, %neg, !dbg !6234
  %conv15 = trunc i32 %and to i16, !dbg !6234
  store i16 %conv15, i16* %f113, align 4, !dbg !6234
  store i8 1, i8* %retval, align 1, !dbg !6235
  br label %return, !dbg !6235

if.end:                                           ; preds = %lor.lhs.false
  store i8 0, i8* %retval, align 1, !dbg !6236
  br label %return, !dbg !6236

return:                                           ; preds = %if.end, %if.else, %if.then8
  %10 = load i8, i8* %retval, align 1, !dbg !6237
  ret i8 %10, !dbg !6237
}

declare dso_local void @BKE_nurb_knot_calc_v(%struct.Nurb*) #2

; Function Attrs: noinline nounwind uwtable
define internal signext i16 @isNurbselUV(%struct.Nurb* %nu, i32* %u, i32* %v, i32 %flag) #0 !dbg !6238 {
entry:
  %retval = alloca i16, align 2
  %nu.addr = alloca %struct.Nurb*, align 8
  %u.addr = alloca i32*, align 8
  %v.addr = alloca i32*, align 8
  %flag.addr = alloca i32, align 4
  %bp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %sel = alloca i32, align 4
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !6241, metadata !DIExpression()), !dbg !6242
  store i32* %u, i32** %u.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %u.addr, metadata !6243, metadata !DIExpression()), !dbg !6244
  store i32* %v, i32** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %v.addr, metadata !6245, metadata !DIExpression()), !dbg !6246
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !6247, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !6249, metadata !DIExpression()), !dbg !6250
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6251, metadata !DIExpression()), !dbg !6252
  call void @llvm.dbg.declare(metadata i32* %b, metadata !6253, metadata !DIExpression()), !dbg !6254
  call void @llvm.dbg.declare(metadata i32* %sel, metadata !6255, metadata !DIExpression()), !dbg !6256
  %0 = load i32*, i32** %v.addr, align 8, !dbg !6257
  store i32 -1, i32* %0, align 4, !dbg !6258
  %1 = load i32*, i32** %u.addr, align 8, !dbg !6259
  store i32 -1, i32* %1, align 4, !dbg !6260
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !6261
  %bp1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %2, i32 0, i32 17, !dbg !6262
  %3 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !6262
  store %struct.BPoint* %3, %struct.BPoint** %bp, align 8, !dbg !6263
  store i32 0, i32* %b, align 4, !dbg !6264
  br label %for.cond, !dbg !6266

for.cond:                                         ; preds = %for.inc20, %entry
  %4 = load i32, i32* %b, align 4, !dbg !6267
  %5 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !6269
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %5, i32 0, i32 7, !dbg !6270
  %6 = load i32, i32* %pntsv, align 4, !dbg !6270
  %cmp = icmp slt i32 %4, %6, !dbg !6271
  br i1 %cmp, label %for.body, label %for.end22, !dbg !6272

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %sel, align 4, !dbg !6273
  store i32 0, i32* %a, align 4, !dbg !6275
  br label %for.cond2, !dbg !6277

for.cond2:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %a, align 4, !dbg !6278
  %8 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !6280
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 6, !dbg !6281
  %9 = load i32, i32* %pntsu, align 8, !dbg !6281
  %cmp3 = icmp slt i32 %7, %9, !dbg !6282
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !6283

for.body4:                                        ; preds = %for.cond2
  %10 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6284
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %10, i32 0, i32 3, !dbg !6287
  %11 = load i16, i16* %f1, align 4, !dbg !6287
  %conv = sext i16 %11 to i32, !dbg !6284
  %12 = load i32, i32* %flag.addr, align 4, !dbg !6288
  %and = and i32 %conv, %12, !dbg !6289
  %tobool = icmp ne i32 %and, 0, !dbg !6289
  br i1 %tobool, label %if.then, label %if.end, !dbg !6290

if.then:                                          ; preds = %for.body4
  %13 = load i32, i32* %sel, align 4, !dbg !6291
  %inc = add nsw i32 %13, 1, !dbg !6291
  store i32 %inc, i32* %sel, align 4, !dbg !6291
  br label %if.end, !dbg !6292

if.end:                                           ; preds = %if.then, %for.body4
  br label %for.inc, !dbg !6293

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %a, align 4, !dbg !6294
  %inc5 = add nsw i32 %14, 1, !dbg !6294
  store i32 %inc5, i32* %a, align 4, !dbg !6294
  %15 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6295
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %15, i32 1, !dbg !6295
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp, align 8, !dbg !6295
  br label %for.cond2, !dbg !6296, !llvm.loop !6297

for.end:                                          ; preds = %for.cond2
  %16 = load i32, i32* %sel, align 4, !dbg !6299
  %17 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !6301
  %pntsu6 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %17, i32 0, i32 6, !dbg !6302
  %18 = load i32, i32* %pntsu6, align 8, !dbg !6302
  %cmp7 = icmp eq i32 %16, %18, !dbg !6303
  br i1 %cmp7, label %if.then9, label %if.else14, !dbg !6304

if.then9:                                         ; preds = %for.end
  %19 = load i32*, i32** %u.addr, align 8, !dbg !6305
  %20 = load i32, i32* %19, align 4, !dbg !6308
  %cmp10 = icmp eq i32 %20, -1, !dbg !6309
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !6310

if.then12:                                        ; preds = %if.then9
  %21 = load i32, i32* %b, align 4, !dbg !6311
  %22 = load i32*, i32** %u.addr, align 8, !dbg !6312
  store i32 %21, i32* %22, align 4, !dbg !6313
  br label %if.end13, !dbg !6314

if.else:                                          ; preds = %if.then9
  store i16 0, i16* %retval, align 2, !dbg !6315
  br label %return, !dbg !6315

if.end13:                                         ; preds = %if.then12
  br label %if.end19, !dbg !6316

if.else14:                                        ; preds = %for.end
  %23 = load i32, i32* %sel, align 4, !dbg !6317
  %cmp15 = icmp sgt i32 %23, 1, !dbg !6319
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !6320

if.then17:                                        ; preds = %if.else14
  store i16 0, i16* %retval, align 2, !dbg !6321
  br label %return, !dbg !6321

if.end18:                                         ; preds = %if.else14
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end13
  br label %for.inc20, !dbg !6323

for.inc20:                                        ; preds = %if.end19
  %24 = load i32, i32* %b, align 4, !dbg !6324
  %inc21 = add nsw i32 %24, 1, !dbg !6324
  store i32 %inc21, i32* %b, align 4, !dbg !6324
  br label %for.cond, !dbg !6325, !llvm.loop !6326

for.end22:                                        ; preds = %for.cond
  store i32 0, i32* %a, align 4, !dbg !6328
  br label %for.cond23, !dbg !6330

for.cond23:                                       ; preds = %for.inc60, %for.end22
  %25 = load i32, i32* %a, align 4, !dbg !6331
  %26 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !6333
  %pntsu24 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %26, i32 0, i32 6, !dbg !6334
  %27 = load i32, i32* %pntsu24, align 8, !dbg !6334
  %cmp25 = icmp slt i32 %25, %27, !dbg !6335
  br i1 %cmp25, label %for.body27, label %for.end62, !dbg !6336

for.body27:                                       ; preds = %for.cond23
  store i32 0, i32* %sel, align 4, !dbg !6337
  %28 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !6339
  %bp28 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 17, !dbg !6340
  %29 = load %struct.BPoint*, %struct.BPoint** %bp28, align 8, !dbg !6340
  %30 = load i32, i32* %a, align 4, !dbg !6341
  %idxprom = sext i32 %30 to i64, !dbg !6339
  %arrayidx = getelementptr inbounds %struct.BPoint, %struct.BPoint* %29, i64 %idxprom, !dbg !6339
  store %struct.BPoint* %arrayidx, %struct.BPoint** %bp, align 8, !dbg !6342
  store i32 0, i32* %b, align 4, !dbg !6343
  br label %for.cond29, !dbg !6345

for.cond29:                                       ; preds = %for.inc41, %for.body27
  %31 = load i32, i32* %b, align 4, !dbg !6346
  %32 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !6348
  %pntsv30 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %32, i32 0, i32 7, !dbg !6349
  %33 = load i32, i32* %pntsv30, align 4, !dbg !6349
  %cmp31 = icmp slt i32 %31, %33, !dbg !6350
  br i1 %cmp31, label %for.body33, label %for.end44, !dbg !6351

for.body33:                                       ; preds = %for.cond29
  %34 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6352
  %f134 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %34, i32 0, i32 3, !dbg !6355
  %35 = load i16, i16* %f134, align 4, !dbg !6355
  %conv35 = sext i16 %35 to i32, !dbg !6352
  %36 = load i32, i32* %flag.addr, align 4, !dbg !6356
  %and36 = and i32 %conv35, %36, !dbg !6357
  %tobool37 = icmp ne i32 %and36, 0, !dbg !6357
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !6358

if.then38:                                        ; preds = %for.body33
  %37 = load i32, i32* %sel, align 4, !dbg !6359
  %inc39 = add nsw i32 %37, 1, !dbg !6359
  store i32 %inc39, i32* %sel, align 4, !dbg !6359
  br label %if.end40, !dbg !6360

if.end40:                                         ; preds = %if.then38, %for.body33
  br label %for.inc41, !dbg !6361

for.inc41:                                        ; preds = %if.end40
  %38 = load i32, i32* %b, align 4, !dbg !6362
  %inc42 = add nsw i32 %38, 1, !dbg !6362
  store i32 %inc42, i32* %b, align 4, !dbg !6362
  %39 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !6363
  %pntsu43 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %39, i32 0, i32 6, !dbg !6364
  %40 = load i32, i32* %pntsu43, align 8, !dbg !6364
  %41 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6365
  %idx.ext = sext i32 %40 to i64, !dbg !6365
  %add.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %41, i64 %idx.ext, !dbg !6365
  store %struct.BPoint* %add.ptr, %struct.BPoint** %bp, align 8, !dbg !6365
  br label %for.cond29, !dbg !6366, !llvm.loop !6367

for.end44:                                        ; preds = %for.cond29
  %42 = load i32, i32* %sel, align 4, !dbg !6369
  %43 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !6371
  %pntsv45 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %43, i32 0, i32 7, !dbg !6372
  %44 = load i32, i32* %pntsv45, align 4, !dbg !6372
  %cmp46 = icmp eq i32 %42, %44, !dbg !6373
  br i1 %cmp46, label %if.then48, label %if.else54, !dbg !6374

if.then48:                                        ; preds = %for.end44
  %45 = load i32*, i32** %v.addr, align 8, !dbg !6375
  %46 = load i32, i32* %45, align 4, !dbg !6378
  %cmp49 = icmp eq i32 %46, -1, !dbg !6379
  br i1 %cmp49, label %if.then51, label %if.else52, !dbg !6380

if.then51:                                        ; preds = %if.then48
  %47 = load i32, i32* %a, align 4, !dbg !6381
  %48 = load i32*, i32** %v.addr, align 8, !dbg !6382
  store i32 %47, i32* %48, align 4, !dbg !6383
  br label %if.end53, !dbg !6384

if.else52:                                        ; preds = %if.then48
  store i16 0, i16* %retval, align 2, !dbg !6385
  br label %return, !dbg !6385

if.end53:                                         ; preds = %if.then51
  br label %if.end59, !dbg !6386

if.else54:                                        ; preds = %for.end44
  %49 = load i32, i32* %sel, align 4, !dbg !6387
  %cmp55 = icmp sgt i32 %49, 1, !dbg !6389
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !6390

if.then57:                                        ; preds = %if.else54
  store i16 0, i16* %retval, align 2, !dbg !6391
  br label %return, !dbg !6391

if.end58:                                         ; preds = %if.else54
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.end53
  br label %for.inc60, !dbg !6393

for.inc60:                                        ; preds = %if.end59
  %50 = load i32, i32* %a, align 4, !dbg !6394
  %inc61 = add nsw i32 %50, 1, !dbg !6394
  store i32 %inc61, i32* %a, align 4, !dbg !6394
  br label %for.cond23, !dbg !6395, !llvm.loop !6396

for.end62:                                        ; preds = %for.cond23
  %51 = load i32*, i32** %u.addr, align 8, !dbg !6398
  %52 = load i32, i32* %51, align 4, !dbg !6400
  %cmp63 = icmp eq i32 %52, -1, !dbg !6401
  br i1 %cmp63, label %land.lhs.true, label %if.end68, !dbg !6402

land.lhs.true:                                    ; preds = %for.end62
  %53 = load i32*, i32** %v.addr, align 8, !dbg !6403
  %54 = load i32, i32* %53, align 4, !dbg !6404
  %cmp65 = icmp sgt i32 %54, -1, !dbg !6405
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !6406

if.then67:                                        ; preds = %land.lhs.true
  store i16 1, i16* %retval, align 2, !dbg !6407
  br label %return, !dbg !6407

if.end68:                                         ; preds = %land.lhs.true, %for.end62
  %55 = load i32*, i32** %v.addr, align 8, !dbg !6408
  %56 = load i32, i32* %55, align 4, !dbg !6410
  %cmp69 = icmp eq i32 %56, -1, !dbg !6411
  br i1 %cmp69, label %land.lhs.true71, label %if.end75, !dbg !6412

land.lhs.true71:                                  ; preds = %if.end68
  %57 = load i32*, i32** %u.addr, align 8, !dbg !6413
  %58 = load i32, i32* %57, align 4, !dbg !6414
  %cmp72 = icmp sgt i32 %58, -1, !dbg !6415
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !6416

if.then74:                                        ; preds = %land.lhs.true71
  store i16 1, i16* %retval, align 2, !dbg !6417
  br label %return, !dbg !6417

if.end75:                                         ; preds = %land.lhs.true71, %if.end68
  store i16 0, i16* %retval, align 2, !dbg !6418
  br label %return, !dbg !6418

return:                                           ; preds = %if.end75, %if.then74, %if.then67, %if.then57, %if.else52, %if.then17, %if.else
  %59 = load i16, i16* %retval, align 2, !dbg !6419
  ret i16 %59, !dbg !6419
}

declare dso_local void @BKE_nurb_knot_calc_u(%struct.Nurb*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_switch_direction(%struct.wmOperatorType* %ot) #0 !dbg !6420 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6421, metadata !DIExpression()), !dbg !6422
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6423
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6424
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8** %name, align 8, !dbg !6425
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6426
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6427
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11, i64 0, i64 0), i8** %description, align 8, !dbg !6428
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6429
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6430
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12, i64 0, i64 0), i8** %idname, align 8, !dbg !6431
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6432
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6433
  store i32 (%struct.bContext*, %struct.wmOperator*)* @switch_direction_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6434
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6435
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6436
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !6437
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6438
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6439
  store i16 3, i16* %flag, align 8, !dbg !6440
  ret void, !dbg !6441
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @switch_direction_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !6442 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %editnurb = alloca %struct.EditNurb*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %i = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6443, metadata !DIExpression()), !dbg !6444
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !6445, metadata !DIExpression()), !dbg !6446
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !6447, metadata !DIExpression()), !dbg !6448
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6449
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !6450
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !6448
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !6451, metadata !DIExpression()), !dbg !6452
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6453
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !6454
  %2 = load i8*, i8** %data, align 8, !dbg !6454
  %3 = bitcast i8* %2 to %struct.Curve*, !dbg !6455
  store %struct.Curve* %3, %struct.Curve** %cu, align 8, !dbg !6452
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb, metadata !6456, metadata !DIExpression()), !dbg !6457
  %4 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6458
  %editnurb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %4, i32 0, i32 4, !dbg !6459
  %5 = load %struct.EditNurb*, %struct.EditNurb** %editnurb1, align 8, !dbg !6459
  store %struct.EditNurb* %5, %struct.EditNurb** %editnurb, align 8, !dbg !6457
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !6460, metadata !DIExpression()), !dbg !6461
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6462, metadata !DIExpression()), !dbg !6463
  %6 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !6464
  %nurbs = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %6, i32 0, i32 0, !dbg !6466
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurbs, i32 0, i32 0, !dbg !6467
  %7 = load i8*, i8** %first, align 8, !dbg !6467
  %8 = bitcast i8* %7 to %struct.Nurb*, !dbg !6464
  store %struct.Nurb* %8, %struct.Nurb** %nu, align 8, !dbg !6468
  store i32 0, i32* %i, align 4, !dbg !6469
  br label %for.cond, !dbg !6470

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6471
  %tobool = icmp ne %struct.Nurb* %9, null, !dbg !6473
  br i1 %tobool, label %for.body, label %for.end, !dbg !6473

for.body:                                         ; preds = %for.cond
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6474
  %call2 = call i32 @isNurbsel(%struct.Nurb* %10), !dbg !6477
  %tobool3 = icmp ne i32 %call2, 0, !dbg !6477
  br i1 %tobool3, label %if.then, label %if.end9, !dbg !6478

if.then:                                          ; preds = %for.body
  %11 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6479
  call void @BKE_nurb_direction_switch(%struct.Nurb* %11), !dbg !6481
  %12 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6482
  %13 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6483
  call void @keyData_switchDirectionNurb(%struct.Curve* %12, %struct.Nurb* %13), !dbg !6484
  %14 = load i32, i32* %i, align 4, !dbg !6485
  %15 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6487
  %actnu = getelementptr inbounds %struct.Curve, %struct.Curve* %15, i32 0, i32 31, !dbg !6488
  %16 = load i32, i32* %actnu, align 4, !dbg !6488
  %cmp = icmp eq i32 %14, %16, !dbg !6489
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6490

land.lhs.true:                                    ; preds = %if.then
  %17 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6491
  %actvert = getelementptr inbounds %struct.Curve, %struct.Curve* %17, i32 0, i32 32, !dbg !6492
  %18 = load i32, i32* %actvert, align 8, !dbg !6492
  %cmp4 = icmp ne i32 %18, -1, !dbg !6493
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !6494

if.then5:                                         ; preds = %land.lhs.true
  %19 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6495
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %19, i32 0, i32 6, !dbg !6497
  %20 = load i32, i32* %pntsu, align 8, !dbg !6497
  %sub = sub nsw i32 %20, 1, !dbg !6498
  %21 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6499
  %actvert6 = getelementptr inbounds %struct.Curve, %struct.Curve* %21, i32 0, i32 32, !dbg !6500
  %22 = load i32, i32* %actvert6, align 8, !dbg !6500
  %sub7 = sub nsw i32 %sub, %22, !dbg !6501
  %23 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6502
  %actvert8 = getelementptr inbounds %struct.Curve, %struct.Curve* %23, i32 0, i32 32, !dbg !6503
  store i32 %sub7, i32* %actvert8, align 8, !dbg !6504
  br label %if.end, !dbg !6505

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.then
  br label %if.end9, !dbg !6506

if.end9:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !6507

for.inc:                                          ; preds = %if.end9
  %24 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6508
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %24, i32 0, i32 0, !dbg !6509
  %25 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !6509
  store %struct.Nurb* %25, %struct.Nurb** %nu, align 8, !dbg !6510
  %26 = load i32, i32* %i, align 4, !dbg !6511
  %inc = add nsw i32 %26, 1, !dbg !6511
  store i32 %inc, i32* %i, align 4, !dbg !6511
  br label %for.cond, !dbg !6512, !llvm.loop !6513

for.end:                                          ; preds = %for.cond
  %27 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6515
  %data10 = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 19, !dbg !6517
  %28 = load i8*, i8** %data10, align 8, !dbg !6517
  %29 = bitcast i8* %28 to %struct.Curve*, !dbg !6515
  %call11 = call i32 @ED_curve_updateAnimPaths(%struct.Curve* %29), !dbg !6518
  %tobool12 = icmp ne i32 %call11, 0, !dbg !6518
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !6519

if.then13:                                        ; preds = %for.end
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6520
  %31 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6521
  %32 = bitcast %struct.Object* %31 to i8*, !dbg !6521
  call void @WM_event_add_notifier(%struct.bContext* %30, i32 85524480, i8* %32), !dbg !6522
  br label %if.end14, !dbg !6522

if.end14:                                         ; preds = %if.then13, %for.end
  %33 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6523
  %data15 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 19, !dbg !6524
  %34 = load i8*, i8** %data15, align 8, !dbg !6524
  %35 = bitcast i8* %34 to %struct.ID*, !dbg !6523
  call void @DAG_id_tag_update(%struct.ID* %35, i16 signext 0), !dbg !6525
  %36 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6526
  %37 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6527
  %data16 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 19, !dbg !6528
  %38 = load i8*, i8** %data16, align 8, !dbg !6528
  call void @WM_event_add_notifier(%struct.bContext* %36, i32 274399232, i8* %38), !dbg !6529
  ret i32 4, !dbg !6530
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_spline_weight_set(%struct.wmOperatorType* %ot) #0 !dbg !6531 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6532, metadata !DIExpression()), !dbg !6533
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6534
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6535
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0), i8** %name, align 8, !dbg !6536
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6537
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6538
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.14, i64 0, i64 0), i8** %description, align 8, !dbg !6539
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6540
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6541
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i8** %idname, align 8, !dbg !6542
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6543
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6544
  store i32 (%struct.bContext*, %struct.wmOperator*)* @set_goal_weight_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6545
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6546
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !6547
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_operator_props_popup, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6548
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6549
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !6550
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !6551
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6552
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !6553
  store i16 3, i16* %flag, align 8, !dbg !6554
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6555
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !6556
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6556
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !6555
  %call = call %struct.PropertyRNA* @RNA_def_float_factor(i8* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0), float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i64 0, i64 0), float 0.000000e+00, float 1.000000e+00), !dbg !6557
  ret void, !dbg !6558
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @set_goal_weight_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6559 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %weight = alloca float, align 4
  %a = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6560, metadata !DIExpression()), !dbg !6561
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6562, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !6564, metadata !DIExpression()), !dbg !6565
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6566
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !6567
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !6565
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !6568, metadata !DIExpression()), !dbg !6569
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6570
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %1), !dbg !6571
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !6569
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !6572, metadata !DIExpression()), !dbg !6573
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !6574, metadata !DIExpression()), !dbg !6575
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !6576, metadata !DIExpression()), !dbg !6577
  call void @llvm.dbg.declare(metadata float* %weight, metadata !6578, metadata !DIExpression()), !dbg !6579
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6580
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !6581
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6581
  %call2 = call float @RNA_float_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0)), !dbg !6582
  store float %call2, float* %weight, align 4, !dbg !6579
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6583, metadata !DIExpression()), !dbg !6584
  %4 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !6585
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %4, i32 0, i32 0, !dbg !6587
  %5 = load i8*, i8** %first, align 8, !dbg !6587
  %6 = bitcast i8* %5 to %struct.Nurb*, !dbg !6585
  store %struct.Nurb* %6, %struct.Nurb** %nu, align 8, !dbg !6588
  br label %for.cond, !dbg !6589

for.cond:                                         ; preds = %for.inc32, %entry
  %7 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6590
  %tobool = icmp ne %struct.Nurb* %7, null, !dbg !6592
  br i1 %tobool, label %for.body, label %for.end33, !dbg !6592

for.body:                                         ; preds = %for.cond
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6593
  %bezt3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 18, !dbg !6596
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt3, align 8, !dbg !6596
  %tobool4 = icmp ne %struct.BezTriple* %9, null, !dbg !6593
  br i1 %tobool4, label %if.then, label %if.else, !dbg !6597

if.then:                                          ; preds = %for.body
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6598
  %bezt5 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 18, !dbg !6601
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt5, align 8, !dbg !6601
  store %struct.BezTriple* %11, %struct.BezTriple** %bezt, align 8, !dbg !6602
  store i32 0, i32* %a, align 4, !dbg !6603
  br label %for.cond6, !dbg !6604

for.cond6:                                        ; preds = %for.inc, %if.then
  %12 = load i32, i32* %a, align 4, !dbg !6605
  %13 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6607
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 6, !dbg !6608
  %14 = load i32, i32* %pntsu, align 8, !dbg !6608
  %cmp = icmp slt i32 %12, %14, !dbg !6609
  br i1 %cmp, label %for.body7, label %for.end, !dbg !6610

for.body7:                                        ; preds = %for.cond6
  %15 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6611
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %15, i32 0, i32 8, !dbg !6614
  %16 = load i8, i8* %f2, align 4, !dbg !6614
  %conv = zext i8 %16 to i32, !dbg !6611
  %and = and i32 %conv, 1, !dbg !6615
  %tobool8 = icmp ne i32 %and, 0, !dbg !6615
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !6616

if.then9:                                         ; preds = %for.body7
  %17 = load float, float* %weight, align 4, !dbg !6617
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6618
  %weight10 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %18, i32 0, i32 2, !dbg !6619
  store float %17, float* %weight10, align 4, !dbg !6620
  br label %if.end, !dbg !6618

if.end:                                           ; preds = %if.then9, %for.body7
  br label %for.inc, !dbg !6621

for.inc:                                          ; preds = %if.end
  %19 = load i32, i32* %a, align 4, !dbg !6622
  %inc = add nsw i32 %19, 1, !dbg !6622
  store i32 %inc, i32* %a, align 4, !dbg !6622
  %20 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6623
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %20, i32 1, !dbg !6623
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !6623
  br label %for.cond6, !dbg !6624, !llvm.loop !6625

for.end:                                          ; preds = %for.cond6
  br label %if.end31, !dbg !6627

if.else:                                          ; preds = %for.body
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6628
  %bp11 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 17, !dbg !6630
  %22 = load %struct.BPoint*, %struct.BPoint** %bp11, align 8, !dbg !6630
  %tobool12 = icmp ne %struct.BPoint* %22, null, !dbg !6628
  br i1 %tobool12, label %if.then13, label %if.end30, !dbg !6631

if.then13:                                        ; preds = %if.else
  %23 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6632
  %bp14 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %23, i32 0, i32 17, !dbg !6635
  %24 = load %struct.BPoint*, %struct.BPoint** %bp14, align 8, !dbg !6635
  store %struct.BPoint* %24, %struct.BPoint** %bp, align 8, !dbg !6636
  store i32 0, i32* %a, align 4, !dbg !6637
  br label %for.cond15, !dbg !6638

for.cond15:                                       ; preds = %for.inc26, %if.then13
  %25 = load i32, i32* %a, align 4, !dbg !6639
  %26 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6641
  %pntsu16 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %26, i32 0, i32 6, !dbg !6642
  %27 = load i32, i32* %pntsu16, align 8, !dbg !6642
  %28 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6643
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 7, !dbg !6644
  %29 = load i32, i32* %pntsv, align 4, !dbg !6644
  %mul = mul nsw i32 %27, %29, !dbg !6645
  %cmp17 = icmp slt i32 %25, %mul, !dbg !6646
  br i1 %cmp17, label %for.body19, label %for.end29, !dbg !6647

for.body19:                                       ; preds = %for.cond15
  %30 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6648
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %30, i32 0, i32 3, !dbg !6651
  %31 = load i16, i16* %f1, align 4, !dbg !6651
  %conv20 = sext i16 %31 to i32, !dbg !6648
  %and21 = and i32 %conv20, 1, !dbg !6652
  %tobool22 = icmp ne i32 %and21, 0, !dbg !6652
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !6653

if.then23:                                        ; preds = %for.body19
  %32 = load float, float* %weight, align 4, !dbg !6654
  %33 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6655
  %weight24 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %33, i32 0, i32 2, !dbg !6656
  store float %32, float* %weight24, align 4, !dbg !6657
  br label %if.end25, !dbg !6655

if.end25:                                         ; preds = %if.then23, %for.body19
  br label %for.inc26, !dbg !6658

for.inc26:                                        ; preds = %if.end25
  %34 = load i32, i32* %a, align 4, !dbg !6659
  %inc27 = add nsw i32 %34, 1, !dbg !6659
  store i32 %inc27, i32* %a, align 4, !dbg !6659
  %35 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6660
  %incdec.ptr28 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %35, i32 1, !dbg !6660
  store %struct.BPoint* %incdec.ptr28, %struct.BPoint** %bp, align 8, !dbg !6660
  br label %for.cond15, !dbg !6661, !llvm.loop !6662

for.end29:                                        ; preds = %for.cond15
  br label %if.end30, !dbg !6664

if.end30:                                         ; preds = %for.end29, %if.else
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %for.end
  br label %for.inc32, !dbg !6665

for.inc32:                                        ; preds = %if.end31
  %36 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6666
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %36, i32 0, i32 0, !dbg !6667
  %37 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !6667
  store %struct.Nurb* %37, %struct.Nurb** %nu, align 8, !dbg !6668
  br label %for.cond, !dbg !6669, !llvm.loop !6670

for.end33:                                        ; preds = %for.cond
  %38 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6672
  %data = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 19, !dbg !6673
  %39 = load i8*, i8** %data, align 8, !dbg !6673
  %40 = bitcast i8* %39 to %struct.ID*, !dbg !6672
  call void @DAG_id_tag_update(%struct.ID* %40, i16 signext 0), !dbg !6674
  %41 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6675
  %42 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6676
  %data34 = getelementptr inbounds %struct.Object, %struct.Object* %42, i32 0, i32 19, !dbg !6677
  %43 = load i8*, i8** %data34, align 8, !dbg !6677
  call void @WM_event_add_notifier(%struct.bContext* %41, i32 274399232, i8* %43), !dbg !6678
  ret i32 4, !dbg !6679
}

declare dso_local i32 @WM_operator_props_popup(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_float_factor(i8*, i8*, float, float, float, i8*, i8*, float, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_radius_set(%struct.wmOperatorType* %ot) #0 !dbg !6680 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6681, metadata !DIExpression()), !dbg !6682
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6683
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6684
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i8** %name, align 8, !dbg !6685
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6686
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6687
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.20, i64 0, i64 0), i8** %description, align 8, !dbg !6688
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6689
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6690
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0), i8** %idname, align 8, !dbg !6691
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6692
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6693
  store i32 (%struct.bContext*, %struct.wmOperator*)* @set_radius_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6694
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6695
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !6696
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_operator_props_popup, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6697
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6698
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !6699
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !6700
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6701
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !6702
  store i16 3, i16* %flag, align 8, !dbg !6703
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6704
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !6705
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6705
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !6704
  %call = call %struct.PropertyRNA* @RNA_def_float(i8* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0), float 1.000000e+00, float 0.000000e+00, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i64 0, i64 0), float 0x3F1A36E2E0000000, float 1.000000e+01), !dbg !6706
  ret void, !dbg !6707
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @set_radius_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6708 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %radius = alloca float, align 4
  %a = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6709, metadata !DIExpression()), !dbg !6710
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6711, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !6713, metadata !DIExpression()), !dbg !6714
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6715
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !6716
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !6714
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !6717, metadata !DIExpression()), !dbg !6718
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6719
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %1), !dbg !6720
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !6718
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !6721, metadata !DIExpression()), !dbg !6722
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !6723, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !6725, metadata !DIExpression()), !dbg !6726
  call void @llvm.dbg.declare(metadata float* %radius, metadata !6727, metadata !DIExpression()), !dbg !6728
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6729
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !6730
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6730
  %call2 = call float @RNA_float_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)), !dbg !6731
  store float %call2, float* %radius, align 4, !dbg !6728
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6732, metadata !DIExpression()), !dbg !6733
  %4 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !6734
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %4, i32 0, i32 0, !dbg !6736
  %5 = load i8*, i8** %first, align 8, !dbg !6736
  %6 = bitcast i8* %5 to %struct.Nurb*, !dbg !6734
  store %struct.Nurb* %6, %struct.Nurb** %nu, align 8, !dbg !6737
  br label %for.cond, !dbg !6738

for.cond:                                         ; preds = %for.inc32, %entry
  %7 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6739
  %tobool = icmp ne %struct.Nurb* %7, null, !dbg !6741
  br i1 %tobool, label %for.body, label %for.end33, !dbg !6741

for.body:                                         ; preds = %for.cond
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6742
  %bezt3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 18, !dbg !6745
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt3, align 8, !dbg !6745
  %tobool4 = icmp ne %struct.BezTriple* %9, null, !dbg !6742
  br i1 %tobool4, label %if.then, label %if.else, !dbg !6746

if.then:                                          ; preds = %for.body
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6747
  %bezt5 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 18, !dbg !6750
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt5, align 8, !dbg !6750
  store %struct.BezTriple* %11, %struct.BezTriple** %bezt, align 8, !dbg !6751
  store i32 0, i32* %a, align 4, !dbg !6752
  br label %for.cond6, !dbg !6753

for.cond6:                                        ; preds = %for.inc, %if.then
  %12 = load i32, i32* %a, align 4, !dbg !6754
  %13 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6756
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 6, !dbg !6757
  %14 = load i32, i32* %pntsu, align 8, !dbg !6757
  %cmp = icmp slt i32 %12, %14, !dbg !6758
  br i1 %cmp, label %for.body7, label %for.end, !dbg !6759

for.body7:                                        ; preds = %for.cond6
  %15 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6760
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %15, i32 0, i32 8, !dbg !6763
  %16 = load i8, i8* %f2, align 4, !dbg !6763
  %conv = zext i8 %16 to i32, !dbg !6760
  %and = and i32 %conv, 1, !dbg !6764
  %tobool8 = icmp ne i32 %and, 0, !dbg !6764
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !6765

if.then9:                                         ; preds = %for.body7
  %17 = load float, float* %radius, align 4, !dbg !6766
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6767
  %radius10 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %18, i32 0, i32 3, !dbg !6768
  store float %17, float* %radius10, align 4, !dbg !6769
  br label %if.end, !dbg !6767

if.end:                                           ; preds = %if.then9, %for.body7
  br label %for.inc, !dbg !6770

for.inc:                                          ; preds = %if.end
  %19 = load i32, i32* %a, align 4, !dbg !6771
  %inc = add nsw i32 %19, 1, !dbg !6771
  store i32 %inc, i32* %a, align 4, !dbg !6771
  %20 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6772
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %20, i32 1, !dbg !6772
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !6772
  br label %for.cond6, !dbg !6773, !llvm.loop !6774

for.end:                                          ; preds = %for.cond6
  br label %if.end31, !dbg !6776

if.else:                                          ; preds = %for.body
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6777
  %bp11 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 17, !dbg !6779
  %22 = load %struct.BPoint*, %struct.BPoint** %bp11, align 8, !dbg !6779
  %tobool12 = icmp ne %struct.BPoint* %22, null, !dbg !6777
  br i1 %tobool12, label %if.then13, label %if.end30, !dbg !6780

if.then13:                                        ; preds = %if.else
  %23 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6781
  %bp14 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %23, i32 0, i32 17, !dbg !6784
  %24 = load %struct.BPoint*, %struct.BPoint** %bp14, align 8, !dbg !6784
  store %struct.BPoint* %24, %struct.BPoint** %bp, align 8, !dbg !6785
  store i32 0, i32* %a, align 4, !dbg !6786
  br label %for.cond15, !dbg !6787

for.cond15:                                       ; preds = %for.inc26, %if.then13
  %25 = load i32, i32* %a, align 4, !dbg !6788
  %26 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6790
  %pntsu16 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %26, i32 0, i32 6, !dbg !6791
  %27 = load i32, i32* %pntsu16, align 8, !dbg !6791
  %28 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6792
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 7, !dbg !6793
  %29 = load i32, i32* %pntsv, align 4, !dbg !6793
  %mul = mul nsw i32 %27, %29, !dbg !6794
  %cmp17 = icmp slt i32 %25, %mul, !dbg !6795
  br i1 %cmp17, label %for.body19, label %for.end29, !dbg !6796

for.body19:                                       ; preds = %for.cond15
  %30 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6797
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %30, i32 0, i32 3, !dbg !6800
  %31 = load i16, i16* %f1, align 4, !dbg !6800
  %conv20 = sext i16 %31 to i32, !dbg !6797
  %and21 = and i32 %conv20, 1, !dbg !6801
  %tobool22 = icmp ne i32 %and21, 0, !dbg !6801
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !6802

if.then23:                                        ; preds = %for.body19
  %32 = load float, float* %radius, align 4, !dbg !6803
  %33 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6804
  %radius24 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %33, i32 0, i32 5, !dbg !6805
  store float %32, float* %radius24, align 4, !dbg !6806
  br label %if.end25, !dbg !6804

if.end25:                                         ; preds = %if.then23, %for.body19
  br label %for.inc26, !dbg !6807

for.inc26:                                        ; preds = %if.end25
  %34 = load i32, i32* %a, align 4, !dbg !6808
  %inc27 = add nsw i32 %34, 1, !dbg !6808
  store i32 %inc27, i32* %a, align 4, !dbg !6808
  %35 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6809
  %incdec.ptr28 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %35, i32 1, !dbg !6809
  store %struct.BPoint* %incdec.ptr28, %struct.BPoint** %bp, align 8, !dbg !6809
  br label %for.cond15, !dbg !6810, !llvm.loop !6811

for.end29:                                        ; preds = %for.cond15
  br label %if.end30, !dbg !6813

if.end30:                                         ; preds = %for.end29, %if.else
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %for.end
  br label %for.inc32, !dbg !6814

for.inc32:                                        ; preds = %if.end31
  %36 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6815
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %36, i32 0, i32 0, !dbg !6816
  %37 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !6816
  store %struct.Nurb* %37, %struct.Nurb** %nu, align 8, !dbg !6817
  br label %for.cond, !dbg !6818, !llvm.loop !6819

for.end33:                                        ; preds = %for.cond
  %38 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6821
  %39 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6822
  %data = getelementptr inbounds %struct.Object, %struct.Object* %39, i32 0, i32 19, !dbg !6823
  %40 = load i8*, i8** %data, align 8, !dbg !6823
  call void @WM_event_add_notifier(%struct.bContext* %38, i32 274399232, i8* %40), !dbg !6824
  %41 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6825
  %data34 = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 19, !dbg !6826
  %42 = load i8*, i8** %data34, align 8, !dbg !6826
  %43 = bitcast i8* %42 to %struct.ID*, !dbg !6825
  call void @DAG_id_tag_update(%struct.ID* %43, i16 signext 0), !dbg !6827
  ret i32 4, !dbg !6828
}

declare dso_local %struct.PropertyRNA* @RNA_def_float(i8*, i8*, float, float, float, i8*, i8*, float, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_smooth(%struct.wmOperatorType* %ot) #0 !dbg !6829 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6830, metadata !DIExpression()), !dbg !6831
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6832
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6833
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), i8** %name, align 8, !dbg !6834
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6835
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6836
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.25, i64 0, i64 0), i8** %description, align 8, !dbg !6837
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6838
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6839
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i64 0, i64 0), i8** %idname, align 8, !dbg !6840
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6841
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6842
  store i32 (%struct.bContext*, %struct.wmOperator*)* @smooth_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6843
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6844
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6845
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !6846
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6847
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6848
  store i16 3, i16* %flag, align 8, !dbg !6849
  ret void, !dbg !6850
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @smooth_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !6851 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %factor = alloca float, align 4
  %obedit = alloca %struct.Object*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %a = alloca i32, align 4
  %a_end = alloca i32, align 4
  %changed = alloca i8, align 1
  %bezt_orig = alloca %struct.BezTriple*, align 8
  %bezt5 = alloca %struct.BezTriple*, align 8
  %bezt_orig_prev = alloca %struct.BezTriple*, align 8
  %bezt_orig_next = alloca %struct.BezTriple*, align 8
  %bp_orig = alloca %struct.BPoint*, align 8
  %bp35 = alloca %struct.BPoint*, align 8
  %bp_orig_prev = alloca %struct.BPoint*, align 8
  %bp_orig_next = alloca %struct.BPoint*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6852, metadata !DIExpression()), !dbg !6853
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !6854, metadata !DIExpression()), !dbg !6855
  call void @llvm.dbg.declare(metadata float* %factor, metadata !6856, metadata !DIExpression()), !dbg !6857
  store float 0x3FC5555560000000, float* %factor, align 4, !dbg !6857
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !6858, metadata !DIExpression()), !dbg !6859
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6860
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !6861
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !6859
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !6862, metadata !DIExpression()), !dbg !6863
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6864
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %1), !dbg !6865
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !6863
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !6866, metadata !DIExpression()), !dbg !6867
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6868, metadata !DIExpression()), !dbg !6869
  call void @llvm.dbg.declare(metadata i32* %a_end, metadata !6870, metadata !DIExpression()), !dbg !6871
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !6872, metadata !DIExpression()), !dbg !6873
  store i8 0, i8* %changed, align 1, !dbg !6873
  %2 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !6874
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %2, i32 0, i32 0, !dbg !6876
  %3 = load i8*, i8** %first, align 8, !dbg !6876
  %4 = bitcast i8* %3 to %struct.Nurb*, !dbg !6874
  store %struct.Nurb* %4, %struct.Nurb** %nu, align 8, !dbg !6877
  br label %for.cond, !dbg !6878

for.cond:                                         ; preds = %for.inc73, %entry
  %5 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6879
  %tobool = icmp ne %struct.Nurb* %5, null, !dbg !6881
  br i1 %tobool, label %for.body, label %for.end74, !dbg !6881

for.body:                                         ; preds = %for.cond
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6882
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 18, !dbg !6885
  %7 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6885
  %tobool2 = icmp ne %struct.BezTriple* %7, null, !dbg !6882
  br i1 %tobool2, label %if.then, label %if.else30, !dbg !6886

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt_orig, metadata !6887, metadata !DIExpression()), !dbg !6891
  %8 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !6892
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6893
  %bezt3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 18, !dbg !6894
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt3, align 8, !dbg !6894
  %11 = bitcast %struct.BezTriple* %10 to i8*, !dbg !6893
  %call4 = call i8* %8(i8* %11), !dbg !6892
  %12 = bitcast i8* %call4 to %struct.BezTriple*, !dbg !6892
  store %struct.BezTriple* %12, %struct.BezTriple** %bezt_orig, align 8, !dbg !6891
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt5, metadata !6895, metadata !DIExpression()), !dbg !6896
  store i8 0, i8* %changed, align 1, !dbg !6897
  %13 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6898
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 13, !dbg !6900
  %14 = load i16, i16* %flagu, align 4, !dbg !6900
  %conv = sext i16 %14 to i32, !dbg !6898
  %and = and i32 %conv, 1, !dbg !6901
  %tobool6 = icmp ne i32 %and, 0, !dbg !6901
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !6902

if.then7:                                         ; preds = %if.then
  store i32 0, i32* %a, align 4, !dbg !6903
  %15 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6905
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %15, i32 0, i32 6, !dbg !6906
  %16 = load i32, i32* %pntsu, align 8, !dbg !6906
  store i32 %16, i32* %a_end, align 4, !dbg !6907
  br label %if.end, !dbg !6908

if.else:                                          ; preds = %if.then
  store i32 1, i32* %a, align 4, !dbg !6909
  %17 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6911
  %pntsu8 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %17, i32 0, i32 6, !dbg !6912
  %18 = load i32, i32* %pntsu8, align 8, !dbg !6912
  %sub = sub nsw i32 %18, 1, !dbg !6913
  store i32 %sub, i32* %a_end, align 4, !dbg !6914
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  br label %for.cond9, !dbg !6915

for.cond9:                                        ; preds = %for.inc, %if.end
  %19 = load i32, i32* %a, align 4, !dbg !6916
  %20 = load i32, i32* %a_end, align 4, !dbg !6919
  %cmp = icmp slt i32 %19, %20, !dbg !6920
  br i1 %cmp, label %for.body11, label %for.end, !dbg !6921

for.body11:                                       ; preds = %for.cond9
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6922
  %bezt12 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 18, !dbg !6924
  %22 = load %struct.BezTriple*, %struct.BezTriple** %bezt12, align 8, !dbg !6924
  %23 = load i32, i32* %a, align 4, !dbg !6925
  %idxprom = sext i32 %23 to i64, !dbg !6922
  %arrayidx = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %22, i64 %idxprom, !dbg !6922
  store %struct.BezTriple* %arrayidx, %struct.BezTriple** %bezt5, align 8, !dbg !6926
  %24 = load %struct.BezTriple*, %struct.BezTriple** %bezt5, align 8, !dbg !6927
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %24, i32 0, i32 8, !dbg !6929
  %25 = load i8, i8* %f2, align 4, !dbg !6929
  %conv13 = zext i8 %25 to i32, !dbg !6927
  %and14 = and i32 %conv13, 1, !dbg !6930
  %tobool15 = icmp ne i32 %and14, 0, !dbg !6930
  br i1 %tobool15, label %if.then16, label %if.end26, !dbg !6931

if.then16:                                        ; preds = %for.body11
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt_orig_prev, metadata !6932, metadata !DIExpression()), !dbg !6934
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt_orig_next, metadata !6935, metadata !DIExpression()), !dbg !6936
  %26 = load %struct.BezTriple*, %struct.BezTriple** %bezt_orig, align 8, !dbg !6937
  %27 = load i32, i32* %a, align 4, !dbg !6938
  %sub17 = sub nsw i32 %27, 1, !dbg !6939
  %28 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6940
  %pntsu18 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 6, !dbg !6941
  %29 = load i32, i32* %pntsu18, align 8, !dbg !6941
  %call19 = call i32 @mod_i(i32 %sub17, i32 %29), !dbg !6942
  %idxprom20 = sext i32 %call19 to i64, !dbg !6937
  %arrayidx21 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %26, i64 %idxprom20, !dbg !6937
  store %struct.BezTriple* %arrayidx21, %struct.BezTriple** %bezt_orig_prev, align 8, !dbg !6943
  %30 = load %struct.BezTriple*, %struct.BezTriple** %bezt_orig, align 8, !dbg !6944
  %31 = load i32, i32* %a, align 4, !dbg !6945
  %add = add nsw i32 %31, 1, !dbg !6946
  %32 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6947
  %pntsu22 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %32, i32 0, i32 6, !dbg !6948
  %33 = load i32, i32* %pntsu22, align 8, !dbg !6948
  %call23 = call i32 @mod_i(i32 %add, i32 %33), !dbg !6949
  %idxprom24 = sext i32 %call23 to i64, !dbg !6944
  %arrayidx25 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %30, i64 %idxprom24, !dbg !6944
  store %struct.BezTriple* %arrayidx25, %struct.BezTriple** %bezt_orig_next, align 8, !dbg !6950
  %34 = load %struct.BezTriple*, %struct.BezTriple** %bezt5, align 8, !dbg !6951
  %35 = load %struct.BezTriple*, %struct.BezTriple** %bezt_orig_prev, align 8, !dbg !6952
  %36 = load %struct.BezTriple*, %struct.BezTriple** %bezt_orig_next, align 8, !dbg !6953
  call void @smooth_single_bezt(%struct.BezTriple* %34, %struct.BezTriple* %35, %struct.BezTriple* %36, float 0x3FC5555560000000), !dbg !6954
  store i8 1, i8* %changed, align 1, !dbg !6955
  br label %if.end26, !dbg !6956

if.end26:                                         ; preds = %if.then16, %for.body11
  br label %for.inc, !dbg !6957

for.inc:                                          ; preds = %if.end26
  %37 = load i32, i32* %a, align 4, !dbg !6958
  %inc = add nsw i32 %37, 1, !dbg !6958
  store i32 %inc, i32* %a, align 4, !dbg !6958
  br label %for.cond9, !dbg !6959, !llvm.loop !6960

for.end:                                          ; preds = %for.cond9
  %38 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6962
  %39 = load %struct.BezTriple*, %struct.BezTriple** %bezt_orig, align 8, !dbg !6963
  %40 = bitcast %struct.BezTriple* %39 to i8*, !dbg !6964
  call void %38(i8* %40), !dbg !6962
  %41 = load i8, i8* %changed, align 1, !dbg !6965
  %tobool27 = icmp ne i8 %41, 0, !dbg !6965
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !6967

if.then28:                                        ; preds = %for.end
  %42 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6968
  call void @BKE_nurb_handles_calc(%struct.Nurb* %42), !dbg !6970
  br label %if.end29, !dbg !6971

if.end29:                                         ; preds = %if.then28, %for.end
  br label %if.end72, !dbg !6972

if.else30:                                        ; preds = %for.body
  %43 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6973
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %43, i32 0, i32 17, !dbg !6975
  %44 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6975
  %tobool31 = icmp ne %struct.BPoint* %44, null, !dbg !6973
  br i1 %tobool31, label %if.then32, label %if.end71, !dbg !6976

if.then32:                                        ; preds = %if.else30
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp_orig, metadata !6977, metadata !DIExpression()), !dbg !6981
  %45 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !6982
  %46 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6983
  %bp33 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %46, i32 0, i32 17, !dbg !6984
  %47 = load %struct.BPoint*, %struct.BPoint** %bp33, align 8, !dbg !6984
  %48 = bitcast %struct.BPoint* %47 to i8*, !dbg !6983
  %call34 = call i8* %45(i8* %48), !dbg !6982
  %49 = bitcast i8* %call34 to %struct.BPoint*, !dbg !6982
  store %struct.BPoint* %49, %struct.BPoint** %bp_orig, align 8, !dbg !6981
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp35, metadata !6985, metadata !DIExpression()), !dbg !6986
  %50 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6987
  %flagu36 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %50, i32 0, i32 13, !dbg !6989
  %51 = load i16, i16* %flagu36, align 4, !dbg !6989
  %conv37 = sext i16 %51 to i32, !dbg !6987
  %and38 = and i32 %conv37, 1, !dbg !6990
  %tobool39 = icmp ne i32 %and38, 0, !dbg !6990
  br i1 %tobool39, label %if.then40, label %if.else42, !dbg !6991

if.then40:                                        ; preds = %if.then32
  store i32 0, i32* %a, align 4, !dbg !6992
  %52 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6994
  %pntsu41 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %52, i32 0, i32 6, !dbg !6995
  %53 = load i32, i32* %pntsu41, align 8, !dbg !6995
  store i32 %53, i32* %a_end, align 4, !dbg !6996
  br label %if.end45, !dbg !6997

if.else42:                                        ; preds = %if.then32
  store i32 1, i32* %a, align 4, !dbg !6998
  %54 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7000
  %pntsu43 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %54, i32 0, i32 6, !dbg !7001
  %55 = load i32, i32* %pntsu43, align 8, !dbg !7001
  %sub44 = sub nsw i32 %55, 1, !dbg !7002
  store i32 %sub44, i32* %a_end, align 4, !dbg !7003
  br label %if.end45

if.end45:                                         ; preds = %if.else42, %if.then40
  br label %for.cond46, !dbg !7004

for.cond46:                                       ; preds = %for.inc68, %if.end45
  %56 = load i32, i32* %a, align 4, !dbg !7005
  %57 = load i32, i32* %a_end, align 4, !dbg !7008
  %cmp47 = icmp slt i32 %56, %57, !dbg !7009
  br i1 %cmp47, label %for.body49, label %for.end70, !dbg !7010

for.body49:                                       ; preds = %for.cond46
  %58 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7011
  %bp50 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %58, i32 0, i32 17, !dbg !7013
  %59 = load %struct.BPoint*, %struct.BPoint** %bp50, align 8, !dbg !7013
  %60 = load i32, i32* %a, align 4, !dbg !7014
  %idxprom51 = sext i32 %60 to i64, !dbg !7011
  %arrayidx52 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %59, i64 %idxprom51, !dbg !7011
  store %struct.BPoint* %arrayidx52, %struct.BPoint** %bp35, align 8, !dbg !7015
  %61 = load %struct.BPoint*, %struct.BPoint** %bp35, align 8, !dbg !7016
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %61, i32 0, i32 3, !dbg !7018
  %62 = load i16, i16* %f1, align 4, !dbg !7018
  %conv53 = sext i16 %62 to i32, !dbg !7016
  %and54 = and i32 %conv53, 1, !dbg !7019
  %tobool55 = icmp ne i32 %and54, 0, !dbg !7019
  br i1 %tobool55, label %if.then56, label %if.end67, !dbg !7020

if.then56:                                        ; preds = %for.body49
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp_orig_prev, metadata !7021, metadata !DIExpression()), !dbg !7023
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp_orig_next, metadata !7024, metadata !DIExpression()), !dbg !7025
  %63 = load %struct.BPoint*, %struct.BPoint** %bp_orig, align 8, !dbg !7026
  %64 = load i32, i32* %a, align 4, !dbg !7027
  %sub57 = sub nsw i32 %64, 1, !dbg !7028
  %65 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7029
  %pntsu58 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %65, i32 0, i32 6, !dbg !7030
  %66 = load i32, i32* %pntsu58, align 8, !dbg !7030
  %call59 = call i32 @mod_i(i32 %sub57, i32 %66), !dbg !7031
  %idxprom60 = sext i32 %call59 to i64, !dbg !7026
  %arrayidx61 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %63, i64 %idxprom60, !dbg !7026
  store %struct.BPoint* %arrayidx61, %struct.BPoint** %bp_orig_prev, align 8, !dbg !7032
  %67 = load %struct.BPoint*, %struct.BPoint** %bp_orig, align 8, !dbg !7033
  %68 = load i32, i32* %a, align 4, !dbg !7034
  %add62 = add nsw i32 %68, 1, !dbg !7035
  %69 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7036
  %pntsu63 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %69, i32 0, i32 6, !dbg !7037
  %70 = load i32, i32* %pntsu63, align 8, !dbg !7037
  %call64 = call i32 @mod_i(i32 %add62, i32 %70), !dbg !7038
  %idxprom65 = sext i32 %call64 to i64, !dbg !7033
  %arrayidx66 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %67, i64 %idxprom65, !dbg !7033
  store %struct.BPoint* %arrayidx66, %struct.BPoint** %bp_orig_next, align 8, !dbg !7039
  %71 = load %struct.BPoint*, %struct.BPoint** %bp35, align 8, !dbg !7040
  %72 = load %struct.BPoint*, %struct.BPoint** %bp_orig_prev, align 8, !dbg !7041
  %73 = load %struct.BPoint*, %struct.BPoint** %bp_orig_next, align 8, !dbg !7042
  call void @smooth_single_bp(%struct.BPoint* %71, %struct.BPoint* %72, %struct.BPoint* %73, float 0x3FC5555560000000), !dbg !7043
  br label %if.end67, !dbg !7044

if.end67:                                         ; preds = %if.then56, %for.body49
  br label %for.inc68, !dbg !7045

for.inc68:                                        ; preds = %if.end67
  %74 = load i32, i32* %a, align 4, !dbg !7046
  %inc69 = add nsw i32 %74, 1, !dbg !7046
  store i32 %inc69, i32* %a, align 4, !dbg !7046
  br label %for.cond46, !dbg !7047, !llvm.loop !7048

for.end70:                                        ; preds = %for.cond46
  %75 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7050
  %76 = load %struct.BPoint*, %struct.BPoint** %bp_orig, align 8, !dbg !7051
  %77 = bitcast %struct.BPoint* %76 to i8*, !dbg !7052
  call void %75(i8* %77), !dbg !7050
  br label %if.end71, !dbg !7053

if.end71:                                         ; preds = %for.end70, %if.else30
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.end29
  br label %for.inc73, !dbg !7054

for.inc73:                                        ; preds = %if.end72
  %78 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7055
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %78, i32 0, i32 0, !dbg !7056
  %79 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !7056
  store %struct.Nurb* %79, %struct.Nurb** %nu, align 8, !dbg !7057
  br label %for.cond, !dbg !7058, !llvm.loop !7059

for.end74:                                        ; preds = %for.cond
  %80 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7061
  %81 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7062
  %data = getelementptr inbounds %struct.Object, %struct.Object* %81, i32 0, i32 19, !dbg !7063
  %82 = load i8*, i8** %data, align 8, !dbg !7063
  call void @WM_event_add_notifier(%struct.bContext* %80, i32 274399232, i8* %82), !dbg !7064
  %83 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7065
  %data75 = getelementptr inbounds %struct.Object, %struct.Object* %83, i32 0, i32 19, !dbg !7066
  %84 = load i8*, i8** %data75, align 8, !dbg !7066
  %85 = bitcast i8* %84 to %struct.ID*, !dbg !7065
  call void @DAG_id_tag_update(%struct.ID* %85, i16 signext 0), !dbg !7067
  ret i32 4, !dbg !7068
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_smooth_weight(%struct.wmOperatorType* %ot) #0 !dbg !7069 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7070, metadata !DIExpression()), !dbg !7071
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7072
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7073
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.27, i64 0, i64 0), i8** %name, align 8, !dbg !7074
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7075
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !7076
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.28, i64 0, i64 0), i8** %description, align 8, !dbg !7077
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7078
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !7079
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.29, i64 0, i64 0), i8** %idname, align 8, !dbg !7080
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7081
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7082
  store i32 (%struct.bContext*, %struct.wmOperator*)* @curve_smooth_weight_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7083
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7084
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7085
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !7086
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7087
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7088
  store i16 3, i16* %flag, align 8, !dbg !7089
  ret void, !dbg !7090
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @curve_smooth_weight_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !7091 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7092, metadata !DIExpression()), !dbg !7093
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !7094, metadata !DIExpression()), !dbg !7095
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7096, metadata !DIExpression()), !dbg !7097
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7098
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !7099
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7097
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !7100, metadata !DIExpression()), !dbg !7101
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7102
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %1), !dbg !7103
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !7101
  %2 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !7104
  call void @curve_smooth_value(%struct.ListBase* %2, i32 40, i32 20), !dbg !7105
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7106
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7107
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !7108
  %5 = load i8*, i8** %data, align 8, !dbg !7108
  call void @WM_event_add_notifier(%struct.bContext* %3, i32 274399232, i8* %5), !dbg !7109
  %6 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7110
  %data2 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 19, !dbg !7111
  %7 = load i8*, i8** %data2, align 8, !dbg !7111
  %8 = bitcast i8* %7 to %struct.ID*, !dbg !7110
  call void @DAG_id_tag_update(%struct.ID* %8, i16 signext 0), !dbg !7112
  ret i32 4, !dbg !7113
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_smooth_radius(%struct.wmOperatorType* %ot) #0 !dbg !7114 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7115, metadata !DIExpression()), !dbg !7116
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7117
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7118
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.30, i64 0, i64 0), i8** %name, align 8, !dbg !7119
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7120
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !7121
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.31, i64 0, i64 0), i8** %description, align 8, !dbg !7122
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7123
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !7124
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i64 0, i64 0), i8** %idname, align 8, !dbg !7125
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7126
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7127
  store i32 (%struct.bContext*, %struct.wmOperator*)* @curve_smooth_radius_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7128
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7129
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7130
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !7131
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7132
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7133
  store i16 3, i16* %flag, align 8, !dbg !7134
  ret void, !dbg !7135
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @curve_smooth_radius_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !7136 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7137, metadata !DIExpression()), !dbg !7138
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !7139, metadata !DIExpression()), !dbg !7140
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7141, metadata !DIExpression()), !dbg !7142
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7143
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !7144
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7142
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !7145, metadata !DIExpression()), !dbg !7146
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7147
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %1), !dbg !7148
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !7146
  %2 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !7149
  call void @curve_smooth_value(%struct.ListBase* %2, i32 44, i32 28), !dbg !7150
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7151
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7152
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !7153
  %5 = load i8*, i8** %data, align 8, !dbg !7153
  call void @WM_event_add_notifier(%struct.bContext* %3, i32 274399232, i8* %5), !dbg !7154
  %6 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7155
  %data2 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 19, !dbg !7156
  %7 = load i8*, i8** %data2, align 8, !dbg !7156
  %8 = bitcast i8* %7 to %struct.ID*, !dbg !7155
  call void @DAG_id_tag_update(%struct.ID* %8, i16 signext 0), !dbg !7157
  ret i32 4, !dbg !7158
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_smooth_tilt(%struct.wmOperatorType* %ot) #0 !dbg !7159 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7160, metadata !DIExpression()), !dbg !7161
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7162
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7163
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8** %name, align 8, !dbg !7164
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7165
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !7166
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.34, i64 0, i64 0), i8** %description, align 8, !dbg !7167
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7168
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !7169
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35, i64 0, i64 0), i8** %idname, align 8, !dbg !7170
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7171
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7172
  store i32 (%struct.bContext*, %struct.wmOperator*)* @curve_smooth_tilt_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7173
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7174
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7175
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !7176
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7177
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7178
  store i16 3, i16* %flag, align 8, !dbg !7179
  ret void, !dbg !7180
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @curve_smooth_tilt_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !7181 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7182, metadata !DIExpression()), !dbg !7183
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !7184, metadata !DIExpression()), !dbg !7185
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7186, metadata !DIExpression()), !dbg !7187
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7188
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !7189
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7187
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !7190, metadata !DIExpression()), !dbg !7191
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7192
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %1), !dbg !7193
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !7191
  %2 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !7194
  call void @curve_smooth_value(%struct.ListBase* %2, i32 36, i32 16), !dbg !7195
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7196
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7197
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !7198
  %5 = load i8*, i8** %data, align 8, !dbg !7198
  call void @WM_event_add_notifier(%struct.bContext* %3, i32 274399232, i8* %5), !dbg !7199
  %6 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7200
  %data2 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 19, !dbg !7201
  %7 = load i8*, i8** %data2, align 8, !dbg !7201
  %8 = bitcast i8* %7 to %struct.ID*, !dbg !7200
  call void @DAG_id_tag_update(%struct.ID* %8, i16 signext 0), !dbg !7202
  ret i32 4, !dbg !7203
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @selectend_nurb(%struct.Object* %obedit, i32 %selfirst, i8 zeroext %doswap, i8 zeroext %selstatus) #0 !dbg !7204 {
entry:
  %obedit.addr = alloca %struct.Object*, align 8
  %selfirst.addr = alloca i32, align 4
  %doswap.addr = alloca i8, align 1
  %selstatus.addr = alloca i8, align 1
  %editnurb = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %cu = alloca %struct.Curve*, align 8
  %a = alloca i32, align 4
  %sel = alloca i8, align 1
  %sel42 = alloca i8, align 1
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !7208, metadata !DIExpression()), !dbg !7209
  store i32 %selfirst, i32* %selfirst.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %selfirst.addr, metadata !7210, metadata !DIExpression()), !dbg !7211
  store i8 %doswap, i8* %doswap.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %doswap.addr, metadata !7212, metadata !DIExpression()), !dbg !7213
  store i8 %selstatus, i8* %selstatus.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %selstatus.addr, metadata !7214, metadata !DIExpression()), !dbg !7215
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !7216, metadata !DIExpression()), !dbg !7217
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !7218
  %call = call %struct.ListBase* @object_editcurve_get(%struct.Object* %0), !dbg !7219
  store %struct.ListBase* %call, %struct.ListBase** %editnurb, align 8, !dbg !7217
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !7220, metadata !DIExpression()), !dbg !7221
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !7222, metadata !DIExpression()), !dbg !7223
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !7224, metadata !DIExpression()), !dbg !7225
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !7226, metadata !DIExpression()), !dbg !7227
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7228, metadata !DIExpression()), !dbg !7229
  %1 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !7230
  %cmp = icmp eq %struct.Object* %1, null, !dbg !7232
  br i1 %cmp, label %if.then, label %if.end, !dbg !7233

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !7234

if.end:                                           ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !7235
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !7236
  %3 = load i8*, i8** %data, align 8, !dbg !7236
  %4 = bitcast i8* %3 to %struct.Curve*, !dbg !7237
  store %struct.Curve* %4, %struct.Curve** %cu, align 8, !dbg !7238
  %5 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7239
  %actvert = getelementptr inbounds %struct.Curve, %struct.Curve* %5, i32 0, i32 32, !dbg !7240
  store i32 -1, i32* %actvert, align 8, !dbg !7241
  %6 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !7242
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %6, i32 0, i32 0, !dbg !7244
  %7 = load i8*, i8** %first, align 8, !dbg !7244
  %8 = bitcast i8* %7 to %struct.Nurb*, !dbg !7242
  store %struct.Nurb* %8, %struct.Nurb** %nu, align 8, !dbg !7245
  br label %for.cond, !dbg !7246

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7247
  %tobool = icmp ne %struct.Nurb* %9, null, !dbg !7249
  br i1 %tobool, label %for.body, label %for.end, !dbg !7249

for.body:                                         ; preds = %for.cond
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7250
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 2, !dbg !7253
  %11 = load i16, i16* %type, align 8, !dbg !7253
  %conv = sext i16 %11 to i32, !dbg !7250
  %cmp1 = icmp eq i32 %conv, 1, !dbg !7254
  br i1 %cmp1, label %if.then3, label %if.else22, !dbg !7255

if.then3:                                         ; preds = %for.body
  %12 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7256
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 6, !dbg !7258
  %13 = load i32, i32* %pntsu, align 8, !dbg !7258
  store i32 %13, i32* %a, align 4, !dbg !7259
  %14 = load i32, i32* %selfirst.addr, align 4, !dbg !7260
  %cmp4 = icmp eq i32 %14, 0, !dbg !7262
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !7263

if.then6:                                         ; preds = %if.then3
  %15 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7264
  %bezt7 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %15, i32 0, i32 18, !dbg !7266
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt7, align 8, !dbg !7266
  %17 = load i32, i32* %a, align 4, !dbg !7267
  %sub = sub nsw i32 %17, 1, !dbg !7268
  %idxprom = sext i32 %sub to i64, !dbg !7264
  %arrayidx = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %16, i64 %idxprom, !dbg !7264
  store %struct.BezTriple* %arrayidx, %struct.BezTriple** %bezt, align 8, !dbg !7269
  br label %if.end9, !dbg !7270

if.else:                                          ; preds = %if.then3
  %18 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7271
  %bezt8 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %18, i32 0, i32 18, !dbg !7273
  %19 = load %struct.BezTriple*, %struct.BezTriple** %bezt8, align 8, !dbg !7273
  store %struct.BezTriple* %19, %struct.BezTriple** %bezt, align 8, !dbg !7274
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then6
  br label %while.cond, !dbg !7275

while.cond:                                       ; preds = %if.end21, %if.end9
  %20 = load i32, i32* %a, align 4, !dbg !7276
  %dec = add nsw i32 %20, -1, !dbg !7276
  store i32 %dec, i32* %a, align 4, !dbg !7276
  %tobool10 = icmp ne i32 %20, 0, !dbg !7275
  br i1 %tobool10, label %while.body, label %while.end, !dbg !7275

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %sel, metadata !7277, metadata !DIExpression()), !dbg !7279
  %21 = load i8, i8* %doswap.addr, align 1, !dbg !7280
  %tobool11 = icmp ne i8 %21, 0, !dbg !7280
  br i1 %tobool11, label %if.then12, label %if.else14, !dbg !7282

if.then12:                                        ; preds = %while.body
  %22 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7283
  %call13 = call zeroext i8 @swap_selection_beztriple(%struct.BezTriple* %22), !dbg !7284
  store i8 %call13, i8* %sel, align 1, !dbg !7285
  br label %if.end16, !dbg !7286

if.else14:                                        ; preds = %while.body
  %23 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7287
  %24 = load i8, i8* %selstatus.addr, align 1, !dbg !7288
  %call15 = call zeroext i8 @select_beztriple(%struct.BezTriple* %23, i8 zeroext %24, i16 signext 1, i32 0), !dbg !7289
  store i8 %call15, i8* %sel, align 1, !dbg !7290
  br label %if.end16

if.end16:                                         ; preds = %if.else14, %if.then12
  %25 = load i8, i8* %sel, align 1, !dbg !7291
  %conv17 = zext i8 %25 to i32, !dbg !7291
  %cmp18 = icmp eq i32 %conv17, 1, !dbg !7293
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !7294

if.then20:                                        ; preds = %if.end16
  br label %while.end, !dbg !7295

if.end21:                                         ; preds = %if.end16
  br label %while.cond, !dbg !7275, !llvm.loop !7296

while.end:                                        ; preds = %if.then20, %while.cond
  br label %if.end56, !dbg !7298

if.else22:                                        ; preds = %for.body
  %26 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7299
  %pntsu23 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %26, i32 0, i32 6, !dbg !7301
  %27 = load i32, i32* %pntsu23, align 8, !dbg !7301
  %28 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7302
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 7, !dbg !7303
  %29 = load i32, i32* %pntsv, align 4, !dbg !7303
  %mul = mul nsw i32 %27, %29, !dbg !7304
  store i32 %mul, i32* %a, align 4, !dbg !7305
  %30 = load i32, i32* %selfirst.addr, align 4, !dbg !7306
  %cmp24 = icmp eq i32 %30, 0, !dbg !7308
  br i1 %cmp24, label %if.then26, label %if.else31, !dbg !7309

if.then26:                                        ; preds = %if.else22
  %31 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7310
  %bp27 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %31, i32 0, i32 17, !dbg !7312
  %32 = load %struct.BPoint*, %struct.BPoint** %bp27, align 8, !dbg !7312
  %33 = load i32, i32* %a, align 4, !dbg !7313
  %sub28 = sub nsw i32 %33, 1, !dbg !7314
  %idxprom29 = sext i32 %sub28 to i64, !dbg !7310
  %arrayidx30 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %32, i64 %idxprom29, !dbg !7310
  store %struct.BPoint* %arrayidx30, %struct.BPoint** %bp, align 8, !dbg !7315
  br label %if.end33, !dbg !7316

if.else31:                                        ; preds = %if.else22
  %34 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7317
  %bp32 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %34, i32 0, i32 17, !dbg !7319
  %35 = load %struct.BPoint*, %struct.BPoint** %bp32, align 8, !dbg !7319
  store %struct.BPoint* %35, %struct.BPoint** %bp, align 8, !dbg !7320
  br label %if.end33

if.end33:                                         ; preds = %if.else31, %if.then26
  br label %while.cond34, !dbg !7321

while.cond34:                                     ; preds = %if.end54, %if.end33
  %36 = load i32, i32* %a, align 4, !dbg !7322
  %dec35 = add nsw i32 %36, -1, !dbg !7322
  store i32 %dec35, i32* %a, align 4, !dbg !7322
  %tobool36 = icmp ne i32 %36, 0, !dbg !7321
  br i1 %tobool36, label %while.body37, label %while.end55, !dbg !7321

while.body37:                                     ; preds = %while.cond34
  %37 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7323
  %hide = getelementptr inbounds %struct.BPoint, %struct.BPoint* %37, i32 0, i32 4, !dbg !7326
  %38 = load i16, i16* %hide, align 2, !dbg !7326
  %conv38 = sext i16 %38 to i32, !dbg !7323
  %cmp39 = icmp eq i32 %conv38, 0, !dbg !7327
  br i1 %cmp39, label %if.then41, label %if.end54, !dbg !7328

if.then41:                                        ; preds = %while.body37
  call void @llvm.dbg.declare(metadata i8* %sel42, metadata !7329, metadata !DIExpression()), !dbg !7331
  %39 = load i8, i8* %doswap.addr, align 1, !dbg !7332
  %tobool43 = icmp ne i8 %39, 0, !dbg !7332
  br i1 %tobool43, label %if.then44, label %if.else46, !dbg !7334

if.then44:                                        ; preds = %if.then41
  %40 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7335
  %call45 = call zeroext i8 @swap_selection_bpoint(%struct.BPoint* %40), !dbg !7336
  store i8 %call45, i8* %sel42, align 1, !dbg !7337
  br label %if.end48, !dbg !7338

if.else46:                                        ; preds = %if.then41
  %41 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7339
  %42 = load i8, i8* %selstatus.addr, align 1, !dbg !7340
  %call47 = call zeroext i8 @select_bpoint(%struct.BPoint* %41, i8 zeroext %42, i16 signext 1, i8 zeroext 0), !dbg !7341
  store i8 %call47, i8* %sel42, align 1, !dbg !7342
  br label %if.end48

if.end48:                                         ; preds = %if.else46, %if.then44
  %43 = load i8, i8* %sel42, align 1, !dbg !7343
  %conv49 = zext i8 %43 to i32, !dbg !7343
  %cmp50 = icmp eq i32 %conv49, 1, !dbg !7345
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !7346

if.then52:                                        ; preds = %if.end48
  br label %while.end55, !dbg !7347

if.end53:                                         ; preds = %if.end48
  br label %if.end54, !dbg !7348

if.end54:                                         ; preds = %if.end53, %while.body37
  br label %while.cond34, !dbg !7321, !llvm.loop !7349

while.end55:                                      ; preds = %if.then52, %while.cond34
  br label %if.end56

if.end56:                                         ; preds = %while.end55, %while.end
  br label %for.inc, !dbg !7351

for.inc:                                          ; preds = %if.end56
  %44 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7352
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %44, i32 0, i32 0, !dbg !7353
  %45 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !7353
  store %struct.Nurb* %45, %struct.Nurb** %nu, align 8, !dbg !7354
  br label %for.cond, !dbg !7355, !llvm.loop !7356

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !7358
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @swap_selection_beztriple(%struct.BezTriple* %bezt) #0 !dbg !7359 {
entry:
  %retval = alloca i8, align 1
  %bezt.addr = alloca %struct.BezTriple*, align 8
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !7362, metadata !DIExpression()), !dbg !7363
  %0 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !7364
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %0, i32 0, i32 8, !dbg !7366
  %1 = load i8, i8* %f2, align 4, !dbg !7366
  %conv = zext i8 %1 to i32, !dbg !7364
  %and = and i32 %conv, 1, !dbg !7367
  %tobool = icmp ne i32 %and, 0, !dbg !7367
  br i1 %tobool, label %if.then, label %if.else, !dbg !7368

if.then:                                          ; preds = %entry
  %2 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !7369
  %call = call zeroext i8 @select_beztriple(%struct.BezTriple* %2, i8 zeroext 0, i16 signext 1, i32 0), !dbg !7370
  store i8 %call, i8* %retval, align 1, !dbg !7371
  br label %return, !dbg !7371

if.else:                                          ; preds = %entry
  %3 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !7372
  %call1 = call zeroext i8 @select_beztriple(%struct.BezTriple* %3, i8 zeroext 1, i16 signext 1, i32 0), !dbg !7373
  store i8 %call1, i8* %retval, align 1, !dbg !7374
  br label %return, !dbg !7374

return:                                           ; preds = %if.else, %if.then
  %4 = load i8, i8* %retval, align 1, !dbg !7375
  ret i8 %4, !dbg !7375
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @select_beztriple(%struct.BezTriple* %bezt, i8 zeroext %selstatus, i16 signext %flag, i32 %hidden) #0 !dbg !7376 {
entry:
  %retval = alloca i8, align 1
  %bezt.addr = alloca %struct.BezTriple*, align 8
  %selstatus.addr = alloca i8, align 1
  %flag.addr = alloca i16, align 2
  %hidden.addr = alloca i32, align 4
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !7380, metadata !DIExpression()), !dbg !7381
  store i8 %selstatus, i8* %selstatus.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %selstatus.addr, metadata !7382, metadata !DIExpression()), !dbg !7383
  store i16 %flag, i16* %flag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %flag.addr, metadata !7384, metadata !DIExpression()), !dbg !7385
  store i32 %hidden, i32* %hidden.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hidden.addr, metadata !7386, metadata !DIExpression()), !dbg !7387
  %0 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !7388
  %hide = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %0, i32 0, i32 10, !dbg !7390
  %1 = load i8, i8* %hide, align 2, !dbg !7390
  %conv = zext i8 %1 to i32, !dbg !7388
  %cmp = icmp eq i32 %conv, 0, !dbg !7391
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7392

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %hidden.addr, align 4, !dbg !7393
  %cmp2 = icmp eq i32 %2, 1, !dbg !7394
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7395

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load i8, i8* %selstatus.addr, align 1, !dbg !7396
  %conv4 = zext i8 %3 to i32, !dbg !7396
  %cmp5 = icmp eq i32 %conv4, 1, !dbg !7399
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !7400

if.then7:                                         ; preds = %if.then
  %4 = load i16, i16* %flag.addr, align 2, !dbg !7401
  %conv8 = sext i16 %4 to i32, !dbg !7401
  %5 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !7403
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %5, i32 0, i32 7, !dbg !7404
  %6 = load i8, i8* %f1, align 1, !dbg !7405
  %conv9 = zext i8 %6 to i32, !dbg !7405
  %or = or i32 %conv9, %conv8, !dbg !7405
  %conv10 = trunc i32 %or to i8, !dbg !7405
  store i8 %conv10, i8* %f1, align 1, !dbg !7405
  %7 = load i16, i16* %flag.addr, align 2, !dbg !7406
  %conv11 = sext i16 %7 to i32, !dbg !7406
  %8 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !7407
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %8, i32 0, i32 8, !dbg !7408
  %9 = load i8, i8* %f2, align 4, !dbg !7409
  %conv12 = zext i8 %9 to i32, !dbg !7409
  %or13 = or i32 %conv12, %conv11, !dbg !7409
  %conv14 = trunc i32 %or13 to i8, !dbg !7409
  store i8 %conv14, i8* %f2, align 4, !dbg !7409
  %10 = load i16, i16* %flag.addr, align 2, !dbg !7410
  %conv15 = sext i16 %10 to i32, !dbg !7410
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !7411
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %11, i32 0, i32 9, !dbg !7412
  %12 = load i8, i8* %f3, align 1, !dbg !7413
  %conv16 = zext i8 %12 to i32, !dbg !7413
  %or17 = or i32 %conv16, %conv15, !dbg !7413
  %conv18 = trunc i32 %or17 to i8, !dbg !7413
  store i8 %conv18, i8* %f3, align 1, !dbg !7413
  store i8 1, i8* %retval, align 1, !dbg !7414
  br label %return, !dbg !7414

if.else:                                          ; preds = %if.then
  %13 = load i16, i16* %flag.addr, align 2, !dbg !7415
  %conv19 = sext i16 %13 to i32, !dbg !7415
  %neg = xor i32 %conv19, -1, !dbg !7417
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !7418
  %f120 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %14, i32 0, i32 7, !dbg !7419
  %15 = load i8, i8* %f120, align 1, !dbg !7420
  %conv21 = zext i8 %15 to i32, !dbg !7420
  %and = and i32 %conv21, %neg, !dbg !7420
  %conv22 = trunc i32 %and to i8, !dbg !7420
  store i8 %conv22, i8* %f120, align 1, !dbg !7420
  %16 = load i16, i16* %flag.addr, align 2, !dbg !7421
  %conv23 = sext i16 %16 to i32, !dbg !7421
  %neg24 = xor i32 %conv23, -1, !dbg !7422
  %17 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !7423
  %f225 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %17, i32 0, i32 8, !dbg !7424
  %18 = load i8, i8* %f225, align 4, !dbg !7425
  %conv26 = zext i8 %18 to i32, !dbg !7425
  %and27 = and i32 %conv26, %neg24, !dbg !7425
  %conv28 = trunc i32 %and27 to i8, !dbg !7425
  store i8 %conv28, i8* %f225, align 4, !dbg !7425
  %19 = load i16, i16* %flag.addr, align 2, !dbg !7426
  %conv29 = sext i16 %19 to i32, !dbg !7426
  %neg30 = xor i32 %conv29, -1, !dbg !7427
  %20 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !7428
  %f331 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %20, i32 0, i32 9, !dbg !7429
  %21 = load i8, i8* %f331, align 1, !dbg !7430
  %conv32 = zext i8 %21 to i32, !dbg !7430
  %and33 = and i32 %conv32, %neg30, !dbg !7430
  %conv34 = trunc i32 %and33 to i8, !dbg !7430
  store i8 %conv34, i8* %f331, align 1, !dbg !7430
  store i8 1, i8* %retval, align 1, !dbg !7431
  br label %return, !dbg !7431

if.end:                                           ; preds = %lor.lhs.false
  store i8 0, i8* %retval, align 1, !dbg !7432
  br label %return, !dbg !7432

return:                                           ; preds = %if.end, %if.else, %if.then7
  %22 = load i8, i8* %retval, align 1, !dbg !7433
  ret i8 %22, !dbg !7433
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_de_select_first(%struct.wmOperatorType* %ot) #0 !dbg !7434 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7435, metadata !DIExpression()), !dbg !7436
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7437
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7438
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.36, i64 0, i64 0), i8** %name, align 8, !dbg !7439
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7440
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !7441
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.37, i64 0, i64 0), i8** %idname, align 8, !dbg !7442
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7443
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !7444
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.38, i64 0, i64 0), i8** %description, align 8, !dbg !7445
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7446
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7447
  store i32 (%struct.bContext*, %struct.wmOperator*)* @de_select_first_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7448
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7449
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7450
  store i32 (%struct.bContext*)* @ED_operator_editcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !7451
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7452
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7453
  store i16 3, i16* %flag, align 8, !dbg !7454
  ret void, !dbg !7455
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @de_select_first_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !7456 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7457, metadata !DIExpression()), !dbg !7458
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !7459, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7461, metadata !DIExpression()), !dbg !7462
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7463
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !7464
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7462
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7465
  call void @selectend_nurb(%struct.Object* %1, i32 1, i8 zeroext 1, i8 zeroext 0), !dbg !7466
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7467
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7468
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !7469
  %4 = load i8*, i8** %data, align 8, !dbg !7469
  call void @WM_event_add_notifier(%struct.bContext* %2, i32 274333696, i8* %4), !dbg !7470
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7471
  %data1 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 19, !dbg !7472
  %6 = load i8*, i8** %data1, align 8, !dbg !7472
  %7 = bitcast i8* %6 to %struct.Curve*, !dbg !7471
  call void @BKE_curve_nurb_vert_active_validate(%struct.Curve* %7), !dbg !7473
  ret i32 4, !dbg !7474
}

declare dso_local i32 @ED_operator_editcurve(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_de_select_last(%struct.wmOperatorType* %ot) #0 !dbg !7475 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7476, metadata !DIExpression()), !dbg !7477
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7478
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7479
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.39, i64 0, i64 0), i8** %name, align 8, !dbg !7480
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7481
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !7482
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.40, i64 0, i64 0), i8** %idname, align 8, !dbg !7483
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7484
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !7485
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.41, i64 0, i64 0), i8** %description, align 8, !dbg !7486
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7487
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7488
  store i32 (%struct.bContext*, %struct.wmOperator*)* @de_select_last_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7489
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7490
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7491
  store i32 (%struct.bContext*)* @ED_operator_editcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !7492
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7493
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7494
  store i16 3, i16* %flag, align 8, !dbg !7495
  ret void, !dbg !7496
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @de_select_last_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !7497 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7498, metadata !DIExpression()), !dbg !7499
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !7500, metadata !DIExpression()), !dbg !7501
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7502, metadata !DIExpression()), !dbg !7503
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7504
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !7505
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7503
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7506
  call void @selectend_nurb(%struct.Object* %1, i32 0, i8 zeroext 1, i8 zeroext 0), !dbg !7507
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7508
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7509
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !7510
  %4 = load i8*, i8** %data, align 8, !dbg !7510
  call void @WM_event_add_notifier(%struct.bContext* %2, i32 274333696, i8* %4), !dbg !7511
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7512
  %data1 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 19, !dbg !7513
  %6 = load i8*, i8** %data1, align 8, !dbg !7513
  %7 = bitcast i8* %6 to %struct.Curve*, !dbg !7512
  call void @BKE_curve_nurb_vert_active_validate(%struct.Curve* %7), !dbg !7514
  ret i32 4, !dbg !7515
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_select_all(%struct.wmOperatorType* %ot) #0 !dbg !7516 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7517, metadata !DIExpression()), !dbg !7518
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7519
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7520
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i64 0, i64 0), i8** %name, align 8, !dbg !7521
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7522
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !7523
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.43, i64 0, i64 0), i8** %idname, align 8, !dbg !7524
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7525
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !7526
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.44, i64 0, i64 0), i8** %description, align 8, !dbg !7527
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7528
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7529
  store i32 (%struct.bContext*, %struct.wmOperator*)* @de_select_all_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7530
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7531
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7532
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !7533
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7534
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7535
  store i16 3, i16* %flag, align 8, !dbg !7536
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7537
  call void @WM_operator_properties_select_all(%struct.wmOperatorType* %6), !dbg !7538
  ret void, !dbg !7539
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @de_select_all_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7540 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %action = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7541, metadata !DIExpression()), !dbg !7542
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7543, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7545, metadata !DIExpression()), !dbg !7546
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7547
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !7548
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7546
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !7549, metadata !DIExpression()), !dbg !7550
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7551
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !7552
  %2 = load i8*, i8** %data, align 8, !dbg !7552
  %3 = bitcast i8* %2 to %struct.Curve*, !dbg !7551
  store %struct.Curve* %3, %struct.Curve** %cu, align 8, !dbg !7550
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !7553, metadata !DIExpression()), !dbg !7554
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7555
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %4), !dbg !7556
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !7554
  call void @llvm.dbg.declare(metadata i32* %action, metadata !7557, metadata !DIExpression()), !dbg !7558
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7559
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !7560
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7560
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.198, i64 0, i64 0)), !dbg !7561
  store i32 %call2, i32* %action, align 4, !dbg !7558
  %7 = load i32, i32* %action, align 4, !dbg !7562
  %cmp = icmp eq i32 %7, 0, !dbg !7564
  br i1 %cmp, label %if.then, label %if.end5, !dbg !7565

if.then:                                          ; preds = %entry
  store i32 1, i32* %action, align 4, !dbg !7566
  %8 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !7568
  %call3 = call zeroext i8 @nurb_has_selected_cps(%struct.ListBase* %8), !dbg !7570
  %tobool = icmp ne i8 %call3, 0, !dbg !7570
  br i1 %tobool, label %if.then4, label %if.end, !dbg !7571

if.then4:                                         ; preds = %if.then
  store i32 2, i32* %action, align 4, !dbg !7572
  br label %if.end, !dbg !7573

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end5, !dbg !7574

if.end5:                                          ; preds = %if.end, %entry
  %9 = load i32, i32* %action, align 4, !dbg !7575
  switch i32 %9, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb7
    i32 3, label %sw.bb9
  ], !dbg !7576

sw.bb:                                            ; preds = %if.end5
  %10 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7577
  %editnurb6 = getelementptr inbounds %struct.Curve, %struct.Curve* %10, i32 0, i32 4, !dbg !7579
  %11 = load %struct.EditNurb*, %struct.EditNurb** %editnurb6, align 8, !dbg !7579
  call void @ED_curve_select_all(%struct.EditNurb* %11), !dbg !7580
  br label %sw.epilog, !dbg !7581

sw.bb7:                                           ; preds = %if.end5
  %12 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7582
  %editnurb8 = getelementptr inbounds %struct.Curve, %struct.Curve* %12, i32 0, i32 4, !dbg !7583
  %13 = load %struct.EditNurb*, %struct.EditNurb** %editnurb8, align 8, !dbg !7583
  call void @ED_curve_deselect_all(%struct.EditNurb* %13), !dbg !7584
  br label %sw.epilog, !dbg !7585

sw.bb9:                                           ; preds = %if.end5
  %14 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7586
  %editnurb10 = getelementptr inbounds %struct.Curve, %struct.Curve* %14, i32 0, i32 4, !dbg !7587
  %15 = load %struct.EditNurb*, %struct.EditNurb** %editnurb10, align 8, !dbg !7587
  %16 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7588
  %drawflag = getelementptr inbounds %struct.Curve, %struct.Curve* %16, i32 0, i32 16, !dbg !7589
  %17 = load i16, i16* %drawflag, align 8, !dbg !7589
  %conv = sext i16 %17 to i32, !dbg !7588
  %and = and i32 %conv, 1, !dbg !7590
  %cmp11 = icmp ne i32 %and, 0, !dbg !7591
  %conv12 = zext i1 %cmp11 to i32, !dbg !7591
  %conv13 = trunc i32 %conv12 to i8, !dbg !7592
  call void @ED_curve_select_swap(%struct.EditNurb* %15, i8 zeroext %conv13), !dbg !7593
  br label %sw.epilog, !dbg !7594

sw.epilog:                                        ; preds = %if.end5, %sw.bb9, %sw.bb7, %sw.bb
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7595
  %19 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7596
  %data14 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 19, !dbg !7597
  %20 = load i8*, i8** %data14, align 8, !dbg !7597
  call void @WM_event_add_notifier(%struct.bContext* %18, i32 274333696, i8* %20), !dbg !7598
  %21 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7599
  call void @BKE_curve_nurb_vert_active_validate(%struct.Curve* %21), !dbg !7600
  ret i32 4, !dbg !7601
}

declare dso_local void @WM_operator_properties_select_all(%struct.wmOperatorType*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_hide(%struct.wmOperatorType* %ot) #0 !dbg !7602 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7603, metadata !DIExpression()), !dbg !7604
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7605
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7606
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.45, i64 0, i64 0), i8** %name, align 8, !dbg !7607
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7608
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !7609
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i64 0, i64 0), i8** %idname, align 8, !dbg !7610
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7611
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !7612
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.47, i64 0, i64 0), i8** %description, align 8, !dbg !7613
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7614
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7615
  store i32 (%struct.bContext*, %struct.wmOperator*)* @hide_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7616
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7617
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7618
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !7619
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7620
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7621
  store i16 3, i16* %flag, align 8, !dbg !7622
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7623
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !7624
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7624
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !7623
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.48, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.50, i64 0, i64 0)), !dbg !7625
  ret void, !dbg !7626
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @hide_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7627 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %a = alloca i32, align 4
  %sel = alloca i32, align 4
  %invert = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7628, metadata !DIExpression()), !dbg !7629
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7630, metadata !DIExpression()), !dbg !7631
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7632, metadata !DIExpression()), !dbg !7633
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7634
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !7635
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7633
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !7636, metadata !DIExpression()), !dbg !7637
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7638
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !7639
  %2 = load i8*, i8** %data, align 8, !dbg !7639
  %3 = bitcast i8* %2 to %struct.Curve*, !dbg !7638
  store %struct.Curve* %3, %struct.Curve** %cu, align 8, !dbg !7637
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !7640, metadata !DIExpression()), !dbg !7641
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7642
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %4), !dbg !7643
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !7641
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !7644, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !7646, metadata !DIExpression()), !dbg !7647
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !7648, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7650, metadata !DIExpression()), !dbg !7651
  call void @llvm.dbg.declare(metadata i32* %sel, metadata !7652, metadata !DIExpression()), !dbg !7653
  call void @llvm.dbg.declare(metadata i8* %invert, metadata !7654, metadata !DIExpression()), !dbg !7656
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7657
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !7658
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7658
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.48, i64 0, i64 0)), !dbg !7659
  %conv = trunc i32 %call2 to i8, !dbg !7659
  store i8 %conv, i8* %invert, align 1, !dbg !7656
  %7 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !7660
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %7, i32 0, i32 0, !dbg !7662
  %8 = load i8*, i8** %first, align 8, !dbg !7662
  %9 = bitcast i8* %8 to %struct.Nurb*, !dbg !7660
  store %struct.Nurb* %9, %struct.Nurb** %nu, align 8, !dbg !7663
  br label %for.cond, !dbg !7664

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7665
  %tobool = icmp ne %struct.Nurb* %10, null, !dbg !7667
  br i1 %tobool, label %for.body, label %for.end, !dbg !7667

for.body:                                         ; preds = %for.cond
  %11 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7668
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 2, !dbg !7671
  %12 = load i16, i16* %type, align 8, !dbg !7671
  %conv3 = sext i16 %12 to i32, !dbg !7668
  %cmp = icmp eq i32 %conv3, 1, !dbg !7672
  br i1 %cmp, label %if.then, label %if.else69, !dbg !7673

if.then:                                          ; preds = %for.body
  %13 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7674
  %bezt5 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 18, !dbg !7676
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt5, align 8, !dbg !7676
  store %struct.BezTriple* %14, %struct.BezTriple** %bezt, align 8, !dbg !7677
  %15 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7678
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %15, i32 0, i32 6, !dbg !7679
  %16 = load i32, i32* %pntsu, align 8, !dbg !7679
  store i32 %16, i32* %a, align 4, !dbg !7680
  store i32 0, i32* %sel, align 4, !dbg !7681
  br label %while.cond, !dbg !7682

while.cond:                                       ; preds = %if.end62, %if.then
  %17 = load i32, i32* %a, align 4, !dbg !7683
  %dec = add nsw i32 %17, -1, !dbg !7683
  store i32 %dec, i32* %a, align 4, !dbg !7683
  %tobool6 = icmp ne i32 %17, 0, !dbg !7682
  br i1 %tobool6, label %while.body, label %while.end, !dbg !7682

while.body:                                       ; preds = %while.cond
  %18 = load i8, i8* %invert, align 1, !dbg !7684
  %conv7 = zext i8 %18 to i32, !dbg !7684
  %cmp8 = icmp eq i32 %conv7, 0, !dbg !7687
  br i1 %cmp8, label %land.lhs.true, label %if.else, !dbg !7688

land.lhs.true:                                    ; preds = %while.body
  %19 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7689
  %drawflag = getelementptr inbounds %struct.Curve, %struct.Curve* %19, i32 0, i32 16, !dbg !7689
  %20 = load i16, i16* %drawflag, align 8, !dbg !7689
  %conv10 = sext i16 %20 to i32, !dbg !7689
  %and = and i32 %conv10, 1, !dbg !7689
  %tobool11 = icmp ne i32 %and, 0, !dbg !7689
  br i1 %tobool11, label %cond.true, label %cond.false, !dbg !7690

cond.true:                                        ; preds = %land.lhs.true
  %21 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7689
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %21, i32 0, i32 8, !dbg !7689
  %22 = load i8, i8* %f2, align 4, !dbg !7689
  %conv12 = zext i8 %22 to i32, !dbg !7689
  %and13 = and i32 %conv12, 1, !dbg !7689
  %tobool14 = icmp ne i32 %and13, 0, !dbg !7689
  br i1 %tobool14, label %if.then26, label %if.else, !dbg !7689

cond.false:                                       ; preds = %land.lhs.true
  %23 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7689
  %f215 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %23, i32 0, i32 8, !dbg !7689
  %24 = load i8, i8* %f215, align 4, !dbg !7689
  %conv16 = zext i8 %24 to i32, !dbg !7689
  %and17 = and i32 %conv16, 1, !dbg !7689
  %tobool18 = icmp ne i32 %and17, 0, !dbg !7689
  br i1 %tobool18, label %if.then26, label %lor.lhs.false, !dbg !7689

lor.lhs.false:                                    ; preds = %cond.false
  %25 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7689
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %25, i32 0, i32 7, !dbg !7689
  %26 = load i8, i8* %f1, align 1, !dbg !7689
  %conv19 = zext i8 %26 to i32, !dbg !7689
  %and20 = and i32 %conv19, 1, !dbg !7689
  %tobool21 = icmp ne i32 %and20, 0, !dbg !7689
  br i1 %tobool21, label %if.then26, label %lor.lhs.false22, !dbg !7689

lor.lhs.false22:                                  ; preds = %lor.lhs.false
  %27 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7689
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %27, i32 0, i32 9, !dbg !7689
  %28 = load i8, i8* %f3, align 1, !dbg !7689
  %conv23 = zext i8 %28 to i32, !dbg !7689
  %and24 = and i32 %conv23, 1, !dbg !7689
  %tobool25 = icmp ne i32 %and24, 0, !dbg !7689
  br i1 %tobool25, label %if.then26, label %if.else, !dbg !7690

if.then26:                                        ; preds = %lor.lhs.false22, %lor.lhs.false, %cond.false, %cond.true
  %29 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7691
  %call27 = call zeroext i8 @select_beztriple(%struct.BezTriple* %29, i8 zeroext 0, i16 signext 1, i32 1), !dbg !7693
  %30 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7694
  %hide = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %30, i32 0, i32 10, !dbg !7695
  store i8 1, i8* %hide, align 2, !dbg !7696
  br label %if.end58, !dbg !7697

if.else:                                          ; preds = %lor.lhs.false22, %cond.true, %while.body
  %31 = load i8, i8* %invert, align 1, !dbg !7698
  %conv28 = zext i8 %31 to i32, !dbg !7698
  %tobool29 = icmp ne i32 %conv28, 0, !dbg !7698
  br i1 %tobool29, label %land.lhs.true30, label %if.end, !dbg !7700

land.lhs.true30:                                  ; preds = %if.else
  %32 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7701
  %drawflag31 = getelementptr inbounds %struct.Curve, %struct.Curve* %32, i32 0, i32 16, !dbg !7701
  %33 = load i16, i16* %drawflag31, align 8, !dbg !7701
  %conv32 = sext i16 %33 to i32, !dbg !7701
  %and33 = and i32 %conv32, 1, !dbg !7701
  %tobool34 = icmp ne i32 %and33, 0, !dbg !7701
  br i1 %tobool34, label %cond.true35, label %cond.false40, !dbg !7702

cond.true35:                                      ; preds = %land.lhs.true30
  %34 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7701
  %f236 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %34, i32 0, i32 8, !dbg !7701
  %35 = load i8, i8* %f236, align 4, !dbg !7701
  %conv37 = zext i8 %35 to i32, !dbg !7701
  %and38 = and i32 %conv37, 1, !dbg !7701
  %tobool39 = icmp ne i32 %and38, 0, !dbg !7701
  br i1 %tobool39, label %if.end, label %if.then55, !dbg !7701

cond.false40:                                     ; preds = %land.lhs.true30
  %36 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7701
  %f241 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %36, i32 0, i32 8, !dbg !7701
  %37 = load i8, i8* %f241, align 4, !dbg !7701
  %conv42 = zext i8 %37 to i32, !dbg !7701
  %and43 = and i32 %conv42, 1, !dbg !7701
  %tobool44 = icmp ne i32 %and43, 0, !dbg !7701
  br i1 %tobool44, label %if.end, label %lor.lhs.false45, !dbg !7701

lor.lhs.false45:                                  ; preds = %cond.false40
  %38 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7701
  %f146 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %38, i32 0, i32 7, !dbg !7701
  %39 = load i8, i8* %f146, align 1, !dbg !7701
  %conv47 = zext i8 %39 to i32, !dbg !7701
  %and48 = and i32 %conv47, 1, !dbg !7701
  %tobool49 = icmp ne i32 %and48, 0, !dbg !7701
  br i1 %tobool49, label %if.end, label %lor.lhs.false50, !dbg !7701

lor.lhs.false50:                                  ; preds = %lor.lhs.false45
  %40 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7701
  %f351 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %40, i32 0, i32 9, !dbg !7701
  %41 = load i8, i8* %f351, align 1, !dbg !7701
  %conv52 = zext i8 %41 to i32, !dbg !7701
  %and53 = and i32 %conv52, 1, !dbg !7701
  %tobool54 = icmp ne i32 %and53, 0, !dbg !7701
  br i1 %tobool54, label %if.end, label %if.then55, !dbg !7702

if.then55:                                        ; preds = %lor.lhs.false50, %cond.true35
  %42 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7703
  %call56 = call zeroext i8 @select_beztriple(%struct.BezTriple* %42, i8 zeroext 0, i16 signext 1, i32 1), !dbg !7705
  %43 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7706
  %hide57 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %43, i32 0, i32 10, !dbg !7707
  store i8 1, i8* %hide57, align 2, !dbg !7708
  br label %if.end, !dbg !7709

if.end:                                           ; preds = %if.then55, %lor.lhs.false50, %lor.lhs.false45, %cond.false40, %cond.true35, %if.else
  br label %if.end58

if.end58:                                         ; preds = %if.end, %if.then26
  %44 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7710
  %hide59 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %44, i32 0, i32 10, !dbg !7712
  %45 = load i8, i8* %hide59, align 2, !dbg !7712
  %tobool60 = icmp ne i8 %45, 0, !dbg !7710
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !7713

if.then61:                                        ; preds = %if.end58
  %46 = load i32, i32* %sel, align 4, !dbg !7714
  %inc = add nsw i32 %46, 1, !dbg !7714
  store i32 %inc, i32* %sel, align 4, !dbg !7714
  br label %if.end62, !dbg !7715

if.end62:                                         ; preds = %if.then61, %if.end58
  %47 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7716
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %47, i32 1, !dbg !7716
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !7716
  br label %while.cond, !dbg !7682, !llvm.loop !7717

while.end:                                        ; preds = %while.cond
  %48 = load i32, i32* %sel, align 4, !dbg !7719
  %49 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7721
  %pntsu63 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %49, i32 0, i32 6, !dbg !7722
  %50 = load i32, i32* %pntsu63, align 8, !dbg !7722
  %cmp64 = icmp eq i32 %48, %50, !dbg !7723
  br i1 %cmp64, label %if.then66, label %if.end68, !dbg !7724

if.then66:                                        ; preds = %while.end
  %51 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7725
  %hide67 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %51, i32 0, i32 4, !dbg !7726
  store i16 1, i16* %hide67, align 4, !dbg !7727
  br label %if.end68, !dbg !7725

if.end68:                                         ; preds = %if.then66, %while.end
  br label %if.end116, !dbg !7728

if.else69:                                        ; preds = %for.body
  %52 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7729
  %bp70 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %52, i32 0, i32 17, !dbg !7731
  %53 = load %struct.BPoint*, %struct.BPoint** %bp70, align 8, !dbg !7731
  store %struct.BPoint* %53, %struct.BPoint** %bp, align 8, !dbg !7732
  %54 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7733
  %pntsu71 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %54, i32 0, i32 6, !dbg !7734
  %55 = load i32, i32* %pntsu71, align 8, !dbg !7734
  %56 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7735
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %56, i32 0, i32 7, !dbg !7736
  %57 = load i32, i32* %pntsv, align 4, !dbg !7736
  %mul = mul nsw i32 %55, %57, !dbg !7737
  store i32 %mul, i32* %a, align 4, !dbg !7738
  store i32 0, i32* %sel, align 4, !dbg !7739
  br label %while.cond72, !dbg !7740

while.cond72:                                     ; preds = %if.end105, %if.else69
  %58 = load i32, i32* %a, align 4, !dbg !7741
  %dec73 = add nsw i32 %58, -1, !dbg !7741
  store i32 %dec73, i32* %a, align 4, !dbg !7741
  %tobool74 = icmp ne i32 %58, 0, !dbg !7740
  br i1 %tobool74, label %while.body75, label %while.end107, !dbg !7740

while.body75:                                     ; preds = %while.cond72
  %59 = load i8, i8* %invert, align 1, !dbg !7742
  %conv76 = zext i8 %59 to i32, !dbg !7742
  %cmp77 = icmp eq i32 %conv76, 0, !dbg !7745
  br i1 %cmp77, label %land.lhs.true79, label %if.else87, !dbg !7746

land.lhs.true79:                                  ; preds = %while.body75
  %60 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7747
  %f180 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %60, i32 0, i32 3, !dbg !7748
  %61 = load i16, i16* %f180, align 4, !dbg !7748
  %conv81 = sext i16 %61 to i32, !dbg !7747
  %and82 = and i32 %conv81, 1, !dbg !7749
  %tobool83 = icmp ne i32 %and82, 0, !dbg !7749
  br i1 %tobool83, label %if.then84, label %if.else87, !dbg !7750

if.then84:                                        ; preds = %land.lhs.true79
  %62 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7751
  %call85 = call zeroext i8 @select_bpoint(%struct.BPoint* %62, i8 zeroext 0, i16 signext 1, i8 zeroext 1), !dbg !7753
  %63 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7754
  %hide86 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %63, i32 0, i32 4, !dbg !7755
  store i16 1, i16* %hide86, align 2, !dbg !7756
  br label %if.end100, !dbg !7757

if.else87:                                        ; preds = %land.lhs.true79, %while.body75
  %64 = load i8, i8* %invert, align 1, !dbg !7758
  %conv88 = zext i8 %64 to i32, !dbg !7758
  %tobool89 = icmp ne i32 %conv88, 0, !dbg !7758
  br i1 %tobool89, label %land.lhs.true90, label %if.end99, !dbg !7760

land.lhs.true90:                                  ; preds = %if.else87
  %65 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7761
  %f191 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %65, i32 0, i32 3, !dbg !7762
  %66 = load i16, i16* %f191, align 4, !dbg !7762
  %conv92 = sext i16 %66 to i32, !dbg !7761
  %and93 = and i32 %conv92, 1, !dbg !7763
  %cmp94 = icmp eq i32 %and93, 0, !dbg !7764
  br i1 %cmp94, label %if.then96, label %if.end99, !dbg !7765

if.then96:                                        ; preds = %land.lhs.true90
  %67 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7766
  %call97 = call zeroext i8 @select_bpoint(%struct.BPoint* %67, i8 zeroext 0, i16 signext 1, i8 zeroext 1), !dbg !7768
  %68 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7769
  %hide98 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %68, i32 0, i32 4, !dbg !7770
  store i16 1, i16* %hide98, align 2, !dbg !7771
  br label %if.end99, !dbg !7772

if.end99:                                         ; preds = %if.then96, %land.lhs.true90, %if.else87
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.then84
  %69 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7773
  %hide101 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %69, i32 0, i32 4, !dbg !7775
  %70 = load i16, i16* %hide101, align 2, !dbg !7775
  %tobool102 = icmp ne i16 %70, 0, !dbg !7773
  br i1 %tobool102, label %if.then103, label %if.end105, !dbg !7776

if.then103:                                       ; preds = %if.end100
  %71 = load i32, i32* %sel, align 4, !dbg !7777
  %inc104 = add nsw i32 %71, 1, !dbg !7777
  store i32 %inc104, i32* %sel, align 4, !dbg !7777
  br label %if.end105, !dbg !7778

if.end105:                                        ; preds = %if.then103, %if.end100
  %72 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7779
  %incdec.ptr106 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %72, i32 1, !dbg !7779
  store %struct.BPoint* %incdec.ptr106, %struct.BPoint** %bp, align 8, !dbg !7779
  br label %while.cond72, !dbg !7740, !llvm.loop !7780

while.end107:                                     ; preds = %while.cond72
  %73 = load i32, i32* %sel, align 4, !dbg !7782
  %74 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7784
  %pntsu108 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %74, i32 0, i32 6, !dbg !7785
  %75 = load i32, i32* %pntsu108, align 8, !dbg !7785
  %76 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7786
  %pntsv109 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %76, i32 0, i32 7, !dbg !7787
  %77 = load i32, i32* %pntsv109, align 4, !dbg !7787
  %mul110 = mul nsw i32 %75, %77, !dbg !7788
  %cmp111 = icmp eq i32 %73, %mul110, !dbg !7789
  br i1 %cmp111, label %if.then113, label %if.end115, !dbg !7790

if.then113:                                       ; preds = %while.end107
  %78 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7791
  %hide114 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %78, i32 0, i32 4, !dbg !7792
  store i16 1, i16* %hide114, align 4, !dbg !7793
  br label %if.end115, !dbg !7791

if.end115:                                        ; preds = %if.then113, %while.end107
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.end68
  br label %for.inc, !dbg !7794

for.inc:                                          ; preds = %if.end116
  %79 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7795
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %79, i32 0, i32 0, !dbg !7796
  %80 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !7796
  store %struct.Nurb* %80, %struct.Nurb** %nu, align 8, !dbg !7797
  br label %for.cond, !dbg !7798, !llvm.loop !7799

for.end:                                          ; preds = %for.cond
  %81 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7801
  %data117 = getelementptr inbounds %struct.Object, %struct.Object* %81, i32 0, i32 19, !dbg !7802
  %82 = load i8*, i8** %data117, align 8, !dbg !7802
  %83 = bitcast i8* %82 to %struct.ID*, !dbg !7801
  call void @DAG_id_tag_update(%struct.ID* %83, i16 signext 0), !dbg !7803
  %84 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7804
  %85 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7805
  %data118 = getelementptr inbounds %struct.Object, %struct.Object* %85, i32 0, i32 19, !dbg !7806
  %86 = load i8*, i8** %data118, align 8, !dbg !7806
  call void @WM_event_add_notifier(%struct.bContext* %84, i32 274333696, i8* %86), !dbg !7807
  %87 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7808
  %data119 = getelementptr inbounds %struct.Object, %struct.Object* %87, i32 0, i32 19, !dbg !7809
  %88 = load i8*, i8** %data119, align 8, !dbg !7809
  %89 = bitcast i8* %88 to %struct.Curve*, !dbg !7808
  call void @BKE_curve_nurb_vert_active_validate(%struct.Curve* %89), !dbg !7810
  ret i32 4, !dbg !7811
}

declare dso_local %struct.PropertyRNA* @RNA_def_boolean(i8*, i8*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_reveal(%struct.wmOperatorType* %ot) #0 !dbg !7812 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7813, metadata !DIExpression()), !dbg !7814
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7815
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7816
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.51, i64 0, i64 0), i8** %name, align 8, !dbg !7817
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7818
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !7819
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.52, i64 0, i64 0), i8** %idname, align 8, !dbg !7820
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7821
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !7822
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.53, i64 0, i64 0), i8** %description, align 8, !dbg !7823
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7824
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7825
  store i32 (%struct.bContext*, %struct.wmOperator*)* @reveal_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7826
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7827
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7828
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !7829
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7830
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7831
  store i16 3, i16* %flag, align 8, !dbg !7832
  ret void, !dbg !7833
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @reveal_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !7834 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %a = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7835, metadata !DIExpression()), !dbg !7836
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !7837, metadata !DIExpression()), !dbg !7838
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7839, metadata !DIExpression()), !dbg !7840
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7841
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !7842
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7840
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !7843, metadata !DIExpression()), !dbg !7844
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7845
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %1), !dbg !7846
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !7844
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !7847, metadata !DIExpression()), !dbg !7848
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !7849, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !7851, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7853, metadata !DIExpression()), !dbg !7854
  %2 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !7855
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %2, i32 0, i32 0, !dbg !7857
  %3 = load i8*, i8** %first, align 8, !dbg !7857
  %4 = bitcast i8* %3 to %struct.Nurb*, !dbg !7855
  store %struct.Nurb* %4, %struct.Nurb** %nu, align 8, !dbg !7858
  br label %for.cond, !dbg !7859

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7860
  %tobool = icmp ne %struct.Nurb* %5, null, !dbg !7862
  br i1 %tobool, label %for.body, label %for.end, !dbg !7862

for.body:                                         ; preds = %for.cond
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7863
  %hide = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 4, !dbg !7865
  store i16 0, i16* %hide, align 4, !dbg !7866
  %7 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7867
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %7, i32 0, i32 2, !dbg !7869
  %8 = load i16, i16* %type, align 8, !dbg !7869
  %conv = sext i16 %8 to i32, !dbg !7867
  %cmp = icmp eq i32 %conv, 1, !dbg !7870
  br i1 %cmp, label %if.then, label %if.else, !dbg !7871

if.then:                                          ; preds = %for.body
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7872
  %bezt3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 18, !dbg !7874
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt3, align 8, !dbg !7874
  store %struct.BezTriple* %10, %struct.BezTriple** %bezt, align 8, !dbg !7875
  %11 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7876
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 6, !dbg !7877
  %12 = load i32, i32* %pntsu, align 8, !dbg !7877
  store i32 %12, i32* %a, align 4, !dbg !7878
  br label %while.cond, !dbg !7879

while.cond:                                       ; preds = %if.end, %if.then
  %13 = load i32, i32* %a, align 4, !dbg !7880
  %dec = add nsw i32 %13, -1, !dbg !7880
  store i32 %dec, i32* %a, align 4, !dbg !7880
  %tobool4 = icmp ne i32 %13, 0, !dbg !7879
  br i1 %tobool4, label %while.body, label %while.end, !dbg !7879

while.body:                                       ; preds = %while.cond
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7881
  %hide5 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %14, i32 0, i32 10, !dbg !7884
  %15 = load i8, i8* %hide5, align 2, !dbg !7884
  %tobool6 = icmp ne i8 %15, 0, !dbg !7881
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !7885

if.then7:                                         ; preds = %while.body
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7886
  %call8 = call zeroext i8 @select_beztriple(%struct.BezTriple* %16, i8 zeroext 1, i16 signext 1, i32 1), !dbg !7888
  %17 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7889
  %hide9 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %17, i32 0, i32 10, !dbg !7890
  store i8 0, i8* %hide9, align 2, !dbg !7891
  br label %if.end, !dbg !7892

if.end:                                           ; preds = %if.then7, %while.body
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7893
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %18, i32 1, !dbg !7893
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !7893
  br label %while.cond, !dbg !7879, !llvm.loop !7894

while.end:                                        ; preds = %while.cond
  br label %if.end24, !dbg !7896

if.else:                                          ; preds = %for.body
  %19 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7897
  %bp10 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %19, i32 0, i32 17, !dbg !7899
  %20 = load %struct.BPoint*, %struct.BPoint** %bp10, align 8, !dbg !7899
  store %struct.BPoint* %20, %struct.BPoint** %bp, align 8, !dbg !7900
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7901
  %pntsu11 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 6, !dbg !7902
  %22 = load i32, i32* %pntsu11, align 8, !dbg !7902
  %23 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7903
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %23, i32 0, i32 7, !dbg !7904
  %24 = load i32, i32* %pntsv, align 4, !dbg !7904
  %mul = mul nsw i32 %22, %24, !dbg !7905
  store i32 %mul, i32* %a, align 4, !dbg !7906
  br label %while.cond12, !dbg !7907

while.cond12:                                     ; preds = %if.end21, %if.else
  %25 = load i32, i32* %a, align 4, !dbg !7908
  %dec13 = add nsw i32 %25, -1, !dbg !7908
  store i32 %dec13, i32* %a, align 4, !dbg !7908
  %tobool14 = icmp ne i32 %25, 0, !dbg !7907
  br i1 %tobool14, label %while.body15, label %while.end23, !dbg !7907

while.body15:                                     ; preds = %while.cond12
  %26 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7909
  %hide16 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %26, i32 0, i32 4, !dbg !7912
  %27 = load i16, i16* %hide16, align 2, !dbg !7912
  %tobool17 = icmp ne i16 %27, 0, !dbg !7909
  br i1 %tobool17, label %if.then18, label %if.end21, !dbg !7913

if.then18:                                        ; preds = %while.body15
  %28 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7914
  %call19 = call zeroext i8 @select_bpoint(%struct.BPoint* %28, i8 zeroext 1, i16 signext 1, i8 zeroext 1), !dbg !7916
  %29 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7917
  %hide20 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %29, i32 0, i32 4, !dbg !7918
  store i16 0, i16* %hide20, align 2, !dbg !7919
  br label %if.end21, !dbg !7920

if.end21:                                         ; preds = %if.then18, %while.body15
  %30 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7921
  %incdec.ptr22 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %30, i32 1, !dbg !7921
  store %struct.BPoint* %incdec.ptr22, %struct.BPoint** %bp, align 8, !dbg !7921
  br label %while.cond12, !dbg !7907, !llvm.loop !7922

while.end23:                                      ; preds = %while.cond12
  br label %if.end24

if.end24:                                         ; preds = %while.end23, %while.end
  br label %for.inc, !dbg !7924

for.inc:                                          ; preds = %if.end24
  %31 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7925
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %31, i32 0, i32 0, !dbg !7926
  %32 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !7926
  store %struct.Nurb* %32, %struct.Nurb** %nu, align 8, !dbg !7927
  br label %for.cond, !dbg !7928, !llvm.loop !7929

for.end:                                          ; preds = %for.cond
  %33 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7931
  %data = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 19, !dbg !7932
  %34 = load i8*, i8** %data, align 8, !dbg !7932
  %35 = bitcast i8* %34 to %struct.ID*, !dbg !7931
  call void @DAG_id_tag_update(%struct.ID* %35, i16 signext 0), !dbg !7933
  %36 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7934
  %37 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7935
  %data25 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 19, !dbg !7936
  %38 = load i8*, i8** %data25, align 8, !dbg !7936
  call void @WM_event_add_notifier(%struct.bContext* %36, i32 274333696, i8* %38), !dbg !7937
  ret i32 4, !dbg !7938
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_subdivide(%struct.wmOperatorType* %ot) #0 !dbg !7939 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7940, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !7942, metadata !DIExpression()), !dbg !7943
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7944
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7945
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.54, i64 0, i64 0), i8** %name, align 8, !dbg !7946
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7947
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !7948
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.55, i64 0, i64 0), i8** %description, align 8, !dbg !7949
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7950
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !7951
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.56, i64 0, i64 0), i8** %idname, align 8, !dbg !7952
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7953
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7954
  store i32 (%struct.bContext*, %struct.wmOperator*)* @subdivide_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7955
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7956
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7957
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !7958
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7959
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7960
  store i16 3, i16* %flag, align 8, !dbg !7961
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7962
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !7963
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7963
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !7962
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i64 0, i64 0), i32 1, i32 1, i32 2147483647, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i64 0, i64 0), i32 1, i32 10), !dbg !7964
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !7965
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7966
  call void @RNA_def_property_flag(%struct.PropertyRNA* %9, i32 268435456), !dbg !7967
  ret void, !dbg !7968
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @subdivide_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7969 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %number_cuts = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7970, metadata !DIExpression()), !dbg !7971
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7972, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7974, metadata !DIExpression()), !dbg !7975
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7976
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !7977
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7975
  call void @llvm.dbg.declare(metadata i32* %number_cuts, metadata !7978, metadata !DIExpression()), !dbg !7979
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7980
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !7981
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7981
  %call1 = call i32 @RNA_int_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i64 0, i64 0)), !dbg !7982
  store i32 %call1, i32* %number_cuts, align 4, !dbg !7979
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7983
  %4 = load i32, i32* %number_cuts, align 4, !dbg !7984
  call void @subdividenurb(%struct.Object* %3, i32 %4), !dbg !7985
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7986
  %data = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 19, !dbg !7988
  %6 = load i8*, i8** %data, align 8, !dbg !7988
  %7 = bitcast i8* %6 to %struct.Curve*, !dbg !7986
  %call2 = call i32 @ED_curve_updateAnimPaths(%struct.Curve* %7), !dbg !7989
  %tobool = icmp ne i32 %call2, 0, !dbg !7989
  br i1 %tobool, label %if.then, label %if.end, !dbg !7990

if.then:                                          ; preds = %entry
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7991
  %9 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7992
  %10 = bitcast %struct.Object* %9 to i8*, !dbg !7992
  call void @WM_event_add_notifier(%struct.bContext* %8, i32 85524480, i8* %10), !dbg !7993
  br label %if.end, !dbg !7993

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7994
  %12 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7995
  %data3 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 19, !dbg !7996
  %13 = load i8*, i8** %data3, align 8, !dbg !7996
  call void @WM_event_add_notifier(%struct.bContext* %11, i32 274399232, i8* %13), !dbg !7997
  %14 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7998
  %data4 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 19, !dbg !7999
  %15 = load i8*, i8** %data4, align 8, !dbg !7999
  %16 = bitcast i8* %15 to %struct.ID*, !dbg !7998
  call void @DAG_id_tag_update(%struct.ID* %16, i16 signext 0), !dbg !8000
  ret i32 4, !dbg !8001
}

declare dso_local %struct.PropertyRNA* @RNA_def_int(i8*, i8*, i32, i32, i32, i8*, i8*, i32, i32) #2

declare dso_local void @RNA_def_property_flag(%struct.PropertyRNA*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_spline_type_set(%struct.wmOperatorType* %ot) #0 !dbg !2 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8002, metadata !DIExpression()), !dbg !8003
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8004
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8005
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.64, i64 0, i64 0), i8** %name, align 8, !dbg !8006
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8007
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !8008
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.65, i64 0, i64 0), i8** %description, align 8, !dbg !8009
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8010
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !8011
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.66, i64 0, i64 0), i8** %idname, align 8, !dbg !8012
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8013
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8014
  store i32 (%struct.bContext*, %struct.wmOperator*)* @set_spline_type_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8015
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8016
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !8017
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8018
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8019
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !8020
  store i32 (%struct.bContext*)* @ED_operator_editcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !8021
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8022
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !8023
  store i16 3, i16* %flag, align 8, !dbg !8024
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8025
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !8026
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8026
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !8025
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([4 x %struct.EnumPropertyItem], [4 x %struct.EnumPropertyItem]* @CURVE_OT_spline_type_set.type_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.69, i64 0, i64 0)), !dbg !8027
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8028
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 13, !dbg !8029
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !8030
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8031
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %11, i32 0, i32 11, !dbg !8032
  %12 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !8032
  %13 = bitcast %struct.StructRNA* %12 to i8*, !dbg !8031
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %13, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.70, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.72, i64 0, i64 0)), !dbg !8033
  ret void, !dbg !8034
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @set_spline_type_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8035 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %changed = alloca i8, align 1
  %changed_size = alloca i8, align 1
  %use_handles = alloca i8, align 1
  %type = alloca i32, align 4
  %pntsu_prev = alloca i32, align 4
  %cu = alloca %struct.Curve*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8036, metadata !DIExpression()), !dbg !8037
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8038, metadata !DIExpression()), !dbg !8039
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8040, metadata !DIExpression()), !dbg !8041
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8042
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !8043
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !8041
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !8044, metadata !DIExpression()), !dbg !8045
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8046
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %1), !dbg !8047
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !8045
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !8048, metadata !DIExpression()), !dbg !8049
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !8050, metadata !DIExpression()), !dbg !8051
  store i8 0, i8* %changed, align 1, !dbg !8051
  call void @llvm.dbg.declare(metadata i8* %changed_size, metadata !8052, metadata !DIExpression()), !dbg !8053
  store i8 0, i8* %changed_size, align 1, !dbg !8053
  call void @llvm.dbg.declare(metadata i8* %use_handles, metadata !8054, metadata !DIExpression()), !dbg !8055
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8056
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !8057
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8057
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.70, i64 0, i64 0)), !dbg !8058
  %conv = trunc i32 %call2 to i8, !dbg !8058
  store i8 %conv, i8* %use_handles, align 1, !dbg !8055
  call void @llvm.dbg.declare(metadata i32* %type, metadata !8059, metadata !DIExpression()), !dbg !8061
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8062
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !8063
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !8063
  %call4 = call i32 @RNA_enum_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0)), !dbg !8064
  store i32 %call4, i32* %type, align 4, !dbg !8061
  %6 = load i32, i32* %type, align 4, !dbg !8065
  %cmp = icmp eq i32 %6, 3, !dbg !8067
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8068

lor.lhs.false:                                    ; preds = %entry
  %7 = load i32, i32* %type, align 4, !dbg !8069
  %cmp6 = icmp eq i32 %7, 2, !dbg !8070
  br i1 %cmp6, label %if.then, label %if.end, !dbg !8071

if.then:                                          ; preds = %lor.lhs.false, %entry
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8072
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 8, !dbg !8074
  %9 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !8074
  call void @BKE_report(%struct.ReportList* %9, i32 32, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.203, i64 0, i64 0)), !dbg !8075
  store i32 2, i32* %retval, align 4, !dbg !8076
  br label %return, !dbg !8076

if.end:                                           ; preds = %lor.lhs.false
  %10 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !8077
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %10, i32 0, i32 0, !dbg !8079
  %11 = load i8*, i8** %first, align 8, !dbg !8079
  %12 = bitcast i8* %11 to %struct.Nurb*, !dbg !8077
  store %struct.Nurb* %12, %struct.Nurb** %nu, align 8, !dbg !8080
  br label %for.cond, !dbg !8081

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8082
  %tobool = icmp ne %struct.Nurb* %13, null, !dbg !8084
  br i1 %tobool, label %for.body, label %for.end, !dbg !8084

for.body:                                         ; preds = %for.cond
  %14 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8085
  %call8 = call i32 @isNurbsel(%struct.Nurb* %14), !dbg !8088
  %tobool9 = icmp ne i32 %call8, 0, !dbg !8088
  br i1 %tobool9, label %if.then10, label %if.end22, !dbg !8089

if.then10:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %pntsu_prev, metadata !8090, metadata !DIExpression()), !dbg !8092
  %15 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8093
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %15, i32 0, i32 6, !dbg !8094
  %16 = load i32, i32* %pntsu, align 8, !dbg !8094
  store i32 %16, i32* %pntsu_prev, align 4, !dbg !8092
  %17 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8095
  %18 = load i32, i32* %type, align 4, !dbg !8097
  %conv11 = trunc i32 %18 to i16, !dbg !8097
  %19 = load i8, i8* %use_handles, align 1, !dbg !8098
  %call12 = call zeroext i8 @BKE_nurb_type_convert(%struct.Nurb* %17, i16 signext %conv11, i8 zeroext %19), !dbg !8099
  %tobool13 = icmp ne i8 %call12, 0, !dbg !8099
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !8100

if.then14:                                        ; preds = %if.then10
  store i8 1, i8* %changed, align 1, !dbg !8101
  %20 = load i32, i32* %pntsu_prev, align 4, !dbg !8103
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8105
  %pntsu15 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 6, !dbg !8106
  %22 = load i32, i32* %pntsu15, align 8, !dbg !8106
  %cmp16 = icmp ne i32 %20, %22, !dbg !8107
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !8108

if.then18:                                        ; preds = %if.then14
  store i8 1, i8* %changed_size, align 1, !dbg !8109
  br label %if.end19, !dbg !8111

if.end19:                                         ; preds = %if.then18, %if.then14
  br label %if.end21, !dbg !8112

if.else:                                          ; preds = %if.then10
  %23 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8113
  %reports20 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %23, i32 0, i32 8, !dbg !8115
  %24 = load %struct.ReportList*, %struct.ReportList** %reports20, align 8, !dbg !8115
  call void @BKE_report(%struct.ReportList* %24, i32 32, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.204, i64 0, i64 0)), !dbg !8116
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.end19
  br label %if.end22, !dbg !8117

if.end22:                                         ; preds = %if.end21, %for.body
  br label %for.inc, !dbg !8118

for.inc:                                          ; preds = %if.end22
  %25 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8119
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %25, i32 0, i32 0, !dbg !8120
  %26 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !8120
  store %struct.Nurb* %26, %struct.Nurb** %nu, align 8, !dbg !8121
  br label %for.cond, !dbg !8122, !llvm.loop !8123

for.end:                                          ; preds = %for.cond
  %27 = load i8, i8* %changed, align 1, !dbg !8125
  %tobool23 = icmp ne i8 %27, 0, !dbg !8125
  br i1 %tobool23, label %if.then24, label %if.else35, !dbg !8127

if.then24:                                        ; preds = %for.end
  %28 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8128
  %data = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 19, !dbg !8131
  %29 = load i8*, i8** %data, align 8, !dbg !8131
  %30 = bitcast i8* %29 to %struct.Curve*, !dbg !8128
  %call25 = call i32 @ED_curve_updateAnimPaths(%struct.Curve* %30), !dbg !8132
  %tobool26 = icmp ne i32 %call25, 0, !dbg !8132
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !8133

if.then27:                                        ; preds = %if.then24
  %31 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8134
  %32 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8135
  %33 = bitcast %struct.Object* %32 to i8*, !dbg !8135
  call void @WM_event_add_notifier(%struct.bContext* %31, i32 85524480, i8* %33), !dbg !8136
  br label %if.end28, !dbg !8136

if.end28:                                         ; preds = %if.then27, %if.then24
  %34 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8137
  %data29 = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 19, !dbg !8138
  %35 = load i8*, i8** %data29, align 8, !dbg !8138
  %36 = bitcast i8* %35 to %struct.ID*, !dbg !8137
  call void @DAG_id_tag_update(%struct.ID* %36, i16 signext 0), !dbg !8139
  %37 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8140
  %38 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8141
  %data30 = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 19, !dbg !8142
  %39 = load i8*, i8** %data30, align 8, !dbg !8142
  call void @WM_event_add_notifier(%struct.bContext* %37, i32 274399232, i8* %39), !dbg !8143
  %40 = load i8, i8* %changed_size, align 1, !dbg !8144
  %tobool31 = icmp ne i8 %40, 0, !dbg !8144
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !8146

if.then32:                                        ; preds = %if.end28
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !8147, metadata !DIExpression()), !dbg !8149
  %41 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8150
  %data33 = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 19, !dbg !8151
  %42 = load i8*, i8** %data33, align 8, !dbg !8151
  %43 = bitcast i8* %42 to %struct.Curve*, !dbg !8150
  store %struct.Curve* %43, %struct.Curve** %cu, align 8, !dbg !8149
  %44 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8152
  %actvert = getelementptr inbounds %struct.Curve, %struct.Curve* %44, i32 0, i32 32, !dbg !8153
  store i32 -1, i32* %actvert, align 8, !dbg !8154
  br label %if.end34, !dbg !8155

if.end34:                                         ; preds = %if.then32, %if.end28
  store i32 4, i32* %retval, align 4, !dbg !8156
  br label %return, !dbg !8156

if.else35:                                        ; preds = %for.end
  store i32 2, i32* %retval, align 4, !dbg !8157
  br label %return, !dbg !8157

return:                                           ; preds = %if.else35, %if.end34, %if.then
  %45 = load i32, i32* %retval, align 4, !dbg !8159
  ret i32 %45, !dbg !8159
}

declare dso_local i32 @WM_menu_invoke(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_enum(i8*, i8*, %struct.EnumPropertyItem*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_handle_type_set(%struct.wmOperatorType* %ot) #0 !dbg !3204 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8160, metadata !DIExpression()), !dbg !8161
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8162
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8163
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.83, i64 0, i64 0), i8** %name, align 8, !dbg !8164
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8165
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !8166
  store i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.84, i64 0, i64 0), i8** %description, align 8, !dbg !8167
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8168
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !8169
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.85, i64 0, i64 0), i8** %idname, align 8, !dbg !8170
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8171
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !8172
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8173
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8174
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8175
  store i32 (%struct.bContext*, %struct.wmOperator*)* @set_handle_type_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8176
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8177
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !8178
  store i32 (%struct.bContext*)* @ED_operator_editcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !8179
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8180
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !8181
  store i16 3, i16* %flag, align 8, !dbg !8182
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8183
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !8184
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8184
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !8183
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([6 x %struct.EnumPropertyItem], [6 x %struct.EnumPropertyItem]* @CURVE_OT_handle_type_set.editcurve_handle_type_items, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.69, i64 0, i64 0)), !dbg !8185
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8186
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 13, !dbg !8187
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !8188
  ret void, !dbg !8189
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @set_handle_type_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8190 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8191, metadata !DIExpression()), !dbg !8192
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8193, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8195, metadata !DIExpression()), !dbg !8196
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8197
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !8198
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !8196
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !8199, metadata !DIExpression()), !dbg !8200
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8201
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %1), !dbg !8202
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !8200
  %2 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !8203
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8204
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !8205
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8205
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0)), !dbg !8206
  %conv = trunc i32 %call2 to i8, !dbg !8206
  call void @BKE_nurbList_handles_set(%struct.ListBase* %2, i8 zeroext %conv), !dbg !8207
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8208
  %6 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8209
  %data = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 19, !dbg !8210
  %7 = load i8*, i8** %data, align 8, !dbg !8210
  call void @WM_event_add_notifier(%struct.bContext* %5, i32 274399232, i8* %7), !dbg !8211
  %8 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8212
  %data3 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 19, !dbg !8213
  %9 = load i8*, i8** %data3, align 8, !dbg !8213
  %10 = bitcast i8* %9 to %struct.ID*, !dbg !8212
  call void @DAG_id_tag_update(%struct.ID* %10, i16 signext 0), !dbg !8214
  ret i32 4, !dbg !8215
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_normals_make_consistent(%struct.wmOperatorType* %ot) #0 !dbg !8216 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8217, metadata !DIExpression()), !dbg !8218
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8219
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8220
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.86, i64 0, i64 0), i8** %name, align 8, !dbg !8221
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8222
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !8223
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.87, i64 0, i64 0), i8** %description, align 8, !dbg !8224
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8225
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !8226
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.88, i64 0, i64 0), i8** %idname, align 8, !dbg !8227
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8228
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8229
  store i32 (%struct.bContext*, %struct.wmOperator*)* @curve_normals_make_consistent_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8230
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8231
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8232
  store i32 (%struct.bContext*)* @ED_operator_editcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !8233
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8234
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8235
  store i16 3, i16* %flag, align 8, !dbg !8236
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8237
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !8238
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8238
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !8237
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.89, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.90, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.91, i64 0, i64 0)), !dbg !8239
  ret void, !dbg !8240
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @curve_normals_make_consistent_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8241 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %calc_length = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8242, metadata !DIExpression()), !dbg !8243
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8244, metadata !DIExpression()), !dbg !8245
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8246, metadata !DIExpression()), !dbg !8247
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8248
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !8249
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !8247
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !8250, metadata !DIExpression()), !dbg !8251
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8252
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %1), !dbg !8253
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !8251
  call void @llvm.dbg.declare(metadata i8* %calc_length, metadata !8254, metadata !DIExpression()), !dbg !8255
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8256
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !8257
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8257
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.89, i64 0, i64 0)), !dbg !8258
  %conv = trunc i32 %call2 to i8, !dbg !8258
  store i8 %conv, i8* %calc_length, align 1, !dbg !8255
  %4 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !8259
  %5 = load i8, i8* %calc_length, align 1, !dbg !8260
  call void @BKE_nurbList_handles_recalculate(%struct.ListBase* %4, i8 zeroext %5, i8 zeroext 1), !dbg !8261
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8262
  %7 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8263
  %data = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 19, !dbg !8264
  %8 = load i8*, i8** %data, align 8, !dbg !8264
  call void @WM_event_add_notifier(%struct.bContext* %6, i32 274399232, i8* %8), !dbg !8265
  %9 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8266
  %data3 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 19, !dbg !8267
  %10 = load i8*, i8** %data3, align 8, !dbg !8267
  %11 = bitcast i8* %10 to %struct.ID*, !dbg !8266
  call void @DAG_id_tag_update(%struct.ID* %11, i16 signext 0), !dbg !8268
  ret i32 4, !dbg !8269
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_make_segment(%struct.wmOperatorType* %ot) #0 !dbg !8270 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8271, metadata !DIExpression()), !dbg !8272
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8273
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8274
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.92, i64 0, i64 0), i8** %name, align 8, !dbg !8275
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8276
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8277
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.93, i64 0, i64 0), i8** %idname, align 8, !dbg !8278
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8279
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8280
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.94, i64 0, i64 0), i8** %description, align 8, !dbg !8281
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8282
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8283
  store i32 (%struct.bContext*, %struct.wmOperator*)* @make_segment_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8284
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8285
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8286
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !8287
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8288
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8289
  store i16 3, i16* %flag, align 8, !dbg !8290
  ret void, !dbg !8291
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @make_segment_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8292 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %nubase = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %nu1 = alloca %struct.Nurb*, align 8
  %nu2 = alloca %struct.Nurb*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %ok = alloca i8, align 1
  %bezt317 = alloca %struct.BezTriple*, align 8
  %sw_ap = alloca %struct.Nurb*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8293, metadata !DIExpression()), !dbg !8294
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8295, metadata !DIExpression()), !dbg !8296
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8297, metadata !DIExpression()), !dbg !8298
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8299
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !8300
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !8298
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !8301, metadata !DIExpression()), !dbg !8302
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8303
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !8304
  %2 = load i8*, i8** %data, align 8, !dbg !8304
  %3 = bitcast i8* %2 to %struct.Curve*, !dbg !8303
  store %struct.Curve* %3, %struct.Curve** %cu, align 8, !dbg !8302
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nubase, metadata !8305, metadata !DIExpression()), !dbg !8306
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8307
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %4), !dbg !8308
  store %struct.ListBase* %call1, %struct.ListBase** %nubase, align 8, !dbg !8306
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !8309, metadata !DIExpression()), !dbg !8310
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu1, metadata !8311, metadata !DIExpression()), !dbg !8312
  store %struct.Nurb* null, %struct.Nurb** %nu1, align 8, !dbg !8312
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu2, metadata !8313, metadata !DIExpression()), !dbg !8314
  store %struct.Nurb* null, %struct.Nurb** %nu2, align 8, !dbg !8314
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !8315, metadata !DIExpression()), !dbg !8316
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !8317, metadata !DIExpression()), !dbg !8318
  store i8 0, i8* %ok, align 1, !dbg !8318
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8319
  %type = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 3, !dbg !8321
  %6 = load i16, i16* %type, align 8, !dbg !8321
  %conv = sext i16 %6 to i32, !dbg !8319
  %cmp = icmp eq i32 %conv, 3, !dbg !8322
  br i1 %cmp, label %if.then, label %if.else, !dbg !8323

if.then:                                          ; preds = %entry
  %7 = load %struct.ListBase*, %struct.ListBase** %nubase, align 8, !dbg !8324
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %7, i32 0, i32 0, !dbg !8325
  %8 = load i8*, i8** %first, align 8, !dbg !8325
  %9 = bitcast i8* %8 to %struct.Nurb*, !dbg !8324
  store %struct.Nurb* %9, %struct.Nurb** %nu, align 8, !dbg !8326
  br label %if.end, !dbg !8327

if.else:                                          ; preds = %entry
  store %struct.Nurb* null, %struct.Nurb** %nu, align 8, !dbg !8328
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !8329

while.cond:                                       ; preds = %if.end39, %if.end
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8330
  %tobool = icmp ne %struct.Nurb* %10, null, !dbg !8329
  br i1 %tobool, label %while.body, label %while.end, !dbg !8329

while.body:                                       ; preds = %while.cond
  %11 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8331
  %call3 = call i32 @isNurbsel(%struct.Nurb* %11), !dbg !8334
  %tobool4 = icmp ne i32 %call3, 0, !dbg !8334
  br i1 %tobool4, label %if.then5, label %if.end39, !dbg !8335

if.then5:                                         ; preds = %while.body
  %12 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8336
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 6, !dbg !8339
  %13 = load i32, i32* %pntsu, align 8, !dbg !8339
  %cmp6 = icmp sgt i32 %13, 1, !dbg !8340
  br i1 %cmp6, label %land.lhs.true, label %if.end11, !dbg !8341

land.lhs.true:                                    ; preds = %if.then5
  %14 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8342
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 7, !dbg !8343
  %15 = load i32, i32* %pntsv, align 4, !dbg !8343
  %cmp8 = icmp sgt i32 %15, 1, !dbg !8344
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !8345

if.then10:                                        ; preds = %land.lhs.true
  br label %while.end, !dbg !8346

if.end11:                                         ; preds = %land.lhs.true, %if.then5
  %16 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8347
  %17 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8349
  %call12 = call i32 @isNurbsel_count(%struct.Curve* %16, %struct.Nurb* %17), !dbg !8350
  %cmp13 = icmp sgt i32 %call12, 1, !dbg !8351
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !8352

if.then15:                                        ; preds = %if.end11
  br label %while.end, !dbg !8353

if.end16:                                         ; preds = %if.end11
  %18 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8354
  %19 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8356
  %call17 = call i32 @isNurbsel_count(%struct.Curve* %18, %struct.Nurb* %19), !dbg !8357
  %cmp18 = icmp eq i32 %call17, 1, !dbg !8358
  br i1 %cmp18, label %if.then20, label %if.end38, !dbg !8359

if.then20:                                        ; preds = %if.end16
  %20 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8360
  %pntsv21 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %20, i32 0, i32 7, !dbg !8363
  %21 = load i32, i32* %pntsv21, align 4, !dbg !8363
  %cmp22 = icmp eq i32 %21, 1, !dbg !8364
  br i1 %cmp22, label %if.then24, label %if.end37, !dbg !8365

if.then24:                                        ; preds = %if.then20
  %22 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8366
  %bp25 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %22, i32 0, i32 17, !dbg !8369
  %23 = load %struct.BPoint*, %struct.BPoint** %bp25, align 8, !dbg !8369
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %23, i32 0, i32 3, !dbg !8370
  %24 = load i16, i16* %f1, align 4, !dbg !8370
  %conv26 = sext i16 %24 to i32, !dbg !8366
  %and = and i32 %conv26, 1, !dbg !8371
  %tobool27 = icmp ne i32 %and, 0, !dbg !8371
  br i1 %tobool27, label %if.then34, label %lor.lhs.false, !dbg !8372

lor.lhs.false:                                    ; preds = %if.then24
  %25 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8373
  %bp28 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %25, i32 0, i32 17, !dbg !8374
  %26 = load %struct.BPoint*, %struct.BPoint** %bp28, align 8, !dbg !8374
  %27 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8375
  %pntsu29 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %27, i32 0, i32 6, !dbg !8376
  %28 = load i32, i32* %pntsu29, align 8, !dbg !8376
  %sub = sub nsw i32 %28, 1, !dbg !8377
  %idxprom = sext i32 %sub to i64, !dbg !8373
  %arrayidx = getelementptr inbounds %struct.BPoint, %struct.BPoint* %26, i64 %idxprom, !dbg !8373
  %f130 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %arrayidx, i32 0, i32 3, !dbg !8378
  %29 = load i16, i16* %f130, align 4, !dbg !8378
  %conv31 = sext i16 %29 to i32, !dbg !8373
  %and32 = and i32 %conv31, 1, !dbg !8379
  %tobool33 = icmp ne i32 %and32, 0, !dbg !8379
  br i1 %tobool33, label %if.then34, label %if.else35, !dbg !8380

if.then34:                                        ; preds = %lor.lhs.false, %if.then24
  br label %if.end36, !dbg !8381

if.else35:                                        ; preds = %lor.lhs.false
  br label %while.end, !dbg !8383

if.end36:                                         ; preds = %if.then34
  br label %if.end37, !dbg !8385

if.end37:                                         ; preds = %if.end36, %if.then20
  br label %if.end38, !dbg !8386

if.end38:                                         ; preds = %if.end37, %if.end16
  br label %if.end39, !dbg !8387

if.end39:                                         ; preds = %if.end38, %while.body
  %30 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8388
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %30, i32 0, i32 0, !dbg !8389
  %31 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !8389
  store %struct.Nurb* %31, %struct.Nurb** %nu, align 8, !dbg !8390
  br label %while.cond, !dbg !8329, !llvm.loop !8391

while.end:                                        ; preds = %if.else35, %if.then15, %if.then10, %while.cond
  %32 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8393
  %tobool40 = icmp ne %struct.Nurb* %32, null, !dbg !8393
  br i1 %tobool40, label %if.then41, label %if.end43, !dbg !8395

if.then41:                                        ; preds = %while.end
  %33 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8396
  %34 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8397
  %call42 = call i32 @merge_nurb(%struct.bContext* %33, %struct.wmOperator* %34), !dbg !8398
  store i32 %call42, i32* %retval, align 4, !dbg !8399
  br label %return, !dbg !8399

if.end43:                                         ; preds = %while.end
  %35 = load %struct.ListBase*, %struct.ListBase** %nubase, align 8, !dbg !8400
  %first44 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %35, i32 0, i32 0, !dbg !8402
  %36 = load i8*, i8** %first44, align 8, !dbg !8402
  %37 = bitcast i8* %36 to %struct.Nurb*, !dbg !8400
  store %struct.Nurb* %37, %struct.Nurb** %nu, align 8, !dbg !8403
  br label %for.cond, !dbg !8404

for.cond:                                         ; preds = %for.inc, %if.end43
  %38 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8405
  %tobool45 = icmp ne %struct.Nurb* %38, null, !dbg !8407
  br i1 %tobool45, label %for.body, label %for.end, !dbg !8407

for.body:                                         ; preds = %for.cond
  %39 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8408
  %pntsu46 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %39, i32 0, i32 6, !dbg !8411
  %40 = load i32, i32* %pntsu46, align 8, !dbg !8411
  %cmp47 = icmp eq i32 %40, 1, !dbg !8412
  br i1 %cmp47, label %if.then49, label %if.end53, !dbg !8413

if.then49:                                        ; preds = %for.body
  %41 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8414
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %41, i32 0, i32 13, !dbg !8415
  %42 = load i16, i16* %flagu, align 4, !dbg !8416
  %conv50 = sext i16 %42 to i32, !dbg !8416
  %and51 = and i32 %conv50, -2, !dbg !8416
  %conv52 = trunc i32 %and51 to i16, !dbg !8416
  store i16 %conv52, i16* %flagu, align 4, !dbg !8416
  br label %if.end53, !dbg !8414

if.end53:                                         ; preds = %if.then49, %for.body
  %43 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8417
  %flagu54 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %43, i32 0, i32 13, !dbg !8419
  %44 = load i16, i16* %flagu54, align 4, !dbg !8419
  %conv55 = sext i16 %44 to i32, !dbg !8417
  %and56 = and i32 %conv55, 1, !dbg !8420
  %cmp57 = icmp eq i32 %and56, 0, !dbg !8421
  br i1 %cmp57, label %if.then59, label %if.end291, !dbg !8422

if.then59:                                        ; preds = %if.end53
  %45 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8423
  %type60 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %45, i32 0, i32 2, !dbg !8426
  %46 = load i16, i16* %type60, align 8, !dbg !8426
  %conv61 = sext i16 %46 to i32, !dbg !8423
  %cmp62 = icmp eq i32 %conv61, 1, !dbg !8427
  br i1 %cmp62, label %if.then64, label %if.else230, !dbg !8428

if.then64:                                        ; preds = %if.then59
  %47 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8429
  %drawflag = getelementptr inbounds %struct.Curve, %struct.Curve* %47, i32 0, i32 16, !dbg !8429
  %48 = load i16, i16* %drawflag, align 8, !dbg !8429
  %conv65 = sext i16 %48 to i32, !dbg !8429
  %and66 = and i32 %conv65, 1, !dbg !8429
  %tobool67 = icmp ne i32 %and66, 0, !dbg !8429
  br i1 %tobool67, label %cond.true, label %cond.false, !dbg !8432

cond.true:                                        ; preds = %if.then64
  %49 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8429
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %49, i32 0, i32 18, !dbg !8429
  %50 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !8429
  %51 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8429
  %pntsu68 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %51, i32 0, i32 6, !dbg !8429
  %52 = load i32, i32* %pntsu68, align 8, !dbg !8429
  %sub69 = sub nsw i32 %52, 1, !dbg !8429
  %idxprom70 = sext i32 %sub69 to i64, !dbg !8429
  %arrayidx71 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %50, i64 %idxprom70, !dbg !8429
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %arrayidx71, i32 0, i32 8, !dbg !8429
  %53 = load i8, i8* %f2, align 4, !dbg !8429
  %conv72 = zext i8 %53 to i32, !dbg !8429
  %and73 = and i32 %conv72, 1, !dbg !8429
  %tobool74 = icmp ne i32 %and73, 0, !dbg !8429
  br i1 %tobool74, label %if.then103, label %if.else143, !dbg !8429

cond.false:                                       ; preds = %if.then64
  %54 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8429
  %bezt75 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %54, i32 0, i32 18, !dbg !8429
  %55 = load %struct.BezTriple*, %struct.BezTriple** %bezt75, align 8, !dbg !8429
  %56 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8429
  %pntsu76 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %56, i32 0, i32 6, !dbg !8429
  %57 = load i32, i32* %pntsu76, align 8, !dbg !8429
  %sub77 = sub nsw i32 %57, 1, !dbg !8429
  %idxprom78 = sext i32 %sub77 to i64, !dbg !8429
  %arrayidx79 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %55, i64 %idxprom78, !dbg !8429
  %f280 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %arrayidx79, i32 0, i32 8, !dbg !8429
  %58 = load i8, i8* %f280, align 4, !dbg !8429
  %conv81 = zext i8 %58 to i32, !dbg !8429
  %and82 = and i32 %conv81, 1, !dbg !8429
  %tobool83 = icmp ne i32 %and82, 0, !dbg !8429
  br i1 %tobool83, label %if.then103, label %lor.lhs.false84, !dbg !8429

lor.lhs.false84:                                  ; preds = %cond.false
  %59 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8429
  %bezt85 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %59, i32 0, i32 18, !dbg !8429
  %60 = load %struct.BezTriple*, %struct.BezTriple** %bezt85, align 8, !dbg !8429
  %61 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8429
  %pntsu86 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %61, i32 0, i32 6, !dbg !8429
  %62 = load i32, i32* %pntsu86, align 8, !dbg !8429
  %sub87 = sub nsw i32 %62, 1, !dbg !8429
  %idxprom88 = sext i32 %sub87 to i64, !dbg !8429
  %arrayidx89 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %60, i64 %idxprom88, !dbg !8429
  %f190 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %arrayidx89, i32 0, i32 7, !dbg !8429
  %63 = load i8, i8* %f190, align 1, !dbg !8429
  %conv91 = zext i8 %63 to i32, !dbg !8429
  %and92 = and i32 %conv91, 1, !dbg !8429
  %tobool93 = icmp ne i32 %and92, 0, !dbg !8429
  br i1 %tobool93, label %if.then103, label %lor.lhs.false94, !dbg !8429

lor.lhs.false94:                                  ; preds = %lor.lhs.false84
  %64 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8429
  %bezt95 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %64, i32 0, i32 18, !dbg !8429
  %65 = load %struct.BezTriple*, %struct.BezTriple** %bezt95, align 8, !dbg !8429
  %66 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8429
  %pntsu96 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %66, i32 0, i32 6, !dbg !8429
  %67 = load i32, i32* %pntsu96, align 8, !dbg !8429
  %sub97 = sub nsw i32 %67, 1, !dbg !8429
  %idxprom98 = sext i32 %sub97 to i64, !dbg !8429
  %arrayidx99 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %65, i64 %idxprom98, !dbg !8429
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %arrayidx99, i32 0, i32 9, !dbg !8429
  %68 = load i8, i8* %f3, align 1, !dbg !8429
  %conv100 = zext i8 %68 to i32, !dbg !8429
  %and101 = and i32 %conv100, 1, !dbg !8429
  %tobool102 = icmp ne i32 %and101, 0, !dbg !8429
  br i1 %tobool102, label %if.then103, label %if.else143, !dbg !8432

if.then103:                                       ; preds = %lor.lhs.false94, %lor.lhs.false84, %cond.false, %cond.true
  %69 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8433
  %cmp104 = icmp eq %struct.Nurb* %69, null, !dbg !8436
  br i1 %cmp104, label %if.then106, label %if.else107, !dbg !8437

if.then106:                                       ; preds = %if.then103
  %70 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8438
  store %struct.Nurb* %70, %struct.Nurb** %nu2, align 8, !dbg !8440
  br label %if.end142, !dbg !8441

if.else107:                                       ; preds = %if.then103
  %71 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8442
  %cmp108 = icmp eq %struct.Nurb* %71, null, !dbg !8444
  br i1 %cmp108, label %if.then110, label %if.end141, !dbg !8445

if.then110:                                       ; preds = %if.else107
  %72 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8446
  store %struct.Nurb* %72, %struct.Nurb** %nu1, align 8, !dbg !8448
  %73 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8449
  %drawflag111 = getelementptr inbounds %struct.Curve, %struct.Curve* %73, i32 0, i32 16, !dbg !8449
  %74 = load i16, i16* %drawflag111, align 8, !dbg !8449
  %conv112 = sext i16 %74 to i32, !dbg !8449
  %and113 = and i32 %conv112, 1, !dbg !8449
  %tobool114 = icmp ne i32 %and113, 0, !dbg !8449
  br i1 %tobool114, label %cond.true115, label %cond.false121, !dbg !8451

cond.true115:                                     ; preds = %if.then110
  %75 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8449
  %bezt116 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %75, i32 0, i32 18, !dbg !8449
  %76 = load %struct.BezTriple*, %struct.BezTriple** %bezt116, align 8, !dbg !8449
  %f2117 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %76, i32 0, i32 8, !dbg !8449
  %77 = load i8, i8* %f2117, align 4, !dbg !8449
  %conv118 = zext i8 %77 to i32, !dbg !8449
  %and119 = and i32 %conv118, 1, !dbg !8449
  %tobool120 = icmp ne i32 %and119, 0, !dbg !8449
  br i1 %tobool120, label %if.end140, label %if.then139, !dbg !8449

cond.false121:                                    ; preds = %if.then110
  %78 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8449
  %bezt122 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %78, i32 0, i32 18, !dbg !8449
  %79 = load %struct.BezTriple*, %struct.BezTriple** %bezt122, align 8, !dbg !8449
  %f2123 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %79, i32 0, i32 8, !dbg !8449
  %80 = load i8, i8* %f2123, align 4, !dbg !8449
  %conv124 = zext i8 %80 to i32, !dbg !8449
  %and125 = and i32 %conv124, 1, !dbg !8449
  %tobool126 = icmp ne i32 %and125, 0, !dbg !8449
  br i1 %tobool126, label %if.end140, label %lor.lhs.false127, !dbg !8449

lor.lhs.false127:                                 ; preds = %cond.false121
  %81 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8449
  %bezt128 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %81, i32 0, i32 18, !dbg !8449
  %82 = load %struct.BezTriple*, %struct.BezTriple** %bezt128, align 8, !dbg !8449
  %f1129 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %82, i32 0, i32 7, !dbg !8449
  %83 = load i8, i8* %f1129, align 1, !dbg !8449
  %conv130 = zext i8 %83 to i32, !dbg !8449
  %and131 = and i32 %conv130, 1, !dbg !8449
  %tobool132 = icmp ne i32 %and131, 0, !dbg !8449
  br i1 %tobool132, label %if.end140, label %lor.lhs.false133, !dbg !8449

lor.lhs.false133:                                 ; preds = %lor.lhs.false127
  %84 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8449
  %bezt134 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %84, i32 0, i32 18, !dbg !8449
  %85 = load %struct.BezTriple*, %struct.BezTriple** %bezt134, align 8, !dbg !8449
  %f3135 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %85, i32 0, i32 9, !dbg !8449
  %86 = load i8, i8* %f3135, align 1, !dbg !8449
  %conv136 = zext i8 %86 to i32, !dbg !8449
  %and137 = and i32 %conv136, 1, !dbg !8449
  %tobool138 = icmp ne i32 %and137, 0, !dbg !8449
  br i1 %tobool138, label %if.end140, label %if.then139, !dbg !8451

if.then139:                                       ; preds = %lor.lhs.false133, %cond.true115
  %87 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8452
  call void @BKE_nurb_direction_switch(%struct.Nurb* %87), !dbg !8454
  %88 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8455
  %89 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8456
  call void @keyData_switchDirectionNurb(%struct.Curve* %88, %struct.Nurb* %89), !dbg !8457
  br label %if.end140, !dbg !8458

if.end140:                                        ; preds = %if.then139, %lor.lhs.false133, %lor.lhs.false127, %cond.false121, %cond.true115
  br label %if.end141, !dbg !8459

if.end141:                                        ; preds = %if.end140, %if.else107
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %if.then106
  br label %if.end229, !dbg !8460

if.else143:                                       ; preds = %lor.lhs.false94, %cond.true
  %90 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8461
  %drawflag144 = getelementptr inbounds %struct.Curve, %struct.Curve* %90, i32 0, i32 16, !dbg !8461
  %91 = load i16, i16* %drawflag144, align 8, !dbg !8461
  %conv145 = sext i16 %91 to i32, !dbg !8461
  %and146 = and i32 %conv145, 1, !dbg !8461
  %tobool147 = icmp ne i32 %and146, 0, !dbg !8461
  br i1 %tobool147, label %cond.true148, label %cond.false154, !dbg !8463

cond.true148:                                     ; preds = %if.else143
  %92 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8461
  %bezt149 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %92, i32 0, i32 18, !dbg !8461
  %93 = load %struct.BezTriple*, %struct.BezTriple** %bezt149, align 8, !dbg !8461
  %f2150 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %93, i32 0, i32 8, !dbg !8461
  %94 = load i8, i8* %f2150, align 4, !dbg !8461
  %conv151 = zext i8 %94 to i32, !dbg !8461
  %and152 = and i32 %conv151, 1, !dbg !8461
  %tobool153 = icmp ne i32 %and152, 0, !dbg !8461
  br i1 %tobool153, label %if.then172, label %if.end228, !dbg !8461

cond.false154:                                    ; preds = %if.else143
  %95 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8461
  %bezt155 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %95, i32 0, i32 18, !dbg !8461
  %96 = load %struct.BezTriple*, %struct.BezTriple** %bezt155, align 8, !dbg !8461
  %f2156 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %96, i32 0, i32 8, !dbg !8461
  %97 = load i8, i8* %f2156, align 4, !dbg !8461
  %conv157 = zext i8 %97 to i32, !dbg !8461
  %and158 = and i32 %conv157, 1, !dbg !8461
  %tobool159 = icmp ne i32 %and158, 0, !dbg !8461
  br i1 %tobool159, label %if.then172, label %lor.lhs.false160, !dbg !8461

lor.lhs.false160:                                 ; preds = %cond.false154
  %98 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8461
  %bezt161 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %98, i32 0, i32 18, !dbg !8461
  %99 = load %struct.BezTriple*, %struct.BezTriple** %bezt161, align 8, !dbg !8461
  %f1162 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %99, i32 0, i32 7, !dbg !8461
  %100 = load i8, i8* %f1162, align 1, !dbg !8461
  %conv163 = zext i8 %100 to i32, !dbg !8461
  %and164 = and i32 %conv163, 1, !dbg !8461
  %tobool165 = icmp ne i32 %and164, 0, !dbg !8461
  br i1 %tobool165, label %if.then172, label %lor.lhs.false166, !dbg !8461

lor.lhs.false166:                                 ; preds = %lor.lhs.false160
  %101 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8461
  %bezt167 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %101, i32 0, i32 18, !dbg !8461
  %102 = load %struct.BezTriple*, %struct.BezTriple** %bezt167, align 8, !dbg !8461
  %f3168 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %102, i32 0, i32 9, !dbg !8461
  %103 = load i8, i8* %f3168, align 1, !dbg !8461
  %conv169 = zext i8 %103 to i32, !dbg !8461
  %and170 = and i32 %conv169, 1, !dbg !8461
  %tobool171 = icmp ne i32 %and170, 0, !dbg !8461
  br i1 %tobool171, label %if.then172, label %if.end228, !dbg !8463

if.then172:                                       ; preds = %lor.lhs.false166, %lor.lhs.false160, %cond.false154, %cond.true148
  %104 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8464
  %cmp173 = icmp eq %struct.Nurb* %104, null, !dbg !8467
  br i1 %cmp173, label %if.then175, label %if.else176, !dbg !8468

if.then175:                                       ; preds = %if.then172
  %105 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8469
  store %struct.Nurb* %105, %struct.Nurb** %nu1, align 8, !dbg !8471
  br label %if.end227, !dbg !8472

if.else176:                                       ; preds = %if.then172
  %106 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8473
  %cmp177 = icmp eq %struct.Nurb* %106, null, !dbg !8475
  br i1 %cmp177, label %if.then179, label %if.end226, !dbg !8476

if.then179:                                       ; preds = %if.else176
  %107 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8477
  store %struct.Nurb* %107, %struct.Nurb** %nu2, align 8, !dbg !8479
  %108 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8480
  %drawflag180 = getelementptr inbounds %struct.Curve, %struct.Curve* %108, i32 0, i32 16, !dbg !8480
  %109 = load i16, i16* %drawflag180, align 8, !dbg !8480
  %conv181 = sext i16 %109 to i32, !dbg !8480
  %and182 = and i32 %conv181, 1, !dbg !8480
  %tobool183 = icmp ne i32 %and182, 0, !dbg !8480
  br i1 %tobool183, label %cond.true184, label %cond.false194, !dbg !8482

cond.true184:                                     ; preds = %if.then179
  %110 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8480
  %bezt185 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %110, i32 0, i32 18, !dbg !8480
  %111 = load %struct.BezTriple*, %struct.BezTriple** %bezt185, align 8, !dbg !8480
  %112 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8480
  %pntsu186 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %112, i32 0, i32 6, !dbg !8480
  %113 = load i32, i32* %pntsu186, align 8, !dbg !8480
  %sub187 = sub nsw i32 %113, 1, !dbg !8480
  %idxprom188 = sext i32 %sub187 to i64, !dbg !8480
  %arrayidx189 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %111, i64 %idxprom188, !dbg !8480
  %f2190 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %arrayidx189, i32 0, i32 8, !dbg !8480
  %114 = load i8, i8* %f2190, align 4, !dbg !8480
  %conv191 = zext i8 %114 to i32, !dbg !8480
  %and192 = and i32 %conv191, 1, !dbg !8480
  %tobool193 = icmp ne i32 %and192, 0, !dbg !8480
  br i1 %tobool193, label %if.end225, label %if.then224, !dbg !8480

cond.false194:                                    ; preds = %if.then179
  %115 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8480
  %bezt195 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %115, i32 0, i32 18, !dbg !8480
  %116 = load %struct.BezTriple*, %struct.BezTriple** %bezt195, align 8, !dbg !8480
  %117 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8480
  %pntsu196 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %117, i32 0, i32 6, !dbg !8480
  %118 = load i32, i32* %pntsu196, align 8, !dbg !8480
  %sub197 = sub nsw i32 %118, 1, !dbg !8480
  %idxprom198 = sext i32 %sub197 to i64, !dbg !8480
  %arrayidx199 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %116, i64 %idxprom198, !dbg !8480
  %f2200 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %arrayidx199, i32 0, i32 8, !dbg !8480
  %119 = load i8, i8* %f2200, align 4, !dbg !8480
  %conv201 = zext i8 %119 to i32, !dbg !8480
  %and202 = and i32 %conv201, 1, !dbg !8480
  %tobool203 = icmp ne i32 %and202, 0, !dbg !8480
  br i1 %tobool203, label %if.end225, label %lor.lhs.false204, !dbg !8480

lor.lhs.false204:                                 ; preds = %cond.false194
  %120 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8480
  %bezt205 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %120, i32 0, i32 18, !dbg !8480
  %121 = load %struct.BezTriple*, %struct.BezTriple** %bezt205, align 8, !dbg !8480
  %122 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8480
  %pntsu206 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %122, i32 0, i32 6, !dbg !8480
  %123 = load i32, i32* %pntsu206, align 8, !dbg !8480
  %sub207 = sub nsw i32 %123, 1, !dbg !8480
  %idxprom208 = sext i32 %sub207 to i64, !dbg !8480
  %arrayidx209 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %121, i64 %idxprom208, !dbg !8480
  %f1210 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %arrayidx209, i32 0, i32 7, !dbg !8480
  %124 = load i8, i8* %f1210, align 1, !dbg !8480
  %conv211 = zext i8 %124 to i32, !dbg !8480
  %and212 = and i32 %conv211, 1, !dbg !8480
  %tobool213 = icmp ne i32 %and212, 0, !dbg !8480
  br i1 %tobool213, label %if.end225, label %lor.lhs.false214, !dbg !8480

lor.lhs.false214:                                 ; preds = %lor.lhs.false204
  %125 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8480
  %bezt215 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %125, i32 0, i32 18, !dbg !8480
  %126 = load %struct.BezTriple*, %struct.BezTriple** %bezt215, align 8, !dbg !8480
  %127 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8480
  %pntsu216 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %127, i32 0, i32 6, !dbg !8480
  %128 = load i32, i32* %pntsu216, align 8, !dbg !8480
  %sub217 = sub nsw i32 %128, 1, !dbg !8480
  %idxprom218 = sext i32 %sub217 to i64, !dbg !8480
  %arrayidx219 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %126, i64 %idxprom218, !dbg !8480
  %f3220 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %arrayidx219, i32 0, i32 9, !dbg !8480
  %129 = load i8, i8* %f3220, align 1, !dbg !8480
  %conv221 = zext i8 %129 to i32, !dbg !8480
  %and222 = and i32 %conv221, 1, !dbg !8480
  %tobool223 = icmp ne i32 %and222, 0, !dbg !8480
  br i1 %tobool223, label %if.end225, label %if.then224, !dbg !8482

if.then224:                                       ; preds = %lor.lhs.false214, %cond.true184
  %130 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8483
  call void @BKE_nurb_direction_switch(%struct.Nurb* %130), !dbg !8485
  %131 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8486
  %132 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8487
  call void @keyData_switchDirectionNurb(%struct.Curve* %131, %struct.Nurb* %132), !dbg !8488
  br label %if.end225, !dbg !8489

if.end225:                                        ; preds = %if.then224, %lor.lhs.false214, %lor.lhs.false204, %cond.false194, %cond.true184
  br label %if.end226, !dbg !8490

if.end226:                                        ; preds = %if.end225, %if.else176
  br label %if.end227

if.end227:                                        ; preds = %if.end226, %if.then175
  br label %if.end228, !dbg !8491

if.end228:                                        ; preds = %if.end227, %lor.lhs.false166, %cond.true148
  br label %if.end229

if.end229:                                        ; preds = %if.end228, %if.end142
  br label %if.end290, !dbg !8492

if.else230:                                       ; preds = %if.then59
  %133 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8493
  %pntsv231 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %133, i32 0, i32 7, !dbg !8495
  %134 = load i32, i32* %pntsv231, align 4, !dbg !8495
  %cmp232 = icmp eq i32 %134, 1, !dbg !8496
  br i1 %cmp232, label %if.then234, label %if.end289, !dbg !8497

if.then234:                                       ; preds = %if.else230
  %135 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8498
  %bp235 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %135, i32 0, i32 17, !dbg !8500
  %136 = load %struct.BPoint*, %struct.BPoint** %bp235, align 8, !dbg !8500
  store %struct.BPoint* %136, %struct.BPoint** %bp, align 8, !dbg !8501
  %137 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !8502
  %138 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8504
  %pntsu236 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %138, i32 0, i32 6, !dbg !8505
  %139 = load i32, i32* %pntsu236, align 8, !dbg !8505
  %sub237 = sub nsw i32 %139, 1, !dbg !8506
  %idxprom238 = sext i32 %sub237 to i64, !dbg !8502
  %arrayidx239 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %137, i64 %idxprom238, !dbg !8502
  %f1240 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %arrayidx239, i32 0, i32 3, !dbg !8507
  %140 = load i16, i16* %f1240, align 4, !dbg !8507
  %conv241 = sext i16 %140 to i32, !dbg !8502
  %and242 = and i32 %conv241, 1, !dbg !8508
  %tobool243 = icmp ne i32 %and242, 0, !dbg !8508
  br i1 %tobool243, label %if.then244, label %if.else261, !dbg !8509

if.then244:                                       ; preds = %if.then234
  %141 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8510
  %cmp245 = icmp eq %struct.Nurb* %141, null, !dbg !8513
  br i1 %cmp245, label %if.then247, label %if.else248, !dbg !8514

if.then247:                                       ; preds = %if.then244
  %142 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8515
  store %struct.Nurb* %142, %struct.Nurb** %nu2, align 8, !dbg !8517
  br label %if.end260, !dbg !8518

if.else248:                                       ; preds = %if.then244
  %143 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8519
  %cmp249 = icmp eq %struct.Nurb* %143, null, !dbg !8521
  br i1 %cmp249, label %if.then251, label %if.end259, !dbg !8522

if.then251:                                       ; preds = %if.else248
  %144 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8523
  store %struct.Nurb* %144, %struct.Nurb** %nu1, align 8, !dbg !8525
  %145 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !8526
  %f1252 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %145, i32 0, i32 3, !dbg !8528
  %146 = load i16, i16* %f1252, align 4, !dbg !8528
  %conv253 = sext i16 %146 to i32, !dbg !8526
  %and254 = and i32 %conv253, 1, !dbg !8529
  %cmp255 = icmp eq i32 %and254, 0, !dbg !8530
  br i1 %cmp255, label %if.then257, label %if.end258, !dbg !8531

if.then257:                                       ; preds = %if.then251
  %147 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8532
  call void @BKE_nurb_direction_switch(%struct.Nurb* %147), !dbg !8534
  %148 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8535
  %149 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8536
  call void @keyData_switchDirectionNurb(%struct.Curve* %148, %struct.Nurb* %149), !dbg !8537
  br label %if.end258, !dbg !8538

if.end258:                                        ; preds = %if.then257, %if.then251
  br label %if.end259, !dbg !8539

if.end259:                                        ; preds = %if.end258, %if.else248
  br label %if.end260

if.end260:                                        ; preds = %if.end259, %if.then247
  br label %if.end288, !dbg !8540

if.else261:                                       ; preds = %if.then234
  %150 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !8541
  %f1262 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %150, i32 0, i32 3, !dbg !8543
  %151 = load i16, i16* %f1262, align 4, !dbg !8543
  %conv263 = sext i16 %151 to i32, !dbg !8541
  %and264 = and i32 %conv263, 1, !dbg !8544
  %tobool265 = icmp ne i32 %and264, 0, !dbg !8544
  br i1 %tobool265, label %if.then266, label %if.end287, !dbg !8545

if.then266:                                       ; preds = %if.else261
  %152 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8546
  %cmp267 = icmp eq %struct.Nurb* %152, null, !dbg !8549
  br i1 %cmp267, label %if.then269, label %if.else270, !dbg !8550

if.then269:                                       ; preds = %if.then266
  %153 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8551
  store %struct.Nurb* %153, %struct.Nurb** %nu1, align 8, !dbg !8553
  br label %if.end286, !dbg !8554

if.else270:                                       ; preds = %if.then266
  %154 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8555
  %cmp271 = icmp eq %struct.Nurb* %154, null, !dbg !8557
  br i1 %cmp271, label %if.then273, label %if.end285, !dbg !8558

if.then273:                                       ; preds = %if.else270
  %155 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8559
  store %struct.Nurb* %155, %struct.Nurb** %nu2, align 8, !dbg !8561
  %156 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !8562
  %157 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8564
  %pntsu274 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %157, i32 0, i32 6, !dbg !8565
  %158 = load i32, i32* %pntsu274, align 8, !dbg !8565
  %sub275 = sub nsw i32 %158, 1, !dbg !8566
  %idxprom276 = sext i32 %sub275 to i64, !dbg !8562
  %arrayidx277 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %156, i64 %idxprom276, !dbg !8562
  %f1278 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %arrayidx277, i32 0, i32 3, !dbg !8567
  %159 = load i16, i16* %f1278, align 4, !dbg !8567
  %conv279 = sext i16 %159 to i32, !dbg !8562
  %and280 = and i32 %conv279, 1, !dbg !8568
  %cmp281 = icmp eq i32 %and280, 0, !dbg !8569
  br i1 %cmp281, label %if.then283, label %if.end284, !dbg !8570

if.then283:                                       ; preds = %if.then273
  %160 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8571
  call void @BKE_nurb_direction_switch(%struct.Nurb* %160), !dbg !8573
  %161 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8574
  %162 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8575
  call void @keyData_switchDirectionNurb(%struct.Curve* %161, %struct.Nurb* %162), !dbg !8576
  br label %if.end284, !dbg !8577

if.end284:                                        ; preds = %if.then283, %if.then273
  br label %if.end285, !dbg !8578

if.end285:                                        ; preds = %if.end284, %if.else270
  br label %if.end286

if.end286:                                        ; preds = %if.end285, %if.then269
  br label %if.end287, !dbg !8579

if.end287:                                        ; preds = %if.end286, %if.else261
  br label %if.end288

if.end288:                                        ; preds = %if.end287, %if.end260
  br label %if.end289, !dbg !8580

if.end289:                                        ; preds = %if.end288, %if.else230
  br label %if.end290

if.end290:                                        ; preds = %if.end289, %if.end229
  br label %if.end291, !dbg !8581

if.end291:                                        ; preds = %if.end290, %if.end53
  %163 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8582
  %tobool292 = icmp ne %struct.Nurb* %163, null, !dbg !8582
  br i1 %tobool292, label %land.lhs.true293, label %if.end296, !dbg !8584

land.lhs.true293:                                 ; preds = %if.end291
  %164 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8585
  %tobool294 = icmp ne %struct.Nurb* %164, null, !dbg !8585
  br i1 %tobool294, label %if.then295, label %if.end296, !dbg !8586

if.then295:                                       ; preds = %land.lhs.true293
  br label %for.end, !dbg !8587

if.end296:                                        ; preds = %land.lhs.true293, %if.end291
  br label %for.inc, !dbg !8589

for.inc:                                          ; preds = %if.end296
  %165 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8590
  %next297 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %165, i32 0, i32 0, !dbg !8591
  %166 = load %struct.Nurb*, %struct.Nurb** %next297, align 8, !dbg !8591
  store %struct.Nurb* %166, %struct.Nurb** %nu, align 8, !dbg !8592
  br label %for.cond, !dbg !8593, !llvm.loop !8594

for.end:                                          ; preds = %if.then295, %for.cond
  %167 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8596
  %tobool298 = icmp ne %struct.Nurb* %167, null, !dbg !8596
  br i1 %tobool298, label %land.lhs.true299, label %if.else370, !dbg !8598

land.lhs.true299:                                 ; preds = %for.end
  %168 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8599
  %tobool300 = icmp ne %struct.Nurb* %168, null, !dbg !8599
  br i1 %tobool300, label %land.lhs.true301, label %if.else370, !dbg !8600

land.lhs.true301:                                 ; preds = %land.lhs.true299
  %169 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8601
  %170 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8602
  %cmp302 = icmp ne %struct.Nurb* %169, %170, !dbg !8603
  br i1 %cmp302, label %if.then304, label %if.else370, !dbg !8604

if.then304:                                       ; preds = %land.lhs.true301
  %171 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8605
  %type305 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %171, i32 0, i32 2, !dbg !8608
  %172 = load i16, i16* %type305, align 8, !dbg !8608
  %conv306 = sext i16 %172 to i32, !dbg !8605
  %173 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8609
  %type307 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %173, i32 0, i32 2, !dbg !8610
  %174 = load i16, i16* %type307, align 8, !dbg !8610
  %conv308 = sext i16 %174 to i32, !dbg !8609
  %cmp309 = icmp eq i32 %conv306, %conv308, !dbg !8611
  br i1 %cmp309, label %if.then311, label %if.end369, !dbg !8612

if.then311:                                       ; preds = %if.then304
  %175 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8613
  %type312 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %175, i32 0, i32 2, !dbg !8616
  %176 = load i16, i16* %type312, align 8, !dbg !8616
  %conv313 = sext i16 %176 to i32, !dbg !8613
  %cmp314 = icmp eq i32 %conv313, 1, !dbg !8617
  br i1 %cmp314, label %if.then316, label %if.else334, !dbg !8618

if.then316:                                       ; preds = %if.then311
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt317, metadata !8619, metadata !DIExpression()), !dbg !8621
  %177 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8622
  %178 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8623
  %pntsu318 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %178, i32 0, i32 6, !dbg !8624
  %179 = load i32, i32* %pntsu318, align 8, !dbg !8624
  %180 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8625
  %pntsu319 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %180, i32 0, i32 6, !dbg !8626
  %181 = load i32, i32* %pntsu319, align 8, !dbg !8626
  %add = add nsw i32 %179, %181, !dbg !8627
  %conv320 = sext i32 %add to i64, !dbg !8628
  %mul = mul i64 %conv320, 72, !dbg !8629
  %call321 = call i8* %177(i64 %mul, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i64 0, i64 0)), !dbg !8622
  %182 = bitcast i8* %call321 to %struct.BezTriple*, !dbg !8630
  store %struct.BezTriple* %182, %struct.BezTriple** %bezt317, align 8, !dbg !8621
  %183 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8631
  %editnurb = getelementptr inbounds %struct.Curve, %struct.Curve* %183, i32 0, i32 4, !dbg !8632
  %184 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !8632
  %185 = load %struct.BezTriple*, %struct.BezTriple** %bezt317, align 8, !dbg !8633
  %186 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8634
  %bezt322 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %186, i32 0, i32 18, !dbg !8635
  %187 = load %struct.BezTriple*, %struct.BezTriple** %bezt322, align 8, !dbg !8635
  %188 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8636
  %pntsu323 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %188, i32 0, i32 6, !dbg !8637
  %189 = load i32, i32* %pntsu323, align 8, !dbg !8637
  call void @ED_curve_beztcpy(%struct.EditNurb* %184, %struct.BezTriple* %185, %struct.BezTriple* %187, i32 %189), !dbg !8638
  %190 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8639
  %editnurb324 = getelementptr inbounds %struct.Curve, %struct.Curve* %190, i32 0, i32 4, !dbg !8640
  %191 = load %struct.EditNurb*, %struct.EditNurb** %editnurb324, align 8, !dbg !8640
  %192 = load %struct.BezTriple*, %struct.BezTriple** %bezt317, align 8, !dbg !8641
  %193 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8642
  %pntsu325 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %193, i32 0, i32 6, !dbg !8643
  %194 = load i32, i32* %pntsu325, align 8, !dbg !8643
  %idx.ext = sext i32 %194 to i64, !dbg !8644
  %add.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %192, i64 %idx.ext, !dbg !8644
  %195 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8645
  %bezt326 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %195, i32 0, i32 18, !dbg !8646
  %196 = load %struct.BezTriple*, %struct.BezTriple** %bezt326, align 8, !dbg !8646
  %197 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8647
  %pntsu327 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %197, i32 0, i32 6, !dbg !8648
  %198 = load i32, i32* %pntsu327, align 8, !dbg !8648
  call void @ED_curve_beztcpy(%struct.EditNurb* %191, %struct.BezTriple* %add.ptr, %struct.BezTriple* %196, i32 %198), !dbg !8649
  %199 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8650
  %200 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8651
  %bezt328 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %200, i32 0, i32 18, !dbg !8652
  %201 = load %struct.BezTriple*, %struct.BezTriple** %bezt328, align 8, !dbg !8652
  %202 = bitcast %struct.BezTriple* %201 to i8*, !dbg !8651
  call void %199(i8* %202), !dbg !8650
  %203 = load %struct.BezTriple*, %struct.BezTriple** %bezt317, align 8, !dbg !8653
  %204 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8654
  %bezt329 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %204, i32 0, i32 18, !dbg !8655
  store %struct.BezTriple* %203, %struct.BezTriple** %bezt329, align 8, !dbg !8656
  %205 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8657
  %pntsu330 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %205, i32 0, i32 6, !dbg !8658
  %206 = load i32, i32* %pntsu330, align 8, !dbg !8658
  %207 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8659
  %pntsu331 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %207, i32 0, i32 6, !dbg !8660
  %208 = load i32, i32* %pntsu331, align 8, !dbg !8661
  %add332 = add nsw i32 %208, %206, !dbg !8661
  store i32 %add332, i32* %pntsu331, align 8, !dbg !8661
  %209 = load %struct.ListBase*, %struct.ListBase** %nubase, align 8, !dbg !8662
  %210 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8663
  %211 = bitcast %struct.Nurb* %210 to i8*, !dbg !8663
  call void @BLI_remlink(%struct.ListBase* %209, i8* %211), !dbg !8664
  %212 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8665
  %editnurb333 = getelementptr inbounds %struct.Curve, %struct.Curve* %212, i32 0, i32 4, !dbg !8666
  %213 = load %struct.EditNurb*, %struct.EditNurb** %editnurb333, align 8, !dbg !8666
  %214 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8667
  call void @keyIndex_delNurb(%struct.EditNurb* %213, %struct.Nurb* %214), !dbg !8668
  %215 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8669
  call void @BKE_nurb_free(%struct.Nurb* %215), !dbg !8670
  store %struct.Nurb* null, %struct.Nurb** %nu2, align 8, !dbg !8671
  %216 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8672
  call void @BKE_nurb_handles_calc(%struct.Nurb* %216), !dbg !8673
  br label %if.end368, !dbg !8674

if.else334:                                       ; preds = %if.then311
  %217 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8675
  %218 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8677
  %pntsu335 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %218, i32 0, i32 6, !dbg !8678
  %219 = load i32, i32* %pntsu335, align 8, !dbg !8678
  %220 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8679
  %pntsu336 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %220, i32 0, i32 6, !dbg !8680
  %221 = load i32, i32* %pntsu336, align 8, !dbg !8680
  %add337 = add nsw i32 %219, %221, !dbg !8681
  %conv338 = sext i32 %add337 to i64, !dbg !8682
  %mul339 = mul i64 %conv338, 36, !dbg !8683
  %call340 = call i8* %217(i64 %mul339, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.206, i64 0, i64 0)), !dbg !8675
  %222 = bitcast i8* %call340 to %struct.BPoint*, !dbg !8684
  store %struct.BPoint* %222, %struct.BPoint** %bp, align 8, !dbg !8685
  %223 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8686
  %editnurb341 = getelementptr inbounds %struct.Curve, %struct.Curve* %223, i32 0, i32 4, !dbg !8687
  %224 = load %struct.EditNurb*, %struct.EditNurb** %editnurb341, align 8, !dbg !8687
  %225 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !8688
  %226 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8689
  %bp342 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %226, i32 0, i32 17, !dbg !8690
  %227 = load %struct.BPoint*, %struct.BPoint** %bp342, align 8, !dbg !8690
  %228 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8691
  %pntsu343 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %228, i32 0, i32 6, !dbg !8692
  %229 = load i32, i32* %pntsu343, align 8, !dbg !8692
  call void @ED_curve_bpcpy(%struct.EditNurb* %224, %struct.BPoint* %225, %struct.BPoint* %227, i32 %229), !dbg !8693
  %230 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8694
  %editnurb344 = getelementptr inbounds %struct.Curve, %struct.Curve* %230, i32 0, i32 4, !dbg !8695
  %231 = load %struct.EditNurb*, %struct.EditNurb** %editnurb344, align 8, !dbg !8695
  %232 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !8696
  %233 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8697
  %pntsu345 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %233, i32 0, i32 6, !dbg !8698
  %234 = load i32, i32* %pntsu345, align 8, !dbg !8698
  %idx.ext346 = sext i32 %234 to i64, !dbg !8699
  %add.ptr347 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %232, i64 %idx.ext346, !dbg !8699
  %235 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8700
  %bp348 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %235, i32 0, i32 17, !dbg !8701
  %236 = load %struct.BPoint*, %struct.BPoint** %bp348, align 8, !dbg !8701
  %237 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8702
  %pntsu349 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %237, i32 0, i32 6, !dbg !8703
  %238 = load i32, i32* %pntsu349, align 8, !dbg !8703
  call void @ED_curve_bpcpy(%struct.EditNurb* %231, %struct.BPoint* %add.ptr347, %struct.BPoint* %236, i32 %238), !dbg !8704
  %239 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8705
  %240 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8706
  %bp350 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %240, i32 0, i32 17, !dbg !8707
  %241 = load %struct.BPoint*, %struct.BPoint** %bp350, align 8, !dbg !8707
  %242 = bitcast %struct.BPoint* %241 to i8*, !dbg !8706
  call void %239(i8* %242), !dbg !8705
  %243 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !8708
  %244 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8709
  %bp351 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %244, i32 0, i32 17, !dbg !8710
  store %struct.BPoint* %243, %struct.BPoint** %bp351, align 8, !dbg !8711
  %245 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8712
  %pntsu352 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %245, i32 0, i32 6, !dbg !8713
  %246 = load i32, i32* %pntsu352, align 8, !dbg !8713
  %247 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8714
  %pntsu353 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %247, i32 0, i32 6, !dbg !8715
  %248 = load i32, i32* %pntsu353, align 8, !dbg !8716
  %add354 = add nsw i32 %248, %246, !dbg !8716
  store i32 %add354, i32* %pntsu353, align 8, !dbg !8716
  %249 = load %struct.ListBase*, %struct.ListBase** %nubase, align 8, !dbg !8717
  %250 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8718
  %251 = bitcast %struct.Nurb* %250 to i8*, !dbg !8718
  call void @BLI_remlink(%struct.ListBase* %249, i8* %251), !dbg !8719
  %252 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8720
  %type355 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %252, i32 0, i32 2, !dbg !8722
  %253 = load i16, i16* %type355, align 8, !dbg !8722
  %conv356 = sext i16 %253 to i32, !dbg !8720
  %cmp357 = icmp eq i32 %conv356, 4, !dbg !8723
  br i1 %cmp357, label %if.then359, label %if.end366, !dbg !8724

if.then359:                                       ; preds = %if.else334
  %254 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8725
  %knotsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %254, i32 0, i32 15, !dbg !8728
  %255 = load float*, float** %knotsu, align 8, !dbg !8728
  %cmp360 = icmp ne float* %255, null, !dbg !8729
  br i1 %cmp360, label %if.then362, label %if.end365, !dbg !8730

if.then362:                                       ; preds = %if.then359
  %256 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8731
  %257 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8733
  %knotsu363 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %257, i32 0, i32 15, !dbg !8734
  %258 = load float*, float** %knotsu363, align 8, !dbg !8734
  %259 = bitcast float* %258 to i8*, !dbg !8733
  call void %256(i8* %259), !dbg !8731
  %260 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8735
  %knotsu364 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %260, i32 0, i32 15, !dbg !8736
  store float* null, float** %knotsu364, align 8, !dbg !8737
  br label %if.end365, !dbg !8738

if.end365:                                        ; preds = %if.then362, %if.then359
  %261 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8739
  call void @BKE_nurb_knot_calc_u(%struct.Nurb* %261), !dbg !8740
  br label %if.end366, !dbg !8741

if.end366:                                        ; preds = %if.end365, %if.else334
  %262 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8742
  %editnurb367 = getelementptr inbounds %struct.Curve, %struct.Curve* %262, i32 0, i32 4, !dbg !8743
  %263 = load %struct.EditNurb*, %struct.EditNurb** %editnurb367, align 8, !dbg !8743
  %264 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8744
  call void @keyIndex_delNurb(%struct.EditNurb* %263, %struct.Nurb* %264), !dbg !8745
  %265 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8746
  call void @BKE_nurb_free(%struct.Nurb* %265), !dbg !8747
  store %struct.Nurb* null, %struct.Nurb** %nu2, align 8, !dbg !8748
  br label %if.end368

if.end368:                                        ; preds = %if.end366, %if.then316
  %266 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8749
  %267 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8750
  call void @BKE_curve_nurb_active_set(%struct.Curve* %266, %struct.Nurb* %267), !dbg !8751
  store i8 1, i8* %ok, align 1, !dbg !8752
  br label %if.end369, !dbg !8753

if.end369:                                        ; preds = %if.end368, %if.then304
  br label %if.end503, !dbg !8754

if.else370:                                       ; preds = %land.lhs.true301, %land.lhs.true299, %for.end
  %268 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8755
  %tobool371 = icmp ne %struct.Nurb* %268, null, !dbg !8755
  br i1 %tobool371, label %land.lhs.true372, label %lor.lhs.false374, !dbg !8757

land.lhs.true372:                                 ; preds = %if.else370
  %269 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8758
  %tobool373 = icmp ne %struct.Nurb* %269, null, !dbg !8758
  br i1 %tobool373, label %lor.lhs.false374, label %if.then378, !dbg !8759

lor.lhs.false374:                                 ; preds = %land.lhs.true372, %if.else370
  %270 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8760
  %tobool375 = icmp ne %struct.Nurb* %270, null, !dbg !8760
  br i1 %tobool375, label %if.end502, label %land.lhs.true376, !dbg !8761

land.lhs.true376:                                 ; preds = %lor.lhs.false374
  %271 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8762
  %tobool377 = icmp ne %struct.Nurb* %271, null, !dbg !8762
  br i1 %tobool377, label %if.then378, label %if.end502, !dbg !8763

if.then378:                                       ; preds = %land.lhs.true376, %land.lhs.true372
  %272 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8764
  %tobool379 = icmp ne %struct.Nurb* %272, null, !dbg !8764
  br i1 %tobool379, label %if.then380, label %if.end381, !dbg !8767

if.then380:                                       ; preds = %if.then378
  call void @llvm.dbg.declare(metadata %struct.Nurb** %sw_ap, metadata !8768, metadata !DIExpression()), !dbg !8771
  %273 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8771
  store %struct.Nurb* %273, %struct.Nurb** %sw_ap, align 8, !dbg !8771
  %274 = load %struct.Nurb*, %struct.Nurb** %nu2, align 8, !dbg !8771
  store %struct.Nurb* %274, %struct.Nurb** %nu1, align 8, !dbg !8771
  %275 = load %struct.Nurb*, %struct.Nurb** %sw_ap, align 8, !dbg !8771
  store %struct.Nurb* %275, %struct.Nurb** %nu2, align 8, !dbg !8771
  br label %if.end381, !dbg !8772

if.end381:                                        ; preds = %if.then380, %if.then378
  %276 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8773
  %flagu382 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %276, i32 0, i32 13, !dbg !8775
  %277 = load i16, i16* %flagu382, align 4, !dbg !8775
  %conv383 = sext i16 %277 to i32, !dbg !8773
  %and384 = and i32 %conv383, 1, !dbg !8776
  %tobool385 = icmp ne i32 %and384, 0, !dbg !8776
  br i1 %tobool385, label %if.end501, label %land.lhs.true386, !dbg !8777

land.lhs.true386:                                 ; preds = %if.end381
  %278 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8778
  %pntsu387 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %278, i32 0, i32 6, !dbg !8779
  %279 = load i32, i32* %pntsu387, align 8, !dbg !8779
  %cmp388 = icmp sgt i32 %279, 1, !dbg !8780
  br i1 %cmp388, label %if.then390, label %if.end501, !dbg !8781

if.then390:                                       ; preds = %land.lhs.true386
  %280 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8782
  %type391 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %280, i32 0, i32 2, !dbg !8785
  %281 = load i16, i16* %type391, align 8, !dbg !8785
  %conv392 = sext i16 %281 to i32, !dbg !8782
  %cmp393 = icmp eq i32 %conv392, 1, !dbg !8786
  br i1 %cmp393, label %land.lhs.true395, label %if.else473, !dbg !8787

land.lhs.true395:                                 ; preds = %if.then390
  %282 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8788
  %drawflag396 = getelementptr inbounds %struct.Curve, %struct.Curve* %282, i32 0, i32 16, !dbg !8788
  %283 = load i16, i16* %drawflag396, align 8, !dbg !8788
  %conv397 = sext i16 %283 to i32, !dbg !8788
  %and398 = and i32 %conv397, 1, !dbg !8788
  %tobool399 = icmp ne i32 %and398, 0, !dbg !8788
  br i1 %tobool399, label %cond.true400, label %cond.false406, !dbg !8789

cond.true400:                                     ; preds = %land.lhs.true395
  %284 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8788
  %bezt401 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %284, i32 0, i32 18, !dbg !8788
  %285 = load %struct.BezTriple*, %struct.BezTriple** %bezt401, align 8, !dbg !8788
  %f2402 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %285, i32 0, i32 8, !dbg !8788
  %286 = load i8, i8* %f2402, align 4, !dbg !8788
  %conv403 = zext i8 %286 to i32, !dbg !8788
  %and404 = and i32 %conv403, 1, !dbg !8788
  %tobool405 = icmp ne i32 %and404, 0, !dbg !8788
  br i1 %tobool405, label %land.lhs.true424, label %if.else473, !dbg !8788

cond.false406:                                    ; preds = %land.lhs.true395
  %287 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8788
  %bezt407 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %287, i32 0, i32 18, !dbg !8788
  %288 = load %struct.BezTriple*, %struct.BezTriple** %bezt407, align 8, !dbg !8788
  %f2408 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %288, i32 0, i32 8, !dbg !8788
  %289 = load i8, i8* %f2408, align 4, !dbg !8788
  %conv409 = zext i8 %289 to i32, !dbg !8788
  %and410 = and i32 %conv409, 1, !dbg !8788
  %tobool411 = icmp ne i32 %and410, 0, !dbg !8788
  br i1 %tobool411, label %land.lhs.true424, label %lor.lhs.false412, !dbg !8788

lor.lhs.false412:                                 ; preds = %cond.false406
  %290 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8788
  %bezt413 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %290, i32 0, i32 18, !dbg !8788
  %291 = load %struct.BezTriple*, %struct.BezTriple** %bezt413, align 8, !dbg !8788
  %f1414 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %291, i32 0, i32 7, !dbg !8788
  %292 = load i8, i8* %f1414, align 1, !dbg !8788
  %conv415 = zext i8 %292 to i32, !dbg !8788
  %and416 = and i32 %conv415, 1, !dbg !8788
  %tobool417 = icmp ne i32 %and416, 0, !dbg !8788
  br i1 %tobool417, label %land.lhs.true424, label %lor.lhs.false418, !dbg !8788

lor.lhs.false418:                                 ; preds = %lor.lhs.false412
  %293 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8788
  %bezt419 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %293, i32 0, i32 18, !dbg !8788
  %294 = load %struct.BezTriple*, %struct.BezTriple** %bezt419, align 8, !dbg !8788
  %f3420 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %294, i32 0, i32 9, !dbg !8788
  %295 = load i8, i8* %f3420, align 1, !dbg !8788
  %conv421 = zext i8 %295 to i32, !dbg !8788
  %and422 = and i32 %conv421, 1, !dbg !8788
  %tobool423 = icmp ne i32 %and422, 0, !dbg !8788
  br i1 %tobool423, label %land.lhs.true424, label %if.else473, !dbg !8789

land.lhs.true424:                                 ; preds = %lor.lhs.false418, %lor.lhs.false412, %cond.false406, %cond.true400
  %296 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8790
  %drawflag425 = getelementptr inbounds %struct.Curve, %struct.Curve* %296, i32 0, i32 16, !dbg !8790
  %297 = load i16, i16* %drawflag425, align 8, !dbg !8790
  %conv426 = sext i16 %297 to i32, !dbg !8790
  %and427 = and i32 %conv426, 1, !dbg !8790
  %tobool428 = icmp ne i32 %and427, 0, !dbg !8790
  br i1 %tobool428, label %cond.true429, label %cond.false439, !dbg !8791

cond.true429:                                     ; preds = %land.lhs.true424
  %298 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8790
  %bezt430 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %298, i32 0, i32 18, !dbg !8790
  %299 = load %struct.BezTriple*, %struct.BezTriple** %bezt430, align 8, !dbg !8790
  %300 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8790
  %pntsu431 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %300, i32 0, i32 6, !dbg !8790
  %301 = load i32, i32* %pntsu431, align 8, !dbg !8790
  %sub432 = sub nsw i32 %301, 1, !dbg !8790
  %idxprom433 = sext i32 %sub432 to i64, !dbg !8790
  %arrayidx434 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %299, i64 %idxprom433, !dbg !8790
  %f2435 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %arrayidx434, i32 0, i32 8, !dbg !8790
  %302 = load i8, i8* %f2435, align 4, !dbg !8790
  %conv436 = zext i8 %302 to i32, !dbg !8790
  %and437 = and i32 %conv436, 1, !dbg !8790
  %tobool438 = icmp ne i32 %and437, 0, !dbg !8790
  br i1 %tobool438, label %if.then469, label %if.else473, !dbg !8790

cond.false439:                                    ; preds = %land.lhs.true424
  %303 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8790
  %bezt440 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %303, i32 0, i32 18, !dbg !8790
  %304 = load %struct.BezTriple*, %struct.BezTriple** %bezt440, align 8, !dbg !8790
  %305 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8790
  %pntsu441 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %305, i32 0, i32 6, !dbg !8790
  %306 = load i32, i32* %pntsu441, align 8, !dbg !8790
  %sub442 = sub nsw i32 %306, 1, !dbg !8790
  %idxprom443 = sext i32 %sub442 to i64, !dbg !8790
  %arrayidx444 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %304, i64 %idxprom443, !dbg !8790
  %f2445 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %arrayidx444, i32 0, i32 8, !dbg !8790
  %307 = load i8, i8* %f2445, align 4, !dbg !8790
  %conv446 = zext i8 %307 to i32, !dbg !8790
  %and447 = and i32 %conv446, 1, !dbg !8790
  %tobool448 = icmp ne i32 %and447, 0, !dbg !8790
  br i1 %tobool448, label %if.then469, label %lor.lhs.false449, !dbg !8790

lor.lhs.false449:                                 ; preds = %cond.false439
  %308 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8790
  %bezt450 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %308, i32 0, i32 18, !dbg !8790
  %309 = load %struct.BezTriple*, %struct.BezTriple** %bezt450, align 8, !dbg !8790
  %310 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8790
  %pntsu451 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %310, i32 0, i32 6, !dbg !8790
  %311 = load i32, i32* %pntsu451, align 8, !dbg !8790
  %sub452 = sub nsw i32 %311, 1, !dbg !8790
  %idxprom453 = sext i32 %sub452 to i64, !dbg !8790
  %arrayidx454 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %309, i64 %idxprom453, !dbg !8790
  %f1455 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %arrayidx454, i32 0, i32 7, !dbg !8790
  %312 = load i8, i8* %f1455, align 1, !dbg !8790
  %conv456 = zext i8 %312 to i32, !dbg !8790
  %and457 = and i32 %conv456, 1, !dbg !8790
  %tobool458 = icmp ne i32 %and457, 0, !dbg !8790
  br i1 %tobool458, label %if.then469, label %lor.lhs.false459, !dbg !8790

lor.lhs.false459:                                 ; preds = %lor.lhs.false449
  %313 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8790
  %bezt460 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %313, i32 0, i32 18, !dbg !8790
  %314 = load %struct.BezTriple*, %struct.BezTriple** %bezt460, align 8, !dbg !8790
  %315 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8790
  %pntsu461 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %315, i32 0, i32 6, !dbg !8790
  %316 = load i32, i32* %pntsu461, align 8, !dbg !8790
  %sub462 = sub nsw i32 %316, 1, !dbg !8790
  %idxprom463 = sext i32 %sub462 to i64, !dbg !8790
  %arrayidx464 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %314, i64 %idxprom463, !dbg !8790
  %f3465 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %arrayidx464, i32 0, i32 9, !dbg !8790
  %317 = load i8, i8* %f3465, align 1, !dbg !8790
  %conv466 = zext i8 %317 to i32, !dbg !8790
  %and467 = and i32 %conv466, 1, !dbg !8790
  %tobool468 = icmp ne i32 %and467, 0, !dbg !8790
  br i1 %tobool468, label %if.then469, label %if.else473, !dbg !8791

if.then469:                                       ; preds = %lor.lhs.false459, %lor.lhs.false449, %cond.false439, %cond.true429
  %318 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8792
  %flagu470 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %318, i32 0, i32 13, !dbg !8794
  %319 = load i16, i16* %flagu470, align 4, !dbg !8795
  %conv471 = sext i16 %319 to i32, !dbg !8795
  %or = or i32 %conv471, 1, !dbg !8795
  %conv472 = trunc i32 %or to i16, !dbg !8795
  store i16 %conv472, i16* %flagu470, align 4, !dbg !8795
  %320 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8796
  call void @BKE_nurb_handles_calc(%struct.Nurb* %320), !dbg !8797
  store i8 1, i8* %ok, align 1, !dbg !8798
  br label %if.end500, !dbg !8799

if.else473:                                       ; preds = %lor.lhs.false459, %cond.true429, %lor.lhs.false418, %cond.true400, %if.then390
  %321 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8800
  %type474 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %321, i32 0, i32 2, !dbg !8802
  %322 = load i16, i16* %type474, align 8, !dbg !8802
  %conv475 = sext i16 %322 to i32, !dbg !8800
  %cmp476 = icmp eq i32 %conv475, 4, !dbg !8803
  br i1 %cmp476, label %land.lhs.true478, label %if.end499, !dbg !8804

land.lhs.true478:                                 ; preds = %if.else473
  %323 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8805
  %bp479 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %323, i32 0, i32 17, !dbg !8806
  %324 = load %struct.BPoint*, %struct.BPoint** %bp479, align 8, !dbg !8806
  %f1480 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %324, i32 0, i32 3, !dbg !8807
  %325 = load i16, i16* %f1480, align 4, !dbg !8807
  %conv481 = sext i16 %325 to i32, !dbg !8805
  %and482 = and i32 %conv481, 1, !dbg !8808
  %tobool483 = icmp ne i32 %and482, 0, !dbg !8808
  br i1 %tobool483, label %land.lhs.true484, label %if.end499, !dbg !8809

land.lhs.true484:                                 ; preds = %land.lhs.true478
  %326 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8810
  %bp485 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %326, i32 0, i32 17, !dbg !8811
  %327 = load %struct.BPoint*, %struct.BPoint** %bp485, align 8, !dbg !8811
  %328 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8812
  %pntsu486 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %328, i32 0, i32 6, !dbg !8813
  %329 = load i32, i32* %pntsu486, align 8, !dbg !8813
  %sub487 = sub nsw i32 %329, 1, !dbg !8814
  %idxprom488 = sext i32 %sub487 to i64, !dbg !8810
  %arrayidx489 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %327, i64 %idxprom488, !dbg !8810
  %f1490 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %arrayidx489, i32 0, i32 3, !dbg !8815
  %330 = load i16, i16* %f1490, align 4, !dbg !8815
  %conv491 = sext i16 %330 to i32, !dbg !8810
  %and492 = and i32 %conv491, 1, !dbg !8816
  %tobool493 = icmp ne i32 %and492, 0, !dbg !8816
  br i1 %tobool493, label %if.then494, label %if.end499, !dbg !8817

if.then494:                                       ; preds = %land.lhs.true484
  %331 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8818
  %flagu495 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %331, i32 0, i32 13, !dbg !8820
  %332 = load i16, i16* %flagu495, align 4, !dbg !8821
  %conv496 = sext i16 %332 to i32, !dbg !8821
  %or497 = or i32 %conv496, 1, !dbg !8821
  %conv498 = trunc i32 %or497 to i16, !dbg !8821
  store i16 %conv498, i16* %flagu495, align 4, !dbg !8821
  %333 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !8822
  call void @BKE_nurb_knot_calc_u(%struct.Nurb* %333), !dbg !8823
  store i8 1, i8* %ok, align 1, !dbg !8824
  br label %if.end499, !dbg !8825

if.end499:                                        ; preds = %if.then494, %land.lhs.true484, %land.lhs.true478, %if.else473
  br label %if.end500

if.end500:                                        ; preds = %if.end499, %if.then469
  br label %if.end501, !dbg !8826

if.end501:                                        ; preds = %if.end500, %land.lhs.true386, %if.end381
  br label %if.end502, !dbg !8827

if.end502:                                        ; preds = %if.end501, %land.lhs.true376, %lor.lhs.false374
  br label %if.end503

if.end503:                                        ; preds = %if.end502, %if.end369
  %334 = load i8, i8* %ok, align 1, !dbg !8828
  %tobool504 = icmp ne i8 %334, 0, !dbg !8828
  br i1 %tobool504, label %if.end506, label %if.then505, !dbg !8830

if.then505:                                       ; preds = %if.end503
  %335 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8831
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %335, i32 0, i32 8, !dbg !8833
  %336 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !8833
  call void @BKE_report(%struct.ReportList* %336, i32 32, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.207, i64 0, i64 0)), !dbg !8834
  store i32 2, i32* %retval, align 4, !dbg !8835
  br label %return, !dbg !8835

if.end506:                                        ; preds = %if.end503
  %337 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8836
  %data507 = getelementptr inbounds %struct.Object, %struct.Object* %337, i32 0, i32 19, !dbg !8838
  %338 = load i8*, i8** %data507, align 8, !dbg !8838
  %339 = bitcast i8* %338 to %struct.Curve*, !dbg !8836
  %call508 = call i32 @ED_curve_updateAnimPaths(%struct.Curve* %339), !dbg !8839
  %tobool509 = icmp ne i32 %call508, 0, !dbg !8839
  br i1 %tobool509, label %if.then510, label %if.end511, !dbg !8840

if.then510:                                       ; preds = %if.end506
  %340 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8841
  %341 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8842
  %342 = bitcast %struct.Object* %341 to i8*, !dbg !8842
  call void @WM_event_add_notifier(%struct.bContext* %340, i32 85524480, i8* %342), !dbg !8843
  br label %if.end511, !dbg !8843

if.end511:                                        ; preds = %if.then510, %if.end506
  %343 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8844
  %344 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8845
  %data512 = getelementptr inbounds %struct.Object, %struct.Object* %344, i32 0, i32 19, !dbg !8846
  %345 = load i8*, i8** %data512, align 8, !dbg !8846
  call void @WM_event_add_notifier(%struct.bContext* %343, i32 274399232, i8* %345), !dbg !8847
  %346 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8848
  %data513 = getelementptr inbounds %struct.Object, %struct.Object* %346, i32 0, i32 19, !dbg !8849
  %347 = load i8*, i8** %data513, align 8, !dbg !8849
  %348 = bitcast i8* %347 to %struct.ID*, !dbg !8848
  call void @DAG_id_tag_update(%struct.ID* %348, i16 signext 0), !dbg !8850
  store i32 4, i32* %retval, align 4, !dbg !8851
  br label %return, !dbg !8851

return:                                           ; preds = %if.end511, %if.then505, %if.then41
  %349 = load i32, i32* %retval, align 4, !dbg !8852
  ret i32 %349, !dbg !8852
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @mouse_nurb(%struct.bContext* %C, i32* %mval, i8 zeroext %extend, i8 zeroext %deselect, i8 zeroext %toggle) #0 !dbg !8853 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %mval.addr = alloca i32*, align 8
  %extend.addr = alloca i8, align 1
  %deselect.addr = alloca i8, align 1
  %toggle.addr = alloca i8, align 1
  %obedit = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %vc = alloca %struct.ViewContext, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %vert = alloca i8*, align 8
  %location = alloca [2 x i32], align 4
  %hand = alloca i16, align 2
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8857, metadata !DIExpression()), !dbg !8858
  store i32* %mval, i32** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mval.addr, metadata !8859, metadata !DIExpression()), !dbg !8860
  store i8 %extend, i8* %extend.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %extend.addr, metadata !8861, metadata !DIExpression()), !dbg !8862
  store i8 %deselect, i8* %deselect.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %deselect.addr, metadata !8863, metadata !DIExpression()), !dbg !8864
  store i8 %toggle, i8* %toggle.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %toggle.addr, metadata !8865, metadata !DIExpression()), !dbg !8866
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8867, metadata !DIExpression()), !dbg !8868
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8869
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !8870
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !8868
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !8871, metadata !DIExpression()), !dbg !8872
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8873
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !8874
  %2 = load i8*, i8** %data, align 8, !dbg !8874
  %3 = bitcast i8* %2 to %struct.Curve*, !dbg !8873
  store %struct.Curve* %3, %struct.Curve** %cu, align 8, !dbg !8872
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !8875, metadata !DIExpression()), !dbg !8876
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8877
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %4), !dbg !8878
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !8876
  call void @llvm.dbg.declare(metadata %struct.ViewContext* %vc, metadata !8879, metadata !DIExpression()), !dbg !9113
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !9114, metadata !DIExpression()), !dbg !9115
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !9116, metadata !DIExpression()), !dbg !9117
  store %struct.BezTriple* null, %struct.BezTriple** %bezt, align 8, !dbg !9117
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !9118, metadata !DIExpression()), !dbg !9119
  store %struct.BPoint* null, %struct.BPoint** %bp, align 8, !dbg !9119
  call void @llvm.dbg.declare(metadata i8** %vert, metadata !9120, metadata !DIExpression()), !dbg !9123
  %5 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9124
  %call2 = call i8* @BKE_curve_vert_active_get(%struct.Curve* %5), !dbg !9125
  store i8* %call2, i8** %vert, align 8, !dbg !9123
  call void @llvm.dbg.declare(metadata [2 x i32]* %location, metadata !9126, metadata !DIExpression()), !dbg !9127
  call void @llvm.dbg.declare(metadata i16* %hand, metadata !9128, metadata !DIExpression()), !dbg !9129
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9130
  call void @view3d_operator_needs_opengl(%struct.bContext* %6), !dbg !9131
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9132
  call void @view3d_set_viewcontext(%struct.bContext* %7, %struct.ViewContext* %vc), !dbg !9133
  %8 = load i32*, i32** %mval.addr, align 8, !dbg !9134
  %arrayidx = getelementptr inbounds i32, i32* %8, i64 0, !dbg !9134
  %9 = load i32, i32* %arrayidx, align 4, !dbg !9134
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %location, i64 0, i64 0, !dbg !9135
  store i32 %9, i32* %arrayidx3, align 4, !dbg !9136
  %10 = load i32*, i32** %mval.addr, align 8, !dbg !9137
  %arrayidx4 = getelementptr inbounds i32, i32* %10, i64 1, !dbg !9137
  %11 = load i32, i32* %arrayidx4, align 4, !dbg !9137
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %location, i64 0, i64 1, !dbg !9138
  store i32 %11, i32* %arrayidx5, align 4, !dbg !9139
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %location, i64 0, i64 0, !dbg !9140
  %call6 = call signext i16 @findnearestNurbvert(%struct.ViewContext* %vc, i16 signext 1, i32* %arraydecay, %struct.Nurb** %nu, %struct.BezTriple** %bezt, %struct.BPoint** %bp), !dbg !9141
  store i16 %call6, i16* %hand, align 2, !dbg !9142
  %12 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9143
  %tobool = icmp ne %struct.BezTriple* %12, null, !dbg !9143
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !9145

lor.lhs.false:                                    ; preds = %entry
  %13 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !9146
  %tobool7 = icmp ne %struct.BPoint* %13, null, !dbg !9146
  br i1 %tobool7, label %if.then, label %if.end158, !dbg !9147

if.then:                                          ; preds = %lor.lhs.false, %entry
  %14 = load i8, i8* %extend.addr, align 1, !dbg !9148
  %tobool8 = icmp ne i8 %14, 0, !dbg !9148
  br i1 %tobool8, label %if.then9, label %if.else29, !dbg !9151

if.then9:                                         ; preds = %if.then
  %15 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9152
  %tobool10 = icmp ne %struct.BezTriple* %15, null, !dbg !9152
  br i1 %tobool10, label %if.then11, label %if.else26, !dbg !9155

if.then11:                                        ; preds = %if.then9
  %16 = load i16, i16* %hand, align 2, !dbg !9156
  %conv = sext i16 %16 to i32, !dbg !9156
  %cmp = icmp eq i32 %conv, 1, !dbg !9159
  br i1 %cmp, label %if.then13, label %if.else, !dbg !9160

if.then13:                                        ; preds = %if.then11
  %17 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9161
  %call14 = call zeroext i8 @select_beztriple(%struct.BezTriple* %17, i8 zeroext 1, i16 signext 1, i32 1), !dbg !9163
  %18 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9164
  %19 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9165
  %20 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9166
  %21 = bitcast %struct.BezTriple* %20 to i8*, !dbg !9166
  call void @BKE_curve_nurb_vert_active_set(%struct.Curve* %18, %struct.Nurb* %19, i8* %21), !dbg !9167
  br label %if.end25, !dbg !9168

if.else:                                          ; preds = %if.then11
  %22 = load i16, i16* %hand, align 2, !dbg !9169
  %conv15 = sext i16 %22 to i32, !dbg !9169
  %cmp16 = icmp eq i32 %conv15, 0, !dbg !9172
  br i1 %cmp16, label %if.then18, label %if.else21, !dbg !9173

if.then18:                                        ; preds = %if.else
  %23 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9174
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %23, i32 0, i32 7, !dbg !9175
  %24 = load i8, i8* %f1, align 1, !dbg !9176
  %conv19 = zext i8 %24 to i32, !dbg !9176
  %or = or i32 %conv19, 1, !dbg !9176
  %conv20 = trunc i32 %or to i8, !dbg !9176
  store i8 %conv20, i8* %f1, align 1, !dbg !9176
  br label %if.end, !dbg !9174

if.else21:                                        ; preds = %if.else
  %25 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9177
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %25, i32 0, i32 9, !dbg !9178
  %26 = load i8, i8* %f3, align 1, !dbg !9179
  %conv22 = zext i8 %26 to i32, !dbg !9179
  %or23 = or i32 %conv22, 1, !dbg !9179
  %conv24 = trunc i32 %or23 to i8, !dbg !9179
  store i8 %conv24, i8* %f3, align 1, !dbg !9179
  br label %if.end

if.end:                                           ; preds = %if.else21, %if.then18
  %27 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9180
  %actvert = getelementptr inbounds %struct.Curve, %struct.Curve* %27, i32 0, i32 32, !dbg !9181
  store i32 -1, i32* %actvert, align 8, !dbg !9182
  br label %if.end25

if.end25:                                         ; preds = %if.end, %if.then13
  br label %if.end28, !dbg !9183

if.else26:                                        ; preds = %if.then9
  %28 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9184
  %29 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9186
  %30 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !9187
  %31 = bitcast %struct.BPoint* %30 to i8*, !dbg !9187
  call void @BKE_curve_nurb_vert_active_set(%struct.Curve* %28, %struct.Nurb* %29, i8* %31), !dbg !9188
  %32 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !9189
  %call27 = call zeroext i8 @select_bpoint(%struct.BPoint* %32, i8 zeroext 1, i16 signext 1, i8 zeroext 1), !dbg !9190
  br label %if.end28

if.end28:                                         ; preds = %if.else26, %if.end25
  br label %if.end150, !dbg !9191

if.else29:                                        ; preds = %if.then
  %33 = load i8, i8* %deselect.addr, align 1, !dbg !9192
  %tobool30 = icmp ne i8 %33, 0, !dbg !9192
  br i1 %tobool30, label %if.then31, label %if.else67, !dbg !9194

if.then31:                                        ; preds = %if.else29
  %34 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9195
  %tobool32 = icmp ne %struct.BezTriple* %34, null, !dbg !9195
  br i1 %tobool32, label %if.then33, label %if.else59, !dbg !9198

if.then33:                                        ; preds = %if.then31
  %35 = load i16, i16* %hand, align 2, !dbg !9199
  %conv34 = sext i16 %35 to i32, !dbg !9199
  %cmp35 = icmp eq i32 %conv34, 1, !dbg !9202
  br i1 %cmp35, label %if.then37, label %if.else44, !dbg !9203

if.then37:                                        ; preds = %if.then33
  %36 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9204
  %call38 = call zeroext i8 @select_beztriple(%struct.BezTriple* %36, i8 zeroext 0, i16 signext 1, i32 1), !dbg !9206
  %37 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9207
  %38 = load i8*, i8** %vert, align 8, !dbg !9209
  %39 = bitcast i8* %38 to %struct.BezTriple*, !dbg !9209
  %cmp39 = icmp eq %struct.BezTriple* %37, %39, !dbg !9210
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !9211

if.then41:                                        ; preds = %if.then37
  %40 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9212
  %actvert42 = getelementptr inbounds %struct.Curve, %struct.Curve* %40, i32 0, i32 32, !dbg !9213
  store i32 -1, i32* %actvert42, align 8, !dbg !9214
  br label %if.end43, !dbg !9212

if.end43:                                         ; preds = %if.then41, %if.then37
  br label %if.end58, !dbg !9215

if.else44:                                        ; preds = %if.then33
  %41 = load i16, i16* %hand, align 2, !dbg !9216
  %conv45 = sext i16 %41 to i32, !dbg !9216
  %cmp46 = icmp eq i32 %conv45, 0, !dbg !9218
  br i1 %cmp46, label %if.then48, label %if.else52, !dbg !9219

if.then48:                                        ; preds = %if.else44
  %42 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9220
  %f149 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %42, i32 0, i32 7, !dbg !9222
  %43 = load i8, i8* %f149, align 1, !dbg !9223
  %conv50 = zext i8 %43 to i32, !dbg !9223
  %and = and i32 %conv50, -2, !dbg !9223
  %conv51 = trunc i32 %and to i8, !dbg !9223
  store i8 %conv51, i8* %f149, align 1, !dbg !9223
  br label %if.end57, !dbg !9224

if.else52:                                        ; preds = %if.else44
  %44 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9225
  %f353 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %44, i32 0, i32 9, !dbg !9227
  %45 = load i8, i8* %f353, align 1, !dbg !9228
  %conv54 = zext i8 %45 to i32, !dbg !9228
  %and55 = and i32 %conv54, -2, !dbg !9228
  %conv56 = trunc i32 %and55 to i8, !dbg !9228
  store i8 %conv56, i8* %f353, align 1, !dbg !9228
  br label %if.end57

if.end57:                                         ; preds = %if.else52, %if.then48
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end43
  br label %if.end66, !dbg !9229

if.else59:                                        ; preds = %if.then31
  %46 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !9230
  %call60 = call zeroext i8 @select_bpoint(%struct.BPoint* %46, i8 zeroext 0, i16 signext 1, i8 zeroext 1), !dbg !9232
  %47 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !9233
  %48 = load i8*, i8** %vert, align 8, !dbg !9235
  %49 = bitcast i8* %48 to %struct.BPoint*, !dbg !9235
  %cmp61 = icmp eq %struct.BPoint* %47, %49, !dbg !9236
  br i1 %cmp61, label %if.then63, label %if.end65, !dbg !9237

if.then63:                                        ; preds = %if.else59
  %50 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9238
  %actvert64 = getelementptr inbounds %struct.Curve, %struct.Curve* %50, i32 0, i32 32, !dbg !9239
  store i32 -1, i32* %actvert64, align 8, !dbg !9240
  br label %if.end65, !dbg !9238

if.end65:                                         ; preds = %if.then63, %if.else59
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end58
  br label %if.end149, !dbg !9241

if.else67:                                        ; preds = %if.else29
  %51 = load i8, i8* %toggle.addr, align 1, !dbg !9242
  %tobool68 = icmp ne i8 %51, 0, !dbg !9242
  br i1 %tobool68, label %if.then69, label %if.else120, !dbg !9244

if.then69:                                        ; preds = %if.else67
  %52 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9245
  %tobool70 = icmp ne %struct.BezTriple* %52, null, !dbg !9245
  br i1 %tobool70, label %if.then71, label %if.else104, !dbg !9248

if.then71:                                        ; preds = %if.then69
  %53 = load i16, i16* %hand, align 2, !dbg !9249
  %conv72 = sext i16 %53 to i32, !dbg !9249
  %cmp73 = icmp eq i32 %conv72, 1, !dbg !9252
  br i1 %cmp73, label %if.then75, label %if.else89, !dbg !9253

if.then75:                                        ; preds = %if.then71
  %54 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9254
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %54, i32 0, i32 8, !dbg !9257
  %55 = load i8, i8* %f2, align 4, !dbg !9257
  %conv76 = zext i8 %55 to i32, !dbg !9254
  %and77 = and i32 %conv76, 1, !dbg !9258
  %tobool78 = icmp ne i32 %and77, 0, !dbg !9258
  br i1 %tobool78, label %if.then79, label %if.else86, !dbg !9259

if.then79:                                        ; preds = %if.then75
  %56 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9260
  %call80 = call zeroext i8 @select_beztriple(%struct.BezTriple* %56, i8 zeroext 0, i16 signext 1, i32 1), !dbg !9262
  %57 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9263
  %58 = load i8*, i8** %vert, align 8, !dbg !9265
  %59 = bitcast i8* %58 to %struct.BezTriple*, !dbg !9265
  %cmp81 = icmp eq %struct.BezTriple* %57, %59, !dbg !9266
  br i1 %cmp81, label %if.then83, label %if.end85, !dbg !9267

if.then83:                                        ; preds = %if.then79
  %60 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9268
  %actvert84 = getelementptr inbounds %struct.Curve, %struct.Curve* %60, i32 0, i32 32, !dbg !9269
  store i32 -1, i32* %actvert84, align 8, !dbg !9270
  br label %if.end85, !dbg !9268

if.end85:                                         ; preds = %if.then83, %if.then79
  br label %if.end88, !dbg !9271

if.else86:                                        ; preds = %if.then75
  %61 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9272
  %call87 = call zeroext i8 @select_beztriple(%struct.BezTriple* %61, i8 zeroext 1, i16 signext 1, i32 1), !dbg !9274
  %62 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9275
  %63 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9276
  %64 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9277
  %65 = bitcast %struct.BezTriple* %64 to i8*, !dbg !9277
  call void @BKE_curve_nurb_vert_active_set(%struct.Curve* %62, %struct.Nurb* %63, i8* %65), !dbg !9278
  br label %if.end88

if.end88:                                         ; preds = %if.else86, %if.end85
  br label %if.end103, !dbg !9279

if.else89:                                        ; preds = %if.then71
  %66 = load i16, i16* %hand, align 2, !dbg !9280
  %conv90 = sext i16 %66 to i32, !dbg !9280
  %cmp91 = icmp eq i32 %conv90, 0, !dbg !9282
  br i1 %cmp91, label %if.then93, label %if.else97, !dbg !9283

if.then93:                                        ; preds = %if.else89
  %67 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9284
  %f194 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %67, i32 0, i32 7, !dbg !9286
  %68 = load i8, i8* %f194, align 1, !dbg !9287
  %conv95 = zext i8 %68 to i32, !dbg !9287
  %xor = xor i32 %conv95, 1, !dbg !9287
  %conv96 = trunc i32 %xor to i8, !dbg !9287
  store i8 %conv96, i8* %f194, align 1, !dbg !9287
  br label %if.end102, !dbg !9288

if.else97:                                        ; preds = %if.else89
  %69 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9289
  %f398 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %69, i32 0, i32 9, !dbg !9291
  %70 = load i8, i8* %f398, align 1, !dbg !9292
  %conv99 = zext i8 %70 to i32, !dbg !9292
  %xor100 = xor i32 %conv99, 1, !dbg !9292
  %conv101 = trunc i32 %xor100 to i8, !dbg !9292
  store i8 %conv101, i8* %f398, align 1, !dbg !9292
  br label %if.end102

if.end102:                                        ; preds = %if.else97, %if.then93
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.end88
  br label %if.end119, !dbg !9293

if.else104:                                       ; preds = %if.then69
  %71 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !9294
  %f1105 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %71, i32 0, i32 3, !dbg !9297
  %72 = load i16, i16* %f1105, align 4, !dbg !9297
  %conv106 = sext i16 %72 to i32, !dbg !9294
  %and107 = and i32 %conv106, 1, !dbg !9298
  %tobool108 = icmp ne i32 %and107, 0, !dbg !9298
  br i1 %tobool108, label %if.then109, label %if.else116, !dbg !9299

if.then109:                                       ; preds = %if.else104
  %73 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !9300
  %call110 = call zeroext i8 @select_bpoint(%struct.BPoint* %73, i8 zeroext 0, i16 signext 1, i8 zeroext 1), !dbg !9302
  %74 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !9303
  %75 = load i8*, i8** %vert, align 8, !dbg !9305
  %76 = bitcast i8* %75 to %struct.BPoint*, !dbg !9305
  %cmp111 = icmp eq %struct.BPoint* %74, %76, !dbg !9306
  br i1 %cmp111, label %if.then113, label %if.end115, !dbg !9307

if.then113:                                       ; preds = %if.then109
  %77 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9308
  %actvert114 = getelementptr inbounds %struct.Curve, %struct.Curve* %77, i32 0, i32 32, !dbg !9309
  store i32 -1, i32* %actvert114, align 8, !dbg !9310
  br label %if.end115, !dbg !9308

if.end115:                                        ; preds = %if.then113, %if.then109
  br label %if.end118, !dbg !9311

if.else116:                                       ; preds = %if.else104
  %78 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !9312
  %call117 = call zeroext i8 @select_bpoint(%struct.BPoint* %78, i8 zeroext 1, i16 signext 1, i8 zeroext 1), !dbg !9314
  %79 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9315
  %80 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9316
  %81 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !9317
  %82 = bitcast %struct.BPoint* %81 to i8*, !dbg !9317
  call void @BKE_curve_nurb_vert_active_set(%struct.Curve* %79, %struct.Nurb* %80, i8* %82), !dbg !9318
  br label %if.end118

if.end118:                                        ; preds = %if.else116, %if.end115
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %if.end103
  br label %if.end148, !dbg !9319

if.else120:                                       ; preds = %if.else67
  %83 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !9320
  call void @BKE_nurbList_flag_set(%struct.ListBase* %83, i16 signext 0), !dbg !9322
  %84 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9323
  %tobool121 = icmp ne %struct.BezTriple* %84, null, !dbg !9323
  br i1 %tobool121, label %if.then122, label %if.else145, !dbg !9325

if.then122:                                       ; preds = %if.else120
  %85 = load i16, i16* %hand, align 2, !dbg !9326
  %conv123 = sext i16 %85 to i32, !dbg !9326
  %cmp124 = icmp eq i32 %conv123, 1, !dbg !9329
  br i1 %cmp124, label %if.then126, label %if.else128, !dbg !9330

if.then126:                                       ; preds = %if.then122
  %86 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9331
  %call127 = call zeroext i8 @select_beztriple(%struct.BezTriple* %86, i8 zeroext 1, i16 signext 1, i32 1), !dbg !9333
  %87 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9334
  %88 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9335
  %89 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9336
  %90 = bitcast %struct.BezTriple* %89 to i8*, !dbg !9336
  call void @BKE_curve_nurb_vert_active_set(%struct.Curve* %87, %struct.Nurb* %88, i8* %90), !dbg !9337
  br label %if.end144, !dbg !9338

if.else128:                                       ; preds = %if.then122
  %91 = load i16, i16* %hand, align 2, !dbg !9339
  %conv129 = sext i16 %91 to i32, !dbg !9339
  %cmp130 = icmp eq i32 %conv129, 0, !dbg !9342
  br i1 %cmp130, label %if.then132, label %if.else137, !dbg !9343

if.then132:                                       ; preds = %if.else128
  %92 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9344
  %f1133 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %92, i32 0, i32 7, !dbg !9345
  %93 = load i8, i8* %f1133, align 1, !dbg !9346
  %conv134 = zext i8 %93 to i32, !dbg !9346
  %or135 = or i32 %conv134, 1, !dbg !9346
  %conv136 = trunc i32 %or135 to i8, !dbg !9346
  store i8 %conv136, i8* %f1133, align 1, !dbg !9346
  br label %if.end142, !dbg !9344

if.else137:                                       ; preds = %if.else128
  %94 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !9347
  %f3138 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %94, i32 0, i32 9, !dbg !9348
  %95 = load i8, i8* %f3138, align 1, !dbg !9349
  %conv139 = zext i8 %95 to i32, !dbg !9349
  %or140 = or i32 %conv139, 1, !dbg !9349
  %conv141 = trunc i32 %or140 to i8, !dbg !9349
  store i8 %conv141, i8* %f3138, align 1, !dbg !9349
  br label %if.end142

if.end142:                                        ; preds = %if.else137, %if.then132
  %96 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9350
  %actvert143 = getelementptr inbounds %struct.Curve, %struct.Curve* %96, i32 0, i32 32, !dbg !9351
  store i32 -1, i32* %actvert143, align 8, !dbg !9352
  br label %if.end144

if.end144:                                        ; preds = %if.end142, %if.then126
  br label %if.end147, !dbg !9353

if.else145:                                       ; preds = %if.else120
  %97 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9354
  %98 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9356
  %99 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !9357
  %100 = bitcast %struct.BPoint* %99 to i8*, !dbg !9357
  call void @BKE_curve_nurb_vert_active_set(%struct.Curve* %97, %struct.Nurb* %98, i8* %100), !dbg !9358
  %101 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !9359
  %call146 = call zeroext i8 @select_bpoint(%struct.BPoint* %101, i8 zeroext 1, i16 signext 1, i8 zeroext 1), !dbg !9360
  br label %if.end147

if.end147:                                        ; preds = %if.else145, %if.end144
  br label %if.end148

if.end148:                                        ; preds = %if.end147, %if.end119
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %if.end66
  br label %if.end150

if.end150:                                        ; preds = %if.end149, %if.end28
  %102 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9361
  %103 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9363
  %call151 = call %struct.Nurb* @BKE_curve_nurb_active_get(%struct.Curve* %103), !dbg !9364
  %cmp152 = icmp ne %struct.Nurb* %102, %call151, !dbg !9365
  br i1 %cmp152, label %if.then154, label %if.end156, !dbg !9366

if.then154:                                       ; preds = %if.end150
  %104 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9367
  %actvert155 = getelementptr inbounds %struct.Curve, %struct.Curve* %104, i32 0, i32 32, !dbg !9369
  store i32 -1, i32* %actvert155, align 8, !dbg !9370
  %105 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9371
  %106 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9372
  call void @BKE_curve_nurb_active_set(%struct.Curve* %105, %struct.Nurb* %106), !dbg !9373
  br label %if.end156, !dbg !9374

if.end156:                                        ; preds = %if.then154, %if.end150
  %107 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9375
  %108 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9376
  %data157 = getelementptr inbounds %struct.Object, %struct.Object* %108, i32 0, i32 19, !dbg !9377
  %109 = load i8*, i8** %data157, align 8, !dbg !9377
  call void @WM_event_add_notifier(%struct.bContext* %107, i32 274333696, i8* %109), !dbg !9378
  store i8 1, i8* %retval, align 1, !dbg !9379
  br label %return, !dbg !9379

if.end158:                                        ; preds = %lor.lhs.false
  store i8 0, i8* %retval, align 1, !dbg !9380
  br label %return, !dbg !9380

return:                                           ; preds = %if.end158, %if.end156
  %110 = load i8, i8* %retval, align 1, !dbg !9381
  ret i8 %110, !dbg !9381
}

declare dso_local %struct.Object* @CTX_data_edit_object(%struct.bContext*) #2

declare dso_local i8* @BKE_curve_vert_active_get(%struct.Curve*) #2

declare dso_local void @view3d_operator_needs_opengl(%struct.bContext*) #2

declare dso_local void @view3d_set_viewcontext(%struct.bContext*, %struct.ViewContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal signext i16 @findnearestNurbvert(%struct.ViewContext* %vc, i16 signext %sel, i32* %mval, %struct.Nurb** %nurb, %struct.BezTriple** %bezt, %struct.BPoint** %bp) #0 !dbg !9382 {
entry:
  %vc.addr = alloca %struct.ViewContext*, align 8
  %sel.addr = alloca i16, align 2
  %mval.addr = alloca i32*, align 8
  %nurb.addr = alloca %struct.Nurb**, align 8
  %bezt.addr = alloca %struct.BezTriple**, align 8
  %bp.addr = alloca %struct.BPoint**, align 8
  %data = alloca %struct.anon.0, align 8
  store %struct.ViewContext* %vc, %struct.ViewContext** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc.addr, metadata !9389, metadata !DIExpression()), !dbg !9390
  store i16 %sel, i16* %sel.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %sel.addr, metadata !9391, metadata !DIExpression()), !dbg !9392
  store i32* %mval, i32** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mval.addr, metadata !9393, metadata !DIExpression()), !dbg !9394
  store %struct.Nurb** %nurb, %struct.Nurb*** %nurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb*** %nurb.addr, metadata !9395, metadata !DIExpression()), !dbg !9396
  store %struct.BezTriple** %bezt, %struct.BezTriple*** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple*** %bezt.addr, metadata !9397, metadata !DIExpression()), !dbg !9398
  store %struct.BPoint** %bp, %struct.BPoint*** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BPoint*** %bp.addr, metadata !9399, metadata !DIExpression()), !dbg !9400
  call void @llvm.dbg.declare(metadata %struct.anon.0* %data, metadata !9401, metadata !DIExpression()), !dbg !9411
  %0 = bitcast %struct.anon.0* %data to i8*, !dbg !9411
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 48, i1 false), !dbg !9411
  %call = call float @ED_view3d_select_dist_px(), !dbg !9412
  %dist = getelementptr inbounds %struct.anon.0, %struct.anon.0* %data, i32 0, i32 3, !dbg !9413
  store float %call, float* %dist, align 8, !dbg !9414
  %hpoint = getelementptr inbounds %struct.anon.0, %struct.anon.0* %data, i32 0, i32 4, !dbg !9415
  store i32 0, i32* %hpoint, align 4, !dbg !9416
  %1 = load i16, i16* %sel.addr, align 2, !dbg !9417
  %conv = sext i16 %1 to i32, !dbg !9417
  %select = getelementptr inbounds %struct.anon.0, %struct.anon.0* %data, i32 0, i32 5, !dbg !9418
  store i32 %conv, i32* %select, align 8, !dbg !9419
  %2 = load i32*, i32** %mval.addr, align 8, !dbg !9420
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 0, !dbg !9420
  %3 = load i32, i32* %arrayidx, align 4, !dbg !9420
  %conv1 = sitofp i32 %3 to float, !dbg !9420
  %mval_fl = getelementptr inbounds %struct.anon.0, %struct.anon.0* %data, i32 0, i32 6, !dbg !9421
  %arrayidx2 = getelementptr inbounds [2 x float], [2 x float]* %mval_fl, i64 0, i64 0, !dbg !9422
  store float %conv1, float* %arrayidx2, align 4, !dbg !9423
  %4 = load i32*, i32** %mval.addr, align 8, !dbg !9424
  %arrayidx3 = getelementptr inbounds i32, i32* %4, i64 1, !dbg !9424
  %5 = load i32, i32* %arrayidx3, align 4, !dbg !9424
  %conv4 = sitofp i32 %5 to float, !dbg !9424
  %mval_fl5 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %data, i32 0, i32 6, !dbg !9425
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %mval_fl5, i64 0, i64 1, !dbg !9426
  store float %conv4, float* %arrayidx6, align 4, !dbg !9427
  %6 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !9428
  %obedit = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %6, i32 0, i32 2, !dbg !9429
  %7 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9429
  %8 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !9430
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %8, i32 0, i32 5, !dbg !9431
  %9 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !9431
  call void @ED_view3d_init_mats_rv3d(%struct.Object* %7, %struct.RegionView3D* %9), !dbg !9432
  %10 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !9433
  %11 = bitcast %struct.anon.0* %data to i8*, !dbg !9434
  call void @nurbs_foreachScreenVert(%struct.ViewContext* %10, void (i8*, %struct.Nurb*, %struct.BPoint*, %struct.BezTriple*, i32, float*)* @findnearestNurbvert__doClosest, i8* %11, i32 7), !dbg !9435
  %nurb7 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %data, i32 0, i32 2, !dbg !9436
  %12 = load %struct.Nurb*, %struct.Nurb** %nurb7, align 8, !dbg !9436
  %13 = load %struct.Nurb**, %struct.Nurb*** %nurb.addr, align 8, !dbg !9437
  store %struct.Nurb* %12, %struct.Nurb** %13, align 8, !dbg !9438
  %bezt8 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %data, i32 0, i32 1, !dbg !9439
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt8, align 8, !dbg !9439
  %15 = load %struct.BezTriple**, %struct.BezTriple*** %bezt.addr, align 8, !dbg !9440
  store %struct.BezTriple* %14, %struct.BezTriple** %15, align 8, !dbg !9441
  %bp9 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %data, i32 0, i32 0, !dbg !9442
  %16 = load %struct.BPoint*, %struct.BPoint** %bp9, align 8, !dbg !9442
  %17 = load %struct.BPoint**, %struct.BPoint*** %bp.addr, align 8, !dbg !9443
  store %struct.BPoint* %16, %struct.BPoint** %17, align 8, !dbg !9444
  %hpoint10 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %data, i32 0, i32 4, !dbg !9445
  %18 = load i32, i32* %hpoint10, align 4, !dbg !9445
  %conv11 = trunc i32 %18 to i16, !dbg !9446
  ret i16 %conv11, !dbg !9447
}

declare dso_local void @BKE_curve_nurb_vert_active_set(%struct.Curve*, %struct.Nurb*, i8*) #2

declare dso_local void @BKE_nurbList_flag_set(%struct.ListBase*, i16 signext) #2

declare dso_local %struct.Nurb* @BKE_curve_nurb_active_get(%struct.Curve*) #2

declare dso_local void @BKE_curve_nurb_active_set(%struct.Curve*, %struct.Nurb*) #2

declare dso_local void @WM_event_add_notifier(%struct.bContext*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ed_editnurb_spin([4 x float]* %viewmat, %struct.Object* %obedit, float* %axis, float* %cent) #0 !dbg !9448 {
entry:
  %retval = alloca i8, align 1
  %viewmat.addr = alloca [4 x float]*, align 8
  %obedit.addr = alloca %struct.Object*, align 8
  %axis.addr = alloca float*, align 8
  %cent.addr = alloca float*, align 8
  %cu = alloca %struct.Curve*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %cmat = alloca [3 x [3 x float]], align 16
  %tmat = alloca [3 x [3 x float]], align 16
  %imat = alloca [3 x [3 x float]], align 16
  %bmat = alloca [3 x [3 x float]], align 16
  %rotmat = alloca [3 x [3 x float]], align 16
  %scalemat1 = alloca [3 x [3 x float]], align 16
  %scalemat2 = alloca [3 x [3 x float]], align 16
  %persmat = alloca [3 x [3 x float]], align 16
  %persinv = alloca [3 x [3 x float]], align 16
  %ok = alloca i8, align 1
  %changed = alloca i8, align 1
  %a = alloca i32, align 4
  store [4 x float]* %viewmat, [4 x float]** %viewmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %viewmat.addr, metadata !9452, metadata !DIExpression()), !dbg !9453
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !9454, metadata !DIExpression()), !dbg !9455
  store float* %axis, float** %axis.addr, align 8
  call void @llvm.dbg.declare(metadata float** %axis.addr, metadata !9456, metadata !DIExpression()), !dbg !9457
  store float* %cent, float** %cent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cent.addr, metadata !9458, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !9460, metadata !DIExpression()), !dbg !9461
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !9462
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !9463
  %1 = load i8*, i8** %data, align 8, !dbg !9463
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !9464
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !9461
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !9465, metadata !DIExpression()), !dbg !9466
  %3 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !9467
  %call = call %struct.ListBase* @object_editcurve_get(%struct.Object* %3), !dbg !9468
  store %struct.ListBase* %call, %struct.ListBase** %editnurb, align 8, !dbg !9466
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !9469, metadata !DIExpression()), !dbg !9470
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %cmat, metadata !9471, metadata !DIExpression()), !dbg !9472
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %tmat, metadata !9473, metadata !DIExpression()), !dbg !9474
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %imat, metadata !9475, metadata !DIExpression()), !dbg !9476
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %bmat, metadata !9477, metadata !DIExpression()), !dbg !9478
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %rotmat, metadata !9479, metadata !DIExpression()), !dbg !9480
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %scalemat1, metadata !9481, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %scalemat2, metadata !9483, metadata !DIExpression()), !dbg !9484
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %persmat, metadata !9485, metadata !DIExpression()), !dbg !9486
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %persinv, metadata !9487, metadata !DIExpression()), !dbg !9488
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !9489, metadata !DIExpression()), !dbg !9490
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !9491, metadata !DIExpression()), !dbg !9492
  store i8 0, i8* %changed, align 1, !dbg !9492
  call void @llvm.dbg.declare(metadata i32* %a, metadata !9493, metadata !DIExpression()), !dbg !9494
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %persmat, i64 0, i64 0, !dbg !9495
  %4 = load [4 x float]*, [4 x float]** %viewmat.addr, align 8, !dbg !9496
  call void @copy_m3_m4([3 x float]* %arraydecay, [4 x float]* %4), !dbg !9497
  %arraydecay1 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %persinv, i64 0, i64 0, !dbg !9498
  %arraydecay2 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %persmat, i64 0, i64 0, !dbg !9499
  %call3 = call zeroext i8 @invert_m3_m3([3 x float]* %arraydecay1, [3 x float]* %arraydecay2), !dbg !9500
  %arraydecay4 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bmat, i64 0, i64 0, !dbg !9501
  %5 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !9502
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 47, !dbg !9503
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !9502
  call void @copy_m3_m4([3 x float]* %arraydecay4, [4 x float]* %arraydecay5), !dbg !9504
  %arraydecay6 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !9505
  %arraydecay7 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bmat, i64 0, i64 0, !dbg !9506
  %call8 = call zeroext i8 @invert_m3_m3([3 x float]* %arraydecay6, [3 x float]* %arraydecay7), !dbg !9507
  %arraydecay9 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %cmat, i64 0, i64 0, !dbg !9508
  %6 = load float*, float** %axis.addr, align 8, !dbg !9509
  call void @axis_angle_to_mat3([3 x float]* %arraydecay9, float* %6, float 0x3FE921FB60000000), !dbg !9510
  %arraydecay10 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !9511
  %arraydecay11 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %cmat, i64 0, i64 0, !dbg !9512
  %arraydecay12 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bmat, i64 0, i64 0, !dbg !9513
  call void @mul_m3_m3m3([3 x float]* %arraydecay10, [3 x float]* %arraydecay11, [3 x float]* %arraydecay12), !dbg !9514
  %arraydecay13 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rotmat, i64 0, i64 0, !dbg !9515
  %arraydecay14 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !9516
  %arraydecay15 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !9517
  call void @mul_m3_m3m3([3 x float]* %arraydecay13, [3 x float]* %arraydecay14, [3 x float]* %arraydecay15), !dbg !9518
  %arraydecay16 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %scalemat1, i64 0, i64 0, !dbg !9519
  call void @unit_m3([3 x float]* %arraydecay16), !dbg !9520
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %scalemat1, i64 0, i64 0, !dbg !9521
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !9521
  store float 0x3FF6A09E60000000, float* %arrayidx17, align 16, !dbg !9522
  %arrayidx18 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %scalemat1, i64 0, i64 1, !dbg !9523
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx18, i64 0, i64 1, !dbg !9523
  store float 0x3FF6A09E60000000, float* %arrayidx19, align 4, !dbg !9524
  %arraydecay20 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !9525
  %arraydecay21 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %persmat, i64 0, i64 0, !dbg !9526
  %arraydecay22 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bmat, i64 0, i64 0, !dbg !9527
  call void @mul_m3_m3m3([3 x float]* %arraydecay20, [3 x float]* %arraydecay21, [3 x float]* %arraydecay22), !dbg !9528
  %arraydecay23 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %cmat, i64 0, i64 0, !dbg !9529
  %arraydecay24 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %scalemat1, i64 0, i64 0, !dbg !9530
  %arraydecay25 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !9531
  call void @mul_m3_m3m3([3 x float]* %arraydecay23, [3 x float]* %arraydecay24, [3 x float]* %arraydecay25), !dbg !9532
  %arraydecay26 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !9533
  %arraydecay27 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %persinv, i64 0, i64 0, !dbg !9534
  %arraydecay28 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %cmat, i64 0, i64 0, !dbg !9535
  call void @mul_m3_m3m3([3 x float]* %arraydecay26, [3 x float]* %arraydecay27, [3 x float]* %arraydecay28), !dbg !9536
  %arraydecay29 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %scalemat1, i64 0, i64 0, !dbg !9537
  %arraydecay30 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !9538
  %arraydecay31 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !9539
  call void @mul_m3_m3m3([3 x float]* %arraydecay29, [3 x float]* %arraydecay30, [3 x float]* %arraydecay31), !dbg !9540
  %arraydecay32 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %scalemat2, i64 0, i64 0, !dbg !9541
  call void @unit_m3([3 x float]* %arraydecay32), !dbg !9542
  %arrayidx33 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %scalemat2, i64 0, i64 0, !dbg !9543
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx33, i64 0, i64 0, !dbg !9543
  %7 = load float, float* %arrayidx34, align 16, !dbg !9544
  %div = fdiv float %7, 0x3FF6A09E60000000, !dbg !9544
  store float %div, float* %arrayidx34, align 16, !dbg !9544
  %arrayidx35 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %scalemat2, i64 0, i64 1, !dbg !9545
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx35, i64 0, i64 1, !dbg !9545
  %8 = load float, float* %arrayidx36, align 4, !dbg !9546
  %div37 = fdiv float %8, 0x3FF6A09E60000000, !dbg !9546
  store float %div37, float* %arrayidx36, align 4, !dbg !9546
  %arraydecay38 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !9547
  %arraydecay39 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %persmat, i64 0, i64 0, !dbg !9548
  %arraydecay40 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bmat, i64 0, i64 0, !dbg !9549
  call void @mul_m3_m3m3([3 x float]* %arraydecay38, [3 x float]* %arraydecay39, [3 x float]* %arraydecay40), !dbg !9550
  %arraydecay41 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %cmat, i64 0, i64 0, !dbg !9551
  %arraydecay42 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %scalemat2, i64 0, i64 0, !dbg !9552
  %arraydecay43 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !9553
  call void @mul_m3_m3m3([3 x float]* %arraydecay41, [3 x float]* %arraydecay42, [3 x float]* %arraydecay43), !dbg !9554
  %arraydecay44 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !9555
  %arraydecay45 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %persinv, i64 0, i64 0, !dbg !9556
  %arraydecay46 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %cmat, i64 0, i64 0, !dbg !9557
  call void @mul_m3_m3m3([3 x float]* %arraydecay44, [3 x float]* %arraydecay45, [3 x float]* %arraydecay46), !dbg !9558
  %arraydecay47 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %scalemat2, i64 0, i64 0, !dbg !9559
  %arraydecay48 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !9560
  %arraydecay49 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !9561
  call void @mul_m3_m3m3([3 x float]* %arraydecay47, [3 x float]* %arraydecay48, [3 x float]* %arraydecay49), !dbg !9562
  store i8 1, i8* %ok, align 1, !dbg !9563
  store i32 0, i32* %a, align 4, !dbg !9564
  br label %for.cond, !dbg !9566

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %a, align 4, !dbg !9567
  %cmp = icmp slt i32 %9, 7, !dbg !9569
  br i1 %cmp, label %for.body, label %for.end, !dbg !9570

for.body:                                         ; preds = %for.cond
  %10 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !9571
  %editnurb50 = getelementptr inbounds %struct.Curve, %struct.Curve* %10, i32 0, i32 4, !dbg !9573
  %11 = load %struct.EditNurb*, %struct.EditNurb** %editnurb50, align 8, !dbg !9573
  %call51 = call zeroext i8 @ed_editnurb_extrude_flag(%struct.EditNurb* %11, i16 signext 1), !dbg !9574
  store i8 %call51, i8* %ok, align 1, !dbg !9575
  %12 = load i8, i8* %ok, align 1, !dbg !9576
  %conv = zext i8 %12 to i32, !dbg !9576
  %cmp52 = icmp eq i32 %conv, 0, !dbg !9578
  br i1 %cmp52, label %if.then, label %if.end, !dbg !9579

if.then:                                          ; preds = %for.body
  %13 = load i8, i8* %changed, align 1, !dbg !9580
  store i8 %13, i8* %retval, align 1, !dbg !9581
  br label %return, !dbg !9581

if.end:                                           ; preds = %for.body
  store i8 1, i8* %changed, align 1, !dbg !9582
  %14 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !9583
  %15 = load float*, float** %cent.addr, align 8, !dbg !9584
  %arraydecay54 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rotmat, i64 0, i64 0, !dbg !9585
  call void @rotateflagNurb(%struct.ListBase* %14, i16 signext 1, float* %15, [3 x float]* %arraydecay54), !dbg !9586
  %16 = load i32, i32* %a, align 4, !dbg !9587
  %and = and i32 %16, 1, !dbg !9589
  %cmp55 = icmp eq i32 %and, 0, !dbg !9590
  br i1 %cmp55, label %if.then57, label %if.else, !dbg !9591

if.then57:                                        ; preds = %if.end
  %17 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !9592
  %18 = load float*, float** %cent.addr, align 8, !dbg !9594
  %arraydecay58 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %scalemat1, i64 0, i64 0, !dbg !9595
  call void @rotateflagNurb(%struct.ListBase* %17, i16 signext 1, float* %18, [3 x float]* %arraydecay58), !dbg !9596
  %19 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !9597
  call void @weightflagNurb(%struct.ListBase* %19, i16 signext 1, float 0x3FD6A09E60000000), !dbg !9598
  br label %if.end60, !dbg !9599

if.else:                                          ; preds = %if.end
  %20 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !9600
  %21 = load float*, float** %cent.addr, align 8, !dbg !9602
  %arraydecay59 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %scalemat2, i64 0, i64 0, !dbg !9603
  call void @rotateflagNurb(%struct.ListBase* %20, i16 signext 1, float* %21, [3 x float]* %arraydecay59), !dbg !9604
  %22 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !9605
  call void @weightflagNurb(%struct.ListBase* %22, i16 signext 1, float 0x4006A09E60000000), !dbg !9606
  br label %if.end60

if.end60:                                         ; preds = %if.else, %if.then57
  br label %for.inc, !dbg !9607

for.inc:                                          ; preds = %if.end60
  %23 = load i32, i32* %a, align 4, !dbg !9608
  %inc = add nsw i32 %23, 1, !dbg !9608
  store i32 %inc, i32* %a, align 4, !dbg !9608
  br label %for.cond, !dbg !9609, !llvm.loop !9610

for.end:                                          ; preds = %for.cond
  %24 = load i8, i8* %ok, align 1, !dbg !9612
  %tobool = icmp ne i8 %24, 0, !dbg !9612
  br i1 %tobool, label %if.then61, label %if.end73, !dbg !9614

if.then61:                                        ; preds = %for.end
  %25 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !9615
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %25, i32 0, i32 0, !dbg !9618
  %26 = load i8*, i8** %first, align 8, !dbg !9618
  %27 = bitcast i8* %26 to %struct.Nurb*, !dbg !9615
  store %struct.Nurb* %27, %struct.Nurb** %nu, align 8, !dbg !9619
  br label %for.cond62, !dbg !9620

for.cond62:                                       ; preds = %for.inc71, %if.then61
  %28 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9621
  %tobool63 = icmp ne %struct.Nurb* %28, null, !dbg !9623
  br i1 %tobool63, label %for.body64, label %for.end72, !dbg !9623

for.body64:                                       ; preds = %for.cond62
  %29 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9624
  %call65 = call i32 @isNurbsel(%struct.Nurb* %29), !dbg !9627
  %tobool66 = icmp ne i32 %call65, 0, !dbg !9627
  br i1 %tobool66, label %if.then67, label %if.end70, !dbg !9628

if.then67:                                        ; preds = %for.body64
  %30 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9629
  %orderv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %30, i32 0, i32 12, !dbg !9631
  store i16 4, i16* %orderv, align 2, !dbg !9632
  %31 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9633
  %flagv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %31, i32 0, i32 14, !dbg !9634
  %32 = load i16, i16* %flagv, align 2, !dbg !9635
  %conv68 = sext i16 %32 to i32, !dbg !9635
  %or = or i32 %conv68, 1, !dbg !9635
  %conv69 = trunc i32 %or to i16, !dbg !9635
  store i16 %conv69, i16* %flagv, align 2, !dbg !9635
  %33 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9636
  call void @BKE_nurb_knot_calc_v(%struct.Nurb* %33), !dbg !9637
  br label %if.end70, !dbg !9638

if.end70:                                         ; preds = %if.then67, %for.body64
  br label %for.inc71, !dbg !9639

for.inc71:                                        ; preds = %if.end70
  %34 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9640
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %34, i32 0, i32 0, !dbg !9641
  %35 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !9641
  store %struct.Nurb* %35, %struct.Nurb** %nu, align 8, !dbg !9642
  br label %for.cond62, !dbg !9643, !llvm.loop !9644

for.end72:                                        ; preds = %for.cond62
  br label %if.end73, !dbg !9646

if.end73:                                         ; preds = %for.end72, %for.end
  %36 = load i8, i8* %changed, align 1, !dbg !9647
  store i8 %36, i8* %retval, align 1, !dbg !9648
  br label %return, !dbg !9648

return:                                           ; preds = %if.end73, %if.then
  %37 = load i8, i8* %retval, align 1, !dbg !9649
  ret i8 %37, !dbg !9649
}

declare dso_local void @copy_m3_m4([3 x float]*, [4 x float]*) #2

declare dso_local zeroext i8 @invert_m3_m3([3 x float]*, [3 x float]*) #2

declare dso_local void @axis_angle_to_mat3([3 x float]*, float*, float) #2

declare dso_local void @mul_m3_m3m3([3 x float]*, [3 x float]*, [3 x float]*) #2

declare dso_local void @unit_m3([3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @rotateflagNurb(%struct.ListBase* %editnurb, i16 signext %flag, float* %cent, [3 x float]* %rotmat) #0 !dbg !9650 {
entry:
  %editnurb.addr = alloca %struct.ListBase*, align 8
  %flag.addr = alloca i16, align 2
  %cent.addr = alloca float*, align 8
  %rotmat.addr = alloca [3 x float]*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  store %struct.ListBase* %editnurb, %struct.ListBase** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb.addr, metadata !9653, metadata !DIExpression()), !dbg !9654
  store i16 %flag, i16* %flag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %flag.addr, metadata !9655, metadata !DIExpression()), !dbg !9656
  store float* %cent, float** %cent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cent.addr, metadata !9657, metadata !DIExpression()), !dbg !9658
  store [3 x float]* %rotmat, [3 x float]** %rotmat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %rotmat.addr, metadata !9659, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !9661, metadata !DIExpression()), !dbg !9662
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !9663, metadata !DIExpression()), !dbg !9664
  call void @llvm.dbg.declare(metadata i32* %a, metadata !9665, metadata !DIExpression()), !dbg !9666
  %0 = load %struct.ListBase*, %struct.ListBase** %editnurb.addr, align 8, !dbg !9667
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !9669
  %1 = load i8*, i8** %first, align 8, !dbg !9669
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !9667
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !9670
  br label %for.cond, !dbg !9671

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9672
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !9674
  br i1 %tobool, label %for.body, label %for.end, !dbg !9674

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9675
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 2, !dbg !9678
  %5 = load i16, i16* %type, align 8, !dbg !9678
  %conv = sext i16 %5 to i32, !dbg !9675
  %cmp = icmp eq i32 %conv, 4, !dbg !9679
  br i1 %cmp, label %if.then, label %if.end12, !dbg !9680

if.then:                                          ; preds = %for.body
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9681
  %bp2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 17, !dbg !9683
  %7 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !9683
  store %struct.BPoint* %7, %struct.BPoint** %bp, align 8, !dbg !9684
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9685
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 6, !dbg !9686
  %9 = load i32, i32* %pntsu, align 8, !dbg !9686
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9687
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 7, !dbg !9688
  %11 = load i32, i32* %pntsv, align 4, !dbg !9688
  %mul = mul nsw i32 %9, %11, !dbg !9689
  store i32 %mul, i32* %a, align 4, !dbg !9690
  br label %while.cond, !dbg !9691

while.cond:                                       ; preds = %if.end, %if.then
  %12 = load i32, i32* %a, align 4, !dbg !9692
  %dec = add nsw i32 %12, -1, !dbg !9692
  store i32 %dec, i32* %a, align 4, !dbg !9692
  %tobool3 = icmp ne i32 %12, 0, !dbg !9691
  br i1 %tobool3, label %while.body, label %while.end, !dbg !9691

while.body:                                       ; preds = %while.cond
  %13 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !9693
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %13, i32 0, i32 3, !dbg !9696
  %14 = load i16, i16* %f1, align 4, !dbg !9696
  %conv4 = sext i16 %14 to i32, !dbg !9693
  %15 = load i16, i16* %flag.addr, align 2, !dbg !9697
  %conv5 = sext i16 %15 to i32, !dbg !9697
  %and = and i32 %conv4, %conv5, !dbg !9698
  %tobool6 = icmp ne i32 %and, 0, !dbg !9698
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !9699

if.then7:                                         ; preds = %while.body
  %16 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !9700
  %vec = getelementptr inbounds %struct.BPoint, %struct.BPoint* %16, i32 0, i32 0, !dbg !9702
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !9700
  %17 = load float*, float** %cent.addr, align 8, !dbg !9703
  call void @sub_v3_v3(float* %arraydecay, float* %17), !dbg !9704
  %18 = load [3 x float]*, [3 x float]** %rotmat.addr, align 8, !dbg !9705
  %19 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !9706
  %vec8 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %19, i32 0, i32 0, !dbg !9707
  %arraydecay9 = getelementptr inbounds [4 x float], [4 x float]* %vec8, i64 0, i64 0, !dbg !9706
  call void @mul_m3_v3([3 x float]* %18, float* %arraydecay9), !dbg !9708
  %20 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !9709
  %vec10 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %20, i32 0, i32 0, !dbg !9710
  %arraydecay11 = getelementptr inbounds [4 x float], [4 x float]* %vec10, i64 0, i64 0, !dbg !9709
  %21 = load float*, float** %cent.addr, align 8, !dbg !9711
  call void @add_v3_v3(float* %arraydecay11, float* %21), !dbg !9712
  br label %if.end, !dbg !9713

if.end:                                           ; preds = %if.then7, %while.body
  %22 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !9714
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %22, i32 1, !dbg !9714
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp, align 8, !dbg !9714
  br label %while.cond, !dbg !9691, !llvm.loop !9715

while.end:                                        ; preds = %while.cond
  br label %if.end12, !dbg !9717

if.end12:                                         ; preds = %while.end, %for.body
  br label %for.inc, !dbg !9718

for.inc:                                          ; preds = %if.end12
  %23 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9719
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %23, i32 0, i32 0, !dbg !9720
  %24 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !9720
  store %struct.Nurb* %24, %struct.Nurb** %nu, align 8, !dbg !9721
  br label %for.cond, !dbg !9722, !llvm.loop !9723

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9725
}

; Function Attrs: noinline nounwind uwtable
define internal void @weightflagNurb(%struct.ListBase* %editnurb, i16 signext %flag, float %w) #0 !dbg !9726 {
entry:
  %editnurb.addr = alloca %struct.ListBase*, align 8
  %flag.addr = alloca i16, align 2
  %w.addr = alloca float, align 4
  %nu = alloca %struct.Nurb*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  store %struct.ListBase* %editnurb, %struct.ListBase** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb.addr, metadata !9729, metadata !DIExpression()), !dbg !9730
  store i16 %flag, i16* %flag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %flag.addr, metadata !9731, metadata !DIExpression()), !dbg !9732
  store float %w, float* %w.addr, align 4
  call void @llvm.dbg.declare(metadata float* %w.addr, metadata !9733, metadata !DIExpression()), !dbg !9734
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !9735, metadata !DIExpression()), !dbg !9736
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !9737, metadata !DIExpression()), !dbg !9738
  call void @llvm.dbg.declare(metadata i32* %a, metadata !9739, metadata !DIExpression()), !dbg !9740
  %0 = load %struct.ListBase*, %struct.ListBase** %editnurb.addr, align 8, !dbg !9741
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !9743
  %1 = load i8*, i8** %first, align 8, !dbg !9743
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !9741
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !9744
  br label %for.cond, !dbg !9745

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9746
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !9748
  br i1 %tobool, label %for.body, label %for.end, !dbg !9748

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9749
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 2, !dbg !9752
  %5 = load i16, i16* %type, align 8, !dbg !9752
  %conv = sext i16 %5 to i32, !dbg !9749
  %cmp = icmp eq i32 %conv, 4, !dbg !9753
  br i1 %cmp, label %if.then, label %if.end9, !dbg !9754

if.then:                                          ; preds = %for.body
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9755
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 6, !dbg !9757
  %7 = load i32, i32* %pntsu, align 8, !dbg !9757
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9758
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 7, !dbg !9759
  %9 = load i32, i32* %pntsv, align 4, !dbg !9759
  %mul = mul nsw i32 %7, %9, !dbg !9760
  store i32 %mul, i32* %a, align 4, !dbg !9761
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9762
  %bp2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 17, !dbg !9763
  %11 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !9763
  store %struct.BPoint* %11, %struct.BPoint** %bp, align 8, !dbg !9764
  br label %while.cond, !dbg !9765

while.cond:                                       ; preds = %if.end, %if.then
  %12 = load i32, i32* %a, align 4, !dbg !9766
  %dec = add nsw i32 %12, -1, !dbg !9766
  store i32 %dec, i32* %a, align 4, !dbg !9766
  %tobool3 = icmp ne i32 %12, 0, !dbg !9765
  br i1 %tobool3, label %while.body, label %while.end, !dbg !9765

while.body:                                       ; preds = %while.cond
  %13 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !9767
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %13, i32 0, i32 3, !dbg !9770
  %14 = load i16, i16* %f1, align 4, !dbg !9770
  %conv4 = sext i16 %14 to i32, !dbg !9767
  %15 = load i16, i16* %flag.addr, align 2, !dbg !9771
  %conv5 = sext i16 %15 to i32, !dbg !9771
  %and = and i32 %conv4, %conv5, !dbg !9772
  %tobool6 = icmp ne i32 %and, 0, !dbg !9772
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !9773

if.then7:                                         ; preds = %while.body
  %16 = load float, float* %w.addr, align 4, !dbg !9774
  %17 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !9776
  %vec = getelementptr inbounds %struct.BPoint, %struct.BPoint* %17, i32 0, i32 0, !dbg !9777
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !9776
  %18 = load float, float* %arrayidx, align 4, !dbg !9778
  %mul8 = fmul float %18, %16, !dbg !9778
  store float %mul8, float* %arrayidx, align 4, !dbg !9778
  br label %if.end, !dbg !9779

if.end:                                           ; preds = %if.then7, %while.body
  %19 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !9780
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %19, i32 1, !dbg !9780
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp, align 8, !dbg !9780
  br label %while.cond, !dbg !9765, !llvm.loop !9781

while.end:                                        ; preds = %while.cond
  br label %if.end9, !dbg !9783

if.end9:                                          ; preds = %while.end, %for.body
  br label %for.inc, !dbg !9784

for.inc:                                          ; preds = %if.end9
  %20 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !9785
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %20, i32 0, i32 0, !dbg !9786
  %21 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !9786
  store %struct.Nurb* %21, %struct.Nurb** %nu, align 8, !dbg !9787
  br label %for.cond, !dbg !9788, !llvm.loop !9789

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9791
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_spin(%struct.wmOperatorType* %ot) #0 !dbg !9792 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9793, metadata !DIExpression()), !dbg !9794
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9795
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9796
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i64 0, i64 0), i8** %name, align 8, !dbg !9797
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9798
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !9799
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.96, i64 0, i64 0), i8** %idname, align 8, !dbg !9800
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9801
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !9802
  store i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.97, i64 0, i64 0), i8** %description, align 8, !dbg !9803
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9804
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !9805
  store i32 (%struct.bContext*, %struct.wmOperator*)* @spin_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9806
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9807
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !9808
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @spin_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !9809
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9810
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !9811
  store i32 (%struct.bContext*)* @ED_operator_editsurf, i32 (%struct.bContext*)** %poll, align 8, !dbg !9812
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9813
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !9814
  store i16 3, i16* %flag, align 8, !dbg !9815
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9816
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !9817
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !9817
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !9816
  %call = call %struct.PropertyRNA* @RNA_def_float_vector_xyz(i8* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98, i64 0, i64 0), i32 3, float* null, float 0xC7EFFFFFE0000000, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.100, i64 0, i64 0), float 0xC7EFFFFFE0000000, float 0x47EFFFFFE0000000), !dbg !9818
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9819
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !9820
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !9820
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !9819
  %call2 = call %struct.PropertyRNA* @RNA_def_float_vector(i8* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i64 0, i64 0), i32 3, float* null, float 0xC7EFFFFFE0000000, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.102, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.103, i64 0, i64 0), float -1.000000e+00, float 1.000000e+00), !dbg !9821
  ret void, !dbg !9822
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @spin_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9823 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %rv3d = alloca %struct.RegionView3D*, align 8
  %cent = alloca [3 x float], align 4
  %axis = alloca [3 x float], align 4
  %viewmat = alloca [4 x [4 x float]], align 16
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9824, metadata !DIExpression()), !dbg !9825
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9826, metadata !DIExpression()), !dbg !9827
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !9828, metadata !DIExpression()), !dbg !9829
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9830
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !9831
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !9829
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !9832, metadata !DIExpression()), !dbg !9835
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9836
  %call1 = call %struct.RegionView3D* @ED_view3d_context_rv3d(%struct.bContext* %1), !dbg !9837
  store %struct.RegionView3D* %call1, %struct.RegionView3D** %rv3d, align 8, !dbg !9835
  call void @llvm.dbg.declare(metadata [3 x float]* %cent, metadata !9838, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.declare(metadata [3 x float]* %axis, metadata !9840, metadata !DIExpression()), !dbg !9841
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %viewmat, metadata !9842, metadata !DIExpression()), !dbg !9843
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9844
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !9845
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9845
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !9846
  call void @RNA_float_get_array(%struct.PointerRNA* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98, i64 0, i64 0), float* %arraydecay), !dbg !9847
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9848
  %ptr2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !9849
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !9849
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !9850
  call void @RNA_float_get_array(%struct.PointerRNA* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i64 0, i64 0), float* %arraydecay3), !dbg !9851
  %6 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9852
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 50, !dbg !9853
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !9852
  %7 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9854
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 47, !dbg !9855
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !9854
  %call6 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay4, [4 x float]* %arraydecay5), !dbg !9856
  %8 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9857
  %imat7 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 50, !dbg !9858
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat7, i64 0, i64 0, !dbg !9857
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !9859
  call void @mul_m4_v3([4 x float]* %arraydecay8, float* %arraydecay9), !dbg !9860
  %9 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !9861
  %tobool = icmp ne %struct.RegionView3D* %9, null, !dbg !9861
  br i1 %tobool, label %if.then, label %if.else, !dbg !9863

if.then:                                          ; preds = %entry
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !9864
  %10 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !9865
  %viewmat11 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %10, i32 0, i32 1, !dbg !9866
  %arraydecay12 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat11, i64 0, i64 0, !dbg !9865
  call void @copy_m4_m4([4 x float]* %arraydecay10, [4 x float]* %arraydecay12), !dbg !9867
  br label %if.end, !dbg !9867

if.else:                                          ; preds = %entry
  %arraydecay13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !9868
  call void @unit_m4([4 x float]* %arraydecay13), !dbg !9869
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arraydecay14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !9870
  %11 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9872
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !9873
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !9874
  %call17 = call zeroext i8 @ed_editnurb_spin([4 x float]* %arraydecay14, %struct.Object* %11, float* %arraydecay15, float* %arraydecay16), !dbg !9875
  %tobool18 = icmp ne i8 %call17, 0, !dbg !9875
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !9876

if.then19:                                        ; preds = %if.end
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9877
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %12, i32 0, i32 8, !dbg !9879
  %13 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !9879
  call void @BKE_report(%struct.ReportList* %13, i32 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.213, i64 0, i64 0)), !dbg !9880
  store i32 2, i32* %retval, align 4, !dbg !9881
  br label %return, !dbg !9881

if.end20:                                         ; preds = %if.end
  %14 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9882
  %data = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 19, !dbg !9884
  %15 = load i8*, i8** %data, align 8, !dbg !9884
  %16 = bitcast i8* %15 to %struct.Curve*, !dbg !9882
  %call21 = call i32 @ED_curve_updateAnimPaths(%struct.Curve* %16), !dbg !9885
  %tobool22 = icmp ne i32 %call21, 0, !dbg !9885
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !9886

if.then23:                                        ; preds = %if.end20
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9887
  %18 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9888
  %19 = bitcast %struct.Object* %18 to i8*, !dbg !9888
  call void @WM_event_add_notifier(%struct.bContext* %17, i32 85524480, i8* %19), !dbg !9889
  br label %if.end24, !dbg !9889

if.end24:                                         ; preds = %if.then23, %if.end20
  %20 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9890
  %21 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9891
  %data25 = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 19, !dbg !9892
  %22 = load i8*, i8** %data25, align 8, !dbg !9892
  call void @WM_event_add_notifier(%struct.bContext* %20, i32 274399232, i8* %22), !dbg !9893
  %23 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9894
  %data26 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 19, !dbg !9895
  %24 = load i8*, i8** %data26, align 8, !dbg !9895
  %25 = bitcast i8* %24 to %struct.ID*, !dbg !9894
  call void @DAG_id_tag_update(%struct.ID* %25, i16 signext 0), !dbg !9896
  store i32 4, i32* %retval, align 4, !dbg !9897
  br label %return, !dbg !9897

return:                                           ; preds = %if.end24, %if.then19
  %26 = load i32, i32* %retval, align 4, !dbg !9898
  ret i32 %26, !dbg !9898
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @spin_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !9899 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %scene = alloca %struct.Scene*, align 8
  %v3d = alloca %struct.View3D*, align 8
  %rv3d = alloca %struct.RegionView3D*, align 8
  %axis = alloca [3 x float], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9905, metadata !DIExpression()), !dbg !9906
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9907, metadata !DIExpression()), !dbg !9908
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !9909, metadata !DIExpression()), !dbg !9910
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !9911, metadata !DIExpression()), !dbg !9912
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9913
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !9914
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !9912
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d, metadata !9915, metadata !DIExpression()), !dbg !9918
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9919
  %call1 = call %struct.View3D* @CTX_wm_view3d(%struct.bContext* %1), !dbg !9920
  store %struct.View3D* %call1, %struct.View3D** %v3d, align 8, !dbg !9918
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !9921, metadata !DIExpression()), !dbg !9922
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9923
  %call2 = call %struct.RegionView3D* @ED_view3d_context_rv3d(%struct.bContext* %2), !dbg !9924
  store %struct.RegionView3D* %call2, %struct.RegionView3D** %rv3d, align 8, !dbg !9922
  call void @llvm.dbg.declare(metadata [3 x float]* %axis, metadata !9925, metadata !DIExpression()), !dbg !9926
  %3 = bitcast [3 x float]* %axis to i8*, !dbg !9926
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 bitcast ([3 x float]* @__const.spin_invoke.axis to i8*), i64 12, i1 false), !dbg !9926
  %4 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !9927
  %tobool = icmp ne %struct.RegionView3D* %4, null, !dbg !9927
  br i1 %tobool, label %if.then, label %if.end, !dbg !9929

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !9930
  %5 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !9931
  %viewinv = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %5, i32 0, i32 2, !dbg !9932
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 2, !dbg !9931
  %arraydecay3 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !9931
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay3), !dbg !9933
  br label %if.end, !dbg !9933

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9934
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !9935
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9935
  %8 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9936
  %9 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !9937
  %call4 = call float* @ED_view3d_cursor3d_get(%struct.Scene* %8, %struct.View3D* %9), !dbg !9938
  call void @RNA_float_set_array(%struct.PointerRNA* %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98, i64 0, i64 0), float* %call4), !dbg !9939
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9940
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 7, !dbg !9941
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !9941
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !9942
  call void @RNA_float_set_array(%struct.PointerRNA* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i64 0, i64 0), float* %arraydecay6), !dbg !9943
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9944
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9945
  %call7 = call i32 @spin_exec(%struct.bContext* %12, %struct.wmOperator* %13), !dbg !9946
  ret i32 %call7, !dbg !9947
}

declare dso_local i32 @ED_operator_editsurf(%struct.bContext*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_float_vector_xyz(i8*, i8*, i32, float*, float, float, i8*, i8*, float, float) #2

declare dso_local %struct.PropertyRNA* @RNA_def_float_vector(i8*, i8*, i32, float*, float, float, i8*, i8*, float, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_vertex_add(%struct.wmOperatorType* %ot) #0 !dbg !9948 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9949, metadata !DIExpression()), !dbg !9950
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9951
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9952
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.104, i64 0, i64 0), i8** %name, align 8, !dbg !9953
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9954
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !9955
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.105, i64 0, i64 0), i8** %idname, align 8, !dbg !9956
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9957
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !9958
  store i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.106, i64 0, i64 0), i8** %description, align 8, !dbg !9959
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9960
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !9961
  store i32 (%struct.bContext*, %struct.wmOperator*)* @add_vertex_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9962
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9963
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !9964
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @add_vertex_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !9965
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9966
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !9967
  store i32 (%struct.bContext*)* @ED_operator_editcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !9968
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9969
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !9970
  store i16 3, i16* %flag, align 8, !dbg !9971
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9972
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !9973
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !9973
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !9972
  %call = call %struct.PropertyRNA* @RNA_def_float_vector_xyz(i8* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.107, i64 0, i64 0), i32 3, float* null, float 0xC7EFFFFFE0000000, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.108, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.109, i64 0, i64 0), float -1.000000e+04, float 1.000000e+04), !dbg !9974
  ret void, !dbg !9975
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @add_vertex_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9976 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %location = alloca [3 x float], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9977, metadata !DIExpression()), !dbg !9978
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9979, metadata !DIExpression()), !dbg !9980
  call void @llvm.dbg.declare(metadata [3 x float]* %location, metadata !9981, metadata !DIExpression()), !dbg !9982
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9983
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !9984
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9984
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !9985
  call void @RNA_float_get_array(%struct.PointerRNA* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.107, i64 0, i64 0), float* %arraydecay), !dbg !9986
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9987
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !9988
  %call = call i32 @addvert_Nurb(%struct.bContext* %2, i16 signext 0, float* %arraydecay1), !dbg !9989
  ret i32 %call, !dbg !9990
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @add_vertex_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !9991 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %vc = alloca %struct.ViewContext, align 8
  %cu = alloca %struct.Curve*, align 8
  %location = alloca [3 x float], align 4
  %use_proj = alloca i8, align 1
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %mval31 = alloca [2 x float], align 4
  %no_dummy = alloca [3 x float], align 4
  %dist_px_dummy = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9992, metadata !DIExpression()), !dbg !9993
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9994, metadata !DIExpression()), !dbg !9995
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !9996, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.declare(metadata %struct.ViewContext* %vc, metadata !9998, metadata !DIExpression()), !dbg !9999
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10000
  call void @view3d_set_viewcontext(%struct.bContext* %0, %struct.ViewContext* %vc), !dbg !10001
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 5, !dbg !10002
  %1 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !10002
  %tobool = icmp ne %struct.RegionView3D* %1, null, !dbg !10004
  br i1 %tobool, label %land.lhs.true, label %if.end45, !dbg !10005

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10006
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !10007
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10007
  %call = call zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.107, i64 0, i64 0)), !dbg !10008
  %tobool1 = icmp ne i8 %call, 0, !dbg !10008
  br i1 %tobool1, label %if.end45, label %if.then, !dbg !10009

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !10010, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.declare(metadata [3 x float]* %location, metadata !10013, metadata !DIExpression()), !dbg !10014
  call void @llvm.dbg.declare(metadata i8* %use_proj, metadata !10015, metadata !DIExpression()), !dbg !10016
  %scene = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 0, !dbg !10017
  %4 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10017
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 20, !dbg !10018
  %5 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !10018
  %snap_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %5, i32 0, i32 54, !dbg !10019
  %6 = load i16, i16* %snap_flag, align 2, !dbg !10019
  %conv = sext i16 %6 to i32, !dbg !10020
  %and = and i32 %conv, 1, !dbg !10021
  %tobool2 = icmp ne i32 %and, 0, !dbg !10021
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !10022

land.rhs:                                         ; preds = %if.then
  %scene3 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 0, !dbg !10023
  %7 = load %struct.Scene*, %struct.Scene** %scene3, align 8, !dbg !10023
  %toolsettings4 = getelementptr inbounds %struct.Scene, %struct.Scene* %7, i32 0, i32 20, !dbg !10024
  %8 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings4, align 8, !dbg !10024
  %snap_mode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %8, i32 0, i32 51, !dbg !10025
  %9 = load i8, i8* %snap_mode, align 1, !dbg !10025
  %conv5 = zext i8 %9 to i32, !dbg !10026
  %cmp = icmp eq i32 %conv5, 3, !dbg !10027
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %10 = phi i1 [ false, %if.then ], [ %cmp, %land.rhs ], !dbg !10028
  %land.ext = zext i1 %10 to i32, !dbg !10022
  %conv7 = trunc i32 %land.ext to i8, !dbg !10029
  store i8 %conv7, i8* %use_proj, align 1, !dbg !10016
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !10030, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !10032, metadata !DIExpression()), !dbg !10033
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !10034, metadata !DIExpression()), !dbg !10035
  %obedit = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 2, !dbg !10036
  %11 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10036
  %data = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 19, !dbg !10037
  %12 = load i8*, i8** %data, align 8, !dbg !10037
  %13 = bitcast i8* %12 to %struct.Curve*, !dbg !10038
  store %struct.Curve* %13, %struct.Curve** %cu, align 8, !dbg !10039
  %14 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !10040
  %editnurb = getelementptr inbounds %struct.Curve, %struct.Curve* %14, i32 0, i32 4, !dbg !10041
  %15 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !10041
  %nurbs = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %15, i32 0, i32 0, !dbg !10042
  call void @findselectedNurbvert(%struct.ListBase* %nurbs, %struct.Nurb** %nu, %struct.BezTriple** %bezt, %struct.BPoint** %bp), !dbg !10043
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10044
  %tobool8 = icmp ne %struct.BezTriple* %16, null, !dbg !10044
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !10046

if.then9:                                         ; preds = %land.end
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !10047
  %obedit10 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 2, !dbg !10049
  %17 = load %struct.Object*, %struct.Object** %obedit10, align 8, !dbg !10049
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 47, !dbg !10050
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !10051
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10052
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %18, i32 0, i32 0, !dbg !10053
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 1, !dbg !10052
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !10052
  call void @mul_v3_m4v3(float* %arraydecay, [4 x float]* %arraydecay11, float* %arraydecay12), !dbg !10054
  br label %if.end25, !dbg !10055

if.else:                                          ; preds = %land.end
  %19 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10056
  %tobool13 = icmp ne %struct.BPoint* %19, null, !dbg !10056
  br i1 %tobool13, label %if.then14, label %if.else21, !dbg !10058

if.then14:                                        ; preds = %if.else
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !10059
  %obedit16 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 2, !dbg !10061
  %20 = load %struct.Object*, %struct.Object** %obedit16, align 8, !dbg !10061
  %obmat17 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 47, !dbg !10062
  %arraydecay18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat17, i64 0, i64 0, !dbg !10063
  %21 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10064
  %vec19 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %21, i32 0, i32 0, !dbg !10065
  %arraydecay20 = getelementptr inbounds [4 x float], [4 x float]* %vec19, i64 0, i64 0, !dbg !10064
  call void @mul_v3_m4v3(float* %arraydecay15, [4 x float]* %arraydecay18, float* %arraydecay20), !dbg !10066
  br label %if.end, !dbg !10067

if.else21:                                        ; preds = %if.else
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !10068
  %scene23 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 0, !dbg !10070
  %22 = load %struct.Scene*, %struct.Scene** %scene23, align 8, !dbg !10070
  %v3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 4, !dbg !10071
  %23 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !10071
  %call24 = call float* @ED_view3d_cursor3d_get(%struct.Scene* %22, %struct.View3D* %23), !dbg !10072
  call void @copy_v3_v3(float* %arraydecay22, float* %call24), !dbg !10073
  br label %if.end

if.end:                                           ; preds = %if.else21, %if.then14
  br label %if.end25

if.end25:                                         ; preds = %if.end, %if.then9
  %ar = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 3, !dbg !10074
  %24 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10074
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !10075
  %25 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10076
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %25, i32 0, i32 6, !dbg !10077
  %arraydecay27 = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !10076
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !10078
  call void @ED_view3d_win_to_3d_int(%struct.ARegion* %24, float* %arraydecay26, i32* %arraydecay27, float* %arraydecay28), !dbg !10079
  %26 = load i8, i8* %use_proj, align 1, !dbg !10080
  %tobool29 = icmp ne i8 %26, 0, !dbg !10080
  br i1 %tobool29, label %if.then30, label %if.end42, !dbg !10082

if.then30:                                        ; preds = %if.end25
  call void @llvm.dbg.declare(metadata [2 x float]* %mval31, metadata !10083, metadata !DIExpression()), !dbg !10086
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %mval31, i64 0, i64 0, !dbg !10087
  %27 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10088
  %mval32 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %27, i32 0, i32 6, !dbg !10088
  %arrayidx33 = getelementptr inbounds [2 x i32], [2 x i32]* %mval32, i64 0, i64 0, !dbg !10088
  %28 = load i32, i32* %arrayidx33, align 4, !dbg !10088
  %conv34 = sitofp i32 %28 to float, !dbg !10088
  store float %conv34, float* %arrayinit.begin, align 4, !dbg !10087
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !10087
  %29 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10088
  %mval35 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %29, i32 0, i32 6, !dbg !10088
  %arrayidx36 = getelementptr inbounds [2 x i32], [2 x i32]* %mval35, i64 0, i64 1, !dbg !10088
  %30 = load i32, i32* %arrayidx36, align 4, !dbg !10088
  %conv37 = sitofp i32 %30 to float, !dbg !10088
  store float %conv37, float* %arrayinit.element, align 4, !dbg !10087
  call void @llvm.dbg.declare(metadata [3 x float]* %no_dummy, metadata !10089, metadata !DIExpression()), !dbg !10090
  call void @llvm.dbg.declare(metadata float* %dist_px_dummy, metadata !10091, metadata !DIExpression()), !dbg !10092
  %31 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10093
  %arraydecay38 = getelementptr inbounds [2 x float], [2 x float]* %mval31, i64 0, i64 0, !dbg !10094
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !10095
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %no_dummy, i64 0, i64 0, !dbg !10096
  %call41 = call zeroext i8 @snapObjectsContext(%struct.bContext* %31, float* %arraydecay38, float* %dist_px_dummy, float* %arraydecay39, float* %arraydecay40, i32 2), !dbg !10097
  br label %if.end42, !dbg !10098

if.end42:                                         ; preds = %if.then30, %if.end25
  %32 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10099
  %ptr43 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %32, i32 0, i32 7, !dbg !10100
  %33 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr43, align 8, !dbg !10100
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !10101
  call void @RNA_float_set_array(%struct.PointerRNA* %33, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.107, i64 0, i64 0), float* %arraydecay44), !dbg !10102
  br label %if.end45, !dbg !10103

if.end45:                                         ; preds = %if.end42, %land.lhs.true, %entry
  %34 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10104
  %35 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10105
  %call46 = call i32 @add_vertex_exec(%struct.bContext* %34, %struct.wmOperator* %35), !dbg !10106
  ret i32 %call46, !dbg !10107
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_extrude(%struct.wmOperatorType* %ot) #0 !dbg !10108 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !10109, metadata !DIExpression()), !dbg !10110
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10111
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !10112
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.110, i64 0, i64 0), i8** %name, align 8, !dbg !10113
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10114
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !10115
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.111, i64 0, i64 0), i8** %description, align 8, !dbg !10116
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10117
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !10118
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.112, i64 0, i64 0), i8** %idname, align 8, !dbg !10119
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10120
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !10121
  store i32 (%struct.bContext*, %struct.wmOperator*)* @extrude_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !10122
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10123
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !10124
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !10125
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10126
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !10127
  store i16 3, i16* %flag, align 8, !dbg !10128
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10129
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !10130
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !10130
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !10129
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([0 x %struct.EnumPropertyItem], [0 x %struct.EnumPropertyItem]* @transform_mode_types, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i64 0, i64 0)), !dbg !10131
  ret void, !dbg !10132
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @extrude_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !10133 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %editnurb = alloca %struct.EditNurb*, align 8
  %nu = alloca %struct.Nurb*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10134, metadata !DIExpression()), !dbg !10135
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !10136, metadata !DIExpression()), !dbg !10137
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !10138, metadata !DIExpression()), !dbg !10139
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10140
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !10141
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !10139
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !10142, metadata !DIExpression()), !dbg !10143
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10144
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !10145
  %2 = load i8*, i8** %data, align 8, !dbg !10145
  %3 = bitcast i8* %2 to %struct.Curve*, !dbg !10144
  store %struct.Curve* %3, %struct.Curve** %cu, align 8, !dbg !10143
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb, metadata !10146, metadata !DIExpression()), !dbg !10147
  %4 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !10148
  %editnurb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %4, i32 0, i32 4, !dbg !10149
  %5 = load %struct.EditNurb*, %struct.EditNurb** %editnurb1, align 8, !dbg !10149
  store %struct.EditNurb* %5, %struct.EditNurb** %editnurb, align 8, !dbg !10147
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !10150, metadata !DIExpression()), !dbg !10151
  %6 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !10152
  %nurbs = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %6, i32 0, i32 0, !dbg !10154
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurbs, i32 0, i32 0, !dbg !10155
  %7 = load i8*, i8** %first, align 8, !dbg !10155
  %8 = bitcast i8* %7 to %struct.Nurb*, !dbg !10152
  store %struct.Nurb* %8, %struct.Nurb** %nu, align 8, !dbg !10156
  br label %for.cond, !dbg !10157

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10158
  %tobool = icmp ne %struct.Nurb* %9, null, !dbg !10160
  br i1 %tobool, label %for.body, label %for.end, !dbg !10160

for.body:                                         ; preds = %for.cond
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10161
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 7, !dbg !10163
  %11 = load i32, i32* %pntsv, align 4, !dbg !10163
  %cmp = icmp eq i32 %11, 1, !dbg !10164
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10165

land.lhs.true:                                    ; preds = %for.body
  %12 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !10166
  %13 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10167
  %call2 = call i32 @isNurbsel_count(%struct.Curve* %12, %struct.Nurb* %13), !dbg !10168
  %cmp3 = icmp eq i32 %call2, 1, !dbg !10169
  br i1 %cmp3, label %if.then, label %if.end, !dbg !10170

if.then:                                          ; preds = %land.lhs.true
  br label %for.end, !dbg !10171

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !10172

for.inc:                                          ; preds = %if.end
  %14 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10173
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 0, !dbg !10174
  %15 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !10174
  store %struct.Nurb* %15, %struct.Nurb** %nu, align 8, !dbg !10175
  br label %for.cond, !dbg !10176, !llvm.loop !10177

for.end:                                          ; preds = %if.then, %for.cond
  %16 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10179
  %type = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 3, !dbg !10181
  %17 = load i16, i16* %type, align 8, !dbg !10181
  %conv = sext i16 %17 to i32, !dbg !10179
  %cmp4 = icmp eq i32 %conv, 2, !dbg !10182
  br i1 %cmp4, label %if.then7, label %lor.lhs.false, !dbg !10183

lor.lhs.false:                                    ; preds = %for.end
  %18 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10184
  %tobool6 = icmp ne %struct.Nurb* %18, null, !dbg !10184
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !10185

if.then7:                                         ; preds = %lor.lhs.false, %for.end
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10186
  %call8 = call i32 @addvert_Nurb(%struct.bContext* %19, i16 signext 101, float* null), !dbg !10188
  br label %if.end20, !dbg !10189

if.else:                                          ; preds = %lor.lhs.false
  %20 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !10190
  %call9 = call zeroext i8 @ed_editnurb_extrude_flag(%struct.EditNurb* %20, i16 signext 1), !dbg !10193
  %tobool10 = icmp ne i8 %call9, 0, !dbg !10193
  br i1 %tobool10, label %if.then11, label %if.end19, !dbg !10194

if.then11:                                        ; preds = %if.else
  %21 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10195
  %data12 = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 19, !dbg !10198
  %22 = load i8*, i8** %data12, align 8, !dbg !10198
  %23 = bitcast i8* %22 to %struct.Curve*, !dbg !10195
  %call13 = call i32 @ED_curve_updateAnimPaths(%struct.Curve* %23), !dbg !10199
  %tobool14 = icmp ne i32 %call13, 0, !dbg !10199
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !10200

if.then15:                                        ; preds = %if.then11
  %24 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10201
  %25 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10202
  %26 = bitcast %struct.Object* %25 to i8*, !dbg !10202
  call void @WM_event_add_notifier(%struct.bContext* %24, i32 85524480, i8* %26), !dbg !10203
  br label %if.end16, !dbg !10203

if.end16:                                         ; preds = %if.then15, %if.then11
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10204
  %28 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10205
  %data17 = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 19, !dbg !10206
  %29 = load i8*, i8** %data17, align 8, !dbg !10206
  call void @WM_event_add_notifier(%struct.bContext* %27, i32 274399232, i8* %29), !dbg !10207
  %30 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10208
  %data18 = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 19, !dbg !10209
  %31 = load i8*, i8** %data18, align 8, !dbg !10209
  %32 = bitcast i8* %31 to %struct.ID*, !dbg !10208
  call void @DAG_id_tag_update(%struct.ID* %32, i16 signext 0), !dbg !10210
  br label %if.end19, !dbg !10211

if.end19:                                         ; preds = %if.end16, %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then7
  ret i32 4, !dbg !10212
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_cyclic_toggle(%struct.wmOperatorType* %ot) #0 !dbg !3217 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !10213, metadata !DIExpression()), !dbg !10214
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10215
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !10216
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.119, i64 0, i64 0), i8** %name, align 8, !dbg !10217
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10218
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !10219
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.120, i64 0, i64 0), i8** %description, align 8, !dbg !10220
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10221
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !10222
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.121, i64 0, i64 0), i8** %idname, align 8, !dbg !10223
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10224
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !10225
  store i32 (%struct.bContext*, %struct.wmOperator*)* @toggle_cyclic_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !10226
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10227
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !10228
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @toggle_cyclic_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !10229
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10230
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !10231
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !10232
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10233
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !10234
  store i16 3, i16* %flag, align 8, !dbg !10235
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10236
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !10237
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !10237
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !10236
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.122, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @CURVE_OT_cyclic_toggle.direction_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.123, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.124, i64 0, i64 0)), !dbg !10238
  ret void, !dbg !10239
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @toggle_cyclic_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10240 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  %direction = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10241, metadata !DIExpression()), !dbg !10242
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10243, metadata !DIExpression()), !dbg !10244
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !10245, metadata !DIExpression()), !dbg !10246
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10247
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !10248
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !10246
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !10249, metadata !DIExpression()), !dbg !10250
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10251
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !10252
  %2 = load i8*, i8** %data, align 8, !dbg !10252
  %3 = bitcast i8* %2 to %struct.Curve*, !dbg !10251
  store %struct.Curve* %3, %struct.Curve** %cu, align 8, !dbg !10250
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !10253, metadata !DIExpression()), !dbg !10254
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10255
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %4), !dbg !10256
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !10254
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !10257, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !10259, metadata !DIExpression()), !dbg !10260
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !10261, metadata !DIExpression()), !dbg !10262
  call void @llvm.dbg.declare(metadata i32* %a, metadata !10263, metadata !DIExpression()), !dbg !10264
  call void @llvm.dbg.declare(metadata i32* %direction, metadata !10265, metadata !DIExpression()), !dbg !10266
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10267
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !10268
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10268
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.122, i64 0, i64 0)), !dbg !10269
  store i32 %call2, i32* %direction, align 4, !dbg !10266
  %7 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !10270
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %7, i32 0, i32 0, !dbg !10272
  %8 = load i8*, i8** %first, align 8, !dbg !10272
  %9 = bitcast i8* %8 to %struct.Nurb*, !dbg !10270
  store %struct.Nurb* %9, %struct.Nurb** %nu, align 8, !dbg !10273
  br label %for.cond, !dbg !10274

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10275
  %tobool = icmp ne %struct.Nurb* %10, null, !dbg !10277
  br i1 %tobool, label %for.body, label %for.end, !dbg !10277

for.body:                                         ; preds = %for.cond
  %11 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10278
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 6, !dbg !10281
  %12 = load i32, i32* %pntsu, align 8, !dbg !10281
  %cmp = icmp sgt i32 %12, 1, !dbg !10282
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10283

lor.lhs.false:                                    ; preds = %for.body
  %13 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10284
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 7, !dbg !10285
  %14 = load i32, i32* %pntsv, align 4, !dbg !10285
  %cmp3 = icmp sgt i32 %14, 1, !dbg !10286
  br i1 %cmp3, label %if.then, label %if.end131, !dbg !10287

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %15 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10288
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %15, i32 0, i32 2, !dbg !10291
  %16 = load i16, i16* %type, align 8, !dbg !10291
  %conv = sext i16 %16 to i32, !dbg !10288
  %cmp4 = icmp eq i32 %conv, 0, !dbg !10292
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !10293

if.then6:                                         ; preds = %if.then
  %17 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10294
  %pntsu7 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %17, i32 0, i32 6, !dbg !10296
  %18 = load i32, i32* %pntsu7, align 8, !dbg !10296
  store i32 %18, i32* %a, align 4, !dbg !10297
  %19 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10298
  %bp8 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %19, i32 0, i32 17, !dbg !10299
  %20 = load %struct.BPoint*, %struct.BPoint** %bp8, align 8, !dbg !10299
  store %struct.BPoint* %20, %struct.BPoint** %bp, align 8, !dbg !10300
  br label %while.cond, !dbg !10301

while.cond:                                       ; preds = %if.end, %if.then6
  %21 = load i32, i32* %a, align 4, !dbg !10302
  %dec = add nsw i32 %21, -1, !dbg !10302
  store i32 %dec, i32* %a, align 4, !dbg !10302
  %tobool9 = icmp ne i32 %21, 0, !dbg !10301
  br i1 %tobool9, label %while.body, label %while.end, !dbg !10301

while.body:                                       ; preds = %while.cond
  %22 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10303
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %22, i32 0, i32 3, !dbg !10306
  %23 = load i16, i16* %f1, align 4, !dbg !10306
  %conv10 = sext i16 %23 to i32, !dbg !10303
  %and = and i32 %conv10, 1, !dbg !10307
  %tobool11 = icmp ne i32 %and, 0, !dbg !10307
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !10308

if.then12:                                        ; preds = %while.body
  %24 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10309
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %24, i32 0, i32 13, !dbg !10311
  %25 = load i16, i16* %flagu, align 4, !dbg !10312
  %conv13 = sext i16 %25 to i32, !dbg !10312
  %xor = xor i32 %conv13, 1, !dbg !10312
  %conv14 = trunc i32 %xor to i16, !dbg !10312
  store i16 %conv14, i16* %flagu, align 4, !dbg !10312
  br label %while.end, !dbg !10313

if.end:                                           ; preds = %while.body
  %26 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10314
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %26, i32 1, !dbg !10314
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp, align 8, !dbg !10314
  br label %while.cond, !dbg !10301, !llvm.loop !10315

while.end:                                        ; preds = %if.then12, %while.cond
  br label %if.end130, !dbg !10317

if.else:                                          ; preds = %if.then
  %27 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10318
  %type15 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %27, i32 0, i32 2, !dbg !10320
  %28 = load i16, i16* %type15, align 8, !dbg !10320
  %conv16 = sext i16 %28 to i32, !dbg !10318
  %cmp17 = icmp eq i32 %conv16, 1, !dbg !10321
  br i1 %cmp17, label %if.then19, label %if.else53, !dbg !10322

if.then19:                                        ; preds = %if.else
  %29 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10323
  %pntsu20 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %29, i32 0, i32 6, !dbg !10325
  %30 = load i32, i32* %pntsu20, align 8, !dbg !10325
  store i32 %30, i32* %a, align 4, !dbg !10326
  %31 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10327
  %bezt21 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %31, i32 0, i32 18, !dbg !10328
  %32 = load %struct.BezTriple*, %struct.BezTriple** %bezt21, align 8, !dbg !10328
  store %struct.BezTriple* %32, %struct.BezTriple** %bezt, align 8, !dbg !10329
  br label %while.cond22, !dbg !10330

while.cond22:                                     ; preds = %if.end50, %if.then19
  %33 = load i32, i32* %a, align 4, !dbg !10331
  %dec23 = add nsw i32 %33, -1, !dbg !10331
  store i32 %dec23, i32* %a, align 4, !dbg !10331
  %tobool24 = icmp ne i32 %33, 0, !dbg !10330
  br i1 %tobool24, label %while.body25, label %while.end52, !dbg !10330

while.body25:                                     ; preds = %while.cond22
  %34 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !10332
  %drawflag = getelementptr inbounds %struct.Curve, %struct.Curve* %34, i32 0, i32 16, !dbg !10332
  %35 = load i16, i16* %drawflag, align 8, !dbg !10332
  %conv26 = sext i16 %35 to i32, !dbg !10332
  %and27 = and i32 %conv26, 1, !dbg !10332
  %tobool28 = icmp ne i32 %and27, 0, !dbg !10332
  br i1 %tobool28, label %cond.true, label %cond.false, !dbg !10335

cond.true:                                        ; preds = %while.body25
  %36 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10332
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %36, i32 0, i32 8, !dbg !10332
  %37 = load i8, i8* %f2, align 4, !dbg !10332
  %conv29 = zext i8 %37 to i32, !dbg !10332
  %and30 = and i32 %conv29, 1, !dbg !10332
  %tobool31 = icmp ne i32 %and30, 0, !dbg !10332
  br i1 %tobool31, label %if.then45, label %if.end50, !dbg !10332

cond.false:                                       ; preds = %while.body25
  %38 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10332
  %f232 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %38, i32 0, i32 8, !dbg !10332
  %39 = load i8, i8* %f232, align 4, !dbg !10332
  %conv33 = zext i8 %39 to i32, !dbg !10332
  %and34 = and i32 %conv33, 1, !dbg !10332
  %tobool35 = icmp ne i32 %and34, 0, !dbg !10332
  br i1 %tobool35, label %if.then45, label %lor.lhs.false36, !dbg !10332

lor.lhs.false36:                                  ; preds = %cond.false
  %40 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10332
  %f137 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %40, i32 0, i32 7, !dbg !10332
  %41 = load i8, i8* %f137, align 1, !dbg !10332
  %conv38 = zext i8 %41 to i32, !dbg !10332
  %and39 = and i32 %conv38, 1, !dbg !10332
  %tobool40 = icmp ne i32 %and39, 0, !dbg !10332
  br i1 %tobool40, label %if.then45, label %lor.lhs.false41, !dbg !10332

lor.lhs.false41:                                  ; preds = %lor.lhs.false36
  %42 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10332
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %42, i32 0, i32 9, !dbg !10332
  %43 = load i8, i8* %f3, align 1, !dbg !10332
  %conv42 = zext i8 %43 to i32, !dbg !10332
  %and43 = and i32 %conv42, 1, !dbg !10332
  %tobool44 = icmp ne i32 %and43, 0, !dbg !10332
  br i1 %tobool44, label %if.then45, label %if.end50, !dbg !10335

if.then45:                                        ; preds = %lor.lhs.false41, %lor.lhs.false36, %cond.false, %cond.true
  %44 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10336
  %flagu46 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %44, i32 0, i32 13, !dbg !10338
  %45 = load i16, i16* %flagu46, align 4, !dbg !10339
  %conv47 = sext i16 %45 to i32, !dbg !10339
  %xor48 = xor i32 %conv47, 1, !dbg !10339
  %conv49 = trunc i32 %xor48 to i16, !dbg !10339
  store i16 %conv49, i16* %flagu46, align 4, !dbg !10339
  br label %while.end52, !dbg !10340

if.end50:                                         ; preds = %lor.lhs.false41, %cond.true
  %46 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10341
  %incdec.ptr51 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %46, i32 1, !dbg !10341
  store %struct.BezTriple* %incdec.ptr51, %struct.BezTriple** %bezt, align 8, !dbg !10341
  br label %while.cond22, !dbg !10330, !llvm.loop !10342

while.end52:                                      ; preds = %if.then45, %while.cond22
  %47 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10344
  call void @BKE_nurb_handles_calc(%struct.Nurb* %47), !dbg !10345
  br label %if.end129, !dbg !10346

if.else53:                                        ; preds = %if.else
  %48 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10347
  %pntsv54 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %48, i32 0, i32 7, !dbg !10349
  %49 = load i32, i32* %pntsv54, align 4, !dbg !10349
  %cmp55 = icmp eq i32 %49, 1, !dbg !10350
  br i1 %cmp55, label %land.lhs.true, label %if.else83, !dbg !10351

land.lhs.true:                                    ; preds = %if.else53
  %50 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10352
  %type57 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %50, i32 0, i32 2, !dbg !10353
  %51 = load i16, i16* %type57, align 8, !dbg !10353
  %conv58 = sext i16 %51 to i32, !dbg !10352
  %cmp59 = icmp eq i32 %conv58, 4, !dbg !10354
  br i1 %cmp59, label %if.then61, label %if.else83, !dbg !10355

if.then61:                                        ; preds = %land.lhs.true
  %52 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10356
  %knotsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %52, i32 0, i32 15, !dbg !10359
  %53 = load float*, float** %knotsu, align 8, !dbg !10359
  %tobool62 = icmp ne float* %53, null, !dbg !10356
  br i1 %tobool62, label %if.then63, label %if.end82, !dbg !10360

if.then63:                                        ; preds = %if.then61
  %54 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10361
  %pntsu64 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %54, i32 0, i32 6, !dbg !10363
  %55 = load i32, i32* %pntsu64, align 8, !dbg !10363
  store i32 %55, i32* %a, align 4, !dbg !10364
  %56 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10365
  %bp65 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %56, i32 0, i32 17, !dbg !10366
  %57 = load %struct.BPoint*, %struct.BPoint** %bp65, align 8, !dbg !10366
  store %struct.BPoint* %57, %struct.BPoint** %bp, align 8, !dbg !10367
  br label %while.cond66, !dbg !10368

while.cond66:                                     ; preds = %if.end79, %if.then63
  %58 = load i32, i32* %a, align 4, !dbg !10369
  %dec67 = add nsw i32 %58, -1, !dbg !10369
  store i32 %dec67, i32* %a, align 4, !dbg !10369
  %tobool68 = icmp ne i32 %58, 0, !dbg !10368
  br i1 %tobool68, label %while.body69, label %while.end81, !dbg !10368

while.body69:                                     ; preds = %while.cond66
  %59 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10370
  %f170 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %59, i32 0, i32 3, !dbg !10373
  %60 = load i16, i16* %f170, align 4, !dbg !10373
  %conv71 = sext i16 %60 to i32, !dbg !10370
  %and72 = and i32 %conv71, 1, !dbg !10374
  %tobool73 = icmp ne i32 %and72, 0, !dbg !10374
  br i1 %tobool73, label %if.then74, label %if.end79, !dbg !10375

if.then74:                                        ; preds = %while.body69
  %61 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10376
  %flagu75 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %61, i32 0, i32 13, !dbg !10378
  %62 = load i16, i16* %flagu75, align 4, !dbg !10379
  %conv76 = sext i16 %62 to i32, !dbg !10379
  %xor77 = xor i32 %conv76, 1, !dbg !10379
  %conv78 = trunc i32 %xor77 to i16, !dbg !10379
  store i16 %conv78, i16* %flagu75, align 4, !dbg !10379
  %63 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10380
  call void @BKE_nurb_knot_calc_u(%struct.Nurb* %63), !dbg !10381
  br label %while.end81, !dbg !10382

if.end79:                                         ; preds = %while.body69
  %64 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10383
  %incdec.ptr80 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %64, i32 1, !dbg !10383
  store %struct.BPoint* %incdec.ptr80, %struct.BPoint** %bp, align 8, !dbg !10383
  br label %while.cond66, !dbg !10368, !llvm.loop !10384

while.end81:                                      ; preds = %if.then74, %while.cond66
  br label %if.end82, !dbg !10386

if.end82:                                         ; preds = %while.end81, %if.then61
  br label %if.end128, !dbg !10387

if.else83:                                        ; preds = %land.lhs.true, %if.else53
  %65 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10388
  %type84 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %65, i32 0, i32 2, !dbg !10390
  %66 = load i16, i16* %type84, align 8, !dbg !10390
  %conv85 = sext i16 %66 to i32, !dbg !10388
  %cmp86 = icmp eq i32 %conv85, 4, !dbg !10391
  br i1 %cmp86, label %if.then88, label %if.end127, !dbg !10392

if.then88:                                        ; preds = %if.else83
  %67 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10393
  %pntsu89 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %67, i32 0, i32 6, !dbg !10395
  %68 = load i32, i32* %pntsu89, align 8, !dbg !10395
  %69 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10396
  %pntsv90 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %69, i32 0, i32 7, !dbg !10397
  %70 = load i32, i32* %pntsv90, align 4, !dbg !10397
  %mul = mul nsw i32 %68, %70, !dbg !10398
  store i32 %mul, i32* %a, align 4, !dbg !10399
  %71 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10400
  %bp91 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %71, i32 0, i32 17, !dbg !10401
  %72 = load %struct.BPoint*, %struct.BPoint** %bp91, align 8, !dbg !10401
  store %struct.BPoint* %72, %struct.BPoint** %bp, align 8, !dbg !10402
  br label %while.cond92, !dbg !10403

while.cond92:                                     ; preds = %if.end124, %if.then88
  %73 = load i32, i32* %a, align 4, !dbg !10404
  %dec93 = add nsw i32 %73, -1, !dbg !10404
  store i32 %dec93, i32* %a, align 4, !dbg !10404
  %tobool94 = icmp ne i32 %73, 0, !dbg !10403
  br i1 %tobool94, label %while.body95, label %while.end126, !dbg !10403

while.body95:                                     ; preds = %while.cond92
  %74 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10405
  %f196 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %74, i32 0, i32 3, !dbg !10408
  %75 = load i16, i16* %f196, align 4, !dbg !10408
  %conv97 = sext i16 %75 to i32, !dbg !10405
  %and98 = and i32 %conv97, 1, !dbg !10409
  %tobool99 = icmp ne i32 %and98, 0, !dbg !10409
  br i1 %tobool99, label %if.then100, label %if.end124, !dbg !10410

if.then100:                                       ; preds = %while.body95
  %76 = load i32, i32* %direction, align 4, !dbg !10411
  %cmp101 = icmp eq i32 %76, 0, !dbg !10414
  br i1 %cmp101, label %land.lhs.true103, label %if.end112, !dbg !10415

land.lhs.true103:                                 ; preds = %if.then100
  %77 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10416
  %pntsu104 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %77, i32 0, i32 6, !dbg !10417
  %78 = load i32, i32* %pntsu104, align 8, !dbg !10417
  %cmp105 = icmp sgt i32 %78, 1, !dbg !10418
  br i1 %cmp105, label %if.then107, label %if.end112, !dbg !10419

if.then107:                                       ; preds = %land.lhs.true103
  %79 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10420
  %flagu108 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %79, i32 0, i32 13, !dbg !10422
  %80 = load i16, i16* %flagu108, align 4, !dbg !10423
  %conv109 = sext i16 %80 to i32, !dbg !10423
  %xor110 = xor i32 %conv109, 1, !dbg !10423
  %conv111 = trunc i32 %xor110 to i16, !dbg !10423
  store i16 %conv111, i16* %flagu108, align 4, !dbg !10423
  %81 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10424
  call void @BKE_nurb_knot_calc_u(%struct.Nurb* %81), !dbg !10425
  br label %if.end112, !dbg !10426

if.end112:                                        ; preds = %if.then107, %land.lhs.true103, %if.then100
  %82 = load i32, i32* %direction, align 4, !dbg !10427
  %cmp113 = icmp eq i32 %82, 1, !dbg !10429
  br i1 %cmp113, label %land.lhs.true115, label %if.end123, !dbg !10430

land.lhs.true115:                                 ; preds = %if.end112
  %83 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10431
  %pntsv116 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %83, i32 0, i32 7, !dbg !10432
  %84 = load i32, i32* %pntsv116, align 4, !dbg !10432
  %cmp117 = icmp sgt i32 %84, 1, !dbg !10433
  br i1 %cmp117, label %if.then119, label %if.end123, !dbg !10434

if.then119:                                       ; preds = %land.lhs.true115
  %85 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10435
  %flagv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %85, i32 0, i32 14, !dbg !10437
  %86 = load i16, i16* %flagv, align 2, !dbg !10438
  %conv120 = sext i16 %86 to i32, !dbg !10438
  %xor121 = xor i32 %conv120, 1, !dbg !10438
  %conv122 = trunc i32 %xor121 to i16, !dbg !10438
  store i16 %conv122, i16* %flagv, align 2, !dbg !10438
  %87 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10439
  call void @BKE_nurb_knot_calc_v(%struct.Nurb* %87), !dbg !10440
  br label %if.end123, !dbg !10441

if.end123:                                        ; preds = %if.then119, %land.lhs.true115, %if.end112
  br label %while.end126, !dbg !10442

if.end124:                                        ; preds = %while.body95
  %88 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10443
  %incdec.ptr125 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %88, i32 1, !dbg !10443
  store %struct.BPoint* %incdec.ptr125, %struct.BPoint** %bp, align 8, !dbg !10443
  br label %while.cond92, !dbg !10403, !llvm.loop !10444

while.end126:                                     ; preds = %if.end123, %while.cond92
  br label %if.end127, !dbg !10446

if.end127:                                        ; preds = %while.end126, %if.else83
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.end82
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %while.end52
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %while.end
  br label %if.end131, !dbg !10447

if.end131:                                        ; preds = %if.end130, %lor.lhs.false
  br label %for.inc, !dbg !10448

for.inc:                                          ; preds = %if.end131
  %89 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10449
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %89, i32 0, i32 0, !dbg !10450
  %90 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !10450
  store %struct.Nurb* %90, %struct.Nurb** %nu, align 8, !dbg !10451
  br label %for.cond, !dbg !10452, !llvm.loop !10453

for.end:                                          ; preds = %for.cond
  %91 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10455
  %92 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10456
  %data132 = getelementptr inbounds %struct.Object, %struct.Object* %92, i32 0, i32 19, !dbg !10457
  %93 = load i8*, i8** %data132, align 8, !dbg !10457
  call void @WM_event_add_notifier(%struct.bContext* %91, i32 274399232, i8* %93), !dbg !10458
  %94 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10459
  %data133 = getelementptr inbounds %struct.Object, %struct.Object* %94, i32 0, i32 19, !dbg !10460
  %95 = load i8*, i8** %data133, align 8, !dbg !10460
  %96 = bitcast i8* %95 to %struct.ID*, !dbg !10459
  call void @DAG_id_tag_update(%struct.ID* %96, i16 signext 0), !dbg !10461
  ret i32 4, !dbg !10462
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @toggle_cyclic_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !10463 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %obedit = alloca %struct.Object*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %pup = alloca %struct.uiPopupMenu*, align 8
  %layout = alloca %struct.uiLayout*, align 8
  %nu = alloca %struct.Nurb*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10464, metadata !DIExpression()), !dbg !10465
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10466, metadata !DIExpression()), !dbg !10467
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !10468, metadata !DIExpression()), !dbg !10469
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !10470, metadata !DIExpression()), !dbg !10471
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10472
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !10473
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !10471
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !10474, metadata !DIExpression()), !dbg !10475
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10476
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %1), !dbg !10477
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !10475
  call void @llvm.dbg.declare(metadata %struct.uiPopupMenu** %pup, metadata !10478, metadata !DIExpression()), !dbg !10483
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout, metadata !10484, metadata !DIExpression()), !dbg !10487
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !10488, metadata !DIExpression()), !dbg !10489
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10490
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !10492
  %3 = load i16, i16* %type, align 8, !dbg !10492
  %conv = sext i16 %3 to i32, !dbg !10490
  %cmp = icmp eq i32 %conv, 3, !dbg !10493
  br i1 %cmp, label %if.then, label %if.end17, !dbg !10494

if.then:                                          ; preds = %entry
  %4 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !10495
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %4, i32 0, i32 0, !dbg !10498
  %5 = load i8*, i8** %first, align 8, !dbg !10498
  %6 = bitcast i8* %5 to %struct.Nurb*, !dbg !10495
  store %struct.Nurb* %6, %struct.Nurb** %nu, align 8, !dbg !10499
  br label %for.cond, !dbg !10500

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10501
  %tobool = icmp ne %struct.Nurb* %7, null, !dbg !10503
  br i1 %tobool, label %for.body, label %for.end, !dbg !10503

for.body:                                         ; preds = %for.cond
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10504
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 6, !dbg !10507
  %9 = load i32, i32* %pntsu, align 8, !dbg !10507
  %cmp3 = icmp sgt i32 %9, 1, !dbg !10508
  br i1 %cmp3, label %if.then7, label %lor.lhs.false, !dbg !10509

lor.lhs.false:                                    ; preds = %for.body
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10510
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 7, !dbg !10511
  %11 = load i32, i32* %pntsv, align 4, !dbg !10511
  %cmp5 = icmp sgt i32 %11, 1, !dbg !10512
  br i1 %cmp5, label %if.then7, label %if.end16, !dbg !10513

if.then7:                                         ; preds = %lor.lhs.false, %for.body
  %12 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10514
  %type8 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 2, !dbg !10517
  %13 = load i16, i16* %type8, align 8, !dbg !10517
  %conv9 = sext i16 %13 to i32, !dbg !10514
  %cmp10 = icmp eq i32 %conv9, 4, !dbg !10518
  br i1 %cmp10, label %if.then12, label %if.end, !dbg !10519

if.then12:                                        ; preds = %if.then7
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10520
  %call13 = call %struct.uiPopupMenu* @uiPupMenuBegin(%struct.bContext* %14, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.123, i64 0, i64 0), i32 0), !dbg !10522
  store %struct.uiPopupMenu* %call13, %struct.uiPopupMenu** %pup, align 8, !dbg !10523
  %15 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !10524
  %call14 = call %struct.uiLayout* @uiPupMenuLayout(%struct.uiPopupMenu* %15), !dbg !10525
  store %struct.uiLayout* %call14, %struct.uiLayout** %layout, align 8, !dbg !10526
  %16 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !10527
  %17 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10528
  %type15 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %17, i32 0, i32 4, !dbg !10529
  %18 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type15, align 8, !dbg !10529
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %18, i32 0, i32 1, !dbg !10530
  %19 = load i8*, i8** %idname, align 8, !dbg !10530
  call void @uiItemsEnumO(%struct.uiLayout* %16, i8* %19, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.122, i64 0, i64 0)), !dbg !10531
  %20 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10532
  %21 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !10533
  call void @uiPupMenuEnd(%struct.bContext* %20, %struct.uiPopupMenu* %21), !dbg !10534
  store i32 32, i32* %retval, align 4, !dbg !10535
  br label %return, !dbg !10535

if.end:                                           ; preds = %if.then7
  br label %if.end16, !dbg !10536

if.end16:                                         ; preds = %if.end, %lor.lhs.false
  br label %for.inc, !dbg !10537

for.inc:                                          ; preds = %if.end16
  %22 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10538
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %22, i32 0, i32 0, !dbg !10539
  %23 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !10539
  store %struct.Nurb* %23, %struct.Nurb** %nu, align 8, !dbg !10540
  br label %for.cond, !dbg !10541, !llvm.loop !10542

for.end:                                          ; preds = %for.cond
  br label %if.end17, !dbg !10544

if.end17:                                         ; preds = %for.end, %entry
  %24 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10545
  %25 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10546
  %call18 = call i32 @toggle_cyclic_exec(%struct.bContext* %24, %struct.wmOperator* %25), !dbg !10547
  store i32 %call18, i32* %retval, align 4, !dbg !10548
  br label %return, !dbg !10548

return:                                           ; preds = %if.end17, %if.then12
  %26 = load i32, i32* %retval, align 4, !dbg !10549
  ret i32 %26, !dbg !10549
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_select_linked(%struct.wmOperatorType* %ot) #0 !dbg !10550 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !10551, metadata !DIExpression()), !dbg !10552
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10553
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !10554
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.125, i64 0, i64 0), i8** %name, align 8, !dbg !10555
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10556
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !10557
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.126, i64 0, i64 0), i8** %idname, align 8, !dbg !10558
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10559
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !10560
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.127, i64 0, i64 0), i8** %description, align 8, !dbg !10561
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10562
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !10563
  store i32 (%struct.bContext*, %struct.wmOperator*)* @select_linked_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !10564
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10565
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !10566
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @select_linked_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !10567
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10568
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !10569
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !10570
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10571
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !10572
  store i16 3, i16* %flag, align 8, !dbg !10573
  ret void, !dbg !10574
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @select_linked_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !10575 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %editnurb = alloca %struct.EditNurb*, align 8
  %nurbs = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10576, metadata !DIExpression()), !dbg !10577
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !10578, metadata !DIExpression()), !dbg !10579
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !10580, metadata !DIExpression()), !dbg !10581
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10582
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !10583
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !10581
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !10584, metadata !DIExpression()), !dbg !10585
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10586
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !10587
  %2 = load i8*, i8** %data, align 8, !dbg !10587
  %3 = bitcast i8* %2 to %struct.Curve*, !dbg !10588
  store %struct.Curve* %3, %struct.Curve** %cu, align 8, !dbg !10585
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb, metadata !10589, metadata !DIExpression()), !dbg !10590
  %4 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !10591
  %editnurb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %4, i32 0, i32 4, !dbg !10592
  %5 = load %struct.EditNurb*, %struct.EditNurb** %editnurb1, align 8, !dbg !10592
  store %struct.EditNurb* %5, %struct.EditNurb** %editnurb, align 8, !dbg !10590
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nurbs, metadata !10593, metadata !DIExpression()), !dbg !10594
  %6 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !10595
  %nurbs2 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %6, i32 0, i32 0, !dbg !10596
  store %struct.ListBase* %nurbs2, %struct.ListBase** %nurbs, align 8, !dbg !10594
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !10597, metadata !DIExpression()), !dbg !10598
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !10599, metadata !DIExpression()), !dbg !10600
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !10601, metadata !DIExpression()), !dbg !10602
  call void @llvm.dbg.declare(metadata i32* %a, metadata !10603, metadata !DIExpression()), !dbg !10604
  %7 = load %struct.ListBase*, %struct.ListBase** %nurbs, align 8, !dbg !10605
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %7, i32 0, i32 0, !dbg !10607
  %8 = load i8*, i8** %first, align 8, !dbg !10607
  %9 = bitcast i8* %8 to %struct.Nurb*, !dbg !10605
  store %struct.Nurb* %9, %struct.Nurb** %nu, align 8, !dbg !10608
  br label %for.cond, !dbg !10609

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10610
  %tobool = icmp ne %struct.Nurb* %10, null, !dbg !10612
  br i1 %tobool, label %for.body, label %for.end, !dbg !10612

for.body:                                         ; preds = %for.cond
  %11 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10613
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 2, !dbg !10616
  %12 = load i16, i16* %type, align 8, !dbg !10616
  %conv = sext i16 %12 to i32, !dbg !10613
  %cmp = icmp eq i32 %conv, 1, !dbg !10617
  br i1 %cmp, label %if.then, label %if.else, !dbg !10618

if.then:                                          ; preds = %for.body
  %13 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10619
  %bezt4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 18, !dbg !10621
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt4, align 8, !dbg !10621
  store %struct.BezTriple* %14, %struct.BezTriple** %bezt, align 8, !dbg !10622
  %15 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10623
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %15, i32 0, i32 6, !dbg !10624
  %16 = load i32, i32* %pntsu, align 8, !dbg !10624
  store i32 %16, i32* %a, align 4, !dbg !10625
  br label %while.cond, !dbg !10626

while.cond:                                       ; preds = %if.end, %if.then
  %17 = load i32, i32* %a, align 4, !dbg !10627
  %dec = add nsw i32 %17, -1, !dbg !10627
  store i32 %dec, i32* %a, align 4, !dbg !10627
  %tobool5 = icmp ne i32 %17, 0, !dbg !10626
  br i1 %tobool5, label %while.body, label %while.end24, !dbg !10626

while.body:                                       ; preds = %while.cond
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10628
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %18, i32 0, i32 7, !dbg !10631
  %19 = load i8, i8* %f1, align 1, !dbg !10631
  %conv6 = zext i8 %19 to i32, !dbg !10628
  %and = and i32 %conv6, 1, !dbg !10632
  %tobool7 = icmp ne i32 %and, 0, !dbg !10632
  br i1 %tobool7, label %if.then15, label %lor.lhs.false, !dbg !10633

lor.lhs.false:                                    ; preds = %while.body
  %20 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10634
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %20, i32 0, i32 8, !dbg !10635
  %21 = load i8, i8* %f2, align 4, !dbg !10635
  %conv8 = zext i8 %21 to i32, !dbg !10634
  %and9 = and i32 %conv8, 1, !dbg !10636
  %tobool10 = icmp ne i32 %and9, 0, !dbg !10636
  br i1 %tobool10, label %if.then15, label %lor.lhs.false11, !dbg !10637

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %22 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10638
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %22, i32 0, i32 9, !dbg !10639
  %23 = load i8, i8* %f3, align 1, !dbg !10639
  %conv12 = zext i8 %23 to i32, !dbg !10638
  %and13 = and i32 %conv12, 1, !dbg !10640
  %tobool14 = icmp ne i32 %and13, 0, !dbg !10640
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !10641

if.then15:                                        ; preds = %lor.lhs.false11, %lor.lhs.false, %while.body
  %24 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10642
  %pntsu16 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %24, i32 0, i32 6, !dbg !10644
  %25 = load i32, i32* %pntsu16, align 8, !dbg !10644
  store i32 %25, i32* %a, align 4, !dbg !10645
  %26 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10646
  %bezt17 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %26, i32 0, i32 18, !dbg !10647
  %27 = load %struct.BezTriple*, %struct.BezTriple** %bezt17, align 8, !dbg !10647
  store %struct.BezTriple* %27, %struct.BezTriple** %bezt, align 8, !dbg !10648
  br label %while.cond18, !dbg !10649

while.cond18:                                     ; preds = %while.body21, %if.then15
  %28 = load i32, i32* %a, align 4, !dbg !10650
  %dec19 = add nsw i32 %28, -1, !dbg !10650
  store i32 %dec19, i32* %a, align 4, !dbg !10650
  %tobool20 = icmp ne i32 %28, 0, !dbg !10649
  br i1 %tobool20, label %while.body21, label %while.end, !dbg !10649

while.body21:                                     ; preds = %while.cond18
  %29 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10651
  %call22 = call zeroext i8 @select_beztriple(%struct.BezTriple* %29, i8 zeroext 1, i16 signext 1, i32 0), !dbg !10653
  %30 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10654
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %30, i32 1, !dbg !10654
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !10654
  br label %while.cond18, !dbg !10649, !llvm.loop !10655

while.end:                                        ; preds = %while.cond18
  br label %while.end24, !dbg !10657

if.end:                                           ; preds = %lor.lhs.false11
  %31 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10658
  %incdec.ptr23 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %31, i32 1, !dbg !10658
  store %struct.BezTriple* %incdec.ptr23, %struct.BezTriple** %bezt, align 8, !dbg !10658
  br label %while.cond, !dbg !10626, !llvm.loop !10659

while.end24:                                      ; preds = %while.end, %while.cond
  br label %if.end50, !dbg !10661

if.else:                                          ; preds = %for.body
  %32 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10662
  %bp25 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %32, i32 0, i32 17, !dbg !10664
  %33 = load %struct.BPoint*, %struct.BPoint** %bp25, align 8, !dbg !10664
  store %struct.BPoint* %33, %struct.BPoint** %bp, align 8, !dbg !10665
  %34 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10666
  %pntsu26 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %34, i32 0, i32 6, !dbg !10667
  %35 = load i32, i32* %pntsu26, align 8, !dbg !10667
  %36 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10668
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %36, i32 0, i32 7, !dbg !10669
  %37 = load i32, i32* %pntsv, align 4, !dbg !10669
  %mul = mul nsw i32 %35, %37, !dbg !10670
  store i32 %mul, i32* %a, align 4, !dbg !10671
  br label %while.cond27, !dbg !10672

while.cond27:                                     ; preds = %if.end47, %if.else
  %38 = load i32, i32* %a, align 4, !dbg !10673
  %dec28 = add nsw i32 %38, -1, !dbg !10673
  store i32 %dec28, i32* %a, align 4, !dbg !10673
  %tobool29 = icmp ne i32 %38, 0, !dbg !10672
  br i1 %tobool29, label %while.body30, label %while.end49, !dbg !10672

while.body30:                                     ; preds = %while.cond27
  %39 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10674
  %f131 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %39, i32 0, i32 3, !dbg !10677
  %40 = load i16, i16* %f131, align 4, !dbg !10677
  %conv32 = sext i16 %40 to i32, !dbg !10674
  %and33 = and i32 %conv32, 1, !dbg !10678
  %tobool34 = icmp ne i32 %and33, 0, !dbg !10678
  br i1 %tobool34, label %if.then35, label %if.end47, !dbg !10679

if.then35:                                        ; preds = %while.body30
  %41 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10680
  %pntsu36 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %41, i32 0, i32 6, !dbg !10682
  %42 = load i32, i32* %pntsu36, align 8, !dbg !10682
  %43 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10683
  %pntsv37 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %43, i32 0, i32 7, !dbg !10684
  %44 = load i32, i32* %pntsv37, align 4, !dbg !10684
  %mul38 = mul nsw i32 %42, %44, !dbg !10685
  store i32 %mul38, i32* %a, align 4, !dbg !10686
  %45 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10687
  %bp39 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %45, i32 0, i32 17, !dbg !10688
  %46 = load %struct.BPoint*, %struct.BPoint** %bp39, align 8, !dbg !10688
  store %struct.BPoint* %46, %struct.BPoint** %bp, align 8, !dbg !10689
  br label %while.cond40, !dbg !10690

while.cond40:                                     ; preds = %while.body43, %if.then35
  %47 = load i32, i32* %a, align 4, !dbg !10691
  %dec41 = add nsw i32 %47, -1, !dbg !10691
  store i32 %dec41, i32* %a, align 4, !dbg !10691
  %tobool42 = icmp ne i32 %47, 0, !dbg !10690
  br i1 %tobool42, label %while.body43, label %while.end46, !dbg !10690

while.body43:                                     ; preds = %while.cond40
  %48 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10692
  %call44 = call zeroext i8 @select_bpoint(%struct.BPoint* %48, i8 zeroext 1, i16 signext 1, i8 zeroext 0), !dbg !10694
  %49 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10695
  %incdec.ptr45 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %49, i32 1, !dbg !10695
  store %struct.BPoint* %incdec.ptr45, %struct.BPoint** %bp, align 8, !dbg !10695
  br label %while.cond40, !dbg !10690, !llvm.loop !10696

while.end46:                                      ; preds = %while.cond40
  br label %while.end49, !dbg !10698

if.end47:                                         ; preds = %while.body30
  %50 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10699
  %incdec.ptr48 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %50, i32 1, !dbg !10699
  store %struct.BPoint* %incdec.ptr48, %struct.BPoint** %bp, align 8, !dbg !10699
  br label %while.cond27, !dbg !10672, !llvm.loop !10700

while.end49:                                      ; preds = %while.end46, %while.cond27
  br label %if.end50

if.end50:                                         ; preds = %while.end49, %while.end24
  br label %for.inc, !dbg !10702

for.inc:                                          ; preds = %if.end50
  %51 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10703
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %51, i32 0, i32 0, !dbg !10704
  %52 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !10704
  store %struct.Nurb* %52, %struct.Nurb** %nu, align 8, !dbg !10705
  br label %for.cond, !dbg !10706, !llvm.loop !10707

for.end:                                          ; preds = %for.cond
  %53 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10709
  %54 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10710
  %data51 = getelementptr inbounds %struct.Object, %struct.Object* %54, i32 0, i32 19, !dbg !10711
  %55 = load i8*, i8** %data51, align 8, !dbg !10711
  call void @WM_event_add_notifier(%struct.bContext* %53, i32 274333696, i8* %55), !dbg !10712
  ret i32 4, !dbg !10713
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @select_linked_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !10714 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10715, metadata !DIExpression()), !dbg !10716
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10717, metadata !DIExpression()), !dbg !10718
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !10719, metadata !DIExpression()), !dbg !10720
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10721
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10722
  %call = call i32 @select_linked_exec(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !10723
  ret i32 %call, !dbg !10724
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_select_linked_pick(%struct.wmOperatorType* %ot) #0 !dbg !10725 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !10726, metadata !DIExpression()), !dbg !10727
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10728
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !10729
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.128, i64 0, i64 0), i8** %name, align 8, !dbg !10730
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10731
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !10732
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.129, i64 0, i64 0), i8** %idname, align 8, !dbg !10733
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10734
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !10735
  store i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.130, i64 0, i64 0), i8** %description, align 8, !dbg !10736
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10737
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !10738
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @select_linked_pick_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !10739
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10740
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !10741
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve_region_view3d, i32 (%struct.bContext*)** %poll, align 8, !dbg !10742
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10743
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !10744
  store i16 3, i16* %flag, align 8, !dbg !10745
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10746
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !10747
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !10747
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !10746
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.131, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.132, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.133, i64 0, i64 0)), !dbg !10748
  ret void, !dbg !10749
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @select_linked_pick_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !10750 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %obedit = alloca %struct.Object*, align 8
  %vc = alloca %struct.ViewContext, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  %select = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10751, metadata !DIExpression()), !dbg !10752
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10753, metadata !DIExpression()), !dbg !10754
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !10755, metadata !DIExpression()), !dbg !10756
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !10757, metadata !DIExpression()), !dbg !10758
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10759
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !10760
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !10758
  call void @llvm.dbg.declare(metadata %struct.ViewContext* %vc, metadata !10761, metadata !DIExpression()), !dbg !10762
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !10763, metadata !DIExpression()), !dbg !10764
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !10765, metadata !DIExpression()), !dbg !10766
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !10767, metadata !DIExpression()), !dbg !10768
  call void @llvm.dbg.declare(metadata i32* %a, metadata !10769, metadata !DIExpression()), !dbg !10770
  call void @llvm.dbg.declare(metadata i8* %select, metadata !10771, metadata !DIExpression()), !dbg !10772
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10773
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !10774
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10774
  %call1 = call i32 @RNA_boolean_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.131, i64 0, i64 0)), !dbg !10775
  %tobool = icmp ne i32 %call1, 0, !dbg !10776
  %lnot = xor i1 %tobool, true, !dbg !10776
  %lnot.ext = zext i1 %lnot to i32, !dbg !10776
  %conv = trunc i32 %lnot.ext to i8, !dbg !10776
  store i8 %conv, i8* %select, align 1, !dbg !10772
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10777
  call void @view3d_operator_needs_opengl(%struct.bContext* %3), !dbg !10778
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10779
  call void @view3d_set_viewcontext(%struct.bContext* %4, %struct.ViewContext* %vc), !dbg !10780
  %5 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10781
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %5, i32 0, i32 6, !dbg !10782
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !10781
  %call2 = call signext i16 @findnearestNurbvert(%struct.ViewContext* %vc, i16 signext 1, i32* %arraydecay, %struct.Nurb** %nu, %struct.BezTriple** %bezt, %struct.BPoint** %bp), !dbg !10783
  %6 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10784
  %tobool3 = icmp ne %struct.BezTriple* %6, null, !dbg !10784
  br i1 %tobool3, label %if.then, label %if.else, !dbg !10786

if.then:                                          ; preds = %entry
  %7 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10787
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %7, i32 0, i32 6, !dbg !10789
  %8 = load i32, i32* %pntsu, align 8, !dbg !10789
  store i32 %8, i32* %a, align 4, !dbg !10790
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10791
  %bezt4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 18, !dbg !10792
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt4, align 8, !dbg !10792
  store %struct.BezTriple* %10, %struct.BezTriple** %bezt, align 8, !dbg !10793
  br label %while.cond, !dbg !10794

while.cond:                                       ; preds = %while.body, %if.then
  %11 = load i32, i32* %a, align 4, !dbg !10795
  %dec = add nsw i32 %11, -1, !dbg !10795
  store i32 %dec, i32* %a, align 4, !dbg !10795
  %tobool5 = icmp ne i32 %11, 0, !dbg !10794
  br i1 %tobool5, label %while.body, label %while.end, !dbg !10794

while.body:                                       ; preds = %while.cond
  %12 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10796
  %13 = load i8, i8* %select, align 1, !dbg !10798
  %call6 = call zeroext i8 @select_beztriple(%struct.BezTriple* %12, i8 zeroext %13, i16 signext 1, i32 0), !dbg !10799
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10800
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %14, i32 1, !dbg !10800
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !10800
  br label %while.cond, !dbg !10794, !llvm.loop !10801

while.end:                                        ; preds = %while.cond
  br label %if.end18, !dbg !10803

if.else:                                          ; preds = %entry
  %15 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10804
  %tobool7 = icmp ne %struct.BPoint* %15, null, !dbg !10804
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !10806

if.then8:                                         ; preds = %if.else
  %16 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10807
  %pntsu9 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %16, i32 0, i32 6, !dbg !10809
  %17 = load i32, i32* %pntsu9, align 8, !dbg !10809
  %18 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10810
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %18, i32 0, i32 7, !dbg !10811
  %19 = load i32, i32* %pntsv, align 4, !dbg !10811
  %mul = mul nsw i32 %17, %19, !dbg !10812
  store i32 %mul, i32* %a, align 4, !dbg !10813
  %20 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10814
  %bp10 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %20, i32 0, i32 17, !dbg !10815
  %21 = load %struct.BPoint*, %struct.BPoint** %bp10, align 8, !dbg !10815
  store %struct.BPoint* %21, %struct.BPoint** %bp, align 8, !dbg !10816
  br label %while.cond11, !dbg !10817

while.cond11:                                     ; preds = %while.body14, %if.then8
  %22 = load i32, i32* %a, align 4, !dbg !10818
  %dec12 = add nsw i32 %22, -1, !dbg !10818
  store i32 %dec12, i32* %a, align 4, !dbg !10818
  %tobool13 = icmp ne i32 %22, 0, !dbg !10817
  br i1 %tobool13, label %while.body14, label %while.end17, !dbg !10817

while.body14:                                     ; preds = %while.cond11
  %23 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10819
  %24 = load i8, i8* %select, align 1, !dbg !10821
  %call15 = call zeroext i8 @select_bpoint(%struct.BPoint* %23, i8 zeroext %24, i16 signext 1, i8 zeroext 0), !dbg !10822
  %25 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10823
  %incdec.ptr16 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %25, i32 1, !dbg !10823
  store %struct.BPoint* %incdec.ptr16, %struct.BPoint** %bp, align 8, !dbg !10823
  br label %while.cond11, !dbg !10817, !llvm.loop !10824

while.end17:                                      ; preds = %while.cond11
  br label %if.end, !dbg !10826

if.end:                                           ; preds = %while.end17, %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end, %while.end
  %26 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10827
  %27 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10828
  %data = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 19, !dbg !10829
  %28 = load i8*, i8** %data, align 8, !dbg !10829
  call void @WM_event_add_notifier(%struct.bContext* %26, i32 274333696, i8* %28), !dbg !10830
  %29 = load i8, i8* %select, align 1, !dbg !10831
  %tobool19 = icmp ne i8 %29, 0, !dbg !10831
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !10833

if.then20:                                        ; preds = %if.end18
  %30 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10834
  %data21 = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 19, !dbg !10836
  %31 = load i8*, i8** %data21, align 8, !dbg !10836
  %32 = bitcast i8* %31 to %struct.Curve*, !dbg !10834
  call void @BKE_curve_nurb_vert_active_validate(%struct.Curve* %32), !dbg !10837
  br label %if.end22, !dbg !10838

if.end22:                                         ; preds = %if.then20, %if.end18
  ret i32 4, !dbg !10839
}

declare dso_local i32 @ED_operator_editsurfcurve_region_view3d(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_select_row(%struct.wmOperatorType* %ot) #0 !dbg !10840 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !10841, metadata !DIExpression()), !dbg !10842
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10843
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !10844
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.134, i64 0, i64 0), i8** %name, align 8, !dbg !10845
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10846
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !10847
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.135, i64 0, i64 0), i8** %idname, align 8, !dbg !10848
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10849
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !10850
  store i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.136, i64 0, i64 0), i8** %description, align 8, !dbg !10851
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10852
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !10853
  store i32 (%struct.bContext*, %struct.wmOperator*)* @select_row_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !10854
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10855
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !10856
  store i32 (%struct.bContext*)* @ED_operator_editsurf, i32 (%struct.bContext*)** %poll, align 8, !dbg !10857
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10858
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !10859
  store i16 3, i16* %flag, align 8, !dbg !10860
  ret void, !dbg !10861
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @select_row_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !3223 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10862, metadata !DIExpression()), !dbg !10863
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !10864, metadata !DIExpression()), !dbg !10865
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !10866, metadata !DIExpression()), !dbg !10867
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10868
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !10869
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !10867
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !10870, metadata !DIExpression()), !dbg !10871
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10872
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !10873
  %2 = load i8*, i8** %data, align 8, !dbg !10873
  %3 = bitcast i8* %2 to %struct.Curve*, !dbg !10872
  store %struct.Curve* %3, %struct.Curve** %cu, align 8, !dbg !10871
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !10874, metadata !DIExpression()), !dbg !10875
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10876
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %4), !dbg !10877
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !10875
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !10878, metadata !DIExpression()), !dbg !10879
  store %struct.Nurb* null, %struct.Nurb** %nu, align 8, !dbg !10879
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !10880, metadata !DIExpression()), !dbg !10881
  store %struct.BPoint* null, %struct.BPoint** %bp, align 8, !dbg !10881
  call void @llvm.dbg.declare(metadata i32* %u, metadata !10882, metadata !DIExpression()), !dbg !10883
  store i32 0, i32* %u, align 4, !dbg !10883
  call void @llvm.dbg.declare(metadata i32* %v, metadata !10884, metadata !DIExpression()), !dbg !10885
  store i32 0, i32* %v, align 4, !dbg !10885
  call void @llvm.dbg.declare(metadata i32* %a, metadata !10886, metadata !DIExpression()), !dbg !10887
  call void @llvm.dbg.declare(metadata i32* %b, metadata !10888, metadata !DIExpression()), !dbg !10889
  %5 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !10890
  %6 = bitcast %struct.BPoint** %bp to i8*, !dbg !10892
  %7 = bitcast i8* %6 to i8**, !dbg !10892
  %call2 = call zeroext i8 @BKE_curve_nurb_vert_active_get(%struct.Curve* %5, %struct.Nurb** %nu, i8** %7), !dbg !10893
  %tobool = icmp ne i8 %call2, 0, !dbg !10893
  br i1 %tobool, label %if.end, label %if.then, !dbg !10894

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !10895
  br label %return, !dbg !10895

if.end:                                           ; preds = %entry
  %8 = load %struct.BPoint*, %struct.BPoint** @select_row_exec.last, align 8, !dbg !10896
  %9 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10898
  %cmp = icmp eq %struct.BPoint* %8, %9, !dbg !10899
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !10900

if.then3:                                         ; preds = %if.end
  %10 = load i32, i32* @select_row_exec.direction, align 4, !dbg !10901
  %sub = sub nsw i32 1, %10, !dbg !10903
  store i32 %sub, i32* @select_row_exec.direction, align 4, !dbg !10904
  %11 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !10905
  call void @BKE_nurbList_flag_set(%struct.ListBase* %11, i16 signext 0), !dbg !10906
  br label %if.end4, !dbg !10907

if.end4:                                          ; preds = %if.then3, %if.end
  %12 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10908
  store %struct.BPoint* %12, %struct.BPoint** @select_row_exec.last, align 8, !dbg !10909
  %13 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !10910
  %actvert = getelementptr inbounds %struct.Curve, %struct.Curve* %13, i32 0, i32 32, !dbg !10911
  %14 = load i32, i32* %actvert, align 8, !dbg !10911
  %15 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10912
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %15, i32 0, i32 6, !dbg !10913
  %16 = load i32, i32* %pntsu, align 8, !dbg !10913
  %rem = srem i32 %14, %16, !dbg !10914
  store i32 %rem, i32* %u, align 4, !dbg !10915
  %17 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !10916
  %actvert5 = getelementptr inbounds %struct.Curve, %struct.Curve* %17, i32 0, i32 32, !dbg !10917
  %18 = load i32, i32* %actvert5, align 8, !dbg !10917
  %19 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10918
  %pntsu6 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %19, i32 0, i32 6, !dbg !10919
  %20 = load i32, i32* %pntsu6, align 8, !dbg !10919
  %div = sdiv i32 %18, %20, !dbg !10920
  store i32 %div, i32* %v, align 4, !dbg !10921
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10922
  %bp7 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 17, !dbg !10923
  %22 = load %struct.BPoint*, %struct.BPoint** %bp7, align 8, !dbg !10923
  store %struct.BPoint* %22, %struct.BPoint** %bp, align 8, !dbg !10924
  store i32 0, i32* %a, align 4, !dbg !10925
  br label %for.cond, !dbg !10927

for.cond:                                         ; preds = %for.inc24, %if.end4
  %23 = load i32, i32* %a, align 4, !dbg !10928
  %24 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10930
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %24, i32 0, i32 7, !dbg !10931
  %25 = load i32, i32* %pntsv, align 4, !dbg !10931
  %cmp8 = icmp slt i32 %23, %25, !dbg !10932
  br i1 %cmp8, label %for.body, label %for.end26, !dbg !10933

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %b, align 4, !dbg !10934
  br label %for.cond9, !dbg !10937

for.cond9:                                        ; preds = %for.inc, %for.body
  %26 = load i32, i32* %b, align 4, !dbg !10938
  %27 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !10940
  %pntsu10 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %27, i32 0, i32 6, !dbg !10941
  %28 = load i32, i32* %pntsu10, align 8, !dbg !10941
  %cmp11 = icmp slt i32 %26, %28, !dbg !10942
  br i1 %cmp11, label %for.body12, label %for.end, !dbg !10943

for.body12:                                       ; preds = %for.cond9
  %29 = load i32, i32* @select_row_exec.direction, align 4, !dbg !10944
  %tobool13 = icmp ne i32 %29, 0, !dbg !10944
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !10947

if.then14:                                        ; preds = %for.body12
  %30 = load i32, i32* %a, align 4, !dbg !10948
  %31 = load i32, i32* %v, align 4, !dbg !10951
  %cmp15 = icmp eq i32 %30, %31, !dbg !10952
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !10953

if.then16:                                        ; preds = %if.then14
  %32 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10954
  %call17 = call zeroext i8 @select_bpoint(%struct.BPoint* %32, i8 zeroext 1, i16 signext 1, i8 zeroext 0), !dbg !10955
  br label %if.end18, !dbg !10955

if.end18:                                         ; preds = %if.then16, %if.then14
  br label %if.end23, !dbg !10956

if.else:                                          ; preds = %for.body12
  %33 = load i32, i32* %b, align 4, !dbg !10957
  %34 = load i32, i32* %u, align 4, !dbg !10960
  %cmp19 = icmp eq i32 %33, %34, !dbg !10961
  br i1 %cmp19, label %if.then20, label %if.end22, !dbg !10962

if.then20:                                        ; preds = %if.else
  %35 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10963
  %call21 = call zeroext i8 @select_bpoint(%struct.BPoint* %35, i8 zeroext 1, i16 signext 1, i8 zeroext 0), !dbg !10964
  br label %if.end22, !dbg !10964

if.end22:                                         ; preds = %if.then20, %if.else
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.end18
  br label %for.inc, !dbg !10965

for.inc:                                          ; preds = %if.end23
  %36 = load i32, i32* %b, align 4, !dbg !10966
  %inc = add nsw i32 %36, 1, !dbg !10966
  store i32 %inc, i32* %b, align 4, !dbg !10966
  %37 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10967
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %37, i32 1, !dbg !10967
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp, align 8, !dbg !10967
  br label %for.cond9, !dbg !10968, !llvm.loop !10969

for.end:                                          ; preds = %for.cond9
  br label %for.inc24, !dbg !10971

for.inc24:                                        ; preds = %for.end
  %38 = load i32, i32* %a, align 4, !dbg !10972
  %inc25 = add nsw i32 %38, 1, !dbg !10972
  store i32 %inc25, i32* %a, align 4, !dbg !10972
  br label %for.cond, !dbg !10973, !llvm.loop !10974

for.end26:                                        ; preds = %for.cond
  %39 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10976
  %40 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10977
  %data27 = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 19, !dbg !10978
  %41 = load i8*, i8** %data27, align 8, !dbg !10978
  call void @WM_event_add_notifier(%struct.bContext* %39, i32 274333696, i8* %41), !dbg !10979
  store i32 4, i32* %retval, align 4, !dbg !10980
  br label %return, !dbg !10980

return:                                           ; preds = %for.end26, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !10981
  ret i32 %42, !dbg !10981
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_select_next(%struct.wmOperatorType* %ot) #0 !dbg !10982 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !10983, metadata !DIExpression()), !dbg !10984
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10985
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !10986
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.137, i64 0, i64 0), i8** %name, align 8, !dbg !10987
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10988
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !10989
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.138, i64 0, i64 0), i8** %idname, align 8, !dbg !10990
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10991
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !10992
  store i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.139, i64 0, i64 0), i8** %description, align 8, !dbg !10993
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10994
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !10995
  store i32 (%struct.bContext*, %struct.wmOperator*)* @select_next_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !10996
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10997
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !10998
  store i32 (%struct.bContext*)* @ED_operator_editcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !10999
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11000
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !11001
  store i16 3, i16* %flag, align 8, !dbg !11002
  ret void, !dbg !11003
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @select_next_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !11004 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11005, metadata !DIExpression()), !dbg !11006
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !11007, metadata !DIExpression()), !dbg !11008
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !11009, metadata !DIExpression()), !dbg !11010
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11011
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !11012
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !11010
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !11013, metadata !DIExpression()), !dbg !11014
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11015
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %1), !dbg !11016
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !11014
  %2 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !11017
  call void @select_adjacent_cp(%struct.ListBase* %2, i16 signext 1, i8 zeroext 0, i8 zeroext 1), !dbg !11018
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11019
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11020
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !11021
  %5 = load i8*, i8** %data, align 8, !dbg !11021
  call void @WM_event_add_notifier(%struct.bContext* %3, i32 274333696, i8* %5), !dbg !11022
  ret i32 4, !dbg !11023
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_select_previous(%struct.wmOperatorType* %ot) #0 !dbg !11024 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !11025, metadata !DIExpression()), !dbg !11026
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11027
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !11028
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.140, i64 0, i64 0), i8** %name, align 8, !dbg !11029
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11030
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !11031
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.141, i64 0, i64 0), i8** %idname, align 8, !dbg !11032
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11033
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !11034
  store i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.142, i64 0, i64 0), i8** %description, align 8, !dbg !11035
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11036
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !11037
  store i32 (%struct.bContext*, %struct.wmOperator*)* @select_previous_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !11038
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11039
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !11040
  store i32 (%struct.bContext*)* @ED_operator_editcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !11041
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11042
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !11043
  store i16 3, i16* %flag, align 8, !dbg !11044
  ret void, !dbg !11045
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @select_previous_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !11046 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11047, metadata !DIExpression()), !dbg !11048
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !11049, metadata !DIExpression()), !dbg !11050
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !11051, metadata !DIExpression()), !dbg !11052
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11053
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !11054
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !11052
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !11055, metadata !DIExpression()), !dbg !11056
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11057
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %1), !dbg !11058
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !11056
  %2 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !11059
  call void @select_adjacent_cp(%struct.ListBase* %2, i16 signext -1, i8 zeroext 0, i8 zeroext 1), !dbg !11060
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11061
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11062
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !11063
  %5 = load i8*, i8** %data, align 8, !dbg !11063
  call void @WM_event_add_notifier(%struct.bContext* %3, i32 274333696, i8* %5), !dbg !11064
  ret i32 4, !dbg !11065
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_select_more(%struct.wmOperatorType* %ot) #0 !dbg !11066 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !11067, metadata !DIExpression()), !dbg !11068
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11069
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !11070
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.143, i64 0, i64 0), i8** %name, align 8, !dbg !11071
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11072
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !11073
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.144, i64 0, i64 0), i8** %idname, align 8, !dbg !11074
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11075
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !11076
  store i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.145, i64 0, i64 0), i8** %description, align 8, !dbg !11077
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11078
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !11079
  store i32 (%struct.bContext*, %struct.wmOperator*)* @select_more_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !11080
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11081
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !11082
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !11083
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11084
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !11085
  store i16 3, i16* %flag, align 8, !dbg !11086
  ret void, !dbg !11087
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @select_more_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !11088 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %tempbp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  %sel = alloca i16, align 2
  %selbpoints = alloca i32*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11089, metadata !DIExpression()), !dbg !11090
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !11091, metadata !DIExpression()), !dbg !11092
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !11093, metadata !DIExpression()), !dbg !11094
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11095
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !11096
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !11094
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !11097, metadata !DIExpression()), !dbg !11098
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11099
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %1), !dbg !11100
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !11098
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !11101, metadata !DIExpression()), !dbg !11102
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !11103, metadata !DIExpression()), !dbg !11104
  call void @llvm.dbg.declare(metadata %struct.BPoint** %tempbp, metadata !11105, metadata !DIExpression()), !dbg !11106
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11107, metadata !DIExpression()), !dbg !11108
  call void @llvm.dbg.declare(metadata i16* %sel, metadata !11109, metadata !DIExpression()), !dbg !11110
  store i16 0, i16* %sel, align 2, !dbg !11110
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11111
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !11113
  %3 = load i16, i16* %type, align 8, !dbg !11113
  %conv = sext i16 %3 to i32, !dbg !11111
  %cmp = icmp eq i32 %conv, 3, !dbg !11114
  br i1 %cmp, label %if.then, label %if.else, !dbg !11115

if.then:                                          ; preds = %entry
  %4 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !11116
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %4, i32 0, i32 0, !dbg !11119
  %5 = load i8*, i8** %first, align 8, !dbg !11119
  %6 = bitcast i8* %5 to %struct.Nurb*, !dbg !11116
  store %struct.Nurb* %6, %struct.Nurb** %nu, align 8, !dbg !11120
  br label %for.cond, !dbg !11121

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11122
  %tobool = icmp ne %struct.Nurb* %7, null, !dbg !11124
  br i1 %tobool, label %for.body, label %for.end, !dbg !11124

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32** %selbpoints, metadata !11125, metadata !DIExpression()), !dbg !11127
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11128
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 6, !dbg !11129
  %9 = load i32, i32* %pntsu, align 8, !dbg !11129
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11130
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 7, !dbg !11131
  %11 = load i32, i32* %pntsv, align 4, !dbg !11131
  %mul = mul nsw i32 %9, %11, !dbg !11132
  store i32 %mul, i32* %a, align 4, !dbg !11133
  %12 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11134
  %bp3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 17, !dbg !11135
  %13 = load %struct.BPoint*, %struct.BPoint** %bp3, align 8, !dbg !11135
  store %struct.BPoint* %13, %struct.BPoint** %bp, align 8, !dbg !11136
  %14 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !11137
  %15 = load i32, i32* %a, align 4, !dbg !11137
  %shr = ashr i32 %15, 5, !dbg !11137
  %add = add nsw i32 %shr, 1, !dbg !11137
  %conv4 = sext i32 %add to i64, !dbg !11137
  %mul5 = mul i64 %conv4, 4, !dbg !11137
  %call6 = call i8* %14(i64 %mul5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.219, i64 0, i64 0)), !dbg !11137
  %16 = bitcast i8* %call6 to i32*, !dbg !11137
  store i32* %16, i32** %selbpoints, align 8, !dbg !11138
  br label %while.cond, !dbg !11139

while.cond:                                       ; preds = %if.end97, %for.body
  %17 = load i32, i32* %a, align 4, !dbg !11140
  %cmp7 = icmp sgt i32 %17, 0, !dbg !11141
  br i1 %cmp7, label %while.body, label %while.end, !dbg !11139

while.body:                                       ; preds = %while.cond
  %18 = load i32*, i32** %selbpoints, align 8, !dbg !11142
  %19 = load i32, i32* %a, align 4, !dbg !11142
  %shr9 = ashr i32 %19, 5, !dbg !11142
  %idxprom = sext i32 %shr9 to i64, !dbg !11142
  %arrayidx = getelementptr inbounds i32, i32* %18, i64 %idxprom, !dbg !11142
  %20 = load i32, i32* %arrayidx, align 4, !dbg !11142
  %21 = load i32, i32* %a, align 4, !dbg !11142
  %and = and i32 %21, 31, !dbg !11142
  %shl = shl i32 1, %and, !dbg !11142
  %and10 = and i32 %20, %shl, !dbg !11142
  %tobool11 = icmp ne i32 %and10, 0, !dbg !11142
  br i1 %tobool11, label %if.end97, label %land.lhs.true, !dbg !11145

land.lhs.true:                                    ; preds = %while.body
  %22 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11146
  %hide = getelementptr inbounds %struct.BPoint, %struct.BPoint* %22, i32 0, i32 4, !dbg !11147
  %23 = load i16, i16* %hide, align 2, !dbg !11147
  %conv12 = sext i16 %23 to i32, !dbg !11146
  %cmp13 = icmp eq i32 %conv12, 0, !dbg !11148
  br i1 %cmp13, label %land.lhs.true15, label %if.end97, !dbg !11149

land.lhs.true15:                                  ; preds = %land.lhs.true
  %24 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11150
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %24, i32 0, i32 3, !dbg !11151
  %25 = load i16, i16* %f1, align 4, !dbg !11151
  %conv16 = sext i16 %25 to i32, !dbg !11150
  %and17 = and i32 %conv16, 1, !dbg !11152
  %tobool18 = icmp ne i32 %and17, 0, !dbg !11152
  br i1 %tobool18, label %if.then19, label %if.end97, !dbg !11153

if.then19:                                        ; preds = %land.lhs.true15
  %26 = load i32, i32* %a, align 4, !dbg !11154
  %27 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11157
  %pntsu20 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %27, i32 0, i32 6, !dbg !11158
  %28 = load i32, i32* %pntsu20, align 8, !dbg !11158
  %rem = srem i32 %26, %28, !dbg !11159
  %cmp21 = icmp ne i32 %rem, 0, !dbg !11160
  br i1 %cmp21, label %if.then23, label %if.end30, !dbg !11161

if.then23:                                        ; preds = %if.then19
  %29 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11162
  %add.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %29, i64 -1, !dbg !11164
  store %struct.BPoint* %add.ptr, %struct.BPoint** %tempbp, align 8, !dbg !11165
  %30 = load %struct.BPoint*, %struct.BPoint** %tempbp, align 8, !dbg !11166
  %f124 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %30, i32 0, i32 3, !dbg !11168
  %31 = load i16, i16* %f124, align 4, !dbg !11168
  %conv25 = sext i16 %31 to i32, !dbg !11166
  %and26 = and i32 %conv25, 1, !dbg !11169
  %tobool27 = icmp ne i32 %and26, 0, !dbg !11169
  br i1 %tobool27, label %if.end, label %if.then28, !dbg !11170

if.then28:                                        ; preds = %if.then23
  %32 = load %struct.BPoint*, %struct.BPoint** %tempbp, align 8, !dbg !11171
  %call29 = call zeroext i8 @select_bpoint(%struct.BPoint* %32, i8 zeroext 1, i16 signext 1, i8 zeroext 0), !dbg !11172
  br label %if.end, !dbg !11172

if.end:                                           ; preds = %if.then28, %if.then23
  br label %if.end30, !dbg !11173

if.end30:                                         ; preds = %if.end, %if.then19
  %33 = load i32, i32* %a, align 4, !dbg !11174
  %34 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11176
  %pntsu31 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %34, i32 0, i32 6, !dbg !11177
  %35 = load i32, i32* %pntsu31, align 8, !dbg !11177
  %sub = sub nsw i32 %33, %35, !dbg !11178
  %cmp32 = icmp sgt i32 %sub, 0, !dbg !11179
  br i1 %cmp32, label %if.then34, label %if.end59, !dbg !11180

if.then34:                                        ; preds = %if.end30
  store i16 0, i16* %sel, align 2, !dbg !11181
  %36 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11183
  %37 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11184
  %pntsu35 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %37, i32 0, i32 6, !dbg !11185
  %38 = load i32, i32* %pntsu35, align 8, !dbg !11185
  %idx.ext = sext i32 %38 to i64, !dbg !11186
  %add.ptr36 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %36, i64 %idx.ext, !dbg !11186
  store %struct.BPoint* %add.ptr36, %struct.BPoint** %tempbp, align 8, !dbg !11187
  %39 = load %struct.BPoint*, %struct.BPoint** %tempbp, align 8, !dbg !11188
  %f137 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %39, i32 0, i32 3, !dbg !11190
  %40 = load i16, i16* %f137, align 4, !dbg !11190
  %conv38 = sext i16 %40 to i32, !dbg !11188
  %and39 = and i32 %conv38, 1, !dbg !11191
  %tobool40 = icmp ne i32 %and39, 0, !dbg !11191
  br i1 %tobool40, label %if.end44, label %if.then41, !dbg !11192

if.then41:                                        ; preds = %if.then34
  %41 = load %struct.BPoint*, %struct.BPoint** %tempbp, align 8, !dbg !11193
  %call42 = call zeroext i8 @select_bpoint(%struct.BPoint* %41, i8 zeroext 1, i16 signext 1, i8 zeroext 0), !dbg !11194
  %conv43 = zext i8 %call42 to i16, !dbg !11194
  store i16 %conv43, i16* %sel, align 2, !dbg !11195
  br label %if.end44, !dbg !11196

if.end44:                                         ; preds = %if.then41, %if.then34
  %42 = load i16, i16* %sel, align 2, !dbg !11197
  %conv45 = sext i16 %42 to i32, !dbg !11197
  %cmp46 = icmp eq i32 %conv45, 1, !dbg !11199
  br i1 %cmp46, label %if.then48, label %if.end58, !dbg !11200

if.then48:                                        ; preds = %if.end44
  %43 = load i32, i32* %a, align 4, !dbg !11201
  %44 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11201
  %pntsu49 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %44, i32 0, i32 6, !dbg !11201
  %45 = load i32, i32* %pntsu49, align 8, !dbg !11201
  %sub50 = sub nsw i32 %43, %45, !dbg !11201
  %and51 = and i32 %sub50, 31, !dbg !11201
  %shl52 = shl i32 1, %and51, !dbg !11201
  %46 = load i32*, i32** %selbpoints, align 8, !dbg !11201
  %47 = load i32, i32* %a, align 4, !dbg !11201
  %48 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11201
  %pntsu53 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %48, i32 0, i32 6, !dbg !11201
  %49 = load i32, i32* %pntsu53, align 8, !dbg !11201
  %sub54 = sub nsw i32 %47, %49, !dbg !11201
  %shr55 = ashr i32 %sub54, 5, !dbg !11201
  %idxprom56 = sext i32 %shr55 to i64, !dbg !11201
  %arrayidx57 = getelementptr inbounds i32, i32* %46, i64 %idxprom56, !dbg !11201
  %50 = load i32, i32* %arrayidx57, align 4, !dbg !11201
  %or = or i32 %50, %shl52, !dbg !11201
  store i32 %or, i32* %arrayidx57, align 4, !dbg !11201
  br label %if.end58, !dbg !11201

if.end58:                                         ; preds = %if.then48, %if.end44
  br label %if.end59, !dbg !11202

if.end59:                                         ; preds = %if.end58, %if.end30
  %51 = load i32, i32* %a, align 4, !dbg !11203
  %52 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11205
  %pntsu60 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %52, i32 0, i32 6, !dbg !11206
  %53 = load i32, i32* %pntsu60, align 8, !dbg !11206
  %add61 = add nsw i32 %51, %53, !dbg !11207
  %54 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11208
  %pntsu62 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %54, i32 0, i32 6, !dbg !11209
  %55 = load i32, i32* %pntsu62, align 8, !dbg !11209
  %56 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11210
  %pntsv63 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %56, i32 0, i32 7, !dbg !11211
  %57 = load i32, i32* %pntsv63, align 4, !dbg !11211
  %mul64 = mul nsw i32 %55, %57, !dbg !11212
  %cmp65 = icmp slt i32 %add61, %mul64, !dbg !11213
  br i1 %cmp65, label %if.then67, label %if.end78, !dbg !11214

if.then67:                                        ; preds = %if.end59
  %58 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11215
  %59 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11217
  %pntsu68 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %59, i32 0, i32 6, !dbg !11218
  %60 = load i32, i32* %pntsu68, align 8, !dbg !11218
  %idx.ext69 = sext i32 %60 to i64, !dbg !11219
  %idx.neg = sub i64 0, %idx.ext69, !dbg !11219
  %add.ptr70 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %58, i64 %idx.neg, !dbg !11219
  store %struct.BPoint* %add.ptr70, %struct.BPoint** %tempbp, align 8, !dbg !11220
  %61 = load %struct.BPoint*, %struct.BPoint** %tempbp, align 8, !dbg !11221
  %f171 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %61, i32 0, i32 3, !dbg !11223
  %62 = load i16, i16* %f171, align 4, !dbg !11223
  %conv72 = sext i16 %62 to i32, !dbg !11221
  %and73 = and i32 %conv72, 1, !dbg !11224
  %tobool74 = icmp ne i32 %and73, 0, !dbg !11224
  br i1 %tobool74, label %if.end77, label %if.then75, !dbg !11225

if.then75:                                        ; preds = %if.then67
  %63 = load %struct.BPoint*, %struct.BPoint** %tempbp, align 8, !dbg !11226
  %call76 = call zeroext i8 @select_bpoint(%struct.BPoint* %63, i8 zeroext 1, i16 signext 1, i8 zeroext 0), !dbg !11227
  br label %if.end77, !dbg !11227

if.end77:                                         ; preds = %if.then75, %if.then67
  br label %if.end78, !dbg !11228

if.end78:                                         ; preds = %if.end77, %if.end59
  %64 = load i32, i32* %a, align 4, !dbg !11229
  %65 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11231
  %pntsu79 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %65, i32 0, i32 6, !dbg !11232
  %66 = load i32, i32* %pntsu79, align 8, !dbg !11232
  %rem80 = srem i32 %64, %66, !dbg !11233
  %cmp81 = icmp ne i32 %rem80, 1, !dbg !11234
  br i1 %cmp81, label %if.then83, label %if.end96, !dbg !11235

if.then83:                                        ; preds = %if.end78
  store i16 0, i16* %sel, align 2, !dbg !11236
  %67 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11238
  %add.ptr84 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %67, i64 1, !dbg !11239
  store %struct.BPoint* %add.ptr84, %struct.BPoint** %tempbp, align 8, !dbg !11240
  %68 = load %struct.BPoint*, %struct.BPoint** %tempbp, align 8, !dbg !11241
  %f185 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %68, i32 0, i32 3, !dbg !11243
  %69 = load i16, i16* %f185, align 4, !dbg !11243
  %conv86 = sext i16 %69 to i32, !dbg !11241
  %and87 = and i32 %conv86, 1, !dbg !11244
  %tobool88 = icmp ne i32 %and87, 0, !dbg !11244
  br i1 %tobool88, label %if.end92, label %if.then89, !dbg !11245

if.then89:                                        ; preds = %if.then83
  %70 = load %struct.BPoint*, %struct.BPoint** %tempbp, align 8, !dbg !11246
  %call90 = call zeroext i8 @select_bpoint(%struct.BPoint* %70, i8 zeroext 1, i16 signext 1, i8 zeroext 0), !dbg !11247
  %conv91 = zext i8 %call90 to i16, !dbg !11247
  store i16 %conv91, i16* %sel, align 2, !dbg !11248
  br label %if.end92, !dbg !11249

if.end92:                                         ; preds = %if.then89, %if.then83
  %71 = load i16, i16* %sel, align 2, !dbg !11250
  %tobool93 = icmp ne i16 %71, 0, !dbg !11250
  br i1 %tobool93, label %if.then94, label %if.end95, !dbg !11252

if.then94:                                        ; preds = %if.end92
  %72 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11253
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %72, i32 1, !dbg !11253
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp, align 8, !dbg !11253
  %73 = load i32, i32* %a, align 4, !dbg !11255
  %dec = add nsw i32 %73, -1, !dbg !11255
  store i32 %dec, i32* %a, align 4, !dbg !11255
  br label %if.end95, !dbg !11256

if.end95:                                         ; preds = %if.then94, %if.end92
  br label %if.end96, !dbg !11257

if.end96:                                         ; preds = %if.end95, %if.end78
  br label %if.end97, !dbg !11258

if.end97:                                         ; preds = %if.end96, %land.lhs.true15, %land.lhs.true, %while.body
  %74 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11259
  %incdec.ptr98 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %74, i32 1, !dbg !11259
  store %struct.BPoint* %incdec.ptr98, %struct.BPoint** %bp, align 8, !dbg !11259
  %75 = load i32, i32* %a, align 4, !dbg !11260
  %dec99 = add nsw i32 %75, -1, !dbg !11260
  store i32 %dec99, i32* %a, align 4, !dbg !11260
  br label %while.cond, !dbg !11139, !llvm.loop !11261

while.end:                                        ; preds = %while.cond
  %76 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11263
  %77 = load i32*, i32** %selbpoints, align 8, !dbg !11264
  %78 = bitcast i32* %77 to i8*, !dbg !11264
  call void %76(i8* %78), !dbg !11263
  br label %for.inc, !dbg !11265

for.inc:                                          ; preds = %while.end
  %79 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11266
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %79, i32 0, i32 0, !dbg !11267
  %80 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !11267
  store %struct.Nurb* %80, %struct.Nurb** %nu, align 8, !dbg !11268
  br label %for.cond, !dbg !11269, !llvm.loop !11270

for.end:                                          ; preds = %for.cond
  br label %if.end100, !dbg !11272

if.else:                                          ; preds = %entry
  %81 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !11273
  call void @select_adjacent_cp(%struct.ListBase* %81, i16 signext 1, i8 zeroext 0, i8 zeroext 1), !dbg !11275
  %82 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !11276
  call void @select_adjacent_cp(%struct.ListBase* %82, i16 signext -1, i8 zeroext 0, i8 zeroext 1), !dbg !11277
  br label %if.end100

if.end100:                                        ; preds = %if.else, %for.end
  %83 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11278
  %84 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11279
  %data = getelementptr inbounds %struct.Object, %struct.Object* %84, i32 0, i32 19, !dbg !11280
  %85 = load i8*, i8** %data, align 8, !dbg !11280
  call void @WM_event_add_notifier(%struct.bContext* %83, i32 274333696, i8* %85), !dbg !11281
  ret i32 4, !dbg !11282
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_select_less(%struct.wmOperatorType* %ot) #0 !dbg !11283 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !11284, metadata !DIExpression()), !dbg !11285
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11286
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !11287
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.146, i64 0, i64 0), i8** %name, align 8, !dbg !11288
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11289
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !11290
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.147, i64 0, i64 0), i8** %idname, align 8, !dbg !11291
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11292
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !11293
  store i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.148, i64 0, i64 0), i8** %description, align 8, !dbg !11294
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11295
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !11296
  store i32 (%struct.bContext*, %struct.wmOperator*)* @select_less_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !11297
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11298
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !11299
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !11300
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11301
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !11302
  store i16 3, i16* %flag, align 8, !dbg !11303
  ret void, !dbg !11304
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @select_less_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !11305 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %a = alloca i32, align 4
  %sel = alloca i32, align 4
  %lastsel = alloca i16, align 2
  %selbpoints = alloca i32*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11306, metadata !DIExpression()), !dbg !11307
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !11308, metadata !DIExpression()), !dbg !11309
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !11310, metadata !DIExpression()), !dbg !11311
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11312
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !11313
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !11311
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !11314, metadata !DIExpression()), !dbg !11315
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11316
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %1), !dbg !11317
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !11315
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !11318, metadata !DIExpression()), !dbg !11319
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !11320, metadata !DIExpression()), !dbg !11321
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !11322, metadata !DIExpression()), !dbg !11323
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11324, metadata !DIExpression()), !dbg !11325
  call void @llvm.dbg.declare(metadata i32* %sel, metadata !11326, metadata !DIExpression()), !dbg !11327
  store i32 0, i32* %sel, align 4, !dbg !11327
  call void @llvm.dbg.declare(metadata i16* %lastsel, metadata !11328, metadata !DIExpression()), !dbg !11329
  store i16 0, i16* %lastsel, align 2, !dbg !11329
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11330
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !11332
  %3 = load i16, i16* %type, align 8, !dbg !11332
  %conv = sext i16 %3 to i32, !dbg !11330
  %cmp = icmp eq i32 %conv, 3, !dbg !11333
  br i1 %cmp, label %if.then, label %if.else139, !dbg !11334

if.then:                                          ; preds = %entry
  %4 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !11335
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %4, i32 0, i32 0, !dbg !11338
  %5 = load i8*, i8** %first, align 8, !dbg !11338
  %6 = bitcast i8* %5 to %struct.Nurb*, !dbg !11335
  store %struct.Nurb* %6, %struct.Nurb** %nu, align 8, !dbg !11339
  br label %for.cond, !dbg !11340

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11341
  %tobool = icmp ne %struct.Nurb* %7, null, !dbg !11343
  br i1 %tobool, label %for.body, label %for.end, !dbg !11343

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32** %selbpoints, metadata !11344, metadata !DIExpression()), !dbg !11346
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11347
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 6, !dbg !11348
  %9 = load i32, i32* %pntsu, align 8, !dbg !11348
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11349
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 7, !dbg !11350
  %11 = load i32, i32* %pntsv, align 4, !dbg !11350
  %mul = mul nsw i32 %9, %11, !dbg !11351
  store i32 %mul, i32* %a, align 4, !dbg !11352
  %12 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11353
  %bp3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 17, !dbg !11354
  %13 = load %struct.BPoint*, %struct.BPoint** %bp3, align 8, !dbg !11354
  store %struct.BPoint* %13, %struct.BPoint** %bp, align 8, !dbg !11355
  %14 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !11356
  %15 = load i32, i32* %a, align 4, !dbg !11356
  %shr = ashr i32 %15, 5, !dbg !11356
  %add = add nsw i32 %shr, 1, !dbg !11356
  %conv4 = sext i32 %add to i64, !dbg !11356
  %mul5 = mul i64 %conv4, 4, !dbg !11356
  %call6 = call i8* %14(i64 %mul5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.219, i64 0, i64 0)), !dbg !11356
  %16 = bitcast i8* %call6 to i32*, !dbg !11356
  store i32* %16, i32** %selbpoints, align 8, !dbg !11357
  br label %while.cond, !dbg !11358

while.cond:                                       ; preds = %if.end137, %for.body
  %17 = load i32, i32* %a, align 4, !dbg !11359
  %dec = add nsw i32 %17, -1, !dbg !11359
  store i32 %dec, i32* %a, align 4, !dbg !11359
  %tobool7 = icmp ne i32 %17, 0, !dbg !11358
  br i1 %tobool7, label %while.body, label %while.end, !dbg !11358

while.body:                                       ; preds = %while.cond
  %18 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11360
  %hide = getelementptr inbounds %struct.BPoint, %struct.BPoint* %18, i32 0, i32 4, !dbg !11363
  %19 = load i16, i16* %hide, align 2, !dbg !11363
  %conv8 = sext i16 %19 to i32, !dbg !11360
  %cmp9 = icmp eq i32 %conv8, 0, !dbg !11364
  br i1 %cmp9, label %land.lhs.true, label %if.else136, !dbg !11365

land.lhs.true:                                    ; preds = %while.body
  %20 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11366
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %20, i32 0, i32 3, !dbg !11367
  %21 = load i16, i16* %f1, align 4, !dbg !11367
  %conv11 = sext i16 %21 to i32, !dbg !11366
  %and = and i32 %conv11, 1, !dbg !11368
  %tobool12 = icmp ne i32 %and, 0, !dbg !11368
  br i1 %tobool12, label %if.then13, label %if.else136, !dbg !11369

if.then13:                                        ; preds = %land.lhs.true
  store i32 0, i32* %sel, align 4, !dbg !11370
  %22 = load i32, i32* %a, align 4, !dbg !11372
  %add14 = add nsw i32 %22, 1, !dbg !11374
  %23 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11375
  %pntsu15 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %23, i32 0, i32 6, !dbg !11376
  %24 = load i32, i32* %pntsu15, align 8, !dbg !11376
  %rem = srem i32 %add14, %24, !dbg !11377
  %cmp16 = icmp eq i32 %rem, 0, !dbg !11378
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !11379

if.then18:                                        ; preds = %if.then13
  %25 = load i32, i32* %sel, align 4, !dbg !11380
  %inc = add nsw i32 %25, 1, !dbg !11380
  store i32 %inc, i32* %sel, align 4, !dbg !11380
  br label %if.end37, !dbg !11382

if.else:                                          ; preds = %if.then13
  %26 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11383
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %26, i32 -1, !dbg !11383
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp, align 8, !dbg !11383
  %27 = load i32*, i32** %selbpoints, align 8, !dbg !11385
  %28 = load i32, i32* %a, align 4, !dbg !11385
  %add19 = add nsw i32 %28, 1, !dbg !11385
  %shr20 = ashr i32 %add19, 5, !dbg !11385
  %idxprom = sext i32 %shr20 to i64, !dbg !11385
  %arrayidx = getelementptr inbounds i32, i32* %27, i64 %idxprom, !dbg !11385
  %29 = load i32, i32* %arrayidx, align 4, !dbg !11385
  %30 = load i32, i32* %a, align 4, !dbg !11385
  %add21 = add nsw i32 %30, 1, !dbg !11385
  %and22 = and i32 %add21, 31, !dbg !11385
  %shl = shl i32 1, %and22, !dbg !11385
  %and23 = and i32 %29, %shl, !dbg !11385
  %tobool24 = icmp ne i32 %and23, 0, !dbg !11385
  br i1 %tobool24, label %if.then34, label %lor.lhs.false, !dbg !11387

lor.lhs.false:                                    ; preds = %if.else
  %31 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11388
  %hide25 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %31, i32 0, i32 4, !dbg !11389
  %32 = load i16, i16* %hide25, align 2, !dbg !11389
  %conv26 = sext i16 %32 to i32, !dbg !11388
  %cmp27 = icmp eq i32 %conv26, 0, !dbg !11390
  br i1 %cmp27, label %land.lhs.true29, label %if.end, !dbg !11391

land.lhs.true29:                                  ; preds = %lor.lhs.false
  %33 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11392
  %f130 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %33, i32 0, i32 3, !dbg !11393
  %34 = load i16, i16* %f130, align 4, !dbg !11393
  %conv31 = sext i16 %34 to i32, !dbg !11392
  %and32 = and i32 %conv31, 1, !dbg !11394
  %tobool33 = icmp ne i32 %and32, 0, !dbg !11394
  br i1 %tobool33, label %if.then34, label %if.end, !dbg !11395

if.then34:                                        ; preds = %land.lhs.true29, %if.else
  %35 = load i32, i32* %sel, align 4, !dbg !11396
  %inc35 = add nsw i32 %35, 1, !dbg !11396
  store i32 %inc35, i32* %sel, align 4, !dbg !11396
  br label %if.end, !dbg !11397

if.end:                                           ; preds = %if.then34, %land.lhs.true29, %lor.lhs.false
  %36 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11398
  %incdec.ptr36 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %36, i32 1, !dbg !11398
  store %struct.BPoint* %incdec.ptr36, %struct.BPoint** %bp, align 8, !dbg !11398
  br label %if.end37

if.end37:                                         ; preds = %if.end, %if.then18
  %37 = load i32, i32* %a, align 4, !dbg !11399
  %add38 = add nsw i32 %37, 1, !dbg !11401
  %38 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11402
  %pntsu39 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %38, i32 0, i32 6, !dbg !11403
  %39 = load i32, i32* %pntsu39, align 8, !dbg !11403
  %rem40 = srem i32 %add38, %39, !dbg !11404
  %cmp41 = icmp eq i32 %rem40, 1, !dbg !11405
  br i1 %cmp41, label %if.then43, label %if.else45, !dbg !11406

if.then43:                                        ; preds = %if.end37
  %40 = load i32, i32* %sel, align 4, !dbg !11407
  %inc44 = add nsw i32 %40, 1, !dbg !11407
  store i32 %inc44, i32* %sel, align 4, !dbg !11407
  br label %if.end60, !dbg !11409

if.else45:                                        ; preds = %if.end37
  %41 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11410
  %incdec.ptr46 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %41, i32 1, !dbg !11410
  store %struct.BPoint* %incdec.ptr46, %struct.BPoint** %bp, align 8, !dbg !11410
  %42 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11412
  %hide47 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %42, i32 0, i32 4, !dbg !11414
  %43 = load i16, i16* %hide47, align 2, !dbg !11414
  %conv48 = sext i16 %43 to i32, !dbg !11412
  %cmp49 = icmp eq i32 %conv48, 0, !dbg !11415
  br i1 %cmp49, label %land.lhs.true51, label %if.end58, !dbg !11416

land.lhs.true51:                                  ; preds = %if.else45
  %44 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11417
  %f152 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %44, i32 0, i32 3, !dbg !11418
  %45 = load i16, i16* %f152, align 4, !dbg !11418
  %conv53 = sext i16 %45 to i32, !dbg !11417
  %and54 = and i32 %conv53, 1, !dbg !11419
  %tobool55 = icmp ne i32 %and54, 0, !dbg !11419
  br i1 %tobool55, label %if.then56, label %if.end58, !dbg !11420

if.then56:                                        ; preds = %land.lhs.true51
  %46 = load i32, i32* %sel, align 4, !dbg !11421
  %inc57 = add nsw i32 %46, 1, !dbg !11421
  store i32 %inc57, i32* %sel, align 4, !dbg !11421
  br label %if.end58, !dbg !11422

if.end58:                                         ; preds = %if.then56, %land.lhs.true51, %if.else45
  %47 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11423
  %incdec.ptr59 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %47, i32 -1, !dbg !11423
  store %struct.BPoint* %incdec.ptr59, %struct.BPoint** %bp, align 8, !dbg !11423
  br label %if.end60

if.end60:                                         ; preds = %if.end58, %if.then43
  %48 = load i32, i32* %a, align 4, !dbg !11424
  %add61 = add nsw i32 %48, 1, !dbg !11426
  %49 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11427
  %pntsu62 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %49, i32 0, i32 6, !dbg !11428
  %50 = load i32, i32* %pntsu62, align 8, !dbg !11428
  %51 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11429
  %pntsv63 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %51, i32 0, i32 7, !dbg !11430
  %52 = load i32, i32* %pntsv63, align 4, !dbg !11430
  %mul64 = mul nsw i32 %50, %52, !dbg !11431
  %53 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11432
  %pntsu65 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %53, i32 0, i32 6, !dbg !11433
  %54 = load i32, i32* %pntsu65, align 8, !dbg !11433
  %sub = sub nsw i32 %mul64, %54, !dbg !11434
  %cmp66 = icmp sgt i32 %add61, %sub, !dbg !11435
  br i1 %cmp66, label %if.then68, label %if.else70, !dbg !11436

if.then68:                                        ; preds = %if.end60
  %55 = load i32, i32* %sel, align 4, !dbg !11437
  %inc69 = add nsw i32 %55, 1, !dbg !11437
  store i32 %inc69, i32* %sel, align 4, !dbg !11437
  br label %if.end99, !dbg !11439

if.else70:                                        ; preds = %if.end60
  %56 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11440
  %pntsu71 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %56, i32 0, i32 6, !dbg !11442
  %57 = load i32, i32* %pntsu71, align 8, !dbg !11442
  %58 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11443
  %idx.ext = sext i32 %57 to i64, !dbg !11443
  %idx.neg = sub i64 0, %idx.ext, !dbg !11443
  %add.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %58, i64 %idx.neg, !dbg !11443
  store %struct.BPoint* %add.ptr, %struct.BPoint** %bp, align 8, !dbg !11443
  %59 = load i32*, i32** %selbpoints, align 8, !dbg !11444
  %60 = load i32, i32* %a, align 4, !dbg !11444
  %61 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11444
  %pntsu72 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %61, i32 0, i32 6, !dbg !11444
  %62 = load i32, i32* %pntsu72, align 8, !dbg !11444
  %add73 = add nsw i32 %60, %62, !dbg !11444
  %shr74 = ashr i32 %add73, 5, !dbg !11444
  %idxprom75 = sext i32 %shr74 to i64, !dbg !11444
  %arrayidx76 = getelementptr inbounds i32, i32* %59, i64 %idxprom75, !dbg !11444
  %63 = load i32, i32* %arrayidx76, align 4, !dbg !11444
  %64 = load i32, i32* %a, align 4, !dbg !11444
  %65 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11444
  %pntsu77 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %65, i32 0, i32 6, !dbg !11444
  %66 = load i32, i32* %pntsu77, align 8, !dbg !11444
  %add78 = add nsw i32 %64, %66, !dbg !11444
  %and79 = and i32 %add78, 31, !dbg !11444
  %shl80 = shl i32 1, %and79, !dbg !11444
  %and81 = and i32 %63, %shl80, !dbg !11444
  %tobool82 = icmp ne i32 %and81, 0, !dbg !11444
  br i1 %tobool82, label %if.then93, label %lor.lhs.false83, !dbg !11446

lor.lhs.false83:                                  ; preds = %if.else70
  %67 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11447
  %hide84 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %67, i32 0, i32 4, !dbg !11448
  %68 = load i16, i16* %hide84, align 2, !dbg !11448
  %conv85 = sext i16 %68 to i32, !dbg !11447
  %cmp86 = icmp eq i32 %conv85, 0, !dbg !11449
  br i1 %cmp86, label %land.lhs.true88, label %if.end95, !dbg !11450

land.lhs.true88:                                  ; preds = %lor.lhs.false83
  %69 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11451
  %f189 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %69, i32 0, i32 3, !dbg !11452
  %70 = load i16, i16* %f189, align 4, !dbg !11452
  %conv90 = sext i16 %70 to i32, !dbg !11451
  %and91 = and i32 %conv90, 1, !dbg !11453
  %tobool92 = icmp ne i32 %and91, 0, !dbg !11453
  br i1 %tobool92, label %if.then93, label %if.end95, !dbg !11454

if.then93:                                        ; preds = %land.lhs.true88, %if.else70
  %71 = load i32, i32* %sel, align 4, !dbg !11455
  %inc94 = add nsw i32 %71, 1, !dbg !11455
  store i32 %inc94, i32* %sel, align 4, !dbg !11455
  br label %if.end95, !dbg !11456

if.end95:                                         ; preds = %if.then93, %land.lhs.true88, %lor.lhs.false83
  %72 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11457
  %pntsu96 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %72, i32 0, i32 6, !dbg !11458
  %73 = load i32, i32* %pntsu96, align 8, !dbg !11458
  %74 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11459
  %idx.ext97 = sext i32 %73 to i64, !dbg !11459
  %add.ptr98 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %74, i64 %idx.ext97, !dbg !11459
  store %struct.BPoint* %add.ptr98, %struct.BPoint** %bp, align 8, !dbg !11459
  br label %if.end99

if.end99:                                         ; preds = %if.end95, %if.then68
  %75 = load i32, i32* %a, align 4, !dbg !11460
  %76 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11462
  %pntsu100 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %76, i32 0, i32 6, !dbg !11463
  %77 = load i32, i32* %pntsu100, align 8, !dbg !11463
  %cmp101 = icmp slt i32 %75, %77, !dbg !11464
  br i1 %cmp101, label %if.then103, label %if.else105, !dbg !11465

if.then103:                                       ; preds = %if.end99
  %78 = load i32, i32* %sel, align 4, !dbg !11466
  %inc104 = add nsw i32 %78, 1, !dbg !11466
  store i32 %inc104, i32* %sel, align 4, !dbg !11466
  br label %if.end125, !dbg !11468

if.else105:                                       ; preds = %if.end99
  %79 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11469
  %pntsu106 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %79, i32 0, i32 6, !dbg !11471
  %80 = load i32, i32* %pntsu106, align 8, !dbg !11471
  %81 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11472
  %idx.ext107 = sext i32 %80 to i64, !dbg !11472
  %add.ptr108 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %81, i64 %idx.ext107, !dbg !11472
  store %struct.BPoint* %add.ptr108, %struct.BPoint** %bp, align 8, !dbg !11472
  %82 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11473
  %hide109 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %82, i32 0, i32 4, !dbg !11475
  %83 = load i16, i16* %hide109, align 2, !dbg !11475
  %conv110 = sext i16 %83 to i32, !dbg !11473
  %cmp111 = icmp eq i32 %conv110, 0, !dbg !11476
  br i1 %cmp111, label %land.lhs.true113, label %if.end120, !dbg !11477

land.lhs.true113:                                 ; preds = %if.else105
  %84 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11478
  %f1114 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %84, i32 0, i32 3, !dbg !11479
  %85 = load i16, i16* %f1114, align 4, !dbg !11479
  %conv115 = sext i16 %85 to i32, !dbg !11478
  %and116 = and i32 %conv115, 1, !dbg !11480
  %tobool117 = icmp ne i32 %and116, 0, !dbg !11480
  br i1 %tobool117, label %if.then118, label %if.end120, !dbg !11481

if.then118:                                       ; preds = %land.lhs.true113
  %86 = load i32, i32* %sel, align 4, !dbg !11482
  %inc119 = add nsw i32 %86, 1, !dbg !11482
  store i32 %inc119, i32* %sel, align 4, !dbg !11482
  br label %if.end120, !dbg !11483

if.end120:                                        ; preds = %if.then118, %land.lhs.true113, %if.else105
  %87 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11484
  %pntsu121 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %87, i32 0, i32 6, !dbg !11485
  %88 = load i32, i32* %pntsu121, align 8, !dbg !11485
  %89 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11486
  %idx.ext122 = sext i32 %88 to i64, !dbg !11486
  %idx.neg123 = sub i64 0, %idx.ext122, !dbg !11486
  %add.ptr124 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %89, i64 %idx.neg123, !dbg !11486
  store %struct.BPoint* %add.ptr124, %struct.BPoint** %bp, align 8, !dbg !11486
  br label %if.end125

if.end125:                                        ; preds = %if.end120, %if.then103
  %90 = load i32, i32* %sel, align 4, !dbg !11487
  %cmp126 = icmp ne i32 %90, 4, !dbg !11489
  br i1 %cmp126, label %if.then128, label %if.end135, !dbg !11490

if.then128:                                       ; preds = %if.end125
  %91 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11491
  %call129 = call zeroext i8 @select_bpoint(%struct.BPoint* %91, i8 zeroext 0, i16 signext 1, i8 zeroext 0), !dbg !11493
  %92 = load i32, i32* %a, align 4, !dbg !11494
  %and130 = and i32 %92, 31, !dbg !11494
  %shl131 = shl i32 1, %and130, !dbg !11494
  %93 = load i32*, i32** %selbpoints, align 8, !dbg !11494
  %94 = load i32, i32* %a, align 4, !dbg !11494
  %shr132 = ashr i32 %94, 5, !dbg !11494
  %idxprom133 = sext i32 %shr132 to i64, !dbg !11494
  %arrayidx134 = getelementptr inbounds i32, i32* %93, i64 %idxprom133, !dbg !11494
  %95 = load i32, i32* %arrayidx134, align 4, !dbg !11494
  %or = or i32 %95, %shl131, !dbg !11494
  store i32 %or, i32* %arrayidx134, align 4, !dbg !11494
  br label %if.end135, !dbg !11495

if.end135:                                        ; preds = %if.then128, %if.end125
  br label %if.end137, !dbg !11496

if.else136:                                       ; preds = %land.lhs.true, %while.body
  store i16 0, i16* %lastsel, align 2, !dbg !11497
  br label %if.end137

if.end137:                                        ; preds = %if.else136, %if.end135
  %96 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11499
  %incdec.ptr138 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %96, i32 1, !dbg !11499
  store %struct.BPoint* %incdec.ptr138, %struct.BPoint** %bp, align 8, !dbg !11499
  br label %while.cond, !dbg !11358, !llvm.loop !11500

while.end:                                        ; preds = %while.cond
  %97 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11502
  %98 = load i32*, i32** %selbpoints, align 8, !dbg !11503
  %99 = bitcast i32* %98 to i8*, !dbg !11503
  call void %97(i8* %99), !dbg !11502
  br label %for.inc, !dbg !11504

for.inc:                                          ; preds = %while.end
  %100 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11505
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %100, i32 0, i32 0, !dbg !11506
  %101 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !11506
  store %struct.Nurb* %101, %struct.Nurb** %nu, align 8, !dbg !11507
  br label %for.cond, !dbg !11508, !llvm.loop !11509

for.end:                                          ; preds = %for.cond
  br label %if.end306, !dbg !11511

if.else139:                                       ; preds = %entry
  %102 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !11512
  %first140 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %102, i32 0, i32 0, !dbg !11515
  %103 = load i8*, i8** %first140, align 8, !dbg !11515
  %104 = bitcast i8* %103 to %struct.Nurb*, !dbg !11512
  store %struct.Nurb* %104, %struct.Nurb** %nu, align 8, !dbg !11516
  br label %for.cond141, !dbg !11517

for.cond141:                                      ; preds = %for.inc303, %if.else139
  %105 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11518
  %tobool142 = icmp ne %struct.Nurb* %105, null, !dbg !11520
  br i1 %tobool142, label %for.body143, label %for.end305, !dbg !11520

for.body143:                                      ; preds = %for.cond141
  store i16 0, i16* %lastsel, align 2, !dbg !11521
  %106 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11523
  %type144 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %106, i32 0, i32 2, !dbg !11525
  %107 = load i16, i16* %type144, align 8, !dbg !11525
  %conv145 = sext i16 %107 to i32, !dbg !11523
  %cmp146 = icmp eq i32 %conv145, 1, !dbg !11526
  br i1 %cmp146, label %if.then148, label %if.else219, !dbg !11527

if.then148:                                       ; preds = %for.body143
  %108 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11528
  %pntsu149 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %108, i32 0, i32 6, !dbg !11530
  %109 = load i32, i32* %pntsu149, align 8, !dbg !11530
  store i32 %109, i32* %a, align 4, !dbg !11531
  %110 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11532
  %bezt150 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %110, i32 0, i32 18, !dbg !11533
  %111 = load %struct.BezTriple*, %struct.BezTriple** %bezt150, align 8, !dbg !11533
  store %struct.BezTriple* %111, %struct.BezTriple** %bezt, align 8, !dbg !11534
  br label %while.cond151, !dbg !11535

while.cond151:                                    ; preds = %if.end216, %if.then148
  %112 = load i32, i32* %a, align 4, !dbg !11536
  %dec152 = add nsw i32 %112, -1, !dbg !11536
  store i32 %dec152, i32* %a, align 4, !dbg !11536
  %tobool153 = icmp ne i32 %112, 0, !dbg !11535
  br i1 %tobool153, label %while.body154, label %while.end218, !dbg !11535

while.body154:                                    ; preds = %while.cond151
  %113 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11537
  %hide155 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %113, i32 0, i32 10, !dbg !11540
  %114 = load i8, i8* %hide155, align 2, !dbg !11540
  %conv156 = zext i8 %114 to i32, !dbg !11537
  %cmp157 = icmp eq i32 %conv156, 0, !dbg !11541
  br i1 %cmp157, label %land.lhs.true159, label %if.else215, !dbg !11542

land.lhs.true159:                                 ; preds = %while.body154
  %115 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11543
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %115, i32 0, i32 8, !dbg !11544
  %116 = load i8, i8* %f2, align 4, !dbg !11544
  %conv160 = zext i8 %116 to i32, !dbg !11543
  %and161 = and i32 %conv160, 1, !dbg !11545
  %tobool162 = icmp ne i32 %and161, 0, !dbg !11545
  br i1 %tobool162, label %if.then163, label %if.else215, !dbg !11546

if.then163:                                       ; preds = %land.lhs.true159
  %117 = load i16, i16* %lastsel, align 2, !dbg !11547
  %conv164 = sext i16 %117 to i32, !dbg !11547
  %cmp165 = icmp eq i32 %conv164, 1, !dbg !11549
  %conv166 = zext i1 %cmp165 to i32, !dbg !11549
  store i32 %conv166, i32* %sel, align 4, !dbg !11550
  %118 = load i32, i32* %a, align 4, !dbg !11551
  %119 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11553
  %pntsu167 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %119, i32 0, i32 6, !dbg !11554
  %120 = load i32, i32* %pntsu167, align 8, !dbg !11554
  %sub168 = sub nsw i32 %120, 1, !dbg !11555
  %cmp169 = icmp eq i32 %118, %sub168, !dbg !11556
  br i1 %cmp169, label %if.then171, label %if.else173, !dbg !11557

if.then171:                                       ; preds = %if.then163
  %121 = load i32, i32* %sel, align 4, !dbg !11558
  %inc172 = add nsw i32 %121, 1, !dbg !11558
  store i32 %inc172, i32* %sel, align 4, !dbg !11558
  br label %if.end188, !dbg !11560

if.else173:                                       ; preds = %if.then163
  %122 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11561
  %incdec.ptr174 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %122, i32 -1, !dbg !11561
  store %struct.BezTriple* %incdec.ptr174, %struct.BezTriple** %bezt, align 8, !dbg !11561
  %123 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11563
  %hide175 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %123, i32 0, i32 10, !dbg !11565
  %124 = load i8, i8* %hide175, align 2, !dbg !11565
  %conv176 = zext i8 %124 to i32, !dbg !11563
  %cmp177 = icmp eq i32 %conv176, 0, !dbg !11566
  br i1 %cmp177, label %land.lhs.true179, label %if.end186, !dbg !11567

land.lhs.true179:                                 ; preds = %if.else173
  %125 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11568
  %f2180 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %125, i32 0, i32 8, !dbg !11569
  %126 = load i8, i8* %f2180, align 4, !dbg !11569
  %conv181 = zext i8 %126 to i32, !dbg !11568
  %and182 = and i32 %conv181, 1, !dbg !11570
  %tobool183 = icmp ne i32 %and182, 0, !dbg !11570
  br i1 %tobool183, label %if.then184, label %if.end186, !dbg !11571

if.then184:                                       ; preds = %land.lhs.true179
  %127 = load i32, i32* %sel, align 4, !dbg !11572
  %inc185 = add nsw i32 %127, 1, !dbg !11572
  store i32 %inc185, i32* %sel, align 4, !dbg !11572
  br label %if.end186, !dbg !11573

if.end186:                                        ; preds = %if.then184, %land.lhs.true179, %if.else173
  %128 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11574
  %incdec.ptr187 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %128, i32 1, !dbg !11574
  store %struct.BezTriple* %incdec.ptr187, %struct.BezTriple** %bezt, align 8, !dbg !11574
  br label %if.end188

if.end188:                                        ; preds = %if.end186, %if.then171
  %129 = load i32, i32* %a, align 4, !dbg !11575
  %cmp189 = icmp eq i32 %129, 0, !dbg !11577
  br i1 %cmp189, label %if.then191, label %if.else193, !dbg !11578

if.then191:                                       ; preds = %if.end188
  %130 = load i32, i32* %sel, align 4, !dbg !11579
  %inc192 = add nsw i32 %130, 1, !dbg !11579
  store i32 %inc192, i32* %sel, align 4, !dbg !11579
  br label %if.end208, !dbg !11581

if.else193:                                       ; preds = %if.end188
  %131 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11582
  %incdec.ptr194 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %131, i32 1, !dbg !11582
  store %struct.BezTriple* %incdec.ptr194, %struct.BezTriple** %bezt, align 8, !dbg !11582
  %132 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11584
  %hide195 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %132, i32 0, i32 10, !dbg !11586
  %133 = load i8, i8* %hide195, align 2, !dbg !11586
  %conv196 = zext i8 %133 to i32, !dbg !11584
  %cmp197 = icmp eq i32 %conv196, 0, !dbg !11587
  br i1 %cmp197, label %land.lhs.true199, label %if.end206, !dbg !11588

land.lhs.true199:                                 ; preds = %if.else193
  %134 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11589
  %f2200 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %134, i32 0, i32 8, !dbg !11590
  %135 = load i8, i8* %f2200, align 4, !dbg !11590
  %conv201 = zext i8 %135 to i32, !dbg !11589
  %and202 = and i32 %conv201, 1, !dbg !11591
  %tobool203 = icmp ne i32 %and202, 0, !dbg !11591
  br i1 %tobool203, label %if.then204, label %if.end206, !dbg !11592

if.then204:                                       ; preds = %land.lhs.true199
  %136 = load i32, i32* %sel, align 4, !dbg !11593
  %inc205 = add nsw i32 %136, 1, !dbg !11593
  store i32 %inc205, i32* %sel, align 4, !dbg !11593
  br label %if.end206, !dbg !11594

if.end206:                                        ; preds = %if.then204, %land.lhs.true199, %if.else193
  %137 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11595
  %incdec.ptr207 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %137, i32 -1, !dbg !11595
  store %struct.BezTriple* %incdec.ptr207, %struct.BezTriple** %bezt, align 8, !dbg !11595
  br label %if.end208

if.end208:                                        ; preds = %if.end206, %if.then191
  %138 = load i32, i32* %sel, align 4, !dbg !11596
  %cmp209 = icmp ne i32 %138, 2, !dbg !11598
  br i1 %cmp209, label %if.then211, label %if.else213, !dbg !11599

if.then211:                                       ; preds = %if.end208
  %139 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11600
  %call212 = call zeroext i8 @select_beztriple(%struct.BezTriple* %139, i8 zeroext 0, i16 signext 1, i32 0), !dbg !11602
  store i16 1, i16* %lastsel, align 2, !dbg !11603
  br label %if.end214, !dbg !11604

if.else213:                                       ; preds = %if.end208
  store i16 0, i16* %lastsel, align 2, !dbg !11605
  br label %if.end214

if.end214:                                        ; preds = %if.else213, %if.then211
  br label %if.end216, !dbg !11607

if.else215:                                       ; preds = %land.lhs.true159, %while.body154
  store i16 0, i16* %lastsel, align 2, !dbg !11608
  br label %if.end216

if.end216:                                        ; preds = %if.else215, %if.end214
  %140 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11610
  %incdec.ptr217 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %140, i32 1, !dbg !11610
  store %struct.BezTriple* %incdec.ptr217, %struct.BezTriple** %bezt, align 8, !dbg !11610
  br label %while.cond151, !dbg !11535, !llvm.loop !11611

while.end218:                                     ; preds = %while.cond151
  br label %if.end302, !dbg !11613

if.else219:                                       ; preds = %for.body143
  %141 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11614
  %pntsu220 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %141, i32 0, i32 6, !dbg !11616
  %142 = load i32, i32* %pntsu220, align 8, !dbg !11616
  %143 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11617
  %pntsv221 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %143, i32 0, i32 7, !dbg !11618
  %144 = load i32, i32* %pntsv221, align 4, !dbg !11618
  %mul222 = mul nsw i32 %142, %144, !dbg !11619
  store i32 %mul222, i32* %a, align 4, !dbg !11620
  %145 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11621
  %bp223 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %145, i32 0, i32 17, !dbg !11622
  %146 = load %struct.BPoint*, %struct.BPoint** %bp223, align 8, !dbg !11622
  store %struct.BPoint* %146, %struct.BPoint** %bp, align 8, !dbg !11623
  br label %while.cond224, !dbg !11624

while.cond224:                                    ; preds = %if.end299, %if.else219
  %147 = load i32, i32* %a, align 4, !dbg !11625
  %dec225 = add nsw i32 %147, -1, !dbg !11625
  store i32 %dec225, i32* %a, align 4, !dbg !11625
  %tobool226 = icmp ne i32 %147, 0, !dbg !11624
  br i1 %tobool226, label %while.body227, label %while.end301, !dbg !11624

while.body227:                                    ; preds = %while.cond224
  %148 = load i16, i16* %lastsel, align 2, !dbg !11626
  %conv228 = sext i16 %148 to i32, !dbg !11626
  %cmp229 = icmp eq i32 %conv228, 0, !dbg !11629
  br i1 %cmp229, label %land.lhs.true231, label %if.else298, !dbg !11630

land.lhs.true231:                                 ; preds = %while.body227
  %149 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11631
  %hide232 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %149, i32 0, i32 4, !dbg !11632
  %150 = load i16, i16* %hide232, align 2, !dbg !11632
  %conv233 = sext i16 %150 to i32, !dbg !11631
  %cmp234 = icmp eq i32 %conv233, 0, !dbg !11633
  br i1 %cmp234, label %land.lhs.true236, label %if.else298, !dbg !11634

land.lhs.true236:                                 ; preds = %land.lhs.true231
  %151 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11635
  %f1237 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %151, i32 0, i32 3, !dbg !11636
  %152 = load i16, i16* %f1237, align 4, !dbg !11636
  %conv238 = sext i16 %152 to i32, !dbg !11635
  %and239 = and i32 %conv238, 1, !dbg !11637
  %tobool240 = icmp ne i32 %and239, 0, !dbg !11637
  br i1 %tobool240, label %if.then241, label %if.else298, !dbg !11638

if.then241:                                       ; preds = %land.lhs.true236
  %153 = load i16, i16* %lastsel, align 2, !dbg !11639
  %conv242 = sext i16 %153 to i32, !dbg !11639
  %cmp243 = icmp ne i32 %conv242, 0, !dbg !11642
  br i1 %cmp243, label %if.then245, label %if.else246, !dbg !11643

if.then245:                                       ; preds = %if.then241
  store i32 1, i32* %sel, align 4, !dbg !11644
  br label %if.end247, !dbg !11645

if.else246:                                       ; preds = %if.then241
  store i32 0, i32* %sel, align 4, !dbg !11646
  br label %if.end247

if.end247:                                        ; preds = %if.else246, %if.then245
  %154 = load i32, i32* %a, align 4, !dbg !11647
  %155 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11649
  %pntsu248 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %155, i32 0, i32 6, !dbg !11650
  %156 = load i32, i32* %pntsu248, align 8, !dbg !11650
  %157 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11651
  %pntsv249 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %157, i32 0, i32 7, !dbg !11652
  %158 = load i32, i32* %pntsv249, align 4, !dbg !11652
  %mul250 = mul nsw i32 %156, %158, !dbg !11653
  %sub251 = sub nsw i32 %mul250, 1, !dbg !11654
  %cmp252 = icmp eq i32 %154, %sub251, !dbg !11655
  br i1 %cmp252, label %if.then254, label %if.else256, !dbg !11656

if.then254:                                       ; preds = %if.end247
  %159 = load i32, i32* %sel, align 4, !dbg !11657
  %inc255 = add nsw i32 %159, 1, !dbg !11657
  store i32 %inc255, i32* %sel, align 4, !dbg !11657
  br label %if.end271, !dbg !11659

if.else256:                                       ; preds = %if.end247
  %160 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11660
  %incdec.ptr257 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %160, i32 -1, !dbg !11660
  store %struct.BPoint* %incdec.ptr257, %struct.BPoint** %bp, align 8, !dbg !11660
  %161 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11662
  %hide258 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %161, i32 0, i32 4, !dbg !11664
  %162 = load i16, i16* %hide258, align 2, !dbg !11664
  %conv259 = sext i16 %162 to i32, !dbg !11662
  %cmp260 = icmp eq i32 %conv259, 0, !dbg !11665
  br i1 %cmp260, label %land.lhs.true262, label %if.end269, !dbg !11666

land.lhs.true262:                                 ; preds = %if.else256
  %163 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11667
  %f1263 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %163, i32 0, i32 3, !dbg !11668
  %164 = load i16, i16* %f1263, align 4, !dbg !11668
  %conv264 = sext i16 %164 to i32, !dbg !11667
  %and265 = and i32 %conv264, 1, !dbg !11669
  %tobool266 = icmp ne i32 %and265, 0, !dbg !11669
  br i1 %tobool266, label %if.then267, label %if.end269, !dbg !11670

if.then267:                                       ; preds = %land.lhs.true262
  %165 = load i32, i32* %sel, align 4, !dbg !11671
  %inc268 = add nsw i32 %165, 1, !dbg !11671
  store i32 %inc268, i32* %sel, align 4, !dbg !11671
  br label %if.end269, !dbg !11672

if.end269:                                        ; preds = %if.then267, %land.lhs.true262, %if.else256
  %166 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11673
  %incdec.ptr270 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %166, i32 1, !dbg !11673
  store %struct.BPoint* %incdec.ptr270, %struct.BPoint** %bp, align 8, !dbg !11673
  br label %if.end271

if.end271:                                        ; preds = %if.end269, %if.then254
  %167 = load i32, i32* %a, align 4, !dbg !11674
  %cmp272 = icmp eq i32 %167, 0, !dbg !11676
  br i1 %cmp272, label %if.then274, label %if.else276, !dbg !11677

if.then274:                                       ; preds = %if.end271
  %168 = load i32, i32* %sel, align 4, !dbg !11678
  %inc275 = add nsw i32 %168, 1, !dbg !11678
  store i32 %inc275, i32* %sel, align 4, !dbg !11678
  br label %if.end291, !dbg !11680

if.else276:                                       ; preds = %if.end271
  %169 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11681
  %incdec.ptr277 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %169, i32 1, !dbg !11681
  store %struct.BPoint* %incdec.ptr277, %struct.BPoint** %bp, align 8, !dbg !11681
  %170 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11683
  %hide278 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %170, i32 0, i32 4, !dbg !11685
  %171 = load i16, i16* %hide278, align 2, !dbg !11685
  %conv279 = sext i16 %171 to i32, !dbg !11683
  %cmp280 = icmp eq i32 %conv279, 0, !dbg !11686
  br i1 %cmp280, label %land.lhs.true282, label %if.end289, !dbg !11687

land.lhs.true282:                                 ; preds = %if.else276
  %172 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11688
  %f1283 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %172, i32 0, i32 3, !dbg !11689
  %173 = load i16, i16* %f1283, align 4, !dbg !11689
  %conv284 = sext i16 %173 to i32, !dbg !11688
  %and285 = and i32 %conv284, 1, !dbg !11690
  %tobool286 = icmp ne i32 %and285, 0, !dbg !11690
  br i1 %tobool286, label %if.then287, label %if.end289, !dbg !11691

if.then287:                                       ; preds = %land.lhs.true282
  %174 = load i32, i32* %sel, align 4, !dbg !11692
  %inc288 = add nsw i32 %174, 1, !dbg !11692
  store i32 %inc288, i32* %sel, align 4, !dbg !11692
  br label %if.end289, !dbg !11693

if.end289:                                        ; preds = %if.then287, %land.lhs.true282, %if.else276
  %175 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11694
  %incdec.ptr290 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %175, i32 -1, !dbg !11694
  store %struct.BPoint* %incdec.ptr290, %struct.BPoint** %bp, align 8, !dbg !11694
  br label %if.end291

if.end291:                                        ; preds = %if.end289, %if.then274
  %176 = load i32, i32* %sel, align 4, !dbg !11695
  %cmp292 = icmp ne i32 %176, 2, !dbg !11697
  br i1 %cmp292, label %if.then294, label %if.else296, !dbg !11698

if.then294:                                       ; preds = %if.end291
  %177 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11699
  %call295 = call zeroext i8 @select_bpoint(%struct.BPoint* %177, i8 zeroext 0, i16 signext 1, i8 zeroext 0), !dbg !11701
  store i16 1, i16* %lastsel, align 2, !dbg !11702
  br label %if.end297, !dbg !11703

if.else296:                                       ; preds = %if.end291
  store i16 0, i16* %lastsel, align 2, !dbg !11704
  br label %if.end297

if.end297:                                        ; preds = %if.else296, %if.then294
  br label %if.end299, !dbg !11706

if.else298:                                       ; preds = %land.lhs.true236, %land.lhs.true231, %while.body227
  store i16 0, i16* %lastsel, align 2, !dbg !11707
  br label %if.end299

if.end299:                                        ; preds = %if.else298, %if.end297
  %178 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11709
  %incdec.ptr300 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %178, i32 1, !dbg !11709
  store %struct.BPoint* %incdec.ptr300, %struct.BPoint** %bp, align 8, !dbg !11709
  br label %while.cond224, !dbg !11624, !llvm.loop !11710

while.end301:                                     ; preds = %while.cond224
  br label %if.end302

if.end302:                                        ; preds = %while.end301, %while.end218
  br label %for.inc303, !dbg !11712

for.inc303:                                       ; preds = %if.end302
  %179 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11713
  %next304 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %179, i32 0, i32 0, !dbg !11714
  %180 = load %struct.Nurb*, %struct.Nurb** %next304, align 8, !dbg !11714
  store %struct.Nurb* %180, %struct.Nurb** %nu, align 8, !dbg !11715
  br label %for.cond141, !dbg !11716, !llvm.loop !11717

for.end305:                                       ; preds = %for.cond141
  br label %if.end306

if.end306:                                        ; preds = %for.end305, %for.end
  %181 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11719
  %182 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11720
  %data = getelementptr inbounds %struct.Object, %struct.Object* %182, i32 0, i32 19, !dbg !11721
  %183 = load i8*, i8** %data, align 8, !dbg !11721
  call void @WM_event_add_notifier(%struct.bContext* %181, i32 274333696, i8* %183), !dbg !11722
  %184 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11723
  %data307 = getelementptr inbounds %struct.Object, %struct.Object* %184, i32 0, i32 19, !dbg !11724
  %185 = load i8*, i8** %data307, align 8, !dbg !11724
  %186 = bitcast i8* %185 to %struct.Curve*, !dbg !11723
  call void @BKE_curve_nurb_vert_active_validate(%struct.Curve* %186), !dbg !11725
  ret i32 4, !dbg !11726
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_select_random(%struct.wmOperatorType* %ot) #0 !dbg !11727 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !11728, metadata !DIExpression()), !dbg !11729
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11730
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !11731
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.149, i64 0, i64 0), i8** %name, align 8, !dbg !11732
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11733
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !11734
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.150, i64 0, i64 0), i8** %idname, align 8, !dbg !11735
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11736
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !11737
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.151, i64 0, i64 0), i8** %description, align 8, !dbg !11738
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11739
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !11740
  store i32 (%struct.bContext*, %struct.wmOperator*)* @curve_select_random_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !11741
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11742
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !11743
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !11744
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11745
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !11746
  store i16 3, i16* %flag, align 8, !dbg !11747
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11748
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !11749
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !11749
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !11748
  %call = call %struct.PropertyRNA* @RNA_def_float_percentage(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.152, i64 0, i64 0), float 5.000000e+01, float 0.000000e+00, float 1.000000e+02, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.153, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.154, i64 0, i64 0), float 0.000000e+00, float 1.000000e+02), !dbg !11750
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11751
  call void @WM_operator_properties_select_action_simple(%struct.wmOperatorType* %9, i32 1), !dbg !11752
  ret void, !dbg !11753
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @curve_select_random_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !11754 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %select = alloca i8, align 1
  %randfac = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11755, metadata !DIExpression()), !dbg !11756
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !11757, metadata !DIExpression()), !dbg !11758
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !11759, metadata !DIExpression()), !dbg !11760
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11761
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !11762
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !11760
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !11763, metadata !DIExpression()), !dbg !11764
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11765
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %1), !dbg !11766
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !11764
  call void @llvm.dbg.declare(metadata i8* %select, metadata !11767, metadata !DIExpression()), !dbg !11768
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11769
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !11770
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !11770
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.198, i64 0, i64 0)), !dbg !11771
  %cmp = icmp eq i32 %call2, 1, !dbg !11772
  %conv = zext i1 %cmp to i32, !dbg !11772
  %conv3 = trunc i32 %conv to i8, !dbg !11773
  store i8 %conv3, i8* %select, align 1, !dbg !11768
  call void @llvm.dbg.declare(metadata float* %randfac, metadata !11774, metadata !DIExpression()), !dbg !11775
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11776
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !11777
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !11777
  %call5 = call float @RNA_float_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.152, i64 0, i64 0)), !dbg !11778
  %div = fdiv float %call5, 1.000000e+02, !dbg !11779
  store float %div, float* %randfac, align 4, !dbg !11775
  %6 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !11780
  %7 = load float, float* %randfac, align 4, !dbg !11781
  %8 = load i8, i8* %select, align 1, !dbg !11782
  call void @curve_select_random(%struct.ListBase* %6, float %7, i8 zeroext %8), !dbg !11783
  %9 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11784
  %data = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 19, !dbg !11785
  %10 = load i8*, i8** %data, align 8, !dbg !11785
  %11 = bitcast i8* %10 to %struct.Curve*, !dbg !11784
  call void @BKE_curve_nurb_vert_active_validate(%struct.Curve* %11), !dbg !11786
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11787
  %13 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !11788
  %data6 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 19, !dbg !11789
  %14 = load i8*, i8** %data6, align 8, !dbg !11789
  call void @WM_event_add_notifier(%struct.bContext* %12, i32 274333696, i8* %14), !dbg !11790
  ret i32 4, !dbg !11791
}

declare dso_local %struct.PropertyRNA* @RNA_def_float_percentage(i8*, i8*, float, float, float, i8*, i8*, float, float) #2

declare dso_local void @WM_operator_properties_select_action_simple(%struct.wmOperatorType*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ED_curve_select_nth(%struct.Curve* %cu, i32 %nth) #0 !dbg !11792 {
entry:
  %retval = alloca i8, align 1
  %cu.addr = alloca %struct.Curve*, align 8
  %nth.addr = alloca i32, align 4
  %nu = alloca %struct.Nurb*, align 8
  %vert = alloca i8*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !11795, metadata !DIExpression()), !dbg !11796
  store i32 %nth, i32* %nth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nth.addr, metadata !11797, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !11799, metadata !DIExpression()), !dbg !11800
  store %struct.Nurb* null, %struct.Nurb** %nu, align 8, !dbg !11800
  call void @llvm.dbg.declare(metadata i8** %vert, metadata !11801, metadata !DIExpression()), !dbg !11802
  store i8* null, i8** %vert, align 8, !dbg !11802
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !11803
  %call = call zeroext i8 @BKE_curve_nurb_vert_active_get(%struct.Curve* %0, %struct.Nurb** %nu, i8** %vert), !dbg !11805
  %tobool = icmp ne i8 %call, 0, !dbg !11805
  br i1 %tobool, label %if.end, label %if.then, !dbg !11806

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !11807
  br label %return, !dbg !11807

if.end:                                           ; preds = %entry
  %1 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11808
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %1, i32 0, i32 18, !dbg !11810
  %2 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11810
  %tobool1 = icmp ne %struct.BezTriple* %2, null, !dbg !11808
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !11811

if.then2:                                         ; preds = %if.end
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11812
  %4 = load i8*, i8** %vert, align 8, !dbg !11814
  %5 = bitcast i8* %4 to %struct.BezTriple*, !dbg !11814
  %6 = load i32, i32* %nth.addr, align 4, !dbg !11815
  call void @select_nth_bezt(%struct.Nurb* %3, %struct.BezTriple* %5, i32 %6), !dbg !11816
  br label %if.end3, !dbg !11817

if.else:                                          ; preds = %if.end
  %7 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11818
  %8 = load i8*, i8** %vert, align 8, !dbg !11820
  %9 = bitcast i8* %8 to %struct.BPoint*, !dbg !11820
  %10 = load i32, i32* %nth.addr, align 4, !dbg !11821
  call void @select_nth_bp(%struct.Nurb* %7, %struct.BPoint* %9, i32 %10), !dbg !11822
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.then2
  store i8 1, i8* %retval, align 1, !dbg !11823
  br label %return, !dbg !11823

return:                                           ; preds = %if.end3, %if.then
  %11 = load i8, i8* %retval, align 1, !dbg !11824
  ret i8 %11, !dbg !11824
}

declare dso_local zeroext i8 @BKE_curve_nurb_vert_active_get(%struct.Curve*, %struct.Nurb**, i8**) #2

; Function Attrs: noinline nounwind uwtable
define internal void @select_nth_bezt(%struct.Nurb* %nu, %struct.BezTriple* %bezt, i32 %nth) #0 !dbg !11825 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %bezt.addr = alloca %struct.BezTriple*, align 8
  %nth.addr = alloca i32, align 4
  %a = alloca i32, align 4
  %start = alloca i32, align 4
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !11828, metadata !DIExpression()), !dbg !11829
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !11830, metadata !DIExpression()), !dbg !11831
  store i32 %nth, i32* %nth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nth.addr, metadata !11832, metadata !DIExpression()), !dbg !11833
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11834, metadata !DIExpression()), !dbg !11835
  call void @llvm.dbg.declare(metadata i32* %start, metadata !11836, metadata !DIExpression()), !dbg !11837
  %0 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !11838
  %1 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11839
  %bezt1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %1, i32 0, i32 18, !dbg !11840
  %2 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11840
  %sub.ptr.lhs.cast = ptrtoint %struct.BezTriple* %0 to i64, !dbg !11841
  %sub.ptr.rhs.cast = ptrtoint %struct.BezTriple* %2 to i64, !dbg !11841
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11841
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 72, !dbg !11841
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !11838
  store i32 %conv, i32* %start, align 4, !dbg !11842
  %3 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11843
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %3, i32 0, i32 6, !dbg !11844
  %4 = load i32, i32* %pntsu, align 8, !dbg !11844
  store i32 %4, i32* %a, align 4, !dbg !11845
  %5 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11846
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %5, i32 0, i32 18, !dbg !11847
  %6 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !11847
  %7 = load i32, i32* %a, align 4, !dbg !11848
  %sub = sub nsw i32 %7, 1, !dbg !11849
  %idxprom = sext i32 %sub to i64, !dbg !11846
  %arrayidx = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %6, i64 %idxprom, !dbg !11846
  store %struct.BezTriple* %arrayidx, %struct.BezTriple** %bezt.addr, align 8, !dbg !11850
  br label %while.cond, !dbg !11851

while.cond:                                       ; preds = %if.end, %entry
  %8 = load i32, i32* %a, align 4, !dbg !11852
  %dec = add nsw i32 %8, -1, !dbg !11852
  store i32 %dec, i32* %a, align 4, !dbg !11852
  %tobool = icmp ne i32 %8, 0, !dbg !11851
  br i1 %tobool, label %while.body, label %while.end, !dbg !11851

while.body:                                       ; preds = %while.cond
  %9 = load i32, i32* %start, align 4, !dbg !11853
  %10 = load i32, i32* %a, align 4, !dbg !11856
  %sub3 = sub nsw i32 %9, %10, !dbg !11857
  %call = call i32 @abs(i32 %sub3) #8, !dbg !11858
  %11 = load i32, i32* %nth.addr, align 4, !dbg !11859
  %rem = srem i32 %call, %11, !dbg !11860
  %tobool4 = icmp ne i32 %rem, 0, !dbg !11860
  br i1 %tobool4, label %if.then, label %if.end, !dbg !11861

if.then:                                          ; preds = %while.body
  %12 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !11862
  %call5 = call zeroext i8 @select_beztriple(%struct.BezTriple* %12, i8 zeroext 0, i16 signext 1, i32 1), !dbg !11864
  br label %if.end, !dbg !11865

if.end:                                           ; preds = %if.then, %while.body
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !11866
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %13, i32 -1, !dbg !11866
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt.addr, align 8, !dbg !11866
  br label %while.cond, !dbg !11851, !llvm.loop !11867

while.end:                                        ; preds = %while.cond
  ret void, !dbg !11869
}

; Function Attrs: noinline nounwind uwtable
define internal void @select_nth_bp(%struct.Nurb* %nu, %struct.BPoint* %bp, i32 %nth) #0 !dbg !11870 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %bp.addr = alloca %struct.BPoint*, align 8
  %nth.addr = alloca i32, align 4
  %a = alloca i32, align 4
  %startrow = alloca i32, align 4
  %startpnt = alloca i32, align 4
  %dist = alloca i32, align 4
  %row = alloca i32, align 4
  %pnt = alloca i32, align 4
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !11873, metadata !DIExpression()), !dbg !11874
  store %struct.BPoint* %bp, %struct.BPoint** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp.addr, metadata !11875, metadata !DIExpression()), !dbg !11876
  store i32 %nth, i32* %nth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nth.addr, metadata !11877, metadata !DIExpression()), !dbg !11878
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11879, metadata !DIExpression()), !dbg !11880
  call void @llvm.dbg.declare(metadata i32* %startrow, metadata !11881, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.declare(metadata i32* %startpnt, metadata !11883, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.declare(metadata i32* %dist, metadata !11885, metadata !DIExpression()), !dbg !11886
  call void @llvm.dbg.declare(metadata i32* %row, metadata !11887, metadata !DIExpression()), !dbg !11888
  call void @llvm.dbg.declare(metadata i32* %pnt, metadata !11889, metadata !DIExpression()), !dbg !11890
  %0 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !11891
  %1 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11892
  %bp1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %1, i32 0, i32 17, !dbg !11893
  %2 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !11893
  %sub.ptr.lhs.cast = ptrtoint %struct.BPoint* %0 to i64, !dbg !11894
  %sub.ptr.rhs.cast = ptrtoint %struct.BPoint* %2 to i64, !dbg !11894
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11894
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 36, !dbg !11894
  %3 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11895
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %3, i32 0, i32 6, !dbg !11896
  %4 = load i32, i32* %pntsu, align 8, !dbg !11896
  %conv = sext i32 %4 to i64, !dbg !11895
  %div = sdiv i64 %sub.ptr.div, %conv, !dbg !11897
  %conv2 = trunc i64 %div to i32, !dbg !11898
  store i32 %conv2, i32* %startrow, align 4, !dbg !11899
  %5 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !11900
  %6 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11901
  %bp3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 17, !dbg !11902
  %7 = load %struct.BPoint*, %struct.BPoint** %bp3, align 8, !dbg !11902
  %sub.ptr.lhs.cast4 = ptrtoint %struct.BPoint* %5 to i64, !dbg !11903
  %sub.ptr.rhs.cast5 = ptrtoint %struct.BPoint* %7 to i64, !dbg !11903
  %sub.ptr.sub6 = sub i64 %sub.ptr.lhs.cast4, %sub.ptr.rhs.cast5, !dbg !11903
  %sub.ptr.div7 = sdiv exact i64 %sub.ptr.sub6, 36, !dbg !11903
  %8 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11904
  %pntsu8 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 6, !dbg !11905
  %9 = load i32, i32* %pntsu8, align 8, !dbg !11905
  %conv9 = sext i32 %9 to i64, !dbg !11904
  %rem = srem i64 %sub.ptr.div7, %conv9, !dbg !11906
  %conv10 = trunc i64 %rem to i32, !dbg !11907
  store i32 %conv10, i32* %startpnt, align 4, !dbg !11908
  %10 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11909
  %pntsu11 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 6, !dbg !11910
  %11 = load i32, i32* %pntsu11, align 8, !dbg !11910
  %12 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11911
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 7, !dbg !11912
  %13 = load i32, i32* %pntsv, align 4, !dbg !11912
  %mul = mul nsw i32 %11, %13, !dbg !11913
  store i32 %mul, i32* %a, align 4, !dbg !11914
  %14 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11915
  %bp12 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 17, !dbg !11916
  %15 = load %struct.BPoint*, %struct.BPoint** %bp12, align 8, !dbg !11916
  %16 = load i32, i32* %a, align 4, !dbg !11917
  %sub = sub nsw i32 %16, 1, !dbg !11918
  %idxprom = sext i32 %sub to i64, !dbg !11915
  %arrayidx = getelementptr inbounds %struct.BPoint, %struct.BPoint* %15, i64 %idxprom, !dbg !11915
  store %struct.BPoint* %arrayidx, %struct.BPoint** %bp.addr, align 8, !dbg !11919
  %17 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11920
  %pntsv13 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %17, i32 0, i32 7, !dbg !11921
  %18 = load i32, i32* %pntsv13, align 4, !dbg !11921
  %sub14 = sub nsw i32 %18, 1, !dbg !11922
  store i32 %sub14, i32* %row, align 4, !dbg !11923
  %19 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11924
  %pntsu15 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %19, i32 0, i32 6, !dbg !11925
  %20 = load i32, i32* %pntsu15, align 8, !dbg !11925
  %sub16 = sub nsw i32 %20, 1, !dbg !11926
  store i32 %sub16, i32* %pnt, align 4, !dbg !11927
  br label %while.cond, !dbg !11928

while.cond:                                       ; preds = %if.end29, %entry
  %21 = load i32, i32* %a, align 4, !dbg !11929
  %dec = add nsw i32 %21, -1, !dbg !11929
  store i32 %dec, i32* %a, align 4, !dbg !11929
  %tobool = icmp ne i32 %21, 0, !dbg !11928
  br i1 %tobool, label %while.body, label %while.end, !dbg !11928

while.body:                                       ; preds = %while.cond
  %22 = load i32, i32* %pnt, align 4, !dbg !11930
  %23 = load i32, i32* %startpnt, align 4, !dbg !11932
  %sub17 = sub nsw i32 %22, %23, !dbg !11933
  %call = call i32 @abs(i32 %sub17) #8, !dbg !11934
  %24 = load i32, i32* %row, align 4, !dbg !11935
  %25 = load i32, i32* %startrow, align 4, !dbg !11936
  %sub18 = sub nsw i32 %24, %25, !dbg !11937
  %call19 = call i32 @abs(i32 %sub18) #8, !dbg !11938
  %add = add nsw i32 %call, %call19, !dbg !11939
  store i32 %add, i32* %dist, align 4, !dbg !11940
  %26 = load i32, i32* %dist, align 4, !dbg !11941
  %27 = load i32, i32* %nth.addr, align 4, !dbg !11943
  %rem20 = srem i32 %26, %27, !dbg !11944
  %tobool21 = icmp ne i32 %rem20, 0, !dbg !11944
  br i1 %tobool21, label %if.then, label %if.end, !dbg !11945

if.then:                                          ; preds = %while.body
  %28 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !11946
  %call22 = call zeroext i8 @select_bpoint(%struct.BPoint* %28, i8 zeroext 0, i16 signext 1, i8 zeroext 1), !dbg !11948
  br label %if.end, !dbg !11949

if.end:                                           ; preds = %if.then, %while.body
  %29 = load i32, i32* %pnt, align 4, !dbg !11950
  %dec23 = add nsw i32 %29, -1, !dbg !11950
  store i32 %dec23, i32* %pnt, align 4, !dbg !11950
  %30 = load i32, i32* %pnt, align 4, !dbg !11951
  %cmp = icmp slt i32 %30, 0, !dbg !11953
  br i1 %cmp, label %if.then25, label %if.end29, !dbg !11954

if.then25:                                        ; preds = %if.end
  %31 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11955
  %pntsu26 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %31, i32 0, i32 6, !dbg !11957
  %32 = load i32, i32* %pntsu26, align 8, !dbg !11957
  %sub27 = sub nsw i32 %32, 1, !dbg !11958
  store i32 %sub27, i32* %pnt, align 4, !dbg !11959
  %33 = load i32, i32* %row, align 4, !dbg !11960
  %dec28 = add nsw i32 %33, -1, !dbg !11960
  store i32 %dec28, i32* %row, align 4, !dbg !11960
  br label %if.end29, !dbg !11961

if.end29:                                         ; preds = %if.then25, %if.end
  %34 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !11962
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %34, i32 -1, !dbg !11962
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp.addr, align 8, !dbg !11962
  br label %while.cond, !dbg !11928, !llvm.loop !11963

while.end:                                        ; preds = %while.cond
  ret void, !dbg !11965
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_select_nth(%struct.wmOperatorType* %ot) #0 !dbg !11966 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !11967, metadata !DIExpression()), !dbg !11968
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11969
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !11970
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.155, i64 0, i64 0), i8** %name, align 8, !dbg !11971
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11972
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !11973
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.156, i64 0, i64 0), i8** %description, align 8, !dbg !11974
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11975
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !11976
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.157, i64 0, i64 0), i8** %idname, align 8, !dbg !11977
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11978
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !11979
  store i32 (%struct.bContext*, %struct.wmOperator*)* @select_nth_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !11980
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11981
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !11982
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !11983
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11984
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !11985
  store i16 3, i16* %flag, align 8, !dbg !11986
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11987
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !11988
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !11988
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !11987
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.158, i64 0, i64 0), i32 2, i32 2, i32 2147483647, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.159, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i64 0, i64 0), i32 2, i32 100), !dbg !11989
  ret void, !dbg !11990
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @select_nth_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !11991 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %nth = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11992, metadata !DIExpression()), !dbg !11993
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !11994, metadata !DIExpression()), !dbg !11995
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !11996, metadata !DIExpression()), !dbg !11997
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11998
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !11999
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !11997
  call void @llvm.dbg.declare(metadata i32* %nth, metadata !12000, metadata !DIExpression()), !dbg !12001
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12002
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !12003
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !12003
  %call1 = call i32 @RNA_int_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.158, i64 0, i64 0)), !dbg !12004
  store i32 %call1, i32* %nth, align 4, !dbg !12001
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12005
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !12007
  %4 = load i8*, i8** %data, align 8, !dbg !12007
  %5 = bitcast i8* %4 to %struct.Curve*, !dbg !12005
  %6 = load i32, i32* %nth, align 4, !dbg !12008
  %call2 = call zeroext i8 @ED_curve_select_nth(%struct.Curve* %5, i32 %6), !dbg !12009
  %tobool = icmp ne i8 %call2, 0, !dbg !12009
  br i1 %tobool, label %if.end6, label %if.then, !dbg !12010

if.then:                                          ; preds = %entry
  %7 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12011
  %type = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 3, !dbg !12014
  %8 = load i16, i16* %type, align 8, !dbg !12014
  %conv = sext i16 %8 to i32, !dbg !12011
  %cmp = icmp eq i32 %conv, 3, !dbg !12015
  br i1 %cmp, label %if.then4, label %if.else, !dbg !12016

if.then4:                                         ; preds = %if.then
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12017
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 8, !dbg !12019
  %10 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !12019
  call void @BKE_report(%struct.ReportList* %10, i32 32, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.220, i64 0, i64 0)), !dbg !12020
  br label %if.end, !dbg !12021

if.else:                                          ; preds = %if.then
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12022
  %reports5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %11, i32 0, i32 8, !dbg !12024
  %12 = load %struct.ReportList*, %struct.ReportList** %reports5, align 8, !dbg !12024
  call void @BKE_report(%struct.ReportList* %12, i32 32, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.221, i64 0, i64 0)), !dbg !12025
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  store i32 2, i32* %retval, align 4, !dbg !12026
  br label %return, !dbg !12026

if.end6:                                          ; preds = %entry
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12027
  %14 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12028
  %data7 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 19, !dbg !12029
  %15 = load i8*, i8** %data7, align 8, !dbg !12029
  call void @WM_event_add_notifier(%struct.bContext* %13, i32 274333696, i8* %15), !dbg !12030
  store i32 4, i32* %retval, align 4, !dbg !12031
  br label %return, !dbg !12031

return:                                           ; preds = %if.end6, %if.end
  %16 = load i32, i32* %retval, align 4, !dbg !12032
  ret i32 %16, !dbg !12032
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_duplicate(%struct.wmOperatorType* %ot) #0 !dbg !12033 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !12034, metadata !DIExpression()), !dbg !12035
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12036
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !12037
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.160, i64 0, i64 0), i8** %name, align 8, !dbg !12038
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12039
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !12040
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.161, i64 0, i64 0), i8** %description, align 8, !dbg !12041
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12042
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !12043
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.162, i64 0, i64 0), i8** %idname, align 8, !dbg !12044
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12045
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !12046
  store i32 (%struct.bContext*, %struct.wmOperator*)* @duplicate_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !12047
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12048
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !12049
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !12050
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12051
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !12052
  store i16 3, i16* %flag, align 8, !dbg !12053
  ret void, !dbg !12054
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @duplicate_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !12055 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %newnurb = alloca %struct.ListBase, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12056, metadata !DIExpression()), !dbg !12057
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !12058, metadata !DIExpression()), !dbg !12059
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !12060, metadata !DIExpression()), !dbg !12061
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12062
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !12063
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !12061
  call void @llvm.dbg.declare(metadata %struct.ListBase* %newnurb, metadata !12064, metadata !DIExpression()), !dbg !12065
  %1 = bitcast %struct.ListBase* %newnurb to i8*, !dbg !12065
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 16, i1 false), !dbg !12065
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12066
  call void @adduplicateflagNurb(%struct.Object* %2, %struct.ListBase* %newnurb, i16 signext 1, i8 zeroext 0), !dbg !12067
  %call1 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %newnurb), !dbg !12068
  %conv = zext i8 %call1 to i32, !dbg !12068
  %cmp = icmp eq i32 %conv, 0, !dbg !12070
  br i1 %cmp, label %if.then, label %if.else, !dbg !12071

if.then:                                          ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12072
  %call3 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %3), !dbg !12074
  call void @BLI_movelisttolist(%struct.ListBase* %call3, %struct.ListBase* %newnurb), !dbg !12075
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12076
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12077
  %data = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 19, !dbg !12078
  %6 = load i8*, i8** %data, align 8, !dbg !12078
  call void @WM_event_add_notifier(%struct.bContext* %4, i32 274333696, i8* %6), !dbg !12079
  br label %if.end, !dbg !12080

if.else:                                          ; preds = %entry
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12081
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 8, !dbg !12083
  %8 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !12083
  call void @BKE_report(%struct.ReportList* %8, i32 32, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.222, i64 0, i64 0)), !dbg !12084
  store i32 2, i32* %retval, align 4, !dbg !12085
  br label %return, !dbg !12085

if.end:                                           ; preds = %if.then
  store i32 4, i32* %retval, align 4, !dbg !12086
  br label %return, !dbg !12086

return:                                           ; preds = %if.end, %if.else
  %9 = load i32, i32* %retval, align 4, !dbg !12087
  ret i32 %9, !dbg !12087
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_delete(%struct.wmOperatorType* %ot) #0 !dbg !12088 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !12089, metadata !DIExpression()), !dbg !12090
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12091, metadata !DIExpression()), !dbg !12092
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12093
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !12094
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i64 0, i64 0), i8** %name, align 8, !dbg !12095
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12096
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !12097
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.164, i64 0, i64 0), i8** %description, align 8, !dbg !12098
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12099
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !12100
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.165, i64 0, i64 0), i8** %idname, align 8, !dbg !12101
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12102
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !12103
  store i32 (%struct.bContext*, %struct.wmOperator*)* @curve_delete_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !12104
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12105
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !12106
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !12107
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12108
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !12109
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !12110
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12111
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !12112
  store i16 3, i16* %flag, align 8, !dbg !12113
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12114
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !12115
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !12115
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !12114
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @curve_delete_type_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.166, i64 0, i64 0)), !dbg !12116
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12117
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12118
  call void @RNA_def_enum_funcs(%struct.PropertyRNA* %10, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)* @rna_curve_delete_type_itemf), !dbg !12119
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12120
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12121
  %prop1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 13, !dbg !12122
  store %struct.PropertyRNA* %11, %struct.PropertyRNA** %prop1, align 8, !dbg !12123
  ret void, !dbg !12124
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @curve_delete_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !12125 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %type = alloca i32, align 4
  %retval2 = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12126, metadata !DIExpression()), !dbg !12127
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !12128, metadata !DIExpression()), !dbg !12129
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !12130, metadata !DIExpression()), !dbg !12131
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12132
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !12133
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !12131
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !12134, metadata !DIExpression()), !dbg !12135
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12136
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !12137
  %2 = load i8*, i8** %data, align 8, !dbg !12137
  %3 = bitcast i8* %2 to %struct.Curve*, !dbg !12138
  store %struct.Curve* %3, %struct.Curve** %cu, align 8, !dbg !12135
  call void @llvm.dbg.declare(metadata i32* %type, metadata !12139, metadata !DIExpression()), !dbg !12141
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12142
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !12143
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !12143
  %call1 = call i32 @RNA_enum_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0)), !dbg !12144
  store i32 %call1, i32* %type, align 4, !dbg !12141
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !12145, metadata !DIExpression()), !dbg !12146
  store i32 2, i32* %retval2, align 4, !dbg !12146
  %6 = load i32, i32* %type, align 4, !dbg !12147
  %cmp = icmp eq i32 %6, 0, !dbg !12149
  br i1 %cmp, label %if.then, label %if.else, !dbg !12150

if.then:                                          ; preds = %entry
  %7 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12151
  %call3 = call i32 @curve_delete_vertices(%struct.Object* %7), !dbg !12152
  store i32 %call3, i32* %retval2, align 4, !dbg !12153
  br label %if.end8, !dbg !12154

if.else:                                          ; preds = %entry
  %8 = load i32, i32* %type, align 4, !dbg !12155
  %cmp4 = icmp eq i32 %8, 1, !dbg !12157
  br i1 %cmp4, label %if.then5, label %if.else7, !dbg !12158

if.then5:                                         ; preds = %if.else
  %9 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12159
  %call6 = call i32 @curve_delete_segments(%struct.Object* %9, i8 zeroext 0), !dbg !12160
  store i32 %call6, i32* %retval2, align 4, !dbg !12161
  br label %if.end, !dbg !12162

if.else7:                                         ; preds = %if.else
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then5
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval2, align 4, !dbg !12163
  %cmp9 = icmp eq i32 %10, 4, !dbg !12165
  br i1 %cmp9, label %if.then10, label %if.end17, !dbg !12166

if.then10:                                        ; preds = %if.end8
  %11 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !12167
  %actvert = getelementptr inbounds %struct.Curve, %struct.Curve* %11, i32 0, i32 32, !dbg !12169
  store i32 -1, i32* %actvert, align 8, !dbg !12170
  %12 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !12171
  %actnu = getelementptr inbounds %struct.Curve, %struct.Curve* %12, i32 0, i32 31, !dbg !12172
  store i32 -1, i32* %actnu, align 4, !dbg !12173
  %13 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12174
  %data11 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 19, !dbg !12176
  %14 = load i8*, i8** %data11, align 8, !dbg !12176
  %15 = bitcast i8* %14 to %struct.Curve*, !dbg !12174
  %call12 = call i32 @ED_curve_updateAnimPaths(%struct.Curve* %15), !dbg !12177
  %tobool = icmp ne i32 %call12, 0, !dbg !12177
  br i1 %tobool, label %if.then13, label %if.end14, !dbg !12178

if.then13:                                        ; preds = %if.then10
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12179
  %17 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12180
  %18 = bitcast %struct.Object* %17 to i8*, !dbg !12180
  call void @WM_event_add_notifier(%struct.bContext* %16, i32 85524480, i8* %18), !dbg !12181
  br label %if.end14, !dbg !12181

if.end14:                                         ; preds = %if.then13, %if.then10
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12182
  %20 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12183
  %data15 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 19, !dbg !12184
  %21 = load i8*, i8** %data15, align 8, !dbg !12184
  call void @WM_event_add_notifier(%struct.bContext* %19, i32 274399232, i8* %21), !dbg !12185
  %22 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12186
  %data16 = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 19, !dbg !12187
  %23 = load i8*, i8** %data16, align 8, !dbg !12187
  %24 = bitcast i8* %23 to %struct.ID*, !dbg !12186
  call void @DAG_id_tag_update(%struct.ID* %24, i16 signext 0), !dbg !12188
  %25 = load i32, i32* %retval2, align 4, !dbg !12189
  store i32 %25, i32* %retval, align 4, !dbg !12190
  br label %return, !dbg !12190

if.end17:                                         ; preds = %if.end8
  %26 = load i32, i32* %retval2, align 4, !dbg !12191
  store i32 %26, i32* %retval, align 4, !dbg !12192
  br label %return, !dbg !12192

return:                                           ; preds = %if.end17, %if.end14
  %27 = load i32, i32* %retval, align 4, !dbg !12193
  ret i32 %27, !dbg !12193
}

declare dso_local void @RNA_def_enum_funcs(%struct.PropertyRNA*, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.EnumPropertyItem* @rna_curve_delete_type_itemf(%struct.bContext* %C, %struct.PointerRNA* %UNUSED_ptr, %struct.PropertyRNA* %UNUSED_prop, i8* %r_free) #0 !dbg !12194 {
entry:
  %retval = alloca %struct.EnumPropertyItem*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %UNUSED_prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_free.addr = alloca i8*, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %totitem = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12201, metadata !DIExpression()), !dbg !12202
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !12203, metadata !DIExpression()), !dbg !12204
  store %struct.PropertyRNA* %UNUSED_prop, %struct.PropertyRNA** %UNUSED_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %UNUSED_prop.addr, metadata !12205, metadata !DIExpression()), !dbg !12206
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !12207, metadata !DIExpression()), !dbg !12208
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !12209, metadata !DIExpression()), !dbg !12210
  store %struct.EnumPropertyItem* null, %struct.EnumPropertyItem** %item, align 8, !dbg !12210
  call void @llvm.dbg.declare(metadata i32* %totitem, metadata !12211, metadata !DIExpression()), !dbg !12212
  store i32 0, i32* %totitem, align 4, !dbg !12212
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12213
  %tobool = icmp ne %struct.bContext* %0, null, !dbg !12213
  br i1 %tobool, label %if.end, label %if.then, !dbg !12215

if.then:                                          ; preds = %entry
  store %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @curve_delete_type_items, i64 0, i64 0), %struct.EnumPropertyItem** %retval, align 8, !dbg !12216
  br label %return, !dbg !12216

if.end:                                           ; preds = %entry
  call void @RNA_enum_items_add_value(%struct.EnumPropertyItem** %item, i32* %totitem, %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @curve_delete_type_items, i64 0, i64 0), i32 0), !dbg !12217
  call void @RNA_enum_items_add_value(%struct.EnumPropertyItem** %item, i32* %totitem, %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @curve_delete_type_items, i64 0, i64 0), i32 1), !dbg !12218
  call void @RNA_enum_item_end(%struct.EnumPropertyItem** %item, i32* %totitem), !dbg !12219
  %1 = load i8*, i8** %r_free.addr, align 8, !dbg !12220
  store i8 1, i8* %1, align 1, !dbg !12221
  %2 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !12222
  store %struct.EnumPropertyItem* %2, %struct.EnumPropertyItem** %retval, align 8, !dbg !12223
  br label %return, !dbg !12223

return:                                           ; preds = %if.end, %if.then
  %3 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %retval, align 8, !dbg !12224
  ret %struct.EnumPropertyItem* %3, !dbg !12224
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_shade_smooth(%struct.wmOperatorType* %ot) #0 !dbg !12225 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !12226, metadata !DIExpression()), !dbg !12227
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12228
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !12229
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.167, i64 0, i64 0), i8** %name, align 8, !dbg !12230
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12231
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !12232
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.168, i64 0, i64 0), i8** %idname, align 8, !dbg !12233
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12234
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !12235
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.169, i64 0, i64 0), i8** %description, align 8, !dbg !12236
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12237
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !12238
  store i32 (%struct.bContext*, %struct.wmOperator*)* @shade_smooth_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !12239
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12240
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !12241
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !12242
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12243
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !12244
  store i16 3, i16* %flag, align 8, !dbg !12245
  ret void, !dbg !12246
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @shade_smooth_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !12247 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %clear = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12248, metadata !DIExpression()), !dbg !12249
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !12250, metadata !DIExpression()), !dbg !12251
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !12252, metadata !DIExpression()), !dbg !12253
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12254
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !12255
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !12253
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !12256, metadata !DIExpression()), !dbg !12257
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12258
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %1), !dbg !12259
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !12257
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !12260, metadata !DIExpression()), !dbg !12261
  call void @llvm.dbg.declare(metadata i32* %clear, metadata !12262, metadata !DIExpression()), !dbg !12263
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12264
  %idname = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 2, !dbg !12265
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !12264
  %call2 = call i32 @strcmp(i8* %arraydecay, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.171, i64 0, i64 0)) #7, !dbg !12266
  %cmp = icmp eq i32 %call2, 0, !dbg !12267
  %conv = zext i1 %cmp to i32, !dbg !12267
  store i32 %conv, i32* %clear, align 4, !dbg !12263
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12268
  %type = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 3, !dbg !12270
  %4 = load i16, i16* %type, align 8, !dbg !12270
  %conv3 = sext i16 %4 to i32, !dbg !12268
  %cmp4 = icmp ne i32 %conv3, 2, !dbg !12271
  br i1 %cmp4, label %if.then, label %if.end, !dbg !12272

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !12273
  br label %return, !dbg !12273

if.end:                                           ; preds = %entry
  %5 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !12274
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !12276
  %6 = load i8*, i8** %first, align 8, !dbg !12276
  %7 = bitcast i8* %6 to %struct.Nurb*, !dbg !12274
  store %struct.Nurb* %7, %struct.Nurb** %nu, align 8, !dbg !12277
  br label %for.cond, !dbg !12278

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12279
  %tobool = icmp ne %struct.Nurb* %8, null, !dbg !12281
  br i1 %tobool, label %for.body, label %for.end, !dbg !12281

for.body:                                         ; preds = %for.cond
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12282
  %call6 = call i32 @isNurbsel(%struct.Nurb* %9), !dbg !12285
  %tobool7 = icmp ne i32 %call6, 0, !dbg !12285
  br i1 %tobool7, label %if.then8, label %if.end17, !dbg !12286

if.then8:                                         ; preds = %for.body
  %10 = load i32, i32* %clear, align 4, !dbg !12287
  %tobool9 = icmp ne i32 %10, 0, !dbg !12287
  br i1 %tobool9, label %if.else, label %if.then10, !dbg !12290

if.then10:                                        ; preds = %if.then8
  %11 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12291
  %flag = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 5, !dbg !12292
  %12 = load i16, i16* %flag, align 2, !dbg !12293
  %conv11 = sext i16 %12 to i32, !dbg !12293
  %or = or i32 %conv11, 1, !dbg !12293
  %conv12 = trunc i32 %or to i16, !dbg !12293
  store i16 %conv12, i16* %flag, align 2, !dbg !12293
  br label %if.end16, !dbg !12291

if.else:                                          ; preds = %if.then8
  %13 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12294
  %flag13 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 5, !dbg !12295
  %14 = load i16, i16* %flag13, align 2, !dbg !12296
  %conv14 = sext i16 %14 to i32, !dbg !12296
  %and = and i32 %conv14, -2, !dbg !12296
  %conv15 = trunc i32 %and to i16, !dbg !12296
  store i16 %conv15, i16* %flag13, align 2, !dbg !12296
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then10
  br label %if.end17, !dbg !12297

if.end17:                                         ; preds = %if.end16, %for.body
  br label %for.inc, !dbg !12298

for.inc:                                          ; preds = %if.end17
  %15 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12299
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %15, i32 0, i32 0, !dbg !12300
  %16 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !12300
  store %struct.Nurb* %16, %struct.Nurb** %nu, align 8, !dbg !12301
  br label %for.cond, !dbg !12302, !llvm.loop !12303

for.end:                                          ; preds = %for.cond
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12305
  %18 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12306
  %data = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 19, !dbg !12307
  %19 = load i8*, i8** %data, align 8, !dbg !12307
  call void @WM_event_add_notifier(%struct.bContext* %17, i32 274399232, i8* %19), !dbg !12308
  %20 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12309
  %data18 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 19, !dbg !12310
  %21 = load i8*, i8** %data18, align 8, !dbg !12310
  %22 = bitcast i8* %21 to %struct.ID*, !dbg !12309
  call void @DAG_id_tag_update(%struct.ID* %22, i16 signext 0), !dbg !12311
  store i32 4, i32* %retval, align 4, !dbg !12312
  br label %return, !dbg !12312

return:                                           ; preds = %for.end, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !12313
  ret i32 %23, !dbg !12313
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_shade_flat(%struct.wmOperatorType* %ot) #0 !dbg !12314 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !12315, metadata !DIExpression()), !dbg !12316
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12317
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !12318
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.170, i64 0, i64 0), i8** %name, align 8, !dbg !12319
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12320
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !12321
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.171, i64 0, i64 0), i8** %idname, align 8, !dbg !12322
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12323
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !12324
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.172, i64 0, i64 0), i8** %description, align 8, !dbg !12325
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12326
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !12327
  store i32 (%struct.bContext*, %struct.wmOperator*)* @shade_smooth_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !12328
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12329
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !12330
  store i32 (%struct.bContext*)* @ED_operator_editsurfcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !12331
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12332
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !12333
  store i16 3, i16* %flag, align 8, !dbg !12334
  ret void, !dbg !12335
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @join_curve_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !12336 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %bmain = alloca %struct.Main*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ob = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %newnu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %tempbase = alloca %struct.ListBase, align 8
  %imat = alloca [4 x [4 x float]], align 16
  %cmat = alloca [4 x [4 x float]], align 16
  %a = alloca i32, align 4
  %ok = alloca i8, align 1
  %ctx_data_list = alloca %struct.ListBase, align 8
  %ctx_link = alloca %struct.CollectionPointerLink*, align 8
  %base = alloca %struct.Base*, align 8
  %ctx_data_list10 = alloca %struct.ListBase, align 8
  %ctx_link11 = alloca %struct.CollectionPointerLink*, align 8
  %base17 = alloca %struct.Base*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12337, metadata !DIExpression()), !dbg !12338
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !12339, metadata !DIExpression()), !dbg !12340
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !12341, metadata !DIExpression()), !dbg !12342
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12343
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !12344
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !12342
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !12345, metadata !DIExpression()), !dbg !12346
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12347
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !12348
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !12346
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !12349, metadata !DIExpression()), !dbg !12350
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12351
  %call2 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %2), !dbg !12352
  store %struct.Object* %call2, %struct.Object** %ob, align 8, !dbg !12350
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !12353, metadata !DIExpression()), !dbg !12354
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !12355, metadata !DIExpression()), !dbg !12356
  call void @llvm.dbg.declare(metadata %struct.Nurb** %newnu, metadata !12357, metadata !DIExpression()), !dbg !12358
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !12359, metadata !DIExpression()), !dbg !12360
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !12361, metadata !DIExpression()), !dbg !12362
  call void @llvm.dbg.declare(metadata %struct.ListBase* %tempbase, metadata !12363, metadata !DIExpression()), !dbg !12364
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !12365, metadata !DIExpression()), !dbg !12366
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %cmat, metadata !12367, metadata !DIExpression()), !dbg !12368
  call void @llvm.dbg.declare(metadata i32* %a, metadata !12369, metadata !DIExpression()), !dbg !12370
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !12371, metadata !DIExpression()), !dbg !12372
  store i8 0, i8* %ok, align 1, !dbg !12372
  call void @llvm.dbg.declare(metadata %struct.ListBase* %ctx_data_list, metadata !12373, metadata !DIExpression()), !dbg !12375
  call void @llvm.dbg.declare(metadata %struct.CollectionPointerLink** %ctx_link, metadata !12376, metadata !DIExpression()), !dbg !12375
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12375
  %call3 = call i32 @CTX_data_selected_editable_bases(%struct.bContext* %3, %struct.ListBase* %ctx_data_list), !dbg !12375
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %ctx_data_list, i32 0, i32 0, !dbg !12385
  %4 = load i8*, i8** %first, align 8, !dbg !12385
  %5 = bitcast i8* %4 to %struct.CollectionPointerLink*, !dbg !12385
  store %struct.CollectionPointerLink* %5, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !12385
  br label %for.cond, !dbg !12385

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !12387
  %tobool = icmp ne %struct.CollectionPointerLink* %6, null, !dbg !12385
  br i1 %tobool, label %for.body, label %for.end, !dbg !12385

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !12389, metadata !DIExpression()), !dbg !12391
  %7 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !12391
  %ptr = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %7, i32 0, i32 2, !dbg !12391
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !12391
  %8 = load i8*, i8** %data, align 8, !dbg !12391
  %9 = bitcast i8* %8 to %struct.Base*, !dbg !12391
  store %struct.Base* %9, %struct.Base** %base, align 8, !dbg !12391
  %10 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !12392
  %object = getelementptr inbounds %struct.Base, %struct.Base* %10, i32 0, i32 7, !dbg !12395
  %11 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !12395
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12396
  %cmp = icmp eq %struct.Object* %11, %12, !dbg !12397
  br i1 %cmp, label %if.then, label %if.end, !dbg !12398

if.then:                                          ; preds = %for.body
  store i8 1, i8* %ok, align 1, !dbg !12399
  br label %for.end, !dbg !12401

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !12402

for.inc:                                          ; preds = %if.end
  %13 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !12387
  %next = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %13, i32 0, i32 0, !dbg !12387
  %14 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %next, align 8, !dbg !12387
  store %struct.CollectionPointerLink* %14, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !12387
  br label %for.cond, !dbg !12387, !llvm.loop !12403

for.end:                                          ; preds = %if.then, %for.cond
  call void @BLI_freelistN(%struct.ListBase* %ctx_data_list), !dbg !12405
  %15 = load i8, i8* %ok, align 1, !dbg !12406
  %conv = zext i8 %15 to i32, !dbg !12406
  %cmp4 = icmp eq i32 %conv, 0, !dbg !12408
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !12409

if.then6:                                         ; preds = %for.end
  %16 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12410
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %16, i32 0, i32 8, !dbg !12412
  %17 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !12412
  call void @BKE_report(%struct.ReportList* %17, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.173, i64 0, i64 0)), !dbg !12413
  store i32 2, i32* %retval, align 4, !dbg !12414
  br label %return, !dbg !12414

if.end7:                                          ; preds = %for.end
  call void @BLI_listbase_clear(%struct.ListBase* %tempbase), !dbg !12415
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !12416
  %18 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12417
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 47, !dbg !12418
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !12417
  %call9 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay8), !dbg !12419
  call void @llvm.dbg.declare(metadata %struct.ListBase* %ctx_data_list10, metadata !12420, metadata !DIExpression()), !dbg !12422
  call void @llvm.dbg.declare(metadata %struct.CollectionPointerLink** %ctx_link11, metadata !12423, metadata !DIExpression()), !dbg !12422
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12422
  %call12 = call i32 @CTX_data_selected_editable_bases(%struct.bContext* %19, %struct.ListBase* %ctx_data_list10), !dbg !12422
  %first13 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %ctx_data_list10, i32 0, i32 0, !dbg !12424
  %20 = load i8*, i8** %first13, align 8, !dbg !12424
  %21 = bitcast i8* %20 to %struct.CollectionPointerLink*, !dbg !12424
  store %struct.CollectionPointerLink* %21, %struct.CollectionPointerLink** %ctx_link11, align 8, !dbg !12424
  br label %for.cond14, !dbg !12424

for.cond14:                                       ; preds = %for.inc103, %if.end7
  %22 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link11, align 8, !dbg !12426
  %tobool15 = icmp ne %struct.CollectionPointerLink* %22, null, !dbg !12424
  br i1 %tobool15, label %for.body16, label %for.end105, !dbg !12424

for.body16:                                       ; preds = %for.cond14
  call void @llvm.dbg.declare(metadata %struct.Base** %base17, metadata !12428, metadata !DIExpression()), !dbg !12430
  %23 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link11, align 8, !dbg !12430
  %ptr18 = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %23, i32 0, i32 2, !dbg !12430
  %data19 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr18, i32 0, i32 2, !dbg !12430
  %24 = load i8*, i8** %data19, align 8, !dbg !12430
  %25 = bitcast i8* %24 to %struct.Base*, !dbg !12430
  store %struct.Base* %25, %struct.Base** %base17, align 8, !dbg !12430
  %26 = load %struct.Base*, %struct.Base** %base17, align 8, !dbg !12431
  %object20 = getelementptr inbounds %struct.Base, %struct.Base* %26, i32 0, i32 7, !dbg !12434
  %27 = load %struct.Object*, %struct.Object** %object20, align 8, !dbg !12434
  %type = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 3, !dbg !12435
  %28 = load i16, i16* %type, align 8, !dbg !12435
  %conv21 = sext i16 %28 to i32, !dbg !12431
  %29 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12436
  %type22 = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 3, !dbg !12437
  %30 = load i16, i16* %type22, align 8, !dbg !12437
  %conv23 = sext i16 %30 to i32, !dbg !12436
  %cmp24 = icmp eq i32 %conv21, %conv23, !dbg !12438
  br i1 %cmp24, label %if.then26, label %if.end102, !dbg !12439

if.then26:                                        ; preds = %for.body16
  %31 = load %struct.Base*, %struct.Base** %base17, align 8, !dbg !12440
  %object27 = getelementptr inbounds %struct.Base, %struct.Base* %31, i32 0, i32 7, !dbg !12443
  %32 = load %struct.Object*, %struct.Object** %object27, align 8, !dbg !12443
  %33 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12444
  %cmp28 = icmp ne %struct.Object* %32, %33, !dbg !12445
  br i1 %cmp28, label %if.then30, label %if.end101, !dbg !12446

if.then30:                                        ; preds = %if.then26
  %34 = load %struct.Base*, %struct.Base** %base17, align 8, !dbg !12447
  %object31 = getelementptr inbounds %struct.Base, %struct.Base* %34, i32 0, i32 7, !dbg !12449
  %35 = load %struct.Object*, %struct.Object** %object31, align 8, !dbg !12449
  %data32 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 19, !dbg !12450
  %36 = load i8*, i8** %data32, align 8, !dbg !12450
  %37 = bitcast i8* %36 to %struct.Curve*, !dbg !12447
  store %struct.Curve* %37, %struct.Curve** %cu, align 8, !dbg !12451
  %38 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !12452
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %38, i32 0, i32 3, !dbg !12454
  %first33 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb, i32 0, i32 0, !dbg !12455
  %39 = load i8*, i8** %first33, align 8, !dbg !12455
  %tobool34 = icmp ne i8* %39, null, !dbg !12452
  br i1 %tobool34, label %if.then35, label %if.end100, !dbg !12456

if.then35:                                        ; preds = %if.then30
  %arraydecay36 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %cmat, i64 0, i64 0, !dbg !12457
  %arraydecay37 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !12459
  %40 = load %struct.Base*, %struct.Base** %base17, align 8, !dbg !12460
  %object38 = getelementptr inbounds %struct.Base, %struct.Base* %40, i32 0, i32 7, !dbg !12461
  %41 = load %struct.Object*, %struct.Object** %object38, align 8, !dbg !12461
  %obmat39 = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 47, !dbg !12462
  %arraydecay40 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat39, i64 0, i64 0, !dbg !12460
  call void @mul_m4_m4m4([4 x float]* %arraydecay36, [4 x float]* %arraydecay37, [4 x float]* %arraydecay40), !dbg !12463
  %42 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !12464
  %nurb41 = getelementptr inbounds %struct.Curve, %struct.Curve* %42, i32 0, i32 3, !dbg !12465
  %first42 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb41, i32 0, i32 0, !dbg !12466
  %43 = load i8*, i8** %first42, align 8, !dbg !12466
  %44 = bitcast i8* %43 to %struct.Nurb*, !dbg !12464
  store %struct.Nurb* %44, %struct.Nurb** %nu, align 8, !dbg !12467
  br label %while.cond, !dbg !12468

while.cond:                                       ; preds = %if.end97, %if.then35
  %45 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12469
  %tobool43 = icmp ne %struct.Nurb* %45, null, !dbg !12468
  br i1 %tobool43, label %while.body, label %while.end99, !dbg !12468

while.body:                                       ; preds = %while.cond
  %46 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12470
  %call44 = call %struct.Nurb* @BKE_nurb_duplicate(%struct.Nurb* %46), !dbg !12472
  store %struct.Nurb* %call44, %struct.Nurb** %newnu, align 8, !dbg !12473
  %47 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12474
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %47, i32 0, i32 31, !dbg !12476
  %48 = load i32, i32* %totcol, align 8, !dbg !12476
  %tobool45 = icmp ne i32 %48, 0, !dbg !12474
  br i1 %tobool45, label %if.then46, label %if.else64, !dbg !12477

if.then46:                                        ; preds = %while.body
  %49 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !12478
  %mat_nr = getelementptr inbounds %struct.Nurb, %struct.Nurb* %49, i32 0, i32 3, !dbg !12478
  %50 = load i16, i16* %mat_nr, align 2, !dbg !12478
  %conv47 = sext i16 %50 to i32, !dbg !12478
  %cmp48 = icmp slt i32 %conv47, 0, !dbg !12478
  br i1 %cmp48, label %if.then50, label %if.else, !dbg !12482

if.then50:                                        ; preds = %if.then46
  %51 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !12478
  %mat_nr51 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %51, i32 0, i32 3, !dbg !12478
  store i16 0, i16* %mat_nr51, align 2, !dbg !12478
  br label %if.end63, !dbg !12478

if.else:                                          ; preds = %if.then46
  %52 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !12483
  %mat_nr52 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %52, i32 0, i32 3, !dbg !12483
  %53 = load i16, i16* %mat_nr52, align 2, !dbg !12483
  %conv53 = sext i16 %53 to i32, !dbg !12483
  %54 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12483
  %totcol54 = getelementptr inbounds %struct.Object, %struct.Object* %54, i32 0, i32 31, !dbg !12483
  %55 = load i32, i32* %totcol54, align 8, !dbg !12483
  %sub = sub nsw i32 %55, 1, !dbg !12483
  %cmp55 = icmp sgt i32 %conv53, %sub, !dbg !12483
  br i1 %cmp55, label %if.then57, label %if.end62, !dbg !12478

if.then57:                                        ; preds = %if.else
  %56 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12483
  %totcol58 = getelementptr inbounds %struct.Object, %struct.Object* %56, i32 0, i32 31, !dbg !12483
  %57 = load i32, i32* %totcol58, align 8, !dbg !12483
  %sub59 = sub nsw i32 %57, 1, !dbg !12483
  %conv60 = trunc i32 %sub59 to i16, !dbg !12483
  %58 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !12483
  %mat_nr61 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %58, i32 0, i32 3, !dbg !12483
  store i16 %conv60, i16* %mat_nr61, align 2, !dbg !12483
  br label %if.end62, !dbg !12483

if.end62:                                         ; preds = %if.then57, %if.else
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then50
  br label %if.end66, !dbg !12485

if.else64:                                        ; preds = %while.body
  %59 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !12486
  %mat_nr65 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %59, i32 0, i32 3, !dbg !12488
  store i16 0, i16* %mat_nr65, align 2, !dbg !12489
  br label %if.end66

if.end66:                                         ; preds = %if.else64, %if.end63
  %60 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !12490
  %61 = bitcast %struct.Nurb* %60 to i8*, !dbg !12490
  call void @BLI_addtail(%struct.ListBase* %tempbase, i8* %61), !dbg !12491
  %62 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !12492
  %bezt67 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %62, i32 0, i32 18, !dbg !12494
  %63 = load %struct.BezTriple*, %struct.BezTriple** %bezt67, align 8, !dbg !12494
  store %struct.BezTriple* %63, %struct.BezTriple** %bezt, align 8, !dbg !12495
  %tobool68 = icmp ne %struct.BezTriple* %63, null, !dbg !12495
  br i1 %tobool68, label %if.then69, label %if.end83, !dbg !12496

if.then69:                                        ; preds = %if.end66
  %64 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !12497
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %64, i32 0, i32 6, !dbg !12499
  %65 = load i32, i32* %pntsu, align 8, !dbg !12499
  store i32 %65, i32* %a, align 4, !dbg !12500
  br label %while.cond70, !dbg !12501

while.cond70:                                     ; preds = %while.body72, %if.then69
  %66 = load i32, i32* %a, align 4, !dbg !12502
  %dec = add nsw i32 %66, -1, !dbg !12502
  store i32 %dec, i32* %a, align 4, !dbg !12502
  %tobool71 = icmp ne i32 %66, 0, !dbg !12501
  br i1 %tobool71, label %while.body72, label %while.end, !dbg !12501

while.body72:                                     ; preds = %while.cond70
  %arraydecay73 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %cmat, i64 0, i64 0, !dbg !12503
  %67 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12505
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %67, i32 0, i32 0, !dbg !12506
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !12505
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !12505
  call void @mul_m4_v3([4 x float]* %arraydecay73, float* %arraydecay74), !dbg !12507
  %arraydecay75 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %cmat, i64 0, i64 0, !dbg !12508
  %68 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12509
  %vec76 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %68, i32 0, i32 0, !dbg !12510
  %arrayidx77 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec76, i64 0, i64 1, !dbg !12509
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx77, i64 0, i64 0, !dbg !12509
  call void @mul_m4_v3([4 x float]* %arraydecay75, float* %arraydecay78), !dbg !12511
  %arraydecay79 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %cmat, i64 0, i64 0, !dbg !12512
  %69 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12513
  %vec80 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %69, i32 0, i32 0, !dbg !12514
  %arrayidx81 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec80, i64 0, i64 2, !dbg !12513
  %arraydecay82 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx81, i64 0, i64 0, !dbg !12513
  call void @mul_m4_v3([4 x float]* %arraydecay79, float* %arraydecay82), !dbg !12515
  %70 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12516
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %70, i32 1, !dbg !12516
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !12516
  br label %while.cond70, !dbg !12501, !llvm.loop !12517

while.end:                                        ; preds = %while.cond70
  %71 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !12519
  call void @BKE_nurb_handles_calc(%struct.Nurb* %71), !dbg !12520
  br label %if.end83, !dbg !12521

if.end83:                                         ; preds = %while.end, %if.end66
  %72 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !12522
  %bp84 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %72, i32 0, i32 17, !dbg !12524
  %73 = load %struct.BPoint*, %struct.BPoint** %bp84, align 8, !dbg !12524
  store %struct.BPoint* %73, %struct.BPoint** %bp, align 8, !dbg !12525
  %tobool85 = icmp ne %struct.BPoint* %73, null, !dbg !12525
  br i1 %tobool85, label %if.then86, label %if.end97, !dbg !12526

if.then86:                                        ; preds = %if.end83
  %74 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !12527
  %pntsu87 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %74, i32 0, i32 6, !dbg !12529
  %75 = load i32, i32* %pntsu87, align 8, !dbg !12529
  %76 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12530
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %76, i32 0, i32 7, !dbg !12531
  %77 = load i32, i32* %pntsv, align 4, !dbg !12531
  %mul = mul nsw i32 %75, %77, !dbg !12532
  store i32 %mul, i32* %a, align 4, !dbg !12533
  br label %while.cond88, !dbg !12534

while.cond88:                                     ; preds = %while.body91, %if.then86
  %78 = load i32, i32* %a, align 4, !dbg !12535
  %dec89 = add nsw i32 %78, -1, !dbg !12535
  store i32 %dec89, i32* %a, align 4, !dbg !12535
  %tobool90 = icmp ne i32 %78, 0, !dbg !12534
  br i1 %tobool90, label %while.body91, label %while.end96, !dbg !12534

while.body91:                                     ; preds = %while.cond88
  %arraydecay92 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %cmat, i64 0, i64 0, !dbg !12536
  %79 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12538
  %vec93 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %79, i32 0, i32 0, !dbg !12539
  %arraydecay94 = getelementptr inbounds [4 x float], [4 x float]* %vec93, i64 0, i64 0, !dbg !12538
  call void @mul_m4_v3([4 x float]* %arraydecay92, float* %arraydecay94), !dbg !12540
  %80 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12541
  %incdec.ptr95 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %80, i32 1, !dbg !12541
  store %struct.BPoint* %incdec.ptr95, %struct.BPoint** %bp, align 8, !dbg !12541
  br label %while.cond88, !dbg !12534, !llvm.loop !12542

while.end96:                                      ; preds = %while.cond88
  br label %if.end97, !dbg !12544

if.end97:                                         ; preds = %while.end96, %if.end83
  %81 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12545
  %next98 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %81, i32 0, i32 0, !dbg !12546
  %82 = load %struct.Nurb*, %struct.Nurb** %next98, align 8, !dbg !12546
  store %struct.Nurb* %82, %struct.Nurb** %nu, align 8, !dbg !12547
  br label %while.cond, !dbg !12468, !llvm.loop !12548

while.end99:                                      ; preds = %while.cond
  br label %if.end100, !dbg !12550

if.end100:                                        ; preds = %while.end99, %if.then30
  %83 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !12551
  %84 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12552
  %85 = load %struct.Base*, %struct.Base** %base17, align 8, !dbg !12553
  call void @ED_base_object_free_and_unlink(%struct.Main* %83, %struct.Scene* %84, %struct.Base* %85), !dbg !12554
  br label %if.end101, !dbg !12555

if.end101:                                        ; preds = %if.end100, %if.then26
  br label %if.end102, !dbg !12556

if.end102:                                        ; preds = %if.end101, %for.body16
  br label %for.inc103, !dbg !12557

for.inc103:                                       ; preds = %if.end102
  %86 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link11, align 8, !dbg !12426
  %next104 = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %86, i32 0, i32 0, !dbg !12426
  %87 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %next104, align 8, !dbg !12426
  store %struct.CollectionPointerLink* %87, %struct.CollectionPointerLink** %ctx_link11, align 8, !dbg !12426
  br label %for.cond14, !dbg !12426, !llvm.loop !12558

for.end105:                                       ; preds = %for.cond14
  call void @BLI_freelistN(%struct.ListBase* %ctx_data_list10), !dbg !12560
  %88 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12561
  %data106 = getelementptr inbounds %struct.Object, %struct.Object* %88, i32 0, i32 19, !dbg !12562
  %89 = load i8*, i8** %data106, align 8, !dbg !12562
  %90 = bitcast i8* %89 to %struct.Curve*, !dbg !12561
  store %struct.Curve* %90, %struct.Curve** %cu, align 8, !dbg !12563
  %91 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !12564
  %nurb107 = getelementptr inbounds %struct.Curve, %struct.Curve* %91, i32 0, i32 3, !dbg !12565
  call void @BLI_movelisttolist(%struct.ListBase* %nurb107, %struct.ListBase* %tempbase), !dbg !12566
  %92 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !12567
  call void @DAG_relations_tag_update(%struct.Main* %92), !dbg !12568
  %93 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12569
  call void @ED_object_editmode_enter(%struct.bContext* %93, i32 4), !dbg !12570
  %94 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12571
  call void @ED_object_editmode_exit(%struct.bContext* %94, i32 13), !dbg !12572
  %95 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12573
  %96 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12574
  %97 = bitcast %struct.Scene* %96 to i8*, !dbg !12574
  call void @WM_event_add_notifier(%struct.bContext* %95, i32 67567616, i8* %97), !dbg !12575
  store i32 4, i32* %retval, align 4, !dbg !12576
  br label %return, !dbg !12576

return:                                           ; preds = %for.end105, %if.then6
  %98 = load i32, i32* %retval, align 4, !dbg !12577
  ret i32 %98, !dbg !12577
}

declare dso_local %struct.Main* @CTX_data_main(%struct.bContext*) #2

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #2

declare dso_local %struct.Object* @CTX_data_active_object(%struct.bContext*) #2

declare dso_local i32 @CTX_data_selected_editable_bases(%struct.bContext*, %struct.ListBase*) #2

declare dso_local void @BLI_freelistN(%struct.ListBase*) #2

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !12578 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !12583, metadata !DIExpression()), !dbg !12584
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !12585
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !12586
  store i8* null, i8** %last, align 8, !dbg !12587
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !12588
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !12589
  store i8* null, i8** %first, align 8, !dbg !12590
  ret void, !dbg !12591
}

declare dso_local zeroext i8 @invert_m4_m4([4 x float]*, [4 x float]*) #2

declare dso_local void @mul_m4_m4m4([4 x float]*, [4 x float]*, [4 x float]*) #2

declare dso_local void @mul_m4_v3([4 x float]*, float*) #2

declare dso_local void @BKE_nurb_handles_calc(%struct.Nurb*) #2

declare dso_local void @ED_base_object_free_and_unlink(%struct.Main*, %struct.Scene*, %struct.Base*) #2

declare dso_local void @BLI_movelisttolist(%struct.ListBase*, %struct.ListBase*) #2

declare dso_local void @DAG_relations_tag_update(%struct.Main*) #2

declare dso_local void @ED_object_editmode_enter(%struct.bContext*, i32) #2

declare dso_local void @ED_object_editmode_exit(%struct.bContext*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_tilt_clear(%struct.wmOperatorType* %ot) #0 !dbg !12592 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !12593, metadata !DIExpression()), !dbg !12594
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12595
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !12596
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.174, i64 0, i64 0), i8** %name, align 8, !dbg !12597
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12598
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !12599
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.175, i64 0, i64 0), i8** %idname, align 8, !dbg !12600
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12601
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !12602
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.176, i64 0, i64 0), i8** %description, align 8, !dbg !12603
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12604
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !12605
  store i32 (%struct.bContext*, %struct.wmOperator*)* @clear_tilt_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !12606
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12607
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !12608
  store i32 (%struct.bContext*)* @ED_operator_editcurve, i32 (%struct.bContext*)** %poll, align 8, !dbg !12609
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12610
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !12611
  store i16 3, i16* %flag, align 8, !dbg !12612
  ret void, !dbg !12613
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @clear_tilt_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !12614 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12615, metadata !DIExpression()), !dbg !12616
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !12617, metadata !DIExpression()), !dbg !12618
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !12619, metadata !DIExpression()), !dbg !12620
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12621
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !12622
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !12620
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !12623, metadata !DIExpression()), !dbg !12624
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12625
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !12626
  %2 = load i8*, i8** %data, align 8, !dbg !12626
  %3 = bitcast i8* %2 to %struct.Curve*, !dbg !12625
  store %struct.Curve* %3, %struct.Curve** %cu, align 8, !dbg !12624
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !12627, metadata !DIExpression()), !dbg !12628
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12629
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %4), !dbg !12630
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !12628
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !12631, metadata !DIExpression()), !dbg !12632
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !12633, metadata !DIExpression()), !dbg !12634
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !12635, metadata !DIExpression()), !dbg !12636
  call void @llvm.dbg.declare(metadata i32* %a, metadata !12637, metadata !DIExpression()), !dbg !12638
  %5 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !12639
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !12641
  %6 = load i8*, i8** %first, align 8, !dbg !12641
  %7 = bitcast i8* %6 to %struct.Nurb*, !dbg !12639
  store %struct.Nurb* %7, %struct.Nurb** %nu, align 8, !dbg !12642
  br label %for.cond, !dbg !12643

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12644
  %tobool = icmp ne %struct.Nurb* %8, null, !dbg !12646
  br i1 %tobool, label %for.body, label %for.end, !dbg !12646

for.body:                                         ; preds = %for.cond
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12647
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 18, !dbg !12650
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !12650
  %tobool3 = icmp ne %struct.BezTriple* %10, null, !dbg !12647
  br i1 %tobool3, label %if.then, label %if.else, !dbg !12651

if.then:                                          ; preds = %for.body
  %11 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12652
  %bezt4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 18, !dbg !12654
  %12 = load %struct.BezTriple*, %struct.BezTriple** %bezt4, align 8, !dbg !12654
  store %struct.BezTriple* %12, %struct.BezTriple** %bezt, align 8, !dbg !12655
  %13 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12656
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 6, !dbg !12657
  %14 = load i32, i32* %pntsu, align 8, !dbg !12657
  store i32 %14, i32* %a, align 4, !dbg !12658
  br label %while.cond, !dbg !12659

while.cond:                                       ; preds = %if.end, %if.then
  %15 = load i32, i32* %a, align 4, !dbg !12660
  %dec = add nsw i32 %15, -1, !dbg !12660
  store i32 %dec, i32* %a, align 4, !dbg !12660
  %tobool5 = icmp ne i32 %15, 0, !dbg !12659
  br i1 %tobool5, label %while.body, label %while.end, !dbg !12659

while.body:                                       ; preds = %while.cond
  %16 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !12661
  %drawflag = getelementptr inbounds %struct.Curve, %struct.Curve* %16, i32 0, i32 16, !dbg !12661
  %17 = load i16, i16* %drawflag, align 8, !dbg !12661
  %conv = sext i16 %17 to i32, !dbg !12661
  %and = and i32 %conv, 1, !dbg !12661
  %tobool6 = icmp ne i32 %and, 0, !dbg !12661
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !12664

cond.true:                                        ; preds = %while.body
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12661
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %18, i32 0, i32 8, !dbg !12661
  %19 = load i8, i8* %f2, align 4, !dbg !12661
  %conv7 = zext i8 %19 to i32, !dbg !12661
  %and8 = and i32 %conv7, 1, !dbg !12661
  %tobool9 = icmp ne i32 %and8, 0, !dbg !12661
  br i1 %tobool9, label %if.then21, label %if.end, !dbg !12661

cond.false:                                       ; preds = %while.body
  %20 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12661
  %f210 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %20, i32 0, i32 8, !dbg !12661
  %21 = load i8, i8* %f210, align 4, !dbg !12661
  %conv11 = zext i8 %21 to i32, !dbg !12661
  %and12 = and i32 %conv11, 1, !dbg !12661
  %tobool13 = icmp ne i32 %and12, 0, !dbg !12661
  br i1 %tobool13, label %if.then21, label %lor.lhs.false, !dbg !12661

lor.lhs.false:                                    ; preds = %cond.false
  %22 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12661
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %22, i32 0, i32 7, !dbg !12661
  %23 = load i8, i8* %f1, align 1, !dbg !12661
  %conv14 = zext i8 %23 to i32, !dbg !12661
  %and15 = and i32 %conv14, 1, !dbg !12661
  %tobool16 = icmp ne i32 %and15, 0, !dbg !12661
  br i1 %tobool16, label %if.then21, label %lor.lhs.false17, !dbg !12661

lor.lhs.false17:                                  ; preds = %lor.lhs.false
  %24 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12661
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %24, i32 0, i32 9, !dbg !12661
  %25 = load i8, i8* %f3, align 1, !dbg !12661
  %conv18 = zext i8 %25 to i32, !dbg !12661
  %and19 = and i32 %conv18, 1, !dbg !12661
  %tobool20 = icmp ne i32 %and19, 0, !dbg !12661
  br i1 %tobool20, label %if.then21, label %if.end, !dbg !12664

if.then21:                                        ; preds = %lor.lhs.false17, %lor.lhs.false, %cond.false, %cond.true
  %26 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12665
  %alfa = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %26, i32 0, i32 1, !dbg !12666
  store float 0.000000e+00, float* %alfa, align 4, !dbg !12667
  br label %if.end, !dbg !12665

if.end:                                           ; preds = %if.then21, %lor.lhs.false17, %cond.true
  %27 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12668
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %27, i32 1, !dbg !12668
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !12668
  br label %while.cond, !dbg !12659, !llvm.loop !12669

while.end:                                        ; preds = %while.cond
  br label %if.end41, !dbg !12671

if.else:                                          ; preds = %for.body
  %28 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12672
  %bp22 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 17, !dbg !12674
  %29 = load %struct.BPoint*, %struct.BPoint** %bp22, align 8, !dbg !12674
  %tobool23 = icmp ne %struct.BPoint* %29, null, !dbg !12672
  br i1 %tobool23, label %if.then24, label %if.end40, !dbg !12675

if.then24:                                        ; preds = %if.else
  %30 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12676
  %bp25 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %30, i32 0, i32 17, !dbg !12678
  %31 = load %struct.BPoint*, %struct.BPoint** %bp25, align 8, !dbg !12678
  store %struct.BPoint* %31, %struct.BPoint** %bp, align 8, !dbg !12679
  %32 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12680
  %pntsu26 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %32, i32 0, i32 6, !dbg !12681
  %33 = load i32, i32* %pntsu26, align 8, !dbg !12681
  %34 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12682
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %34, i32 0, i32 7, !dbg !12683
  %35 = load i32, i32* %pntsv, align 4, !dbg !12683
  %mul = mul nsw i32 %33, %35, !dbg !12684
  store i32 %mul, i32* %a, align 4, !dbg !12685
  br label %while.cond27, !dbg !12686

while.cond27:                                     ; preds = %if.end37, %if.then24
  %36 = load i32, i32* %a, align 4, !dbg !12687
  %dec28 = add nsw i32 %36, -1, !dbg !12687
  store i32 %dec28, i32* %a, align 4, !dbg !12687
  %tobool29 = icmp ne i32 %36, 0, !dbg !12686
  br i1 %tobool29, label %while.body30, label %while.end39, !dbg !12686

while.body30:                                     ; preds = %while.cond27
  %37 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12688
  %f131 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %37, i32 0, i32 3, !dbg !12691
  %38 = load i16, i16* %f131, align 4, !dbg !12691
  %conv32 = sext i16 %38 to i32, !dbg !12688
  %and33 = and i32 %conv32, 1, !dbg !12692
  %tobool34 = icmp ne i32 %and33, 0, !dbg !12692
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !12693

if.then35:                                        ; preds = %while.body30
  %39 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12694
  %alfa36 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %39, i32 0, i32 1, !dbg !12695
  store float 0.000000e+00, float* %alfa36, align 4, !dbg !12696
  br label %if.end37, !dbg !12694

if.end37:                                         ; preds = %if.then35, %while.body30
  %40 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12697
  %incdec.ptr38 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %40, i32 1, !dbg !12697
  store %struct.BPoint* %incdec.ptr38, %struct.BPoint** %bp, align 8, !dbg !12697
  br label %while.cond27, !dbg !12686, !llvm.loop !12698

while.end39:                                      ; preds = %while.cond27
  br label %if.end40, !dbg !12700

if.end40:                                         ; preds = %while.end39, %if.else
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %while.end
  br label %for.inc, !dbg !12701

for.inc:                                          ; preds = %if.end41
  %41 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12702
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %41, i32 0, i32 0, !dbg !12703
  %42 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !12703
  store %struct.Nurb* %42, %struct.Nurb** %nu, align 8, !dbg !12704
  br label %for.cond, !dbg !12705, !llvm.loop !12706

for.end:                                          ; preds = %for.cond
  %43 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12708
  %44 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12709
  %data42 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 19, !dbg !12710
  %45 = load i8*, i8** %data42, align 8, !dbg !12710
  call void @WM_event_add_notifier(%struct.bContext* %43, i32 274399232, i8* %45), !dbg !12711
  %46 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12712
  %data43 = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 19, !dbg !12713
  %47 = load i8*, i8** %data43, align 8, !dbg !12713
  %48 = bitcast i8* %47 to %struct.ID*, !dbg !12712
  call void @DAG_id_tag_update(%struct.ID* %48, i16 signext 0), !dbg !12714
  ret i32 4, !dbg !12715
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @undo_push_curve(%struct.bContext* %C, i8* %name) #0 !dbg !12716 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %name.addr = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12719, metadata !DIExpression()), !dbg !12720
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12721, metadata !DIExpression()), !dbg !12722
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12723
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12724
  call void @undo_editmode_push(%struct.bContext* %0, i8* %1, i8* (%struct.bContext*)* @get_data, void (i8*)* @free_undoCurve, void (i8*, i8*, i8*)* @undoCurve_to_editCurve, i8* (i8*, i8*)* @editCurve_to_undoCurve, i32 (i8*, i8*)* null), !dbg !12725
  ret void, !dbg !12726
}

declare dso_local void @undo_editmode_push(%struct.bContext*, i8*, i8* (%struct.bContext*)*, void (i8*)*, void (i8*, i8*, i8*)*, i8* (i8*, i8*)*, i32 (i8*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @get_data(%struct.bContext* %C) #0 !dbg !12727 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %obedit = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12730, metadata !DIExpression()), !dbg !12731
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !12732, metadata !DIExpression()), !dbg !12733
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12734
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !12735
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !12733
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !12736
  %2 = bitcast %struct.Object* %1 to i8*, !dbg !12736
  ret i8* %2, !dbg !12737
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_undoCurve(i8* %ucv) #0 !dbg !12738 {
entry:
  %ucv.addr = alloca i8*, align 8
  %undoCurve = alloca %struct.UndoCurve*, align 8
  store i8* %ucv, i8** %ucv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ucv.addr, metadata !12739, metadata !DIExpression()), !dbg !12740
  call void @llvm.dbg.declare(metadata %struct.UndoCurve** %undoCurve, metadata !12741, metadata !DIExpression()), !dbg !12752
  %0 = load i8*, i8** %ucv.addr, align 8, !dbg !12753
  %1 = bitcast i8* %0 to %struct.UndoCurve*, !dbg !12753
  store %struct.UndoCurve* %1, %struct.UndoCurve** %undoCurve, align 8, !dbg !12752
  %2 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !12754
  %nubase = getelementptr inbounds %struct.UndoCurve, %struct.UndoCurve* %2, i32 0, i32 0, !dbg !12755
  call void @BKE_nurbList_free(%struct.ListBase* %nubase), !dbg !12756
  %3 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !12757
  %undoIndex = getelementptr inbounds %struct.UndoCurve, %struct.UndoCurve* %3, i32 0, i32 2, !dbg !12759
  %4 = load %struct.GHash*, %struct.GHash** %undoIndex, align 8, !dbg !12759
  %tobool = icmp ne %struct.GHash* %4, null, !dbg !12757
  br i1 %tobool, label %if.then, label %if.end, !dbg !12760

if.then:                                          ; preds = %entry
  %5 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !12761
  %undoIndex1 = getelementptr inbounds %struct.UndoCurve, %struct.UndoCurve* %5, i32 0, i32 2, !dbg !12762
  %6 = load %struct.GHash*, %struct.GHash** %undoIndex1, align 8, !dbg !12762
  %7 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12763
  call void @BLI_ghash_free(%struct.GHash* %6, void (i8*)* null, void (i8*)* %7), !dbg !12764
  br label %if.end, !dbg !12764

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !12765
  %fcurves = getelementptr inbounds %struct.UndoCurve, %struct.UndoCurve* %8, i32 0, i32 3, !dbg !12766
  call void @free_fcurves(%struct.ListBase* %fcurves), !dbg !12767
  %9 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !12768
  %drivers = getelementptr inbounds %struct.UndoCurve, %struct.UndoCurve* %9, i32 0, i32 4, !dbg !12769
  call void @free_fcurves(%struct.ListBase* %drivers), !dbg !12770
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12771
  %11 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !12772
  %12 = bitcast %struct.UndoCurve* %11 to i8*, !dbg !12772
  call void %10(i8* %12), !dbg !12771
  ret void, !dbg !12773
}

; Function Attrs: noinline nounwind uwtable
define internal void @undoCurve_to_editCurve(i8* %ucu, i8* %UNUSED_edata, i8* %cu_v) #0 !dbg !12774 {
entry:
  %ucu.addr = alloca i8*, align 8
  %UNUSED_edata.addr = alloca i8*, align 8
  %cu_v.addr = alloca i8*, align 8
  %cu = alloca %struct.Curve*, align 8
  %undoCurve = alloca %struct.UndoCurve*, align 8
  %undobase = alloca %struct.ListBase*, align 8
  %editbase = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %newnu = alloca %struct.Nurb*, align 8
  %editnurb = alloca %struct.EditNurb*, align 8
  %ad = alloca %struct.AnimData*, align 8
  store i8* %ucu, i8** %ucu.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ucu.addr, metadata !12777, metadata !DIExpression()), !dbg !12778
  store i8* %UNUSED_edata, i8** %UNUSED_edata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_edata.addr, metadata !12779, metadata !DIExpression()), !dbg !12780
  store i8* %cu_v, i8** %cu_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cu_v.addr, metadata !12781, metadata !DIExpression()), !dbg !12782
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !12783, metadata !DIExpression()), !dbg !12784
  %0 = load i8*, i8** %cu_v.addr, align 8, !dbg !12785
  %1 = bitcast i8* %0 to %struct.Curve*, !dbg !12785
  store %struct.Curve* %1, %struct.Curve** %cu, align 8, !dbg !12784
  call void @llvm.dbg.declare(metadata %struct.UndoCurve** %undoCurve, metadata !12786, metadata !DIExpression()), !dbg !12787
  %2 = load i8*, i8** %ucu.addr, align 8, !dbg !12788
  %3 = bitcast i8* %2 to %struct.UndoCurve*, !dbg !12788
  store %struct.UndoCurve* %3, %struct.UndoCurve** %undoCurve, align 8, !dbg !12787
  call void @llvm.dbg.declare(metadata %struct.ListBase** %undobase, metadata !12789, metadata !DIExpression()), !dbg !12790
  %4 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !12791
  %nubase = getelementptr inbounds %struct.UndoCurve, %struct.UndoCurve* %4, i32 0, i32 0, !dbg !12792
  store %struct.ListBase* %nubase, %struct.ListBase** %undobase, align 8, !dbg !12790
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editbase, metadata !12793, metadata !DIExpression()), !dbg !12794
  %5 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !12795
  %call = call %struct.ListBase* @BKE_curve_editNurbs_get(%struct.Curve* %5), !dbg !12796
  store %struct.ListBase* %call, %struct.ListBase** %editbase, align 8, !dbg !12794
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !12797, metadata !DIExpression()), !dbg !12798
  call void @llvm.dbg.declare(metadata %struct.Nurb** %newnu, metadata !12799, metadata !DIExpression()), !dbg !12800
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb, metadata !12801, metadata !DIExpression()), !dbg !12802
  %6 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !12803
  %editnurb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %6, i32 0, i32 4, !dbg !12804
  %7 = load %struct.EditNurb*, %struct.EditNurb** %editnurb1, align 8, !dbg !12804
  store %struct.EditNurb* %7, %struct.EditNurb** %editnurb, align 8, !dbg !12802
  call void @llvm.dbg.declare(metadata %struct.AnimData** %ad, metadata !12805, metadata !DIExpression()), !dbg !12806
  %8 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !12807
  %id = getelementptr inbounds %struct.Curve, %struct.Curve* %8, i32 0, i32 0, !dbg !12808
  %call2 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %id), !dbg !12809
  store %struct.AnimData* %call2, %struct.AnimData** %ad, align 8, !dbg !12806
  %9 = load %struct.ListBase*, %struct.ListBase** %editbase, align 8, !dbg !12810
  call void @BKE_nurbList_free(%struct.ListBase* %9), !dbg !12811
  %10 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !12812
  %undoIndex = getelementptr inbounds %struct.UndoCurve, %struct.UndoCurve* %10, i32 0, i32 2, !dbg !12814
  %11 = load %struct.GHash*, %struct.GHash** %undoIndex, align 8, !dbg !12814
  %tobool = icmp ne %struct.GHash* %11, null, !dbg !12812
  br i1 %tobool, label %if.then, label %if.end, !dbg !12815

if.then:                                          ; preds = %entry
  %12 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !12816
  %keyindex = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %12, i32 0, i32 1, !dbg !12818
  %13 = load %struct.GHash*, %struct.GHash** %keyindex, align 8, !dbg !12818
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12819
  call void @BLI_ghash_free(%struct.GHash* %13, void (i8*)* null, void (i8*)* %14), !dbg !12820
  %15 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !12821
  %undoIndex3 = getelementptr inbounds %struct.UndoCurve, %struct.UndoCurve* %15, i32 0, i32 2, !dbg !12822
  %16 = load %struct.GHash*, %struct.GHash** %undoIndex3, align 8, !dbg !12822
  %call4 = call %struct.GHash* @dupli_keyIndexHash(%struct.GHash* %16), !dbg !12823
  %17 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !12824
  %keyindex5 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %17, i32 0, i32 1, !dbg !12825
  store %struct.GHash* %call4, %struct.GHash** %keyindex5, align 8, !dbg !12826
  br label %if.end, !dbg !12827

if.end:                                           ; preds = %if.then, %entry
  %18 = load %struct.AnimData*, %struct.AnimData** %ad, align 8, !dbg !12828
  %tobool6 = icmp ne %struct.AnimData* %18, null, !dbg !12828
  br i1 %tobool6, label %if.then7, label %if.end16, !dbg !12830

if.then7:                                         ; preds = %if.end
  %19 = load %struct.AnimData*, %struct.AnimData** %ad, align 8, !dbg !12831
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %19, i32 0, i32 0, !dbg !12834
  %20 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !12834
  %tobool8 = icmp ne %struct.bAction* %20, null, !dbg !12831
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !12835

if.then9:                                         ; preds = %if.then7
  %21 = load %struct.AnimData*, %struct.AnimData** %ad, align 8, !dbg !12836
  %action10 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %21, i32 0, i32 0, !dbg !12838
  %22 = load %struct.bAction*, %struct.bAction** %action10, align 8, !dbg !12838
  %curves = getelementptr inbounds %struct.bAction, %struct.bAction* %22, i32 0, i32 1, !dbg !12839
  call void @free_fcurves(%struct.ListBase* %curves), !dbg !12840
  %23 = load %struct.AnimData*, %struct.AnimData** %ad, align 8, !dbg !12841
  %action11 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %23, i32 0, i32 0, !dbg !12842
  %24 = load %struct.bAction*, %struct.bAction** %action11, align 8, !dbg !12842
  %curves12 = getelementptr inbounds %struct.bAction, %struct.bAction* %24, i32 0, i32 1, !dbg !12843
  %25 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !12844
  %fcurves = getelementptr inbounds %struct.UndoCurve, %struct.UndoCurve* %25, i32 0, i32 3, !dbg !12845
  call void @copy_fcurves(%struct.ListBase* %curves12, %struct.ListBase* %fcurves), !dbg !12846
  br label %if.end13, !dbg !12847

if.end13:                                         ; preds = %if.then9, %if.then7
  %26 = load %struct.AnimData*, %struct.AnimData** %ad, align 8, !dbg !12848
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %26, i32 0, i32 5, !dbg !12849
  call void @free_fcurves(%struct.ListBase* %drivers), !dbg !12850
  %27 = load %struct.AnimData*, %struct.AnimData** %ad, align 8, !dbg !12851
  %drivers14 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %27, i32 0, i32 5, !dbg !12852
  %28 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !12853
  %drivers15 = getelementptr inbounds %struct.UndoCurve, %struct.UndoCurve* %28, i32 0, i32 4, !dbg !12854
  call void @copy_fcurves(%struct.ListBase* %drivers14, %struct.ListBase* %drivers15), !dbg !12855
  br label %if.end16, !dbg !12856

if.end16:                                         ; preds = %if.end13, %if.end
  %29 = load %struct.ListBase*, %struct.ListBase** %undobase, align 8, !dbg !12857
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %29, i32 0, i32 0, !dbg !12859
  %30 = load i8*, i8** %first, align 8, !dbg !12859
  %31 = bitcast i8* %30 to %struct.Nurb*, !dbg !12857
  store %struct.Nurb* %31, %struct.Nurb** %nu, align 8, !dbg !12860
  br label %for.cond, !dbg !12861

for.cond:                                         ; preds = %for.inc, %if.end16
  %32 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12862
  %tobool17 = icmp ne %struct.Nurb* %32, null, !dbg !12864
  br i1 %tobool17, label %for.body, label %for.end, !dbg !12864

for.body:                                         ; preds = %for.cond
  %33 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12865
  %call18 = call %struct.Nurb* @BKE_nurb_duplicate(%struct.Nurb* %33), !dbg !12867
  store %struct.Nurb* %call18, %struct.Nurb** %newnu, align 8, !dbg !12868
  %34 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !12869
  %keyindex19 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %34, i32 0, i32 1, !dbg !12871
  %35 = load %struct.GHash*, %struct.GHash** %keyindex19, align 8, !dbg !12871
  %tobool20 = icmp ne %struct.GHash* %35, null, !dbg !12869
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !12872

if.then21:                                        ; preds = %for.body
  %36 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !12873
  %37 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12875
  %38 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !12876
  call void @keyIndex_updateNurb(%struct.EditNurb* %36, %struct.Nurb* %37, %struct.Nurb* %38), !dbg !12877
  br label %if.end22, !dbg !12878

if.end22:                                         ; preds = %if.then21, %for.body
  %39 = load %struct.ListBase*, %struct.ListBase** %editbase, align 8, !dbg !12879
  %40 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !12880
  %41 = bitcast %struct.Nurb* %40 to i8*, !dbg !12880
  call void @BLI_addtail(%struct.ListBase* %39, i8* %41), !dbg !12881
  br label %for.inc, !dbg !12882

for.inc:                                          ; preds = %if.end22
  %42 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12883
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %42, i32 0, i32 0, !dbg !12884
  %43 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !12884
  store %struct.Nurb* %43, %struct.Nurb** %nu, align 8, !dbg !12885
  br label %for.cond, !dbg !12886, !llvm.loop !12887

for.end:                                          ; preds = %for.cond
  %44 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !12889
  %actvert = getelementptr inbounds %struct.UndoCurve, %struct.UndoCurve* %44, i32 0, i32 1, !dbg !12890
  %45 = load i32, i32* %actvert, align 8, !dbg !12890
  %46 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !12891
  %actvert23 = getelementptr inbounds %struct.Curve, %struct.Curve* %46, i32 0, i32 32, !dbg !12892
  store i32 %45, i32* %actvert23, align 8, !dbg !12893
  %47 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !12894
  %actnu = getelementptr inbounds %struct.UndoCurve, %struct.UndoCurve* %47, i32 0, i32 5, !dbg !12895
  %48 = load i32, i32* %actnu, align 8, !dbg !12895
  %49 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !12896
  %actnu24 = getelementptr inbounds %struct.Curve, %struct.Curve* %49, i32 0, i32 31, !dbg !12897
  store i32 %48, i32* %actnu24, align 4, !dbg !12898
  %50 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !12899
  %call25 = call i32 @ED_curve_updateAnimPaths(%struct.Curve* %50), !dbg !12900
  ret void, !dbg !12901
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @editCurve_to_undoCurve(i8* %UNUSED_edata, i8* %cu_v) #0 !dbg !12902 {
entry:
  %UNUSED_edata.addr = alloca i8*, align 8
  %cu_v.addr = alloca i8*, align 8
  %cu = alloca %struct.Curve*, align 8
  %nubase = alloca %struct.ListBase*, align 8
  %undoCurve = alloca %struct.UndoCurve*, align 8
  %editnurb = alloca %struct.EditNurb*, align 8
  %tmpEditnurb = alloca %struct.EditNurb, align 8
  %nu = alloca %struct.Nurb*, align 8
  %newnu = alloca %struct.Nurb*, align 8
  %ad = alloca %struct.AnimData*, align 8
  store i8* %UNUSED_edata, i8** %UNUSED_edata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_edata.addr, metadata !12905, metadata !DIExpression()), !dbg !12906
  store i8* %cu_v, i8** %cu_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cu_v.addr, metadata !12907, metadata !DIExpression()), !dbg !12908
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !12909, metadata !DIExpression()), !dbg !12910
  %0 = load i8*, i8** %cu_v.addr, align 8, !dbg !12911
  %1 = bitcast i8* %0 to %struct.Curve*, !dbg !12911
  store %struct.Curve* %1, %struct.Curve** %cu, align 8, !dbg !12910
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nubase, metadata !12912, metadata !DIExpression()), !dbg !12913
  %2 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !12914
  %call = call %struct.ListBase* @BKE_curve_editNurbs_get(%struct.Curve* %2), !dbg !12915
  store %struct.ListBase* %call, %struct.ListBase** %nubase, align 8, !dbg !12913
  call void @llvm.dbg.declare(metadata %struct.UndoCurve** %undoCurve, metadata !12916, metadata !DIExpression()), !dbg !12917
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb, metadata !12918, metadata !DIExpression()), !dbg !12919
  %3 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !12920
  %editnurb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 4, !dbg !12921
  %4 = load %struct.EditNurb*, %struct.EditNurb** %editnurb1, align 8, !dbg !12921
  store %struct.EditNurb* %4, %struct.EditNurb** %editnurb, align 8, !dbg !12919
  call void @llvm.dbg.declare(metadata %struct.EditNurb* %tmpEditnurb, metadata !12922, metadata !DIExpression()), !dbg !12923
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !12924, metadata !DIExpression()), !dbg !12925
  call void @llvm.dbg.declare(metadata %struct.Nurb** %newnu, metadata !12926, metadata !DIExpression()), !dbg !12927
  call void @llvm.dbg.declare(metadata %struct.AnimData** %ad, metadata !12928, metadata !DIExpression()), !dbg !12929
  %5 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !12930
  %id = getelementptr inbounds %struct.Curve, %struct.Curve* %5, i32 0, i32 0, !dbg !12931
  %call2 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %id), !dbg !12932
  store %struct.AnimData* %call2, %struct.AnimData** %ad, align 8, !dbg !12929
  %6 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !12933
  %call3 = call i8* %6(i64 72, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.232, i64 0, i64 0)), !dbg !12933
  %7 = bitcast i8* %call3 to %struct.UndoCurve*, !dbg !12933
  store %struct.UndoCurve* %7, %struct.UndoCurve** %undoCurve, align 8, !dbg !12934
  %8 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !12935
  %keyindex = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %8, i32 0, i32 1, !dbg !12937
  %9 = load %struct.GHash*, %struct.GHash** %keyindex, align 8, !dbg !12937
  %tobool = icmp ne %struct.GHash* %9, null, !dbg !12935
  br i1 %tobool, label %if.then, label %if.end, !dbg !12938

if.then:                                          ; preds = %entry
  %10 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !12939
  %keyindex4 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %10, i32 0, i32 1, !dbg !12941
  %11 = load %struct.GHash*, %struct.GHash** %keyindex4, align 8, !dbg !12941
  %call5 = call %struct.GHash* @dupli_keyIndexHash(%struct.GHash* %11), !dbg !12942
  %12 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !12943
  %undoIndex = getelementptr inbounds %struct.UndoCurve, %struct.UndoCurve* %12, i32 0, i32 2, !dbg !12944
  store %struct.GHash* %call5, %struct.GHash** %undoIndex, align 8, !dbg !12945
  %13 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !12946
  %undoIndex6 = getelementptr inbounds %struct.UndoCurve, %struct.UndoCurve* %13, i32 0, i32 2, !dbg !12947
  %14 = load %struct.GHash*, %struct.GHash** %undoIndex6, align 8, !dbg !12947
  %keyindex7 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %tmpEditnurb, i32 0, i32 1, !dbg !12948
  store %struct.GHash* %14, %struct.GHash** %keyindex7, align 8, !dbg !12949
  br label %if.end, !dbg !12950

if.end:                                           ; preds = %if.then, %entry
  %15 = load %struct.AnimData*, %struct.AnimData** %ad, align 8, !dbg !12951
  %tobool8 = icmp ne %struct.AnimData* %15, null, !dbg !12951
  br i1 %tobool8, label %if.then9, label %if.end15, !dbg !12953

if.then9:                                         ; preds = %if.end
  %16 = load %struct.AnimData*, %struct.AnimData** %ad, align 8, !dbg !12954
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %16, i32 0, i32 0, !dbg !12957
  %17 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !12957
  %tobool10 = icmp ne %struct.bAction* %17, null, !dbg !12954
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !12958

if.then11:                                        ; preds = %if.then9
  %18 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !12959
  %fcurves = getelementptr inbounds %struct.UndoCurve, %struct.UndoCurve* %18, i32 0, i32 3, !dbg !12960
  %19 = load %struct.AnimData*, %struct.AnimData** %ad, align 8, !dbg !12961
  %action12 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %19, i32 0, i32 0, !dbg !12962
  %20 = load %struct.bAction*, %struct.bAction** %action12, align 8, !dbg !12962
  %curves = getelementptr inbounds %struct.bAction, %struct.bAction* %20, i32 0, i32 1, !dbg !12963
  call void @copy_fcurves(%struct.ListBase* %fcurves, %struct.ListBase* %curves), !dbg !12964
  br label %if.end13, !dbg !12964

if.end13:                                         ; preds = %if.then11, %if.then9
  %21 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !12965
  %drivers = getelementptr inbounds %struct.UndoCurve, %struct.UndoCurve* %21, i32 0, i32 4, !dbg !12966
  %22 = load %struct.AnimData*, %struct.AnimData** %ad, align 8, !dbg !12967
  %drivers14 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %22, i32 0, i32 5, !dbg !12968
  call void @copy_fcurves(%struct.ListBase* %drivers, %struct.ListBase* %drivers14), !dbg !12969
  br label %if.end15, !dbg !12970

if.end15:                                         ; preds = %if.end13, %if.end
  %23 = load %struct.ListBase*, %struct.ListBase** %nubase, align 8, !dbg !12971
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %23, i32 0, i32 0, !dbg !12973
  %24 = load i8*, i8** %first, align 8, !dbg !12973
  %25 = bitcast i8* %24 to %struct.Nurb*, !dbg !12971
  store %struct.Nurb* %25, %struct.Nurb** %nu, align 8, !dbg !12974
  br label %for.cond, !dbg !12975

for.cond:                                         ; preds = %for.inc, %if.end15
  %26 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12976
  %tobool16 = icmp ne %struct.Nurb* %26, null, !dbg !12978
  br i1 %tobool16, label %for.body, label %for.end, !dbg !12978

for.body:                                         ; preds = %for.cond
  %27 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12979
  %call17 = call %struct.Nurb* @BKE_nurb_duplicate(%struct.Nurb* %27), !dbg !12981
  store %struct.Nurb* %call17, %struct.Nurb** %newnu, align 8, !dbg !12982
  %28 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !12983
  %undoIndex18 = getelementptr inbounds %struct.UndoCurve, %struct.UndoCurve* %28, i32 0, i32 2, !dbg !12985
  %29 = load %struct.GHash*, %struct.GHash** %undoIndex18, align 8, !dbg !12985
  %tobool19 = icmp ne %struct.GHash* %29, null, !dbg !12983
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !12986

if.then20:                                        ; preds = %for.body
  %30 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12987
  %31 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !12989
  call void @keyIndex_updateNurb(%struct.EditNurb* %tmpEditnurb, %struct.Nurb* %30, %struct.Nurb* %31), !dbg !12990
  br label %if.end21, !dbg !12991

if.end21:                                         ; preds = %if.then20, %for.body
  %32 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !12992
  %nubase22 = getelementptr inbounds %struct.UndoCurve, %struct.UndoCurve* %32, i32 0, i32 0, !dbg !12993
  %33 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !12994
  %34 = bitcast %struct.Nurb* %33 to i8*, !dbg !12994
  call void @BLI_addtail(%struct.ListBase* %nubase22, i8* %34), !dbg !12995
  br label %for.inc, !dbg !12996

for.inc:                                          ; preds = %if.end21
  %35 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12997
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %35, i32 0, i32 0, !dbg !12998
  %36 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !12998
  store %struct.Nurb* %36, %struct.Nurb** %nu, align 8, !dbg !12999
  br label %for.cond, !dbg !13000, !llvm.loop !13001

for.end:                                          ; preds = %for.cond
  %37 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !13003
  %actvert = getelementptr inbounds %struct.Curve, %struct.Curve* %37, i32 0, i32 32, !dbg !13004
  %38 = load i32, i32* %actvert, align 8, !dbg !13004
  %39 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !13005
  %actvert23 = getelementptr inbounds %struct.UndoCurve, %struct.UndoCurve* %39, i32 0, i32 1, !dbg !13006
  store i32 %38, i32* %actvert23, align 8, !dbg !13007
  %40 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !13008
  %actnu = getelementptr inbounds %struct.Curve, %struct.Curve* %40, i32 0, i32 31, !dbg !13009
  %41 = load i32, i32* %actnu, align 4, !dbg !13009
  %42 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !13010
  %actnu24 = getelementptr inbounds %struct.UndoCurve, %struct.UndoCurve* %42, i32 0, i32 5, !dbg !13011
  store i32 %41, i32* %actnu24, align 8, !dbg !13012
  %43 = load %struct.UndoCurve*, %struct.UndoCurve** %undoCurve, align 8, !dbg !13013
  %44 = bitcast %struct.UndoCurve* %43 to i8*, !dbg !13013
  ret i8* %44, !dbg !13014
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_curve_beztcpy(%struct.EditNurb* %editnurb, %struct.BezTriple* %dst, %struct.BezTriple* %src, i32 %count) #0 !dbg !13015 {
entry:
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %dst.addr = alloca %struct.BezTriple*, align 8
  %src.addr = alloca %struct.BezTriple*, align 8
  %count.addr = alloca i32, align 4
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !13018, metadata !DIExpression()), !dbg !13019
  store %struct.BezTriple* %dst, %struct.BezTriple** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %dst.addr, metadata !13020, metadata !DIExpression()), !dbg !13021
  store %struct.BezTriple* %src, %struct.BezTriple** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %src.addr, metadata !13022, metadata !DIExpression()), !dbg !13023
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !13024, metadata !DIExpression()), !dbg !13025
  %0 = load %struct.BezTriple*, %struct.BezTriple** %dst.addr, align 8, !dbg !13026
  %1 = bitcast %struct.BezTriple* %0 to i8*, !dbg !13027
  %2 = load %struct.BezTriple*, %struct.BezTriple** %src.addr, align 8, !dbg !13028
  %3 = bitcast %struct.BezTriple* %2 to i8*, !dbg !13027
  %4 = load i32, i32* %count.addr, align 4, !dbg !13029
  %conv = sext i32 %4 to i64, !dbg !13029
  %mul = mul i64 %conv, 72, !dbg !13030
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %3, i64 %mul, i1 false), !dbg !13027
  %5 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !13031
  %6 = load %struct.BezTriple*, %struct.BezTriple** %src.addr, align 8, !dbg !13032
  %7 = load %struct.BezTriple*, %struct.BezTriple** %dst.addr, align 8, !dbg !13033
  %8 = load i32, i32* %count.addr, align 4, !dbg !13034
  call void @keyIndex_updateBezt(%struct.EditNurb* %5, %struct.BezTriple* %6, %struct.BezTriple* %7, i32 %8), !dbg !13035
  ret void, !dbg !13036
}

; Function Attrs: noinline nounwind uwtable
define internal void @keyIndex_updateBezt(%struct.EditNurb* %editnurb, %struct.BezTriple* %bezt, %struct.BezTriple* %newbezt, i32 %count) #0 !dbg !13037 {
entry:
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %bezt.addr = alloca %struct.BezTriple*, align 8
  %newbezt.addr = alloca %struct.BezTriple*, align 8
  %count.addr = alloca i32, align 4
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !13038, metadata !DIExpression()), !dbg !13039
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !13040, metadata !DIExpression()), !dbg !13041
  store %struct.BezTriple* %newbezt, %struct.BezTriple** %newbezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %newbezt.addr, metadata !13042, metadata !DIExpression()), !dbg !13043
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !13044, metadata !DIExpression()), !dbg !13045
  %0 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !13046
  %1 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !13047
  %2 = bitcast %struct.BezTriple* %1 to i8*, !dbg !13048
  %3 = load %struct.BezTriple*, %struct.BezTriple** %newbezt.addr, align 8, !dbg !13049
  %4 = bitcast %struct.BezTriple* %3 to i8*, !dbg !13050
  %5 = load i32, i32* %count.addr, align 4, !dbg !13051
  call void @keyIndex_updateCV(%struct.EditNurb* %0, i8* %2, i8* %4, i32 %5, i32 72), !dbg !13052
  ret void, !dbg !13053
}

; Function Attrs: noinline nounwind uwtable
define internal void @keyIndex_updateBP(%struct.EditNurb* %editnurb, %struct.BPoint* %bp, %struct.BPoint* %newbp, i32 %count) #0 !dbg !13054 {
entry:
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %bp.addr = alloca %struct.BPoint*, align 8
  %newbp.addr = alloca %struct.BPoint*, align 8
  %count.addr = alloca i32, align 4
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !13055, metadata !DIExpression()), !dbg !13056
  store %struct.BPoint* %bp, %struct.BPoint** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp.addr, metadata !13057, metadata !DIExpression()), !dbg !13058
  store %struct.BPoint* %newbp, %struct.BPoint** %newbp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BPoint** %newbp.addr, metadata !13059, metadata !DIExpression()), !dbg !13060
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !13061, metadata !DIExpression()), !dbg !13062
  %0 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !13063
  %1 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !13064
  %2 = bitcast %struct.BPoint* %1 to i8*, !dbg !13065
  %3 = load %struct.BPoint*, %struct.BPoint** %newbp.addr, align 8, !dbg !13066
  %4 = bitcast %struct.BPoint* %3 to i8*, !dbg !13067
  %5 = load i32, i32* %count.addr, align 4, !dbg !13068
  call void @keyIndex_updateCV(%struct.EditNurb* %0, i8* %2, i8* %4, i32 %5, i32 36), !dbg !13069
  ret void, !dbg !13070
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ED_curve_active_center(%struct.Curve* %cu, float* %center) #0 !dbg !13071 {
entry:
  %retval = alloca i8, align 1
  %cu.addr = alloca %struct.Curve*, align 8
  %center.addr = alloca float*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %vert = alloca i8*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !13074, metadata !DIExpression()), !dbg !13075
  store float* %center, float** %center.addr, align 8
  call void @llvm.dbg.declare(metadata float** %center.addr, metadata !13076, metadata !DIExpression()), !dbg !13077
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !13078, metadata !DIExpression()), !dbg !13079
  store %struct.Nurb* null, %struct.Nurb** %nu, align 8, !dbg !13079
  call void @llvm.dbg.declare(metadata i8** %vert, metadata !13080, metadata !DIExpression()), !dbg !13081
  store i8* null, i8** %vert, align 8, !dbg !13081
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13082
  %call = call zeroext i8 @BKE_curve_nurb_vert_active_get(%struct.Curve* %0, %struct.Nurb** %nu, i8** %vert), !dbg !13084
  %tobool = icmp ne i8 %call, 0, !dbg !13084
  br i1 %tobool, label %if.end, label %if.then, !dbg !13085

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !13086
  br label %return, !dbg !13086

if.end:                                           ; preds = %entry
  %1 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13087
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %1, i32 0, i32 2, !dbg !13089
  %2 = load i16, i16* %type, align 8, !dbg !13089
  %conv = sext i16 %2 to i32, !dbg !13087
  %cmp = icmp eq i32 %conv, 1, !dbg !13090
  br i1 %cmp, label %if.then2, label %if.else, !dbg !13091

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !13092, metadata !DIExpression()), !dbg !13094
  %3 = load i8*, i8** %vert, align 8, !dbg !13095
  %4 = bitcast i8* %3 to %struct.BezTriple*, !dbg !13096
  store %struct.BezTriple* %4, %struct.BezTriple** %bezt, align 8, !dbg !13094
  %5 = load float*, float** %center.addr, align 8, !dbg !13097
  %6 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13098
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %6, i32 0, i32 0, !dbg !13099
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 1, !dbg !13098
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !13098
  call void @copy_v3_v3(float* %5, float* %arraydecay), !dbg !13100
  br label %if.end5, !dbg !13101

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !13102, metadata !DIExpression()), !dbg !13104
  %7 = load i8*, i8** %vert, align 8, !dbg !13105
  %8 = bitcast i8* %7 to %struct.BPoint*, !dbg !13106
  store %struct.BPoint* %8, %struct.BPoint** %bp, align 8, !dbg !13104
  %9 = load float*, float** %center.addr, align 8, !dbg !13107
  %10 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !13108
  %vec3 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %10, i32 0, i32 0, !dbg !13109
  %arraydecay4 = getelementptr inbounds [4 x float], [4 x float]* %vec3, i64 0, i64 0, !dbg !13108
  call void @copy_v3_v3(float* %9, float* %arraydecay4), !dbg !13110
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then2
  store i8 1, i8* %retval, align 1, !dbg !13111
  br label %return, !dbg !13111

return:                                           ; preds = %if.end5, %if.then
  %11 = load i8, i8* %retval, align 1, !dbg !13112
  ret i8 %11, !dbg !13112
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !13113 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !13114, metadata !DIExpression()), !dbg !13115
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !13116, metadata !DIExpression()), !dbg !13117
  %0 = load float*, float** %a.addr, align 8, !dbg !13118
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !13118
  %1 = load float, float* %arrayidx, align 4, !dbg !13118
  %2 = load float*, float** %r.addr, align 8, !dbg !13119
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !13119
  store float %1, float* %arrayidx1, align 4, !dbg !13120
  %3 = load float*, float** %a.addr, align 8, !dbg !13121
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !13121
  %4 = load float, float* %arrayidx2, align 4, !dbg !13121
  %5 = load float*, float** %r.addr, align 8, !dbg !13122
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !13122
  store float %4, float* %arrayidx3, align 4, !dbg !13123
  %6 = load float*, float** %a.addr, align 8, !dbg !13124
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !13124
  %7 = load float, float* %arrayidx4, align 4, !dbg !13124
  %8 = load float*, float** %r.addr, align 8, !dbg !13125
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !13125
  store float %7, float* %arrayidx5, align 4, !dbg !13126
  ret void, !dbg !13127
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CURVE_OT_match_texture_space(%struct.wmOperatorType* %ot) #0 !dbg !13128 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !13129, metadata !DIExpression()), !dbg !13130
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !13131
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !13132
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.177, i64 0, i64 0), i8** %name, align 8, !dbg !13133
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !13134
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !13135
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.178, i64 0, i64 0), i8** %idname, align 8, !dbg !13136
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !13137
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !13138
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.179, i64 0, i64 0), i8** %description, align 8, !dbg !13139
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !13140
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !13141
  store i32 (%struct.bContext*, %struct.wmOperator*)* @match_texture_space_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !13142
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !13143
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !13144
  store i32 (%struct.bContext*)* @match_texture_space_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !13145
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !13146
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !13147
  store i16 3, i16* %flag, align 8, !dbg !13148
  ret void, !dbg !13149
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @match_texture_space_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !13150 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %object = alloca %struct.Object*, align 8
  %curve = alloca %struct.Curve*, align 8
  %min = alloca [3 x float], align 4
  %max = alloca [3 x float], align 4
  %size = alloca [3 x float], align 4
  %loc = alloca [3 x float], align 4
  %a = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !13151, metadata !DIExpression()), !dbg !13152
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !13153, metadata !DIExpression()), !dbg !13154
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !13155, metadata !DIExpression()), !dbg !13156
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13157
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !13158
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !13156
  call void @llvm.dbg.declare(metadata %struct.Object** %object, metadata !13159, metadata !DIExpression()), !dbg !13160
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13161
  %call1 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %1), !dbg !13162
  store %struct.Object* %call1, %struct.Object** %object, align 8, !dbg !13160
  call void @llvm.dbg.declare(metadata %struct.Curve** %curve, metadata !13163, metadata !DIExpression()), !dbg !13164
  %2 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !13165
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !13166
  %3 = load i8*, i8** %data, align 8, !dbg !13166
  %4 = bitcast i8* %3 to %struct.Curve*, !dbg !13167
  store %struct.Curve* %4, %struct.Curve** %curve, align 8, !dbg !13164
  call void @llvm.dbg.declare(metadata [3 x float]* %min, metadata !13168, metadata !DIExpression()), !dbg !13169
  call void @llvm.dbg.declare(metadata [3 x float]* %max, metadata !13170, metadata !DIExpression()), !dbg !13171
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !13172, metadata !DIExpression()), !dbg !13173
  call void @llvm.dbg.declare(metadata [3 x float]* %loc, metadata !13174, metadata !DIExpression()), !dbg !13175
  call void @llvm.dbg.declare(metadata i32* %a, metadata !13176, metadata !DIExpression()), !dbg !13177
  %5 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !13178
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 118, !dbg !13180
  %6 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !13180
  %cmp = icmp eq %struct.CurveCache* %6, null, !dbg !13181
  br i1 %cmp, label %if.then, label %if.end, !dbg !13182

if.then:                                          ; preds = %entry
  %7 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13183
  %8 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !13185
  call void @BKE_displist_make_curveTypes(%struct.Scene* %7, %struct.Object* %8, i8 zeroext 0), !dbg !13186
  br label %if.end, !dbg !13187

if.end:                                           ; preds = %if.then, %entry
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !13188
  store float 0x46293E5940000000, float* %arrayidx, align 4, !dbg !13188
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !13188
  store float 0x46293E5940000000, float* %arrayidx2, align 4, !dbg !13188
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !13188
  store float 0x46293E5940000000, float* %arrayidx3, align 4, !dbg !13188
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 2, !dbg !13188
  store float 0xC6293E5940000000, float* %arrayidx4, align 4, !dbg !13188
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 1, !dbg !13188
  store float 0xC6293E5940000000, float* %arrayidx5, align 4, !dbg !13188
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !13188
  store float 0xC6293E5940000000, float* %arrayidx6, align 4, !dbg !13188
  %9 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !13190
  %curve_cache7 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 118, !dbg !13191
  %10 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache7, align 8, !dbg !13191
  %disp = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %10, i32 0, i32 0, !dbg !13192
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !13193
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !13194
  call void @BKE_displist_minmax(%struct.ListBase* %disp, float* %arraydecay, float* %arraydecay8), !dbg !13195
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !13196
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !13197
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !13198
  call void @mid_v3_v3v3(float* %arraydecay9, float* %arraydecay10, float* %arraydecay11), !dbg !13199
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !13200
  %11 = load float, float* %arrayidx12, align 4, !dbg !13200
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !13201
  %12 = load float, float* %arrayidx13, align 4, !dbg !13201
  %sub = fsub float %11, %12, !dbg !13202
  %div = fdiv float %sub, 2.000000e+00, !dbg !13203
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !13204
  store float %div, float* %arrayidx14, align 4, !dbg !13205
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 1, !dbg !13206
  %13 = load float, float* %arrayidx15, align 4, !dbg !13206
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !13207
  %14 = load float, float* %arrayidx16, align 4, !dbg !13207
  %sub17 = fsub float %13, %14, !dbg !13208
  %div18 = fdiv float %sub17, 2.000000e+00, !dbg !13209
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !13210
  store float %div18, float* %arrayidx19, align 4, !dbg !13211
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 2, !dbg !13212
  %15 = load float, float* %arrayidx20, align 4, !dbg !13212
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !13213
  %16 = load float, float* %arrayidx21, align 4, !dbg !13213
  %sub22 = fsub float %15, %16, !dbg !13214
  %div23 = fdiv float %sub22, 2.000000e+00, !dbg !13215
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !13216
  store float %div23, float* %arrayidx24, align 4, !dbg !13217
  store i32 0, i32* %a, align 4, !dbg !13218
  br label %for.cond, !dbg !13220

for.cond:                                         ; preds = %for.inc, %if.end
  %17 = load i32, i32* %a, align 4, !dbg !13221
  %cmp25 = icmp slt i32 %17, 3, !dbg !13223
  br i1 %cmp25, label %for.body, label %for.end, !dbg !13224

for.body:                                         ; preds = %for.cond
  %18 = load i32, i32* %a, align 4, !dbg !13225
  %idxprom = sext i32 %18 to i64, !dbg !13228
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom, !dbg !13228
  %19 = load float, float* %arrayidx26, align 4, !dbg !13228
  %cmp27 = fcmp oeq float %19, 0.000000e+00, !dbg !13229
  br i1 %cmp27, label %if.then28, label %if.else, !dbg !13230

if.then28:                                        ; preds = %for.body
  %20 = load i32, i32* %a, align 4, !dbg !13231
  %idxprom29 = sext i32 %20 to i64, !dbg !13232
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom29, !dbg !13232
  store float 1.000000e+00, float* %arrayidx30, align 4, !dbg !13233
  br label %if.end53, !dbg !13232

if.else:                                          ; preds = %for.body
  %21 = load i32, i32* %a, align 4, !dbg !13234
  %idxprom31 = sext i32 %21 to i64, !dbg !13236
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom31, !dbg !13236
  %22 = load float, float* %arrayidx32, align 4, !dbg !13236
  %cmp33 = fcmp ogt float %22, 0.000000e+00, !dbg !13237
  br i1 %cmp33, label %land.lhs.true, label %if.else40, !dbg !13238

land.lhs.true:                                    ; preds = %if.else
  %23 = load i32, i32* %a, align 4, !dbg !13239
  %idxprom34 = sext i32 %23 to i64, !dbg !13240
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom34, !dbg !13240
  %24 = load float, float* %arrayidx35, align 4, !dbg !13240
  %cmp36 = fcmp olt float %24, 0x3EE4F8B580000000, !dbg !13241
  br i1 %cmp36, label %if.then37, label %if.else40, !dbg !13242

if.then37:                                        ; preds = %land.lhs.true
  %25 = load i32, i32* %a, align 4, !dbg !13243
  %idxprom38 = sext i32 %25 to i64, !dbg !13244
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom38, !dbg !13244
  store float 0x3EE4F8B580000000, float* %arrayidx39, align 4, !dbg !13245
  br label %if.end52, !dbg !13244

if.else40:                                        ; preds = %land.lhs.true, %if.else
  %26 = load i32, i32* %a, align 4, !dbg !13246
  %idxprom41 = sext i32 %26 to i64, !dbg !13248
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom41, !dbg !13248
  %27 = load float, float* %arrayidx42, align 4, !dbg !13248
  %cmp43 = fcmp olt float %27, 0.000000e+00, !dbg !13249
  br i1 %cmp43, label %land.lhs.true44, label %if.end51, !dbg !13250

land.lhs.true44:                                  ; preds = %if.else40
  %28 = load i32, i32* %a, align 4, !dbg !13251
  %idxprom45 = sext i32 %28 to i64, !dbg !13252
  %arrayidx46 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom45, !dbg !13252
  %29 = load float, float* %arrayidx46, align 4, !dbg !13252
  %cmp47 = fcmp ogt float %29, 0xBEE4F8B580000000, !dbg !13253
  br i1 %cmp47, label %if.then48, label %if.end51, !dbg !13254

if.then48:                                        ; preds = %land.lhs.true44
  %30 = load i32, i32* %a, align 4, !dbg !13255
  %idxprom49 = sext i32 %30 to i64, !dbg !13256
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom49, !dbg !13256
  store float 0xBEE4F8B580000000, float* %arrayidx50, align 4, !dbg !13257
  br label %if.end51, !dbg !13256

if.end51:                                         ; preds = %if.then48, %land.lhs.true44, %if.else40
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then37
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then28
  br label %for.inc, !dbg !13258

for.inc:                                          ; preds = %if.end53
  %31 = load i32, i32* %a, align 4, !dbg !13259
  %inc = add nsw i32 %31, 1, !dbg !13259
  store i32 %inc, i32* %a, align 4, !dbg !13259
  br label %for.cond, !dbg !13260, !llvm.loop !13261

for.end:                                          ; preds = %for.cond
  %32 = load %struct.Curve*, %struct.Curve** %curve, align 8, !dbg !13263
  %loc54 = getelementptr inbounds %struct.Curve, %struct.Curve* %32, i32 0, i32 11, !dbg !13264
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %loc54, i64 0, i64 0, !dbg !13263
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !13265
  call void @copy_v3_v3(float* %arraydecay55, float* %arraydecay56), !dbg !13266
  %33 = load %struct.Curve*, %struct.Curve** %curve, align 8, !dbg !13267
  %size57 = getelementptr inbounds %struct.Curve, %struct.Curve* %33, i32 0, i32 12, !dbg !13268
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %size57, i64 0, i64 0, !dbg !13267
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !13269
  call void @copy_v3_v3(float* %arraydecay58, float* %arraydecay59), !dbg !13270
  %34 = load %struct.Curve*, %struct.Curve** %curve, align 8, !dbg !13271
  %rot = getelementptr inbounds %struct.Curve, %struct.Curve* %34, i32 0, i32 13, !dbg !13272
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %rot, i64 0, i64 0, !dbg !13271
  call void @zero_v3(float* %arraydecay60), !dbg !13273
  %35 = load %struct.Curve*, %struct.Curve** %curve, align 8, !dbg !13274
  %texflag = getelementptr inbounds %struct.Curve, %struct.Curve* %35, i32 0, i32 15, !dbg !13275
  %36 = load i16, i16* %texflag, align 2, !dbg !13276
  %conv = sext i16 %36 to i32, !dbg !13276
  %and = and i32 %conv, -2, !dbg !13276
  %conv61 = trunc i32 %and to i16, !dbg !13276
  store i16 %conv61, i16* %texflag, align 2, !dbg !13276
  %37 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13277
  %38 = load %struct.Curve*, %struct.Curve** %curve, align 8, !dbg !13278
  %39 = bitcast %struct.Curve* %38 to i8*, !dbg !13278
  call void @WM_event_add_notifier(%struct.bContext* %37, i32 274399232, i8* %39), !dbg !13279
  ret i32 4, !dbg !13280
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @match_texture_space_poll(%struct.bContext* %C) #0 !dbg !13281 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %object = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !13284, metadata !DIExpression()), !dbg !13285
  call void @llvm.dbg.declare(metadata %struct.Object** %object, metadata !13286, metadata !DIExpression()), !dbg !13287
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13288
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !13289
  store %struct.Object* %call, %struct.Object** %object, align 8, !dbg !13287
  %1 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !13290
  %tobool = icmp ne %struct.Object* %1, null, !dbg !13290
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !13291

land.rhs:                                         ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !13292
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !13292
  %3 = load i16, i16* %type, align 8, !dbg !13292
  %conv = sext i16 %3 to i32, !dbg !13292
  %cmp = icmp eq i32 %conv, 2, !dbg !13292
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !13292

lor.lhs.false:                                    ; preds = %land.rhs
  %4 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !13292
  %type2 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 3, !dbg !13292
  %5 = load i16, i16* %type2, align 8, !dbg !13292
  %conv3 = sext i16 %5 to i32, !dbg !13292
  %cmp4 = icmp eq i32 %conv3, 3, !dbg !13292
  br i1 %cmp4, label %lor.end, label %lor.rhs, !dbg !13292

lor.rhs:                                          ; preds = %lor.lhs.false
  %6 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !13292
  %type6 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 3, !dbg !13292
  %7 = load i16, i16* %type6, align 8, !dbg !13292
  %conv7 = sext i16 %7 to i32, !dbg !13292
  %cmp8 = icmp eq i32 %conv7, 4, !dbg !13292
  br label %lor.end, !dbg !13292

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %land.rhs
  %8 = phi i1 [ true, %lor.lhs.false ], [ true, %land.rhs ], [ %cmp8, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %entry
  %9 = phi i1 [ false, %entry ], [ %8, %lor.end ], !dbg !13293
  %land.ext = zext i1 %9 to i32, !dbg !13291
  ret i32 %land.ext, !dbg !13294
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CVKeyIndex* @getCVKeyIndex(%struct.EditNurb* %editnurb, i8* %cv) #0 !dbg !13295 {
entry:
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %cv.addr = alloca i8*, align 8
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !13298, metadata !DIExpression()), !dbg !13299
  store i8* %cv, i8** %cv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cv.addr, metadata !13300, metadata !DIExpression()), !dbg !13301
  %0 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !13302
  %keyindex = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %0, i32 0, i32 1, !dbg !13303
  %1 = load %struct.GHash*, %struct.GHash** %keyindex, align 8, !dbg !13303
  %2 = load i8*, i8** %cv.addr, align 8, !dbg !13304
  %call = call i8* @BLI_ghash_lookup(%struct.GHash* %1, i8* %2), !dbg !13305
  %3 = bitcast i8* %call to %struct.CVKeyIndex*, !dbg !13305
  ret %struct.CVKeyIndex* %3, !dbg !13306
}

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal void @fcurve_path_rename(%struct.AnimData* %adt, i8* %orig_rna_path, i8* %rna_path, %struct.ListBase* %orig_curves, %struct.ListBase* %curves) #0 !dbg !13307 {
entry:
  %adt.addr = alloca %struct.AnimData*, align 8
  %orig_rna_path.addr = alloca i8*, align 8
  %rna_path.addr = alloca i8*, align 8
  %orig_curves.addr = alloca %struct.ListBase*, align 8
  %curves.addr = alloca %struct.ListBase*, align 8
  %fcu = alloca %struct.FCurve*, align 8
  %nfcu = alloca %struct.FCurve*, align 8
  %nextfcu = alloca %struct.FCurve*, align 8
  %len = alloca i32, align 4
  %spath = alloca i8*, align 8
  %suffix = alloca i8*, align 8
  store %struct.AnimData* %adt, %struct.AnimData** %adt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt.addr, metadata !13310, metadata !DIExpression()), !dbg !13311
  store i8* %orig_rna_path, i8** %orig_rna_path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %orig_rna_path.addr, metadata !13312, metadata !DIExpression()), !dbg !13313
  store i8* %rna_path, i8** %rna_path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rna_path.addr, metadata !13314, metadata !DIExpression()), !dbg !13315
  store %struct.ListBase* %orig_curves, %struct.ListBase** %orig_curves.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %orig_curves.addr, metadata !13316, metadata !DIExpression()), !dbg !13317
  store %struct.ListBase* %curves, %struct.ListBase** %curves.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %curves.addr, metadata !13318, metadata !DIExpression()), !dbg !13319
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !13320, metadata !DIExpression()), !dbg !13321
  call void @llvm.dbg.declare(metadata %struct.FCurve** %nfcu, metadata !13322, metadata !DIExpression()), !dbg !13323
  call void @llvm.dbg.declare(metadata %struct.FCurve** %nextfcu, metadata !13324, metadata !DIExpression()), !dbg !13325
  call void @llvm.dbg.declare(metadata i32* %len, metadata !13326, metadata !DIExpression()), !dbg !13327
  %0 = load i8*, i8** %orig_rna_path.addr, align 8, !dbg !13328
  %call = call i64 @strlen(i8* %0) #7, !dbg !13329
  %conv = trunc i64 %call to i32, !dbg !13329
  store i32 %conv, i32* %len, align 4, !dbg !13327
  %1 = load %struct.ListBase*, %struct.ListBase** %orig_curves.addr, align 8, !dbg !13330
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !13332
  %2 = load i8*, i8** %first, align 8, !dbg !13332
  %3 = bitcast i8* %2 to %struct.FCurve*, !dbg !13330
  store %struct.FCurve* %3, %struct.FCurve** %fcu, align 8, !dbg !13333
  br label %for.cond, !dbg !13334

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13335
  %tobool = icmp ne %struct.FCurve* %4, null, !dbg !13337
  br i1 %tobool, label %for.body, label %for.end, !dbg !13337

for.body:                                         ; preds = %for.cond
  %5 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13338
  %next = getelementptr inbounds %struct.FCurve, %struct.FCurve* %5, i32 0, i32 0, !dbg !13340
  %6 = load %struct.FCurve*, %struct.FCurve** %next, align 8, !dbg !13340
  store %struct.FCurve* %6, %struct.FCurve** %nextfcu, align 8, !dbg !13341
  %7 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13342
  %rna_path1 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %7, i32 0, i32 12, !dbg !13344
  %8 = load i8*, i8** %rna_path1, align 8, !dbg !13344
  %9 = load i8*, i8** %orig_rna_path.addr, align 8, !dbg !13345
  %10 = load i32, i32* %len, align 4, !dbg !13346
  %conv2 = sext i32 %10 to i64, !dbg !13346
  %call3 = call i32 @strncmp(i8* %8, i8* %9, i64 %conv2) #7, !dbg !13347
  %tobool4 = icmp ne i32 %call3, 0, !dbg !13347
  br i1 %tobool4, label %if.end24, label %if.then, !dbg !13348

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %spath, metadata !13349, metadata !DIExpression()), !dbg !13351
  call void @llvm.dbg.declare(metadata i8** %suffix, metadata !13352, metadata !DIExpression()), !dbg !13353
  %11 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13354
  %rna_path5 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %11, i32 0, i32 12, !dbg !13355
  %12 = load i8*, i8** %rna_path5, align 8, !dbg !13355
  %13 = load i32, i32* %len, align 4, !dbg !13356
  %idx.ext = sext i32 %13 to i64, !dbg !13357
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %idx.ext, !dbg !13357
  store i8* %add.ptr, i8** %suffix, align 8, !dbg !13353
  %14 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13358
  %call6 = call %struct.FCurve* @copy_fcurve(%struct.FCurve* %14), !dbg !13359
  store %struct.FCurve* %call6, %struct.FCurve** %nfcu, align 8, !dbg !13360
  %15 = load %struct.FCurve*, %struct.FCurve** %nfcu, align 8, !dbg !13361
  %rna_path7 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %15, i32 0, i32 12, !dbg !13362
  %16 = load i8*, i8** %rna_path7, align 8, !dbg !13362
  store i8* %16, i8** %spath, align 8, !dbg !13363
  %17 = load i8*, i8** %rna_path.addr, align 8, !dbg !13364
  %18 = load i8*, i8** %suffix, align 8, !dbg !13365
  %call8 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.188, i64 0, i64 0), i8* %17, i8* %18), !dbg !13366
  %19 = load %struct.FCurve*, %struct.FCurve** %nfcu, align 8, !dbg !13367
  %rna_path9 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %19, i32 0, i32 12, !dbg !13368
  store i8* %call8, i8** %rna_path9, align 8, !dbg !13369
  %20 = load %struct.ListBase*, %struct.ListBase** %curves.addr, align 8, !dbg !13370
  %21 = load %struct.FCurve*, %struct.FCurve** %nfcu, align 8, !dbg !13371
  %22 = bitcast %struct.FCurve* %21 to i8*, !dbg !13371
  call void @BLI_addtail(%struct.ListBase* %20, i8* %22), !dbg !13372
  %23 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13373
  %grp = getelementptr inbounds %struct.FCurve, %struct.FCurve* %23, i32 0, i32 2, !dbg !13375
  %24 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !13375
  %tobool10 = icmp ne %struct.bActionGroup* %24, null, !dbg !13373
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !13376

if.then11:                                        ; preds = %if.then
  %25 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !13377
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %25, i32 0, i32 0, !dbg !13379
  %26 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !13379
  %27 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13380
  call void @action_groups_remove_channel(%struct.bAction* %26, %struct.FCurve* %27), !dbg !13381
  %28 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !13382
  %action12 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %28, i32 0, i32 0, !dbg !13383
  %29 = load %struct.bAction*, %struct.bAction** %action12, align 8, !dbg !13383
  %30 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13384
  %grp13 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %30, i32 0, i32 2, !dbg !13385
  %31 = load %struct.bActionGroup*, %struct.bActionGroup** %grp13, align 8, !dbg !13385
  %32 = load %struct.FCurve*, %struct.FCurve** %nfcu, align 8, !dbg !13386
  call void @action_groups_add_channel(%struct.bAction* %29, %struct.bActionGroup* %31, %struct.FCurve* %32), !dbg !13387
  br label %if.end23, !dbg !13388

if.else:                                          ; preds = %if.then
  %33 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !13389
  %action14 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %33, i32 0, i32 0, !dbg !13391
  %34 = load %struct.bAction*, %struct.bAction** %action14, align 8, !dbg !13391
  %tobool15 = icmp ne %struct.bAction* %34, null, !dbg !13392
  br i1 %tobool15, label %land.lhs.true, label %if.else22, !dbg !13393

land.lhs.true:                                    ; preds = %if.else
  %35 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !13394
  %action16 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %35, i32 0, i32 0, !dbg !13395
  %36 = load %struct.bAction*, %struct.bAction** %action16, align 8, !dbg !13395
  %curves17 = getelementptr inbounds %struct.bAction, %struct.bAction* %36, i32 0, i32 1, !dbg !13396
  %37 = load %struct.ListBase*, %struct.ListBase** %orig_curves.addr, align 8, !dbg !13397
  %cmp = icmp eq %struct.ListBase* %curves17, %37, !dbg !13398
  br i1 %cmp, label %if.then19, label %if.else22, !dbg !13399

if.then19:                                        ; preds = %land.lhs.true
  %38 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !13400
  %action20 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %38, i32 0, i32 0, !dbg !13401
  %39 = load %struct.bAction*, %struct.bAction** %action20, align 8, !dbg !13401
  %curves21 = getelementptr inbounds %struct.bAction, %struct.bAction* %39, i32 0, i32 1, !dbg !13402
  %40 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13403
  %41 = bitcast %struct.FCurve* %40 to i8*, !dbg !13403
  call void @BLI_remlink(%struct.ListBase* %curves21, i8* %41), !dbg !13404
  br label %if.end, !dbg !13404

if.else22:                                        ; preds = %land.lhs.true, %if.else
  %42 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !13405
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %42, i32 0, i32 5, !dbg !13406
  %43 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13407
  %44 = bitcast %struct.FCurve* %43 to i8*, !dbg !13407
  call void @BLI_remlink(%struct.ListBase* %drivers, i8* %44), !dbg !13408
  br label %if.end

if.end:                                           ; preds = %if.else22, %if.then19
  br label %if.end23

if.end23:                                         ; preds = %if.end, %if.then11
  %45 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !13409
  call void @free_fcurve(%struct.FCurve* %45), !dbg !13410
  %46 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13411
  %47 = load i8*, i8** %spath, align 8, !dbg !13412
  call void %46(i8* %47), !dbg !13411
  br label %if.end24, !dbg !13413

if.end24:                                         ; preds = %if.end23, %for.body
  br label %for.inc, !dbg !13414

for.inc:                                          ; preds = %if.end24
  %48 = load %struct.FCurve*, %struct.FCurve** %nextfcu, align 8, !dbg !13415
  store %struct.FCurve* %48, %struct.FCurve** %fcu, align 8, !dbg !13416
  br label %for.cond, !dbg !13417, !llvm.loop !13418

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13420
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #4

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #4

; Function Attrs: noinline nounwind uwtable
define internal void @fcurve_remove(%struct.AnimData* %adt, %struct.ListBase* %orig_curves, %struct.FCurve* %fcu) #0 !dbg !13421 {
entry:
  %adt.addr = alloca %struct.AnimData*, align 8
  %orig_curves.addr = alloca %struct.ListBase*, align 8
  %fcu.addr = alloca %struct.FCurve*, align 8
  store %struct.AnimData* %adt, %struct.AnimData** %adt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt.addr, metadata !13424, metadata !DIExpression()), !dbg !13425
  store %struct.ListBase* %orig_curves, %struct.ListBase** %orig_curves.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %orig_curves.addr, metadata !13426, metadata !DIExpression()), !dbg !13427
  store %struct.FCurve* %fcu, %struct.FCurve** %fcu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu.addr, metadata !13428, metadata !DIExpression()), !dbg !13429
  %0 = load %struct.ListBase*, %struct.ListBase** %orig_curves.addr, align 8, !dbg !13430
  %1 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !13432
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %1, i32 0, i32 5, !dbg !13433
  %cmp = icmp eq %struct.ListBase* %0, %drivers, !dbg !13434
  br i1 %cmp, label %if.then, label %if.else, !dbg !13435

if.then:                                          ; preds = %entry
  %2 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !13436
  %drivers1 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %2, i32 0, i32 5, !dbg !13437
  %3 = load %struct.FCurve*, %struct.FCurve** %fcu.addr, align 8, !dbg !13438
  %4 = bitcast %struct.FCurve* %3 to i8*, !dbg !13438
  call void @BLI_remlink(%struct.ListBase* %drivers1, i8* %4), !dbg !13439
  br label %if.end, !dbg !13439

if.else:                                          ; preds = %entry
  %5 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !13440
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %5, i32 0, i32 0, !dbg !13441
  %6 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !13441
  %7 = load %struct.FCurve*, %struct.FCurve** %fcu.addr, align 8, !dbg !13442
  call void @action_groups_remove_channel(%struct.bAction* %6, %struct.FCurve* %7), !dbg !13443
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.FCurve*, %struct.FCurve** %fcu.addr, align 8, !dbg !13444
  call void @free_fcurve(%struct.FCurve* %8), !dbg !13445
  ret void, !dbg !13446
}

declare dso_local i8* @BLI_ghash_lookup(%struct.GHash*, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #4

declare dso_local %struct.FCurve* @copy_fcurve(%struct.FCurve*) #2

declare dso_local i8* @BLI_sprintfN(i8*, ...) #2

declare dso_local void @action_groups_remove_channel(%struct.bAction*, %struct.FCurve*) #2

declare dso_local void @action_groups_add_channel(%struct.bAction*, %struct.bActionGroup*, %struct.FCurve*) #2

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

declare dso_local void @free_fcurve(%struct.FCurve*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32* @initialize_index_map(%struct.Object* %obedit, i32* %r_old_totvert) #0 !dbg !13447 {
entry:
  %obedit.addr = alloca %struct.Object*, align 8
  %r_old_totvert.addr = alloca i32*, align 8
  %curve = alloca %struct.Curve*, align 8
  %editnurb = alloca %struct.EditNurb*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %keyIndex = alloca %struct.CVKeyIndex*, align 8
  %old_to_new_map = alloca i32*, align 8
  %old_totvert = alloca i32, align 4
  %i = alloca i32, align 4
  %vertex_index = alloca i32, align 4
  %bezt20 = alloca %struct.BezTriple*, align 8
  %a = alloca i32, align 4
  %bp = alloca %struct.BPoint*, align 8
  %a61 = alloca i32, align 4
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !13450, metadata !DIExpression()), !dbg !13451
  store i32* %r_old_totvert, i32** %r_old_totvert.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_old_totvert.addr, metadata !13452, metadata !DIExpression()), !dbg !13453
  call void @llvm.dbg.declare(metadata %struct.Curve** %curve, metadata !13454, metadata !DIExpression()), !dbg !13455
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !13456
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !13457
  %1 = load i8*, i8** %data, align 8, !dbg !13457
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !13458
  store %struct.Curve* %2, %struct.Curve** %curve, align 8, !dbg !13455
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb, metadata !13459, metadata !DIExpression()), !dbg !13460
  %3 = load %struct.Curve*, %struct.Curve** %curve, align 8, !dbg !13461
  %editnurb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 4, !dbg !13462
  %4 = load %struct.EditNurb*, %struct.EditNurb** %editnurb1, align 8, !dbg !13462
  store %struct.EditNurb* %4, %struct.EditNurb** %editnurb, align 8, !dbg !13460
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !13463, metadata !DIExpression()), !dbg !13464
  call void @llvm.dbg.declare(metadata %struct.CVKeyIndex** %keyIndex, metadata !13465, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.declare(metadata i32** %old_to_new_map, metadata !13467, metadata !DIExpression()), !dbg !13468
  call void @llvm.dbg.declare(metadata i32* %old_totvert, metadata !13469, metadata !DIExpression()), !dbg !13470
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13471, metadata !DIExpression()), !dbg !13472
  call void @llvm.dbg.declare(metadata i32* %vertex_index, metadata !13473, metadata !DIExpression()), !dbg !13474
  %5 = load %struct.Curve*, %struct.Curve** %curve, align 8, !dbg !13475
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %5, i32 0, i32 3, !dbg !13477
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb, i32 0, i32 0, !dbg !13478
  %6 = load i8*, i8** %first, align 8, !dbg !13478
  %7 = bitcast i8* %6 to %struct.Nurb*, !dbg !13475
  store %struct.Nurb* %7, %struct.Nurb** %nu, align 8, !dbg !13479
  store i32 0, i32* %old_totvert, align 4, !dbg !13480
  br label %for.cond, !dbg !13481

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13482
  %cmp = icmp ne %struct.Nurb* %8, null, !dbg !13484
  br i1 %cmp, label %for.body, label %for.end, !dbg !13485

for.body:                                         ; preds = %for.cond
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13486
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 18, !dbg !13489
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13489
  %tobool = icmp ne %struct.BezTriple* %10, null, !dbg !13486
  br i1 %tobool, label %if.then, label %if.else, !dbg !13490

if.then:                                          ; preds = %for.body
  %11 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13491
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 6, !dbg !13493
  %12 = load i32, i32* %pntsu, align 8, !dbg !13493
  %mul = mul nsw i32 %12, 3, !dbg !13494
  %13 = load i32, i32* %old_totvert, align 4, !dbg !13495
  %add = add nsw i32 %13, %mul, !dbg !13495
  store i32 %add, i32* %old_totvert, align 4, !dbg !13495
  br label %if.end, !dbg !13496

if.else:                                          ; preds = %for.body
  %14 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13497
  %pntsu2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 6, !dbg !13499
  %15 = load i32, i32* %pntsu2, align 8, !dbg !13499
  %16 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13500
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %16, i32 0, i32 7, !dbg !13501
  %17 = load i32, i32* %pntsv, align 4, !dbg !13501
  %mul3 = mul nsw i32 %15, %17, !dbg !13502
  %18 = load i32, i32* %old_totvert, align 4, !dbg !13503
  %add4 = add nsw i32 %18, %mul3, !dbg !13503
  store i32 %add4, i32* %old_totvert, align 4, !dbg !13503
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !13504

for.inc:                                          ; preds = %if.end
  %19 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13505
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %19, i32 0, i32 0, !dbg !13506
  %20 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !13506
  store %struct.Nurb* %20, %struct.Nurb** %nu, align 8, !dbg !13507
  br label %for.cond, !dbg !13508, !llvm.loop !13509

for.end:                                          ; preds = %for.cond
  %21 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !13511
  %22 = load i32, i32* %old_totvert, align 4, !dbg !13512
  %conv = sext i32 %22 to i64, !dbg !13512
  %mul5 = mul i64 %conv, 4, !dbg !13513
  %call = call i8* %21(i64 %mul5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.189, i64 0, i64 0)), !dbg !13511
  %23 = bitcast i8* %call to i32*, !dbg !13511
  store i32* %23, i32** %old_to_new_map, align 8, !dbg !13514
  store i32 0, i32* %i, align 4, !dbg !13515
  br label %for.cond6, !dbg !13517

for.cond6:                                        ; preds = %for.inc10, %for.end
  %24 = load i32, i32* %i, align 4, !dbg !13518
  %25 = load i32, i32* %old_totvert, align 4, !dbg !13520
  %cmp7 = icmp slt i32 %24, %25, !dbg !13521
  br i1 %cmp7, label %for.body9, label %for.end11, !dbg !13522

for.body9:                                        ; preds = %for.cond6
  %26 = load i32*, i32** %old_to_new_map, align 8, !dbg !13523
  %27 = load i32, i32* %i, align 4, !dbg !13525
  %idxprom = sext i32 %27 to i64, !dbg !13523
  %arrayidx = getelementptr inbounds i32, i32* %26, i64 %idxprom, !dbg !13523
  store i32 -1, i32* %arrayidx, align 4, !dbg !13526
  br label %for.inc10, !dbg !13527

for.inc10:                                        ; preds = %for.body9
  %28 = load i32, i32* %i, align 4, !dbg !13528
  %inc = add nsw i32 %28, 1, !dbg !13528
  store i32 %inc, i32* %i, align 4, !dbg !13528
  br label %for.cond6, !dbg !13529, !llvm.loop !13530

for.end11:                                        ; preds = %for.cond6
  %29 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !13532
  %nurbs = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %29, i32 0, i32 0, !dbg !13534
  %first12 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurbs, i32 0, i32 0, !dbg !13535
  %30 = load i8*, i8** %first12, align 8, !dbg !13535
  %31 = bitcast i8* %30 to %struct.Nurb*, !dbg !13532
  store %struct.Nurb* %31, %struct.Nurb** %nu, align 8, !dbg !13536
  store i32 0, i32* %vertex_index, align 4, !dbg !13537
  br label %for.cond13, !dbg !13538

for.cond13:                                       ; preds = %for.inc80, %for.end11
  %32 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13539
  %cmp14 = icmp ne %struct.Nurb* %32, null, !dbg !13541
  br i1 %cmp14, label %for.body16, label %for.end82, !dbg !13542

for.body16:                                       ; preds = %for.cond13
  %33 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13543
  %bezt17 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %33, i32 0, i32 18, !dbg !13546
  %34 = load %struct.BezTriple*, %struct.BezTriple** %bezt17, align 8, !dbg !13546
  %tobool18 = icmp ne %struct.BezTriple* %34, null, !dbg !13543
  br i1 %tobool18, label %if.then19, label %if.else59, !dbg !13547

if.then19:                                        ; preds = %for.body16
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt20, metadata !13548, metadata !DIExpression()), !dbg !13550
  %35 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13551
  %bezt21 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %35, i32 0, i32 18, !dbg !13552
  %36 = load %struct.BezTriple*, %struct.BezTriple** %bezt21, align 8, !dbg !13552
  store %struct.BezTriple* %36, %struct.BezTriple** %bezt20, align 8, !dbg !13550
  call void @llvm.dbg.declare(metadata i32* %a, metadata !13553, metadata !DIExpression()), !dbg !13554
  %37 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13555
  %pntsu22 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %37, i32 0, i32 6, !dbg !13556
  %38 = load i32, i32* %pntsu22, align 8, !dbg !13556
  store i32 %38, i32* %a, align 4, !dbg !13554
  br label %while.cond, !dbg !13557

while.cond:                                       ; preds = %if.end57, %if.then19
  %39 = load i32, i32* %a, align 4, !dbg !13558
  %dec = add nsw i32 %39, -1, !dbg !13558
  store i32 %dec, i32* %a, align 4, !dbg !13558
  %tobool23 = icmp ne i32 %39, 0, !dbg !13557
  br i1 %tobool23, label %while.body, label %while.end, !dbg !13557

while.body:                                       ; preds = %while.cond
  %40 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !13559
  %41 = load %struct.BezTriple*, %struct.BezTriple** %bezt20, align 8, !dbg !13561
  %42 = bitcast %struct.BezTriple* %41 to i8*, !dbg !13561
  %call24 = call %struct.CVKeyIndex* @getCVKeyIndex(%struct.EditNurb* %40, i8* %42), !dbg !13562
  store %struct.CVKeyIndex* %call24, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !13563
  %43 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !13564
  %tobool25 = icmp ne %struct.CVKeyIndex* %43, null, !dbg !13564
  br i1 %tobool25, label %if.then26, label %if.end57, !dbg !13566

if.then26:                                        ; preds = %while.body
  %44 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !13567
  %switched = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %44, i32 0, i32 5, !dbg !13570
  %45 = load i8, i8* %switched, align 8, !dbg !13570
  %tobool27 = icmp ne i8 %45, 0, !dbg !13567
  br i1 %tobool27, label %if.then28, label %if.else42, !dbg !13571

if.then28:                                        ; preds = %if.then26
  %46 = load i32, i32* %vertex_index, align 4, !dbg !13572
  %add29 = add nsw i32 %46, 2, !dbg !13574
  %47 = load i32*, i32** %old_to_new_map, align 8, !dbg !13575
  %48 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !13576
  %vertex_index30 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %48, i32 0, i32 4, !dbg !13577
  %49 = load i32, i32* %vertex_index30, align 4, !dbg !13577
  %idxprom31 = sext i32 %49 to i64, !dbg !13575
  %arrayidx32 = getelementptr inbounds i32, i32* %47, i64 %idxprom31, !dbg !13575
  store i32 %add29, i32* %arrayidx32, align 4, !dbg !13578
  %50 = load i32, i32* %vertex_index, align 4, !dbg !13579
  %add33 = add nsw i32 %50, 1, !dbg !13580
  %51 = load i32*, i32** %old_to_new_map, align 8, !dbg !13581
  %52 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !13582
  %vertex_index34 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %52, i32 0, i32 4, !dbg !13583
  %53 = load i32, i32* %vertex_index34, align 4, !dbg !13583
  %add35 = add nsw i32 %53, 1, !dbg !13584
  %idxprom36 = sext i32 %add35 to i64, !dbg !13581
  %arrayidx37 = getelementptr inbounds i32, i32* %51, i64 %idxprom36, !dbg !13581
  store i32 %add33, i32* %arrayidx37, align 4, !dbg !13585
  %54 = load i32, i32* %vertex_index, align 4, !dbg !13586
  %55 = load i32*, i32** %old_to_new_map, align 8, !dbg !13587
  %56 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !13588
  %vertex_index38 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %56, i32 0, i32 4, !dbg !13589
  %57 = load i32, i32* %vertex_index38, align 4, !dbg !13589
  %add39 = add nsw i32 %57, 2, !dbg !13590
  %idxprom40 = sext i32 %add39 to i64, !dbg !13587
  %arrayidx41 = getelementptr inbounds i32, i32* %55, i64 %idxprom40, !dbg !13587
  store i32 %54, i32* %arrayidx41, align 4, !dbg !13591
  br label %if.end56, !dbg !13592

if.else42:                                        ; preds = %if.then26
  %58 = load i32, i32* %vertex_index, align 4, !dbg !13593
  %59 = load i32*, i32** %old_to_new_map, align 8, !dbg !13595
  %60 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !13596
  %vertex_index43 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %60, i32 0, i32 4, !dbg !13597
  %61 = load i32, i32* %vertex_index43, align 4, !dbg !13597
  %idxprom44 = sext i32 %61 to i64, !dbg !13595
  %arrayidx45 = getelementptr inbounds i32, i32* %59, i64 %idxprom44, !dbg !13595
  store i32 %58, i32* %arrayidx45, align 4, !dbg !13598
  %62 = load i32, i32* %vertex_index, align 4, !dbg !13599
  %add46 = add nsw i32 %62, 1, !dbg !13600
  %63 = load i32*, i32** %old_to_new_map, align 8, !dbg !13601
  %64 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !13602
  %vertex_index47 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %64, i32 0, i32 4, !dbg !13603
  %65 = load i32, i32* %vertex_index47, align 4, !dbg !13603
  %add48 = add nsw i32 %65, 1, !dbg !13604
  %idxprom49 = sext i32 %add48 to i64, !dbg !13601
  %arrayidx50 = getelementptr inbounds i32, i32* %63, i64 %idxprom49, !dbg !13601
  store i32 %add46, i32* %arrayidx50, align 4, !dbg !13605
  %66 = load i32, i32* %vertex_index, align 4, !dbg !13606
  %add51 = add nsw i32 %66, 2, !dbg !13607
  %67 = load i32*, i32** %old_to_new_map, align 8, !dbg !13608
  %68 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !13609
  %vertex_index52 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %68, i32 0, i32 4, !dbg !13610
  %69 = load i32, i32* %vertex_index52, align 4, !dbg !13610
  %add53 = add nsw i32 %69, 2, !dbg !13611
  %idxprom54 = sext i32 %add53 to i64, !dbg !13608
  %arrayidx55 = getelementptr inbounds i32, i32* %67, i64 %idxprom54, !dbg !13608
  store i32 %add51, i32* %arrayidx55, align 4, !dbg !13612
  br label %if.end56

if.end56:                                         ; preds = %if.else42, %if.then28
  br label %if.end57, !dbg !13613

if.end57:                                         ; preds = %if.end56, %while.body
  %70 = load i32, i32* %vertex_index, align 4, !dbg !13614
  %add58 = add nsw i32 %70, 3, !dbg !13614
  store i32 %add58, i32* %vertex_index, align 4, !dbg !13614
  %71 = load %struct.BezTriple*, %struct.BezTriple** %bezt20, align 8, !dbg !13615
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %71, i32 1, !dbg !13615
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt20, align 8, !dbg !13615
  br label %while.cond, !dbg !13557, !llvm.loop !13616

while.end:                                        ; preds = %while.cond
  br label %if.end79, !dbg !13618

if.else59:                                        ; preds = %for.body16
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !13619, metadata !DIExpression()), !dbg !13621
  %72 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13622
  %bp60 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %72, i32 0, i32 17, !dbg !13623
  %73 = load %struct.BPoint*, %struct.BPoint** %bp60, align 8, !dbg !13623
  store %struct.BPoint* %73, %struct.BPoint** %bp, align 8, !dbg !13621
  call void @llvm.dbg.declare(metadata i32* %a61, metadata !13624, metadata !DIExpression()), !dbg !13625
  %74 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13626
  %pntsu62 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %74, i32 0, i32 6, !dbg !13627
  %75 = load i32, i32* %pntsu62, align 8, !dbg !13627
  %76 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13628
  %pntsv63 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %76, i32 0, i32 7, !dbg !13629
  %77 = load i32, i32* %pntsv63, align 4, !dbg !13629
  %mul64 = mul nsw i32 %75, %77, !dbg !13630
  store i32 %mul64, i32* %a61, align 4, !dbg !13625
  br label %while.cond65, !dbg !13631

while.cond65:                                     ; preds = %if.end75, %if.else59
  %78 = load i32, i32* %a61, align 4, !dbg !13632
  %dec66 = add nsw i32 %78, -1, !dbg !13632
  store i32 %dec66, i32* %a61, align 4, !dbg !13632
  %tobool67 = icmp ne i32 %78, 0, !dbg !13631
  br i1 %tobool67, label %while.body68, label %while.end78, !dbg !13631

while.body68:                                     ; preds = %while.cond65
  %79 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !13633
  %80 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !13635
  %81 = bitcast %struct.BPoint* %80 to i8*, !dbg !13635
  %call69 = call %struct.CVKeyIndex* @getCVKeyIndex(%struct.EditNurb* %79, i8* %81), !dbg !13636
  store %struct.CVKeyIndex* %call69, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !13637
  %82 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !13638
  %tobool70 = icmp ne %struct.CVKeyIndex* %82, null, !dbg !13638
  br i1 %tobool70, label %if.then71, label %if.end75, !dbg !13640

if.then71:                                        ; preds = %while.body68
  %83 = load i32, i32* %vertex_index, align 4, !dbg !13641
  %84 = load i32*, i32** %old_to_new_map, align 8, !dbg !13643
  %85 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %keyIndex, align 8, !dbg !13644
  %vertex_index72 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %85, i32 0, i32 4, !dbg !13645
  %86 = load i32, i32* %vertex_index72, align 4, !dbg !13645
  %idxprom73 = sext i32 %86 to i64, !dbg !13643
  %arrayidx74 = getelementptr inbounds i32, i32* %84, i64 %idxprom73, !dbg !13643
  store i32 %83, i32* %arrayidx74, align 4, !dbg !13646
  br label %if.end75, !dbg !13647

if.end75:                                         ; preds = %if.then71, %while.body68
  %87 = load i32, i32* %vertex_index, align 4, !dbg !13648
  %inc76 = add nsw i32 %87, 1, !dbg !13648
  store i32 %inc76, i32* %vertex_index, align 4, !dbg !13648
  %88 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !13649
  %incdec.ptr77 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %88, i32 1, !dbg !13649
  store %struct.BPoint* %incdec.ptr77, %struct.BPoint** %bp, align 8, !dbg !13649
  br label %while.cond65, !dbg !13631, !llvm.loop !13650

while.end78:                                      ; preds = %while.cond65
  br label %if.end79

if.end79:                                         ; preds = %while.end78, %while.end
  br label %for.inc80, !dbg !13652

for.inc80:                                        ; preds = %if.end79
  %89 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13653
  %next81 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %89, i32 0, i32 0, !dbg !13654
  %90 = load %struct.Nurb*, %struct.Nurb** %next81, align 8, !dbg !13654
  store %struct.Nurb* %90, %struct.Nurb** %nu, align 8, !dbg !13655
  br label %for.cond13, !dbg !13656, !llvm.loop !13657

for.end82:                                        ; preds = %for.cond13
  %91 = load i32, i32* %old_totvert, align 4, !dbg !13659
  %92 = load i32*, i32** %r_old_totvert.addr, align 8, !dbg !13660
  store i32 %91, i32* %92, align 4, !dbg !13661
  %93 = load i32*, i32** %old_to_new_map, align 8, !dbg !13662
  ret i32* %93, !dbg !13663
}

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #2

declare dso_local i32 @BKE_nurbList_verts_count(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.BezTriple* @getKeyIndexOrig_bezt(%struct.EditNurb* %editnurb, %struct.BezTriple* %bezt) #0 !dbg !13664 {
entry:
  %retval = alloca %struct.BezTriple*, align 8
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %bezt.addr = alloca %struct.BezTriple*, align 8
  %index = alloca %struct.CVKeyIndex*, align 8
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !13667, metadata !DIExpression()), !dbg !13668
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !13669, metadata !DIExpression()), !dbg !13670
  call void @llvm.dbg.declare(metadata %struct.CVKeyIndex** %index, metadata !13671, metadata !DIExpression()), !dbg !13672
  %0 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !13673
  %1 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !13674
  %2 = bitcast %struct.BezTriple* %1 to i8*, !dbg !13674
  %call = call %struct.CVKeyIndex* @getCVKeyIndex(%struct.EditNurb* %0, i8* %2), !dbg !13675
  store %struct.CVKeyIndex* %call, %struct.CVKeyIndex** %index, align 8, !dbg !13672
  %3 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index, align 8, !dbg !13676
  %tobool = icmp ne %struct.CVKeyIndex* %3, null, !dbg !13676
  br i1 %tobool, label %if.end, label %if.then, !dbg !13678

if.then:                                          ; preds = %entry
  store %struct.BezTriple* null, %struct.BezTriple** %retval, align 8, !dbg !13679
  br label %return, !dbg !13679

if.end:                                           ; preds = %entry
  %4 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index, align 8, !dbg !13681
  %orig_cv = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %4, i32 0, i32 0, !dbg !13682
  %5 = load i8*, i8** %orig_cv, align 8, !dbg !13682
  %6 = bitcast i8* %5 to %struct.BezTriple*, !dbg !13683
  store %struct.BezTriple* %6, %struct.BezTriple** %retval, align 8, !dbg !13684
  br label %return, !dbg !13684

return:                                           ; preds = %if.end, %if.then
  %7 = load %struct.BezTriple*, %struct.BezTriple** %retval, align 8, !dbg !13685
  ret %struct.BezTriple* %7, !dbg !13685
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !13686 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !13689, metadata !DIExpression()), !dbg !13690
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !13691, metadata !DIExpression()), !dbg !13692
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !13693, metadata !DIExpression()), !dbg !13694
  %0 = load float*, float** %a.addr, align 8, !dbg !13695
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !13695
  %1 = load float, float* %arrayidx, align 4, !dbg !13695
  %2 = load float*, float** %b.addr, align 8, !dbg !13696
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !13696
  %3 = load float, float* %arrayidx1, align 4, !dbg !13696
  %sub = fsub float %1, %3, !dbg !13697
  %4 = load float*, float** %r.addr, align 8, !dbg !13698
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !13698
  store float %sub, float* %arrayidx2, align 4, !dbg !13699
  %5 = load float*, float** %a.addr, align 8, !dbg !13700
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !13700
  %6 = load float, float* %arrayidx3, align 4, !dbg !13700
  %7 = load float*, float** %b.addr, align 8, !dbg !13701
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !13701
  %8 = load float, float* %arrayidx4, align 4, !dbg !13701
  %sub5 = fsub float %6, %8, !dbg !13702
  %9 = load float*, float** %r.addr, align 8, !dbg !13703
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !13703
  store float %sub5, float* %arrayidx6, align 4, !dbg !13704
  %10 = load float*, float** %a.addr, align 8, !dbg !13705
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !13705
  %11 = load float, float* %arrayidx7, align 4, !dbg !13705
  %12 = load float*, float** %b.addr, align 8, !dbg !13706
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !13706
  %13 = load float, float* %arrayidx8, align 4, !dbg !13706
  %sub9 = fsub float %11, %13, !dbg !13707
  %14 = load float*, float** %r.addr, align 8, !dbg !13708
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !13708
  store float %sub9, float* %arrayidx10, align 4, !dbg !13709
  ret void, !dbg !13710
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.BPoint* @getKeyIndexOrig_bp(%struct.EditNurb* %editnurb, %struct.BPoint* %bp) #0 !dbg !13711 {
entry:
  %retval = alloca %struct.BPoint*, align 8
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %bp.addr = alloca %struct.BPoint*, align 8
  %index = alloca %struct.CVKeyIndex*, align 8
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !13714, metadata !DIExpression()), !dbg !13715
  store %struct.BPoint* %bp, %struct.BPoint** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp.addr, metadata !13716, metadata !DIExpression()), !dbg !13717
  call void @llvm.dbg.declare(metadata %struct.CVKeyIndex** %index, metadata !13718, metadata !DIExpression()), !dbg !13719
  %0 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !13720
  %1 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !13721
  %2 = bitcast %struct.BPoint* %1 to i8*, !dbg !13721
  %call = call %struct.CVKeyIndex* @getCVKeyIndex(%struct.EditNurb* %0, i8* %2), !dbg !13722
  store %struct.CVKeyIndex* %call, %struct.CVKeyIndex** %index, align 8, !dbg !13719
  %3 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index, align 8, !dbg !13723
  %tobool = icmp ne %struct.CVKeyIndex* %3, null, !dbg !13723
  br i1 %tobool, label %if.end, label %if.then, !dbg !13725

if.then:                                          ; preds = %entry
  store %struct.BPoint* null, %struct.BPoint** %retval, align 8, !dbg !13726
  br label %return, !dbg !13726

if.end:                                           ; preds = %entry
  %4 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index, align 8, !dbg !13728
  %orig_cv = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %4, i32 0, i32 0, !dbg !13729
  %5 = load i8*, i8** %orig_cv, align 8, !dbg !13729
  %6 = bitcast i8* %5 to %struct.BPoint*, !dbg !13730
  store %struct.BPoint* %6, %struct.BPoint** %retval, align 8, !dbg !13731
  br label %return, !dbg !13731

return:                                           ; preds = %if.end, %if.then
  %7 = load %struct.BPoint*, %struct.BPoint** %retval, align 8, !dbg !13732
  ret %struct.BPoint* %7, !dbg !13732
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @getKeyIndexOrig_keyIndex(%struct.EditNurb* %editnurb, i8* %cv) #0 !dbg !13733 {
entry:
  %retval = alloca i32, align 4
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %cv.addr = alloca i8*, align 8
  %index = alloca %struct.CVKeyIndex*, align 8
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !13736, metadata !DIExpression()), !dbg !13737
  store i8* %cv, i8** %cv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cv.addr, metadata !13738, metadata !DIExpression()), !dbg !13739
  call void @llvm.dbg.declare(metadata %struct.CVKeyIndex** %index, metadata !13740, metadata !DIExpression()), !dbg !13741
  %0 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !13742
  %1 = load i8*, i8** %cv.addr, align 8, !dbg !13743
  %call = call %struct.CVKeyIndex* @getCVKeyIndex(%struct.EditNurb* %0, i8* %1), !dbg !13744
  store %struct.CVKeyIndex* %call, %struct.CVKeyIndex** %index, align 8, !dbg !13741
  %2 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index, align 8, !dbg !13745
  %tobool = icmp ne %struct.CVKeyIndex* %2, null, !dbg !13745
  br i1 %tobool, label %if.end, label %if.then, !dbg !13747

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !13748
  br label %return, !dbg !13748

if.end:                                           ; preds = %entry
  %3 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index, align 8, !dbg !13750
  %key_index = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %3, i32 0, i32 1, !dbg !13751
  %4 = load i32, i32* %key_index, align 8, !dbg !13751
  store i32 %4, i32* %retval, align 4, !dbg !13752
  br label %return, !dbg !13752

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !13753
  ret i32 %5, !dbg !13753
}

; Function Attrs: noinline nounwind uwtable
define internal void @calc_keyHandles(%struct.ListBase* %nurb, float* %key) #0 !dbg !13754 {
entry:
  %nurb.addr = alloca %struct.ListBase*, align 8
  %key.addr = alloca float*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %a = alloca i32, align 4
  %fp = alloca float*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %prevp = alloca %struct.BezTriple*, align 8
  %nextp = alloca %struct.BezTriple*, align 8
  %cur = alloca %struct.BezTriple, align 4
  %prev = alloca %struct.BezTriple, align 4
  %next = alloca %struct.BezTriple, align 4
  %startfp = alloca float*, align 8
  %prevfp = alloca float*, align 8
  %nextfp = alloca float*, align 8
  store %struct.ListBase* %nurb, %struct.ListBase** %nurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nurb.addr, metadata !13757, metadata !DIExpression()), !dbg !13758
  store float* %key, float** %key.addr, align 8
  call void @llvm.dbg.declare(metadata float** %key.addr, metadata !13759, metadata !DIExpression()), !dbg !13760
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !13761, metadata !DIExpression()), !dbg !13762
  call void @llvm.dbg.declare(metadata i32* %a, metadata !13763, metadata !DIExpression()), !dbg !13764
  call void @llvm.dbg.declare(metadata float** %fp, metadata !13765, metadata !DIExpression()), !dbg !13766
  %0 = load float*, float** %key.addr, align 8, !dbg !13767
  store float* %0, float** %fp, align 8, !dbg !13766
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !13768, metadata !DIExpression()), !dbg !13769
  %1 = load %struct.ListBase*, %struct.ListBase** %nurb.addr, align 8, !dbg !13770
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !13771
  %2 = load i8*, i8** %first, align 8, !dbg !13771
  %3 = bitcast i8* %2 to %struct.Nurb*, !dbg !13770
  store %struct.Nurb* %3, %struct.Nurb** %nu, align 8, !dbg !13772
  br label %while.cond, !dbg !13773

while.cond:                                       ; preds = %if.end47, %entry
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13774
  %tobool = icmp ne %struct.Nurb* %4, null, !dbg !13773
  br i1 %tobool, label %while.body, label %while.end49, !dbg !13773

while.body:                                       ; preds = %while.cond
  %5 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13775
  %bezt1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %5, i32 0, i32 18, !dbg !13778
  %6 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !13778
  %tobool2 = icmp ne %struct.BezTriple* %6, null, !dbg !13775
  br i1 %tobool2, label %if.then, label %if.else41, !dbg !13779

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %prevp, metadata !13780, metadata !DIExpression()), !dbg !13782
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %nextp, metadata !13783, metadata !DIExpression()), !dbg !13784
  call void @llvm.dbg.declare(metadata %struct.BezTriple* %cur, metadata !13785, metadata !DIExpression()), !dbg !13786
  call void @llvm.dbg.declare(metadata %struct.BezTriple* %prev, metadata !13787, metadata !DIExpression()), !dbg !13788
  call void @llvm.dbg.declare(metadata %struct.BezTriple* %next, metadata !13789, metadata !DIExpression()), !dbg !13790
  call void @llvm.dbg.declare(metadata float** %startfp, metadata !13791, metadata !DIExpression()), !dbg !13792
  call void @llvm.dbg.declare(metadata float** %prevfp, metadata !13793, metadata !DIExpression()), !dbg !13794
  call void @llvm.dbg.declare(metadata float** %nextfp, metadata !13795, metadata !DIExpression()), !dbg !13796
  %7 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13797
  %bezt3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %7, i32 0, i32 18, !dbg !13798
  %8 = load %struct.BezTriple*, %struct.BezTriple** %bezt3, align 8, !dbg !13798
  store %struct.BezTriple* %8, %struct.BezTriple** %bezt, align 8, !dbg !13799
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13800
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 6, !dbg !13801
  %10 = load i32, i32* %pntsu, align 8, !dbg !13801
  store i32 %10, i32* %a, align 4, !dbg !13802
  %11 = load float*, float** %fp, align 8, !dbg !13803
  store float* %11, float** %startfp, align 8, !dbg !13804
  %12 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13805
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 13, !dbg !13807
  %13 = load i16, i16* %flagu, align 4, !dbg !13807
  %conv = sext i16 %13 to i32, !dbg !13805
  %and = and i32 %conv, 1, !dbg !13808
  %tobool4 = icmp ne i32 %and, 0, !dbg !13808
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !13809

if.then5:                                         ; preds = %if.then
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13810
  %15 = load i32, i32* %a, align 4, !dbg !13812
  %sub = sub nsw i32 %15, 1, !dbg !13813
  %idx.ext = sext i32 %sub to i64, !dbg !13814
  %add.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %14, i64 %idx.ext, !dbg !13814
  store %struct.BezTriple* %add.ptr, %struct.BezTriple** %prevp, align 8, !dbg !13815
  %16 = load float*, float** %fp, align 8, !dbg !13816
  %17 = load i32, i32* %a, align 4, !dbg !13817
  %sub6 = sub nsw i32 %17, 1, !dbg !13818
  %mul = mul nsw i32 12, %sub6, !dbg !13819
  %idx.ext7 = sext i32 %mul to i64, !dbg !13820
  %add.ptr8 = getelementptr inbounds float, float* %16, i64 %idx.ext7, !dbg !13820
  store float* %add.ptr8, float** %prevfp, align 8, !dbg !13821
  br label %if.end, !dbg !13822

if.else:                                          ; preds = %if.then
  store %struct.BezTriple* null, %struct.BezTriple** %prevp, align 8, !dbg !13823
  store float* null, float** %prevfp, align 8, !dbg !13825
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13826
  %add.ptr9 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %18, i64 1, !dbg !13827
  store %struct.BezTriple* %add.ptr9, %struct.BezTriple** %nextp, align 8, !dbg !13828
  %19 = load float*, float** %fp, align 8, !dbg !13829
  %add.ptr10 = getelementptr inbounds float, float* %19, i64 12, !dbg !13830
  store float* %add.ptr10, float** %nextfp, align 8, !dbg !13831
  br label %while.cond11, !dbg !13832

while.cond11:                                     ; preds = %if.end38, %if.end
  %20 = load i32, i32* %a, align 4, !dbg !13833
  %dec = add nsw i32 %20, -1, !dbg !13833
  store i32 %dec, i32* %a, align 4, !dbg !13833
  %tobool12 = icmp ne i32 %20, 0, !dbg !13832
  br i1 %tobool12, label %while.body13, label %while.end, !dbg !13832

while.body13:                                     ; preds = %while.cond11
  %21 = load float*, float** %fp, align 8, !dbg !13834
  %22 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13836
  call void @key_to_bezt(float* %21, %struct.BezTriple* %22, %struct.BezTriple* %cur), !dbg !13837
  %23 = load %struct.BezTriple*, %struct.BezTriple** %nextp, align 8, !dbg !13838
  %tobool14 = icmp ne %struct.BezTriple* %23, null, !dbg !13838
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !13840

if.then15:                                        ; preds = %while.body13
  %24 = load float*, float** %nextfp, align 8, !dbg !13841
  %25 = load %struct.BezTriple*, %struct.BezTriple** %nextp, align 8, !dbg !13842
  call void @key_to_bezt(float* %24, %struct.BezTriple* %25, %struct.BezTriple* %next), !dbg !13843
  br label %if.end16, !dbg !13843

if.end16:                                         ; preds = %if.then15, %while.body13
  %26 = load %struct.BezTriple*, %struct.BezTriple** %prevp, align 8, !dbg !13844
  %tobool17 = icmp ne %struct.BezTriple* %26, null, !dbg !13844
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !13846

if.then18:                                        ; preds = %if.end16
  %27 = load float*, float** %prevfp, align 8, !dbg !13847
  %28 = load %struct.BezTriple*, %struct.BezTriple** %prevp, align 8, !dbg !13848
  call void @key_to_bezt(float* %27, %struct.BezTriple* %28, %struct.BezTriple* %prev), !dbg !13849
  br label %if.end19, !dbg !13849

if.end19:                                         ; preds = %if.then18, %if.end16
  %29 = load %struct.BezTriple*, %struct.BezTriple** %prevp, align 8, !dbg !13850
  %tobool20 = icmp ne %struct.BezTriple* %29, null, !dbg !13850
  br i1 %tobool20, label %cond.true, label %cond.false, !dbg !13850

cond.true:                                        ; preds = %if.end19
  br label %cond.end, !dbg !13850

cond.false:                                       ; preds = %if.end19
  br label %cond.end, !dbg !13850

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.BezTriple* [ %prev, %cond.true ], [ null, %cond.false ], !dbg !13850
  %30 = load %struct.BezTriple*, %struct.BezTriple** %nextp, align 8, !dbg !13851
  %tobool21 = icmp ne %struct.BezTriple* %30, null, !dbg !13851
  br i1 %tobool21, label %cond.true22, label %cond.false23, !dbg !13851

cond.true22:                                      ; preds = %cond.end
  br label %cond.end24, !dbg !13851

cond.false23:                                     ; preds = %cond.end
  br label %cond.end24, !dbg !13851

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi %struct.BezTriple* [ %next, %cond.true22 ], [ null, %cond.false23 ], !dbg !13851
  call void @BKE_nurb_handle_calc(%struct.BezTriple* %cur, %struct.BezTriple* %cond, %struct.BezTriple* %cond25, i8 zeroext 0), !dbg !13852
  %31 = load float*, float** %fp, align 8, !dbg !13853
  call void @bezt_to_key(%struct.BezTriple* %cur, float* %31), !dbg !13854
  %32 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13855
  store %struct.BezTriple* %32, %struct.BezTriple** %prevp, align 8, !dbg !13856
  %33 = load float*, float** %fp, align 8, !dbg !13857
  store float* %33, float** %prevfp, align 8, !dbg !13858
  %34 = load i32, i32* %a, align 4, !dbg !13859
  %cmp = icmp eq i32 %34, 1, !dbg !13861
  br i1 %cmp, label %if.then27, label %if.else36, !dbg !13862

if.then27:                                        ; preds = %cond.end24
  %35 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13863
  %flagu28 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %35, i32 0, i32 13, !dbg !13866
  %36 = load i16, i16* %flagu28, align 4, !dbg !13866
  %conv29 = sext i16 %36 to i32, !dbg !13863
  %and30 = and i32 %conv29, 1, !dbg !13867
  %tobool31 = icmp ne i32 %and30, 0, !dbg !13867
  br i1 %tobool31, label %if.then32, label %if.else34, !dbg !13868

if.then32:                                        ; preds = %if.then27
  %37 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13869
  %bezt33 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %37, i32 0, i32 18, !dbg !13871
  %38 = load %struct.BezTriple*, %struct.BezTriple** %bezt33, align 8, !dbg !13871
  store %struct.BezTriple* %38, %struct.BezTriple** %nextp, align 8, !dbg !13872
  %39 = load float*, float** %startfp, align 8, !dbg !13873
  store float* %39, float** %nextfp, align 8, !dbg !13874
  br label %if.end35, !dbg !13875

if.else34:                                        ; preds = %if.then27
  store %struct.BezTriple* null, %struct.BezTriple** %nextp, align 8, !dbg !13876
  store float* null, float** %nextfp, align 8, !dbg !13878
  br label %if.end35

if.end35:                                         ; preds = %if.else34, %if.then32
  br label %if.end38, !dbg !13879

if.else36:                                        ; preds = %cond.end24
  %40 = load %struct.BezTriple*, %struct.BezTriple** %nextp, align 8, !dbg !13880
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %40, i32 1, !dbg !13880
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %nextp, align 8, !dbg !13880
  %41 = load float*, float** %nextfp, align 8, !dbg !13882
  %add.ptr37 = getelementptr inbounds float, float* %41, i64 12, !dbg !13882
  store float* %add.ptr37, float** %nextfp, align 8, !dbg !13882
  br label %if.end38

if.end38:                                         ; preds = %if.else36, %if.end35
  %42 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13883
  %incdec.ptr39 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %42, i32 1, !dbg !13883
  store %struct.BezTriple* %incdec.ptr39, %struct.BezTriple** %bezt, align 8, !dbg !13883
  %43 = load float*, float** %fp, align 8, !dbg !13884
  %add.ptr40 = getelementptr inbounds float, float* %43, i64 12, !dbg !13884
  store float* %add.ptr40, float** %fp, align 8, !dbg !13884
  br label %while.cond11, !dbg !13832, !llvm.loop !13885

while.end:                                        ; preds = %while.cond11
  br label %if.end47, !dbg !13887

if.else41:                                        ; preds = %while.body
  %44 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13888
  %pntsu42 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %44, i32 0, i32 6, !dbg !13890
  %45 = load i32, i32* %pntsu42, align 8, !dbg !13890
  %46 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13891
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %46, i32 0, i32 7, !dbg !13892
  %47 = load i32, i32* %pntsv, align 4, !dbg !13892
  %mul43 = mul nsw i32 %45, %47, !dbg !13893
  store i32 %mul43, i32* %a, align 4, !dbg !13894
  %48 = load i32, i32* %a, align 4, !dbg !13895
  %mul44 = mul nsw i32 %48, 4, !dbg !13896
  %49 = load float*, float** %fp, align 8, !dbg !13897
  %idx.ext45 = sext i32 %mul44 to i64, !dbg !13897
  %add.ptr46 = getelementptr inbounds float, float* %49, i64 %idx.ext45, !dbg !13897
  store float* %add.ptr46, float** %fp, align 8, !dbg !13897
  br label %if.end47

if.end47:                                         ; preds = %if.else41, %while.end
  %50 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13898
  %next48 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %50, i32 0, i32 0, !dbg !13899
  %51 = load %struct.Nurb*, %struct.Nurb** %next48, align 8, !dbg !13899
  store %struct.Nurb* %51, %struct.Nurb** %nu, align 8, !dbg !13900
  br label %while.cond, !dbg !13773, !llvm.loop !13901

while.end49:                                      ; preds = %while.cond
  ret void, !dbg !13903
}

; Function Attrs: noinline nounwind uwtable
define internal void @key_to_bezt(float* %key, %struct.BezTriple* %basebezt, %struct.BezTriple* %bezt) #0 !dbg !13904 {
entry:
  %key.addr = alloca float*, align 8
  %basebezt.addr = alloca %struct.BezTriple*, align 8
  %bezt.addr = alloca %struct.BezTriple*, align 8
  store float* %key, float** %key.addr, align 8
  call void @llvm.dbg.declare(metadata float** %key.addr, metadata !13907, metadata !DIExpression()), !dbg !13908
  store %struct.BezTriple* %basebezt, %struct.BezTriple** %basebezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %basebezt.addr, metadata !13909, metadata !DIExpression()), !dbg !13910
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !13911, metadata !DIExpression()), !dbg !13912
  %0 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !13913
  %1 = bitcast %struct.BezTriple* %0 to i8*, !dbg !13914
  %2 = load %struct.BezTriple*, %struct.BezTriple** %basebezt.addr, align 8, !dbg !13915
  %3 = bitcast %struct.BezTriple* %2 to i8*, !dbg !13914
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %3, i64 72, i1 false), !dbg !13914
  %4 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !13916
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %4, i32 0, i32 0, !dbg !13917
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !13918
  %5 = bitcast [3 x float]* %arraydecay to i8*, !dbg !13918
  %6 = load float*, float** %key.addr, align 8, !dbg !13919
  %7 = bitcast float* %6 to i8*, !dbg !13918
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %7, i64 36, i1 false), !dbg !13918
  %8 = load float*, float** %key.addr, align 8, !dbg !13920
  %arrayidx = getelementptr inbounds float, float* %8, i64 9, !dbg !13920
  %9 = load float, float* %arrayidx, align 4, !dbg !13920
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !13921
  %alfa = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %10, i32 0, i32 1, !dbg !13922
  store float %9, float* %alfa, align 4, !dbg !13923
  ret void, !dbg !13924
}

declare dso_local void @BKE_nurb_handle_calc(%struct.BezTriple*, %struct.BezTriple*, %struct.BezTriple*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @bezt_to_key(%struct.BezTriple* %bezt, float* %key) #0 !dbg !13925 {
entry:
  %bezt.addr = alloca %struct.BezTriple*, align 8
  %key.addr = alloca float*, align 8
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !13928, metadata !DIExpression()), !dbg !13929
  store float* %key, float** %key.addr, align 8
  call void @llvm.dbg.declare(metadata float** %key.addr, metadata !13930, metadata !DIExpression()), !dbg !13931
  %0 = load float*, float** %key.addr, align 8, !dbg !13932
  %1 = bitcast float* %0 to i8*, !dbg !13933
  %2 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !13934
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %2, i32 0, i32 0, !dbg !13935
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !13933
  %3 = bitcast [3 x float]* %arraydecay to i8*, !dbg !13933
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %3, i64 36, i1 false), !dbg !13933
  %4 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !13936
  %alfa = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %4, i32 0, i32 1, !dbg !13937
  %5 = load float, float* %alfa, align 4, !dbg !13937
  %6 = load float*, float** %key.addr, align 8, !dbg !13938
  %arrayidx = getelementptr inbounds float, float* %6, i64 9, !dbg !13938
  store float %5, float* %arrayidx, align 4, !dbg !13939
  ret void, !dbg !13940
}

declare dso_local %struct.GHash* @BLI_ghash_ptr_new(i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.CVKeyIndex* @init_cvKeyIndex(i8* %cv, i32 %key_index, i32 %nu_index, i32 %pt_index, i32 %vertex_index, %struct.Nurb* %orig_nu) #0 !dbg !13941 {
entry:
  %cv.addr = alloca i8*, align 8
  %key_index.addr = alloca i32, align 4
  %nu_index.addr = alloca i32, align 4
  %pt_index.addr = alloca i32, align 4
  %vertex_index.addr = alloca i32, align 4
  %orig_nu.addr = alloca %struct.Nurb*, align 8
  %cvIndex = alloca %struct.CVKeyIndex*, align 8
  store i8* %cv, i8** %cv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cv.addr, metadata !13944, metadata !DIExpression()), !dbg !13945
  store i32 %key_index, i32* %key_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %key_index.addr, metadata !13946, metadata !DIExpression()), !dbg !13947
  store i32 %nu_index, i32* %nu_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nu_index.addr, metadata !13948, metadata !DIExpression()), !dbg !13949
  store i32 %pt_index, i32* %pt_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pt_index.addr, metadata !13950, metadata !DIExpression()), !dbg !13951
  store i32 %vertex_index, i32* %vertex_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vertex_index.addr, metadata !13952, metadata !DIExpression()), !dbg !13953
  store %struct.Nurb* %orig_nu, %struct.Nurb** %orig_nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %orig_nu.addr, metadata !13954, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.declare(metadata %struct.CVKeyIndex** %cvIndex, metadata !13956, metadata !DIExpression()), !dbg !13957
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !13958
  %call = call i8* %0(i64 40, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.192, i64 0, i64 0)), !dbg !13958
  %1 = bitcast i8* %call to %struct.CVKeyIndex*, !dbg !13958
  store %struct.CVKeyIndex* %1, %struct.CVKeyIndex** %cvIndex, align 8, !dbg !13957
  %2 = load i8*, i8** %cv.addr, align 8, !dbg !13959
  %3 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %cvIndex, align 8, !dbg !13960
  %orig_cv = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %3, i32 0, i32 0, !dbg !13961
  store i8* %2, i8** %orig_cv, align 8, !dbg !13962
  %4 = load i32, i32* %key_index.addr, align 4, !dbg !13963
  %5 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %cvIndex, align 8, !dbg !13964
  %key_index1 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %5, i32 0, i32 1, !dbg !13965
  store i32 %4, i32* %key_index1, align 8, !dbg !13966
  %6 = load i32, i32* %nu_index.addr, align 4, !dbg !13967
  %7 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %cvIndex, align 8, !dbg !13968
  %nu_index2 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %7, i32 0, i32 2, !dbg !13969
  store i32 %6, i32* %nu_index2, align 4, !dbg !13970
  %8 = load i32, i32* %pt_index.addr, align 4, !dbg !13971
  %9 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %cvIndex, align 8, !dbg !13972
  %pt_index3 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %9, i32 0, i32 3, !dbg !13973
  store i32 %8, i32* %pt_index3, align 8, !dbg !13974
  %10 = load i32, i32* %vertex_index.addr, align 4, !dbg !13975
  %11 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %cvIndex, align 8, !dbg !13976
  %vertex_index4 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %11, i32 0, i32 4, !dbg !13977
  store i32 %10, i32* %vertex_index4, align 4, !dbg !13978
  %12 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %cvIndex, align 8, !dbg !13979
  %switched = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %12, i32 0, i32 5, !dbg !13980
  store i8 0, i8* %switched, align 8, !dbg !13981
  %13 = load %struct.Nurb*, %struct.Nurb** %orig_nu.addr, align 8, !dbg !13982
  %14 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %cvIndex, align 8, !dbg !13983
  %orig_nu5 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %14, i32 0, i32 6, !dbg !13984
  store %struct.Nurb* %13, %struct.Nurb** %orig_nu5, align 8, !dbg !13985
  %15 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %cvIndex, align 8, !dbg !13986
  ret %struct.CVKeyIndex* %15, !dbg !13987
}

declare dso_local void @BLI_ghash_insert(%struct.GHash*, i8*, i8*) #2

declare dso_local %struct.Base* @CTX_data_active_base(%struct.bContext*) #2

declare dso_local void @WM_cursor_wait(i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @adduplicateflagNurb(%struct.Object* %obedit, %struct.ListBase* %newnurb, i16 signext %flag, i8 zeroext %split) #0 !dbg !13988 {
entry:
  %obedit.addr = alloca %struct.Object*, align 8
  %newnurb.addr = alloca %struct.ListBase*, align 8
  %flag.addr = alloca i16, align 2
  %split.addr = alloca i8, align 1
  %editnurb = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %newnu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bezt1 = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %bp1 = alloca %struct.BPoint*, align 8
  %bp2 = alloca %struct.BPoint*, align 8
  %bp3 = alloca %struct.BPoint*, align 8
  %cu = alloca %struct.Curve*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %starta = alloca i32, align 4
  %enda = alloca i32, align 4
  %diffa = alloca i32, align 4
  %cyclicu = alloca i32, align 4
  %cyclicv = alloca i32, align 4
  %newu = alloca i32, align 4
  %newv = alloca i32, align 4
  %usel = alloca i8*, align 8
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !13992, metadata !DIExpression()), !dbg !13993
  store %struct.ListBase* %newnurb, %struct.ListBase** %newnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %newnurb.addr, metadata !13994, metadata !DIExpression()), !dbg !13995
  store i16 %flag, i16* %flag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %flag.addr, metadata !13996, metadata !DIExpression()), !dbg !13997
  store i8 %split, i8* %split.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %split.addr, metadata !13998, metadata !DIExpression()), !dbg !13999
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !14000, metadata !DIExpression()), !dbg !14001
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !14002
  %call = call %struct.ListBase* @object_editcurve_get(%struct.Object* %0), !dbg !14003
  store %struct.ListBase* %call, %struct.ListBase** %editnurb, align 8, !dbg !14001
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !14004, metadata !DIExpression()), !dbg !14005
  %1 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !14006
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 1, !dbg !14007
  %2 = load i8*, i8** %last, align 8, !dbg !14007
  %3 = bitcast i8* %2 to %struct.Nurb*, !dbg !14006
  store %struct.Nurb* %3, %struct.Nurb** %nu, align 8, !dbg !14005
  call void @llvm.dbg.declare(metadata %struct.Nurb** %newnu, metadata !14008, metadata !DIExpression()), !dbg !14009
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !14010, metadata !DIExpression()), !dbg !14011
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt1, metadata !14012, metadata !DIExpression()), !dbg !14013
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !14014, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp1, metadata !14016, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp2, metadata !14018, metadata !DIExpression()), !dbg !14019
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp3, metadata !14020, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !14022, metadata !DIExpression()), !dbg !14023
  %4 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !14024
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !14025
  %5 = load i8*, i8** %data, align 8, !dbg !14025
  %6 = bitcast i8* %5 to %struct.Curve*, !dbg !14026
  store %struct.Curve* %6, %struct.Curve** %cu, align 8, !dbg !14023
  call void @llvm.dbg.declare(metadata i32* %a, metadata !14027, metadata !DIExpression()), !dbg !14028
  call void @llvm.dbg.declare(metadata i32* %b, metadata !14029, metadata !DIExpression()), !dbg !14030
  call void @llvm.dbg.declare(metadata i32* %c, metadata !14031, metadata !DIExpression()), !dbg !14032
  call void @llvm.dbg.declare(metadata i32* %starta, metadata !14033, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.declare(metadata i32* %enda, metadata !14035, metadata !DIExpression()), !dbg !14036
  call void @llvm.dbg.declare(metadata i32* %diffa, metadata !14037, metadata !DIExpression()), !dbg !14038
  call void @llvm.dbg.declare(metadata i32* %cyclicu, metadata !14039, metadata !DIExpression()), !dbg !14040
  call void @llvm.dbg.declare(metadata i32* %cyclicv, metadata !14041, metadata !DIExpression()), !dbg !14042
  call void @llvm.dbg.declare(metadata i32* %newu, metadata !14043, metadata !DIExpression()), !dbg !14044
  call void @llvm.dbg.declare(metadata i32* %newv, metadata !14045, metadata !DIExpression()), !dbg !14046
  call void @llvm.dbg.declare(metadata i8** %usel, metadata !14047, metadata !DIExpression()), !dbg !14048
  br label %while.cond, !dbg !14049

while.cond:                                       ; preds = %if.end608, %entry
  %7 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14050
  %tobool = icmp ne %struct.Nurb* %7, null, !dbg !14049
  br i1 %tobool, label %while.body, label %while.end609, !dbg !14049

while.body:                                       ; preds = %while.cond
  store i32 0, i32* %cyclicv, align 4, !dbg !14051
  store i32 0, i32* %cyclicu, align 4, !dbg !14053
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14054
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 2, !dbg !14056
  %9 = load i16, i16* %type, align 8, !dbg !14056
  %conv = sext i16 %9 to i32, !dbg !14054
  %cmp = icmp eq i32 %conv, 1, !dbg !14057
  br i1 %cmp, label %if.then, label %if.else109, !dbg !14058

if.then:                                          ; preds = %while.body
  store i32 0, i32* %a, align 4, !dbg !14059
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14062
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 18, !dbg !14063
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !14063
  store %struct.BezTriple* %11, %struct.BezTriple** %bezt, align 8, !dbg !14064
  br label %for.cond, !dbg !14065

for.cond:                                         ; preds = %for.inc81, %if.then
  %12 = load i32, i32* %a, align 4, !dbg !14066
  %13 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14068
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 6, !dbg !14069
  %14 = load i32, i32* %pntsu, align 8, !dbg !14069
  %cmp3 = icmp slt i32 %12, %14, !dbg !14070
  br i1 %cmp3, label %for.body, label %for.end84, !dbg !14071

for.body:                                         ; preds = %for.cond
  store i32 -1, i32* %enda, align 4, !dbg !14072
  %15 = load i32, i32* %a, align 4, !dbg !14074
  store i32 %15, i32* %starta, align 4, !dbg !14075
  br label %while.cond5, !dbg !14076

while.cond5:                                      ; preds = %if.end25, %for.body
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !14077
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %16, i32 0, i32 7, !dbg !14078
  %17 = load i8, i8* %f1, align 1, !dbg !14078
  %conv6 = zext i8 %17 to i32, !dbg !14077
  %18 = load i16, i16* %flag.addr, align 2, !dbg !14079
  %conv7 = sext i16 %18 to i32, !dbg !14079
  %and = and i32 %conv6, %conv7, !dbg !14080
  %tobool8 = icmp ne i32 %and, 0, !dbg !14080
  br i1 %tobool8, label %lor.end, label %lor.lhs.false, !dbg !14081

lor.lhs.false:                                    ; preds = %while.cond5
  %19 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !14082
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %19, i32 0, i32 8, !dbg !14083
  %20 = load i8, i8* %f2, align 4, !dbg !14083
  %conv9 = zext i8 %20 to i32, !dbg !14082
  %21 = load i16, i16* %flag.addr, align 2, !dbg !14084
  %conv10 = sext i16 %21 to i32, !dbg !14084
  %and11 = and i32 %conv9, %conv10, !dbg !14085
  %tobool12 = icmp ne i32 %and11, 0, !dbg !14085
  br i1 %tobool12, label %lor.end, label %lor.rhs, !dbg !14086

lor.rhs:                                          ; preds = %lor.lhs.false
  %22 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !14087
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %22, i32 0, i32 9, !dbg !14088
  %23 = load i8, i8* %f3, align 1, !dbg !14088
  %conv13 = zext i8 %23 to i32, !dbg !14087
  %24 = load i16, i16* %flag.addr, align 2, !dbg !14089
  %conv14 = sext i16 %24 to i32, !dbg !14089
  %and15 = and i32 %conv13, %conv14, !dbg !14090
  %tobool16 = icmp ne i32 %and15, 0, !dbg !14086
  br label %lor.end, !dbg !14086

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %while.cond5
  %25 = phi i1 [ true, %lor.lhs.false ], [ true, %while.cond5 ], [ %tobool16, %lor.rhs ]
  br i1 %25, label %while.body17, label %while.end, !dbg !14076

while.body17:                                     ; preds = %lor.end
  %26 = load i8, i8* %split.addr, align 1, !dbg !14091
  %tobool18 = icmp ne i8 %26, 0, !dbg !14091
  br i1 %tobool18, label %if.end, label %if.then19, !dbg !14094

if.then19:                                        ; preds = %while.body17
  %27 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !14095
  %28 = load i16, i16* %flag.addr, align 2, !dbg !14096
  %call20 = call zeroext i8 @select_beztriple(%struct.BezTriple* %27, i8 zeroext 0, i16 signext %28, i32 1), !dbg !14097
  br label %if.end, !dbg !14097

if.end:                                           ; preds = %if.then19, %while.body17
  %29 = load i32, i32* %a, align 4, !dbg !14098
  store i32 %29, i32* %enda, align 4, !dbg !14099
  %30 = load i32, i32* %a, align 4, !dbg !14100
  %31 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14102
  %pntsu21 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %31, i32 0, i32 6, !dbg !14103
  %32 = load i32, i32* %pntsu21, align 8, !dbg !14103
  %sub = sub nsw i32 %32, 1, !dbg !14104
  %cmp22 = icmp sge i32 %30, %sub, !dbg !14105
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !14106

if.then24:                                        ; preds = %if.end
  br label %while.end, !dbg !14107

if.end25:                                         ; preds = %if.end
  %33 = load i32, i32* %a, align 4, !dbg !14108
  %inc = add nsw i32 %33, 1, !dbg !14108
  store i32 %inc, i32* %a, align 4, !dbg !14108
  %34 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !14109
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %34, i32 1, !dbg !14109
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !14109
  br label %while.cond5, !dbg !14076, !llvm.loop !14110

while.end:                                        ; preds = %if.then24, %lor.end
  %35 = load i32, i32* %enda, align 4, !dbg !14112
  %36 = load i32, i32* %starta, align 4, !dbg !14114
  %cmp26 = icmp sge i32 %35, %36, !dbg !14115
  br i1 %cmp26, label %if.then28, label %if.end80, !dbg !14116

if.then28:                                        ; preds = %while.end
  %37 = load i32, i32* %enda, align 4, !dbg !14117
  %38 = load i32, i32* %starta, align 4, !dbg !14119
  %sub29 = sub nsw i32 %37, %38, !dbg !14120
  %add = add nsw i32 %sub29, 1, !dbg !14121
  store i32 %add, i32* %diffa, align 4, !dbg !14122
  store i32 %add, i32* %newu, align 4, !dbg !14123
  %39 = load i32, i32* %starta, align 4, !dbg !14124
  %cmp30 = icmp eq i32 %39, 0, !dbg !14126
  br i1 %cmp30, label %land.lhs.true, label %if.else, !dbg !14127

land.lhs.true:                                    ; preds = %if.then28
  %40 = load i32, i32* %newu, align 4, !dbg !14128
  %41 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14129
  %pntsu32 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %41, i32 0, i32 6, !dbg !14130
  %42 = load i32, i32* %pntsu32, align 8, !dbg !14130
  %cmp33 = icmp ne i32 %40, %42, !dbg !14131
  br i1 %cmp33, label %land.lhs.true35, label %if.else, !dbg !14132

land.lhs.true35:                                  ; preds = %land.lhs.true
  %43 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14133
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %43, i32 0, i32 13, !dbg !14134
  %44 = load i16, i16* %flagu, align 4, !dbg !14134
  %conv36 = sext i16 %44 to i32, !dbg !14133
  %and37 = and i32 %conv36, 1, !dbg !14135
  %tobool38 = icmp ne i32 %and37, 0, !dbg !14135
  br i1 %tobool38, label %if.then39, label %if.else, !dbg !14136

if.then39:                                        ; preds = %land.lhs.true35
  %45 = load i32, i32* %newu, align 4, !dbg !14137
  store i32 %45, i32* %cyclicu, align 4, !dbg !14139
  br label %if.end79, !dbg !14140

if.else:                                          ; preds = %land.lhs.true35, %land.lhs.true, %if.then28
  %46 = load i32, i32* %enda, align 4, !dbg !14141
  %47 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14144
  %pntsu40 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %47, i32 0, i32 6, !dbg !14145
  %48 = load i32, i32* %pntsu40, align 8, !dbg !14145
  %sub41 = sub nsw i32 %48, 1, !dbg !14146
  %cmp42 = icmp eq i32 %46, %sub41, !dbg !14147
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !14148

if.then44:                                        ; preds = %if.else
  %49 = load i32, i32* %cyclicu, align 4, !dbg !14149
  %50 = load i32, i32* %newu, align 4, !dbg !14150
  %add45 = add nsw i32 %50, %49, !dbg !14150
  store i32 %add45, i32* %newu, align 4, !dbg !14150
  br label %if.end46, !dbg !14151

if.end46:                                         ; preds = %if.then44, %if.else
  %51 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14152
  %52 = load i32, i32* %newu, align 4, !dbg !14153
  %call47 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %51, i32 %52, i32 1), !dbg !14154
  store %struct.Nurb* %call47, %struct.Nurb** %newnu, align 8, !dbg !14155
  %53 = load %struct.ListBase*, %struct.ListBase** %newnurb.addr, align 8, !dbg !14156
  %54 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14157
  %55 = bitcast %struct.Nurb* %54 to i8*, !dbg !14157
  call void @BLI_addtail(%struct.ListBase* %53, i8* %55), !dbg !14158
  %56 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14159
  %bezt48 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %56, i32 0, i32 18, !dbg !14160
  %57 = load %struct.BezTriple*, %struct.BezTriple** %bezt48, align 8, !dbg !14160
  %58 = bitcast %struct.BezTriple* %57 to i8*, !dbg !14161
  %59 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14162
  %bezt49 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %59, i32 0, i32 18, !dbg !14163
  %60 = load %struct.BezTriple*, %struct.BezTriple** %bezt49, align 8, !dbg !14163
  %61 = load i32, i32* %starta, align 4, !dbg !14164
  %idxprom = sext i32 %61 to i64, !dbg !14162
  %arrayidx = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %60, i64 %idxprom, !dbg !14162
  %62 = bitcast %struct.BezTriple* %arrayidx to i8*, !dbg !14161
  %63 = load i32, i32* %diffa, align 4, !dbg !14165
  %conv50 = sext i32 %63 to i64, !dbg !14165
  %mul = mul i64 %conv50, 72, !dbg !14166
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 4 %62, i64 %mul, i1 false), !dbg !14161
  %64 = load i32, i32* %newu, align 4, !dbg !14167
  %65 = load i32, i32* %diffa, align 4, !dbg !14169
  %cmp51 = icmp ne i32 %64, %65, !dbg !14170
  br i1 %cmp51, label %if.then53, label %if.end60, !dbg !14171

if.then53:                                        ; preds = %if.end46
  %66 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14172
  %bezt54 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %66, i32 0, i32 18, !dbg !14174
  %67 = load %struct.BezTriple*, %struct.BezTriple** %bezt54, align 8, !dbg !14174
  %68 = load i32, i32* %diffa, align 4, !dbg !14175
  %idxprom55 = sext i32 %68 to i64, !dbg !14172
  %arrayidx56 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %67, i64 %idxprom55, !dbg !14172
  %69 = bitcast %struct.BezTriple* %arrayidx56 to i8*, !dbg !14176
  %70 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14177
  %bezt57 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %70, i32 0, i32 18, !dbg !14178
  %71 = load %struct.BezTriple*, %struct.BezTriple** %bezt57, align 8, !dbg !14178
  %72 = bitcast %struct.BezTriple* %71 to i8*, !dbg !14176
  %73 = load i32, i32* %cyclicu, align 4, !dbg !14179
  %conv58 = sext i32 %73 to i64, !dbg !14179
  %mul59 = mul i64 %conv58, 72, !dbg !14180
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 4 %72, i64 %mul59, i1 false), !dbg !14176
  store i32 0, i32* %cyclicu, align 4, !dbg !14181
  br label %if.end60, !dbg !14182

if.end60:                                         ; preds = %if.then53, %if.end46
  %74 = load i32, i32* %newu, align 4, !dbg !14183
  %75 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14185
  %pntsu61 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %75, i32 0, i32 6, !dbg !14186
  %76 = load i32, i32* %pntsu61, align 8, !dbg !14186
  %cmp62 = icmp ne i32 %74, %76, !dbg !14187
  br i1 %cmp62, label %if.then64, label %if.end69, !dbg !14188

if.then64:                                        ; preds = %if.end60
  %77 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14189
  %flagu65 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %77, i32 0, i32 13, !dbg !14190
  %78 = load i16, i16* %flagu65, align 4, !dbg !14191
  %conv66 = sext i16 %78 to i32, !dbg !14191
  %and67 = and i32 %conv66, -2, !dbg !14191
  %conv68 = trunc i32 %and67 to i16, !dbg !14191
  store i16 %conv68, i16* %flagu65, align 4, !dbg !14191
  br label %if.end69, !dbg !14189

if.end69:                                         ; preds = %if.then64, %if.end60
  store i32 0, i32* %b, align 4, !dbg !14192
  %79 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14194
  %bezt70 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %79, i32 0, i32 18, !dbg !14195
  %80 = load %struct.BezTriple*, %struct.BezTriple** %bezt70, align 8, !dbg !14195
  store %struct.BezTriple* %80, %struct.BezTriple** %bezt1, align 8, !dbg !14196
  br label %for.cond71, !dbg !14197

for.cond71:                                       ; preds = %for.inc, %if.end69
  %81 = load i32, i32* %b, align 4, !dbg !14198
  %82 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14200
  %pntsu72 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %82, i32 0, i32 6, !dbg !14201
  %83 = load i32, i32* %pntsu72, align 8, !dbg !14201
  %cmp73 = icmp slt i32 %81, %83, !dbg !14202
  br i1 %cmp73, label %for.body75, label %for.end, !dbg !14203

for.body75:                                       ; preds = %for.cond71
  %84 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !14204
  %85 = load i16, i16* %flag.addr, align 2, !dbg !14206
  %call76 = call zeroext i8 @select_beztriple(%struct.BezTriple* %84, i8 zeroext 1, i16 signext %85, i32 1), !dbg !14207
  br label %for.inc, !dbg !14208

for.inc:                                          ; preds = %for.body75
  %86 = load i32, i32* %b, align 4, !dbg !14209
  %inc77 = add nsw i32 %86, 1, !dbg !14209
  store i32 %inc77, i32* %b, align 4, !dbg !14209
  %87 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !14210
  %incdec.ptr78 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %87, i32 1, !dbg !14210
  store %struct.BezTriple* %incdec.ptr78, %struct.BezTriple** %bezt1, align 8, !dbg !14210
  br label %for.cond71, !dbg !14211, !llvm.loop !14212

for.end:                                          ; preds = %for.cond71
  br label %if.end79

if.end79:                                         ; preds = %for.end, %if.then39
  br label %if.end80, !dbg !14214

if.end80:                                         ; preds = %if.end79, %while.end
  br label %for.inc81, !dbg !14215

for.inc81:                                        ; preds = %if.end80
  %88 = load i32, i32* %a, align 4, !dbg !14216
  %inc82 = add nsw i32 %88, 1, !dbg !14216
  store i32 %inc82, i32* %a, align 4, !dbg !14216
  %89 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !14217
  %incdec.ptr83 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %89, i32 1, !dbg !14217
  store %struct.BezTriple* %incdec.ptr83, %struct.BezTriple** %bezt, align 8, !dbg !14217
  br label %for.cond, !dbg !14218, !llvm.loop !14219

for.end84:                                        ; preds = %for.cond
  %90 = load i32, i32* %cyclicu, align 4, !dbg !14221
  %cmp85 = icmp ne i32 %90, 0, !dbg !14223
  br i1 %cmp85, label %if.then87, label %if.end108, !dbg !14224

if.then87:                                        ; preds = %for.end84
  %91 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14225
  %92 = load i32, i32* %cyclicu, align 4, !dbg !14227
  %call88 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %91, i32 %92, i32 1), !dbg !14228
  store %struct.Nurb* %call88, %struct.Nurb** %newnu, align 8, !dbg !14229
  %93 = load %struct.ListBase*, %struct.ListBase** %newnurb.addr, align 8, !dbg !14230
  %94 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14231
  %95 = bitcast %struct.Nurb* %94 to i8*, !dbg !14231
  call void @BLI_addtail(%struct.ListBase* %93, i8* %95), !dbg !14232
  %96 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14233
  %bezt89 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %96, i32 0, i32 18, !dbg !14234
  %97 = load %struct.BezTriple*, %struct.BezTriple** %bezt89, align 8, !dbg !14234
  %98 = bitcast %struct.BezTriple* %97 to i8*, !dbg !14235
  %99 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14236
  %bezt90 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %99, i32 0, i32 18, !dbg !14237
  %100 = load %struct.BezTriple*, %struct.BezTriple** %bezt90, align 8, !dbg !14237
  %101 = bitcast %struct.BezTriple* %100 to i8*, !dbg !14235
  %102 = load i32, i32* %cyclicu, align 4, !dbg !14238
  %conv91 = sext i32 %102 to i64, !dbg !14238
  %mul92 = mul i64 %conv91, 72, !dbg !14239
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %98, i8* align 4 %101, i64 %mul92, i1 false), !dbg !14235
  %103 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14240
  %flagu93 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %103, i32 0, i32 13, !dbg !14241
  %104 = load i16, i16* %flagu93, align 4, !dbg !14242
  %conv94 = sext i16 %104 to i32, !dbg !14242
  %and95 = and i32 %conv94, -2, !dbg !14242
  %conv96 = trunc i32 %and95 to i16, !dbg !14242
  store i16 %conv96, i16* %flagu93, align 4, !dbg !14242
  store i32 0, i32* %b, align 4, !dbg !14243
  %105 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14245
  %bezt97 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %105, i32 0, i32 18, !dbg !14246
  %106 = load %struct.BezTriple*, %struct.BezTriple** %bezt97, align 8, !dbg !14246
  store %struct.BezTriple* %106, %struct.BezTriple** %bezt1, align 8, !dbg !14247
  br label %for.cond98, !dbg !14248

for.cond98:                                       ; preds = %for.inc104, %if.then87
  %107 = load i32, i32* %b, align 4, !dbg !14249
  %108 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14251
  %pntsu99 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %108, i32 0, i32 6, !dbg !14252
  %109 = load i32, i32* %pntsu99, align 8, !dbg !14252
  %cmp100 = icmp slt i32 %107, %109, !dbg !14253
  br i1 %cmp100, label %for.body102, label %for.end107, !dbg !14254

for.body102:                                      ; preds = %for.cond98
  %110 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !14255
  %111 = load i16, i16* %flag.addr, align 2, !dbg !14257
  %call103 = call zeroext i8 @select_beztriple(%struct.BezTriple* %110, i8 zeroext 1, i16 signext %111, i32 1), !dbg !14258
  br label %for.inc104, !dbg !14259

for.inc104:                                       ; preds = %for.body102
  %112 = load i32, i32* %b, align 4, !dbg !14260
  %inc105 = add nsw i32 %112, 1, !dbg !14260
  store i32 %inc105, i32* %b, align 4, !dbg !14260
  %113 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !14261
  %incdec.ptr106 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %113, i32 1, !dbg !14261
  store %struct.BezTriple* %incdec.ptr106, %struct.BezTriple** %bezt1, align 8, !dbg !14261
  br label %for.cond98, !dbg !14262, !llvm.loop !14263

for.end107:                                       ; preds = %for.cond98
  br label %if.end108, !dbg !14265

if.end108:                                        ; preds = %for.end107, %for.end84
  br label %if.end608, !dbg !14266

if.else109:                                       ; preds = %while.body
  %114 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14267
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %114, i32 0, i32 7, !dbg !14269
  %115 = load i32, i32* %pntsv, align 4, !dbg !14269
  %cmp110 = icmp eq i32 %115, 1, !dbg !14270
  br i1 %cmp110, label %if.then112, label %if.else231, !dbg !14271

if.then112:                                       ; preds = %if.else109
  store i32 0, i32* %a, align 4, !dbg !14272
  %116 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14275
  %bp113 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %116, i32 0, i32 17, !dbg !14276
  %117 = load %struct.BPoint*, %struct.BPoint** %bp113, align 8, !dbg !14276
  store %struct.BPoint* %117, %struct.BPoint** %bp, align 8, !dbg !14277
  br label %for.cond114, !dbg !14278

for.cond114:                                      ; preds = %for.inc203, %if.then112
  %118 = load i32, i32* %a, align 4, !dbg !14279
  %119 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14281
  %pntsu115 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %119, i32 0, i32 6, !dbg !14282
  %120 = load i32, i32* %pntsu115, align 8, !dbg !14282
  %cmp116 = icmp slt i32 %118, %120, !dbg !14283
  br i1 %cmp116, label %for.body118, label %for.end206, !dbg !14284

for.body118:                                      ; preds = %for.cond114
  store i32 -1, i32* %enda, align 4, !dbg !14285
  %121 = load i32, i32* %a, align 4, !dbg !14287
  store i32 %121, i32* %starta, align 4, !dbg !14288
  br label %while.cond119, !dbg !14289

while.cond119:                                    ; preds = %if.end135, %for.body118
  %122 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !14290
  %f1120 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %122, i32 0, i32 3, !dbg !14291
  %123 = load i16, i16* %f1120, align 4, !dbg !14291
  %conv121 = sext i16 %123 to i32, !dbg !14290
  %124 = load i16, i16* %flag.addr, align 2, !dbg !14292
  %conv122 = sext i16 %124 to i32, !dbg !14292
  %and123 = and i32 %conv121, %conv122, !dbg !14293
  %tobool124 = icmp ne i32 %and123, 0, !dbg !14289
  br i1 %tobool124, label %while.body125, label %while.end138, !dbg !14289

while.body125:                                    ; preds = %while.cond119
  %125 = load i8, i8* %split.addr, align 1, !dbg !14294
  %tobool126 = icmp ne i8 %125, 0, !dbg !14294
  br i1 %tobool126, label %if.end129, label %if.then127, !dbg !14297

if.then127:                                       ; preds = %while.body125
  %126 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !14298
  %127 = load i16, i16* %flag.addr, align 2, !dbg !14299
  %call128 = call zeroext i8 @select_bpoint(%struct.BPoint* %126, i8 zeroext 0, i16 signext %127, i8 zeroext 1), !dbg !14300
  br label %if.end129, !dbg !14300

if.end129:                                        ; preds = %if.then127, %while.body125
  %128 = load i32, i32* %a, align 4, !dbg !14301
  store i32 %128, i32* %enda, align 4, !dbg !14302
  %129 = load i32, i32* %a, align 4, !dbg !14303
  %130 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14305
  %pntsu130 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %130, i32 0, i32 6, !dbg !14306
  %131 = load i32, i32* %pntsu130, align 8, !dbg !14306
  %sub131 = sub nsw i32 %131, 1, !dbg !14307
  %cmp132 = icmp sge i32 %129, %sub131, !dbg !14308
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !14309

if.then134:                                       ; preds = %if.end129
  br label %while.end138, !dbg !14310

if.end135:                                        ; preds = %if.end129
  %132 = load i32, i32* %a, align 4, !dbg !14311
  %inc136 = add nsw i32 %132, 1, !dbg !14311
  store i32 %inc136, i32* %a, align 4, !dbg !14311
  %133 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !14312
  %incdec.ptr137 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %133, i32 1, !dbg !14312
  store %struct.BPoint* %incdec.ptr137, %struct.BPoint** %bp, align 8, !dbg !14312
  br label %while.cond119, !dbg !14289, !llvm.loop !14313

while.end138:                                     ; preds = %if.then134, %while.cond119
  %134 = load i32, i32* %enda, align 4, !dbg !14315
  %135 = load i32, i32* %starta, align 4, !dbg !14317
  %cmp139 = icmp sge i32 %134, %135, !dbg !14318
  br i1 %cmp139, label %if.then141, label %if.end202, !dbg !14319

if.then141:                                       ; preds = %while.end138
  %136 = load i32, i32* %enda, align 4, !dbg !14320
  %137 = load i32, i32* %starta, align 4, !dbg !14322
  %sub142 = sub nsw i32 %136, %137, !dbg !14323
  %add143 = add nsw i32 %sub142, 1, !dbg !14324
  store i32 %add143, i32* %diffa, align 4, !dbg !14325
  store i32 %add143, i32* %newu, align 4, !dbg !14326
  %138 = load i32, i32* %starta, align 4, !dbg !14327
  %cmp144 = icmp eq i32 %138, 0, !dbg !14329
  br i1 %cmp144, label %land.lhs.true146, label %if.else156, !dbg !14330

land.lhs.true146:                                 ; preds = %if.then141
  %139 = load i32, i32* %newu, align 4, !dbg !14331
  %140 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14332
  %pntsu147 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %140, i32 0, i32 6, !dbg !14333
  %141 = load i32, i32* %pntsu147, align 8, !dbg !14333
  %cmp148 = icmp ne i32 %139, %141, !dbg !14334
  br i1 %cmp148, label %land.lhs.true150, label %if.else156, !dbg !14335

land.lhs.true150:                                 ; preds = %land.lhs.true146
  %142 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14336
  %flagu151 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %142, i32 0, i32 13, !dbg !14337
  %143 = load i16, i16* %flagu151, align 4, !dbg !14337
  %conv152 = sext i16 %143 to i32, !dbg !14336
  %and153 = and i32 %conv152, 1, !dbg !14338
  %tobool154 = icmp ne i32 %and153, 0, !dbg !14338
  br i1 %tobool154, label %if.then155, label %if.else156, !dbg !14339

if.then155:                                       ; preds = %land.lhs.true150
  %144 = load i32, i32* %newu, align 4, !dbg !14340
  store i32 %144, i32* %cyclicu, align 4, !dbg !14342
  br label %if.end201, !dbg !14343

if.else156:                                       ; preds = %land.lhs.true150, %land.lhs.true146, %if.then141
  %145 = load i32, i32* %enda, align 4, !dbg !14344
  %146 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14347
  %pntsu157 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %146, i32 0, i32 6, !dbg !14348
  %147 = load i32, i32* %pntsu157, align 8, !dbg !14348
  %sub158 = sub nsw i32 %147, 1, !dbg !14349
  %cmp159 = icmp eq i32 %145, %sub158, !dbg !14350
  br i1 %cmp159, label %if.then161, label %if.end163, !dbg !14351

if.then161:                                       ; preds = %if.else156
  %148 = load i32, i32* %cyclicu, align 4, !dbg !14352
  %149 = load i32, i32* %newu, align 4, !dbg !14353
  %add162 = add nsw i32 %149, %148, !dbg !14353
  store i32 %add162, i32* %newu, align 4, !dbg !14353
  br label %if.end163, !dbg !14354

if.end163:                                        ; preds = %if.then161, %if.else156
  %150 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14355
  %151 = load i32, i32* %newu, align 4, !dbg !14356
  %call164 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %150, i32 %151, i32 1), !dbg !14357
  store %struct.Nurb* %call164, %struct.Nurb** %newnu, align 8, !dbg !14358
  %152 = load %struct.ListBase*, %struct.ListBase** %newnurb.addr, align 8, !dbg !14359
  %153 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14360
  %154 = bitcast %struct.Nurb* %153 to i8*, !dbg !14360
  call void @BLI_addtail(%struct.ListBase* %152, i8* %154), !dbg !14361
  %155 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14362
  %bp165 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %155, i32 0, i32 17, !dbg !14363
  %156 = load %struct.BPoint*, %struct.BPoint** %bp165, align 8, !dbg !14363
  %157 = bitcast %struct.BPoint* %156 to i8*, !dbg !14364
  %158 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14365
  %bp166 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %158, i32 0, i32 17, !dbg !14366
  %159 = load %struct.BPoint*, %struct.BPoint** %bp166, align 8, !dbg !14366
  %160 = load i32, i32* %starta, align 4, !dbg !14367
  %idxprom167 = sext i32 %160 to i64, !dbg !14365
  %arrayidx168 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %159, i64 %idxprom167, !dbg !14365
  %161 = bitcast %struct.BPoint* %arrayidx168 to i8*, !dbg !14364
  %162 = load i32, i32* %diffa, align 4, !dbg !14368
  %conv169 = sext i32 %162 to i64, !dbg !14368
  %mul170 = mul i64 %conv169, 36, !dbg !14369
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %157, i8* align 4 %161, i64 %mul170, i1 false), !dbg !14364
  %163 = load i32, i32* %newu, align 4, !dbg !14370
  %164 = load i32, i32* %diffa, align 4, !dbg !14372
  %cmp171 = icmp ne i32 %163, %164, !dbg !14373
  br i1 %cmp171, label %if.then173, label %if.end180, !dbg !14374

if.then173:                                       ; preds = %if.end163
  %165 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14375
  %bp174 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %165, i32 0, i32 17, !dbg !14377
  %166 = load %struct.BPoint*, %struct.BPoint** %bp174, align 8, !dbg !14377
  %167 = load i32, i32* %diffa, align 4, !dbg !14378
  %idxprom175 = sext i32 %167 to i64, !dbg !14375
  %arrayidx176 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %166, i64 %idxprom175, !dbg !14375
  %168 = bitcast %struct.BPoint* %arrayidx176 to i8*, !dbg !14379
  %169 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14380
  %bp177 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %169, i32 0, i32 17, !dbg !14381
  %170 = load %struct.BPoint*, %struct.BPoint** %bp177, align 8, !dbg !14381
  %171 = bitcast %struct.BPoint* %170 to i8*, !dbg !14379
  %172 = load i32, i32* %cyclicu, align 4, !dbg !14382
  %conv178 = sext i32 %172 to i64, !dbg !14382
  %mul179 = mul i64 %conv178, 36, !dbg !14383
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %168, i8* align 4 %171, i64 %mul179, i1 false), !dbg !14379
  store i32 0, i32* %cyclicu, align 4, !dbg !14384
  br label %if.end180, !dbg !14385

if.end180:                                        ; preds = %if.then173, %if.end163
  %173 = load i32, i32* %newu, align 4, !dbg !14386
  %174 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14388
  %pntsu181 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %174, i32 0, i32 6, !dbg !14389
  %175 = load i32, i32* %pntsu181, align 8, !dbg !14389
  %cmp182 = icmp ne i32 %173, %175, !dbg !14390
  br i1 %cmp182, label %if.then184, label %if.end189, !dbg !14391

if.then184:                                       ; preds = %if.end180
  %176 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14392
  %flagu185 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %176, i32 0, i32 13, !dbg !14393
  %177 = load i16, i16* %flagu185, align 4, !dbg !14394
  %conv186 = sext i16 %177 to i32, !dbg !14394
  %and187 = and i32 %conv186, -2, !dbg !14394
  %conv188 = trunc i32 %and187 to i16, !dbg !14394
  store i16 %conv188, i16* %flagu185, align 4, !dbg !14394
  br label %if.end189, !dbg !14392

if.end189:                                        ; preds = %if.then184, %if.end180
  store i32 0, i32* %b, align 4, !dbg !14395
  %178 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14397
  %bp190 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %178, i32 0, i32 17, !dbg !14398
  %179 = load %struct.BPoint*, %struct.BPoint** %bp190, align 8, !dbg !14398
  store %struct.BPoint* %179, %struct.BPoint** %bp1, align 8, !dbg !14399
  br label %for.cond191, !dbg !14400

for.cond191:                                      ; preds = %for.inc197, %if.end189
  %180 = load i32, i32* %b, align 4, !dbg !14401
  %181 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14403
  %pntsu192 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %181, i32 0, i32 6, !dbg !14404
  %182 = load i32, i32* %pntsu192, align 8, !dbg !14404
  %cmp193 = icmp slt i32 %180, %182, !dbg !14405
  br i1 %cmp193, label %for.body195, label %for.end200, !dbg !14406

for.body195:                                      ; preds = %for.cond191
  %183 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !14407
  %184 = load i16, i16* %flag.addr, align 2, !dbg !14409
  %call196 = call zeroext i8 @select_bpoint(%struct.BPoint* %183, i8 zeroext 1, i16 signext %184, i8 zeroext 1), !dbg !14410
  br label %for.inc197, !dbg !14411

for.inc197:                                       ; preds = %for.body195
  %185 = load i32, i32* %b, align 4, !dbg !14412
  %inc198 = add nsw i32 %185, 1, !dbg !14412
  store i32 %inc198, i32* %b, align 4, !dbg !14412
  %186 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !14413
  %incdec.ptr199 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %186, i32 1, !dbg !14413
  store %struct.BPoint* %incdec.ptr199, %struct.BPoint** %bp1, align 8, !dbg !14413
  br label %for.cond191, !dbg !14414, !llvm.loop !14415

for.end200:                                       ; preds = %for.cond191
  br label %if.end201

if.end201:                                        ; preds = %for.end200, %if.then155
  br label %if.end202, !dbg !14417

if.end202:                                        ; preds = %if.end201, %while.end138
  br label %for.inc203, !dbg !14418

for.inc203:                                       ; preds = %if.end202
  %187 = load i32, i32* %a, align 4, !dbg !14419
  %inc204 = add nsw i32 %187, 1, !dbg !14419
  store i32 %inc204, i32* %a, align 4, !dbg !14419
  %188 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !14420
  %incdec.ptr205 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %188, i32 1, !dbg !14420
  store %struct.BPoint* %incdec.ptr205, %struct.BPoint** %bp, align 8, !dbg !14420
  br label %for.cond114, !dbg !14421, !llvm.loop !14422

for.end206:                                       ; preds = %for.cond114
  %189 = load i32, i32* %cyclicu, align 4, !dbg !14424
  %cmp207 = icmp ne i32 %189, 0, !dbg !14426
  br i1 %cmp207, label %if.then209, label %if.end230, !dbg !14427

if.then209:                                       ; preds = %for.end206
  %190 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14428
  %191 = load i32, i32* %cyclicu, align 4, !dbg !14430
  %call210 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %190, i32 %191, i32 1), !dbg !14431
  store %struct.Nurb* %call210, %struct.Nurb** %newnu, align 8, !dbg !14432
  %192 = load %struct.ListBase*, %struct.ListBase** %newnurb.addr, align 8, !dbg !14433
  %193 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14434
  %194 = bitcast %struct.Nurb* %193 to i8*, !dbg !14434
  call void @BLI_addtail(%struct.ListBase* %192, i8* %194), !dbg !14435
  %195 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14436
  %bp211 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %195, i32 0, i32 17, !dbg !14437
  %196 = load %struct.BPoint*, %struct.BPoint** %bp211, align 8, !dbg !14437
  %197 = bitcast %struct.BPoint* %196 to i8*, !dbg !14438
  %198 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14439
  %bp212 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %198, i32 0, i32 17, !dbg !14440
  %199 = load %struct.BPoint*, %struct.BPoint** %bp212, align 8, !dbg !14440
  %200 = bitcast %struct.BPoint* %199 to i8*, !dbg !14438
  %201 = load i32, i32* %cyclicu, align 4, !dbg !14441
  %conv213 = sext i32 %201 to i64, !dbg !14441
  %mul214 = mul i64 %conv213, 36, !dbg !14442
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %197, i8* align 4 %200, i64 %mul214, i1 false), !dbg !14438
  %202 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14443
  %flagu215 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %202, i32 0, i32 13, !dbg !14444
  %203 = load i16, i16* %flagu215, align 4, !dbg !14445
  %conv216 = sext i16 %203 to i32, !dbg !14445
  %and217 = and i32 %conv216, -2, !dbg !14445
  %conv218 = trunc i32 %and217 to i16, !dbg !14445
  store i16 %conv218, i16* %flagu215, align 4, !dbg !14445
  store i32 0, i32* %b, align 4, !dbg !14446
  %204 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14448
  %bp219 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %204, i32 0, i32 17, !dbg !14449
  %205 = load %struct.BPoint*, %struct.BPoint** %bp219, align 8, !dbg !14449
  store %struct.BPoint* %205, %struct.BPoint** %bp1, align 8, !dbg !14450
  br label %for.cond220, !dbg !14451

for.cond220:                                      ; preds = %for.inc226, %if.then209
  %206 = load i32, i32* %b, align 4, !dbg !14452
  %207 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14454
  %pntsu221 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %207, i32 0, i32 6, !dbg !14455
  %208 = load i32, i32* %pntsu221, align 8, !dbg !14455
  %cmp222 = icmp slt i32 %206, %208, !dbg !14456
  br i1 %cmp222, label %for.body224, label %for.end229, !dbg !14457

for.body224:                                      ; preds = %for.cond220
  %209 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !14458
  %210 = load i16, i16* %flag.addr, align 2, !dbg !14460
  %call225 = call zeroext i8 @select_bpoint(%struct.BPoint* %209, i8 zeroext 1, i16 signext %210, i8 zeroext 1), !dbg !14461
  br label %for.inc226, !dbg !14462

for.inc226:                                       ; preds = %for.body224
  %211 = load i32, i32* %b, align 4, !dbg !14463
  %inc227 = add nsw i32 %211, 1, !dbg !14463
  store i32 %inc227, i32* %b, align 4, !dbg !14463
  %212 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !14464
  %incdec.ptr228 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %212, i32 1, !dbg !14464
  store %struct.BPoint* %incdec.ptr228, %struct.BPoint** %bp1, align 8, !dbg !14464
  br label %for.cond220, !dbg !14465, !llvm.loop !14466

for.end229:                                       ; preds = %for.cond220
  br label %if.end230, !dbg !14468

if.end230:                                        ; preds = %for.end229, %for.end206
  br label %if.end607, !dbg !14469

if.else231:                                       ; preds = %if.else109
  %213 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14470
  %call232 = call i32 @isNurbsel(%struct.Nurb* %213), !dbg !14473
  %tobool233 = icmp ne i32 %call232, 0, !dbg !14473
  br i1 %tobool233, label %if.then234, label %if.end606, !dbg !14474

if.then234:                                       ; preds = %if.else231
  %214 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14475
  %215 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14477
  %pntsu235 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %215, i32 0, i32 6, !dbg !14478
  %216 = load i32, i32* %pntsu235, align 8, !dbg !14478
  %conv236 = sext i32 %216 to i64, !dbg !14477
  %call237 = call i8* %214(i64 %conv236, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.195, i64 0, i64 0)), !dbg !14475
  store i8* %call237, i8** %usel, align 8, !dbg !14479
  %217 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14480
  %bp238 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %217, i32 0, i32 17, !dbg !14481
  %218 = load %struct.BPoint*, %struct.BPoint** %bp238, align 8, !dbg !14481
  store %struct.BPoint* %218, %struct.BPoint** %bp, align 8, !dbg !14482
  store i32 0, i32* %a, align 4, !dbg !14483
  br label %for.cond239, !dbg !14485

for.cond239:                                      ; preds = %for.inc263, %if.then234
  %219 = load i32, i32* %a, align 4, !dbg !14486
  %220 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14488
  %pntsv240 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %220, i32 0, i32 7, !dbg !14489
  %221 = load i32, i32* %pntsv240, align 4, !dbg !14489
  %cmp241 = icmp slt i32 %219, %221, !dbg !14490
  br i1 %cmp241, label %for.body243, label %for.end265, !dbg !14491

for.body243:                                      ; preds = %for.cond239
  store i32 0, i32* %b, align 4, !dbg !14492
  br label %for.cond244, !dbg !14495

for.cond244:                                      ; preds = %for.inc259, %for.body243
  %222 = load i32, i32* %b, align 4, !dbg !14496
  %223 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14498
  %pntsu245 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %223, i32 0, i32 6, !dbg !14499
  %224 = load i32, i32* %pntsu245, align 8, !dbg !14499
  %cmp246 = icmp slt i32 %222, %224, !dbg !14500
  br i1 %cmp246, label %for.body248, label %for.end262, !dbg !14501

for.body248:                                      ; preds = %for.cond244
  %225 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !14502
  %f1249 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %225, i32 0, i32 3, !dbg !14505
  %226 = load i16, i16* %f1249, align 4, !dbg !14505
  %conv250 = sext i16 %226 to i32, !dbg !14502
  %227 = load i16, i16* %flag.addr, align 2, !dbg !14506
  %conv251 = sext i16 %227 to i32, !dbg !14506
  %and252 = and i32 %conv250, %conv251, !dbg !14507
  %tobool253 = icmp ne i32 %and252, 0, !dbg !14507
  br i1 %tobool253, label %if.then254, label %if.end258, !dbg !14508

if.then254:                                       ; preds = %for.body248
  %228 = load i8*, i8** %usel, align 8, !dbg !14509
  %229 = load i32, i32* %b, align 4, !dbg !14510
  %idxprom255 = sext i32 %229 to i64, !dbg !14509
  %arrayidx256 = getelementptr inbounds i8, i8* %228, i64 %idxprom255, !dbg !14509
  %230 = load i8, i8* %arrayidx256, align 1, !dbg !14511
  %inc257 = add i8 %230, 1, !dbg !14511
  store i8 %inc257, i8* %arrayidx256, align 1, !dbg !14511
  br label %if.end258, !dbg !14509

if.end258:                                        ; preds = %if.then254, %for.body248
  br label %for.inc259, !dbg !14512

for.inc259:                                       ; preds = %if.end258
  %231 = load i32, i32* %b, align 4, !dbg !14513
  %inc260 = add nsw i32 %231, 1, !dbg !14513
  store i32 %inc260, i32* %b, align 4, !dbg !14513
  %232 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !14514
  %incdec.ptr261 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %232, i32 1, !dbg !14514
  store %struct.BPoint* %incdec.ptr261, %struct.BPoint** %bp, align 8, !dbg !14514
  br label %for.cond244, !dbg !14515, !llvm.loop !14516

for.end262:                                       ; preds = %for.cond244
  br label %for.inc263, !dbg !14518

for.inc263:                                       ; preds = %for.end262
  %233 = load i32, i32* %a, align 4, !dbg !14519
  %inc264 = add nsw i32 %233, 1, !dbg !14519
  store i32 %inc264, i32* %a, align 4, !dbg !14519
  br label %for.cond239, !dbg !14520, !llvm.loop !14521

for.end265:                                       ; preds = %for.cond239
  store i32 0, i32* %newu, align 4, !dbg !14523
  store i32 0, i32* %newv, align 4, !dbg !14524
  store i32 0, i32* %a, align 4, !dbg !14525
  br label %for.cond266, !dbg !14527

for.cond266:                                      ; preds = %for.inc291, %for.end265
  %234 = load i32, i32* %a, align 4, !dbg !14528
  %235 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14530
  %pntsu267 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %235, i32 0, i32 6, !dbg !14531
  %236 = load i32, i32* %pntsu267, align 8, !dbg !14531
  %cmp268 = icmp slt i32 %234, %236, !dbg !14532
  br i1 %cmp268, label %for.body270, label %for.end293, !dbg !14533

for.body270:                                      ; preds = %for.cond266
  %237 = load i8*, i8** %usel, align 8, !dbg !14534
  %238 = load i32, i32* %a, align 4, !dbg !14537
  %idxprom271 = sext i32 %238 to i64, !dbg !14534
  %arrayidx272 = getelementptr inbounds i8, i8* %237, i64 %idxprom271, !dbg !14534
  %239 = load i8, i8* %arrayidx272, align 1, !dbg !14534
  %tobool273 = icmp ne i8 %239, 0, !dbg !14534
  br i1 %tobool273, label %if.then274, label %if.end290, !dbg !14538

if.then274:                                       ; preds = %for.body270
  %240 = load i32, i32* %newv, align 4, !dbg !14539
  %cmp275 = icmp eq i32 %240, 0, !dbg !14542
  br i1 %cmp275, label %if.then283, label %lor.lhs.false277, !dbg !14543

lor.lhs.false277:                                 ; preds = %if.then274
  %241 = load i8*, i8** %usel, align 8, !dbg !14544
  %242 = load i32, i32* %a, align 4, !dbg !14545
  %idxprom278 = sext i32 %242 to i64, !dbg !14544
  %arrayidx279 = getelementptr inbounds i8, i8* %241, i64 %idxprom278, !dbg !14544
  %243 = load i8, i8* %arrayidx279, align 1, !dbg !14544
  %conv280 = zext i8 %243 to i32, !dbg !14544
  %244 = load i32, i32* %newv, align 4, !dbg !14546
  %cmp281 = icmp eq i32 %conv280, %244, !dbg !14547
  br i1 %cmp281, label %if.then283, label %if.else288, !dbg !14548

if.then283:                                       ; preds = %lor.lhs.false277, %if.then274
  %245 = load i8*, i8** %usel, align 8, !dbg !14549
  %246 = load i32, i32* %a, align 4, !dbg !14551
  %idxprom284 = sext i32 %246 to i64, !dbg !14549
  %arrayidx285 = getelementptr inbounds i8, i8* %245, i64 %idxprom284, !dbg !14549
  %247 = load i8, i8* %arrayidx285, align 1, !dbg !14549
  %conv286 = zext i8 %247 to i32, !dbg !14549
  store i32 %conv286, i32* %newv, align 4, !dbg !14552
  %248 = load i32, i32* %newu, align 4, !dbg !14553
  %inc287 = add nsw i32 %248, 1, !dbg !14553
  store i32 %inc287, i32* %newu, align 4, !dbg !14553
  br label %if.end289, !dbg !14554

if.else288:                                       ; preds = %lor.lhs.false277
  store i32 0, i32* %newv, align 4, !dbg !14555
  br label %for.end293, !dbg !14557

if.end289:                                        ; preds = %if.then283
  br label %if.end290, !dbg !14558

if.end290:                                        ; preds = %if.end289, %for.body270
  br label %for.inc291, !dbg !14559

for.inc291:                                       ; preds = %if.end290
  %249 = load i32, i32* %a, align 4, !dbg !14560
  %inc292 = add nsw i32 %249, 1, !dbg !14560
  store i32 %inc292, i32* %a, align 4, !dbg !14560
  br label %for.cond266, !dbg !14561, !llvm.loop !14562

for.end293:                                       ; preds = %if.else288, %for.cond266
  %250 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14564
  %251 = load i8*, i8** %usel, align 8, !dbg !14565
  call void %250(i8* %251), !dbg !14564
  %252 = load i32, i32* %newu, align 4, !dbg !14566
  %cmp294 = icmp eq i32 %252, 0, !dbg !14568
  br i1 %cmp294, label %if.then308, label %lor.lhs.false296, !dbg !14569

lor.lhs.false296:                                 ; preds = %for.end293
  %253 = load i32, i32* %newv, align 4, !dbg !14570
  %cmp297 = icmp eq i32 %253, 0, !dbg !14571
  br i1 %cmp297, label %if.then308, label %lor.lhs.false299, !dbg !14572

lor.lhs.false299:                                 ; preds = %lor.lhs.false296
  %254 = load i8, i8* %split.addr, align 1, !dbg !14573
  %conv300 = zext i8 %254 to i32, !dbg !14573
  %tobool301 = icmp ne i32 %conv300, 0, !dbg !14573
  br i1 %tobool301, label %land.lhs.true302, label %if.else314, !dbg !14574

land.lhs.true302:                                 ; preds = %lor.lhs.false299
  %255 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14575
  %call303 = call zeroext i8 @isNurbselU(%struct.Nurb* %255, i32* %newv, i32 1), !dbg !14576
  %tobool304 = icmp ne i8 %call303, 0, !dbg !14576
  br i1 %tobool304, label %if.else314, label %land.lhs.true305, !dbg !14577

land.lhs.true305:                                 ; preds = %land.lhs.true302
  %256 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14578
  %call306 = call zeroext i8 @isNurbselV(%struct.Nurb* %256, i32* %newu, i32 1), !dbg !14579
  %tobool307 = icmp ne i8 %call306, 0, !dbg !14579
  br i1 %tobool307, label %if.else314, label %if.then308, !dbg !14580

if.then308:                                       ; preds = %land.lhs.true305, %lor.lhs.false296, %for.end293
  %257 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !14581
  %and309 = and i32 %257, 1, !dbg !14584
  %tobool310 = icmp ne i32 %and309, 0, !dbg !14584
  br i1 %tobool310, label %if.then311, label %if.end313, !dbg !14585

if.then311:                                       ; preds = %if.then308
  %call312 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.196, i64 0, i64 0)), !dbg !14586
  br label %if.end313, !dbg !14586

if.end313:                                        ; preds = %if.then311, %if.then308
  br label %if.end605, !dbg !14587

if.else314:                                       ; preds = %land.lhs.true305, %land.lhs.true302, %lor.lhs.false299
  store i32 0, i32* %a, align 4, !dbg !14588
  %258 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14591
  %bp315 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %258, i32 0, i32 17, !dbg !14592
  %259 = load %struct.BPoint*, %struct.BPoint** %bp315, align 8, !dbg !14592
  store %struct.BPoint* %259, %struct.BPoint** %bp1, align 8, !dbg !14593
  br label %for.cond316, !dbg !14594

for.cond316:                                      ; preds = %for.inc527, %if.else314
  %260 = load i32, i32* %a, align 4, !dbg !14595
  %261 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14597
  %pntsu317 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %261, i32 0, i32 6, !dbg !14598
  %262 = load i32, i32* %pntsu317, align 8, !dbg !14598
  %263 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14599
  %pntsv318 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %263, i32 0, i32 7, !dbg !14600
  %264 = load i32, i32* %pntsv318, align 4, !dbg !14600
  %mul319 = mul nsw i32 %262, %264, !dbg !14601
  %cmp320 = icmp slt i32 %260, %mul319, !dbg !14602
  br i1 %cmp320, label %for.body322, label %for.end530, !dbg !14603

for.body322:                                      ; preds = %for.cond316
  store i32 0, i32* %newu, align 4, !dbg !14604
  store i32 0, i32* %newv, align 4, !dbg !14606
  %265 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !14607
  %f1323 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %265, i32 0, i32 3, !dbg !14609
  %266 = load i16, i16* %f1323, align 4, !dbg !14609
  %conv324 = sext i16 %266 to i32, !dbg !14607
  %267 = load i16, i16* %flag.addr, align 2, !dbg !14610
  %conv325 = sext i16 %267 to i32, !dbg !14610
  %and326 = and i32 %conv324, %conv325, !dbg !14611
  %tobool327 = icmp ne i32 %and326, 0, !dbg !14611
  br i1 %tobool327, label %land.lhs.true328, label %if.end379, !dbg !14612

land.lhs.true328:                                 ; preds = %for.body322
  %268 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !14613
  %f1329 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %268, i32 0, i32 3, !dbg !14614
  %269 = load i16, i16* %f1329, align 4, !dbg !14614
  %conv330 = sext i16 %269 to i32, !dbg !14613
  %and331 = and i32 %conv330, 4, !dbg !14615
  %tobool332 = icmp ne i32 %and331, 0, !dbg !14615
  br i1 %tobool332, label %if.end379, label %if.then333, !dbg !14616

if.then333:                                       ; preds = %land.lhs.true328
  %270 = load i32, i32* %a, align 4, !dbg !14617
  %271 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14620
  %pntsu334 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %271, i32 0, i32 6, !dbg !14621
  %272 = load i32, i32* %pntsu334, align 8, !dbg !14621
  %rem = srem i32 %270, %272, !dbg !14622
  store i32 %rem, i32* %b, align 4, !dbg !14623
  %273 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !14624
  store %struct.BPoint* %273, %struct.BPoint** %bp2, align 8, !dbg !14625
  br label %for.cond335, !dbg !14626

for.cond335:                                      ; preds = %for.inc375, %if.then333
  %274 = load i32, i32* %b, align 4, !dbg !14627
  %275 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14629
  %pntsu336 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %275, i32 0, i32 6, !dbg !14630
  %276 = load i32, i32* %pntsu336, align 8, !dbg !14630
  %cmp337 = icmp slt i32 %274, %276, !dbg !14631
  br i1 %cmp337, label %for.body339, label %for.end378, !dbg !14632

for.body339:                                      ; preds = %for.cond335
  %277 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !14633
  %f1340 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %277, i32 0, i32 3, !dbg !14636
  %278 = load i16, i16* %f1340, align 4, !dbg !14636
  %conv341 = sext i16 %278 to i32, !dbg !14633
  %279 = load i16, i16* %flag.addr, align 2, !dbg !14637
  %conv342 = sext i16 %279 to i32, !dbg !14637
  %and343 = and i32 %conv341, %conv342, !dbg !14638
  %tobool344 = icmp ne i32 %and343, 0, !dbg !14638
  br i1 %tobool344, label %if.then345, label %if.else373, !dbg !14639

if.then345:                                       ; preds = %for.body339
  %280 = load i32, i32* %newu, align 4, !dbg !14640
  %inc346 = add nsw i32 %280, 1, !dbg !14640
  store i32 %inc346, i32* %newu, align 4, !dbg !14640
  %281 = load i32, i32* %a, align 4, !dbg !14642
  %282 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14644
  %pntsu347 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %282, i32 0, i32 6, !dbg !14645
  %283 = load i32, i32* %pntsu347, align 8, !dbg !14645
  %div = sdiv i32 %281, %283, !dbg !14646
  store i32 %div, i32* %c, align 4, !dbg !14647
  %284 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !14648
  store %struct.BPoint* %284, %struct.BPoint** %bp3, align 8, !dbg !14649
  br label %for.cond348, !dbg !14650

for.cond348:                                      ; preds = %for.inc369, %if.then345
  %285 = load i32, i32* %c, align 4, !dbg !14651
  %286 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14653
  %pntsv349 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %286, i32 0, i32 7, !dbg !14654
  %287 = load i32, i32* %pntsv349, align 4, !dbg !14654
  %cmp350 = icmp slt i32 %285, %287, !dbg !14655
  br i1 %cmp350, label %for.body352, label %for.end372, !dbg !14656

for.body352:                                      ; preds = %for.cond348
  %288 = load %struct.BPoint*, %struct.BPoint** %bp3, align 8, !dbg !14657
  %f1353 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %288, i32 0, i32 3, !dbg !14660
  %289 = load i16, i16* %f1353, align 4, !dbg !14660
  %conv354 = sext i16 %289 to i32, !dbg !14657
  %290 = load i16, i16* %flag.addr, align 2, !dbg !14661
  %conv355 = sext i16 %290 to i32, !dbg !14661
  %and356 = and i32 %conv354, %conv355, !dbg !14662
  %tobool357 = icmp ne i32 %and356, 0, !dbg !14662
  br i1 %tobool357, label %if.then358, label %if.else367, !dbg !14663

if.then358:                                       ; preds = %for.body352
  %291 = load %struct.BPoint*, %struct.BPoint** %bp3, align 8, !dbg !14664
  %f1359 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %291, i32 0, i32 3, !dbg !14666
  %292 = load i16, i16* %f1359, align 4, !dbg !14667
  %conv360 = sext i16 %292 to i32, !dbg !14667
  %or = or i32 %conv360, 4, !dbg !14667
  %conv361 = trunc i32 %or to i16, !dbg !14667
  store i16 %conv361, i16* %f1359, align 4, !dbg !14667
  %293 = load i32, i32* %newu, align 4, !dbg !14668
  %cmp362 = icmp eq i32 %293, 1, !dbg !14670
  br i1 %cmp362, label %if.then364, label %if.end366, !dbg !14671

if.then364:                                       ; preds = %if.then358
  %294 = load i32, i32* %newv, align 4, !dbg !14672
  %inc365 = add nsw i32 %294, 1, !dbg !14672
  store i32 %inc365, i32* %newv, align 4, !dbg !14672
  br label %if.end366, !dbg !14673

if.end366:                                        ; preds = %if.then364, %if.then358
  br label %if.end368, !dbg !14674

if.else367:                                       ; preds = %for.body352
  br label %for.end372, !dbg !14675

if.end368:                                        ; preds = %if.end366
  br label %for.inc369, !dbg !14677

for.inc369:                                       ; preds = %if.end368
  %295 = load i32, i32* %c, align 4, !dbg !14678
  %inc370 = add nsw i32 %295, 1, !dbg !14678
  store i32 %inc370, i32* %c, align 4, !dbg !14678
  %296 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14679
  %pntsu371 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %296, i32 0, i32 6, !dbg !14680
  %297 = load i32, i32* %pntsu371, align 8, !dbg !14680
  %298 = load %struct.BPoint*, %struct.BPoint** %bp3, align 8, !dbg !14681
  %idx.ext = sext i32 %297 to i64, !dbg !14681
  %add.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %298, i64 %idx.ext, !dbg !14681
  store %struct.BPoint* %add.ptr, %struct.BPoint** %bp3, align 8, !dbg !14681
  br label %for.cond348, !dbg !14682, !llvm.loop !14683

for.end372:                                       ; preds = %if.else367, %for.cond348
  br label %if.end374, !dbg !14685

if.else373:                                       ; preds = %for.body339
  br label %for.end378, !dbg !14686

if.end374:                                        ; preds = %for.end372
  br label %for.inc375, !dbg !14688

for.inc375:                                       ; preds = %if.end374
  %299 = load i32, i32* %b, align 4, !dbg !14689
  %inc376 = add nsw i32 %299, 1, !dbg !14689
  store i32 %inc376, i32* %b, align 4, !dbg !14689
  %300 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !14690
  %incdec.ptr377 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %300, i32 1, !dbg !14690
  store %struct.BPoint* %incdec.ptr377, %struct.BPoint** %bp2, align 8, !dbg !14690
  br label %for.cond335, !dbg !14691, !llvm.loop !14692

for.end378:                                       ; preds = %if.else373, %for.cond335
  br label %if.end379, !dbg !14694

if.end379:                                        ; preds = %for.end378, %land.lhs.true328, %for.body322
  %301 = load i32, i32* %newu, align 4, !dbg !14695
  %302 = load i32, i32* %newv, align 4, !dbg !14697
  %add380 = add nsw i32 %301, %302, !dbg !14698
  %cmp381 = icmp sgt i32 %add380, 2, !dbg !14699
  br i1 %cmp381, label %if.then383, label %if.end526, !dbg !14700

if.then383:                                       ; preds = %if.end379
  %303 = load i32, i32* %a, align 4, !dbg !14701
  %cmp384 = icmp eq i32 %303, 0, !dbg !14704
  br i1 %cmp384, label %if.then386, label %if.end413, !dbg !14705

if.then386:                                       ; preds = %if.then383
  %304 = load i32, i32* %newu, align 4, !dbg !14706
  %305 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14709
  %pntsu387 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %305, i32 0, i32 6, !dbg !14710
  %306 = load i32, i32* %pntsu387, align 8, !dbg !14710
  %cmp388 = icmp eq i32 %304, %306, !dbg !14711
  br i1 %cmp388, label %land.lhs.true390, label %if.end395, !dbg !14712

land.lhs.true390:                                 ; preds = %if.then386
  %307 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14713
  %flagv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %307, i32 0, i32 14, !dbg !14714
  %308 = load i16, i16* %flagv, align 2, !dbg !14714
  %conv391 = sext i16 %308 to i32, !dbg !14713
  %and392 = and i32 %conv391, 1, !dbg !14715
  %tobool393 = icmp ne i32 %and392, 0, !dbg !14715
  br i1 %tobool393, label %if.then394, label %if.end395, !dbg !14716

if.then394:                                       ; preds = %land.lhs.true390
  %309 = load i32, i32* %newv, align 4, !dbg !14717
  store i32 %309, i32* %cyclicv, align 4, !dbg !14718
  br label %if.end395, !dbg !14719

if.end395:                                        ; preds = %if.then394, %land.lhs.true390, %if.then386
  %310 = load i32, i32* %newv, align 4, !dbg !14720
  %311 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14722
  %pntsv396 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %311, i32 0, i32 7, !dbg !14723
  %312 = load i32, i32* %pntsv396, align 4, !dbg !14723
  %cmp397 = icmp eq i32 %310, %312, !dbg !14724
  br i1 %cmp397, label %land.lhs.true399, label %if.end405, !dbg !14725

land.lhs.true399:                                 ; preds = %if.end395
  %313 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14726
  %flagu400 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %313, i32 0, i32 13, !dbg !14727
  %314 = load i16, i16* %flagu400, align 4, !dbg !14727
  %conv401 = sext i16 %314 to i32, !dbg !14726
  %and402 = and i32 %conv401, 1, !dbg !14728
  %tobool403 = icmp ne i32 %and402, 0, !dbg !14728
  br i1 %tobool403, label %if.then404, label %if.end405, !dbg !14729

if.then404:                                       ; preds = %land.lhs.true399
  %315 = load i32, i32* %newu, align 4, !dbg !14730
  store i32 %315, i32* %cyclicu, align 4, !dbg !14731
  br label %if.end405, !dbg !14732

if.end405:                                        ; preds = %if.then404, %land.lhs.true399, %if.end395
  %316 = load i32, i32* %cyclicu, align 4, !dbg !14733
  %cmp406 = icmp ne i32 %316, 0, !dbg !14735
  br i1 %cmp406, label %if.then411, label %lor.lhs.false408, !dbg !14736

lor.lhs.false408:                                 ; preds = %if.end405
  %317 = load i32, i32* %cyclicv, align 4, !dbg !14737
  %cmp409 = icmp ne i32 %317, 0, !dbg !14738
  br i1 %cmp409, label %if.then411, label %if.end412, !dbg !14739

if.then411:                                       ; preds = %lor.lhs.false408, %if.end405
  br label %for.inc527, !dbg !14740

if.end412:                                        ; preds = %lor.lhs.false408
  br label %if.end413, !dbg !14741

if.end413:                                        ; preds = %if.end412, %if.then383
  %318 = load i32, i32* %a, align 4, !dbg !14742
  %319 = load i32, i32* %newu, align 4, !dbg !14744
  %add414 = add nsw i32 %318, %319, !dbg !14745
  %320 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14746
  %pntsu415 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %320, i32 0, i32 6, !dbg !14747
  %321 = load i32, i32* %pntsu415, align 8, !dbg !14747
  %cmp416 = icmp eq i32 %add414, %321, !dbg !14748
  br i1 %cmp416, label %land.lhs.true418, label %if.else457, !dbg !14749

land.lhs.true418:                                 ; preds = %if.end413
  %322 = load i32, i32* %cyclicu, align 4, !dbg !14750
  %cmp419 = icmp ne i32 %322, 0, !dbg !14751
  br i1 %cmp419, label %if.then421, label %if.else457, !dbg !14752

if.then421:                                       ; preds = %land.lhs.true418
  %323 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14753
  %324 = load i32, i32* %newu, align 4, !dbg !14755
  %325 = load i32, i32* %cyclicu, align 4, !dbg !14756
  %add422 = add nsw i32 %324, %325, !dbg !14757
  %326 = load i32, i32* %newv, align 4, !dbg !14758
  %call423 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %323, i32 %add422, i32 %326), !dbg !14759
  store %struct.Nurb* %call423, %struct.Nurb** %newnu, align 8, !dbg !14760
  store i32 0, i32* %b, align 4, !dbg !14761
  br label %for.cond424, !dbg !14763

for.cond424:                                      ; preds = %for.inc454, %if.then421
  %327 = load i32, i32* %b, align 4, !dbg !14764
  %328 = load i32, i32* %newv, align 4, !dbg !14766
  %cmp425 = icmp slt i32 %327, %328, !dbg !14767
  br i1 %cmp425, label %for.body427, label %for.end456, !dbg !14768

for.body427:                                      ; preds = %for.cond424
  %329 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14769
  %bp428 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %329, i32 0, i32 17, !dbg !14771
  %330 = load %struct.BPoint*, %struct.BPoint** %bp428, align 8, !dbg !14771
  %331 = load i32, i32* %b, align 4, !dbg !14772
  %332 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14773
  %pntsu429 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %332, i32 0, i32 6, !dbg !14774
  %333 = load i32, i32* %pntsu429, align 8, !dbg !14774
  %mul430 = mul nsw i32 %331, %333, !dbg !14775
  %idxprom431 = sext i32 %mul430 to i64, !dbg !14769
  %arrayidx432 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %330, i64 %idxprom431, !dbg !14769
  %334 = bitcast %struct.BPoint* %arrayidx432 to i8*, !dbg !14776
  %335 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14777
  %bp433 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %335, i32 0, i32 17, !dbg !14778
  %336 = load %struct.BPoint*, %struct.BPoint** %bp433, align 8, !dbg !14778
  %337 = load i32, i32* %b, align 4, !dbg !14779
  %338 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14780
  %pntsu434 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %338, i32 0, i32 6, !dbg !14781
  %339 = load i32, i32* %pntsu434, align 8, !dbg !14781
  %mul435 = mul nsw i32 %337, %339, !dbg !14782
  %340 = load i32, i32* %a, align 4, !dbg !14783
  %add436 = add nsw i32 %mul435, %340, !dbg !14784
  %idxprom437 = sext i32 %add436 to i64, !dbg !14777
  %arrayidx438 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %336, i64 %idxprom437, !dbg !14777
  %341 = bitcast %struct.BPoint* %arrayidx438 to i8*, !dbg !14776
  %342 = load i32, i32* %newu, align 4, !dbg !14785
  %conv439 = sext i32 %342 to i64, !dbg !14785
  %mul440 = mul i64 %conv439, 36, !dbg !14786
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %334, i8* align 4 %341, i64 %mul440, i1 false), !dbg !14776
  %343 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14787
  %bp441 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %343, i32 0, i32 17, !dbg !14788
  %344 = load %struct.BPoint*, %struct.BPoint** %bp441, align 8, !dbg !14788
  %345 = load i32, i32* %b, align 4, !dbg !14789
  %346 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14790
  %pntsu442 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %346, i32 0, i32 6, !dbg !14791
  %347 = load i32, i32* %pntsu442, align 8, !dbg !14791
  %mul443 = mul nsw i32 %345, %347, !dbg !14792
  %348 = load i32, i32* %newu, align 4, !dbg !14793
  %add444 = add nsw i32 %mul443, %348, !dbg !14794
  %idxprom445 = sext i32 %add444 to i64, !dbg !14787
  %arrayidx446 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %344, i64 %idxprom445, !dbg !14787
  %349 = bitcast %struct.BPoint* %arrayidx446 to i8*, !dbg !14795
  %350 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14796
  %bp447 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %350, i32 0, i32 17, !dbg !14797
  %351 = load %struct.BPoint*, %struct.BPoint** %bp447, align 8, !dbg !14797
  %352 = load i32, i32* %b, align 4, !dbg !14798
  %353 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14799
  %pntsu448 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %353, i32 0, i32 6, !dbg !14800
  %354 = load i32, i32* %pntsu448, align 8, !dbg !14800
  %mul449 = mul nsw i32 %352, %354, !dbg !14801
  %idxprom450 = sext i32 %mul449 to i64, !dbg !14796
  %arrayidx451 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %351, i64 %idxprom450, !dbg !14796
  %355 = bitcast %struct.BPoint* %arrayidx451 to i8*, !dbg !14795
  %356 = load i32, i32* %cyclicu, align 4, !dbg !14802
  %conv452 = sext i32 %356 to i64, !dbg !14802
  %mul453 = mul i64 %conv452, 36, !dbg !14803
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %349, i8* align 4 %355, i64 %mul453, i1 false), !dbg !14795
  br label %for.inc454, !dbg !14804

for.inc454:                                       ; preds = %for.body427
  %357 = load i32, i32* %b, align 4, !dbg !14805
  %inc455 = add nsw i32 %357, 1, !dbg !14805
  store i32 %inc455, i32* %b, align 4, !dbg !14805
  br label %for.cond424, !dbg !14806, !llvm.loop !14807

for.end456:                                       ; preds = %for.cond424
  store i32 0, i32* %cyclicv, align 4, !dbg !14809
  store i32 0, i32* %cyclicu, align 4, !dbg !14810
  br label %if.end507, !dbg !14811

if.else457:                                       ; preds = %land.lhs.true418, %if.end413
  %358 = load i32, i32* %a, align 4, !dbg !14812
  %359 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14814
  %pntsu458 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %359, i32 0, i32 6, !dbg !14815
  %360 = load i32, i32* %pntsu458, align 8, !dbg !14815
  %div459 = sdiv i32 %358, %360, !dbg !14816
  %361 = load i32, i32* %newv, align 4, !dbg !14817
  %add460 = add nsw i32 %div459, %361, !dbg !14818
  %362 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14819
  %pntsv461 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %362, i32 0, i32 7, !dbg !14820
  %363 = load i32, i32* %pntsv461, align 4, !dbg !14820
  %cmp462 = icmp eq i32 %add460, %363, !dbg !14821
  br i1 %cmp462, label %land.lhs.true464, label %if.else485, !dbg !14822

land.lhs.true464:                                 ; preds = %if.else457
  %364 = load i32, i32* %cyclicv, align 4, !dbg !14823
  %cmp465 = icmp ne i32 %364, 0, !dbg !14824
  br i1 %cmp465, label %if.then467, label %if.else485, !dbg !14825

if.then467:                                       ; preds = %land.lhs.true464
  %365 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14826
  %366 = load i32, i32* %newu, align 4, !dbg !14828
  %367 = load i32, i32* %newv, align 4, !dbg !14829
  %368 = load i32, i32* %cyclicv, align 4, !dbg !14830
  %add468 = add nsw i32 %367, %368, !dbg !14831
  %call469 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %365, i32 %366, i32 %add468), !dbg !14832
  store %struct.Nurb* %call469, %struct.Nurb** %newnu, align 8, !dbg !14833
  %369 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14834
  %bp470 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %369, i32 0, i32 17, !dbg !14835
  %370 = load %struct.BPoint*, %struct.BPoint** %bp470, align 8, !dbg !14835
  %371 = bitcast %struct.BPoint* %370 to i8*, !dbg !14836
  %372 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14837
  %bp471 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %372, i32 0, i32 17, !dbg !14838
  %373 = load %struct.BPoint*, %struct.BPoint** %bp471, align 8, !dbg !14838
  %374 = load i32, i32* %a, align 4, !dbg !14839
  %idxprom472 = sext i32 %374 to i64, !dbg !14837
  %arrayidx473 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %373, i64 %idxprom472, !dbg !14837
  %375 = bitcast %struct.BPoint* %arrayidx473 to i8*, !dbg !14836
  %376 = load i32, i32* %newu, align 4, !dbg !14840
  %377 = load i32, i32* %newv, align 4, !dbg !14841
  %mul474 = mul nsw i32 %376, %377, !dbg !14842
  %conv475 = sext i32 %mul474 to i64, !dbg !14840
  %mul476 = mul i64 %conv475, 36, !dbg !14843
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %371, i8* align 4 %375, i64 %mul476, i1 false), !dbg !14836
  %378 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14844
  %bp477 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %378, i32 0, i32 17, !dbg !14845
  %379 = load %struct.BPoint*, %struct.BPoint** %bp477, align 8, !dbg !14845
  %380 = load i32, i32* %newu, align 4, !dbg !14846
  %381 = load i32, i32* %newv, align 4, !dbg !14847
  %mul478 = mul nsw i32 %380, %381, !dbg !14848
  %idxprom479 = sext i32 %mul478 to i64, !dbg !14844
  %arrayidx480 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %379, i64 %idxprom479, !dbg !14844
  %382 = bitcast %struct.BPoint* %arrayidx480 to i8*, !dbg !14849
  %383 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14850
  %bp481 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %383, i32 0, i32 17, !dbg !14851
  %384 = load %struct.BPoint*, %struct.BPoint** %bp481, align 8, !dbg !14851
  %385 = bitcast %struct.BPoint* %384 to i8*, !dbg !14849
  %386 = load i32, i32* %newu, align 4, !dbg !14852
  %387 = load i32, i32* %cyclicv, align 4, !dbg !14853
  %mul482 = mul nsw i32 %386, %387, !dbg !14854
  %conv483 = sext i32 %mul482 to i64, !dbg !14852
  %mul484 = mul i64 %conv483, 36, !dbg !14855
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %382, i8* align 4 %385, i64 %mul484, i1 false), !dbg !14849
  store i32 0, i32* %cyclicv, align 4, !dbg !14856
  store i32 0, i32* %cyclicu, align 4, !dbg !14857
  br label %if.end506, !dbg !14858

if.else485:                                       ; preds = %land.lhs.true464, %if.else457
  %388 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14859
  %389 = load i32, i32* %newu, align 4, !dbg !14861
  %390 = load i32, i32* %newv, align 4, !dbg !14862
  %call486 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %388, i32 %389, i32 %390), !dbg !14863
  store %struct.Nurb* %call486, %struct.Nurb** %newnu, align 8, !dbg !14864
  store i32 0, i32* %b, align 4, !dbg !14865
  br label %for.cond487, !dbg !14867

for.cond487:                                      ; preds = %for.inc503, %if.else485
  %391 = load i32, i32* %b, align 4, !dbg !14868
  %392 = load i32, i32* %newv, align 4, !dbg !14870
  %cmp488 = icmp slt i32 %391, %392, !dbg !14871
  br i1 %cmp488, label %for.body490, label %for.end505, !dbg !14872

for.body490:                                      ; preds = %for.cond487
  %393 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14873
  %bp491 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %393, i32 0, i32 17, !dbg !14875
  %394 = load %struct.BPoint*, %struct.BPoint** %bp491, align 8, !dbg !14875
  %395 = load i32, i32* %b, align 4, !dbg !14876
  %396 = load i32, i32* %newu, align 4, !dbg !14877
  %mul492 = mul nsw i32 %395, %396, !dbg !14878
  %idxprom493 = sext i32 %mul492 to i64, !dbg !14873
  %arrayidx494 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %394, i64 %idxprom493, !dbg !14873
  %397 = bitcast %struct.BPoint* %arrayidx494 to i8*, !dbg !14879
  %398 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14880
  %bp495 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %398, i32 0, i32 17, !dbg !14881
  %399 = load %struct.BPoint*, %struct.BPoint** %bp495, align 8, !dbg !14881
  %400 = load i32, i32* %b, align 4, !dbg !14882
  %401 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14883
  %pntsu496 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %401, i32 0, i32 6, !dbg !14884
  %402 = load i32, i32* %pntsu496, align 8, !dbg !14884
  %mul497 = mul nsw i32 %400, %402, !dbg !14885
  %403 = load i32, i32* %a, align 4, !dbg !14886
  %add498 = add nsw i32 %mul497, %403, !dbg !14887
  %idxprom499 = sext i32 %add498 to i64, !dbg !14880
  %arrayidx500 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %399, i64 %idxprom499, !dbg !14880
  %404 = bitcast %struct.BPoint* %arrayidx500 to i8*, !dbg !14879
  %405 = load i32, i32* %newu, align 4, !dbg !14888
  %conv501 = sext i32 %405 to i64, !dbg !14888
  %mul502 = mul i64 %conv501, 36, !dbg !14889
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %397, i8* align 4 %404, i64 %mul502, i1 false), !dbg !14879
  br label %for.inc503, !dbg !14890

for.inc503:                                       ; preds = %for.body490
  %406 = load i32, i32* %b, align 4, !dbg !14891
  %inc504 = add nsw i32 %406, 1, !dbg !14891
  store i32 %inc504, i32* %b, align 4, !dbg !14891
  br label %for.cond487, !dbg !14892, !llvm.loop !14893

for.end505:                                       ; preds = %for.cond487
  br label %if.end506

if.end506:                                        ; preds = %for.end505, %if.then467
  br label %if.end507

if.end507:                                        ; preds = %if.end506, %for.end456
  %407 = load %struct.ListBase*, %struct.ListBase** %newnurb.addr, align 8, !dbg !14895
  %408 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14896
  %409 = bitcast %struct.Nurb* %408 to i8*, !dbg !14896
  call void @BLI_addtail(%struct.ListBase* %407, i8* %409), !dbg !14897
  %410 = load i32, i32* %newu, align 4, !dbg !14898
  %411 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14900
  %pntsu508 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %411, i32 0, i32 6, !dbg !14901
  %412 = load i32, i32* %pntsu508, align 8, !dbg !14901
  %cmp509 = icmp ne i32 %410, %412, !dbg !14902
  br i1 %cmp509, label %if.then511, label %if.end516, !dbg !14903

if.then511:                                       ; preds = %if.end507
  %413 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14904
  %flagu512 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %413, i32 0, i32 13, !dbg !14905
  %414 = load i16, i16* %flagu512, align 4, !dbg !14906
  %conv513 = sext i16 %414 to i32, !dbg !14906
  %and514 = and i32 %conv513, -2, !dbg !14906
  %conv515 = trunc i32 %and514 to i16, !dbg !14906
  store i16 %conv515, i16* %flagu512, align 4, !dbg !14906
  br label %if.end516, !dbg !14904

if.end516:                                        ; preds = %if.then511, %if.end507
  %415 = load i32, i32* %newv, align 4, !dbg !14907
  %416 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14909
  %pntsv517 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %416, i32 0, i32 7, !dbg !14910
  %417 = load i32, i32* %pntsv517, align 4, !dbg !14910
  %cmp518 = icmp ne i32 %415, %417, !dbg !14911
  br i1 %cmp518, label %if.then520, label %if.end525, !dbg !14912

if.then520:                                       ; preds = %if.end516
  %418 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14913
  %flagv521 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %418, i32 0, i32 14, !dbg !14914
  %419 = load i16, i16* %flagv521, align 2, !dbg !14915
  %conv522 = sext i16 %419 to i32, !dbg !14915
  %and523 = and i32 %conv522, -2, !dbg !14915
  %conv524 = trunc i32 %and523 to i16, !dbg !14915
  store i16 %conv524, i16* %flagv521, align 2, !dbg !14915
  br label %if.end525, !dbg !14913

if.end525:                                        ; preds = %if.then520, %if.end516
  br label %if.end526, !dbg !14916

if.end526:                                        ; preds = %if.end525, %if.end379
  br label %for.inc527, !dbg !14917

for.inc527:                                       ; preds = %if.end526, %if.then411
  %420 = load i32, i32* %a, align 4, !dbg !14918
  %inc528 = add nsw i32 %420, 1, !dbg !14918
  store i32 %inc528, i32* %a, align 4, !dbg !14918
  %421 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !14919
  %incdec.ptr529 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %421, i32 1, !dbg !14919
  store %struct.BPoint* %incdec.ptr529, %struct.BPoint** %bp1, align 8, !dbg !14919
  br label %for.cond316, !dbg !14920, !llvm.loop !14921

for.end530:                                       ; preds = %for.cond316
  %422 = load i32, i32* %cyclicu, align 4, !dbg !14923
  %cmp531 = icmp ne i32 %422, 0, !dbg !14925
  br i1 %cmp531, label %if.then536, label %lor.lhs.false533, !dbg !14926

lor.lhs.false533:                                 ; preds = %for.end530
  %423 = load i32, i32* %cyclicv, align 4, !dbg !14927
  %cmp534 = icmp ne i32 %423, 0, !dbg !14928
  br i1 %cmp534, label %if.then536, label %if.end584, !dbg !14929

if.then536:                                       ; preds = %lor.lhs.false533, %for.end530
  %424 = load i32, i32* %cyclicu, align 4, !dbg !14930
  %cmp537 = icmp eq i32 %424, 0, !dbg !14932
  br i1 %cmp537, label %cond.true, label %cond.false, !dbg !14930

cond.true:                                        ; preds = %if.then536
  %425 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14933
  %pntsu539 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %425, i32 0, i32 6, !dbg !14934
  %426 = load i32, i32* %pntsu539, align 8, !dbg !14934
  br label %cond.end, !dbg !14930

cond.false:                                       ; preds = %if.then536
  %427 = load i32, i32* %cyclicu, align 4, !dbg !14935
  br label %cond.end, !dbg !14930

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %426, %cond.true ], [ %427, %cond.false ], !dbg !14930
  store i32 %cond, i32* %newu, align 4, !dbg !14936
  %428 = load i32, i32* %cyclicv, align 4, !dbg !14937
  %cmp540 = icmp eq i32 %428, 0, !dbg !14938
  br i1 %cmp540, label %cond.true542, label %cond.false544, !dbg !14937

cond.true542:                                     ; preds = %cond.end
  %429 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14939
  %pntsv543 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %429, i32 0, i32 7, !dbg !14940
  %430 = load i32, i32* %pntsv543, align 4, !dbg !14940
  br label %cond.end545, !dbg !14937

cond.false544:                                    ; preds = %cond.end
  %431 = load i32, i32* %cyclicv, align 4, !dbg !14941
  br label %cond.end545, !dbg !14937

cond.end545:                                      ; preds = %cond.false544, %cond.true542
  %cond546 = phi i32 [ %430, %cond.true542 ], [ %431, %cond.false544 ], !dbg !14937
  store i32 %cond546, i32* %newv, align 4, !dbg !14942
  %432 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14943
  %433 = load i32, i32* %newu, align 4, !dbg !14944
  %434 = load i32, i32* %newv, align 4, !dbg !14945
  %call547 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %432, i32 %433, i32 %434), !dbg !14946
  store %struct.Nurb* %call547, %struct.Nurb** %newnu, align 8, !dbg !14947
  store i32 0, i32* %b, align 4, !dbg !14948
  br label %for.cond548, !dbg !14950

for.cond548:                                      ; preds = %for.inc563, %cond.end545
  %435 = load i32, i32* %b, align 4, !dbg !14951
  %436 = load i32, i32* %newv, align 4, !dbg !14953
  %cmp549 = icmp slt i32 %435, %436, !dbg !14954
  br i1 %cmp549, label %for.body551, label %for.end565, !dbg !14955

for.body551:                                      ; preds = %for.cond548
  %437 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14956
  %bp552 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %437, i32 0, i32 17, !dbg !14958
  %438 = load %struct.BPoint*, %struct.BPoint** %bp552, align 8, !dbg !14958
  %439 = load i32, i32* %b, align 4, !dbg !14959
  %440 = load i32, i32* %newu, align 4, !dbg !14960
  %mul553 = mul nsw i32 %439, %440, !dbg !14961
  %idxprom554 = sext i32 %mul553 to i64, !dbg !14956
  %arrayidx555 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %438, i64 %idxprom554, !dbg !14956
  %441 = bitcast %struct.BPoint* %arrayidx555 to i8*, !dbg !14962
  %442 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14963
  %bp556 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %442, i32 0, i32 17, !dbg !14964
  %443 = load %struct.BPoint*, %struct.BPoint** %bp556, align 8, !dbg !14964
  %444 = load i32, i32* %b, align 4, !dbg !14965
  %445 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14966
  %pntsu557 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %445, i32 0, i32 6, !dbg !14967
  %446 = load i32, i32* %pntsu557, align 8, !dbg !14967
  %mul558 = mul nsw i32 %444, %446, !dbg !14968
  %idxprom559 = sext i32 %mul558 to i64, !dbg !14963
  %arrayidx560 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %443, i64 %idxprom559, !dbg !14963
  %447 = bitcast %struct.BPoint* %arrayidx560 to i8*, !dbg !14962
  %448 = load i32, i32* %newu, align 4, !dbg !14969
  %conv561 = sext i32 %448 to i64, !dbg !14969
  %mul562 = mul i64 %conv561, 36, !dbg !14970
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %441, i8* align 4 %447, i64 %mul562, i1 false), !dbg !14962
  br label %for.inc563, !dbg !14971

for.inc563:                                       ; preds = %for.body551
  %449 = load i32, i32* %b, align 4, !dbg !14972
  %inc564 = add nsw i32 %449, 1, !dbg !14972
  store i32 %inc564, i32* %b, align 4, !dbg !14972
  br label %for.cond548, !dbg !14973, !llvm.loop !14974

for.end565:                                       ; preds = %for.cond548
  %450 = load %struct.ListBase*, %struct.ListBase** %newnurb.addr, align 8, !dbg !14976
  %451 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14977
  %452 = bitcast %struct.Nurb* %451 to i8*, !dbg !14977
  call void @BLI_addtail(%struct.ListBase* %450, i8* %452), !dbg !14978
  %453 = load i32, i32* %newu, align 4, !dbg !14979
  %454 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14981
  %pntsu566 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %454, i32 0, i32 6, !dbg !14982
  %455 = load i32, i32* %pntsu566, align 8, !dbg !14982
  %cmp567 = icmp ne i32 %453, %455, !dbg !14983
  br i1 %cmp567, label %if.then569, label %if.end574, !dbg !14984

if.then569:                                       ; preds = %for.end565
  %456 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14985
  %flagu570 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %456, i32 0, i32 13, !dbg !14986
  %457 = load i16, i16* %flagu570, align 4, !dbg !14987
  %conv571 = sext i16 %457 to i32, !dbg !14987
  %and572 = and i32 %conv571, -2, !dbg !14987
  %conv573 = trunc i32 %and572 to i16, !dbg !14987
  store i16 %conv573, i16* %flagu570, align 4, !dbg !14987
  br label %if.end574, !dbg !14985

if.end574:                                        ; preds = %if.then569, %for.end565
  %458 = load i32, i32* %newv, align 4, !dbg !14988
  %459 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14990
  %pntsv575 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %459, i32 0, i32 7, !dbg !14991
  %460 = load i32, i32* %pntsv575, align 4, !dbg !14991
  %cmp576 = icmp ne i32 %458, %460, !dbg !14992
  br i1 %cmp576, label %if.then578, label %if.end583, !dbg !14993

if.then578:                                       ; preds = %if.end574
  %461 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !14994
  %flagv579 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %461, i32 0, i32 14, !dbg !14995
  %462 = load i16, i16* %flagv579, align 2, !dbg !14996
  %conv580 = sext i16 %462 to i32, !dbg !14996
  %and581 = and i32 %conv580, -2, !dbg !14996
  %conv582 = trunc i32 %and581 to i16, !dbg !14996
  store i16 %conv582, i16* %flagv579, align 2, !dbg !14996
  br label %if.end583, !dbg !14994

if.end583:                                        ; preds = %if.then578, %if.end574
  br label %if.end584, !dbg !14997

if.end584:                                        ; preds = %if.end583, %lor.lhs.false533
  store i32 0, i32* %b, align 4, !dbg !14998
  %463 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15000
  %bp585 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %463, i32 0, i32 17, !dbg !15001
  %464 = load %struct.BPoint*, %struct.BPoint** %bp585, align 8, !dbg !15001
  store %struct.BPoint* %464, %struct.BPoint** %bp1, align 8, !dbg !15002
  br label %for.cond586, !dbg !15003

for.cond586:                                      ; preds = %for.inc601, %if.end584
  %465 = load i32, i32* %b, align 4, !dbg !15004
  %466 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15006
  %pntsu587 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %466, i32 0, i32 6, !dbg !15007
  %467 = load i32, i32* %pntsu587, align 8, !dbg !15007
  %468 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15008
  %pntsv588 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %468, i32 0, i32 7, !dbg !15009
  %469 = load i32, i32* %pntsv588, align 4, !dbg !15009
  %mul589 = mul nsw i32 %467, %469, !dbg !15010
  %cmp590 = icmp slt i32 %465, %mul589, !dbg !15011
  br i1 %cmp590, label %for.body592, label %for.end604, !dbg !15012

for.body592:                                      ; preds = %for.cond586
  %470 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !15013
  %f1593 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %470, i32 0, i32 3, !dbg !15015
  %471 = load i16, i16* %f1593, align 4, !dbg !15016
  %conv594 = sext i16 %471 to i32, !dbg !15016
  %and595 = and i32 %conv594, -5, !dbg !15016
  %conv596 = trunc i32 %and595 to i16, !dbg !15016
  store i16 %conv596, i16* %f1593, align 4, !dbg !15016
  %472 = load i8, i8* %split.addr, align 1, !dbg !15017
  %tobool597 = icmp ne i8 %472, 0, !dbg !15017
  br i1 %tobool597, label %if.end600, label %if.then598, !dbg !15019

if.then598:                                       ; preds = %for.body592
  %473 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !15020
  %474 = load i16, i16* %flag.addr, align 2, !dbg !15021
  %call599 = call zeroext i8 @select_bpoint(%struct.BPoint* %473, i8 zeroext 0, i16 signext %474, i8 zeroext 1), !dbg !15022
  br label %if.end600, !dbg !15022

if.end600:                                        ; preds = %if.then598, %for.body592
  br label %for.inc601, !dbg !15023

for.inc601:                                       ; preds = %if.end600
  %475 = load i32, i32* %b, align 4, !dbg !15024
  %inc602 = add nsw i32 %475, 1, !dbg !15024
  store i32 %inc602, i32* %b, align 4, !dbg !15024
  %476 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !15025
  %incdec.ptr603 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %476, i32 1, !dbg !15025
  store %struct.BPoint* %incdec.ptr603, %struct.BPoint** %bp1, align 8, !dbg !15025
  br label %for.cond586, !dbg !15026, !llvm.loop !15027

for.end604:                                       ; preds = %for.cond586
  br label %if.end605

if.end605:                                        ; preds = %for.end604, %if.end313
  br label %if.end606, !dbg !15029

if.end606:                                        ; preds = %if.end605, %if.else231
  br label %if.end607

if.end607:                                        ; preds = %if.end606, %if.end230
  br label %if.end608

if.end608:                                        ; preds = %if.end607, %if.end108
  %477 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15030
  %prev = getelementptr inbounds %struct.Nurb, %struct.Nurb* %477, i32 0, i32 1, !dbg !15031
  %478 = load %struct.Nurb*, %struct.Nurb** %prev, align 8, !dbg !15031
  store %struct.Nurb* %478, %struct.Nurb** %nu, align 8, !dbg !15032
  br label %while.cond, !dbg !14049, !llvm.loop !15033

while.end609:                                     ; preds = %while.cond
  %479 = load %struct.ListBase*, %struct.ListBase** %newnurb.addr, align 8, !dbg !15035
  %call610 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %479), !dbg !15037
  %conv611 = zext i8 %call610 to i32, !dbg !15037
  %cmp612 = icmp eq i32 %conv611, 0, !dbg !15038
  br i1 %cmp612, label %if.then614, label %if.end661, !dbg !15039

if.then614:                                       ; preds = %while.end609
  %480 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15040
  %actvert = getelementptr inbounds %struct.Curve, %struct.Curve* %480, i32 0, i32 32, !dbg !15042
  store i32 -1, i32* %actvert, align 8, !dbg !15043
  %481 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15044
  %actnu = getelementptr inbounds %struct.Curve, %struct.Curve* %481, i32 0, i32 31, !dbg !15045
  store i32 -1, i32* %actnu, align 4, !dbg !15046
  %482 = load %struct.ListBase*, %struct.ListBase** %newnurb.addr, align 8, !dbg !15047
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %482, i32 0, i32 0, !dbg !15049
  %483 = load i8*, i8** %first, align 8, !dbg !15049
  %484 = bitcast i8* %483 to %struct.Nurb*, !dbg !15047
  store %struct.Nurb* %484, %struct.Nurb** %nu, align 8, !dbg !15050
  br label %for.cond615, !dbg !15051

for.cond615:                                      ; preds = %for.inc659, %if.then614
  %485 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15052
  %tobool616 = icmp ne %struct.Nurb* %485, null, !dbg !15054
  br i1 %tobool616, label %for.body617, label %for.end660, !dbg !15054

for.body617:                                      ; preds = %for.cond615
  %486 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15055
  %type618 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %486, i32 0, i32 2, !dbg !15058
  %487 = load i16, i16* %type618, align 8, !dbg !15058
  %conv619 = sext i16 %487 to i32, !dbg !15055
  %cmp620 = icmp eq i32 %conv619, 1, !dbg !15059
  br i1 %cmp620, label %if.then622, label %if.else633, !dbg !15060

if.then622:                                       ; preds = %for.body617
  %488 = load i8, i8* %split.addr, align 1, !dbg !15061
  %tobool623 = icmp ne i8 %488, 0, !dbg !15061
  br i1 %tobool623, label %if.then624, label %if.end632, !dbg !15064

if.then624:                                       ; preds = %if.then622
  %489 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15065
  %490 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15067
  %bezt625 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %490, i32 0, i32 18, !dbg !15068
  %491 = load %struct.BezTriple*, %struct.BezTriple** %bezt625, align 8, !dbg !15068
  %arrayidx626 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %491, i64 0, !dbg !15067
  call void @BKE_nurb_handle_calc_simple(%struct.Nurb* %489, %struct.BezTriple* %arrayidx626), !dbg !15069
  %492 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15070
  %493 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15071
  %bezt627 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %493, i32 0, i32 18, !dbg !15072
  %494 = load %struct.BezTriple*, %struct.BezTriple** %bezt627, align 8, !dbg !15072
  %495 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15073
  %pntsu628 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %495, i32 0, i32 6, !dbg !15074
  %496 = load i32, i32* %pntsu628, align 8, !dbg !15074
  %sub629 = sub nsw i32 %496, 1, !dbg !15075
  %idxprom630 = sext i32 %sub629 to i64, !dbg !15071
  %arrayidx631 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %494, i64 %idxprom630, !dbg !15071
  call void @BKE_nurb_handle_calc_simple(%struct.Nurb* %492, %struct.BezTriple* %arrayidx631), !dbg !15076
  br label %if.end632, !dbg !15077

if.end632:                                        ; preds = %if.then624, %if.then622
  br label %if.end658, !dbg !15078

if.else633:                                       ; preds = %for.body617
  %497 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15079
  %knotsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %497, i32 0, i32 16, !dbg !15081
  store float* null, float** %knotsv, align 8, !dbg !15082
  %498 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15083
  %knotsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %498, i32 0, i32 15, !dbg !15084
  store float* null, float** %knotsu, align 8, !dbg !15085
  %499 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15086
  %call634 = call zeroext i8 @BKE_nurb_order_clamp_u(%struct.Nurb* %499), !dbg !15087
  %500 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15088
  call void @BKE_nurb_knot_calc_u(%struct.Nurb* %500), !dbg !15089
  %501 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !15090
  %type635 = getelementptr inbounds %struct.Object, %struct.Object* %501, i32 0, i32 3, !dbg !15092
  %502 = load i16, i16* %type635, align 8, !dbg !15092
  %conv636 = sext i16 %502 to i32, !dbg !15090
  %cmp637 = icmp eq i32 %conv636, 3, !dbg !15093
  br i1 %cmp637, label %if.then639, label %if.end657, !dbg !15094

if.then639:                                       ; preds = %if.else633
  store i32 0, i32* %a, align 4, !dbg !15095
  %503 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15098
  %bp640 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %503, i32 0, i32 17, !dbg !15099
  %504 = load %struct.BPoint*, %struct.BPoint** %bp640, align 8, !dbg !15099
  store %struct.BPoint* %504, %struct.BPoint** %bp, align 8, !dbg !15100
  br label %for.cond641, !dbg !15101

for.cond641:                                      ; preds = %for.inc652, %if.then639
  %505 = load i32, i32* %a, align 4, !dbg !15102
  %506 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15104
  %pntsu642 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %506, i32 0, i32 6, !dbg !15105
  %507 = load i32, i32* %pntsu642, align 8, !dbg !15105
  %508 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15106
  %pntsv643 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %508, i32 0, i32 7, !dbg !15107
  %509 = load i32, i32* %pntsv643, align 4, !dbg !15107
  %mul644 = mul nsw i32 %507, %509, !dbg !15108
  %cmp645 = icmp slt i32 %505, %mul644, !dbg !15109
  br i1 %cmp645, label %for.body647, label %for.end655, !dbg !15110

for.body647:                                      ; preds = %for.cond641
  %510 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !15111
  %f1648 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %510, i32 0, i32 3, !dbg !15113
  %511 = load i16, i16* %f1648, align 4, !dbg !15114
  %conv649 = sext i16 %511 to i32, !dbg !15114
  %and650 = and i32 %conv649, -5, !dbg !15114
  %conv651 = trunc i32 %and650 to i16, !dbg !15114
  store i16 %conv651, i16* %f1648, align 4, !dbg !15114
  br label %for.inc652, !dbg !15115

for.inc652:                                       ; preds = %for.body647
  %512 = load i32, i32* %a, align 4, !dbg !15116
  %inc653 = add nsw i32 %512, 1, !dbg !15116
  store i32 %inc653, i32* %a, align 4, !dbg !15116
  %513 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !15117
  %incdec.ptr654 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %513, i32 1, !dbg !15117
  store %struct.BPoint* %incdec.ptr654, %struct.BPoint** %bp, align 8, !dbg !15117
  br label %for.cond641, !dbg !15118, !llvm.loop !15119

for.end655:                                       ; preds = %for.cond641
  %514 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15121
  %call656 = call zeroext i8 @BKE_nurb_order_clamp_v(%struct.Nurb* %514), !dbg !15122
  %515 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15123
  call void @BKE_nurb_knot_calc_v(%struct.Nurb* %515), !dbg !15124
  br label %if.end657, !dbg !15125

if.end657:                                        ; preds = %for.end655, %if.else633
  br label %if.end658

if.end658:                                        ; preds = %if.end657, %if.end632
  br label %for.inc659, !dbg !15126

for.inc659:                                       ; preds = %if.end658
  %516 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15127
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %516, i32 0, i32 0, !dbg !15128
  %517 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !15128
  store %struct.Nurb* %517, %struct.Nurb** %nu, align 8, !dbg !15129
  br label %for.cond615, !dbg !15130, !llvm.loop !15131

for.end660:                                       ; preds = %for.cond615
  br label %if.end661, !dbg !15133

if.end661:                                        ; preds = %for.end660, %while.end609
  ret void, !dbg !15134
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %lb) #0 !dbg !15135 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !15140, metadata !DIExpression()), !dbg !15141
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !15142
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !15143
  %1 = load i8*, i8** %first, align 8, !dbg !15143
  %cmp = icmp eq i8* %1, null, !dbg !15144
  %conv = zext i1 %cmp to i32, !dbg !15144
  %conv1 = trunc i32 %conv to i8, !dbg !15145
  ret i8 %conv1, !dbg !15146
}

declare dso_local %struct.Base* @ED_object_add_duplicate(%struct.Main*, %struct.Scene*, %struct.Base*, i32) #2

declare dso_local %struct.Curve* @BKE_curve_copy(%struct.Curve*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @curve_delete_segments(%struct.Object* %obedit, i8 zeroext %split) #0 !dbg !15147 {
entry:
  %obedit.addr = alloca %struct.Object*, align 8
  %split.addr = alloca i8, align 1
  %cu = alloca %struct.Curve*, align 8
  %editnurb = alloca %struct.EditNurb*, align 8
  %nubase = alloca %struct.ListBase*, align 8
  %newnurb = alloca %struct.ListBase, align 8
  %nu = alloca %struct.Nurb*, align 8
  %nu1 = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bezt1 = alloca %struct.BezTriple*, align 8
  %bezt2 = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %bp1 = alloca %struct.BPoint*, align 8
  %bp2 = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %starta = alloca i32, align 4
  %enda = alloca i32, align 4
  %cut = alloca i32, align 4
  %cyclicut = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !15150, metadata !DIExpression()), !dbg !15151
  store i8 %split, i8* %split.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %split.addr, metadata !15152, metadata !DIExpression()), !dbg !15153
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !15154, metadata !DIExpression()), !dbg !15155
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !15156
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !15157
  %1 = load i8*, i8** %data, align 8, !dbg !15157
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !15156
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !15155
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb, metadata !15158, metadata !DIExpression()), !dbg !15159
  %3 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15160
  %editnurb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 4, !dbg !15161
  %4 = load %struct.EditNurb*, %struct.EditNurb** %editnurb1, align 8, !dbg !15161
  store %struct.EditNurb* %4, %struct.EditNurb** %editnurb, align 8, !dbg !15159
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nubase, metadata !15162, metadata !DIExpression()), !dbg !15163
  %5 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !15164
  %nurbs = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %5, i32 0, i32 0, !dbg !15165
  store %struct.ListBase* %nurbs, %struct.ListBase** %nubase, align 8, !dbg !15163
  call void @llvm.dbg.declare(metadata %struct.ListBase* %newnurb, metadata !15166, metadata !DIExpression()), !dbg !15167
  %6 = bitcast %struct.ListBase* %newnurb to i8*, !dbg !15167
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false), !dbg !15167
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !15168, metadata !DIExpression()), !dbg !15169
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu1, metadata !15170, metadata !DIExpression()), !dbg !15171
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !15172, metadata !DIExpression()), !dbg !15173
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt1, metadata !15174, metadata !DIExpression()), !dbg !15175
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt2, metadata !15176, metadata !DIExpression()), !dbg !15177
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !15178, metadata !DIExpression()), !dbg !15179
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp1, metadata !15180, metadata !DIExpression()), !dbg !15181
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp2, metadata !15182, metadata !DIExpression()), !dbg !15183
  call void @llvm.dbg.declare(metadata i32* %a, metadata !15184, metadata !DIExpression()), !dbg !15185
  call void @llvm.dbg.declare(metadata i32* %b, metadata !15186, metadata !DIExpression()), !dbg !15187
  call void @llvm.dbg.declare(metadata i32* %starta, metadata !15188, metadata !DIExpression()), !dbg !15189
  call void @llvm.dbg.declare(metadata i32* %enda, metadata !15190, metadata !DIExpression()), !dbg !15191
  call void @llvm.dbg.declare(metadata i32* %cut, metadata !15192, metadata !DIExpression()), !dbg !15193
  call void @llvm.dbg.declare(metadata i32* %cyclicut, metadata !15194, metadata !DIExpression()), !dbg !15195
  %7 = load %struct.ListBase*, %struct.ListBase** %nubase, align 8, !dbg !15196
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %7, i32 0, i32 0, !dbg !15198
  %8 = load i8*, i8** %first, align 8, !dbg !15198
  %9 = bitcast i8* %8 to %struct.Nurb*, !dbg !15196
  store %struct.Nurb* %9, %struct.Nurb** %nu, align 8, !dbg !15199
  br label %for.cond, !dbg !15200

for.cond:                                         ; preds = %for.inc1098, %entry
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15201
  %tobool = icmp ne %struct.Nurb* %10, null, !dbg !15203
  br i1 %tobool, label %for.body, label %for.end1099, !dbg !15203

for.body:                                         ; preds = %for.cond
  store %struct.Nurb* null, %struct.Nurb** %nu1, align 8, !dbg !15204
  store i32 -1, i32* %cut, align 4, !dbg !15206
  store i32 -1, i32* %enda, align 4, !dbg !15207
  store i32 -1, i32* %starta, align 4, !dbg !15208
  store i32 0, i32* %cyclicut, align 4, !dbg !15209
  %11 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15210
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 2, !dbg !15212
  %12 = load i16, i16* %type, align 8, !dbg !15212
  %conv = sext i16 %12 to i32, !dbg !15210
  %cmp = icmp eq i32 %conv, 1, !dbg !15213
  br i1 %cmp, label %if.then, label %if.else427, !dbg !15214

if.then:                                          ; preds = %for.body
  store i32 0, i32* %a, align 4, !dbg !15215
  %13 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15218
  %bezt3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 18, !dbg !15219
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt3, align 8, !dbg !15219
  store %struct.BezTriple* %14, %struct.BezTriple** %bezt, align 8, !dbg !15220
  br label %for.cond4, !dbg !15221

for.cond4:                                        ; preds = %for.inc, %if.then
  %15 = load i32, i32* %a, align 4, !dbg !15222
  %16 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15224
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %16, i32 0, i32 6, !dbg !15225
  %17 = load i32, i32* %pntsu, align 8, !dbg !15225
  %cmp5 = icmp slt i32 %15, %17, !dbg !15226
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !15227

for.body7:                                        ; preds = %for.cond4
  %18 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15228
  %drawflag = getelementptr inbounds %struct.Curve, %struct.Curve* %18, i32 0, i32 16, !dbg !15228
  %19 = load i16, i16* %drawflag, align 8, !dbg !15228
  %conv8 = sext i16 %19 to i32, !dbg !15228
  %and = and i32 %conv8, 1, !dbg !15228
  %tobool9 = icmp ne i32 %and, 0, !dbg !15228
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !15231

cond.true:                                        ; preds = %for.body7
  %20 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !15228
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %20, i32 0, i32 8, !dbg !15228
  %21 = load i8, i8* %f2, align 4, !dbg !15228
  %conv10 = zext i8 %21 to i32, !dbg !15228
  %and11 = and i32 %conv10, 1, !dbg !15228
  %tobool12 = icmp ne i32 %and11, 0, !dbg !15228
  br i1 %tobool12, label %if.else, label %if.then24, !dbg !15228

cond.false:                                       ; preds = %for.body7
  %22 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !15228
  %f213 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %22, i32 0, i32 8, !dbg !15228
  %23 = load i8, i8* %f213, align 4, !dbg !15228
  %conv14 = zext i8 %23 to i32, !dbg !15228
  %and15 = and i32 %conv14, 1, !dbg !15228
  %tobool16 = icmp ne i32 %and15, 0, !dbg !15228
  br i1 %tobool16, label %if.else, label %lor.lhs.false, !dbg !15228

lor.lhs.false:                                    ; preds = %cond.false
  %24 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !15228
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %24, i32 0, i32 7, !dbg !15228
  %25 = load i8, i8* %f1, align 1, !dbg !15228
  %conv17 = zext i8 %25 to i32, !dbg !15228
  %and18 = and i32 %conv17, 1, !dbg !15228
  %tobool19 = icmp ne i32 %and18, 0, !dbg !15228
  br i1 %tobool19, label %if.else, label %lor.lhs.false20, !dbg !15228

lor.lhs.false20:                                  ; preds = %lor.lhs.false
  %26 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !15228
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %26, i32 0, i32 9, !dbg !15228
  %27 = load i8, i8* %f3, align 1, !dbg !15228
  %conv21 = zext i8 %27 to i32, !dbg !15228
  %and22 = and i32 %conv21, 1, !dbg !15228
  %tobool23 = icmp ne i32 %and22, 0, !dbg !15228
  br i1 %tobool23, label %if.else, label %if.then24, !dbg !15231

if.then24:                                        ; preds = %lor.lhs.false20, %cond.true
  %28 = load i32, i32* %a, align 4, !dbg !15232
  store i32 %28, i32* %enda, align 4, !dbg !15234
  %29 = load i32, i32* %starta, align 4, !dbg !15235
  %cmp25 = icmp eq i32 %29, -1, !dbg !15237
  br i1 %cmp25, label %if.then27, label %if.end, !dbg !15238

if.then27:                                        ; preds = %if.then24
  %30 = load i32, i32* %a, align 4, !dbg !15239
  store i32 %30, i32* %starta, align 4, !dbg !15240
  br label %if.end, !dbg !15241

if.end:                                           ; preds = %if.then27, %if.then24
  %31 = load i32, i32* %a, align 4, !dbg !15242
  %32 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15244
  %pntsu28 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %32, i32 0, i32 6, !dbg !15245
  %33 = load i32, i32* %pntsu28, align 8, !dbg !15245
  %sub = sub nsw i32 %33, 1, !dbg !15246
  %cmp29 = icmp slt i32 %31, %sub, !dbg !15247
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !15248

if.then31:                                        ; preds = %if.end
  br label %for.inc, !dbg !15249

if.end32:                                         ; preds = %if.end
  br label %if.end66, !dbg !15250

if.else:                                          ; preds = %lor.lhs.false20, %lor.lhs.false, %cond.false, %cond.true
  %34 = load i32, i32* %a, align 4, !dbg !15251
  %35 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15253
  %pntsu33 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %35, i32 0, i32 6, !dbg !15254
  %36 = load i32, i32* %pntsu33, align 8, !dbg !15254
  %sub34 = sub nsw i32 %36, 1, !dbg !15255
  %cmp35 = icmp slt i32 %34, %sub34, !dbg !15256
  br i1 %cmp35, label %land.lhs.true, label %if.end65, !dbg !15257

land.lhs.true:                                    ; preds = %if.else
  %37 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15258
  %drawflag37 = getelementptr inbounds %struct.Curve, %struct.Curve* %37, i32 0, i32 16, !dbg !15258
  %38 = load i16, i16* %drawflag37, align 8, !dbg !15258
  %conv38 = sext i16 %38 to i32, !dbg !15258
  %and39 = and i32 %conv38, 1, !dbg !15258
  %tobool40 = icmp ne i32 %and39, 0, !dbg !15258
  br i1 %tobool40, label %cond.true41, label %cond.false46, !dbg !15259

cond.true41:                                      ; preds = %land.lhs.true
  %39 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !15258
  %add.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %39, i64 1, !dbg !15258
  %f242 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %add.ptr, i32 0, i32 8, !dbg !15258
  %40 = load i8, i8* %f242, align 4, !dbg !15258
  %conv43 = zext i8 %40 to i32, !dbg !15258
  %and44 = and i32 %conv43, 1, !dbg !15258
  %tobool45 = icmp ne i32 %and44, 0, !dbg !15258
  br i1 %tobool45, label %if.end65, label %if.then64, !dbg !15258

cond.false46:                                     ; preds = %land.lhs.true
  %41 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !15258
  %add.ptr47 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %41, i64 1, !dbg !15258
  %f248 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %add.ptr47, i32 0, i32 8, !dbg !15258
  %42 = load i8, i8* %f248, align 4, !dbg !15258
  %conv49 = zext i8 %42 to i32, !dbg !15258
  %and50 = and i32 %conv49, 1, !dbg !15258
  %tobool51 = icmp ne i32 %and50, 0, !dbg !15258
  br i1 %tobool51, label %if.end65, label %lor.lhs.false52, !dbg !15258

lor.lhs.false52:                                  ; preds = %cond.false46
  %43 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !15258
  %add.ptr53 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %43, i64 1, !dbg !15258
  %f154 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %add.ptr53, i32 0, i32 7, !dbg !15258
  %44 = load i8, i8* %f154, align 1, !dbg !15258
  %conv55 = zext i8 %44 to i32, !dbg !15258
  %and56 = and i32 %conv55, 1, !dbg !15258
  %tobool57 = icmp ne i32 %and56, 0, !dbg !15258
  br i1 %tobool57, label %if.end65, label %lor.lhs.false58, !dbg !15258

lor.lhs.false58:                                  ; preds = %lor.lhs.false52
  %45 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !15258
  %add.ptr59 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %45, i64 1, !dbg !15258
  %f360 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %add.ptr59, i32 0, i32 9, !dbg !15258
  %46 = load i8, i8* %f360, align 1, !dbg !15258
  %conv61 = zext i8 %46 to i32, !dbg !15258
  %and62 = and i32 %conv61, 1, !dbg !15258
  %tobool63 = icmp ne i32 %and62, 0, !dbg !15258
  br i1 %tobool63, label %if.end65, label %if.then64, !dbg !15259

if.then64:                                        ; preds = %lor.lhs.false58, %cond.true41
  br label %for.inc, !dbg !15260

if.end65:                                         ; preds = %lor.lhs.false58, %lor.lhs.false52, %cond.false46, %cond.true41, %if.else
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end32
  %47 = load i32, i32* %starta, align 4, !dbg !15262
  %cmp67 = icmp sge i32 %47, 0, !dbg !15264
  br i1 %cmp67, label %if.then69, label %if.end291, !dbg !15265

if.then69:                                        ; preds = %if.end66
  %48 = load i32, i32* %starta, align 4, !dbg !15266
  %cmp70 = icmp sle i32 %48, 1, !dbg !15269
  br i1 %cmp70, label %land.lhs.true72, label %if.else89, !dbg !15270

land.lhs.true72:                                  ; preds = %if.then69
  %49 = load i32, i32* %a, align 4, !dbg !15271
  %50 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15272
  %pntsu73 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %50, i32 0, i32 6, !dbg !15273
  %51 = load i32, i32* %pntsu73, align 8, !dbg !15273
  %sub74 = sub nsw i32 %51, 1, !dbg !15274
  %cmp75 = icmp eq i32 %49, %sub74, !dbg !15275
  br i1 %cmp75, label %if.then77, label %if.else89, !dbg !15276

if.then77:                                        ; preds = %land.lhs.true72
  %52 = load i32, i32* %starta, align 4, !dbg !15277
  %cmp78 = icmp eq i32 %52, 1, !dbg !15280
  br i1 %cmp78, label %land.lhs.true80, label %if.end87, !dbg !15281

land.lhs.true80:                                  ; preds = %if.then77
  %53 = load i32, i32* %enda, align 4, !dbg !15282
  %54 = load i32, i32* %a, align 4, !dbg !15283
  %cmp81 = icmp ne i32 %53, %54, !dbg !15284
  br i1 %cmp81, label %if.then83, label %if.end87, !dbg !15285

if.then83:                                        ; preds = %land.lhs.true80
  %55 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15286
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %55, i32 0, i32 13, !dbg !15287
  %56 = load i16, i16* %flagu, align 4, !dbg !15288
  %conv84 = sext i16 %56 to i32, !dbg !15288
  %and85 = and i32 %conv84, -2, !dbg !15288
  %conv86 = trunc i32 %and85 to i16, !dbg !15288
  store i16 %conv86, i16* %flagu, align 4, !dbg !15288
  br label %if.end87, !dbg !15286

if.end87:                                         ; preds = %if.then83, %land.lhs.true80, %if.then77
  store i32 0, i32* %starta, align 4, !dbg !15289
  %57 = load i32, i32* %a, align 4, !dbg !15290
  store i32 %57, i32* %enda, align 4, !dbg !15291
  %58 = load i32, i32* %enda, align 4, !dbg !15292
  %59 = load i32, i32* %starta, align 4, !dbg !15293
  %sub88 = sub nsw i32 %58, %59, !dbg !15294
  %add = add nsw i32 %sub88, 1, !dbg !15295
  store i32 %add, i32* %cut, align 4, !dbg !15296
  %60 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15297
  %61 = load i32, i32* %cut, align 4, !dbg !15298
  %call = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %60, i32 %61, i32 1), !dbg !15299
  store %struct.Nurb* %call, %struct.Nurb** %nu1, align 8, !dbg !15300
  br label %if.end269, !dbg !15301

if.else89:                                        ; preds = %land.lhs.true72, %if.then69
  %62 = load i32, i32* %starta, align 4, !dbg !15302
  %cmp90 = icmp eq i32 %62, 0, !dbg !15304
  br i1 %cmp90, label %if.then92, label %if.else175, !dbg !15305

if.then92:                                        ; preds = %if.else89
  %63 = load i32, i32* %enda, align 4, !dbg !15306
  %inc = add nsw i32 %63, 1, !dbg !15306
  store i32 %inc, i32* %enda, align 4, !dbg !15306
  %64 = load i32, i32* %enda, align 4, !dbg !15308
  %65 = load i32, i32* %starta, align 4, !dbg !15309
  %sub93 = sub nsw i32 %64, %65, !dbg !15310
  %add94 = add nsw i32 %sub93, 1, !dbg !15311
  store i32 %add94, i32* %cut, align 4, !dbg !15312
  %66 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15313
  %bezt95 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %66, i32 0, i32 18, !dbg !15314
  %67 = load %struct.BezTriple*, %struct.BezTriple** %bezt95, align 8, !dbg !15314
  %68 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15315
  %pntsu96 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %68, i32 0, i32 6, !dbg !15316
  %69 = load i32, i32* %pntsu96, align 8, !dbg !15316
  %sub97 = sub nsw i32 %69, 1, !dbg !15317
  %idxprom = sext i32 %sub97 to i64, !dbg !15313
  %arrayidx = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %67, i64 %idxprom, !dbg !15313
  store %struct.BezTriple* %arrayidx, %struct.BezTriple** %bezt1, align 8, !dbg !15318
  %70 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15319
  %bezt98 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %70, i32 0, i32 18, !dbg !15320
  %71 = load %struct.BezTriple*, %struct.BezTriple** %bezt98, align 8, !dbg !15320
  %72 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15321
  %pntsu99 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %72, i32 0, i32 6, !dbg !15322
  %73 = load i32, i32* %pntsu99, align 8, !dbg !15322
  %sub100 = sub nsw i32 %73, 2, !dbg !15323
  %idxprom101 = sext i32 %sub100 to i64, !dbg !15319
  %arrayidx102 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %71, i64 %idxprom101, !dbg !15319
  store %struct.BezTriple* %arrayidx102, %struct.BezTriple** %bezt2, align 8, !dbg !15324
  %74 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15325
  %flagu103 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %74, i32 0, i32 13, !dbg !15327
  %75 = load i16, i16* %flagu103, align 4, !dbg !15327
  %conv104 = sext i16 %75 to i32, !dbg !15325
  %and105 = and i32 %conv104, 1, !dbg !15328
  %tobool106 = icmp ne i32 %and105, 0, !dbg !15328
  br i1 %tobool106, label %land.lhs.true107, label %if.else165, !dbg !15329

land.lhs.true107:                                 ; preds = %if.then92
  %76 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15330
  %drawflag108 = getelementptr inbounds %struct.Curve, %struct.Curve* %76, i32 0, i32 16, !dbg !15330
  %77 = load i16, i16* %drawflag108, align 8, !dbg !15330
  %conv109 = sext i16 %77 to i32, !dbg !15330
  %and110 = and i32 %conv109, 1, !dbg !15330
  %tobool111 = icmp ne i32 %and110, 0, !dbg !15330
  br i1 %tobool111, label %cond.true112, label %cond.false117, !dbg !15331

cond.true112:                                     ; preds = %land.lhs.true107
  %78 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !15330
  %f2113 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %78, i32 0, i32 8, !dbg !15330
  %79 = load i8, i8* %f2113, align 4, !dbg !15330
  %conv114 = zext i8 %79 to i32, !dbg !15330
  %and115 = and i32 %conv114, 1, !dbg !15330
  %tobool116 = icmp ne i32 %and115, 0, !dbg !15330
  br i1 %tobool116, label %land.lhs.true132, label %if.else165, !dbg !15330

cond.false117:                                    ; preds = %land.lhs.true107
  %80 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !15330
  %f2118 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %80, i32 0, i32 8, !dbg !15330
  %81 = load i8, i8* %f2118, align 4, !dbg !15330
  %conv119 = zext i8 %81 to i32, !dbg !15330
  %and120 = and i32 %conv119, 1, !dbg !15330
  %tobool121 = icmp ne i32 %and120, 0, !dbg !15330
  br i1 %tobool121, label %land.lhs.true132, label %lor.lhs.false122, !dbg !15330

lor.lhs.false122:                                 ; preds = %cond.false117
  %82 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !15330
  %f1123 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %82, i32 0, i32 7, !dbg !15330
  %83 = load i8, i8* %f1123, align 1, !dbg !15330
  %conv124 = zext i8 %83 to i32, !dbg !15330
  %and125 = and i32 %conv124, 1, !dbg !15330
  %tobool126 = icmp ne i32 %and125, 0, !dbg !15330
  br i1 %tobool126, label %land.lhs.true132, label %lor.lhs.false127, !dbg !15330

lor.lhs.false127:                                 ; preds = %lor.lhs.false122
  %84 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !15330
  %f3128 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %84, i32 0, i32 9, !dbg !15330
  %85 = load i8, i8* %f3128, align 1, !dbg !15330
  %conv129 = zext i8 %85 to i32, !dbg !15330
  %and130 = and i32 %conv129, 1, !dbg !15330
  %tobool131 = icmp ne i32 %and130, 0, !dbg !15330
  br i1 %tobool131, label %land.lhs.true132, label %if.else165, !dbg !15331

land.lhs.true132:                                 ; preds = %lor.lhs.false127, %lor.lhs.false122, %cond.false117, %cond.true112
  %86 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15332
  %drawflag133 = getelementptr inbounds %struct.Curve, %struct.Curve* %86, i32 0, i32 16, !dbg !15332
  %87 = load i16, i16* %drawflag133, align 8, !dbg !15332
  %conv134 = sext i16 %87 to i32, !dbg !15332
  %and135 = and i32 %conv134, 1, !dbg !15332
  %tobool136 = icmp ne i32 %and135, 0, !dbg !15332
  br i1 %tobool136, label %cond.true137, label %cond.false142, !dbg !15333

cond.true137:                                     ; preds = %land.lhs.true132
  %88 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !15332
  %f2138 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %88, i32 0, i32 8, !dbg !15332
  %89 = load i8, i8* %f2138, align 4, !dbg !15332
  %conv139 = zext i8 %89 to i32, !dbg !15332
  %and140 = and i32 %conv139, 1, !dbg !15332
  %tobool141 = icmp ne i32 %and140, 0, !dbg !15332
  br i1 %tobool141, label %if.then157, label %if.else165, !dbg !15332

cond.false142:                                    ; preds = %land.lhs.true132
  %90 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !15332
  %f2143 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %90, i32 0, i32 8, !dbg !15332
  %91 = load i8, i8* %f2143, align 4, !dbg !15332
  %conv144 = zext i8 %91 to i32, !dbg !15332
  %and145 = and i32 %conv144, 1, !dbg !15332
  %tobool146 = icmp ne i32 %and145, 0, !dbg !15332
  br i1 %tobool146, label %if.then157, label %lor.lhs.false147, !dbg !15332

lor.lhs.false147:                                 ; preds = %cond.false142
  %92 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !15332
  %f1148 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %92, i32 0, i32 7, !dbg !15332
  %93 = load i8, i8* %f1148, align 1, !dbg !15332
  %conv149 = zext i8 %93 to i32, !dbg !15332
  %and150 = and i32 %conv149, 1, !dbg !15332
  %tobool151 = icmp ne i32 %and150, 0, !dbg !15332
  br i1 %tobool151, label %if.then157, label %lor.lhs.false152, !dbg !15332

lor.lhs.false152:                                 ; preds = %lor.lhs.false147
  %94 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !15332
  %f3153 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %94, i32 0, i32 9, !dbg !15332
  %95 = load i8, i8* %f3153, align 1, !dbg !15332
  %conv154 = zext i8 %95 to i32, !dbg !15332
  %and155 = and i32 %conv154, 1, !dbg !15332
  %tobool156 = icmp ne i32 %and155, 0, !dbg !15332
  br i1 %tobool156, label %if.then157, label %if.else165, !dbg !15333

if.then157:                                       ; preds = %lor.lhs.false152, %lor.lhs.false147, %cond.false142, %cond.true137
  %96 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15334
  %97 = load i32, i32* %cut, align 4, !dbg !15336
  %add158 = add nsw i32 %97, 1, !dbg !15337
  %call159 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %96, i32 %add158, i32 1), !dbg !15338
  store %struct.Nurb* %call159, %struct.Nurb** %nu1, align 8, !dbg !15339
  %98 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !15340
  %99 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15341
  %bezt160 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %99, i32 0, i32 18, !dbg !15342
  %100 = load %struct.BezTriple*, %struct.BezTriple** %bezt160, align 8, !dbg !15342
  %arrayidx161 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %100, i64 1, !dbg !15341
  %101 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15343
  %bezt162 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %101, i32 0, i32 18, !dbg !15344
  %102 = load %struct.BezTriple*, %struct.BezTriple** %bezt162, align 8, !dbg !15344
  %103 = load i32, i32* %cut, align 4, !dbg !15345
  call void @ED_curve_beztcpy(%struct.EditNurb* %98, %struct.BezTriple* %arrayidx161, %struct.BezTriple* %102, i32 %103), !dbg !15346
  %104 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15347
  %pntsu163 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %104, i32 0, i32 6, !dbg !15348
  %105 = load i32, i32* %pntsu163, align 8, !dbg !15348
  %sub164 = sub nsw i32 %105, 1, !dbg !15349
  store i32 %sub164, i32* %starta, align 4, !dbg !15350
  store i32 1, i32* %cut, align 4, !dbg !15351
  br label %if.end174, !dbg !15352

if.else165:                                       ; preds = %lor.lhs.false152, %cond.true137, %lor.lhs.false127, %cond.true112, %if.then92
  %106 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15353
  %flagu166 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %106, i32 0, i32 13, !dbg !15356
  %107 = load i16, i16* %flagu166, align 4, !dbg !15356
  %conv167 = sext i16 %107 to i32, !dbg !15353
  %and168 = and i32 %conv167, 1, !dbg !15357
  %tobool169 = icmp ne i32 %and168, 0, !dbg !15357
  br i1 %tobool169, label %if.then170, label %if.else171, !dbg !15358

if.then170:                                       ; preds = %if.else165
  %108 = load i32, i32* %cut, align 4, !dbg !15359
  store i32 %108, i32* %cyclicut, align 4, !dbg !15360
  br label %if.end173, !dbg !15361

if.else171:                                       ; preds = %if.else165
  %109 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15362
  %110 = load i32, i32* %cut, align 4, !dbg !15363
  %call172 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %109, i32 %110, i32 1), !dbg !15364
  store %struct.Nurb* %call172, %struct.Nurb** %nu1, align 8, !dbg !15365
  br label %if.end173

if.end173:                                        ; preds = %if.else171, %if.then170
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.then157
  br label %if.end268, !dbg !15366

if.else175:                                       ; preds = %if.else89
  %111 = load i32, i32* %enda, align 4, !dbg !15367
  %112 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15369
  %pntsu176 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %112, i32 0, i32 6, !dbg !15370
  %113 = load i32, i32* %pntsu176, align 8, !dbg !15370
  %sub177 = sub nsw i32 %113, 1, !dbg !15371
  %cmp178 = icmp eq i32 %111, %sub177, !dbg !15372
  br i1 %cmp178, label %if.then180, label %if.else261, !dbg !15373

if.then180:                                       ; preds = %if.else175
  %114 = load i32, i32* %starta, align 4, !dbg !15374
  %dec = add nsw i32 %114, -1, !dbg !15374
  store i32 %dec, i32* %starta, align 4, !dbg !15374
  %115 = load i32, i32* %enda, align 4, !dbg !15376
  %116 = load i32, i32* %starta, align 4, !dbg !15377
  %sub181 = sub nsw i32 %115, %116, !dbg !15378
  %add182 = add nsw i32 %sub181, 1, !dbg !15379
  store i32 %add182, i32* %cut, align 4, !dbg !15380
  %117 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15381
  %bezt183 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %117, i32 0, i32 18, !dbg !15382
  %118 = load %struct.BezTriple*, %struct.BezTriple** %bezt183, align 8, !dbg !15382
  store %struct.BezTriple* %118, %struct.BezTriple** %bezt1, align 8, !dbg !15383
  %119 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15384
  %bezt184 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %119, i32 0, i32 18, !dbg !15385
  %120 = load %struct.BezTriple*, %struct.BezTriple** %bezt184, align 8, !dbg !15385
  %arrayidx185 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %120, i64 1, !dbg !15384
  store %struct.BezTriple* %arrayidx185, %struct.BezTriple** %bezt2, align 8, !dbg !15386
  %121 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15387
  %flagu186 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %121, i32 0, i32 13, !dbg !15389
  %122 = load i16, i16* %flagu186, align 4, !dbg !15389
  %conv187 = sext i16 %122 to i32, !dbg !15387
  %and188 = and i32 %conv187, 1, !dbg !15390
  %tobool189 = icmp ne i32 %and188, 0, !dbg !15390
  br i1 %tobool189, label %land.lhs.true190, label %if.else247, !dbg !15391

land.lhs.true190:                                 ; preds = %if.then180
  %123 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15392
  %drawflag191 = getelementptr inbounds %struct.Curve, %struct.Curve* %123, i32 0, i32 16, !dbg !15392
  %124 = load i16, i16* %drawflag191, align 8, !dbg !15392
  %conv192 = sext i16 %124 to i32, !dbg !15392
  %and193 = and i32 %conv192, 1, !dbg !15392
  %tobool194 = icmp ne i32 %and193, 0, !dbg !15392
  br i1 %tobool194, label %cond.true195, label %cond.false200, !dbg !15393

cond.true195:                                     ; preds = %land.lhs.true190
  %125 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !15392
  %f2196 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %125, i32 0, i32 8, !dbg !15392
  %126 = load i8, i8* %f2196, align 4, !dbg !15392
  %conv197 = zext i8 %126 to i32, !dbg !15392
  %and198 = and i32 %conv197, 1, !dbg !15392
  %tobool199 = icmp ne i32 %and198, 0, !dbg !15392
  br i1 %tobool199, label %land.lhs.true215, label %if.else247, !dbg !15392

cond.false200:                                    ; preds = %land.lhs.true190
  %127 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !15392
  %f2201 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %127, i32 0, i32 8, !dbg !15392
  %128 = load i8, i8* %f2201, align 4, !dbg !15392
  %conv202 = zext i8 %128 to i32, !dbg !15392
  %and203 = and i32 %conv202, 1, !dbg !15392
  %tobool204 = icmp ne i32 %and203, 0, !dbg !15392
  br i1 %tobool204, label %land.lhs.true215, label %lor.lhs.false205, !dbg !15392

lor.lhs.false205:                                 ; preds = %cond.false200
  %129 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !15392
  %f1206 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %129, i32 0, i32 7, !dbg !15392
  %130 = load i8, i8* %f1206, align 1, !dbg !15392
  %conv207 = zext i8 %130 to i32, !dbg !15392
  %and208 = and i32 %conv207, 1, !dbg !15392
  %tobool209 = icmp ne i32 %and208, 0, !dbg !15392
  br i1 %tobool209, label %land.lhs.true215, label %lor.lhs.false210, !dbg !15392

lor.lhs.false210:                                 ; preds = %lor.lhs.false205
  %131 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !15392
  %f3211 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %131, i32 0, i32 9, !dbg !15392
  %132 = load i8, i8* %f3211, align 1, !dbg !15392
  %conv212 = zext i8 %132 to i32, !dbg !15392
  %and213 = and i32 %conv212, 1, !dbg !15392
  %tobool214 = icmp ne i32 %and213, 0, !dbg !15392
  br i1 %tobool214, label %land.lhs.true215, label %if.else247, !dbg !15393

land.lhs.true215:                                 ; preds = %lor.lhs.false210, %lor.lhs.false205, %cond.false200, %cond.true195
  %133 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15394
  %drawflag216 = getelementptr inbounds %struct.Curve, %struct.Curve* %133, i32 0, i32 16, !dbg !15394
  %134 = load i16, i16* %drawflag216, align 8, !dbg !15394
  %conv217 = sext i16 %134 to i32, !dbg !15394
  %and218 = and i32 %conv217, 1, !dbg !15394
  %tobool219 = icmp ne i32 %and218, 0, !dbg !15394
  br i1 %tobool219, label %cond.true220, label %cond.false225, !dbg !15395

cond.true220:                                     ; preds = %land.lhs.true215
  %135 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !15394
  %f2221 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %135, i32 0, i32 8, !dbg !15394
  %136 = load i8, i8* %f2221, align 4, !dbg !15394
  %conv222 = zext i8 %136 to i32, !dbg !15394
  %and223 = and i32 %conv222, 1, !dbg !15394
  %tobool224 = icmp ne i32 %and223, 0, !dbg !15394
  br i1 %tobool224, label %if.then240, label %if.else247, !dbg !15394

cond.false225:                                    ; preds = %land.lhs.true215
  %137 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !15394
  %f2226 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %137, i32 0, i32 8, !dbg !15394
  %138 = load i8, i8* %f2226, align 4, !dbg !15394
  %conv227 = zext i8 %138 to i32, !dbg !15394
  %and228 = and i32 %conv227, 1, !dbg !15394
  %tobool229 = icmp ne i32 %and228, 0, !dbg !15394
  br i1 %tobool229, label %if.then240, label %lor.lhs.false230, !dbg !15394

lor.lhs.false230:                                 ; preds = %cond.false225
  %139 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !15394
  %f1231 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %139, i32 0, i32 7, !dbg !15394
  %140 = load i8, i8* %f1231, align 1, !dbg !15394
  %conv232 = zext i8 %140 to i32, !dbg !15394
  %and233 = and i32 %conv232, 1, !dbg !15394
  %tobool234 = icmp ne i32 %and233, 0, !dbg !15394
  br i1 %tobool234, label %if.then240, label %lor.lhs.false235, !dbg !15394

lor.lhs.false235:                                 ; preds = %lor.lhs.false230
  %141 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !15394
  %f3236 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %141, i32 0, i32 9, !dbg !15394
  %142 = load i8, i8* %f3236, align 1, !dbg !15394
  %conv237 = zext i8 %142 to i32, !dbg !15394
  %and238 = and i32 %conv237, 1, !dbg !15394
  %tobool239 = icmp ne i32 %and238, 0, !dbg !15394
  br i1 %tobool239, label %if.then240, label %if.else247, !dbg !15395

if.then240:                                       ; preds = %lor.lhs.false235, %lor.lhs.false230, %cond.false225, %cond.true220
  %143 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15396
  %144 = load i32, i32* %cut, align 4, !dbg !15398
  %add241 = add nsw i32 %144, 1, !dbg !15399
  %call242 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %143, i32 %add241, i32 1), !dbg !15400
  store %struct.Nurb* %call242, %struct.Nurb** %nu1, align 8, !dbg !15401
  %145 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !15402
  %146 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15403
  %bezt243 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %146, i32 0, i32 18, !dbg !15404
  %147 = load %struct.BezTriple*, %struct.BezTriple** %bezt243, align 8, !dbg !15404
  %148 = load i32, i32* %cut, align 4, !dbg !15405
  %idxprom244 = sext i32 %148 to i64, !dbg !15403
  %arrayidx245 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %147, i64 %idxprom244, !dbg !15403
  %149 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15406
  %bezt246 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %149, i32 0, i32 18, !dbg !15407
  %150 = load %struct.BezTriple*, %struct.BezTriple** %bezt246, align 8, !dbg !15407
  call void @ED_curve_beztcpy(%struct.EditNurb* %145, %struct.BezTriple* %arrayidx245, %struct.BezTriple* %150, i32 1), !dbg !15408
  br label %if.end260, !dbg !15409

if.else247:                                       ; preds = %lor.lhs.false235, %cond.true220, %lor.lhs.false210, %cond.true195, %if.then180
  %151 = load i32, i32* %cyclicut, align 4, !dbg !15410
  %cmp248 = icmp ne i32 %151, 0, !dbg !15412
  br i1 %cmp248, label %if.then250, label %if.else257, !dbg !15413

if.then250:                                       ; preds = %if.else247
  %152 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15414
  %153 = load i32, i32* %cut, align 4, !dbg !15416
  %154 = load i32, i32* %cyclicut, align 4, !dbg !15417
  %add251 = add nsw i32 %153, %154, !dbg !15418
  %call252 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %152, i32 %add251, i32 1), !dbg !15419
  store %struct.Nurb* %call252, %struct.Nurb** %nu1, align 8, !dbg !15420
  %155 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !15421
  %156 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15422
  %bezt253 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %156, i32 0, i32 18, !dbg !15423
  %157 = load %struct.BezTriple*, %struct.BezTriple** %bezt253, align 8, !dbg !15423
  %158 = load i32, i32* %cut, align 4, !dbg !15424
  %idxprom254 = sext i32 %158 to i64, !dbg !15422
  %arrayidx255 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %157, i64 %idxprom254, !dbg !15422
  %159 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15425
  %bezt256 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %159, i32 0, i32 18, !dbg !15426
  %160 = load %struct.BezTriple*, %struct.BezTriple** %bezt256, align 8, !dbg !15426
  %161 = load i32, i32* %cyclicut, align 4, !dbg !15427
  call void @ED_curve_beztcpy(%struct.EditNurb* %155, %struct.BezTriple* %arrayidx255, %struct.BezTriple* %160, i32 %161), !dbg !15428
  store i32 0, i32* %cyclicut, align 4, !dbg !15429
  br label %if.end259, !dbg !15430

if.else257:                                       ; preds = %if.else247
  %162 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15431
  %163 = load i32, i32* %cut, align 4, !dbg !15433
  %call258 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %162, i32 %163, i32 1), !dbg !15434
  store %struct.Nurb* %call258, %struct.Nurb** %nu1, align 8, !dbg !15435
  br label %if.end259

if.end259:                                        ; preds = %if.else257, %if.then250
  br label %if.end260

if.end260:                                        ; preds = %if.end259, %if.then240
  br label %if.end267, !dbg !15436

if.else261:                                       ; preds = %if.else175
  %164 = load i32, i32* %starta, align 4, !dbg !15437
  %dec262 = add nsw i32 %164, -1, !dbg !15437
  store i32 %dec262, i32* %starta, align 4, !dbg !15437
  %165 = load i32, i32* %enda, align 4, !dbg !15439
  %inc263 = add nsw i32 %165, 1, !dbg !15439
  store i32 %inc263, i32* %enda, align 4, !dbg !15439
  %166 = load i32, i32* %enda, align 4, !dbg !15440
  %167 = load i32, i32* %starta, align 4, !dbg !15441
  %sub264 = sub nsw i32 %166, %167, !dbg !15442
  %add265 = add nsw i32 %sub264, 1, !dbg !15443
  store i32 %add265, i32* %cut, align 4, !dbg !15444
  %168 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15445
  %169 = load i32, i32* %cut, align 4, !dbg !15446
  %call266 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %168, i32 %169, i32 1), !dbg !15447
  store %struct.Nurb* %call266, %struct.Nurb** %nu1, align 8, !dbg !15448
  br label %if.end267

if.end267:                                        ; preds = %if.else261, %if.end260
  br label %if.end268

if.end268:                                        ; preds = %if.end267, %if.end174
  br label %if.end269

if.end269:                                        ; preds = %if.end268, %if.end87
  %170 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15449
  %cmp270 = icmp ne %struct.Nurb* %170, null, !dbg !15451
  br i1 %cmp270, label %if.then272, label %if.end290, !dbg !15452

if.then272:                                       ; preds = %if.end269
  %171 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !15453
  %172 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15455
  %bezt273 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %172, i32 0, i32 18, !dbg !15456
  %173 = load %struct.BezTriple*, %struct.BezTriple** %bezt273, align 8, !dbg !15456
  %174 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15457
  %bezt274 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %174, i32 0, i32 18, !dbg !15458
  %175 = load %struct.BezTriple*, %struct.BezTriple** %bezt274, align 8, !dbg !15458
  %176 = load i32, i32* %starta, align 4, !dbg !15459
  %idxprom275 = sext i32 %176 to i64, !dbg !15457
  %arrayidx276 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %175, i64 %idxprom275, !dbg !15457
  %177 = load i32, i32* %cut, align 4, !dbg !15460
  call void @ED_curve_beztcpy(%struct.EditNurb* %171, %struct.BezTriple* %173, %struct.BezTriple* %arrayidx276, i32 %177), !dbg !15461
  %178 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15462
  %179 = bitcast %struct.Nurb* %178 to i8*, !dbg !15462
  call void @BLI_addtail(%struct.ListBase* %newnurb, i8* %179), !dbg !15463
  %180 = load i32, i32* %starta, align 4, !dbg !15464
  %cmp277 = icmp ne i32 %180, 0, !dbg !15466
  br i1 %cmp277, label %if.then284, label %lor.lhs.false279, !dbg !15467

lor.lhs.false279:                                 ; preds = %if.then272
  %181 = load i32, i32* %enda, align 4, !dbg !15468
  %182 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15469
  %pntsu280 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %182, i32 0, i32 6, !dbg !15470
  %183 = load i32, i32* %pntsu280, align 8, !dbg !15470
  %sub281 = sub nsw i32 %183, 1, !dbg !15471
  %cmp282 = icmp ne i32 %181, %sub281, !dbg !15472
  br i1 %cmp282, label %if.then284, label %if.end289, !dbg !15473

if.then284:                                       ; preds = %lor.lhs.false279, %if.then272
  %184 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15474
  %flagu285 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %184, i32 0, i32 13, !dbg !15475
  %185 = load i16, i16* %flagu285, align 4, !dbg !15476
  %conv286 = sext i16 %185 to i32, !dbg !15476
  %and287 = and i32 %conv286, -2, !dbg !15476
  %conv288 = trunc i32 %and287 to i16, !dbg !15476
  store i16 %conv288, i16* %flagu285, align 4, !dbg !15476
  br label %if.end289, !dbg !15474

if.end289:                                        ; preds = %if.then284, %lor.lhs.false279
  store %struct.Nurb* null, %struct.Nurb** %nu1, align 8, !dbg !15477
  br label %if.end290, !dbg !15478

if.end290:                                        ; preds = %if.end289, %if.end269
  store i32 -1, i32* %enda, align 4, !dbg !15479
  store i32 -1, i32* %starta, align 4, !dbg !15480
  br label %if.end291, !dbg !15481

if.end291:                                        ; preds = %if.end290, %if.end66
  br label %for.inc, !dbg !15482

for.inc:                                          ; preds = %if.end291, %if.then64, %if.then31
  %186 = load i32, i32* %a, align 4, !dbg !15483
  %inc292 = add nsw i32 %186, 1, !dbg !15483
  store i32 %inc292, i32* %a, align 4, !dbg !15483
  %187 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !15484
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %187, i32 1, !dbg !15484
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !15484
  br label %for.cond4, !dbg !15485, !llvm.loop !15486

for.end:                                          ; preds = %for.cond4
  %188 = load i8, i8* %split.addr, align 1, !dbg !15488
  %tobool293 = icmp ne i8 %188, 0, !dbg !15488
  br i1 %tobool293, label %if.end426, label %land.lhs.true294, !dbg !15490

land.lhs.true294:                                 ; preds = %for.end
  %189 = load i32, i32* %cut, align 4, !dbg !15491
  %cmp295 = icmp ne i32 %189, -1, !dbg !15492
  br i1 %cmp295, label %land.lhs.true297, label %if.end426, !dbg !15493

land.lhs.true297:                                 ; preds = %land.lhs.true294
  %190 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15494
  %pntsu298 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %190, i32 0, i32 6, !dbg !15495
  %191 = load i32, i32* %pntsu298, align 8, !dbg !15495
  %cmp299 = icmp sgt i32 %191, 2, !dbg !15496
  br i1 %cmp299, label %land.lhs.true301, label %if.end426, !dbg !15497

land.lhs.true301:                                 ; preds = %land.lhs.true297
  %192 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15498
  %flagu302 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %192, i32 0, i32 13, !dbg !15499
  %193 = load i16, i16* %flagu302, align 4, !dbg !15499
  %conv303 = sext i16 %193 to i32, !dbg !15498
  %and304 = and i32 %conv303, 1, !dbg !15500
  %tobool305 = icmp ne i32 %and304, 0, !dbg !15500
  br i1 %tobool305, label %if.end426, label %if.then306, !dbg !15501

if.then306:                                       ; preds = %land.lhs.true301
  %194 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15502
  %bezt307 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %194, i32 0, i32 18, !dbg !15504
  %195 = load %struct.BezTriple*, %struct.BezTriple** %bezt307, align 8, !dbg !15504
  store %struct.BezTriple* %195, %struct.BezTriple** %bezt1, align 8, !dbg !15505
  %196 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15506
  %bezt308 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %196, i32 0, i32 18, !dbg !15507
  %197 = load %struct.BezTriple*, %struct.BezTriple** %bezt308, align 8, !dbg !15507
  %arrayidx309 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %197, i64 1, !dbg !15506
  store %struct.BezTriple* %arrayidx309, %struct.BezTriple** %bezt2, align 8, !dbg !15508
  %198 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15509
  %drawflag310 = getelementptr inbounds %struct.Curve, %struct.Curve* %198, i32 0, i32 16, !dbg !15509
  %199 = load i16, i16* %drawflag310, align 8, !dbg !15509
  %conv311 = sext i16 %199 to i32, !dbg !15509
  %and312 = and i32 %conv311, 1, !dbg !15509
  %tobool313 = icmp ne i32 %and312, 0, !dbg !15509
  br i1 %tobool313, label %cond.true314, label %cond.false319, !dbg !15511

cond.true314:                                     ; preds = %if.then306
  %200 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !15509
  %f2315 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %200, i32 0, i32 8, !dbg !15509
  %201 = load i8, i8* %f2315, align 4, !dbg !15509
  %conv316 = zext i8 %201 to i32, !dbg !15509
  %and317 = and i32 %conv316, 1, !dbg !15509
  %tobool318 = icmp ne i32 %and317, 0, !dbg !15509
  br i1 %tobool318, label %land.lhs.true334, label %if.end362, !dbg !15509

cond.false319:                                    ; preds = %if.then306
  %202 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !15509
  %f2320 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %202, i32 0, i32 8, !dbg !15509
  %203 = load i8, i8* %f2320, align 4, !dbg !15509
  %conv321 = zext i8 %203 to i32, !dbg !15509
  %and322 = and i32 %conv321, 1, !dbg !15509
  %tobool323 = icmp ne i32 %and322, 0, !dbg !15509
  br i1 %tobool323, label %land.lhs.true334, label %lor.lhs.false324, !dbg !15509

lor.lhs.false324:                                 ; preds = %cond.false319
  %204 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !15509
  %f1325 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %204, i32 0, i32 7, !dbg !15509
  %205 = load i8, i8* %f1325, align 1, !dbg !15509
  %conv326 = zext i8 %205 to i32, !dbg !15509
  %and327 = and i32 %conv326, 1, !dbg !15509
  %tobool328 = icmp ne i32 %and327, 0, !dbg !15509
  br i1 %tobool328, label %land.lhs.true334, label %lor.lhs.false329, !dbg !15509

lor.lhs.false329:                                 ; preds = %lor.lhs.false324
  %206 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !15509
  %f3330 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %206, i32 0, i32 9, !dbg !15509
  %207 = load i8, i8* %f3330, align 1, !dbg !15509
  %conv331 = zext i8 %207 to i32, !dbg !15509
  %and332 = and i32 %conv331, 1, !dbg !15509
  %tobool333 = icmp ne i32 %and332, 0, !dbg !15509
  br i1 %tobool333, label %land.lhs.true334, label %if.end362, !dbg !15511

land.lhs.true334:                                 ; preds = %lor.lhs.false329, %lor.lhs.false324, %cond.false319, %cond.true314
  %208 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15512
  %drawflag335 = getelementptr inbounds %struct.Curve, %struct.Curve* %208, i32 0, i32 16, !dbg !15512
  %209 = load i16, i16* %drawflag335, align 8, !dbg !15512
  %conv336 = sext i16 %209 to i32, !dbg !15512
  %and337 = and i32 %conv336, 1, !dbg !15512
  %tobool338 = icmp ne i32 %and337, 0, !dbg !15512
  br i1 %tobool338, label %cond.true339, label %cond.false344, !dbg !15513

cond.true339:                                     ; preds = %land.lhs.true334
  %210 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !15512
  %f2340 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %210, i32 0, i32 8, !dbg !15512
  %211 = load i8, i8* %f2340, align 4, !dbg !15512
  %conv341 = zext i8 %211 to i32, !dbg !15512
  %and342 = and i32 %conv341, 1, !dbg !15512
  %tobool343 = icmp ne i32 %and342, 0, !dbg !15512
  br i1 %tobool343, label %if.then359, label %if.end362, !dbg !15512

cond.false344:                                    ; preds = %land.lhs.true334
  %212 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !15512
  %f2345 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %212, i32 0, i32 8, !dbg !15512
  %213 = load i8, i8* %f2345, align 4, !dbg !15512
  %conv346 = zext i8 %213 to i32, !dbg !15512
  %and347 = and i32 %conv346, 1, !dbg !15512
  %tobool348 = icmp ne i32 %and347, 0, !dbg !15512
  br i1 %tobool348, label %if.then359, label %lor.lhs.false349, !dbg !15512

lor.lhs.false349:                                 ; preds = %cond.false344
  %214 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !15512
  %f1350 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %214, i32 0, i32 7, !dbg !15512
  %215 = load i8, i8* %f1350, align 1, !dbg !15512
  %conv351 = zext i8 %215 to i32, !dbg !15512
  %and352 = and i32 %conv351, 1, !dbg !15512
  %tobool353 = icmp ne i32 %and352, 0, !dbg !15512
  br i1 %tobool353, label %if.then359, label %lor.lhs.false354, !dbg !15512

lor.lhs.false354:                                 ; preds = %lor.lhs.false349
  %216 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !15512
  %f3355 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %216, i32 0, i32 9, !dbg !15512
  %217 = load i8, i8* %f3355, align 1, !dbg !15512
  %conv356 = zext i8 %217 to i32, !dbg !15512
  %and357 = and i32 %conv356, 1, !dbg !15512
  %tobool358 = icmp ne i32 %and357, 0, !dbg !15512
  br i1 %tobool358, label %if.then359, label %if.end362, !dbg !15513

if.then359:                                       ; preds = %lor.lhs.false354, %lor.lhs.false349, %cond.false344, %cond.true339
  %218 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15514
  %call360 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %218, i32 1, i32 1), !dbg !15516
  store %struct.Nurb* %call360, %struct.Nurb** %nu1, align 8, !dbg !15517
  %219 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !15518
  %220 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15519
  %bezt361 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %220, i32 0, i32 18, !dbg !15520
  %221 = load %struct.BezTriple*, %struct.BezTriple** %bezt361, align 8, !dbg !15520
  %222 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !15521
  call void @ED_curve_beztcpy(%struct.EditNurb* %219, %struct.BezTriple* %221, %struct.BezTriple* %222, i32 1), !dbg !15522
  %223 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15523
  %224 = bitcast %struct.Nurb* %223 to i8*, !dbg !15523
  call void @BLI_addtail(%struct.ListBase* %newnurb, i8* %224), !dbg !15524
  br label %if.end362, !dbg !15525

if.end362:                                        ; preds = %if.then359, %lor.lhs.false354, %cond.true339, %lor.lhs.false329, %cond.true314
  %225 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15526
  %bezt363 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %225, i32 0, i32 18, !dbg !15527
  %226 = load %struct.BezTriple*, %struct.BezTriple** %bezt363, align 8, !dbg !15527
  %227 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15528
  %pntsu364 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %227, i32 0, i32 6, !dbg !15529
  %228 = load i32, i32* %pntsu364, align 8, !dbg !15529
  %sub365 = sub nsw i32 %228, 1, !dbg !15530
  %idxprom366 = sext i32 %sub365 to i64, !dbg !15526
  %arrayidx367 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %226, i64 %idxprom366, !dbg !15526
  store %struct.BezTriple* %arrayidx367, %struct.BezTriple** %bezt1, align 8, !dbg !15531
  %229 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15532
  %bezt368 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %229, i32 0, i32 18, !dbg !15533
  %230 = load %struct.BezTriple*, %struct.BezTriple** %bezt368, align 8, !dbg !15533
  %231 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15534
  %pntsu369 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %231, i32 0, i32 6, !dbg !15535
  %232 = load i32, i32* %pntsu369, align 8, !dbg !15535
  %sub370 = sub nsw i32 %232, 2, !dbg !15536
  %idxprom371 = sext i32 %sub370 to i64, !dbg !15532
  %arrayidx372 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %230, i64 %idxprom371, !dbg !15532
  store %struct.BezTriple* %arrayidx372, %struct.BezTriple** %bezt2, align 8, !dbg !15537
  %233 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15538
  %drawflag373 = getelementptr inbounds %struct.Curve, %struct.Curve* %233, i32 0, i32 16, !dbg !15538
  %234 = load i16, i16* %drawflag373, align 8, !dbg !15538
  %conv374 = sext i16 %234 to i32, !dbg !15538
  %and375 = and i32 %conv374, 1, !dbg !15538
  %tobool376 = icmp ne i32 %and375, 0, !dbg !15538
  br i1 %tobool376, label %cond.true377, label %cond.false382, !dbg !15540

cond.true377:                                     ; preds = %if.end362
  %235 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !15538
  %f2378 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %235, i32 0, i32 8, !dbg !15538
  %236 = load i8, i8* %f2378, align 4, !dbg !15538
  %conv379 = zext i8 %236 to i32, !dbg !15538
  %and380 = and i32 %conv379, 1, !dbg !15538
  %tobool381 = icmp ne i32 %and380, 0, !dbg !15538
  br i1 %tobool381, label %land.lhs.true397, label %if.end425, !dbg !15538

cond.false382:                                    ; preds = %if.end362
  %237 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !15538
  %f2383 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %237, i32 0, i32 8, !dbg !15538
  %238 = load i8, i8* %f2383, align 4, !dbg !15538
  %conv384 = zext i8 %238 to i32, !dbg !15538
  %and385 = and i32 %conv384, 1, !dbg !15538
  %tobool386 = icmp ne i32 %and385, 0, !dbg !15538
  br i1 %tobool386, label %land.lhs.true397, label %lor.lhs.false387, !dbg !15538

lor.lhs.false387:                                 ; preds = %cond.false382
  %239 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !15538
  %f1388 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %239, i32 0, i32 7, !dbg !15538
  %240 = load i8, i8* %f1388, align 1, !dbg !15538
  %conv389 = zext i8 %240 to i32, !dbg !15538
  %and390 = and i32 %conv389, 1, !dbg !15538
  %tobool391 = icmp ne i32 %and390, 0, !dbg !15538
  br i1 %tobool391, label %land.lhs.true397, label %lor.lhs.false392, !dbg !15538

lor.lhs.false392:                                 ; preds = %lor.lhs.false387
  %241 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !15538
  %f3393 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %241, i32 0, i32 9, !dbg !15538
  %242 = load i8, i8* %f3393, align 1, !dbg !15538
  %conv394 = zext i8 %242 to i32, !dbg !15538
  %and395 = and i32 %conv394, 1, !dbg !15538
  %tobool396 = icmp ne i32 %and395, 0, !dbg !15538
  br i1 %tobool396, label %land.lhs.true397, label %if.end425, !dbg !15540

land.lhs.true397:                                 ; preds = %lor.lhs.false392, %lor.lhs.false387, %cond.false382, %cond.true377
  %243 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15541
  %drawflag398 = getelementptr inbounds %struct.Curve, %struct.Curve* %243, i32 0, i32 16, !dbg !15541
  %244 = load i16, i16* %drawflag398, align 8, !dbg !15541
  %conv399 = sext i16 %244 to i32, !dbg !15541
  %and400 = and i32 %conv399, 1, !dbg !15541
  %tobool401 = icmp ne i32 %and400, 0, !dbg !15541
  br i1 %tobool401, label %cond.true402, label %cond.false407, !dbg !15542

cond.true402:                                     ; preds = %land.lhs.true397
  %245 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !15541
  %f2403 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %245, i32 0, i32 8, !dbg !15541
  %246 = load i8, i8* %f2403, align 4, !dbg !15541
  %conv404 = zext i8 %246 to i32, !dbg !15541
  %and405 = and i32 %conv404, 1, !dbg !15541
  %tobool406 = icmp ne i32 %and405, 0, !dbg !15541
  br i1 %tobool406, label %if.then422, label %if.end425, !dbg !15541

cond.false407:                                    ; preds = %land.lhs.true397
  %247 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !15541
  %f2408 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %247, i32 0, i32 8, !dbg !15541
  %248 = load i8, i8* %f2408, align 4, !dbg !15541
  %conv409 = zext i8 %248 to i32, !dbg !15541
  %and410 = and i32 %conv409, 1, !dbg !15541
  %tobool411 = icmp ne i32 %and410, 0, !dbg !15541
  br i1 %tobool411, label %if.then422, label %lor.lhs.false412, !dbg !15541

lor.lhs.false412:                                 ; preds = %cond.false407
  %249 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !15541
  %f1413 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %249, i32 0, i32 7, !dbg !15541
  %250 = load i8, i8* %f1413, align 1, !dbg !15541
  %conv414 = zext i8 %250 to i32, !dbg !15541
  %and415 = and i32 %conv414, 1, !dbg !15541
  %tobool416 = icmp ne i32 %and415, 0, !dbg !15541
  br i1 %tobool416, label %if.then422, label %lor.lhs.false417, !dbg !15541

lor.lhs.false417:                                 ; preds = %lor.lhs.false412
  %251 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !15541
  %f3418 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %251, i32 0, i32 9, !dbg !15541
  %252 = load i8, i8* %f3418, align 1, !dbg !15541
  %conv419 = zext i8 %252 to i32, !dbg !15541
  %and420 = and i32 %conv419, 1, !dbg !15541
  %tobool421 = icmp ne i32 %and420, 0, !dbg !15541
  br i1 %tobool421, label %if.then422, label %if.end425, !dbg !15542

if.then422:                                       ; preds = %lor.lhs.false417, %lor.lhs.false412, %cond.false407, %cond.true402
  %253 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15543
  %call423 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %253, i32 1, i32 1), !dbg !15545
  store %struct.Nurb* %call423, %struct.Nurb** %nu1, align 8, !dbg !15546
  %254 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !15547
  %255 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15548
  %bezt424 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %255, i32 0, i32 18, !dbg !15549
  %256 = load %struct.BezTriple*, %struct.BezTriple** %bezt424, align 8, !dbg !15549
  %257 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !15550
  call void @ED_curve_beztcpy(%struct.EditNurb* %254, %struct.BezTriple* %256, %struct.BezTriple* %257, i32 1), !dbg !15551
  %258 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15552
  %259 = bitcast %struct.Nurb* %258 to i8*, !dbg !15552
  call void @BLI_addtail(%struct.ListBase* %newnurb, i8* %259), !dbg !15553
  br label %if.end425, !dbg !15554

if.end425:                                        ; preds = %if.then422, %lor.lhs.false417, %cond.true402, %lor.lhs.false392, %cond.true377
  br label %if.end426, !dbg !15555

if.end426:                                        ; preds = %if.end425, %land.lhs.true301, %land.lhs.true297, %land.lhs.true294, %for.end
  br label %if.end1097, !dbg !15556

if.else427:                                       ; preds = %for.body
  %260 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15557
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %260, i32 0, i32 7, !dbg !15559
  %261 = load i32, i32* %pntsv, align 4, !dbg !15559
  %cmp428 = icmp sge i32 %261, 1, !dbg !15560
  br i1 %cmp428, label %if.then430, label %if.end1096, !dbg !15561

if.then430:                                       ; preds = %if.else427
  call void @llvm.dbg.declare(metadata i32* %u, metadata !15562, metadata !DIExpression()), !dbg !15564
  call void @llvm.dbg.declare(metadata i32* %v, metadata !15565, metadata !DIExpression()), !dbg !15566
  %262 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15567
  %call431 = call zeroext i8 @isNurbselV(%struct.Nurb* %262, i32* %u, i32 1), !dbg !15569
  %tobool432 = icmp ne i8 %call431, 0, !dbg !15569
  br i1 %tobool432, label %if.then433, label %if.else781, !dbg !15570

if.then433:                                       ; preds = %if.then430
  store i32 0, i32* %a, align 4, !dbg !15571
  %263 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15574
  %bp434 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %263, i32 0, i32 17, !dbg !15575
  %264 = load %struct.BPoint*, %struct.BPoint** %bp434, align 8, !dbg !15575
  store %struct.BPoint* %264, %struct.BPoint** %bp, align 8, !dbg !15576
  br label %for.cond435, !dbg !15577

for.cond435:                                      ; preds = %for.inc688, %if.then433
  %265 = load i32, i32* %a, align 4, !dbg !15578
  %266 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15580
  %pntsu436 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %266, i32 0, i32 6, !dbg !15581
  %267 = load i32, i32* %pntsu436, align 8, !dbg !15581
  %cmp437 = icmp slt i32 %265, %267, !dbg !15582
  br i1 %cmp437, label %for.body439, label %for.end691, !dbg !15583

for.body439:                                      ; preds = %for.cond435
  %268 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !15584
  %f1440 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %268, i32 0, i32 3, !dbg !15587
  %269 = load i16, i16* %f1440, align 4, !dbg !15587
  %conv441 = sext i16 %269 to i32, !dbg !15584
  %and442 = and i32 %conv441, 1, !dbg !15588
  %tobool443 = icmp ne i32 %and442, 0, !dbg !15588
  br i1 %tobool443, label %if.else455, label %if.then444, !dbg !15589

if.then444:                                       ; preds = %for.body439
  %270 = load i32, i32* %a, align 4, !dbg !15590
  store i32 %270, i32* %enda, align 4, !dbg !15592
  %271 = load i32, i32* %starta, align 4, !dbg !15593
  %cmp445 = icmp eq i32 %271, -1, !dbg !15595
  br i1 %cmp445, label %if.then447, label %if.end448, !dbg !15596

if.then447:                                       ; preds = %if.then444
  %272 = load i32, i32* %a, align 4, !dbg !15597
  store i32 %272, i32* %starta, align 4, !dbg !15598
  br label %if.end448, !dbg !15599

if.end448:                                        ; preds = %if.then447, %if.then444
  %273 = load i32, i32* %a, align 4, !dbg !15600
  %274 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15602
  %pntsu449 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %274, i32 0, i32 6, !dbg !15603
  %275 = load i32, i32* %pntsu449, align 8, !dbg !15603
  %sub450 = sub nsw i32 %275, 1, !dbg !15604
  %cmp451 = icmp slt i32 %273, %sub450, !dbg !15605
  br i1 %cmp451, label %if.then453, label %if.end454, !dbg !15606

if.then453:                                       ; preds = %if.end448
  br label %for.inc688, !dbg !15607

if.end454:                                        ; preds = %if.end448
  br label %if.end468, !dbg !15608

if.else455:                                       ; preds = %for.body439
  %276 = load i32, i32* %a, align 4, !dbg !15609
  %277 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15611
  %pntsu456 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %277, i32 0, i32 6, !dbg !15612
  %278 = load i32, i32* %pntsu456, align 8, !dbg !15612
  %sub457 = sub nsw i32 %278, 1, !dbg !15613
  %cmp458 = icmp slt i32 %276, %sub457, !dbg !15614
  br i1 %cmp458, label %land.lhs.true460, label %if.end467, !dbg !15615

land.lhs.true460:                                 ; preds = %if.else455
  %279 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !15616
  %add.ptr461 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %279, i64 1, !dbg !15617
  %f1462 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr461, i32 0, i32 3, !dbg !15618
  %280 = load i16, i16* %f1462, align 4, !dbg !15618
  %conv463 = sext i16 %280 to i32, !dbg !15619
  %and464 = and i32 %conv463, 1, !dbg !15620
  %tobool465 = icmp ne i32 %and464, 0, !dbg !15620
  br i1 %tobool465, label %if.end467, label %if.then466, !dbg !15621

if.then466:                                       ; preds = %land.lhs.true460
  br label %for.inc688, !dbg !15622

if.end467:                                        ; preds = %land.lhs.true460, %if.else455
  br label %if.end468

if.end468:                                        ; preds = %if.end467, %if.end454
  %281 = load i32, i32* %starta, align 4, !dbg !15624
  %cmp469 = icmp sge i32 %281, 0, !dbg !15626
  br i1 %cmp469, label %if.then471, label %if.end687, !dbg !15627

if.then471:                                       ; preds = %if.end468
  %282 = load i32, i32* %starta, align 4, !dbg !15628
  %cmp472 = icmp sle i32 %282, 1, !dbg !15631
  br i1 %cmp472, label %land.lhs.true474, label %if.else495, !dbg !15632

land.lhs.true474:                                 ; preds = %if.then471
  %283 = load i32, i32* %a, align 4, !dbg !15633
  %284 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15634
  %pntsu475 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %284, i32 0, i32 6, !dbg !15635
  %285 = load i32, i32* %pntsu475, align 8, !dbg !15635
  %sub476 = sub nsw i32 %285, 1, !dbg !15636
  %cmp477 = icmp eq i32 %283, %sub476, !dbg !15637
  br i1 %cmp477, label %if.then479, label %if.else495, !dbg !15638

if.then479:                                       ; preds = %land.lhs.true474
  %286 = load i32, i32* %starta, align 4, !dbg !15639
  %cmp480 = icmp eq i32 %286, 1, !dbg !15642
  br i1 %cmp480, label %land.lhs.true482, label %if.end490, !dbg !15643

land.lhs.true482:                                 ; preds = %if.then479
  %287 = load i32, i32* %enda, align 4, !dbg !15644
  %288 = load i32, i32* %a, align 4, !dbg !15645
  %cmp483 = icmp ne i32 %287, %288, !dbg !15646
  br i1 %cmp483, label %if.then485, label %if.end490, !dbg !15647

if.then485:                                       ; preds = %land.lhs.true482
  %289 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15648
  %flagu486 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %289, i32 0, i32 13, !dbg !15649
  %290 = load i16, i16* %flagu486, align 4, !dbg !15650
  %conv487 = sext i16 %290 to i32, !dbg !15650
  %and488 = and i32 %conv487, -2, !dbg !15650
  %conv489 = trunc i32 %and488 to i16, !dbg !15650
  store i16 %conv489, i16* %flagu486, align 4, !dbg !15650
  br label %if.end490, !dbg !15648

if.end490:                                        ; preds = %if.then485, %land.lhs.true482, %if.then479
  store i32 0, i32* %starta, align 4, !dbg !15651
  %291 = load i32, i32* %a, align 4, !dbg !15652
  store i32 %291, i32* %enda, align 4, !dbg !15653
  %292 = load i32, i32* %enda, align 4, !dbg !15654
  %293 = load i32, i32* %starta, align 4, !dbg !15655
  %sub491 = sub nsw i32 %292, %293, !dbg !15656
  %add492 = add nsw i32 %sub491, 1, !dbg !15657
  store i32 %add492, i32* %cut, align 4, !dbg !15658
  %294 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15659
  %295 = load i32, i32* %cut, align 4, !dbg !15660
  %296 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15661
  %pntsv493 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %296, i32 0, i32 7, !dbg !15662
  %297 = load i32, i32* %pntsv493, align 4, !dbg !15662
  %call494 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %294, i32 %295, i32 %297), !dbg !15663
  store %struct.Nurb* %call494, %struct.Nurb** %nu1, align 8, !dbg !15664
  br label %if.end650, !dbg !15665

if.else495:                                       ; preds = %land.lhs.true474, %if.then471
  %298 = load i32, i32* %starta, align 4, !dbg !15666
  %cmp496 = icmp eq i32 %298, 0, !dbg !15668
  br i1 %cmp496, label %if.then498, label %if.else561, !dbg !15669

if.then498:                                       ; preds = %if.else495
  %299 = load i32, i32* %enda, align 4, !dbg !15670
  %inc499 = add nsw i32 %299, 1, !dbg !15670
  store i32 %inc499, i32* %enda, align 4, !dbg !15670
  %300 = load i32, i32* %enda, align 4, !dbg !15672
  %301 = load i32, i32* %starta, align 4, !dbg !15673
  %sub500 = sub nsw i32 %300, %301, !dbg !15674
  %add501 = add nsw i32 %sub500, 1, !dbg !15675
  store i32 %add501, i32* %cut, align 4, !dbg !15676
  %302 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15677
  %bp502 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %302, i32 0, i32 17, !dbg !15678
  %303 = load %struct.BPoint*, %struct.BPoint** %bp502, align 8, !dbg !15678
  %304 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15679
  %pntsu503 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %304, i32 0, i32 6, !dbg !15680
  %305 = load i32, i32* %pntsu503, align 8, !dbg !15680
  %sub504 = sub nsw i32 %305, 1, !dbg !15681
  %idxprom505 = sext i32 %sub504 to i64, !dbg !15677
  %arrayidx506 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %303, i64 %idxprom505, !dbg !15677
  store %struct.BPoint* %arrayidx506, %struct.BPoint** %bp1, align 8, !dbg !15682
  %306 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15683
  %bp507 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %306, i32 0, i32 17, !dbg !15684
  %307 = load %struct.BPoint*, %struct.BPoint** %bp507, align 8, !dbg !15684
  %308 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15685
  %pntsu508 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %308, i32 0, i32 6, !dbg !15686
  %309 = load i32, i32* %pntsu508, align 8, !dbg !15686
  %sub509 = sub nsw i32 %309, 2, !dbg !15687
  %idxprom510 = sext i32 %sub509 to i64, !dbg !15683
  %arrayidx511 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %307, i64 %idxprom510, !dbg !15683
  store %struct.BPoint* %arrayidx511, %struct.BPoint** %bp2, align 8, !dbg !15688
  %310 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15689
  %flagu512 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %310, i32 0, i32 13, !dbg !15691
  %311 = load i16, i16* %flagu512, align 4, !dbg !15691
  %conv513 = sext i16 %311 to i32, !dbg !15689
  %and514 = and i32 %conv513, 1, !dbg !15692
  %tobool515 = icmp ne i32 %and514, 0, !dbg !15692
  br i1 %tobool515, label %land.lhs.true516, label %if.else550, !dbg !15693

land.lhs.true516:                                 ; preds = %if.then498
  %312 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !15694
  %f1517 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %312, i32 0, i32 3, !dbg !15695
  %313 = load i16, i16* %f1517, align 4, !dbg !15695
  %conv518 = sext i16 %313 to i32, !dbg !15694
  %and519 = and i32 %conv518, 1, !dbg !15696
  %tobool520 = icmp ne i32 %and519, 0, !dbg !15696
  br i1 %tobool520, label %land.lhs.true521, label %if.else550, !dbg !15697

land.lhs.true521:                                 ; preds = %land.lhs.true516
  %314 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !15698
  %f1522 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %314, i32 0, i32 3, !dbg !15699
  %315 = load i16, i16* %f1522, align 4, !dbg !15699
  %conv523 = sext i16 %315 to i32, !dbg !15698
  %and524 = and i32 %conv523, 1, !dbg !15700
  %tobool525 = icmp ne i32 %and524, 0, !dbg !15700
  br i1 %tobool525, label %if.then526, label %if.else550, !dbg !15701

if.then526:                                       ; preds = %land.lhs.true521
  %316 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15702
  %317 = load i32, i32* %cut, align 4, !dbg !15704
  %add527 = add nsw i32 %317, 1, !dbg !15705
  %318 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15706
  %pntsv528 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %318, i32 0, i32 7, !dbg !15707
  %319 = load i32, i32* %pntsv528, align 4, !dbg !15707
  %call529 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %316, i32 %add527, i32 %319), !dbg !15708
  store %struct.Nurb* %call529, %struct.Nurb** %nu1, align 8, !dbg !15709
  store i32 0, i32* %b, align 4, !dbg !15710
  br label %for.cond530, !dbg !15712

for.cond530:                                      ; preds = %for.inc545, %if.then526
  %320 = load i32, i32* %b, align 4, !dbg !15713
  %321 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15715
  %pntsv531 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %321, i32 0, i32 7, !dbg !15716
  %322 = load i32, i32* %pntsv531, align 4, !dbg !15716
  %cmp532 = icmp slt i32 %320, %322, !dbg !15717
  br i1 %cmp532, label %for.body534, label %for.end547, !dbg !15718

for.body534:                                      ; preds = %for.cond530
  %323 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !15719
  %324 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15721
  %bp535 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %324, i32 0, i32 17, !dbg !15722
  %325 = load %struct.BPoint*, %struct.BPoint** %bp535, align 8, !dbg !15722
  %326 = load i32, i32* %b, align 4, !dbg !15723
  %327 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15724
  %pntsu536 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %327, i32 0, i32 6, !dbg !15725
  %328 = load i32, i32* %pntsu536, align 8, !dbg !15725
  %mul = mul nsw i32 %326, %328, !dbg !15726
  %add537 = add nsw i32 %mul, 1, !dbg !15727
  %idxprom538 = sext i32 %add537 to i64, !dbg !15721
  %arrayidx539 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %325, i64 %idxprom538, !dbg !15721
  %329 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15728
  %bp540 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %329, i32 0, i32 17, !dbg !15729
  %330 = load %struct.BPoint*, %struct.BPoint** %bp540, align 8, !dbg !15729
  %331 = load i32, i32* %b, align 4, !dbg !15730
  %332 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15731
  %pntsu541 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %332, i32 0, i32 6, !dbg !15732
  %333 = load i32, i32* %pntsu541, align 8, !dbg !15732
  %mul542 = mul nsw i32 %331, %333, !dbg !15733
  %idxprom543 = sext i32 %mul542 to i64, !dbg !15728
  %arrayidx544 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %330, i64 %idxprom543, !dbg !15728
  %334 = load i32, i32* %cut, align 4, !dbg !15734
  call void @ED_curve_bpcpy(%struct.EditNurb* %323, %struct.BPoint* %arrayidx539, %struct.BPoint* %arrayidx544, i32 %334), !dbg !15735
  br label %for.inc545, !dbg !15736

for.inc545:                                       ; preds = %for.body534
  %335 = load i32, i32* %b, align 4, !dbg !15737
  %inc546 = add nsw i32 %335, 1, !dbg !15737
  store i32 %inc546, i32* %b, align 4, !dbg !15737
  br label %for.cond530, !dbg !15738, !llvm.loop !15739

for.end547:                                       ; preds = %for.cond530
  %336 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15741
  %pntsu548 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %336, i32 0, i32 6, !dbg !15742
  %337 = load i32, i32* %pntsu548, align 8, !dbg !15742
  %sub549 = sub nsw i32 %337, 1, !dbg !15743
  store i32 %sub549, i32* %starta, align 4, !dbg !15744
  store i32 1, i32* %cut, align 4, !dbg !15745
  br label %if.end560, !dbg !15746

if.else550:                                       ; preds = %land.lhs.true521, %land.lhs.true516, %if.then498
  %338 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15747
  %flagu551 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %338, i32 0, i32 13, !dbg !15750
  %339 = load i16, i16* %flagu551, align 4, !dbg !15750
  %conv552 = sext i16 %339 to i32, !dbg !15747
  %and553 = and i32 %conv552, 1, !dbg !15751
  %tobool554 = icmp ne i32 %and553, 0, !dbg !15751
  br i1 %tobool554, label %if.then555, label %if.else556, !dbg !15752

if.then555:                                       ; preds = %if.else550
  %340 = load i32, i32* %cut, align 4, !dbg !15753
  store i32 %340, i32* %cyclicut, align 4, !dbg !15754
  br label %if.end559, !dbg !15755

if.else556:                                       ; preds = %if.else550
  %341 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15756
  %342 = load i32, i32* %cut, align 4, !dbg !15757
  %343 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15758
  %pntsv557 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %343, i32 0, i32 7, !dbg !15759
  %344 = load i32, i32* %pntsv557, align 4, !dbg !15759
  %call558 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %341, i32 %342, i32 %344), !dbg !15760
  store %struct.Nurb* %call558, %struct.Nurb** %nu1, align 8, !dbg !15761
  br label %if.end559

if.end559:                                        ; preds = %if.else556, %if.then555
  br label %if.end560

if.end560:                                        ; preds = %if.end559, %for.end547
  br label %if.end649, !dbg !15762

if.else561:                                       ; preds = %if.else495
  %345 = load i32, i32* %enda, align 4, !dbg !15763
  %346 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15765
  %pntsu562 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %346, i32 0, i32 6, !dbg !15766
  %347 = load i32, i32* %pntsu562, align 8, !dbg !15766
  %sub563 = sub nsw i32 %347, 1, !dbg !15767
  %cmp564 = icmp eq i32 %345, %sub563, !dbg !15768
  br i1 %cmp564, label %if.then566, label %if.else641, !dbg !15769

if.then566:                                       ; preds = %if.else561
  %348 = load i32, i32* %starta, align 4, !dbg !15770
  %dec567 = add nsw i32 %348, -1, !dbg !15770
  store i32 %dec567, i32* %starta, align 4, !dbg !15770
  %349 = load i32, i32* %enda, align 4, !dbg !15772
  %350 = load i32, i32* %starta, align 4, !dbg !15773
  %sub568 = sub nsw i32 %349, %350, !dbg !15774
  %add569 = add nsw i32 %sub568, 1, !dbg !15775
  store i32 %add569, i32* %cut, align 4, !dbg !15776
  %351 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15777
  %bp570 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %351, i32 0, i32 17, !dbg !15778
  %352 = load %struct.BPoint*, %struct.BPoint** %bp570, align 8, !dbg !15778
  store %struct.BPoint* %352, %struct.BPoint** %bp1, align 8, !dbg !15779
  %353 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15780
  %bp571 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %353, i32 0, i32 17, !dbg !15781
  %354 = load %struct.BPoint*, %struct.BPoint** %bp571, align 8, !dbg !15781
  %arrayidx572 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %354, i64 1, !dbg !15780
  store %struct.BPoint* %arrayidx572, %struct.BPoint** %bp2, align 8, !dbg !15782
  %355 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15783
  %flagu573 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %355, i32 0, i32 13, !dbg !15785
  %356 = load i16, i16* %flagu573, align 4, !dbg !15785
  %conv574 = sext i16 %356 to i32, !dbg !15783
  %and575 = and i32 %conv574, 1, !dbg !15786
  %tobool576 = icmp ne i32 %and575, 0, !dbg !15786
  br i1 %tobool576, label %land.lhs.true577, label %if.else610, !dbg !15787

land.lhs.true577:                                 ; preds = %if.then566
  %357 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !15788
  %f1578 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %357, i32 0, i32 3, !dbg !15789
  %358 = load i16, i16* %f1578, align 4, !dbg !15789
  %conv579 = sext i16 %358 to i32, !dbg !15788
  %and580 = and i32 %conv579, 1, !dbg !15790
  %tobool581 = icmp ne i32 %and580, 0, !dbg !15790
  br i1 %tobool581, label %land.lhs.true582, label %if.else610, !dbg !15791

land.lhs.true582:                                 ; preds = %land.lhs.true577
  %359 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !15792
  %f1583 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %359, i32 0, i32 3, !dbg !15793
  %360 = load i16, i16* %f1583, align 4, !dbg !15793
  %conv584 = sext i16 %360 to i32, !dbg !15792
  %and585 = and i32 %conv584, 1, !dbg !15794
  %tobool586 = icmp ne i32 %and585, 0, !dbg !15794
  br i1 %tobool586, label %if.then587, label %if.else610, !dbg !15795

if.then587:                                       ; preds = %land.lhs.true582
  %361 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15796
  %362 = load i32, i32* %cut, align 4, !dbg !15798
  %add588 = add nsw i32 %362, 1, !dbg !15799
  %363 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15800
  %pntsv589 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %363, i32 0, i32 7, !dbg !15801
  %364 = load i32, i32* %pntsv589, align 4, !dbg !15801
  %call590 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %361, i32 %add588, i32 %364), !dbg !15802
  store %struct.Nurb* %call590, %struct.Nurb** %nu1, align 8, !dbg !15803
  store i32 0, i32* %b, align 4, !dbg !15804
  br label %for.cond591, !dbg !15806

for.cond591:                                      ; preds = %for.inc607, %if.then587
  %365 = load i32, i32* %b, align 4, !dbg !15807
  %366 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15809
  %pntsv592 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %366, i32 0, i32 7, !dbg !15810
  %367 = load i32, i32* %pntsv592, align 4, !dbg !15810
  %cmp593 = icmp slt i32 %365, %367, !dbg !15811
  br i1 %cmp593, label %for.body595, label %for.end609, !dbg !15812

for.body595:                                      ; preds = %for.cond591
  %368 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !15813
  %369 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15815
  %bp596 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %369, i32 0, i32 17, !dbg !15816
  %370 = load %struct.BPoint*, %struct.BPoint** %bp596, align 8, !dbg !15816
  %371 = load i32, i32* %b, align 4, !dbg !15817
  %372 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15818
  %pntsu597 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %372, i32 0, i32 6, !dbg !15819
  %373 = load i32, i32* %pntsu597, align 8, !dbg !15819
  %mul598 = mul nsw i32 %371, %373, !dbg !15820
  %374 = load i32, i32* %cut, align 4, !dbg !15821
  %add599 = add nsw i32 %mul598, %374, !dbg !15822
  %idxprom600 = sext i32 %add599 to i64, !dbg !15815
  %arrayidx601 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %370, i64 %idxprom600, !dbg !15815
  %375 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15823
  %bp602 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %375, i32 0, i32 17, !dbg !15824
  %376 = load %struct.BPoint*, %struct.BPoint** %bp602, align 8, !dbg !15824
  %377 = load i32, i32* %b, align 4, !dbg !15825
  %378 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15826
  %pntsu603 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %378, i32 0, i32 6, !dbg !15827
  %379 = load i32, i32* %pntsu603, align 8, !dbg !15827
  %mul604 = mul nsw i32 %377, %379, !dbg !15828
  %idxprom605 = sext i32 %mul604 to i64, !dbg !15823
  %arrayidx606 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %376, i64 %idxprom605, !dbg !15823
  call void @ED_curve_bpcpy(%struct.EditNurb* %368, %struct.BPoint* %arrayidx601, %struct.BPoint* %arrayidx606, i32 1), !dbg !15829
  br label %for.inc607, !dbg !15830

for.inc607:                                       ; preds = %for.body595
  %380 = load i32, i32* %b, align 4, !dbg !15831
  %inc608 = add nsw i32 %380, 1, !dbg !15831
  store i32 %inc608, i32* %b, align 4, !dbg !15831
  br label %for.cond591, !dbg !15832, !llvm.loop !15833

for.end609:                                       ; preds = %for.cond591
  br label %if.end640, !dbg !15835

if.else610:                                       ; preds = %land.lhs.true582, %land.lhs.true577, %if.then566
  %381 = load i32, i32* %cyclicut, align 4, !dbg !15836
  %cmp611 = icmp ne i32 %381, 0, !dbg !15838
  br i1 %cmp611, label %if.then613, label %if.else636, !dbg !15839

if.then613:                                       ; preds = %if.else610
  %382 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15840
  %383 = load i32, i32* %cut, align 4, !dbg !15842
  %384 = load i32, i32* %cyclicut, align 4, !dbg !15843
  %add614 = add nsw i32 %383, %384, !dbg !15844
  %385 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15845
  %pntsv615 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %385, i32 0, i32 7, !dbg !15846
  %386 = load i32, i32* %pntsv615, align 4, !dbg !15846
  %call616 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %382, i32 %add614, i32 %386), !dbg !15847
  store %struct.Nurb* %call616, %struct.Nurb** %nu1, align 8, !dbg !15848
  store i32 0, i32* %b, align 4, !dbg !15849
  br label %for.cond617, !dbg !15851

for.cond617:                                      ; preds = %for.inc633, %if.then613
  %387 = load i32, i32* %b, align 4, !dbg !15852
  %388 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15854
  %pntsv618 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %388, i32 0, i32 7, !dbg !15855
  %389 = load i32, i32* %pntsv618, align 4, !dbg !15855
  %cmp619 = icmp slt i32 %387, %389, !dbg !15856
  br i1 %cmp619, label %for.body621, label %for.end635, !dbg !15857

for.body621:                                      ; preds = %for.cond617
  %390 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !15858
  %391 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15860
  %bp622 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %391, i32 0, i32 17, !dbg !15861
  %392 = load %struct.BPoint*, %struct.BPoint** %bp622, align 8, !dbg !15861
  %393 = load i32, i32* %b, align 4, !dbg !15862
  %394 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15863
  %pntsu623 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %394, i32 0, i32 6, !dbg !15864
  %395 = load i32, i32* %pntsu623, align 8, !dbg !15864
  %mul624 = mul nsw i32 %393, %395, !dbg !15865
  %396 = load i32, i32* %cut, align 4, !dbg !15866
  %add625 = add nsw i32 %mul624, %396, !dbg !15867
  %idxprom626 = sext i32 %add625 to i64, !dbg !15860
  %arrayidx627 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %392, i64 %idxprom626, !dbg !15860
  %397 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15868
  %bp628 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %397, i32 0, i32 17, !dbg !15869
  %398 = load %struct.BPoint*, %struct.BPoint** %bp628, align 8, !dbg !15869
  %399 = load i32, i32* %b, align 4, !dbg !15870
  %400 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15871
  %pntsu629 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %400, i32 0, i32 6, !dbg !15872
  %401 = load i32, i32* %pntsu629, align 8, !dbg !15872
  %mul630 = mul nsw i32 %399, %401, !dbg !15873
  %idxprom631 = sext i32 %mul630 to i64, !dbg !15868
  %arrayidx632 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %398, i64 %idxprom631, !dbg !15868
  %402 = load i32, i32* %cyclicut, align 4, !dbg !15874
  call void @ED_curve_bpcpy(%struct.EditNurb* %390, %struct.BPoint* %arrayidx627, %struct.BPoint* %arrayidx632, i32 %402), !dbg !15875
  br label %for.inc633, !dbg !15876

for.inc633:                                       ; preds = %for.body621
  %403 = load i32, i32* %b, align 4, !dbg !15877
  %inc634 = add nsw i32 %403, 1, !dbg !15877
  store i32 %inc634, i32* %b, align 4, !dbg !15877
  br label %for.cond617, !dbg !15878, !llvm.loop !15879

for.end635:                                       ; preds = %for.cond617
  br label %if.end639, !dbg !15881

if.else636:                                       ; preds = %if.else610
  %404 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15882
  %405 = load i32, i32* %cut, align 4, !dbg !15884
  %406 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15885
  %pntsv637 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %406, i32 0, i32 7, !dbg !15886
  %407 = load i32, i32* %pntsv637, align 4, !dbg !15886
  %call638 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %404, i32 %405, i32 %407), !dbg !15887
  store %struct.Nurb* %call638, %struct.Nurb** %nu1, align 8, !dbg !15888
  br label %if.end639

if.end639:                                        ; preds = %if.else636, %for.end635
  br label %if.end640

if.end640:                                        ; preds = %if.end639, %for.end609
  br label %if.end648, !dbg !15889

if.else641:                                       ; preds = %if.else561
  %408 = load i32, i32* %starta, align 4, !dbg !15890
  %dec642 = add nsw i32 %408, -1, !dbg !15890
  store i32 %dec642, i32* %starta, align 4, !dbg !15890
  %409 = load i32, i32* %enda, align 4, !dbg !15892
  %inc643 = add nsw i32 %409, 1, !dbg !15892
  store i32 %inc643, i32* %enda, align 4, !dbg !15892
  %410 = load i32, i32* %enda, align 4, !dbg !15893
  %411 = load i32, i32* %starta, align 4, !dbg !15894
  %sub644 = sub nsw i32 %410, %411, !dbg !15895
  %add645 = add nsw i32 %sub644, 1, !dbg !15896
  store i32 %add645, i32* %cut, align 4, !dbg !15897
  %412 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15898
  %413 = load i32, i32* %cut, align 4, !dbg !15899
  %414 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15900
  %pntsv646 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %414, i32 0, i32 7, !dbg !15901
  %415 = load i32, i32* %pntsv646, align 4, !dbg !15901
  %call647 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %412, i32 %413, i32 %415), !dbg !15902
  store %struct.Nurb* %call647, %struct.Nurb** %nu1, align 8, !dbg !15903
  br label %if.end648

if.end648:                                        ; preds = %if.else641, %if.end640
  br label %if.end649

if.end649:                                        ; preds = %if.end648, %if.end560
  br label %if.end650

if.end650:                                        ; preds = %if.end649, %if.end490
  %416 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15904
  %cmp651 = icmp ne %struct.Nurb* %416, null, !dbg !15906
  br i1 %cmp651, label %if.then653, label %if.end686, !dbg !15907

if.then653:                                       ; preds = %if.end650
  store i32 0, i32* %b, align 4, !dbg !15908
  br label %for.cond654, !dbg !15911

for.cond654:                                      ; preds = %for.inc670, %if.then653
  %417 = load i32, i32* %b, align 4, !dbg !15912
  %418 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15914
  %pntsv655 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %418, i32 0, i32 7, !dbg !15915
  %419 = load i32, i32* %pntsv655, align 4, !dbg !15915
  %cmp656 = icmp slt i32 %417, %419, !dbg !15916
  br i1 %cmp656, label %for.body658, label %for.end672, !dbg !15917

for.body658:                                      ; preds = %for.cond654
  %420 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !15918
  %421 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15920
  %bp659 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %421, i32 0, i32 17, !dbg !15921
  %422 = load %struct.BPoint*, %struct.BPoint** %bp659, align 8, !dbg !15921
  %423 = load i32, i32* %b, align 4, !dbg !15922
  %424 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15923
  %pntsu660 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %424, i32 0, i32 6, !dbg !15924
  %425 = load i32, i32* %pntsu660, align 8, !dbg !15924
  %mul661 = mul nsw i32 %423, %425, !dbg !15925
  %idxprom662 = sext i32 %mul661 to i64, !dbg !15920
  %arrayidx663 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %422, i64 %idxprom662, !dbg !15920
  %426 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15926
  %bp664 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %426, i32 0, i32 17, !dbg !15927
  %427 = load %struct.BPoint*, %struct.BPoint** %bp664, align 8, !dbg !15927
  %428 = load i32, i32* %b, align 4, !dbg !15928
  %429 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15929
  %pntsu665 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %429, i32 0, i32 6, !dbg !15930
  %430 = load i32, i32* %pntsu665, align 8, !dbg !15930
  %mul666 = mul nsw i32 %428, %430, !dbg !15931
  %431 = load i32, i32* %starta, align 4, !dbg !15932
  %add667 = add nsw i32 %mul666, %431, !dbg !15933
  %idxprom668 = sext i32 %add667 to i64, !dbg !15926
  %arrayidx669 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %427, i64 %idxprom668, !dbg !15926
  %432 = load i32, i32* %cut, align 4, !dbg !15934
  call void @ED_curve_bpcpy(%struct.EditNurb* %420, %struct.BPoint* %arrayidx663, %struct.BPoint* %arrayidx669, i32 %432), !dbg !15935
  br label %for.inc670, !dbg !15936

for.inc670:                                       ; preds = %for.body658
  %433 = load i32, i32* %b, align 4, !dbg !15937
  %inc671 = add nsw i32 %433, 1, !dbg !15937
  store i32 %inc671, i32* %b, align 4, !dbg !15937
  br label %for.cond654, !dbg !15938, !llvm.loop !15939

for.end672:                                       ; preds = %for.cond654
  %434 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15941
  %435 = bitcast %struct.Nurb* %434 to i8*, !dbg !15941
  call void @BLI_addtail(%struct.ListBase* %newnurb, i8* %435), !dbg !15942
  %436 = load i32, i32* %starta, align 4, !dbg !15943
  %cmp673 = icmp ne i32 %436, 0, !dbg !15945
  br i1 %cmp673, label %if.then680, label %lor.lhs.false675, !dbg !15946

lor.lhs.false675:                                 ; preds = %for.end672
  %437 = load i32, i32* %enda, align 4, !dbg !15947
  %438 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15948
  %pntsu676 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %438, i32 0, i32 6, !dbg !15949
  %439 = load i32, i32* %pntsu676, align 8, !dbg !15949
  %sub677 = sub nsw i32 %439, 1, !dbg !15950
  %cmp678 = icmp ne i32 %437, %sub677, !dbg !15951
  br i1 %cmp678, label %if.then680, label %if.end685, !dbg !15952

if.then680:                                       ; preds = %lor.lhs.false675, %for.end672
  %440 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !15953
  %flagu681 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %440, i32 0, i32 13, !dbg !15954
  %441 = load i16, i16* %flagu681, align 4, !dbg !15955
  %conv682 = sext i16 %441 to i32, !dbg !15955
  %and683 = and i32 %conv682, -2, !dbg !15955
  %conv684 = trunc i32 %and683 to i16, !dbg !15955
  store i16 %conv684, i16* %flagu681, align 4, !dbg !15955
  br label %if.end685, !dbg !15953

if.end685:                                        ; preds = %if.then680, %lor.lhs.false675
  store %struct.Nurb* null, %struct.Nurb** %nu1, align 8, !dbg !15956
  br label %if.end686, !dbg !15957

if.end686:                                        ; preds = %if.end685, %if.end650
  store i32 -1, i32* %enda, align 4, !dbg !15958
  store i32 -1, i32* %starta, align 4, !dbg !15959
  br label %if.end687, !dbg !15960

if.end687:                                        ; preds = %if.end686, %if.end468
  br label %for.inc688, !dbg !15961

for.inc688:                                       ; preds = %if.end687, %if.then466, %if.then453
  %442 = load i32, i32* %a, align 4, !dbg !15962
  %inc689 = add nsw i32 %442, 1, !dbg !15962
  store i32 %inc689, i32* %a, align 4, !dbg !15962
  %443 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !15963
  %incdec.ptr690 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %443, i32 1, !dbg !15963
  store %struct.BPoint* %incdec.ptr690, %struct.BPoint** %bp, align 8, !dbg !15963
  br label %for.cond435, !dbg !15964, !llvm.loop !15965

for.end691:                                       ; preds = %for.cond435
  %444 = load i8, i8* %split.addr, align 1, !dbg !15967
  %tobool692 = icmp ne i8 %444, 0, !dbg !15967
  br i1 %tobool692, label %if.end780, label %land.lhs.true693, !dbg !15969

land.lhs.true693:                                 ; preds = %for.end691
  %445 = load i32, i32* %cut, align 4, !dbg !15970
  %cmp694 = icmp ne i32 %445, -1, !dbg !15971
  br i1 %cmp694, label %land.lhs.true696, label %if.end780, !dbg !15972

land.lhs.true696:                                 ; preds = %land.lhs.true693
  %446 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15973
  %pntsu697 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %446, i32 0, i32 6, !dbg !15974
  %447 = load i32, i32* %pntsu697, align 8, !dbg !15974
  %cmp698 = icmp sgt i32 %447, 2, !dbg !15975
  br i1 %cmp698, label %land.lhs.true700, label %if.end780, !dbg !15976

land.lhs.true700:                                 ; preds = %land.lhs.true696
  %448 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15977
  %flagu701 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %448, i32 0, i32 13, !dbg !15978
  %449 = load i16, i16* %flagu701, align 4, !dbg !15978
  %conv702 = sext i16 %449 to i32, !dbg !15977
  %and703 = and i32 %conv702, 1, !dbg !15979
  %tobool704 = icmp ne i32 %and703, 0, !dbg !15979
  br i1 %tobool704, label %if.end780, label %if.then705, !dbg !15980

if.then705:                                       ; preds = %land.lhs.true700
  %450 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15981
  %bp706 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %450, i32 0, i32 17, !dbg !15983
  %451 = load %struct.BPoint*, %struct.BPoint** %bp706, align 8, !dbg !15983
  store %struct.BPoint* %451, %struct.BPoint** %bp1, align 8, !dbg !15984
  %452 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15985
  %bp707 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %452, i32 0, i32 17, !dbg !15986
  %453 = load %struct.BPoint*, %struct.BPoint** %bp707, align 8, !dbg !15986
  %arrayidx708 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %453, i64 1, !dbg !15985
  store %struct.BPoint* %arrayidx708, %struct.BPoint** %bp2, align 8, !dbg !15987
  %454 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !15988
  %f1709 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %454, i32 0, i32 3, !dbg !15990
  %455 = load i16, i16* %f1709, align 4, !dbg !15990
  %conv710 = sext i16 %455 to i32, !dbg !15988
  %and711 = and i32 %conv710, 1, !dbg !15991
  %tobool712 = icmp ne i32 %and711, 0, !dbg !15991
  br i1 %tobool712, label %land.lhs.true713, label %if.end737, !dbg !15992

land.lhs.true713:                                 ; preds = %if.then705
  %456 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !15993
  %f1714 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %456, i32 0, i32 3, !dbg !15994
  %457 = load i16, i16* %f1714, align 4, !dbg !15994
  %conv715 = sext i16 %457 to i32, !dbg !15993
  %and716 = and i32 %conv715, 1, !dbg !15995
  %tobool717 = icmp ne i32 %and716, 0, !dbg !15995
  br i1 %tobool717, label %if.then718, label %if.end737, !dbg !15996

if.then718:                                       ; preds = %land.lhs.true713
  %458 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15997
  %459 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15999
  %pntsv719 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %459, i32 0, i32 7, !dbg !16000
  %460 = load i32, i32* %pntsv719, align 4, !dbg !16000
  %call720 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %458, i32 1, i32 %460), !dbg !16001
  store %struct.Nurb* %call720, %struct.Nurb** %nu1, align 8, !dbg !16002
  store i32 0, i32* %b, align 4, !dbg !16003
  br label %for.cond721, !dbg !16005

for.cond721:                                      ; preds = %for.inc734, %if.then718
  %461 = load i32, i32* %b, align 4, !dbg !16006
  %462 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16008
  %pntsv722 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %462, i32 0, i32 7, !dbg !16009
  %463 = load i32, i32* %pntsv722, align 4, !dbg !16009
  %cmp723 = icmp slt i32 %461, %463, !dbg !16010
  br i1 %cmp723, label %for.body725, label %for.end736, !dbg !16011

for.body725:                                      ; preds = %for.cond721
  %464 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !16012
  %465 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !16014
  %bp726 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %465, i32 0, i32 17, !dbg !16015
  %466 = load %struct.BPoint*, %struct.BPoint** %bp726, align 8, !dbg !16015
  %467 = load i32, i32* %b, align 4, !dbg !16016
  %idxprom727 = sext i32 %467 to i64, !dbg !16014
  %arrayidx728 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %466, i64 %idxprom727, !dbg !16014
  %468 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16017
  %bp729 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %468, i32 0, i32 17, !dbg !16018
  %469 = load %struct.BPoint*, %struct.BPoint** %bp729, align 8, !dbg !16018
  %470 = load i32, i32* %b, align 4, !dbg !16019
  %471 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16020
  %pntsu730 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %471, i32 0, i32 6, !dbg !16021
  %472 = load i32, i32* %pntsu730, align 8, !dbg !16021
  %mul731 = mul nsw i32 %470, %472, !dbg !16022
  %idxprom732 = sext i32 %mul731 to i64, !dbg !16017
  %arrayidx733 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %469, i64 %idxprom732, !dbg !16017
  call void @ED_curve_bpcpy(%struct.EditNurb* %464, %struct.BPoint* %arrayidx728, %struct.BPoint* %arrayidx733, i32 1), !dbg !16023
  br label %for.inc734, !dbg !16024

for.inc734:                                       ; preds = %for.body725
  %473 = load i32, i32* %b, align 4, !dbg !16025
  %inc735 = add nsw i32 %473, 1, !dbg !16025
  store i32 %inc735, i32* %b, align 4, !dbg !16025
  br label %for.cond721, !dbg !16026, !llvm.loop !16027

for.end736:                                       ; preds = %for.cond721
  %474 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !16029
  %475 = bitcast %struct.Nurb* %474 to i8*, !dbg !16029
  call void @BLI_addtail(%struct.ListBase* %newnurb, i8* %475), !dbg !16030
  br label %if.end737, !dbg !16031

if.end737:                                        ; preds = %for.end736, %land.lhs.true713, %if.then705
  %476 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16032
  %bp738 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %476, i32 0, i32 17, !dbg !16033
  %477 = load %struct.BPoint*, %struct.BPoint** %bp738, align 8, !dbg !16033
  %478 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16034
  %pntsu739 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %478, i32 0, i32 6, !dbg !16035
  %479 = load i32, i32* %pntsu739, align 8, !dbg !16035
  %sub740 = sub nsw i32 %479, 1, !dbg !16036
  %idxprom741 = sext i32 %sub740 to i64, !dbg !16032
  %arrayidx742 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %477, i64 %idxprom741, !dbg !16032
  store %struct.BPoint* %arrayidx742, %struct.BPoint** %bp1, align 8, !dbg !16037
  %480 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16038
  %bp743 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %480, i32 0, i32 17, !dbg !16039
  %481 = load %struct.BPoint*, %struct.BPoint** %bp743, align 8, !dbg !16039
  %482 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16040
  %pntsu744 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %482, i32 0, i32 6, !dbg !16041
  %483 = load i32, i32* %pntsu744, align 8, !dbg !16041
  %sub745 = sub nsw i32 %483, 2, !dbg !16042
  %idxprom746 = sext i32 %sub745 to i64, !dbg !16038
  %arrayidx747 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %481, i64 %idxprom746, !dbg !16038
  store %struct.BPoint* %arrayidx747, %struct.BPoint** %bp2, align 8, !dbg !16043
  %484 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !16044
  %f1748 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %484, i32 0, i32 3, !dbg !16046
  %485 = load i16, i16* %f1748, align 4, !dbg !16046
  %conv749 = sext i16 %485 to i32, !dbg !16044
  %and750 = and i32 %conv749, 1, !dbg !16047
  %tobool751 = icmp ne i32 %and750, 0, !dbg !16047
  br i1 %tobool751, label %land.lhs.true752, label %if.end779, !dbg !16048

land.lhs.true752:                                 ; preds = %if.end737
  %486 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !16049
  %f1753 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %486, i32 0, i32 3, !dbg !16050
  %487 = load i16, i16* %f1753, align 4, !dbg !16050
  %conv754 = sext i16 %487 to i32, !dbg !16049
  %and755 = and i32 %conv754, 1, !dbg !16051
  %tobool756 = icmp ne i32 %and755, 0, !dbg !16051
  br i1 %tobool756, label %if.then757, label %if.end779, !dbg !16052

if.then757:                                       ; preds = %land.lhs.true752
  %488 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16053
  %489 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16055
  %pntsv758 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %489, i32 0, i32 7, !dbg !16056
  %490 = load i32, i32* %pntsv758, align 4, !dbg !16056
  %call759 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %488, i32 1, i32 %490), !dbg !16057
  store %struct.Nurb* %call759, %struct.Nurb** %nu1, align 8, !dbg !16058
  store i32 0, i32* %b, align 4, !dbg !16059
  br label %for.cond760, !dbg !16061

for.cond760:                                      ; preds = %for.inc776, %if.then757
  %491 = load i32, i32* %b, align 4, !dbg !16062
  %492 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16064
  %pntsv761 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %492, i32 0, i32 7, !dbg !16065
  %493 = load i32, i32* %pntsv761, align 4, !dbg !16065
  %cmp762 = icmp slt i32 %491, %493, !dbg !16066
  br i1 %cmp762, label %for.body764, label %for.end778, !dbg !16067

for.body764:                                      ; preds = %for.cond760
  %494 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !16068
  %495 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !16070
  %bp765 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %495, i32 0, i32 17, !dbg !16071
  %496 = load %struct.BPoint*, %struct.BPoint** %bp765, align 8, !dbg !16071
  %497 = load i32, i32* %b, align 4, !dbg !16072
  %idxprom766 = sext i32 %497 to i64, !dbg !16070
  %arrayidx767 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %496, i64 %idxprom766, !dbg !16070
  %498 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16073
  %bp768 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %498, i32 0, i32 17, !dbg !16074
  %499 = load %struct.BPoint*, %struct.BPoint** %bp768, align 8, !dbg !16074
  %500 = load i32, i32* %b, align 4, !dbg !16075
  %501 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16076
  %pntsu769 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %501, i32 0, i32 6, !dbg !16077
  %502 = load i32, i32* %pntsu769, align 8, !dbg !16077
  %mul770 = mul nsw i32 %500, %502, !dbg !16078
  %503 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16079
  %pntsu771 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %503, i32 0, i32 6, !dbg !16080
  %504 = load i32, i32* %pntsu771, align 8, !dbg !16080
  %add772 = add nsw i32 %mul770, %504, !dbg !16081
  %sub773 = sub nsw i32 %add772, 1, !dbg !16082
  %idxprom774 = sext i32 %sub773 to i64, !dbg !16073
  %arrayidx775 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %499, i64 %idxprom774, !dbg !16073
  call void @ED_curve_bpcpy(%struct.EditNurb* %494, %struct.BPoint* %arrayidx767, %struct.BPoint* %arrayidx775, i32 1), !dbg !16083
  br label %for.inc776, !dbg !16084

for.inc776:                                       ; preds = %for.body764
  %505 = load i32, i32* %b, align 4, !dbg !16085
  %inc777 = add nsw i32 %505, 1, !dbg !16085
  store i32 %inc777, i32* %b, align 4, !dbg !16085
  br label %for.cond760, !dbg !16086, !llvm.loop !16087

for.end778:                                       ; preds = %for.cond760
  %506 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !16089
  %507 = bitcast %struct.Nurb* %506 to i8*, !dbg !16089
  call void @BLI_addtail(%struct.ListBase* %newnurb, i8* %507), !dbg !16090
  br label %if.end779, !dbg !16091

if.end779:                                        ; preds = %for.end778, %land.lhs.true752, %if.end737
  br label %if.end780, !dbg !16092

if.end780:                                        ; preds = %if.end779, %land.lhs.true700, %land.lhs.true696, %land.lhs.true693, %for.end691
  br label %if.end1095, !dbg !16093

if.else781:                                       ; preds = %if.then430
  %508 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16094
  %call782 = call zeroext i8 @isNurbselU(%struct.Nurb* %508, i32* %v, i32 1), !dbg !16096
  %tobool783 = icmp ne i8 %call782, 0, !dbg !16096
  br i1 %tobool783, label %if.then784, label %if.else1085, !dbg !16097

if.then784:                                       ; preds = %if.else781
  store i32 0, i32* %a, align 4, !dbg !16098
  %509 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16101
  %bp785 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %509, i32 0, i32 17, !dbg !16102
  %510 = load %struct.BPoint*, %struct.BPoint** %bp785, align 8, !dbg !16102
  store %struct.BPoint* %510, %struct.BPoint** %bp, align 8, !dbg !16103
  br label %for.cond786, !dbg !16104

for.cond786:                                      ; preds = %for.inc1003, %if.then784
  %511 = load i32, i32* %a, align 4, !dbg !16105
  %512 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16107
  %pntsv787 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %512, i32 0, i32 7, !dbg !16108
  %513 = load i32, i32* %pntsv787, align 4, !dbg !16108
  %cmp788 = icmp slt i32 %511, %513, !dbg !16109
  br i1 %cmp788, label %for.body790, label %for.end1008, !dbg !16110

for.body790:                                      ; preds = %for.cond786
  %514 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !16111
  %f1791 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %514, i32 0, i32 3, !dbg !16114
  %515 = load i16, i16* %f1791, align 4, !dbg !16114
  %conv792 = sext i16 %515 to i32, !dbg !16111
  %and793 = and i32 %conv792, 1, !dbg !16115
  %tobool794 = icmp ne i32 %and793, 0, !dbg !16115
  br i1 %tobool794, label %if.else806, label %if.then795, !dbg !16116

if.then795:                                       ; preds = %for.body790
  %516 = load i32, i32* %a, align 4, !dbg !16117
  store i32 %516, i32* %enda, align 4, !dbg !16119
  %517 = load i32, i32* %starta, align 4, !dbg !16120
  %cmp796 = icmp eq i32 %517, -1, !dbg !16122
  br i1 %cmp796, label %if.then798, label %if.end799, !dbg !16123

if.then798:                                       ; preds = %if.then795
  %518 = load i32, i32* %a, align 4, !dbg !16124
  store i32 %518, i32* %starta, align 4, !dbg !16125
  br label %if.end799, !dbg !16126

if.end799:                                        ; preds = %if.then798, %if.then795
  %519 = load i32, i32* %a, align 4, !dbg !16127
  %520 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16129
  %pntsv800 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %520, i32 0, i32 7, !dbg !16130
  %521 = load i32, i32* %pntsv800, align 4, !dbg !16130
  %sub801 = sub nsw i32 %521, 1, !dbg !16131
  %cmp802 = icmp slt i32 %519, %sub801, !dbg !16132
  br i1 %cmp802, label %if.then804, label %if.end805, !dbg !16133

if.then804:                                       ; preds = %if.end799
  br label %for.inc1003, !dbg !16134

if.end805:                                        ; preds = %if.end799
  br label %if.end820, !dbg !16135

if.else806:                                       ; preds = %for.body790
  %522 = load i32, i32* %a, align 4, !dbg !16136
  %523 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16138
  %pntsv807 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %523, i32 0, i32 7, !dbg !16139
  %524 = load i32, i32* %pntsv807, align 4, !dbg !16139
  %sub808 = sub nsw i32 %524, 1, !dbg !16140
  %cmp809 = icmp slt i32 %522, %sub808, !dbg !16141
  br i1 %cmp809, label %land.lhs.true811, label %if.end819, !dbg !16142

land.lhs.true811:                                 ; preds = %if.else806
  %525 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !16143
  %526 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16144
  %pntsu812 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %526, i32 0, i32 6, !dbg !16145
  %527 = load i32, i32* %pntsu812, align 8, !dbg !16145
  %idx.ext = sext i32 %527 to i64, !dbg !16146
  %add.ptr813 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %525, i64 %idx.ext, !dbg !16146
  %f1814 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr813, i32 0, i32 3, !dbg !16147
  %528 = load i16, i16* %f1814, align 4, !dbg !16147
  %conv815 = sext i16 %528 to i32, !dbg !16148
  %and816 = and i32 %conv815, 1, !dbg !16149
  %tobool817 = icmp ne i32 %and816, 0, !dbg !16149
  br i1 %tobool817, label %if.end819, label %if.then818, !dbg !16150

if.then818:                                       ; preds = %land.lhs.true811
  br label %for.inc1003, !dbg !16151

if.end819:                                        ; preds = %land.lhs.true811, %if.else806
  br label %if.end820

if.end820:                                        ; preds = %if.end819, %if.end805
  %529 = load i32, i32* %starta, align 4, !dbg !16153
  %cmp821 = icmp sge i32 %529, 0, !dbg !16155
  br i1 %cmp821, label %if.then823, label %if.end1002, !dbg !16156

if.then823:                                       ; preds = %if.end820
  %530 = load i32, i32* %starta, align 4, !dbg !16157
  %cmp824 = icmp sle i32 %530, 1, !dbg !16160
  br i1 %cmp824, label %land.lhs.true826, label %if.else846, !dbg !16161

land.lhs.true826:                                 ; preds = %if.then823
  %531 = load i32, i32* %a, align 4, !dbg !16162
  %532 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16163
  %pntsv827 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %532, i32 0, i32 7, !dbg !16164
  %533 = load i32, i32* %pntsv827, align 4, !dbg !16164
  %sub828 = sub nsw i32 %533, 1, !dbg !16165
  %cmp829 = icmp eq i32 %531, %sub828, !dbg !16166
  br i1 %cmp829, label %if.then831, label %if.else846, !dbg !16167

if.then831:                                       ; preds = %land.lhs.true826
  %534 = load i32, i32* %starta, align 4, !dbg !16168
  %cmp832 = icmp eq i32 %534, 1, !dbg !16171
  br i1 %cmp832, label %land.lhs.true834, label %if.end841, !dbg !16172

land.lhs.true834:                                 ; preds = %if.then831
  %535 = load i32, i32* %enda, align 4, !dbg !16173
  %536 = load i32, i32* %a, align 4, !dbg !16174
  %cmp835 = icmp ne i32 %535, %536, !dbg !16175
  br i1 %cmp835, label %if.then837, label %if.end841, !dbg !16176

if.then837:                                       ; preds = %land.lhs.true834
  %537 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16177
  %flagv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %537, i32 0, i32 14, !dbg !16178
  %538 = load i16, i16* %flagv, align 2, !dbg !16179
  %conv838 = sext i16 %538 to i32, !dbg !16179
  %and839 = and i32 %conv838, -2, !dbg !16179
  %conv840 = trunc i32 %and839 to i16, !dbg !16179
  store i16 %conv840, i16* %flagv, align 2, !dbg !16179
  br label %if.end841, !dbg !16177

if.end841:                                        ; preds = %if.then837, %land.lhs.true834, %if.then831
  store i32 0, i32* %starta, align 4, !dbg !16180
  %539 = load i32, i32* %a, align 4, !dbg !16181
  store i32 %539, i32* %enda, align 4, !dbg !16182
  %540 = load i32, i32* %enda, align 4, !dbg !16183
  %541 = load i32, i32* %starta, align 4, !dbg !16184
  %sub842 = sub nsw i32 %540, %541, !dbg !16185
  %add843 = add nsw i32 %sub842, 1, !dbg !16186
  store i32 %add843, i32* %cut, align 4, !dbg !16187
  %542 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16188
  %543 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16189
  %pntsu844 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %543, i32 0, i32 6, !dbg !16190
  %544 = load i32, i32* %pntsu844, align 8, !dbg !16190
  %545 = load i32, i32* %cut, align 4, !dbg !16191
  %call845 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %542, i32 %544, i32 %545), !dbg !16192
  store %struct.Nurb* %call845, %struct.Nurb** %nu1, align 8, !dbg !16193
  br label %if.end976, !dbg !16194

if.else846:                                       ; preds = %land.lhs.true826, %if.then823
  %546 = load i32, i32* %starta, align 4, !dbg !16195
  %cmp847 = icmp eq i32 %546, 0, !dbg !16197
  br i1 %cmp847, label %if.then849, label %if.else908, !dbg !16198

if.then849:                                       ; preds = %if.else846
  %547 = load i32, i32* %enda, align 4, !dbg !16199
  %inc850 = add nsw i32 %547, 1, !dbg !16199
  store i32 %inc850, i32* %enda, align 4, !dbg !16199
  %548 = load i32, i32* %enda, align 4, !dbg !16201
  %549 = load i32, i32* %starta, align 4, !dbg !16202
  %sub851 = sub nsw i32 %548, %549, !dbg !16203
  %add852 = add nsw i32 %sub851, 1, !dbg !16204
  store i32 %add852, i32* %cut, align 4, !dbg !16205
  %550 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16206
  %bp853 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %550, i32 0, i32 17, !dbg !16207
  %551 = load %struct.BPoint*, %struct.BPoint** %bp853, align 8, !dbg !16207
  %552 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16208
  %pntsv854 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %552, i32 0, i32 7, !dbg !16209
  %553 = load i32, i32* %pntsv854, align 4, !dbg !16209
  %554 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16210
  %pntsu855 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %554, i32 0, i32 6, !dbg !16211
  %555 = load i32, i32* %pntsu855, align 8, !dbg !16211
  %mul856 = mul nsw i32 %553, %555, !dbg !16212
  %556 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16213
  %pntsu857 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %556, i32 0, i32 6, !dbg !16214
  %557 = load i32, i32* %pntsu857, align 8, !dbg !16214
  %sub858 = sub nsw i32 %mul856, %557, !dbg !16215
  %idxprom859 = sext i32 %sub858 to i64, !dbg !16206
  %arrayidx860 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %551, i64 %idxprom859, !dbg !16206
  store %struct.BPoint* %arrayidx860, %struct.BPoint** %bp1, align 8, !dbg !16216
  %558 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16217
  %bp861 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %558, i32 0, i32 17, !dbg !16218
  %559 = load %struct.BPoint*, %struct.BPoint** %bp861, align 8, !dbg !16218
  %560 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16219
  %pntsv862 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %560, i32 0, i32 7, !dbg !16220
  %561 = load i32, i32* %pntsv862, align 4, !dbg !16220
  %562 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16221
  %pntsu863 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %562, i32 0, i32 6, !dbg !16222
  %563 = load i32, i32* %pntsu863, align 8, !dbg !16222
  %mul864 = mul nsw i32 %561, %563, !dbg !16223
  %564 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16224
  %pntsu865 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %564, i32 0, i32 6, !dbg !16225
  %565 = load i32, i32* %pntsu865, align 8, !dbg !16225
  %mul866 = mul nsw i32 %565, 2, !dbg !16226
  %sub867 = sub nsw i32 %mul864, %mul866, !dbg !16227
  %idxprom868 = sext i32 %sub867 to i64, !dbg !16217
  %arrayidx869 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %559, i64 %idxprom868, !dbg !16217
  store %struct.BPoint* %arrayidx869, %struct.BPoint** %bp2, align 8, !dbg !16228
  %566 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16229
  %flagv870 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %566, i32 0, i32 14, !dbg !16231
  %567 = load i16, i16* %flagv870, align 2, !dbg !16231
  %conv871 = sext i16 %567 to i32, !dbg !16229
  %and872 = and i32 %conv871, 1, !dbg !16232
  %tobool873 = icmp ne i32 %and872, 0, !dbg !16232
  br i1 %tobool873, label %land.lhs.true874, label %if.else897, !dbg !16233

land.lhs.true874:                                 ; preds = %if.then849
  %568 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !16234
  %f1875 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %568, i32 0, i32 3, !dbg !16235
  %569 = load i16, i16* %f1875, align 4, !dbg !16235
  %conv876 = sext i16 %569 to i32, !dbg !16234
  %and877 = and i32 %conv876, 1, !dbg !16236
  %tobool878 = icmp ne i32 %and877, 0, !dbg !16236
  br i1 %tobool878, label %land.lhs.true879, label %if.else897, !dbg !16237

land.lhs.true879:                                 ; preds = %land.lhs.true874
  %570 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !16238
  %f1880 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %570, i32 0, i32 3, !dbg !16239
  %571 = load i16, i16* %f1880, align 4, !dbg !16239
  %conv881 = sext i16 %571 to i32, !dbg !16238
  %and882 = and i32 %conv881, 1, !dbg !16240
  %tobool883 = icmp ne i32 %and882, 0, !dbg !16240
  br i1 %tobool883, label %if.then884, label %if.else897, !dbg !16241

if.then884:                                       ; preds = %land.lhs.true879
  %572 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16242
  %573 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16244
  %pntsu885 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %573, i32 0, i32 6, !dbg !16245
  %574 = load i32, i32* %pntsu885, align 8, !dbg !16245
  %575 = load i32, i32* %cut, align 4, !dbg !16246
  %add886 = add nsw i32 %575, 1, !dbg !16247
  %call887 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %572, i32 %574, i32 %add886), !dbg !16248
  store %struct.Nurb* %call887, %struct.Nurb** %nu1, align 8, !dbg !16249
  %576 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !16250
  %577 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !16251
  %bp888 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %577, i32 0, i32 17, !dbg !16252
  %578 = load %struct.BPoint*, %struct.BPoint** %bp888, align 8, !dbg !16252
  %579 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16253
  %pntsu889 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %579, i32 0, i32 6, !dbg !16254
  %580 = load i32, i32* %pntsu889, align 8, !dbg !16254
  %idxprom890 = sext i32 %580 to i64, !dbg !16251
  %arrayidx891 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %578, i64 %idxprom890, !dbg !16251
  %581 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16255
  %bp892 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %581, i32 0, i32 17, !dbg !16256
  %582 = load %struct.BPoint*, %struct.BPoint** %bp892, align 8, !dbg !16256
  %583 = load i32, i32* %cut, align 4, !dbg !16257
  %584 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16258
  %pntsu893 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %584, i32 0, i32 6, !dbg !16259
  %585 = load i32, i32* %pntsu893, align 8, !dbg !16259
  %mul894 = mul nsw i32 %583, %585, !dbg !16260
  call void @ED_curve_bpcpy(%struct.EditNurb* %576, %struct.BPoint* %arrayidx891, %struct.BPoint* %582, i32 %mul894), !dbg !16261
  %586 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16262
  %pntsv895 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %586, i32 0, i32 7, !dbg !16263
  %587 = load i32, i32* %pntsv895, align 4, !dbg !16263
  %sub896 = sub nsw i32 %587, 1, !dbg !16264
  store i32 %sub896, i32* %starta, align 4, !dbg !16265
  store i32 1, i32* %cut, align 4, !dbg !16266
  br label %if.end907, !dbg !16267

if.else897:                                       ; preds = %land.lhs.true879, %land.lhs.true874, %if.then849
  %588 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16268
  %flagv898 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %588, i32 0, i32 14, !dbg !16271
  %589 = load i16, i16* %flagv898, align 2, !dbg !16271
  %conv899 = sext i16 %589 to i32, !dbg !16268
  %and900 = and i32 %conv899, 1, !dbg !16272
  %tobool901 = icmp ne i32 %and900, 0, !dbg !16272
  br i1 %tobool901, label %if.then902, label %if.else903, !dbg !16273

if.then902:                                       ; preds = %if.else897
  %590 = load i32, i32* %cut, align 4, !dbg !16274
  store i32 %590, i32* %cyclicut, align 4, !dbg !16275
  br label %if.end906, !dbg !16276

if.else903:                                       ; preds = %if.else897
  %591 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16277
  %592 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16278
  %pntsu904 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %592, i32 0, i32 6, !dbg !16279
  %593 = load i32, i32* %pntsu904, align 8, !dbg !16279
  %594 = load i32, i32* %cut, align 4, !dbg !16280
  %call905 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %591, i32 %593, i32 %594), !dbg !16281
  store %struct.Nurb* %call905, %struct.Nurb** %nu1, align 8, !dbg !16282
  br label %if.end906

if.end906:                                        ; preds = %if.else903, %if.then902
  br label %if.end907

if.end907:                                        ; preds = %if.end906, %if.then884
  br label %if.end975, !dbg !16283

if.else908:                                       ; preds = %if.else846
  %595 = load i32, i32* %enda, align 4, !dbg !16284
  %596 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16286
  %pntsv909 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %596, i32 0, i32 7, !dbg !16287
  %597 = load i32, i32* %pntsv909, align 4, !dbg !16287
  %sub910 = sub nsw i32 %597, 1, !dbg !16288
  %cmp911 = icmp eq i32 %595, %sub910, !dbg !16289
  br i1 %cmp911, label %if.then913, label %if.else967, !dbg !16290

if.then913:                                       ; preds = %if.else908
  %598 = load i32, i32* %starta, align 4, !dbg !16291
  %dec914 = add nsw i32 %598, -1, !dbg !16291
  store i32 %dec914, i32* %starta, align 4, !dbg !16291
  %599 = load i32, i32* %enda, align 4, !dbg !16293
  %600 = load i32, i32* %starta, align 4, !dbg !16294
  %sub915 = sub nsw i32 %599, %600, !dbg !16295
  %add916 = add nsw i32 %sub915, 1, !dbg !16296
  store i32 %add916, i32* %cut, align 4, !dbg !16297
  %601 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16298
  %bp917 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %601, i32 0, i32 17, !dbg !16299
  %602 = load %struct.BPoint*, %struct.BPoint** %bp917, align 8, !dbg !16299
  store %struct.BPoint* %602, %struct.BPoint** %bp1, align 8, !dbg !16300
  %603 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16301
  %bp918 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %603, i32 0, i32 17, !dbg !16302
  %604 = load %struct.BPoint*, %struct.BPoint** %bp918, align 8, !dbg !16302
  %605 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16303
  %pntsu919 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %605, i32 0, i32 6, !dbg !16304
  %606 = load i32, i32* %pntsu919, align 8, !dbg !16304
  %idxprom920 = sext i32 %606 to i64, !dbg !16301
  %arrayidx921 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %604, i64 %idxprom920, !dbg !16301
  store %struct.BPoint* %arrayidx921, %struct.BPoint** %bp2, align 8, !dbg !16305
  %607 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16306
  %flagv922 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %607, i32 0, i32 14, !dbg !16308
  %608 = load i16, i16* %flagv922, align 2, !dbg !16308
  %conv923 = sext i16 %608 to i32, !dbg !16306
  %and924 = and i32 %conv923, 1, !dbg !16309
  %tobool925 = icmp ne i32 %and924, 0, !dbg !16309
  br i1 %tobool925, label %land.lhs.true926, label %if.else947, !dbg !16310

land.lhs.true926:                                 ; preds = %if.then913
  %609 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !16311
  %f1927 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %609, i32 0, i32 3, !dbg !16312
  %610 = load i16, i16* %f1927, align 4, !dbg !16312
  %conv928 = sext i16 %610 to i32, !dbg !16311
  %and929 = and i32 %conv928, 1, !dbg !16313
  %tobool930 = icmp ne i32 %and929, 0, !dbg !16313
  br i1 %tobool930, label %land.lhs.true931, label %if.else947, !dbg !16314

land.lhs.true931:                                 ; preds = %land.lhs.true926
  %611 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !16315
  %f1932 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %611, i32 0, i32 3, !dbg !16316
  %612 = load i16, i16* %f1932, align 4, !dbg !16316
  %conv933 = sext i16 %612 to i32, !dbg !16315
  %and934 = and i32 %conv933, 1, !dbg !16317
  %tobool935 = icmp ne i32 %and934, 0, !dbg !16317
  br i1 %tobool935, label %if.then936, label %if.else947, !dbg !16318

if.then936:                                       ; preds = %land.lhs.true931
  %613 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16319
  %614 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16321
  %pntsu937 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %614, i32 0, i32 6, !dbg !16322
  %615 = load i32, i32* %pntsu937, align 8, !dbg !16322
  %616 = load i32, i32* %cut, align 4, !dbg !16323
  %add938 = add nsw i32 %616, 1, !dbg !16324
  %call939 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %613, i32 %615, i32 %add938), !dbg !16325
  store %struct.Nurb* %call939, %struct.Nurb** %nu1, align 8, !dbg !16326
  %617 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !16327
  %618 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !16328
  %bp940 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %618, i32 0, i32 17, !dbg !16329
  %619 = load %struct.BPoint*, %struct.BPoint** %bp940, align 8, !dbg !16329
  %620 = load i32, i32* %cut, align 4, !dbg !16330
  %621 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16331
  %pntsu941 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %621, i32 0, i32 6, !dbg !16332
  %622 = load i32, i32* %pntsu941, align 8, !dbg !16332
  %mul942 = mul nsw i32 %620, %622, !dbg !16333
  %idxprom943 = sext i32 %mul942 to i64, !dbg !16328
  %arrayidx944 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %619, i64 %idxprom943, !dbg !16328
  %623 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16334
  %bp945 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %623, i32 0, i32 17, !dbg !16335
  %624 = load %struct.BPoint*, %struct.BPoint** %bp945, align 8, !dbg !16335
  %625 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16336
  %pntsu946 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %625, i32 0, i32 6, !dbg !16337
  %626 = load i32, i32* %pntsu946, align 8, !dbg !16337
  call void @ED_curve_bpcpy(%struct.EditNurb* %617, %struct.BPoint* %arrayidx944, %struct.BPoint* %624, i32 %626), !dbg !16338
  br label %if.end966, !dbg !16339

if.else947:                                       ; preds = %land.lhs.true931, %land.lhs.true926, %if.then913
  %627 = load i32, i32* %cyclicut, align 4, !dbg !16340
  %cmp948 = icmp ne i32 %627, 0, !dbg !16342
  br i1 %cmp948, label %if.then950, label %if.else962, !dbg !16343

if.then950:                                       ; preds = %if.else947
  %628 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16344
  %629 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16346
  %pntsu951 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %629, i32 0, i32 6, !dbg !16347
  %630 = load i32, i32* %pntsu951, align 8, !dbg !16347
  %631 = load i32, i32* %cut, align 4, !dbg !16348
  %632 = load i32, i32* %cyclicut, align 4, !dbg !16349
  %add952 = add nsw i32 %631, %632, !dbg !16350
  %call953 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %628, i32 %630, i32 %add952), !dbg !16351
  store %struct.Nurb* %call953, %struct.Nurb** %nu1, align 8, !dbg !16352
  %633 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !16353
  %634 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !16354
  %bp954 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %634, i32 0, i32 17, !dbg !16355
  %635 = load %struct.BPoint*, %struct.BPoint** %bp954, align 8, !dbg !16355
  %636 = load i32, i32* %cut, align 4, !dbg !16356
  %637 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16357
  %pntsu955 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %637, i32 0, i32 6, !dbg !16358
  %638 = load i32, i32* %pntsu955, align 8, !dbg !16358
  %mul956 = mul nsw i32 %636, %638, !dbg !16359
  %idxprom957 = sext i32 %mul956 to i64, !dbg !16354
  %arrayidx958 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %635, i64 %idxprom957, !dbg !16354
  %639 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16360
  %bp959 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %639, i32 0, i32 17, !dbg !16361
  %640 = load %struct.BPoint*, %struct.BPoint** %bp959, align 8, !dbg !16361
  %641 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16362
  %pntsu960 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %641, i32 0, i32 6, !dbg !16363
  %642 = load i32, i32* %pntsu960, align 8, !dbg !16363
  %643 = load i32, i32* %cyclicut, align 4, !dbg !16364
  %mul961 = mul nsw i32 %642, %643, !dbg !16365
  call void @ED_curve_bpcpy(%struct.EditNurb* %633, %struct.BPoint* %arrayidx958, %struct.BPoint* %640, i32 %mul961), !dbg !16366
  store i32 0, i32* %cyclicut, align 4, !dbg !16367
  br label %if.end965, !dbg !16368

if.else962:                                       ; preds = %if.else947
  %644 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16369
  %645 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16371
  %pntsu963 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %645, i32 0, i32 6, !dbg !16372
  %646 = load i32, i32* %pntsu963, align 8, !dbg !16372
  %647 = load i32, i32* %cut, align 4, !dbg !16373
  %call964 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %644, i32 %646, i32 %647), !dbg !16374
  store %struct.Nurb* %call964, %struct.Nurb** %nu1, align 8, !dbg !16375
  br label %if.end965

if.end965:                                        ; preds = %if.else962, %if.then950
  br label %if.end966

if.end966:                                        ; preds = %if.end965, %if.then936
  br label %if.end974, !dbg !16376

if.else967:                                       ; preds = %if.else908
  %648 = load i32, i32* %starta, align 4, !dbg !16377
  %dec968 = add nsw i32 %648, -1, !dbg !16377
  store i32 %dec968, i32* %starta, align 4, !dbg !16377
  %649 = load i32, i32* %enda, align 4, !dbg !16379
  %inc969 = add nsw i32 %649, 1, !dbg !16379
  store i32 %inc969, i32* %enda, align 4, !dbg !16379
  %650 = load i32, i32* %enda, align 4, !dbg !16380
  %651 = load i32, i32* %starta, align 4, !dbg !16381
  %sub970 = sub nsw i32 %650, %651, !dbg !16382
  %add971 = add nsw i32 %sub970, 1, !dbg !16383
  store i32 %add971, i32* %cut, align 4, !dbg !16384
  %652 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16385
  %653 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16386
  %pntsu972 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %653, i32 0, i32 6, !dbg !16387
  %654 = load i32, i32* %pntsu972, align 8, !dbg !16387
  %655 = load i32, i32* %cut, align 4, !dbg !16388
  %call973 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %652, i32 %654, i32 %655), !dbg !16389
  store %struct.Nurb* %call973, %struct.Nurb** %nu1, align 8, !dbg !16390
  br label %if.end974

if.end974:                                        ; preds = %if.else967, %if.end966
  br label %if.end975

if.end975:                                        ; preds = %if.end974, %if.end907
  br label %if.end976

if.end976:                                        ; preds = %if.end975, %if.end841
  %656 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !16391
  %cmp977 = icmp ne %struct.Nurb* %656, null, !dbg !16393
  br i1 %cmp977, label %if.then979, label %if.end1001, !dbg !16394

if.then979:                                       ; preds = %if.end976
  %657 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !16395
  %658 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !16397
  %bp980 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %658, i32 0, i32 17, !dbg !16398
  %659 = load %struct.BPoint*, %struct.BPoint** %bp980, align 8, !dbg !16398
  %660 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16399
  %bp981 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %660, i32 0, i32 17, !dbg !16400
  %661 = load %struct.BPoint*, %struct.BPoint** %bp981, align 8, !dbg !16400
  %662 = load i32, i32* %starta, align 4, !dbg !16401
  %663 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16402
  %pntsu982 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %663, i32 0, i32 6, !dbg !16403
  %664 = load i32, i32* %pntsu982, align 8, !dbg !16403
  %mul983 = mul nsw i32 %662, %664, !dbg !16404
  %idxprom984 = sext i32 %mul983 to i64, !dbg !16399
  %arrayidx985 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %661, i64 %idxprom984, !dbg !16399
  %665 = load i32, i32* %cut, align 4, !dbg !16405
  %666 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16406
  %pntsu986 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %666, i32 0, i32 6, !dbg !16407
  %667 = load i32, i32* %pntsu986, align 8, !dbg !16407
  %mul987 = mul nsw i32 %665, %667, !dbg !16408
  call void @ED_curve_bpcpy(%struct.EditNurb* %657, %struct.BPoint* %659, %struct.BPoint* %arrayidx985, i32 %mul987), !dbg !16409
  %668 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !16410
  %669 = bitcast %struct.Nurb* %668 to i8*, !dbg !16410
  call void @BLI_addtail(%struct.ListBase* %newnurb, i8* %669), !dbg !16411
  %670 = load i32, i32* %starta, align 4, !dbg !16412
  %cmp988 = icmp ne i32 %670, 0, !dbg !16414
  br i1 %cmp988, label %if.then995, label %lor.lhs.false990, !dbg !16415

lor.lhs.false990:                                 ; preds = %if.then979
  %671 = load i32, i32* %enda, align 4, !dbg !16416
  %672 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16417
  %pntsv991 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %672, i32 0, i32 7, !dbg !16418
  %673 = load i32, i32* %pntsv991, align 4, !dbg !16418
  %sub992 = sub nsw i32 %673, 1, !dbg !16419
  %cmp993 = icmp ne i32 %671, %sub992, !dbg !16420
  br i1 %cmp993, label %if.then995, label %if.end1000, !dbg !16421

if.then995:                                       ; preds = %lor.lhs.false990, %if.then979
  %674 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !16422
  %flagv996 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %674, i32 0, i32 14, !dbg !16423
  %675 = load i16, i16* %flagv996, align 2, !dbg !16424
  %conv997 = sext i16 %675 to i32, !dbg !16424
  %and998 = and i32 %conv997, -2, !dbg !16424
  %conv999 = trunc i32 %and998 to i16, !dbg !16424
  store i16 %conv999, i16* %flagv996, align 2, !dbg !16424
  br label %if.end1000, !dbg !16422

if.end1000:                                       ; preds = %if.then995, %lor.lhs.false990
  store %struct.Nurb* null, %struct.Nurb** %nu1, align 8, !dbg !16425
  br label %if.end1001, !dbg !16426

if.end1001:                                       ; preds = %if.end1000, %if.end976
  store i32 -1, i32* %enda, align 4, !dbg !16427
  store i32 -1, i32* %starta, align 4, !dbg !16428
  br label %if.end1002, !dbg !16429

if.end1002:                                       ; preds = %if.end1001, %if.end820
  br label %for.inc1003, !dbg !16430

for.inc1003:                                      ; preds = %if.end1002, %if.then818, %if.then804
  %676 = load i32, i32* %a, align 4, !dbg !16431
  %inc1004 = add nsw i32 %676, 1, !dbg !16431
  store i32 %inc1004, i32* %a, align 4, !dbg !16431
  %677 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16432
  %pntsu1005 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %677, i32 0, i32 6, !dbg !16433
  %678 = load i32, i32* %pntsu1005, align 8, !dbg !16433
  %679 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !16434
  %idx.ext1006 = sext i32 %678 to i64, !dbg !16434
  %add.ptr1007 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %679, i64 %idx.ext1006, !dbg !16434
  store %struct.BPoint* %add.ptr1007, %struct.BPoint** %bp, align 8, !dbg !16434
  br label %for.cond786, !dbg !16435, !llvm.loop !16436

for.end1008:                                      ; preds = %for.cond786
  %680 = load i8, i8* %split.addr, align 1, !dbg !16438
  %tobool1009 = icmp ne i8 %680, 0, !dbg !16438
  br i1 %tobool1009, label %if.end1084, label %land.lhs.true1010, !dbg !16440

land.lhs.true1010:                                ; preds = %for.end1008
  %681 = load i32, i32* %cut, align 4, !dbg !16441
  %cmp1011 = icmp ne i32 %681, -1, !dbg !16442
  br i1 %cmp1011, label %land.lhs.true1013, label %if.end1084, !dbg !16443

land.lhs.true1013:                                ; preds = %land.lhs.true1010
  %682 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16444
  %pntsv1014 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %682, i32 0, i32 7, !dbg !16445
  %683 = load i32, i32* %pntsv1014, align 4, !dbg !16445
  %cmp1015 = icmp sgt i32 %683, 2, !dbg !16446
  br i1 %cmp1015, label %land.lhs.true1017, label %if.end1084, !dbg !16447

land.lhs.true1017:                                ; preds = %land.lhs.true1013
  %684 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16448
  %flagv1018 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %684, i32 0, i32 14, !dbg !16449
  %685 = load i16, i16* %flagv1018, align 2, !dbg !16449
  %conv1019 = sext i16 %685 to i32, !dbg !16448
  %and1020 = and i32 %conv1019, 1, !dbg !16450
  %tobool1021 = icmp ne i32 %and1020, 0, !dbg !16450
  br i1 %tobool1021, label %if.end1084, label %if.then1022, !dbg !16451

if.then1022:                                      ; preds = %land.lhs.true1017
  %686 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16452
  %bp1023 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %686, i32 0, i32 17, !dbg !16454
  %687 = load %struct.BPoint*, %struct.BPoint** %bp1023, align 8, !dbg !16454
  store %struct.BPoint* %687, %struct.BPoint** %bp1, align 8, !dbg !16455
  %688 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16456
  %bp1024 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %688, i32 0, i32 17, !dbg !16457
  %689 = load %struct.BPoint*, %struct.BPoint** %bp1024, align 8, !dbg !16457
  %690 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16458
  %pntsu1025 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %690, i32 0, i32 6, !dbg !16459
  %691 = load i32, i32* %pntsu1025, align 8, !dbg !16459
  %idxprom1026 = sext i32 %691 to i64, !dbg !16456
  %arrayidx1027 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %689, i64 %idxprom1026, !dbg !16456
  store %struct.BPoint* %arrayidx1027, %struct.BPoint** %bp2, align 8, !dbg !16460
  %692 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !16461
  %f11028 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %692, i32 0, i32 3, !dbg !16463
  %693 = load i16, i16* %f11028, align 4, !dbg !16463
  %conv1029 = sext i16 %693 to i32, !dbg !16461
  %and1030 = and i32 %conv1029, 1, !dbg !16464
  %tobool1031 = icmp ne i32 %and1030, 0, !dbg !16464
  br i1 %tobool1031, label %land.lhs.true1032, label %if.end1043, !dbg !16465

land.lhs.true1032:                                ; preds = %if.then1022
  %694 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !16466
  %f11033 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %694, i32 0, i32 3, !dbg !16467
  %695 = load i16, i16* %f11033, align 4, !dbg !16467
  %conv1034 = sext i16 %695 to i32, !dbg !16466
  %and1035 = and i32 %conv1034, 1, !dbg !16468
  %tobool1036 = icmp ne i32 %and1035, 0, !dbg !16468
  br i1 %tobool1036, label %if.then1037, label %if.end1043, !dbg !16469

if.then1037:                                      ; preds = %land.lhs.true1032
  %696 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16470
  %697 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16472
  %pntsu1038 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %697, i32 0, i32 6, !dbg !16473
  %698 = load i32, i32* %pntsu1038, align 8, !dbg !16473
  %call1039 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %696, i32 %698, i32 1), !dbg !16474
  store %struct.Nurb* %call1039, %struct.Nurb** %nu1, align 8, !dbg !16475
  %699 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !16476
  %700 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !16477
  %bp1040 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %700, i32 0, i32 17, !dbg !16478
  %701 = load %struct.BPoint*, %struct.BPoint** %bp1040, align 8, !dbg !16478
  %702 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16479
  %bp1041 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %702, i32 0, i32 17, !dbg !16480
  %703 = load %struct.BPoint*, %struct.BPoint** %bp1041, align 8, !dbg !16480
  %704 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16481
  %pntsu1042 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %704, i32 0, i32 6, !dbg !16482
  %705 = load i32, i32* %pntsu1042, align 8, !dbg !16482
  call void @ED_curve_bpcpy(%struct.EditNurb* %699, %struct.BPoint* %701, %struct.BPoint* %703, i32 %705), !dbg !16483
  %706 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !16484
  %707 = bitcast %struct.Nurb* %706 to i8*, !dbg !16484
  call void @BLI_addtail(%struct.ListBase* %newnurb, i8* %707), !dbg !16485
  br label %if.end1043, !dbg !16486

if.end1043:                                       ; preds = %if.then1037, %land.lhs.true1032, %if.then1022
  %708 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16487
  %bp1044 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %708, i32 0, i32 17, !dbg !16488
  %709 = load %struct.BPoint*, %struct.BPoint** %bp1044, align 8, !dbg !16488
  %710 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16489
  %pntsu1045 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %710, i32 0, i32 6, !dbg !16490
  %711 = load i32, i32* %pntsu1045, align 8, !dbg !16490
  %712 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16491
  %pntsv1046 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %712, i32 0, i32 7, !dbg !16492
  %713 = load i32, i32* %pntsv1046, align 4, !dbg !16492
  %mul1047 = mul nsw i32 %711, %713, !dbg !16493
  %714 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16494
  %pntsu1048 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %714, i32 0, i32 6, !dbg !16495
  %715 = load i32, i32* %pntsu1048, align 8, !dbg !16495
  %sub1049 = sub nsw i32 %mul1047, %715, !dbg !16496
  %idxprom1050 = sext i32 %sub1049 to i64, !dbg !16487
  %arrayidx1051 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %709, i64 %idxprom1050, !dbg !16487
  store %struct.BPoint* %arrayidx1051, %struct.BPoint** %bp1, align 8, !dbg !16497
  %716 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16498
  %bp1052 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %716, i32 0, i32 17, !dbg !16499
  %717 = load %struct.BPoint*, %struct.BPoint** %bp1052, align 8, !dbg !16499
  %718 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16500
  %pntsu1053 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %718, i32 0, i32 6, !dbg !16501
  %719 = load i32, i32* %pntsu1053, align 8, !dbg !16501
  %720 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16502
  %pntsv1054 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %720, i32 0, i32 7, !dbg !16503
  %721 = load i32, i32* %pntsv1054, align 4, !dbg !16503
  %mul1055 = mul nsw i32 %719, %721, !dbg !16504
  %722 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16505
  %pntsu1056 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %722, i32 0, i32 6, !dbg !16506
  %723 = load i32, i32* %pntsu1056, align 8, !dbg !16506
  %mul1057 = mul nsw i32 %723, 2, !dbg !16507
  %sub1058 = sub nsw i32 %mul1055, %mul1057, !dbg !16508
  %idxprom1059 = sext i32 %sub1058 to i64, !dbg !16498
  %arrayidx1060 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %717, i64 %idxprom1059, !dbg !16498
  store %struct.BPoint* %arrayidx1060, %struct.BPoint** %bp2, align 8, !dbg !16509
  %724 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !16510
  %f11061 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %724, i32 0, i32 3, !dbg !16512
  %725 = load i16, i16* %f11061, align 4, !dbg !16512
  %conv1062 = sext i16 %725 to i32, !dbg !16510
  %and1063 = and i32 %conv1062, 1, !dbg !16513
  %tobool1064 = icmp ne i32 %and1063, 0, !dbg !16513
  br i1 %tobool1064, label %land.lhs.true1065, label %if.end1083, !dbg !16514

land.lhs.true1065:                                ; preds = %if.end1043
  %726 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !16515
  %f11066 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %726, i32 0, i32 3, !dbg !16516
  %727 = load i16, i16* %f11066, align 4, !dbg !16516
  %conv1067 = sext i16 %727 to i32, !dbg !16515
  %and1068 = and i32 %conv1067, 1, !dbg !16517
  %tobool1069 = icmp ne i32 %and1068, 0, !dbg !16517
  br i1 %tobool1069, label %if.then1070, label %if.end1083, !dbg !16518

if.then1070:                                      ; preds = %land.lhs.true1065
  %728 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16519
  %729 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16521
  %pntsu1071 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %729, i32 0, i32 6, !dbg !16522
  %730 = load i32, i32* %pntsu1071, align 8, !dbg !16522
  %call1072 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %728, i32 %730, i32 1), !dbg !16523
  store %struct.Nurb* %call1072, %struct.Nurb** %nu1, align 8, !dbg !16524
  %731 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !16525
  %732 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !16526
  %bp1073 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %732, i32 0, i32 17, !dbg !16527
  %733 = load %struct.BPoint*, %struct.BPoint** %bp1073, align 8, !dbg !16527
  %734 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16528
  %bp1074 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %734, i32 0, i32 17, !dbg !16529
  %735 = load %struct.BPoint*, %struct.BPoint** %bp1074, align 8, !dbg !16529
  %736 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16530
  %pntsu1075 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %736, i32 0, i32 6, !dbg !16531
  %737 = load i32, i32* %pntsu1075, align 8, !dbg !16531
  %738 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16532
  %pntsv1076 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %738, i32 0, i32 7, !dbg !16533
  %739 = load i32, i32* %pntsv1076, align 4, !dbg !16533
  %mul1077 = mul nsw i32 %737, %739, !dbg !16534
  %740 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16535
  %pntsu1078 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %740, i32 0, i32 6, !dbg !16536
  %741 = load i32, i32* %pntsu1078, align 8, !dbg !16536
  %sub1079 = sub nsw i32 %mul1077, %741, !dbg !16537
  %idxprom1080 = sext i32 %sub1079 to i64, !dbg !16528
  %arrayidx1081 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %735, i64 %idxprom1080, !dbg !16528
  %742 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16538
  %pntsu1082 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %742, i32 0, i32 6, !dbg !16539
  %743 = load i32, i32* %pntsu1082, align 8, !dbg !16539
  call void @ED_curve_bpcpy(%struct.EditNurb* %731, %struct.BPoint* %733, %struct.BPoint* %arrayidx1081, i32 %743), !dbg !16540
  %744 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !16541
  %745 = bitcast %struct.Nurb* %744 to i8*, !dbg !16541
  call void @BLI_addtail(%struct.ListBase* %newnurb, i8* %745), !dbg !16542
  br label %if.end1083, !dbg !16543

if.end1083:                                       ; preds = %if.then1070, %land.lhs.true1065, %if.end1043
  br label %if.end1084, !dbg !16544

if.end1084:                                       ; preds = %if.end1083, %land.lhs.true1017, %land.lhs.true1013, %land.lhs.true1010, %for.end1008
  br label %if.end1094, !dbg !16545

if.else1085:                                      ; preds = %if.else781
  %746 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16546
  %747 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16548
  %pntsu1086 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %747, i32 0, i32 6, !dbg !16549
  %748 = load i32, i32* %pntsu1086, align 8, !dbg !16549
  %749 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16550
  %pntsv1087 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %749, i32 0, i32 7, !dbg !16551
  %750 = load i32, i32* %pntsv1087, align 4, !dbg !16551
  %call1088 = call %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %746, i32 %748, i32 %750), !dbg !16552
  store %struct.Nurb* %call1088, %struct.Nurb** %nu1, align 8, !dbg !16553
  %751 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !16554
  %752 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !16555
  %bp1089 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %752, i32 0, i32 17, !dbg !16556
  %753 = load %struct.BPoint*, %struct.BPoint** %bp1089, align 8, !dbg !16556
  %754 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16557
  %bp1090 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %754, i32 0, i32 17, !dbg !16558
  %755 = load %struct.BPoint*, %struct.BPoint** %bp1090, align 8, !dbg !16558
  %756 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16559
  %pntsu1091 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %756, i32 0, i32 6, !dbg !16560
  %757 = load i32, i32* %pntsu1091, align 8, !dbg !16560
  %758 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16561
  %pntsv1092 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %758, i32 0, i32 7, !dbg !16562
  %759 = load i32, i32* %pntsv1092, align 4, !dbg !16562
  %mul1093 = mul nsw i32 %757, %759, !dbg !16563
  call void @ED_curve_bpcpy(%struct.EditNurb* %751, %struct.BPoint* %753, %struct.BPoint* %755, i32 %mul1093), !dbg !16564
  %760 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !16565
  %761 = bitcast %struct.Nurb* %760 to i8*, !dbg !16565
  call void @BLI_addtail(%struct.ListBase* %newnurb, i8* %761), !dbg !16566
  br label %if.end1094

if.end1094:                                       ; preds = %if.else1085, %if.end1084
  br label %if.end1095

if.end1095:                                       ; preds = %if.end1094, %if.end780
  br label %if.end1096, !dbg !16567

if.end1096:                                       ; preds = %if.end1095, %if.else427
  br label %if.end1097

if.end1097:                                       ; preds = %if.end1096, %if.end426
  br label %for.inc1098, !dbg !16568

for.inc1098:                                      ; preds = %if.end1097
  %762 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16569
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %762, i32 0, i32 0, !dbg !16570
  %763 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !16570
  store %struct.Nurb* %763, %struct.Nurb** %nu, align 8, !dbg !16571
  br label %for.cond, !dbg !16572, !llvm.loop !16573

for.end1099:                                      ; preds = %for.cond
  %first1100 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %newnurb, i32 0, i32 0, !dbg !16575
  %764 = load i8*, i8** %first1100, align 8, !dbg !16575
  %765 = bitcast i8* %764 to %struct.Nurb*, !dbg !16577
  store %struct.Nurb* %765, %struct.Nurb** %nu, align 8, !dbg !16578
  br label %for.cond1101, !dbg !16579

for.cond1101:                                     ; preds = %for.inc1148, %for.end1099
  %766 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16580
  %tobool1102 = icmp ne %struct.Nurb* %766, null, !dbg !16582
  br i1 %tobool1102, label %for.body1103, label %for.end1150, !dbg !16582

for.body1103:                                     ; preds = %for.cond1101
  %767 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16583
  %type1104 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %767, i32 0, i32 2, !dbg !16586
  %768 = load i16, i16* %type1104, align 8, !dbg !16586
  %conv1105 = sext i16 %768 to i32, !dbg !16583
  %cmp1106 = icmp eq i32 %conv1105, 1, !dbg !16587
  br i1 %cmp1106, label %if.then1108, label %if.else1123, !dbg !16588

if.then1108:                                      ; preds = %for.body1103
  %769 = load i8, i8* %split.addr, align 1, !dbg !16589
  %tobool1109 = icmp ne i8 %769, 0, !dbg !16589
  br i1 %tobool1109, label %if.then1110, label %if.end1122, !dbg !16592

if.then1110:                                      ; preds = %if.then1108
  store i32 0, i32* %b, align 4, !dbg !16593
  %770 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16596
  %bezt1111 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %770, i32 0, i32 18, !dbg !16597
  %771 = load %struct.BezTriple*, %struct.BezTriple** %bezt1111, align 8, !dbg !16597
  store %struct.BezTriple* %771, %struct.BezTriple** %bezt1, align 8, !dbg !16598
  br label %for.cond1112, !dbg !16599

for.cond1112:                                     ; preds = %for.inc1118, %if.then1110
  %772 = load i32, i32* %b, align 4, !dbg !16600
  %773 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16602
  %pntsu1113 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %773, i32 0, i32 6, !dbg !16603
  %774 = load i32, i32* %pntsu1113, align 8, !dbg !16603
  %cmp1114 = icmp slt i32 %772, %774, !dbg !16604
  br i1 %cmp1114, label %for.body1116, label %for.end1121, !dbg !16605

for.body1116:                                     ; preds = %for.cond1112
  %775 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !16606
  %call1117 = call zeroext i8 @select_beztriple(%struct.BezTriple* %775, i8 zeroext 0, i16 signext 1, i32 1), !dbg !16608
  br label %for.inc1118, !dbg !16609

for.inc1118:                                      ; preds = %for.body1116
  %776 = load i32, i32* %b, align 4, !dbg !16610
  %inc1119 = add nsw i32 %776, 1, !dbg !16610
  store i32 %inc1119, i32* %b, align 4, !dbg !16610
  %777 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !16611
  %incdec.ptr1120 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %777, i32 1, !dbg !16611
  store %struct.BezTriple* %incdec.ptr1120, %struct.BezTriple** %bezt1, align 8, !dbg !16611
  br label %for.cond1112, !dbg !16612, !llvm.loop !16613

for.end1121:                                      ; preds = %for.cond1112
  br label %if.end1122, !dbg !16615

if.end1122:                                       ; preds = %for.end1121, %if.then1108
  %778 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16616
  call void @BKE_nurb_handles_calc(%struct.Nurb* %778), !dbg !16617
  br label %if.end1147, !dbg !16618

if.else1123:                                      ; preds = %for.body1103
  %779 = load i8, i8* %split.addr, align 1, !dbg !16619
  %tobool1124 = icmp ne i8 %779, 0, !dbg !16619
  br i1 %tobool1124, label %if.then1125, label %if.end1139, !dbg !16622

if.then1125:                                      ; preds = %if.else1123
  store i32 0, i32* %b, align 4, !dbg !16623
  %780 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16626
  %bp1126 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %780, i32 0, i32 17, !dbg !16627
  %781 = load %struct.BPoint*, %struct.BPoint** %bp1126, align 8, !dbg !16627
  store %struct.BPoint* %781, %struct.BPoint** %bp1, align 8, !dbg !16628
  br label %for.cond1127, !dbg !16629

for.cond1127:                                     ; preds = %for.inc1135, %if.then1125
  %782 = load i32, i32* %b, align 4, !dbg !16630
  %783 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16632
  %pntsu1128 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %783, i32 0, i32 6, !dbg !16633
  %784 = load i32, i32* %pntsu1128, align 8, !dbg !16633
  %785 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16634
  %pntsv1129 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %785, i32 0, i32 7, !dbg !16635
  %786 = load i32, i32* %pntsv1129, align 4, !dbg !16635
  %mul1130 = mul nsw i32 %784, %786, !dbg !16636
  %cmp1131 = icmp slt i32 %782, %mul1130, !dbg !16637
  br i1 %cmp1131, label %for.body1133, label %for.end1138, !dbg !16638

for.body1133:                                     ; preds = %for.cond1127
  %787 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !16639
  %call1134 = call zeroext i8 @select_bpoint(%struct.BPoint* %787, i8 zeroext 0, i16 signext 1, i8 zeroext 1), !dbg !16641
  br label %for.inc1135, !dbg !16642

for.inc1135:                                      ; preds = %for.body1133
  %788 = load i32, i32* %b, align 4, !dbg !16643
  %inc1136 = add nsw i32 %788, 1, !dbg !16643
  store i32 %inc1136, i32* %b, align 4, !dbg !16643
  %789 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !16644
  %incdec.ptr1137 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %789, i32 1, !dbg !16644
  store %struct.BPoint* %incdec.ptr1137, %struct.BPoint** %bp1, align 8, !dbg !16644
  br label %for.cond1127, !dbg !16645, !llvm.loop !16646

for.end1138:                                      ; preds = %for.cond1127
  br label %if.end1139, !dbg !16648

if.end1139:                                       ; preds = %for.end1138, %if.else1123
  %790 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16649
  %knotsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %790, i32 0, i32 16, !dbg !16650
  store float* null, float** %knotsv, align 8, !dbg !16651
  %791 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16652
  %knotsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %791, i32 0, i32 15, !dbg !16653
  store float* null, float** %knotsu, align 8, !dbg !16654
  %792 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16655
  %call1140 = call zeroext i8 @BKE_nurb_order_clamp_u(%struct.Nurb* %792), !dbg !16656
  %793 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16657
  call void @BKE_nurb_knot_calc_u(%struct.Nurb* %793), !dbg !16658
  %794 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16659
  %pntsv1141 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %794, i32 0, i32 7, !dbg !16661
  %795 = load i32, i32* %pntsv1141, align 4, !dbg !16661
  %cmp1142 = icmp sgt i32 %795, 1, !dbg !16662
  br i1 %cmp1142, label %if.then1144, label %if.end1146, !dbg !16663

if.then1144:                                      ; preds = %if.end1139
  %796 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16664
  %call1145 = call zeroext i8 @BKE_nurb_order_clamp_v(%struct.Nurb* %796), !dbg !16666
  %797 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16667
  call void @BKE_nurb_knot_calc_v(%struct.Nurb* %797), !dbg !16668
  br label %if.end1146, !dbg !16669

if.end1146:                                       ; preds = %if.then1144, %if.end1139
  br label %if.end1147

if.end1147:                                       ; preds = %if.end1146, %if.end1122
  br label %for.inc1148, !dbg !16670

for.inc1148:                                      ; preds = %if.end1147
  %798 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16671
  %next1149 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %798, i32 0, i32 0, !dbg !16672
  %799 = load %struct.Nurb*, %struct.Nurb** %next1149, align 8, !dbg !16672
  store %struct.Nurb* %799, %struct.Nurb** %nu, align 8, !dbg !16673
  br label %for.cond1101, !dbg !16674, !llvm.loop !16675

for.end1150:                                      ; preds = %for.cond1101
  %800 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !16677
  %801 = load %struct.ListBase*, %struct.ListBase** %nubase, align 8, !dbg !16678
  call void @keyIndex_delNurbList(%struct.EditNurb* %800, %struct.ListBase* %801), !dbg !16679
  %802 = load %struct.ListBase*, %struct.ListBase** %nubase, align 8, !dbg !16680
  call void @BKE_nurbList_free(%struct.ListBase* %802), !dbg !16681
  %803 = load %struct.ListBase*, %struct.ListBase** %nubase, align 8, !dbg !16682
  call void @BLI_movelisttolist(%struct.ListBase* %803, %struct.ListBase* %newnurb), !dbg !16683
  ret i32 4, !dbg !16684
}

declare dso_local void @DAG_id_tag_update(%struct.ID*, i16 signext) #2

declare dso_local %struct.Nurb* @BKE_nurb_copy(%struct.Nurb*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @isNurbselU(%struct.Nurb* %nu, i32* %v, i32 %flag) #0 !dbg !16685 {
entry:
  %retval = alloca i8, align 1
  %nu.addr = alloca %struct.Nurb*, align 8
  %v.addr = alloca i32*, align 8
  %flag.addr = alloca i32, align 4
  %bp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %sel = alloca i32, align 4
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !16688, metadata !DIExpression()), !dbg !16689
  store i32* %v, i32** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %v.addr, metadata !16690, metadata !DIExpression()), !dbg !16691
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !16692, metadata !DIExpression()), !dbg !16693
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !16694, metadata !DIExpression()), !dbg !16695
  call void @llvm.dbg.declare(metadata i32* %a, metadata !16696, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.declare(metadata i32* %b, metadata !16698, metadata !DIExpression()), !dbg !16699
  call void @llvm.dbg.declare(metadata i32* %sel, metadata !16700, metadata !DIExpression()), !dbg !16701
  %0 = load i32*, i32** %v.addr, align 8, !dbg !16702
  store i32 0, i32* %0, align 4, !dbg !16703
  store i32 0, i32* %b, align 4, !dbg !16704
  %1 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !16706
  %bp1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %1, i32 0, i32 17, !dbg !16707
  %2 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !16707
  store %struct.BPoint* %2, %struct.BPoint** %bp, align 8, !dbg !16708
  br label %for.cond, !dbg !16709

for.cond:                                         ; preds = %for.inc16, %entry
  %3 = load i32, i32* %b, align 4, !dbg !16710
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !16712
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 7, !dbg !16713
  %5 = load i32, i32* %pntsv, align 4, !dbg !16713
  %cmp = icmp slt i32 %3, %5, !dbg !16714
  br i1 %cmp, label %for.body, label %for.end18, !dbg !16715

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %sel, align 4, !dbg !16716
  store i32 0, i32* %a, align 4, !dbg !16718
  br label %for.cond2, !dbg !16720

for.cond2:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %a, align 4, !dbg !16721
  %7 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !16723
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %7, i32 0, i32 6, !dbg !16724
  %8 = load i32, i32* %pntsu, align 8, !dbg !16724
  %cmp3 = icmp slt i32 %6, %8, !dbg !16725
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !16726

for.body4:                                        ; preds = %for.cond2
  %9 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !16727
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %9, i32 0, i32 3, !dbg !16730
  %10 = load i16, i16* %f1, align 4, !dbg !16730
  %conv = sext i16 %10 to i32, !dbg !16727
  %11 = load i32, i32* %flag.addr, align 4, !dbg !16731
  %and = and i32 %conv, %11, !dbg !16732
  %tobool = icmp ne i32 %and, 0, !dbg !16732
  br i1 %tobool, label %if.then, label %if.end, !dbg !16733

if.then:                                          ; preds = %for.body4
  %12 = load i32, i32* %sel, align 4, !dbg !16734
  %inc = add nsw i32 %12, 1, !dbg !16734
  store i32 %inc, i32* %sel, align 4, !dbg !16734
  br label %if.end, !dbg !16735

if.end:                                           ; preds = %if.then, %for.body4
  br label %for.inc, !dbg !16736

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %a, align 4, !dbg !16737
  %inc5 = add nsw i32 %13, 1, !dbg !16737
  store i32 %inc5, i32* %a, align 4, !dbg !16737
  %14 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !16738
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %14, i32 1, !dbg !16738
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp, align 8, !dbg !16738
  br label %for.cond2, !dbg !16739, !llvm.loop !16740

for.end:                                          ; preds = %for.cond2
  %15 = load i32, i32* %sel, align 4, !dbg !16742
  %16 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !16744
  %pntsu6 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %16, i32 0, i32 6, !dbg !16745
  %17 = load i32, i32* %pntsu6, align 8, !dbg !16745
  %cmp7 = icmp eq i32 %15, %17, !dbg !16746
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !16747

if.then9:                                         ; preds = %for.end
  %18 = load i32*, i32** %v.addr, align 8, !dbg !16748
  %19 = load i32, i32* %18, align 4, !dbg !16750
  %inc10 = add nsw i32 %19, 1, !dbg !16750
  store i32 %inc10, i32* %18, align 4, !dbg !16750
  br label %if.end15, !dbg !16751

if.else:                                          ; preds = %for.end
  %20 = load i32, i32* %sel, align 4, !dbg !16752
  %cmp11 = icmp sge i32 %20, 1, !dbg !16754
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !16755

if.then13:                                        ; preds = %if.else
  %21 = load i32*, i32** %v.addr, align 8, !dbg !16756
  store i32 0, i32* %21, align 4, !dbg !16758
  store i8 0, i8* %retval, align 1, !dbg !16759
  br label %return, !dbg !16759

if.end14:                                         ; preds = %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then9
  br label %for.inc16, !dbg !16760

for.inc16:                                        ; preds = %if.end15
  %22 = load i32, i32* %b, align 4, !dbg !16761
  %inc17 = add nsw i32 %22, 1, !dbg !16761
  store i32 %inc17, i32* %b, align 4, !dbg !16761
  br label %for.cond, !dbg !16762, !llvm.loop !16763

for.end18:                                        ; preds = %for.cond
  store i8 1, i8* %retval, align 1, !dbg !16765
  br label %return, !dbg !16765

return:                                           ; preds = %for.end18, %if.then13
  %23 = load i8, i8* %retval, align 1, !dbg !16766
  ret i8 %23, !dbg !16766
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @isNurbselV(%struct.Nurb* %nu, i32* %u, i32 %flag) #0 !dbg !16767 {
entry:
  %retval = alloca i8, align 1
  %nu.addr = alloca %struct.Nurb*, align 8
  %u.addr = alloca i32*, align 8
  %flag.addr = alloca i32, align 4
  %bp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %sel = alloca i32, align 4
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !16768, metadata !DIExpression()), !dbg !16769
  store i32* %u, i32** %u.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %u.addr, metadata !16770, metadata !DIExpression()), !dbg !16771
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !16772, metadata !DIExpression()), !dbg !16773
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !16774, metadata !DIExpression()), !dbg !16775
  call void @llvm.dbg.declare(metadata i32* %a, metadata !16776, metadata !DIExpression()), !dbg !16777
  call void @llvm.dbg.declare(metadata i32* %b, metadata !16778, metadata !DIExpression()), !dbg !16779
  call void @llvm.dbg.declare(metadata i32* %sel, metadata !16780, metadata !DIExpression()), !dbg !16781
  %0 = load i32*, i32** %u.addr, align 8, !dbg !16782
  store i32 0, i32* %0, align 4, !dbg !16783
  store i32 0, i32* %a, align 4, !dbg !16784
  br label %for.cond, !dbg !16786

for.cond:                                         ; preds = %for.inc17, %entry
  %1 = load i32, i32* %a, align 4, !dbg !16787
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !16789
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %2, i32 0, i32 6, !dbg !16790
  %3 = load i32, i32* %pntsu, align 8, !dbg !16790
  %cmp = icmp slt i32 %1, %3, !dbg !16791
  br i1 %cmp, label %for.body, label %for.end19, !dbg !16792

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !16793
  %bp1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 17, !dbg !16795
  %5 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !16795
  %6 = load i32, i32* %a, align 4, !dbg !16796
  %idxprom = sext i32 %6 to i64, !dbg !16793
  %arrayidx = getelementptr inbounds %struct.BPoint, %struct.BPoint* %5, i64 %idxprom, !dbg !16793
  store %struct.BPoint* %arrayidx, %struct.BPoint** %bp, align 8, !dbg !16797
  store i32 0, i32* %sel, align 4, !dbg !16798
  store i32 0, i32* %b, align 4, !dbg !16799
  br label %for.cond2, !dbg !16801

for.cond2:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %b, align 4, !dbg !16802
  %8 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !16804
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 7, !dbg !16805
  %9 = load i32, i32* %pntsv, align 4, !dbg !16805
  %cmp3 = icmp slt i32 %7, %9, !dbg !16806
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !16807

for.body4:                                        ; preds = %for.cond2
  %10 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !16808
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %10, i32 0, i32 3, !dbg !16811
  %11 = load i16, i16* %f1, align 4, !dbg !16811
  %conv = sext i16 %11 to i32, !dbg !16808
  %12 = load i32, i32* %flag.addr, align 4, !dbg !16812
  %and = and i32 %conv, %12, !dbg !16813
  %tobool = icmp ne i32 %and, 0, !dbg !16813
  br i1 %tobool, label %if.then, label %if.end, !dbg !16814

if.then:                                          ; preds = %for.body4
  %13 = load i32, i32* %sel, align 4, !dbg !16815
  %inc = add nsw i32 %13, 1, !dbg !16815
  store i32 %inc, i32* %sel, align 4, !dbg !16815
  br label %if.end, !dbg !16816

if.end:                                           ; preds = %if.then, %for.body4
  br label %for.inc, !dbg !16817

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %b, align 4, !dbg !16818
  %inc5 = add nsw i32 %14, 1, !dbg !16818
  store i32 %inc5, i32* %b, align 4, !dbg !16818
  %15 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !16819
  %pntsu6 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %15, i32 0, i32 6, !dbg !16820
  %16 = load i32, i32* %pntsu6, align 8, !dbg !16820
  %17 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !16821
  %idx.ext = sext i32 %16 to i64, !dbg !16821
  %add.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %17, i64 %idx.ext, !dbg !16821
  store %struct.BPoint* %add.ptr, %struct.BPoint** %bp, align 8, !dbg !16821
  br label %for.cond2, !dbg !16822, !llvm.loop !16823

for.end:                                          ; preds = %for.cond2
  %18 = load i32, i32* %sel, align 4, !dbg !16825
  %19 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !16827
  %pntsv7 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %19, i32 0, i32 7, !dbg !16828
  %20 = load i32, i32* %pntsv7, align 4, !dbg !16828
  %cmp8 = icmp eq i32 %18, %20, !dbg !16829
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !16830

if.then10:                                        ; preds = %for.end
  %21 = load i32*, i32** %u.addr, align 8, !dbg !16831
  %22 = load i32, i32* %21, align 4, !dbg !16833
  %inc11 = add nsw i32 %22, 1, !dbg !16833
  store i32 %inc11, i32* %21, align 4, !dbg !16833
  br label %if.end16, !dbg !16834

if.else:                                          ; preds = %for.end
  %23 = load i32, i32* %sel, align 4, !dbg !16835
  %cmp12 = icmp sge i32 %23, 1, !dbg !16837
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !16838

if.then14:                                        ; preds = %if.else
  %24 = load i32*, i32** %u.addr, align 8, !dbg !16839
  store i32 0, i32* %24, align 4, !dbg !16841
  store i8 0, i8* %retval, align 1, !dbg !16842
  br label %return, !dbg !16842

if.end15:                                         ; preds = %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then10
  br label %for.inc17, !dbg !16843

for.inc17:                                        ; preds = %if.end16
  %25 = load i32, i32* %a, align 4, !dbg !16844
  %inc18 = add nsw i32 %25, 1, !dbg !16844
  store i32 %inc18, i32* %a, align 4, !dbg !16844
  br label %for.cond, !dbg !16845, !llvm.loop !16846

for.end19:                                        ; preds = %for.cond
  store i8 1, i8* %retval, align 1, !dbg !16848
  br label %return, !dbg !16848

return:                                           ; preds = %for.end19, %if.then14
  %26 = load i8, i8* %retval, align 1, !dbg !16849
  ret i8 %26, !dbg !16849
}

declare dso_local void @BKE_nurb_handle_calc_simple(%struct.Nurb*, %struct.BezTriple*) #2

declare dso_local zeroext i8 @BKE_nurb_order_clamp_v(%struct.Nurb*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @keyIndex_delNurbList(%struct.EditNurb* %editnurb, %struct.ListBase* %nubase) #0 !dbg !16850 {
entry:
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %nubase.addr = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !16851, metadata !DIExpression()), !dbg !16852
  store %struct.ListBase* %nubase, %struct.ListBase** %nubase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nubase.addr, metadata !16853, metadata !DIExpression()), !dbg !16854
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !16855, metadata !DIExpression()), !dbg !16856
  %0 = load %struct.ListBase*, %struct.ListBase** %nubase.addr, align 8, !dbg !16857
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !16858
  %1 = load i8*, i8** %first, align 8, !dbg !16858
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !16857
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !16856
  br label %while.cond, !dbg !16859

while.cond:                                       ; preds = %while.body, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16860
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !16859
  br i1 %tobool, label %while.body, label %while.end, !dbg !16859

while.body:                                       ; preds = %while.cond
  %4 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !16861
  %5 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16863
  call void @keyIndex_delNurb(%struct.EditNurb* %4, %struct.Nurb* %5), !dbg !16864
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !16865
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 0, !dbg !16866
  %7 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !16866
  store %struct.Nurb* %7, %struct.Nurb** %nu, align 8, !dbg !16867
  br label %while.cond, !dbg !16859, !llvm.loop !16868

while.end:                                        ; preds = %while.cond
  ret void, !dbg !16870
}

; Function Attrs: noinline nounwind uwtable
define internal void @keyIndex_delNurb(%struct.EditNurb* %editnurb, %struct.Nurb* %nu) #0 !dbg !16871 {
entry:
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %nu.addr = alloca %struct.Nurb*, align 8
  %a = alloca i32, align 4
  %bezt3 = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !16874, metadata !DIExpression()), !dbg !16875
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !16876, metadata !DIExpression()), !dbg !16877
  call void @llvm.dbg.declare(metadata i32* %a, metadata !16878, metadata !DIExpression()), !dbg !16879
  %0 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !16880
  %keyindex = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %0, i32 0, i32 1, !dbg !16882
  %1 = load %struct.GHash*, %struct.GHash** %keyindex, align 8, !dbg !16882
  %tobool = icmp ne %struct.GHash* %1, null, !dbg !16880
  br i1 %tobool, label %if.end, label %if.then, !dbg !16883

if.then:                                          ; preds = %entry
  br label %if.end17, !dbg !16884

if.end:                                           ; preds = %entry
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !16886
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %2, i32 0, i32 18, !dbg !16888
  %3 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !16888
  %tobool1 = icmp ne %struct.BezTriple* %3, null, !dbg !16886
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !16889

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt3, metadata !16890, metadata !DIExpression()), !dbg !16892
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !16893
  %bezt4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 18, !dbg !16894
  %5 = load %struct.BezTriple*, %struct.BezTriple** %bezt4, align 8, !dbg !16894
  store %struct.BezTriple* %5, %struct.BezTriple** %bezt3, align 8, !dbg !16892
  %6 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !16895
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 6, !dbg !16896
  %7 = load i32, i32* %pntsu, align 8, !dbg !16896
  store i32 %7, i32* %a, align 4, !dbg !16897
  br label %while.cond, !dbg !16898

while.cond:                                       ; preds = %while.body, %if.then2
  %8 = load i32, i32* %a, align 4, !dbg !16899
  %dec = add nsw i32 %8, -1, !dbg !16899
  store i32 %dec, i32* %a, align 4, !dbg !16899
  %tobool5 = icmp ne i32 %8, 0, !dbg !16898
  br i1 %tobool5, label %while.body, label %while.end, !dbg !16898

while.body:                                       ; preds = %while.cond
  %9 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !16900
  %keyindex6 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %9, i32 0, i32 1, !dbg !16902
  %10 = load %struct.GHash*, %struct.GHash** %keyindex6, align 8, !dbg !16902
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt3, align 8, !dbg !16903
  %12 = bitcast %struct.BezTriple* %11 to i8*, !dbg !16903
  %13 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16904
  %call = call zeroext i8 @BLI_ghash_remove(%struct.GHash* %10, i8* %12, void (i8*)* null, void (i8*)* %13), !dbg !16905
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt3, align 8, !dbg !16906
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %14, i32 1, !dbg !16906
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt3, align 8, !dbg !16906
  br label %while.cond, !dbg !16898, !llvm.loop !16907

while.end:                                        ; preds = %while.cond
  br label %if.end17, !dbg !16909

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !16910, metadata !DIExpression()), !dbg !16912
  %15 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !16913
  %bp7 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %15, i32 0, i32 17, !dbg !16914
  %16 = load %struct.BPoint*, %struct.BPoint** %bp7, align 8, !dbg !16914
  store %struct.BPoint* %16, %struct.BPoint** %bp, align 8, !dbg !16912
  %17 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !16915
  %pntsu8 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %17, i32 0, i32 6, !dbg !16916
  %18 = load i32, i32* %pntsu8, align 8, !dbg !16916
  %19 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !16917
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %19, i32 0, i32 7, !dbg !16918
  %20 = load i32, i32* %pntsv, align 4, !dbg !16918
  %mul = mul nsw i32 %18, %20, !dbg !16919
  store i32 %mul, i32* %a, align 4, !dbg !16920
  br label %while.cond9, !dbg !16921

while.cond9:                                      ; preds = %while.body12, %if.else
  %21 = load i32, i32* %a, align 4, !dbg !16922
  %dec10 = add nsw i32 %21, -1, !dbg !16922
  store i32 %dec10, i32* %a, align 4, !dbg !16922
  %tobool11 = icmp ne i32 %21, 0, !dbg !16921
  br i1 %tobool11, label %while.body12, label %while.end16, !dbg !16921

while.body12:                                     ; preds = %while.cond9
  %22 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !16923
  %keyindex13 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %22, i32 0, i32 1, !dbg !16925
  %23 = load %struct.GHash*, %struct.GHash** %keyindex13, align 8, !dbg !16925
  %24 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !16926
  %25 = bitcast %struct.BPoint* %24 to i8*, !dbg !16926
  %26 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16927
  %call14 = call zeroext i8 @BLI_ghash_remove(%struct.GHash* %23, i8* %25, void (i8*)* null, void (i8*)* %26), !dbg !16928
  %27 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !16929
  %incdec.ptr15 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %27, i32 1, !dbg !16929
  store %struct.BPoint* %incdec.ptr15, %struct.BPoint** %bp, align 8, !dbg !16929
  br label %while.cond9, !dbg !16921, !llvm.loop !16930

while.end16:                                      ; preds = %while.cond9
  br label %if.end17

if.end17:                                         ; preds = %if.then, %while.end16, %while.end
  ret void, !dbg !16932
}

declare dso_local zeroext i8 @BLI_ghash_remove(%struct.GHash*, i8*, void (i8*)*, void (i8*)*) #2

declare dso_local void @BKE_nurb_direction_switch(%struct.Nurb*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @keyData_switchDirectionNurb(%struct.Curve* %cu, %struct.Nurb* %nu) #0 !dbg !16933 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %nu.addr = alloca %struct.Nurb*, align 8
  %editnurb = alloca %struct.EditNurb*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !16936, metadata !DIExpression()), !dbg !16937
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !16938, metadata !DIExpression()), !dbg !16939
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb, metadata !16940, metadata !DIExpression()), !dbg !16941
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !16942
  %editnurb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 4, !dbg !16943
  %1 = load %struct.EditNurb*, %struct.EditNurb** %editnurb1, align 8, !dbg !16943
  store %struct.EditNurb* %1, %struct.EditNurb** %editnurb, align 8, !dbg !16941
  %2 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !16944
  %keyindex = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %2, i32 0, i32 1, !dbg !16946
  %3 = load %struct.GHash*, %struct.GHash** %keyindex, align 8, !dbg !16946
  %tobool = icmp ne %struct.GHash* %3, null, !dbg !16944
  br i1 %tobool, label %if.end, label %if.then, !dbg !16947

if.then:                                          ; preds = %entry
  br label %if.end4, !dbg !16948

if.end:                                           ; preds = %entry
  %4 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !16950
  %5 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !16951
  call void @keyIndex_switchDirection(%struct.EditNurb* %4, %struct.Nurb* %5), !dbg !16952
  %6 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !16953
  %key = getelementptr inbounds %struct.Curve, %struct.Curve* %6, i32 0, i32 9, !dbg !16955
  %7 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !16955
  %tobool2 = icmp ne %struct.Key* %7, null, !dbg !16953
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !16956

if.then3:                                         ; preds = %if.end
  %8 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !16957
  %9 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !16958
  call void @switch_keys_direction(%struct.Curve* %8, %struct.Nurb* %9), !dbg !16959
  br label %if.end4, !dbg !16959

if.end4:                                          ; preds = %if.then, %if.then3, %if.end
  ret void, !dbg !16960
}

; Function Attrs: noinline nounwind uwtable
define internal void @keyIndex_switchDirection(%struct.EditNurb* %editnurb, %struct.Nurb* %nu) #0 !dbg !16961 {
entry:
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %nu.addr = alloca %struct.Nurb*, align 8
  %a = alloca i32, align 4
  %index1 = alloca %struct.CVKeyIndex*, align 8
  %index2 = alloca %struct.CVKeyIndex*, align 8
  %bezt1 = alloca %struct.BezTriple*, align 8
  %bezt2 = alloca %struct.BezTriple*, align 8
  %bp1 = alloca %struct.BPoint*, align 8
  %bp2 = alloca %struct.BPoint*, align 8
  %b = alloca i32, align 4
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !16962, metadata !DIExpression()), !dbg !16963
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !16964, metadata !DIExpression()), !dbg !16965
  call void @llvm.dbg.declare(metadata i32* %a, metadata !16966, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.declare(metadata %struct.CVKeyIndex** %index1, metadata !16968, metadata !DIExpression()), !dbg !16969
  call void @llvm.dbg.declare(metadata %struct.CVKeyIndex** %index2, metadata !16970, metadata !DIExpression()), !dbg !16971
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !16972
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %0, i32 0, i32 18, !dbg !16974
  %1 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !16974
  %tobool = icmp ne %struct.BezTriple* %1, null, !dbg !16972
  br i1 %tobool, label %if.then, label %if.else, !dbg !16975

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt1, metadata !16976, metadata !DIExpression()), !dbg !16978
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt2, metadata !16979, metadata !DIExpression()), !dbg !16980
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !16981
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %2, i32 0, i32 6, !dbg !16982
  %3 = load i32, i32* %pntsu, align 8, !dbg !16982
  store i32 %3, i32* %a, align 4, !dbg !16983
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !16984
  %bezt3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 18, !dbg !16985
  %5 = load %struct.BezTriple*, %struct.BezTriple** %bezt3, align 8, !dbg !16985
  store %struct.BezTriple* %5, %struct.BezTriple** %bezt1, align 8, !dbg !16986
  %6 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !16987
  %7 = load i32, i32* %a, align 4, !dbg !16988
  %sub = sub nsw i32 %7, 1, !dbg !16989
  %idx.ext = sext i32 %sub to i64, !dbg !16990
  %add.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %6, i64 %idx.ext, !dbg !16990
  store %struct.BezTriple* %add.ptr, %struct.BezTriple** %bezt2, align 8, !dbg !16991
  %8 = load i32, i32* %a, align 4, !dbg !16992
  %and = and i32 %8, 1, !dbg !16994
  %tobool4 = icmp ne i32 %and, 0, !dbg !16994
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !16995

if.then5:                                         ; preds = %if.then
  %9 = load i32, i32* %a, align 4, !dbg !16996
  %inc = add nsw i32 %9, 1, !dbg !16996
  store i32 %inc, i32* %a, align 4, !dbg !16996
  br label %if.end, !dbg !16996

if.end:                                           ; preds = %if.then5, %if.then
  %10 = load i32, i32* %a, align 4, !dbg !16997
  %div = sdiv i32 %10, 2, !dbg !16997
  store i32 %div, i32* %a, align 4, !dbg !16997
  br label %while.cond, !dbg !16998

while.cond:                                       ; preds = %if.end24, %if.end
  %11 = load i32, i32* %a, align 4, !dbg !16999
  %dec = add nsw i32 %11, -1, !dbg !16999
  store i32 %dec, i32* %a, align 4, !dbg !16999
  %tobool6 = icmp ne i32 %11, 0, !dbg !16998
  br i1 %tobool6, label %while.body, label %while.end, !dbg !16998

while.body:                                       ; preds = %while.cond
  %12 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !17000
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !17002
  %14 = bitcast %struct.BezTriple* %13 to i8*, !dbg !17002
  %call = call %struct.CVKeyIndex* @getCVKeyIndex(%struct.EditNurb* %12, i8* %14), !dbg !17003
  store %struct.CVKeyIndex* %call, %struct.CVKeyIndex** %index1, align 8, !dbg !17004
  %15 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !17005
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !17006
  %17 = bitcast %struct.BezTriple* %16 to i8*, !dbg !17006
  %call7 = call %struct.CVKeyIndex* @getCVKeyIndex(%struct.EditNurb* %15, i8* %17), !dbg !17007
  store %struct.CVKeyIndex* %call7, %struct.CVKeyIndex** %index2, align 8, !dbg !17008
  %18 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index1, align 8, !dbg !17009
  %tobool8 = icmp ne %struct.CVKeyIndex* %18, null, !dbg !17009
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !17011

if.then9:                                         ; preds = %while.body
  %19 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index1, align 8, !dbg !17012
  %switched = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %19, i32 0, i32 5, !dbg !17013
  %20 = load i8, i8* %switched, align 8, !dbg !17013
  %tobool10 = icmp ne i8 %20, 0, !dbg !17014
  %lnot = xor i1 %tobool10, true, !dbg !17014
  %lnot.ext = zext i1 %lnot to i32, !dbg !17014
  %conv = trunc i32 %lnot.ext to i8, !dbg !17014
  %21 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index1, align 8, !dbg !17015
  %switched11 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %21, i32 0, i32 5, !dbg !17016
  store i8 %conv, i8* %switched11, align 8, !dbg !17017
  br label %if.end12, !dbg !17015

if.end12:                                         ; preds = %if.then9, %while.body
  %22 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !17018
  %23 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !17020
  %cmp = icmp ne %struct.BezTriple* %22, %23, !dbg !17021
  br i1 %cmp, label %if.then14, label %if.end24, !dbg !17022

if.then14:                                        ; preds = %if.end12
  %24 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !17023
  %25 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !17025
  %26 = bitcast %struct.BezTriple* %25 to i8*, !dbg !17025
  %27 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !17026
  %28 = bitcast %struct.BezTriple* %27 to i8*, !dbg !17026
  call void @keyIndex_swap(%struct.EditNurb* %24, i8* %26, i8* %28), !dbg !17027
  %29 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index2, align 8, !dbg !17028
  %tobool15 = icmp ne %struct.CVKeyIndex* %29, null, !dbg !17028
  br i1 %tobool15, label %if.then16, label %if.end23, !dbg !17030

if.then16:                                        ; preds = %if.then14
  %30 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index2, align 8, !dbg !17031
  %switched17 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %30, i32 0, i32 5, !dbg !17032
  %31 = load i8, i8* %switched17, align 8, !dbg !17032
  %tobool18 = icmp ne i8 %31, 0, !dbg !17033
  %lnot19 = xor i1 %tobool18, true, !dbg !17033
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !17033
  %conv21 = trunc i32 %lnot.ext20 to i8, !dbg !17033
  %32 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index2, align 8, !dbg !17034
  %switched22 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %32, i32 0, i32 5, !dbg !17035
  store i8 %conv21, i8* %switched22, align 8, !dbg !17036
  br label %if.end23, !dbg !17034

if.end23:                                         ; preds = %if.then16, %if.then14
  br label %if.end24, !dbg !17037

if.end24:                                         ; preds = %if.end23, %if.end12
  %33 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !17038
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %33, i32 1, !dbg !17038
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt1, align 8, !dbg !17038
  %34 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !17039
  %incdec.ptr25 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %34, i32 -1, !dbg !17039
  store %struct.BezTriple* %incdec.ptr25, %struct.BezTriple** %bezt2, align 8, !dbg !17039
  br label %while.cond, !dbg !16998, !llvm.loop !17040

while.end:                                        ; preds = %while.cond
  br label %if.end117, !dbg !17042

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp1, metadata !17043, metadata !DIExpression()), !dbg !17045
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp2, metadata !17046, metadata !DIExpression()), !dbg !17047
  %35 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !17048
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %35, i32 0, i32 7, !dbg !17050
  %36 = load i32, i32* %pntsv, align 4, !dbg !17050
  %cmp26 = icmp eq i32 %36, 1, !dbg !17051
  br i1 %cmp26, label %if.then28, label %if.else68, !dbg !17052

if.then28:                                        ; preds = %if.else
  %37 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !17053
  %pntsu29 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %37, i32 0, i32 6, !dbg !17055
  %38 = load i32, i32* %pntsu29, align 8, !dbg !17055
  store i32 %38, i32* %a, align 4, !dbg !17056
  %39 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !17057
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %39, i32 0, i32 17, !dbg !17058
  %40 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !17058
  store %struct.BPoint* %40, %struct.BPoint** %bp1, align 8, !dbg !17059
  %41 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !17060
  %42 = load i32, i32* %a, align 4, !dbg !17061
  %sub30 = sub nsw i32 %42, 1, !dbg !17062
  %idx.ext31 = sext i32 %sub30 to i64, !dbg !17063
  %add.ptr32 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %41, i64 %idx.ext31, !dbg !17063
  store %struct.BPoint* %add.ptr32, %struct.BPoint** %bp2, align 8, !dbg !17064
  %43 = load i32, i32* %a, align 4, !dbg !17065
  %div33 = sdiv i32 %43, 2, !dbg !17065
  store i32 %div33, i32* %a, align 4, !dbg !17065
  br label %while.cond34, !dbg !17066

while.cond34:                                     ; preds = %if.end63, %if.then28
  %44 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !17067
  %45 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !17068
  %cmp35 = icmp ne %struct.BPoint* %44, %45, !dbg !17069
  br i1 %cmp35, label %land.rhs, label %land.end, !dbg !17070

land.rhs:                                         ; preds = %while.cond34
  %46 = load i32, i32* %a, align 4, !dbg !17071
  %cmp37 = icmp sgt i32 %46, 0, !dbg !17072
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond34
  %47 = phi i1 [ false, %while.cond34 ], [ %cmp37, %land.rhs ], !dbg !17073
  br i1 %47, label %while.body39, label %while.end67, !dbg !17066

while.body39:                                     ; preds = %land.end
  %48 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !17074
  %49 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !17076
  %50 = bitcast %struct.BPoint* %49 to i8*, !dbg !17076
  %call40 = call %struct.CVKeyIndex* @getCVKeyIndex(%struct.EditNurb* %48, i8* %50), !dbg !17077
  store %struct.CVKeyIndex* %call40, %struct.CVKeyIndex** %index1, align 8, !dbg !17078
  %51 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !17079
  %52 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !17080
  %53 = bitcast %struct.BPoint* %52 to i8*, !dbg !17080
  %call41 = call %struct.CVKeyIndex* @getCVKeyIndex(%struct.EditNurb* %51, i8* %53), !dbg !17081
  store %struct.CVKeyIndex* %call41, %struct.CVKeyIndex** %index2, align 8, !dbg !17082
  %54 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index1, align 8, !dbg !17083
  %tobool42 = icmp ne %struct.CVKeyIndex* %54, null, !dbg !17083
  br i1 %tobool42, label %if.then43, label %if.end50, !dbg !17085

if.then43:                                        ; preds = %while.body39
  %55 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index1, align 8, !dbg !17086
  %switched44 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %55, i32 0, i32 5, !dbg !17087
  %56 = load i8, i8* %switched44, align 8, !dbg !17087
  %tobool45 = icmp ne i8 %56, 0, !dbg !17088
  %lnot46 = xor i1 %tobool45, true, !dbg !17088
  %lnot.ext47 = zext i1 %lnot46 to i32, !dbg !17088
  %conv48 = trunc i32 %lnot.ext47 to i8, !dbg !17088
  %57 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index1, align 8, !dbg !17089
  %switched49 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %57, i32 0, i32 5, !dbg !17090
  store i8 %conv48, i8* %switched49, align 8, !dbg !17091
  br label %if.end50, !dbg !17089

if.end50:                                         ; preds = %if.then43, %while.body39
  %58 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !17092
  %59 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !17094
  %cmp51 = icmp ne %struct.BPoint* %58, %59, !dbg !17095
  br i1 %cmp51, label %if.then53, label %if.end63, !dbg !17096

if.then53:                                        ; preds = %if.end50
  %60 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index2, align 8, !dbg !17097
  %tobool54 = icmp ne %struct.CVKeyIndex* %60, null, !dbg !17097
  br i1 %tobool54, label %if.then55, label %if.end62, !dbg !17100

if.then55:                                        ; preds = %if.then53
  %61 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index2, align 8, !dbg !17101
  %switched56 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %61, i32 0, i32 5, !dbg !17102
  %62 = load i8, i8* %switched56, align 8, !dbg !17102
  %tobool57 = icmp ne i8 %62, 0, !dbg !17103
  %lnot58 = xor i1 %tobool57, true, !dbg !17103
  %lnot.ext59 = zext i1 %lnot58 to i32, !dbg !17103
  %conv60 = trunc i32 %lnot.ext59 to i8, !dbg !17103
  %63 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index2, align 8, !dbg !17104
  %switched61 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %63, i32 0, i32 5, !dbg !17105
  store i8 %conv60, i8* %switched61, align 8, !dbg !17106
  br label %if.end62, !dbg !17104

if.end62:                                         ; preds = %if.then55, %if.then53
  %64 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !17107
  %65 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !17108
  %66 = bitcast %struct.BPoint* %65 to i8*, !dbg !17108
  %67 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !17109
  %68 = bitcast %struct.BPoint* %67 to i8*, !dbg !17109
  call void @keyIndex_swap(%struct.EditNurb* %64, i8* %66, i8* %68), !dbg !17110
  br label %if.end63, !dbg !17111

if.end63:                                         ; preds = %if.end62, %if.end50
  %69 = load i32, i32* %a, align 4, !dbg !17112
  %dec64 = add nsw i32 %69, -1, !dbg !17112
  store i32 %dec64, i32* %a, align 4, !dbg !17112
  %70 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !17113
  %incdec.ptr65 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %70, i32 1, !dbg !17113
  store %struct.BPoint* %incdec.ptr65, %struct.BPoint** %bp1, align 8, !dbg !17113
  %71 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !17114
  %incdec.ptr66 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %71, i32 -1, !dbg !17114
  store %struct.BPoint* %incdec.ptr66, %struct.BPoint** %bp2, align 8, !dbg !17114
  br label %while.cond34, !dbg !17066, !llvm.loop !17115

while.end67:                                      ; preds = %land.end
  br label %if.end116, !dbg !17117

if.else68:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %b, metadata !17118, metadata !DIExpression()), !dbg !17120
  store i32 0, i32* %b, align 4, !dbg !17121
  br label %for.cond, !dbg !17123

for.cond:                                         ; preds = %for.inc, %if.else68
  %72 = load i32, i32* %b, align 4, !dbg !17124
  %73 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !17126
  %pntsv69 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %73, i32 0, i32 7, !dbg !17127
  %74 = load i32, i32* %pntsv69, align 4, !dbg !17127
  %cmp70 = icmp slt i32 %72, %74, !dbg !17128
  br i1 %cmp70, label %for.body, label %for.end, !dbg !17129

for.body:                                         ; preds = %for.cond
  %75 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !17130
  %bp72 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %75, i32 0, i32 17, !dbg !17132
  %76 = load %struct.BPoint*, %struct.BPoint** %bp72, align 8, !dbg !17132
  %77 = load i32, i32* %b, align 4, !dbg !17133
  %78 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !17134
  %pntsu73 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %78, i32 0, i32 6, !dbg !17135
  %79 = load i32, i32* %pntsu73, align 8, !dbg !17135
  %mul = mul nsw i32 %77, %79, !dbg !17136
  %idxprom = sext i32 %mul to i64, !dbg !17130
  %arrayidx = getelementptr inbounds %struct.BPoint, %struct.BPoint* %76, i64 %idxprom, !dbg !17130
  store %struct.BPoint* %arrayidx, %struct.BPoint** %bp1, align 8, !dbg !17137
  %80 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !17138
  %pntsu74 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %80, i32 0, i32 6, !dbg !17139
  %81 = load i32, i32* %pntsu74, align 8, !dbg !17139
  store i32 %81, i32* %a, align 4, !dbg !17140
  %82 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !17141
  %83 = load i32, i32* %a, align 4, !dbg !17142
  %sub75 = sub nsw i32 %83, 1, !dbg !17143
  %idx.ext76 = sext i32 %sub75 to i64, !dbg !17144
  %add.ptr77 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %82, i64 %idx.ext76, !dbg !17144
  store %struct.BPoint* %add.ptr77, %struct.BPoint** %bp2, align 8, !dbg !17145
  %84 = load i32, i32* %a, align 4, !dbg !17146
  %div78 = sdiv i32 %84, 2, !dbg !17146
  store i32 %div78, i32* %a, align 4, !dbg !17146
  br label %while.cond79, !dbg !17147

while.cond79:                                     ; preds = %if.end110, %for.body
  %85 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !17148
  %86 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !17149
  %cmp80 = icmp ne %struct.BPoint* %85, %86, !dbg !17150
  br i1 %cmp80, label %land.rhs82, label %land.end85, !dbg !17151

land.rhs82:                                       ; preds = %while.cond79
  %87 = load i32, i32* %a, align 4, !dbg !17152
  %cmp83 = icmp sgt i32 %87, 0, !dbg !17153
  br label %land.end85

land.end85:                                       ; preds = %land.rhs82, %while.cond79
  %88 = phi i1 [ false, %while.cond79 ], [ %cmp83, %land.rhs82 ], !dbg !17154
  br i1 %88, label %while.body86, label %while.end114, !dbg !17147

while.body86:                                     ; preds = %land.end85
  %89 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !17155
  %90 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !17157
  %91 = bitcast %struct.BPoint* %90 to i8*, !dbg !17157
  %call87 = call %struct.CVKeyIndex* @getCVKeyIndex(%struct.EditNurb* %89, i8* %91), !dbg !17158
  store %struct.CVKeyIndex* %call87, %struct.CVKeyIndex** %index1, align 8, !dbg !17159
  %92 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !17160
  %93 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !17161
  %94 = bitcast %struct.BPoint* %93 to i8*, !dbg !17161
  %call88 = call %struct.CVKeyIndex* @getCVKeyIndex(%struct.EditNurb* %92, i8* %94), !dbg !17162
  store %struct.CVKeyIndex* %call88, %struct.CVKeyIndex** %index2, align 8, !dbg !17163
  %95 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index1, align 8, !dbg !17164
  %tobool89 = icmp ne %struct.CVKeyIndex* %95, null, !dbg !17164
  br i1 %tobool89, label %if.then90, label %if.end97, !dbg !17166

if.then90:                                        ; preds = %while.body86
  %96 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index1, align 8, !dbg !17167
  %switched91 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %96, i32 0, i32 5, !dbg !17168
  %97 = load i8, i8* %switched91, align 8, !dbg !17168
  %tobool92 = icmp ne i8 %97, 0, !dbg !17169
  %lnot93 = xor i1 %tobool92, true, !dbg !17169
  %lnot.ext94 = zext i1 %lnot93 to i32, !dbg !17169
  %conv95 = trunc i32 %lnot.ext94 to i8, !dbg !17169
  %98 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index1, align 8, !dbg !17170
  %switched96 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %98, i32 0, i32 5, !dbg !17171
  store i8 %conv95, i8* %switched96, align 8, !dbg !17172
  br label %if.end97, !dbg !17170

if.end97:                                         ; preds = %if.then90, %while.body86
  %99 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !17173
  %100 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !17175
  %cmp98 = icmp ne %struct.BPoint* %99, %100, !dbg !17176
  br i1 %cmp98, label %if.then100, label %if.end110, !dbg !17177

if.then100:                                       ; preds = %if.end97
  %101 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index2, align 8, !dbg !17178
  %tobool101 = icmp ne %struct.CVKeyIndex* %101, null, !dbg !17178
  br i1 %tobool101, label %if.then102, label %if.end109, !dbg !17181

if.then102:                                       ; preds = %if.then100
  %102 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index2, align 8, !dbg !17182
  %switched103 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %102, i32 0, i32 5, !dbg !17183
  %103 = load i8, i8* %switched103, align 8, !dbg !17183
  %tobool104 = icmp ne i8 %103, 0, !dbg !17184
  %lnot105 = xor i1 %tobool104, true, !dbg !17184
  %lnot.ext106 = zext i1 %lnot105 to i32, !dbg !17184
  %conv107 = trunc i32 %lnot.ext106 to i8, !dbg !17184
  %104 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index2, align 8, !dbg !17185
  %switched108 = getelementptr inbounds %struct.CVKeyIndex, %struct.CVKeyIndex* %104, i32 0, i32 5, !dbg !17186
  store i8 %conv107, i8* %switched108, align 8, !dbg !17187
  br label %if.end109, !dbg !17185

if.end109:                                        ; preds = %if.then102, %if.then100
  %105 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !17188
  %106 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !17189
  %107 = bitcast %struct.BPoint* %106 to i8*, !dbg !17189
  %108 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !17190
  %109 = bitcast %struct.BPoint* %108 to i8*, !dbg !17190
  call void @keyIndex_swap(%struct.EditNurb* %105, i8* %107, i8* %109), !dbg !17191
  br label %if.end110, !dbg !17192

if.end110:                                        ; preds = %if.end109, %if.end97
  %110 = load i32, i32* %a, align 4, !dbg !17193
  %dec111 = add nsw i32 %110, -1, !dbg !17193
  store i32 %dec111, i32* %a, align 4, !dbg !17193
  %111 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !17194
  %incdec.ptr112 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %111, i32 1, !dbg !17194
  store %struct.BPoint* %incdec.ptr112, %struct.BPoint** %bp1, align 8, !dbg !17194
  %112 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !17195
  %incdec.ptr113 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %112, i32 -1, !dbg !17195
  store %struct.BPoint* %incdec.ptr113, %struct.BPoint** %bp2, align 8, !dbg !17195
  br label %while.cond79, !dbg !17147, !llvm.loop !17196

while.end114:                                     ; preds = %land.end85
  br label %for.inc, !dbg !17198

for.inc:                                          ; preds = %while.end114
  %113 = load i32, i32* %b, align 4, !dbg !17199
  %inc115 = add nsw i32 %113, 1, !dbg !17199
  store i32 %inc115, i32* %b, align 4, !dbg !17199
  br label %for.cond, !dbg !17200, !llvm.loop !17201

for.end:                                          ; preds = %for.cond
  br label %if.end116

if.end116:                                        ; preds = %for.end, %while.end67
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %while.end
  ret void, !dbg !17203
}

; Function Attrs: noinline nounwind uwtable
define internal void @switch_keys_direction(%struct.Curve* %cu, %struct.Nurb* %actnu) #0 !dbg !17204 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %actnu.addr = alloca %struct.Nurb*, align 8
  %currkey = alloca %struct.KeyBlock*, align 8
  %editnurb = alloca %struct.EditNurb*, align 8
  %nubase = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %fp = alloca float*, align 8
  %a = alloca i32, align 4
  %bezt7 = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !17205, metadata !DIExpression()), !dbg !17206
  store %struct.Nurb* %actnu, %struct.Nurb** %actnu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %actnu.addr, metadata !17207, metadata !DIExpression()), !dbg !17208
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %currkey, metadata !17209, metadata !DIExpression()), !dbg !17210
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb, metadata !17211, metadata !DIExpression()), !dbg !17212
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !17213
  %editnurb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 4, !dbg !17214
  %1 = load %struct.EditNurb*, %struct.EditNurb** %editnurb1, align 8, !dbg !17214
  store %struct.EditNurb* %1, %struct.EditNurb** %editnurb, align 8, !dbg !17212
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nubase, metadata !17215, metadata !DIExpression()), !dbg !17216
  %2 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !17217
  %nurbs = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %2, i32 0, i32 0, !dbg !17218
  store %struct.ListBase* %nurbs, %struct.ListBase** %nubase, align 8, !dbg !17216
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !17219, metadata !DIExpression()), !dbg !17220
  call void @llvm.dbg.declare(metadata float** %fp, metadata !17221, metadata !DIExpression()), !dbg !17222
  call void @llvm.dbg.declare(metadata i32* %a, metadata !17223, metadata !DIExpression()), !dbg !17224
  %3 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !17225
  %key = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 9, !dbg !17226
  %4 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !17226
  %block = getelementptr inbounds %struct.Key, %struct.Key* %4, i32 0, i32 6, !dbg !17227
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block, i32 0, i32 0, !dbg !17228
  %5 = load i8*, i8** %first, align 8, !dbg !17228
  %6 = bitcast i8* %5 to %struct.KeyBlock*, !dbg !17225
  store %struct.KeyBlock* %6, %struct.KeyBlock** %currkey, align 8, !dbg !17229
  br label %while.cond, !dbg !17230

while.cond:                                       ; preds = %while.end46, %entry
  %7 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !17231
  %tobool = icmp ne %struct.KeyBlock* %7, null, !dbg !17230
  br i1 %tobool, label %while.body, label %while.end48, !dbg !17230

while.body:                                       ; preds = %while.cond
  %8 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !17232
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %8, i32 0, i32 10, !dbg !17234
  %9 = load i8*, i8** %data, align 8, !dbg !17234
  %10 = bitcast i8* %9 to float*, !dbg !17232
  store float* %10, float** %fp, align 8, !dbg !17235
  %11 = load %struct.ListBase*, %struct.ListBase** %nubase, align 8, !dbg !17236
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %11, i32 0, i32 0, !dbg !17237
  %12 = load i8*, i8** %first2, align 8, !dbg !17237
  %13 = bitcast i8* %12 to %struct.Nurb*, !dbg !17236
  store %struct.Nurb* %13, %struct.Nurb** %nu, align 8, !dbg !17238
  br label %while.cond3, !dbg !17239

while.cond3:                                      ; preds = %if.end45, %while.body
  %14 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17240
  %tobool4 = icmp ne %struct.Nurb* %14, null, !dbg !17239
  br i1 %tobool4, label %while.body5, label %while.end46, !dbg !17239

while.body5:                                      ; preds = %while.cond3
  %15 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17241
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %15, i32 0, i32 18, !dbg !17244
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !17244
  %tobool6 = icmp ne %struct.BezTriple* %16, null, !dbg !17241
  br i1 %tobool6, label %if.then, label %if.else20, !dbg !17245

if.then:                                          ; preds = %while.body5
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt7, metadata !17246, metadata !DIExpression()), !dbg !17248
  %17 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17249
  %bezt8 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %17, i32 0, i32 18, !dbg !17250
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt8, align 8, !dbg !17250
  store %struct.BezTriple* %18, %struct.BezTriple** %bezt7, align 8, !dbg !17248
  %19 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17251
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %19, i32 0, i32 6, !dbg !17252
  %20 = load i32, i32* %pntsu, align 8, !dbg !17252
  store i32 %20, i32* %a, align 4, !dbg !17253
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17254
  %22 = load %struct.Nurb*, %struct.Nurb** %actnu.addr, align 8, !dbg !17256
  %cmp = icmp eq %struct.Nurb* %21, %22, !dbg !17257
  br i1 %cmp, label %if.then9, label %if.else, !dbg !17258

if.then9:                                         ; preds = %if.then
  br label %while.cond10, !dbg !17259

while.cond10:                                     ; preds = %if.end, %if.then9
  %23 = load i32, i32* %a, align 4, !dbg !17261
  %dec = add nsw i32 %23, -1, !dbg !17261
  store i32 %dec, i32* %a, align 4, !dbg !17261
  %tobool11 = icmp ne i32 %23, 0, !dbg !17259
  br i1 %tobool11, label %while.body12, label %while.end, !dbg !17259

while.body12:                                     ; preds = %while.cond10
  %24 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !17262
  %25 = load %struct.BezTriple*, %struct.BezTriple** %bezt7, align 8, !dbg !17265
  %call = call %struct.BezTriple* @getKeyIndexOrig_bezt(%struct.EditNurb* %24, %struct.BezTriple* %25), !dbg !17266
  %tobool13 = icmp ne %struct.BezTriple* %call, null, !dbg !17266
  br i1 %tobool13, label %if.then14, label %if.end, !dbg !17267

if.then14:                                        ; preds = %while.body12
  %26 = load float*, float** %fp, align 8, !dbg !17268
  %27 = load float*, float** %fp, align 8, !dbg !17270
  %add.ptr = getelementptr inbounds float, float* %27, i64 6, !dbg !17271
  call void @swap_v3_v3(float* %26, float* %add.ptr), !dbg !17272
  %28 = load float*, float** %fp, align 8, !dbg !17273
  %add.ptr15 = getelementptr inbounds float, float* %28, i64 9, !dbg !17274
  %29 = load float, float* %add.ptr15, align 4, !dbg !17275
  %fneg = fneg float %29, !dbg !17276
  %30 = load float*, float** %fp, align 8, !dbg !17277
  %add.ptr16 = getelementptr inbounds float, float* %30, i64 9, !dbg !17278
  store float %fneg, float* %add.ptr16, align 4, !dbg !17279
  %31 = load float*, float** %fp, align 8, !dbg !17280
  %add.ptr17 = getelementptr inbounds float, float* %31, i64 12, !dbg !17280
  store float* %add.ptr17, float** %fp, align 8, !dbg !17280
  br label %if.end, !dbg !17281

if.end:                                           ; preds = %if.then14, %while.body12
  %32 = load %struct.BezTriple*, %struct.BezTriple** %bezt7, align 8, !dbg !17282
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %32, i32 1, !dbg !17282
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt7, align 8, !dbg !17282
  br label %while.cond10, !dbg !17259, !llvm.loop !17283

while.end:                                        ; preds = %while.cond10
  br label %if.end19, !dbg !17285

if.else:                                          ; preds = %if.then
  %33 = load i32, i32* %a, align 4, !dbg !17286
  %mul = mul nsw i32 %33, 12, !dbg !17288
  %34 = load float*, float** %fp, align 8, !dbg !17289
  %idx.ext = sext i32 %mul to i64, !dbg !17289
  %add.ptr18 = getelementptr inbounds float, float* %34, i64 %idx.ext, !dbg !17289
  store float* %add.ptr18, float** %fp, align 8, !dbg !17289
  br label %if.end19

if.end19:                                         ; preds = %if.else, %while.end
  br label %if.end45, !dbg !17290

if.else20:                                        ; preds = %while.body5
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !17291, metadata !DIExpression()), !dbg !17293
  %35 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17294
  %bp21 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %35, i32 0, i32 17, !dbg !17295
  %36 = load %struct.BPoint*, %struct.BPoint** %bp21, align 8, !dbg !17295
  store %struct.BPoint* %36, %struct.BPoint** %bp, align 8, !dbg !17293
  %37 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17296
  %pntsu22 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %37, i32 0, i32 6, !dbg !17297
  %38 = load i32, i32* %pntsu22, align 8, !dbg !17297
  %39 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17298
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %39, i32 0, i32 7, !dbg !17299
  %40 = load i32, i32* %pntsv, align 4, !dbg !17299
  %mul23 = mul nsw i32 %38, %40, !dbg !17300
  store i32 %mul23, i32* %a, align 4, !dbg !17301
  %41 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17302
  %42 = load %struct.Nurb*, %struct.Nurb** %actnu.addr, align 8, !dbg !17304
  %cmp24 = icmp eq %struct.Nurb* %41, %42, !dbg !17305
  br i1 %cmp24, label %if.then25, label %if.else40, !dbg !17306

if.then25:                                        ; preds = %if.else20
  br label %while.cond26, !dbg !17307

while.cond26:                                     ; preds = %if.end37, %if.then25
  %43 = load i32, i32* %a, align 4, !dbg !17309
  %dec27 = add nsw i32 %43, -1, !dbg !17309
  store i32 %dec27, i32* %a, align 4, !dbg !17309
  %tobool28 = icmp ne i32 %43, 0, !dbg !17307
  br i1 %tobool28, label %while.body29, label %while.end39, !dbg !17307

while.body29:                                     ; preds = %while.cond26
  %44 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !17310
  %45 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !17313
  %call30 = call %struct.BPoint* @getKeyIndexOrig_bp(%struct.EditNurb* %44, %struct.BPoint* %45), !dbg !17314
  %tobool31 = icmp ne %struct.BPoint* %call30, null, !dbg !17314
  br i1 %tobool31, label %if.then32, label %if.end37, !dbg !17315

if.then32:                                        ; preds = %while.body29
  %46 = load float*, float** %fp, align 8, !dbg !17316
  %add.ptr33 = getelementptr inbounds float, float* %46, i64 3, !dbg !17318
  %47 = load float, float* %add.ptr33, align 4, !dbg !17319
  %fneg34 = fneg float %47, !dbg !17320
  %48 = load float*, float** %fp, align 8, !dbg !17321
  %add.ptr35 = getelementptr inbounds float, float* %48, i64 3, !dbg !17322
  store float %fneg34, float* %add.ptr35, align 4, !dbg !17323
  %49 = load float*, float** %fp, align 8, !dbg !17324
  %add.ptr36 = getelementptr inbounds float, float* %49, i64 4, !dbg !17324
  store float* %add.ptr36, float** %fp, align 8, !dbg !17324
  br label %if.end37, !dbg !17325

if.end37:                                         ; preds = %if.then32, %while.body29
  %50 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !17326
  %incdec.ptr38 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %50, i32 1, !dbg !17326
  store %struct.BPoint* %incdec.ptr38, %struct.BPoint** %bp, align 8, !dbg !17326
  br label %while.cond26, !dbg !17307, !llvm.loop !17327

while.end39:                                      ; preds = %while.cond26
  br label %if.end44, !dbg !17329

if.else40:                                        ; preds = %if.else20
  %51 = load i32, i32* %a, align 4, !dbg !17330
  %mul41 = mul nsw i32 %51, 4, !dbg !17332
  %52 = load float*, float** %fp, align 8, !dbg !17333
  %idx.ext42 = sext i32 %mul41 to i64, !dbg !17333
  %add.ptr43 = getelementptr inbounds float, float* %52, i64 %idx.ext42, !dbg !17333
  store float* %add.ptr43, float** %fp, align 8, !dbg !17333
  br label %if.end44

if.end44:                                         ; preds = %if.else40, %while.end39
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end19
  %53 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17334
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %53, i32 0, i32 0, !dbg !17335
  %54 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !17335
  store %struct.Nurb* %54, %struct.Nurb** %nu, align 8, !dbg !17336
  br label %while.cond3, !dbg !17239, !llvm.loop !17337

while.end46:                                      ; preds = %while.cond3
  %55 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !17339
  %next47 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %55, i32 0, i32 0, !dbg !17340
  %56 = load %struct.KeyBlock*, %struct.KeyBlock** %next47, align 8, !dbg !17340
  store %struct.KeyBlock* %56, %struct.KeyBlock** %currkey, align 8, !dbg !17341
  br label %while.cond, !dbg !17230, !llvm.loop !17342

while.end48:                                      ; preds = %while.cond
  ret void, !dbg !17344
}

; Function Attrs: noinline nounwind uwtable
define internal void @keyIndex_swap(%struct.EditNurb* %editnurb, i8* %a, i8* %b) #0 !dbg !17345 {
entry:
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %index1 = alloca %struct.CVKeyIndex*, align 8
  %index2 = alloca %struct.CVKeyIndex*, align 8
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !17348, metadata !DIExpression()), !dbg !17349
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !17350, metadata !DIExpression()), !dbg !17351
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !17352, metadata !DIExpression()), !dbg !17353
  call void @llvm.dbg.declare(metadata %struct.CVKeyIndex** %index1, metadata !17354, metadata !DIExpression()), !dbg !17355
  %0 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !17356
  %1 = load i8*, i8** %a.addr, align 8, !dbg !17357
  %call = call %struct.CVKeyIndex* @popCVKeyIndex(%struct.EditNurb* %0, i8* %1), !dbg !17358
  store %struct.CVKeyIndex* %call, %struct.CVKeyIndex** %index1, align 8, !dbg !17355
  call void @llvm.dbg.declare(metadata %struct.CVKeyIndex** %index2, metadata !17359, metadata !DIExpression()), !dbg !17360
  %2 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !17361
  %3 = load i8*, i8** %b.addr, align 8, !dbg !17362
  %call1 = call %struct.CVKeyIndex* @popCVKeyIndex(%struct.EditNurb* %2, i8* %3), !dbg !17363
  store %struct.CVKeyIndex* %call1, %struct.CVKeyIndex** %index2, align 8, !dbg !17360
  %4 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index2, align 8, !dbg !17364
  %tobool = icmp ne %struct.CVKeyIndex* %4, null, !dbg !17364
  br i1 %tobool, label %if.then, label %if.end, !dbg !17366

if.then:                                          ; preds = %entry
  %5 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !17367
  %keyindex = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %5, i32 0, i32 1, !dbg !17368
  %6 = load %struct.GHash*, %struct.GHash** %keyindex, align 8, !dbg !17368
  %7 = load i8*, i8** %a.addr, align 8, !dbg !17369
  %8 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index2, align 8, !dbg !17370
  %9 = bitcast %struct.CVKeyIndex* %8 to i8*, !dbg !17370
  call void @BLI_ghash_insert(%struct.GHash* %6, i8* %7, i8* %9), !dbg !17371
  br label %if.end, !dbg !17371

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index1, align 8, !dbg !17372
  %tobool2 = icmp ne %struct.CVKeyIndex* %10, null, !dbg !17372
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !17374

if.then3:                                         ; preds = %if.end
  %11 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !17375
  %keyindex4 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %11, i32 0, i32 1, !dbg !17376
  %12 = load %struct.GHash*, %struct.GHash** %keyindex4, align 8, !dbg !17376
  %13 = load i8*, i8** %b.addr, align 8, !dbg !17377
  %14 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index1, align 8, !dbg !17378
  %15 = bitcast %struct.CVKeyIndex* %14 to i8*, !dbg !17378
  call void @BLI_ghash_insert(%struct.GHash* %12, i8* %13, i8* %15), !dbg !17379
  br label %if.end5, !dbg !17379

if.end5:                                          ; preds = %if.then3, %if.end
  ret void, !dbg !17380
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CVKeyIndex* @popCVKeyIndex(%struct.EditNurb* %editnurb, i8* %cv) #0 !dbg !17381 {
entry:
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %cv.addr = alloca i8*, align 8
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !17382, metadata !DIExpression()), !dbg !17383
  store i8* %cv, i8** %cv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cv.addr, metadata !17384, metadata !DIExpression()), !dbg !17385
  %0 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !17386
  %keyindex = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %0, i32 0, i32 1, !dbg !17387
  %1 = load %struct.GHash*, %struct.GHash** %keyindex, align 8, !dbg !17387
  %2 = load i8*, i8** %cv.addr, align 8, !dbg !17388
  %call = call i8* @BLI_ghash_popkey(%struct.GHash* %1, i8* %2, void (i8*)* null), !dbg !17389
  %3 = bitcast i8* %call to %struct.CVKeyIndex*, !dbg !17389
  ret %struct.CVKeyIndex* %3, !dbg !17390
}

declare dso_local i8* @BLI_ghash_popkey(%struct.GHash*, i8*, void (i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @swap_v3_v3(float* %a, float* %b) #0 !dbg !17391 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %sw_ap = alloca float, align 4
  %sw_ap4 = alloca float, align 4
  %sw_ap9 = alloca float, align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !17394, metadata !DIExpression()), !dbg !17395
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !17396, metadata !DIExpression()), !dbg !17397
  call void @llvm.dbg.declare(metadata float* %sw_ap, metadata !17398, metadata !DIExpression()), !dbg !17400
  %0 = load float*, float** %a.addr, align 8, !dbg !17400
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !17400
  %1 = load float, float* %arrayidx, align 4, !dbg !17400
  store float %1, float* %sw_ap, align 4, !dbg !17400
  %2 = load float*, float** %b.addr, align 8, !dbg !17400
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !17400
  %3 = load float, float* %arrayidx1, align 4, !dbg !17400
  %4 = load float*, float** %a.addr, align 8, !dbg !17400
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !17400
  store float %3, float* %arrayidx2, align 4, !dbg !17400
  %5 = load float, float* %sw_ap, align 4, !dbg !17400
  %6 = load float*, float** %b.addr, align 8, !dbg !17400
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 0, !dbg !17400
  store float %5, float* %arrayidx3, align 4, !dbg !17400
  call void @llvm.dbg.declare(metadata float* %sw_ap4, metadata !17401, metadata !DIExpression()), !dbg !17403
  %7 = load float*, float** %a.addr, align 8, !dbg !17403
  %arrayidx5 = getelementptr inbounds float, float* %7, i64 1, !dbg !17403
  %8 = load float, float* %arrayidx5, align 4, !dbg !17403
  store float %8, float* %sw_ap4, align 4, !dbg !17403
  %9 = load float*, float** %b.addr, align 8, !dbg !17403
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !17403
  %10 = load float, float* %arrayidx6, align 4, !dbg !17403
  %11 = load float*, float** %a.addr, align 8, !dbg !17403
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 1, !dbg !17403
  store float %10, float* %arrayidx7, align 4, !dbg !17403
  %12 = load float, float* %sw_ap4, align 4, !dbg !17403
  %13 = load float*, float** %b.addr, align 8, !dbg !17403
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 1, !dbg !17403
  store float %12, float* %arrayidx8, align 4, !dbg !17403
  call void @llvm.dbg.declare(metadata float* %sw_ap9, metadata !17404, metadata !DIExpression()), !dbg !17406
  %14 = load float*, float** %a.addr, align 8, !dbg !17406
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !17406
  %15 = load float, float* %arrayidx10, align 4, !dbg !17406
  store float %15, float* %sw_ap9, align 4, !dbg !17406
  %16 = load float*, float** %b.addr, align 8, !dbg !17406
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 2, !dbg !17406
  %17 = load float, float* %arrayidx11, align 4, !dbg !17406
  %18 = load float*, float** %a.addr, align 8, !dbg !17406
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 2, !dbg !17406
  store float %17, float* %arrayidx12, align 4, !dbg !17406
  %19 = load float, float* %sw_ap9, align 4, !dbg !17406
  %20 = load float*, float** %b.addr, align 8, !dbg !17406
  %arrayidx13 = getelementptr inbounds float, float* %20, i64 2, !dbg !17406
  store float %19, float* %arrayidx13, align 4, !dbg !17406
  ret void, !dbg !17407
}

declare dso_local float @RNA_float_get(%struct.PointerRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @mod_i(i32 %i, i32 %n) #0 !dbg !17408 {
entry:
  %i.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !17412, metadata !DIExpression()), !dbg !17413
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !17414, metadata !DIExpression()), !dbg !17415
  %0 = load i32, i32* %i.addr, align 4, !dbg !17416
  %1 = load i32, i32* %n.addr, align 4, !dbg !17417
  %rem = srem i32 %0, %1, !dbg !17418
  %2 = load i32, i32* %n.addr, align 4, !dbg !17419
  %add = add nsw i32 %rem, %2, !dbg !17420
  %3 = load i32, i32* %n.addr, align 4, !dbg !17421
  %rem1 = srem i32 %add, %3, !dbg !17422
  ret i32 %rem1, !dbg !17423
}

; Function Attrs: noinline nounwind uwtable
define internal void @smooth_single_bezt(%struct.BezTriple* %bezt, %struct.BezTriple* %bezt_orig_prev, %struct.BezTriple* %bezt_orig_next, float %factor) #0 !dbg !17424 {
entry:
  %bezt.addr = alloca %struct.BezTriple*, align 8
  %bezt_orig_prev.addr = alloca %struct.BezTriple*, align 8
  %bezt_orig_next.addr = alloca %struct.BezTriple*, align 8
  %factor.addr = alloca float, align 4
  %i = alloca i32, align 4
  %val_old = alloca float, align 4
  %val_new = alloca float, align 4
  %offset = alloca float, align 4
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !17427, metadata !DIExpression()), !dbg !17428
  store %struct.BezTriple* %bezt_orig_prev, %struct.BezTriple** %bezt_orig_prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt_orig_prev.addr, metadata !17429, metadata !DIExpression()), !dbg !17430
  store %struct.BezTriple* %bezt_orig_next, %struct.BezTriple** %bezt_orig_next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt_orig_next.addr, metadata !17431, metadata !DIExpression()), !dbg !17432
  store float %factor, float* %factor.addr, align 4
  call void @llvm.dbg.declare(metadata float* %factor.addr, metadata !17433, metadata !DIExpression()), !dbg !17434
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17435, metadata !DIExpression()), !dbg !17436
  store i32 0, i32* %i, align 4, !dbg !17437
  br label %for.cond, !dbg !17439

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !17440
  %cmp = icmp slt i32 %0, 3, !dbg !17442
  br i1 %cmp, label %for.body, label %for.end, !dbg !17443

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %val_old, metadata !17444, metadata !DIExpression()), !dbg !17446
  call void @llvm.dbg.declare(metadata float* %val_new, metadata !17447, metadata !DIExpression()), !dbg !17448
  call void @llvm.dbg.declare(metadata float* %offset, metadata !17449, metadata !DIExpression()), !dbg !17450
  %1 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !17451
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %1, i32 0, i32 0, !dbg !17452
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 1, !dbg !17451
  %2 = load i32, i32* %i, align 4, !dbg !17453
  %idxprom = sext i32 %2 to i64, !dbg !17451
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 %idxprom, !dbg !17451
  %3 = load float, float* %arrayidx1, align 4, !dbg !17451
  store float %3, float* %val_old, align 4, !dbg !17454
  %4 = load %struct.BezTriple*, %struct.BezTriple** %bezt_orig_prev.addr, align 8, !dbg !17455
  %vec2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %4, i32 0, i32 0, !dbg !17456
  %arrayidx3 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec2, i64 0, i64 1, !dbg !17455
  %5 = load i32, i32* %i, align 4, !dbg !17457
  %idxprom4 = sext i32 %5 to i64, !dbg !17455
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx3, i64 0, i64 %idxprom4, !dbg !17455
  %6 = load float, float* %arrayidx5, align 4, !dbg !17455
  %mul = fmul float %6, 5.000000e-01, !dbg !17458
  %7 = load %struct.BezTriple*, %struct.BezTriple** %bezt_orig_next.addr, align 8, !dbg !17459
  %vec6 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %7, i32 0, i32 0, !dbg !17460
  %arrayidx7 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec6, i64 0, i64 1, !dbg !17459
  %8 = load i32, i32* %i, align 4, !dbg !17461
  %idxprom8 = sext i32 %8 to i64, !dbg !17459
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx7, i64 0, i64 %idxprom8, !dbg !17459
  %9 = load float, float* %arrayidx9, align 4, !dbg !17459
  %mul10 = fmul float %9, 5.000000e-01, !dbg !17462
  %add = fadd float %mul, %mul10, !dbg !17463
  store float %add, float* %val_new, align 4, !dbg !17464
  %10 = load float, float* %val_old, align 4, !dbg !17465
  %11 = load float, float* %factor.addr, align 4, !dbg !17466
  %sub = fsub float 1.000000e+00, %11, !dbg !17467
  %mul11 = fmul float %10, %sub, !dbg !17468
  %12 = load float, float* %val_new, align 4, !dbg !17469
  %13 = load float, float* %factor.addr, align 4, !dbg !17470
  %mul12 = fmul float %12, %13, !dbg !17471
  %add13 = fadd float %mul11, %mul12, !dbg !17472
  %14 = load float, float* %val_old, align 4, !dbg !17473
  %sub14 = fsub float %add13, %14, !dbg !17474
  store float %sub14, float* %offset, align 4, !dbg !17475
  %15 = load float, float* %offset, align 4, !dbg !17476
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !17477
  %vec15 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %16, i32 0, i32 0, !dbg !17478
  %arrayidx16 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec15, i64 0, i64 1, !dbg !17477
  %17 = load i32, i32* %i, align 4, !dbg !17479
  %idxprom17 = sext i32 %17 to i64, !dbg !17477
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 %idxprom17, !dbg !17477
  %18 = load float, float* %arrayidx18, align 4, !dbg !17480
  %add19 = fadd float %18, %15, !dbg !17480
  store float %add19, float* %arrayidx18, align 4, !dbg !17480
  %19 = load float, float* %offset, align 4, !dbg !17481
  %20 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !17482
  %vec20 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %20, i32 0, i32 0, !dbg !17483
  %arrayidx21 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec20, i64 0, i64 0, !dbg !17482
  %21 = load i32, i32* %i, align 4, !dbg !17484
  %idxprom22 = sext i32 %21 to i64, !dbg !17482
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx21, i64 0, i64 %idxprom22, !dbg !17482
  %22 = load float, float* %arrayidx23, align 4, !dbg !17485
  %add24 = fadd float %22, %19, !dbg !17485
  store float %add24, float* %arrayidx23, align 4, !dbg !17485
  %23 = load float, float* %offset, align 4, !dbg !17486
  %24 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !17487
  %vec25 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %24, i32 0, i32 0, !dbg !17488
  %arrayidx26 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec25, i64 0, i64 2, !dbg !17487
  %25 = load i32, i32* %i, align 4, !dbg !17489
  %idxprom27 = sext i32 %25 to i64, !dbg !17487
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx26, i64 0, i64 %idxprom27, !dbg !17487
  %26 = load float, float* %arrayidx28, align 4, !dbg !17490
  %add29 = fadd float %26, %23, !dbg !17490
  store float %add29, float* %arrayidx28, align 4, !dbg !17490
  br label %for.inc, !dbg !17491

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %i, align 4, !dbg !17492
  %inc = add nsw i32 %27, 1, !dbg !17492
  store i32 %inc, i32* %i, align 4, !dbg !17492
  br label %for.cond, !dbg !17493, !llvm.loop !17494

for.end:                                          ; preds = %for.cond
  ret void, !dbg !17496
}

; Function Attrs: noinline nounwind uwtable
define internal void @smooth_single_bp(%struct.BPoint* %bp, %struct.BPoint* %bp_orig_prev, %struct.BPoint* %bp_orig_next, float %factor) #0 !dbg !17497 {
entry:
  %bp.addr = alloca %struct.BPoint*, align 8
  %bp_orig_prev.addr = alloca %struct.BPoint*, align 8
  %bp_orig_next.addr = alloca %struct.BPoint*, align 8
  %factor.addr = alloca float, align 4
  %i = alloca i32, align 4
  %val_old = alloca float, align 4
  %val_new = alloca float, align 4
  %offset = alloca float, align 4
  store %struct.BPoint* %bp, %struct.BPoint** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp.addr, metadata !17500, metadata !DIExpression()), !dbg !17501
  store %struct.BPoint* %bp_orig_prev, %struct.BPoint** %bp_orig_prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp_orig_prev.addr, metadata !17502, metadata !DIExpression()), !dbg !17503
  store %struct.BPoint* %bp_orig_next, %struct.BPoint** %bp_orig_next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp_orig_next.addr, metadata !17504, metadata !DIExpression()), !dbg !17505
  store float %factor, float* %factor.addr, align 4
  call void @llvm.dbg.declare(metadata float* %factor.addr, metadata !17506, metadata !DIExpression()), !dbg !17507
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17508, metadata !DIExpression()), !dbg !17509
  store i32 0, i32* %i, align 4, !dbg !17510
  br label %for.cond, !dbg !17512

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !17513
  %cmp = icmp slt i32 %0, 3, !dbg !17515
  br i1 %cmp, label %for.body, label %for.end, !dbg !17516

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %val_old, metadata !17517, metadata !DIExpression()), !dbg !17519
  call void @llvm.dbg.declare(metadata float* %val_new, metadata !17520, metadata !DIExpression()), !dbg !17521
  call void @llvm.dbg.declare(metadata float* %offset, metadata !17522, metadata !DIExpression()), !dbg !17523
  %1 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !17524
  %vec = getelementptr inbounds %struct.BPoint, %struct.BPoint* %1, i32 0, i32 0, !dbg !17525
  %2 = load i32, i32* %i, align 4, !dbg !17526
  %idxprom = sext i32 %2 to i64, !dbg !17524
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 %idxprom, !dbg !17524
  %3 = load float, float* %arrayidx, align 4, !dbg !17524
  store float %3, float* %val_old, align 4, !dbg !17527
  %4 = load %struct.BPoint*, %struct.BPoint** %bp_orig_prev.addr, align 8, !dbg !17528
  %vec1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %4, i32 0, i32 0, !dbg !17529
  %5 = load i32, i32* %i, align 4, !dbg !17530
  %idxprom2 = sext i32 %5 to i64, !dbg !17528
  %arrayidx3 = getelementptr inbounds [4 x float], [4 x float]* %vec1, i64 0, i64 %idxprom2, !dbg !17528
  %6 = load float, float* %arrayidx3, align 4, !dbg !17528
  %mul = fmul float %6, 5.000000e-01, !dbg !17531
  %7 = load %struct.BPoint*, %struct.BPoint** %bp_orig_next.addr, align 8, !dbg !17532
  %vec4 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %7, i32 0, i32 0, !dbg !17533
  %8 = load i32, i32* %i, align 4, !dbg !17534
  %idxprom5 = sext i32 %8 to i64, !dbg !17532
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %vec4, i64 0, i64 %idxprom5, !dbg !17532
  %9 = load float, float* %arrayidx6, align 4, !dbg !17532
  %mul7 = fmul float %9, 5.000000e-01, !dbg !17535
  %add = fadd float %mul, %mul7, !dbg !17536
  store float %add, float* %val_new, align 4, !dbg !17537
  %10 = load float, float* %val_old, align 4, !dbg !17538
  %11 = load float, float* %factor.addr, align 4, !dbg !17539
  %sub = fsub float 1.000000e+00, %11, !dbg !17540
  %mul8 = fmul float %10, %sub, !dbg !17541
  %12 = load float, float* %val_new, align 4, !dbg !17542
  %13 = load float, float* %factor.addr, align 4, !dbg !17543
  %mul9 = fmul float %12, %13, !dbg !17544
  %add10 = fadd float %mul8, %mul9, !dbg !17545
  %14 = load float, float* %val_old, align 4, !dbg !17546
  %sub11 = fsub float %add10, %14, !dbg !17547
  store float %sub11, float* %offset, align 4, !dbg !17548
  %15 = load float, float* %offset, align 4, !dbg !17549
  %16 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !17550
  %vec12 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %16, i32 0, i32 0, !dbg !17551
  %17 = load i32, i32* %i, align 4, !dbg !17552
  %idxprom13 = sext i32 %17 to i64, !dbg !17550
  %arrayidx14 = getelementptr inbounds [4 x float], [4 x float]* %vec12, i64 0, i64 %idxprom13, !dbg !17550
  %18 = load float, float* %arrayidx14, align 4, !dbg !17553
  %add15 = fadd float %18, %15, !dbg !17553
  store float %add15, float* %arrayidx14, align 4, !dbg !17553
  br label %for.inc, !dbg !17554

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !17555
  %inc = add nsw i32 %19, 1, !dbg !17555
  store i32 %inc, i32* %i, align 4, !dbg !17555
  br label %for.cond, !dbg !17556, !llvm.loop !17557

for.end:                                          ; preds = %for.cond
  ret void, !dbg !17559
}

; Function Attrs: noinline nounwind uwtable
define internal void @curve_smooth_value(%struct.ListBase* %editnurb, i32 %bezt_offsetof, i32 %bp_offset) #0 !dbg !17560 {
entry:
  %editnurb.addr = alloca %struct.ListBase*, align 8
  %bezt_offsetof.addr = alloca i32, align 4
  %bp_offset.addr = alloca i32, align 4
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  %last_sel = alloca i32, align 4
  %start_sel = alloca i32, align 4
  %end_sel = alloca i32, align 4
  %start_rad = alloca float, align 4
  %end_rad = alloca float, align 4
  %fac = alloca float, align 4
  %range = alloca float, align 4
  store %struct.ListBase* %editnurb, %struct.ListBase** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb.addr, metadata !17563, metadata !DIExpression()), !dbg !17564
  store i32 %bezt_offsetof, i32* %bezt_offsetof.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bezt_offsetof.addr, metadata !17565, metadata !DIExpression()), !dbg !17566
  store i32 %bp_offset, i32* %bp_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bp_offset.addr, metadata !17567, metadata !DIExpression()), !dbg !17568
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !17569, metadata !DIExpression()), !dbg !17570
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !17571, metadata !DIExpression()), !dbg !17572
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !17573, metadata !DIExpression()), !dbg !17574
  call void @llvm.dbg.declare(metadata i32* %a, metadata !17575, metadata !DIExpression()), !dbg !17576
  call void @llvm.dbg.declare(metadata i32* %last_sel, metadata !17577, metadata !DIExpression()), !dbg !17578
  call void @llvm.dbg.declare(metadata i32* %start_sel, metadata !17579, metadata !DIExpression()), !dbg !17580
  call void @llvm.dbg.declare(metadata i32* %end_sel, metadata !17581, metadata !DIExpression()), !dbg !17582
  call void @llvm.dbg.declare(metadata float* %start_rad, metadata !17583, metadata !DIExpression()), !dbg !17584
  call void @llvm.dbg.declare(metadata float* %end_rad, metadata !17585, metadata !DIExpression()), !dbg !17586
  call void @llvm.dbg.declare(metadata float* %fac, metadata !17587, metadata !DIExpression()), !dbg !17588
  call void @llvm.dbg.declare(metadata float* %range, metadata !17589, metadata !DIExpression()), !dbg !17590
  %0 = load %struct.ListBase*, %struct.ListBase** %editnurb.addr, align 8, !dbg !17591
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !17593
  %1 = load i8*, i8** %first, align 8, !dbg !17593
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !17591
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !17594
  br label %for.cond, !dbg !17595

for.cond:                                         ; preds = %for.inc337, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17596
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !17598
  br i1 %tobool, label %for.body, label %for.end338, !dbg !17598

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17599
  %bezt1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 18, !dbg !17602
  %5 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !17602
  %tobool2 = icmp ne %struct.BezTriple* %5, null, !dbg !17599
  br i1 %tobool2, label %if.then, label %if.else156, !dbg !17603

if.then:                                          ; preds = %for.body
  store i32 0, i32* %last_sel, align 4, !dbg !17604
  br label %for.cond3, !dbg !17607

for.cond3:                                        ; preds = %for.inc153, %if.then
  %6 = load i32, i32* %last_sel, align 4, !dbg !17608
  %7 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17610
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %7, i32 0, i32 6, !dbg !17611
  %8 = load i32, i32* %pntsu, align 8, !dbg !17611
  %cmp = icmp slt i32 %6, %8, !dbg !17612
  br i1 %cmp, label %for.body4, label %for.end155, !dbg !17613

for.body4:                                        ; preds = %for.cond3
  store i32 -1, i32* %start_sel, align 4, !dbg !17614
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17616
  %bezt5 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 18, !dbg !17618
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt5, align 8, !dbg !17618
  %11 = load i32, i32* %last_sel, align 4, !dbg !17619
  %idxprom = sext i32 %11 to i64, !dbg !17616
  %arrayidx = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %10, i64 %idxprom, !dbg !17616
  store %struct.BezTriple* %arrayidx, %struct.BezTriple** %bezt, align 8, !dbg !17620
  %12 = load i32, i32* %last_sel, align 4, !dbg !17621
  store i32 %12, i32* %a, align 4, !dbg !17622
  br label %for.cond6, !dbg !17623

for.cond6:                                        ; preds = %for.inc, %for.body4
  %13 = load i32, i32* %a, align 4, !dbg !17624
  %14 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17626
  %pntsu7 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 6, !dbg !17627
  %15 = load i32, i32* %pntsu7, align 8, !dbg !17627
  %cmp8 = icmp slt i32 %13, %15, !dbg !17628
  br i1 %cmp8, label %for.body9, label %for.end, !dbg !17629

for.body9:                                        ; preds = %for.cond6
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !17630
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %16, i32 0, i32 8, !dbg !17633
  %17 = load i8, i8* %f2, align 4, !dbg !17633
  %conv = zext i8 %17 to i32, !dbg !17630
  %and = and i32 %conv, 1, !dbg !17634
  %tobool10 = icmp ne i32 %and, 0, !dbg !17634
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !17635

if.then11:                                        ; preds = %for.body9
  %18 = load i32, i32* %a, align 4, !dbg !17636
  store i32 %18, i32* %start_sel, align 4, !dbg !17638
  br label %for.end, !dbg !17639

if.end:                                           ; preds = %for.body9
  br label %for.inc, !dbg !17640

for.inc:                                          ; preds = %if.end
  %19 = load i32, i32* %a, align 4, !dbg !17641
  %inc = add nsw i32 %19, 1, !dbg !17641
  store i32 %inc, i32* %a, align 4, !dbg !17641
  %20 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !17642
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %20, i32 1, !dbg !17642
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !17642
  br label %for.cond6, !dbg !17643, !llvm.loop !17644

for.end:                                          ; preds = %if.then11, %for.cond6
  %21 = load i32, i32* %start_sel, align 4, !dbg !17646
  store i32 %21, i32* %end_sel, align 4, !dbg !17647
  %22 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17648
  %bezt12 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %22, i32 0, i32 18, !dbg !17650
  %23 = load %struct.BezTriple*, %struct.BezTriple** %bezt12, align 8, !dbg !17650
  %24 = load i32, i32* %start_sel, align 4, !dbg !17651
  %add = add nsw i32 %24, 1, !dbg !17652
  %idxprom13 = sext i32 %add to i64, !dbg !17648
  %arrayidx14 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %23, i64 %idxprom13, !dbg !17648
  store %struct.BezTriple* %arrayidx14, %struct.BezTriple** %bezt, align 8, !dbg !17653
  %25 = load i32, i32* %start_sel, align 4, !dbg !17654
  %add15 = add nsw i32 %25, 1, !dbg !17655
  store i32 %add15, i32* %a, align 4, !dbg !17656
  br label %for.cond16, !dbg !17657

for.cond16:                                       ; preds = %for.inc28, %for.end
  %26 = load i32, i32* %a, align 4, !dbg !17658
  %27 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17660
  %pntsu17 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %27, i32 0, i32 6, !dbg !17661
  %28 = load i32, i32* %pntsu17, align 8, !dbg !17661
  %cmp18 = icmp slt i32 %26, %28, !dbg !17662
  br i1 %cmp18, label %for.body20, label %for.end31, !dbg !17663

for.body20:                                       ; preds = %for.cond16
  %29 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !17664
  %f221 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %29, i32 0, i32 8, !dbg !17667
  %30 = load i8, i8* %f221, align 4, !dbg !17667
  %conv22 = zext i8 %30 to i32, !dbg !17664
  %and23 = and i32 %conv22, 1, !dbg !17668
  %cmp24 = icmp eq i32 %and23, 0, !dbg !17669
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !17670

if.then26:                                        ; preds = %for.body20
  br label %for.end31, !dbg !17671

if.end27:                                         ; preds = %for.body20
  %31 = load i32, i32* %a, align 4, !dbg !17673
  store i32 %31, i32* %end_sel, align 4, !dbg !17674
  br label %for.inc28, !dbg !17675

for.inc28:                                        ; preds = %if.end27
  %32 = load i32, i32* %a, align 4, !dbg !17676
  %inc29 = add nsw i32 %32, 1, !dbg !17676
  store i32 %inc29, i32* %a, align 4, !dbg !17676
  %33 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !17677
  %incdec.ptr30 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %33, i32 1, !dbg !17677
  store %struct.BezTriple* %incdec.ptr30, %struct.BezTriple** %bezt, align 8, !dbg !17677
  br label %for.cond16, !dbg !17678, !llvm.loop !17679

for.end31:                                        ; preds = %if.then26, %for.cond16
  %34 = load i32, i32* %start_sel, align 4, !dbg !17681
  %cmp32 = icmp eq i32 %34, -1, !dbg !17683
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !17684

if.then34:                                        ; preds = %for.end31
  %35 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17685
  %pntsu35 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %35, i32 0, i32 6, !dbg !17687
  %36 = load i32, i32* %pntsu35, align 8, !dbg !17687
  store i32 %36, i32* %last_sel, align 4, !dbg !17688
  br label %if.end152, !dbg !17689

if.else:                                          ; preds = %for.end31
  %37 = load i32, i32* %end_sel, align 4, !dbg !17690
  store i32 %37, i32* %last_sel, align 4, !dbg !17692
  store float 0x47EFFFFFE0000000, float* %end_rad, align 4, !dbg !17693
  store float 0x47EFFFFFE0000000, float* %start_rad, align 4, !dbg !17694
  %38 = load i32, i32* %start_sel, align 4, !dbg !17695
  %39 = load i32, i32* %end_sel, align 4, !dbg !17697
  %cmp36 = icmp eq i32 %38, %39, !dbg !17698
  br i1 %cmp36, label %if.then38, label %if.else92, !dbg !17699

if.then38:                                        ; preds = %if.else
  %40 = load i32, i32* %start_sel, align 4, !dbg !17700
  %cmp39 = icmp sgt i32 %40, 0, !dbg !17703
  br i1 %cmp39, label %if.then41, label %if.end45, !dbg !17704

if.then41:                                        ; preds = %if.then38
  %41 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17705
  %bezt42 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %41, i32 0, i32 18, !dbg !17705
  %42 = load %struct.BezTriple*, %struct.BezTriple** %bezt42, align 8, !dbg !17705
  %43 = load i32, i32* %start_sel, align 4, !dbg !17705
  %sub = sub nsw i32 %43, 1, !dbg !17705
  %idxprom43 = sext i32 %sub to i64, !dbg !17705
  %arrayidx44 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %42, i64 %idxprom43, !dbg !17705
  %44 = bitcast %struct.BezTriple* %arrayidx44 to i8*, !dbg !17705
  %45 = load i32, i32* %bezt_offsetof.addr, align 4, !dbg !17705
  %idx.ext = sext i32 %45 to i64, !dbg !17705
  %add.ptr = getelementptr inbounds i8, i8* %44, i64 %idx.ext, !dbg !17705
  %46 = bitcast i8* %add.ptr to float*, !dbg !17705
  %47 = load float, float* %46, align 4, !dbg !17705
  store float %47, float* %start_rad, align 4, !dbg !17706
  br label %if.end45, !dbg !17707

if.end45:                                         ; preds = %if.then41, %if.then38
  %48 = load i32, i32* %end_sel, align 4, !dbg !17708
  %cmp46 = icmp ne i32 %48, -1, !dbg !17710
  br i1 %cmp46, label %land.lhs.true, label %if.end58, !dbg !17711

land.lhs.true:                                    ; preds = %if.end45
  %49 = load i32, i32* %end_sel, align 4, !dbg !17712
  %50 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17713
  %pntsu48 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %50, i32 0, i32 6, !dbg !17714
  %51 = load i32, i32* %pntsu48, align 8, !dbg !17714
  %cmp49 = icmp slt i32 %49, %51, !dbg !17715
  br i1 %cmp49, label %if.then51, label %if.end58, !dbg !17716

if.then51:                                        ; preds = %land.lhs.true
  %52 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17717
  %bezt52 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %52, i32 0, i32 18, !dbg !17717
  %53 = load %struct.BezTriple*, %struct.BezTriple** %bezt52, align 8, !dbg !17717
  %54 = load i32, i32* %start_sel, align 4, !dbg !17717
  %add53 = add nsw i32 %54, 1, !dbg !17717
  %idxprom54 = sext i32 %add53 to i64, !dbg !17717
  %arrayidx55 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %53, i64 %idxprom54, !dbg !17717
  %55 = bitcast %struct.BezTriple* %arrayidx55 to i8*, !dbg !17717
  %56 = load i32, i32* %bezt_offsetof.addr, align 4, !dbg !17717
  %idx.ext56 = sext i32 %56 to i64, !dbg !17717
  %add.ptr57 = getelementptr inbounds i8, i8* %55, i64 %idx.ext56, !dbg !17717
  %57 = bitcast i8* %add.ptr57 to float*, !dbg !17717
  %58 = load float, float* %57, align 4, !dbg !17717
  store float %58, float* %end_rad, align 4, !dbg !17718
  br label %if.end58, !dbg !17719

if.end58:                                         ; preds = %if.then51, %land.lhs.true, %if.end45
  %59 = load float, float* %start_rad, align 4, !dbg !17720
  %cmp59 = fcmp une float %59, 0x47EFFFFFE0000000, !dbg !17722
  br i1 %cmp59, label %land.lhs.true61, label %if.else71, !dbg !17723

land.lhs.true61:                                  ; preds = %if.end58
  %60 = load float, float* %end_rad, align 4, !dbg !17724
  %cmp62 = fcmp oge float %60, 0x47EFFFFFE0000000, !dbg !17725
  br i1 %cmp62, label %if.then64, label %if.else71, !dbg !17726

if.then64:                                        ; preds = %land.lhs.true61
  %61 = load float, float* %start_rad, align 4, !dbg !17727
  %62 = load float, float* %end_rad, align 4, !dbg !17728
  %add65 = fadd float %61, %62, !dbg !17729
  %div = fdiv float %add65, 2.000000e+00, !dbg !17730
  %63 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17731
  %bezt66 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %63, i32 0, i32 18, !dbg !17731
  %64 = load %struct.BezTriple*, %struct.BezTriple** %bezt66, align 8, !dbg !17731
  %65 = load i32, i32* %start_sel, align 4, !dbg !17731
  %idxprom67 = sext i32 %65 to i64, !dbg !17731
  %arrayidx68 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %64, i64 %idxprom67, !dbg !17731
  %66 = bitcast %struct.BezTriple* %arrayidx68 to i8*, !dbg !17731
  %67 = load i32, i32* %bezt_offsetof.addr, align 4, !dbg !17731
  %idx.ext69 = sext i32 %67 to i64, !dbg !17731
  %add.ptr70 = getelementptr inbounds i8, i8* %66, i64 %idx.ext69, !dbg !17731
  %68 = bitcast i8* %add.ptr70 to float*, !dbg !17731
  store float %div, float* %68, align 4, !dbg !17732
  br label %if.end91, !dbg !17731

if.else71:                                        ; preds = %land.lhs.true61, %if.end58
  %69 = load float, float* %start_rad, align 4, !dbg !17733
  %cmp72 = fcmp une float %69, 0x47EFFFFFE0000000, !dbg !17735
  br i1 %cmp72, label %if.then74, label %if.else80, !dbg !17736

if.then74:                                        ; preds = %if.else71
  %70 = load float, float* %start_rad, align 4, !dbg !17737
  %71 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17738
  %bezt75 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %71, i32 0, i32 18, !dbg !17738
  %72 = load %struct.BezTriple*, %struct.BezTriple** %bezt75, align 8, !dbg !17738
  %73 = load i32, i32* %start_sel, align 4, !dbg !17738
  %idxprom76 = sext i32 %73 to i64, !dbg !17738
  %arrayidx77 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %72, i64 %idxprom76, !dbg !17738
  %74 = bitcast %struct.BezTriple* %arrayidx77 to i8*, !dbg !17738
  %75 = load i32, i32* %bezt_offsetof.addr, align 4, !dbg !17738
  %idx.ext78 = sext i32 %75 to i64, !dbg !17738
  %add.ptr79 = getelementptr inbounds i8, i8* %74, i64 %idx.ext78, !dbg !17738
  %76 = bitcast i8* %add.ptr79 to float*, !dbg !17738
  store float %70, float* %76, align 4, !dbg !17739
  br label %if.end90, !dbg !17738

if.else80:                                        ; preds = %if.else71
  %77 = load float, float* %end_rad, align 4, !dbg !17740
  %cmp81 = fcmp une float %77, 0x47EFFFFFE0000000, !dbg !17742
  br i1 %cmp81, label %if.then83, label %if.end89, !dbg !17743

if.then83:                                        ; preds = %if.else80
  %78 = load float, float* %end_rad, align 4, !dbg !17744
  %79 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17745
  %bezt84 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %79, i32 0, i32 18, !dbg !17745
  %80 = load %struct.BezTriple*, %struct.BezTriple** %bezt84, align 8, !dbg !17745
  %81 = load i32, i32* %start_sel, align 4, !dbg !17745
  %idxprom85 = sext i32 %81 to i64, !dbg !17745
  %arrayidx86 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %80, i64 %idxprom85, !dbg !17745
  %82 = bitcast %struct.BezTriple* %arrayidx86 to i8*, !dbg !17745
  %83 = load i32, i32* %bezt_offsetof.addr, align 4, !dbg !17745
  %idx.ext87 = sext i32 %83 to i64, !dbg !17745
  %add.ptr88 = getelementptr inbounds i8, i8* %82, i64 %idx.ext87, !dbg !17745
  %84 = bitcast i8* %add.ptr88 to float*, !dbg !17745
  store float %78, float* %84, align 4, !dbg !17746
  br label %if.end89, !dbg !17745

if.end89:                                         ; preds = %if.then83, %if.else80
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.then74
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.then64
  br label %if.end151, !dbg !17747

if.else92:                                        ; preds = %if.else
  %85 = load i32, i32* %start_sel, align 4, !dbg !17748
  %cmp93 = icmp eq i32 %85, 0, !dbg !17751
  br i1 %cmp93, label %if.then95, label %if.else102, !dbg !17752

if.then95:                                        ; preds = %if.else92
  %86 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17753
  %bezt96 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %86, i32 0, i32 18, !dbg !17753
  %87 = load %struct.BezTriple*, %struct.BezTriple** %bezt96, align 8, !dbg !17753
  %88 = load i32, i32* %start_sel, align 4, !dbg !17753
  %idxprom97 = sext i32 %88 to i64, !dbg !17753
  %arrayidx98 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %87, i64 %idxprom97, !dbg !17753
  %89 = bitcast %struct.BezTriple* %arrayidx98 to i8*, !dbg !17753
  %90 = load i32, i32* %bezt_offsetof.addr, align 4, !dbg !17753
  %idx.ext99 = sext i32 %90 to i64, !dbg !17753
  %add.ptr100 = getelementptr inbounds i8, i8* %89, i64 %idx.ext99, !dbg !17753
  %91 = bitcast i8* %add.ptr100 to float*, !dbg !17753
  %92 = load float, float* %91, align 4, !dbg !17753
  store float %92, float* %start_rad, align 4, !dbg !17755
  %93 = load i32, i32* %start_sel, align 4, !dbg !17756
  %inc101 = add nsw i32 %93, 1, !dbg !17756
  store i32 %inc101, i32* %start_sel, align 4, !dbg !17756
  br label %if.end109, !dbg !17757

if.else102:                                       ; preds = %if.else92
  %94 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17758
  %bezt103 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %94, i32 0, i32 18, !dbg !17758
  %95 = load %struct.BezTriple*, %struct.BezTriple** %bezt103, align 8, !dbg !17758
  %96 = load i32, i32* %start_sel, align 4, !dbg !17758
  %sub104 = sub nsw i32 %96, 1, !dbg !17758
  %idxprom105 = sext i32 %sub104 to i64, !dbg !17758
  %arrayidx106 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %95, i64 %idxprom105, !dbg !17758
  %97 = bitcast %struct.BezTriple* %arrayidx106 to i8*, !dbg !17758
  %98 = load i32, i32* %bezt_offsetof.addr, align 4, !dbg !17758
  %idx.ext107 = sext i32 %98 to i64, !dbg !17758
  %add.ptr108 = getelementptr inbounds i8, i8* %97, i64 %idx.ext107, !dbg !17758
  %99 = bitcast i8* %add.ptr108 to float*, !dbg !17758
  %100 = load float, float* %99, align 4, !dbg !17758
  store float %100, float* %start_rad, align 4, !dbg !17760
  br label %if.end109

if.end109:                                        ; preds = %if.else102, %if.then95
  %101 = load i32, i32* %end_sel, align 4, !dbg !17761
  %102 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17763
  %pntsu110 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %102, i32 0, i32 6, !dbg !17764
  %103 = load i32, i32* %pntsu110, align 8, !dbg !17764
  %sub111 = sub nsw i32 %103, 1, !dbg !17765
  %cmp112 = icmp eq i32 %101, %sub111, !dbg !17766
  br i1 %cmp112, label %if.then114, label %if.else120, !dbg !17767

if.then114:                                       ; preds = %if.end109
  %104 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17768
  %bezt115 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %104, i32 0, i32 18, !dbg !17768
  %105 = load %struct.BezTriple*, %struct.BezTriple** %bezt115, align 8, !dbg !17768
  %106 = load i32, i32* %end_sel, align 4, !dbg !17768
  %idxprom116 = sext i32 %106 to i64, !dbg !17768
  %arrayidx117 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %105, i64 %idxprom116, !dbg !17768
  %107 = bitcast %struct.BezTriple* %arrayidx117 to i8*, !dbg !17768
  %108 = load i32, i32* %bezt_offsetof.addr, align 4, !dbg !17768
  %idx.ext118 = sext i32 %108 to i64, !dbg !17768
  %add.ptr119 = getelementptr inbounds i8, i8* %107, i64 %idx.ext118, !dbg !17768
  %109 = bitcast i8* %add.ptr119 to float*, !dbg !17768
  %110 = load float, float* %109, align 4, !dbg !17768
  store float %110, float* %end_rad, align 4, !dbg !17770
  %111 = load i32, i32* %end_sel, align 4, !dbg !17771
  %dec = add nsw i32 %111, -1, !dbg !17771
  store i32 %dec, i32* %end_sel, align 4, !dbg !17771
  br label %if.end127, !dbg !17772

if.else120:                                       ; preds = %if.end109
  %112 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17773
  %bezt121 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %112, i32 0, i32 18, !dbg !17773
  %113 = load %struct.BezTriple*, %struct.BezTriple** %bezt121, align 8, !dbg !17773
  %114 = load i32, i32* %end_sel, align 4, !dbg !17773
  %add122 = add nsw i32 %114, 1, !dbg !17773
  %idxprom123 = sext i32 %add122 to i64, !dbg !17773
  %arrayidx124 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %113, i64 %idxprom123, !dbg !17773
  %115 = bitcast %struct.BezTriple* %arrayidx124 to i8*, !dbg !17773
  %116 = load i32, i32* %bezt_offsetof.addr, align 4, !dbg !17773
  %idx.ext125 = sext i32 %116 to i64, !dbg !17773
  %add.ptr126 = getelementptr inbounds i8, i8* %115, i64 %idx.ext125, !dbg !17773
  %117 = bitcast i8* %add.ptr126 to float*, !dbg !17773
  %118 = load float, float* %117, align 4, !dbg !17773
  store float %118, float* %end_rad, align 4, !dbg !17775
  br label %if.end127

if.end127:                                        ; preds = %if.else120, %if.then114
  %119 = load i32, i32* %end_sel, align 4, !dbg !17776
  %120 = load i32, i32* %start_sel, align 4, !dbg !17777
  %sub128 = sub nsw i32 %119, %120, !dbg !17778
  %conv129 = sitofp i32 %sub128 to float, !dbg !17779
  %add130 = fadd float %conv129, 2.000000e+00, !dbg !17780
  store float %add130, float* %range, align 4, !dbg !17781
  %121 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17782
  %bezt131 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %121, i32 0, i32 18, !dbg !17784
  %122 = load %struct.BezTriple*, %struct.BezTriple** %bezt131, align 8, !dbg !17784
  %123 = load i32, i32* %start_sel, align 4, !dbg !17785
  %idxprom132 = sext i32 %123 to i64, !dbg !17782
  %arrayidx133 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %122, i64 %idxprom132, !dbg !17782
  store %struct.BezTriple* %arrayidx133, %struct.BezTriple** %bezt, align 8, !dbg !17786
  %124 = load i32, i32* %start_sel, align 4, !dbg !17787
  store i32 %124, i32* %a, align 4, !dbg !17788
  br label %for.cond134, !dbg !17789

for.cond134:                                      ; preds = %for.inc147, %if.end127
  %125 = load i32, i32* %a, align 4, !dbg !17790
  %126 = load i32, i32* %end_sel, align 4, !dbg !17792
  %cmp135 = icmp sle i32 %125, %126, !dbg !17793
  br i1 %cmp135, label %for.body137, label %for.end150, !dbg !17794

for.body137:                                      ; preds = %for.cond134
  %127 = load i32, i32* %a, align 4, !dbg !17795
  %add138 = add nsw i32 1, %127, !dbg !17797
  %128 = load i32, i32* %start_sel, align 4, !dbg !17798
  %sub139 = sub nsw i32 %add138, %128, !dbg !17799
  %conv140 = sitofp i32 %sub139 to float, !dbg !17800
  %129 = load float, float* %range, align 4, !dbg !17801
  %div141 = fdiv float %conv140, %129, !dbg !17802
  store float %div141, float* %fac, align 4, !dbg !17803
  %130 = load float, float* %start_rad, align 4, !dbg !17804
  %131 = load float, float* %fac, align 4, !dbg !17805
  %sub142 = fsub float 1.000000e+00, %131, !dbg !17806
  %mul = fmul float %130, %sub142, !dbg !17807
  %132 = load float, float* %end_rad, align 4, !dbg !17808
  %133 = load float, float* %fac, align 4, !dbg !17809
  %mul143 = fmul float %132, %133, !dbg !17810
  %add144 = fadd float %mul, %mul143, !dbg !17811
  %134 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !17812
  %135 = bitcast %struct.BezTriple* %134 to i8*, !dbg !17812
  %136 = load i32, i32* %bezt_offsetof.addr, align 4, !dbg !17812
  %idx.ext145 = sext i32 %136 to i64, !dbg !17812
  %add.ptr146 = getelementptr inbounds i8, i8* %135, i64 %idx.ext145, !dbg !17812
  %137 = bitcast i8* %add.ptr146 to float*, !dbg !17812
  store float %add144, float* %137, align 4, !dbg !17813
  br label %for.inc147, !dbg !17814

for.inc147:                                       ; preds = %for.body137
  %138 = load i32, i32* %a, align 4, !dbg !17815
  %inc148 = add nsw i32 %138, 1, !dbg !17815
  store i32 %inc148, i32* %a, align 4, !dbg !17815
  %139 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !17816
  %incdec.ptr149 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %139, i32 1, !dbg !17816
  store %struct.BezTriple* %incdec.ptr149, %struct.BezTriple** %bezt, align 8, !dbg !17816
  br label %for.cond134, !dbg !17817, !llvm.loop !17818

for.end150:                                       ; preds = %for.cond134
  br label %if.end151

if.end151:                                        ; preds = %for.end150, %if.end91
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.then34
  br label %for.inc153, !dbg !17820

for.inc153:                                       ; preds = %if.end152
  %140 = load i32, i32* %last_sel, align 4, !dbg !17821
  %inc154 = add nsw i32 %140, 1, !dbg !17821
  store i32 %inc154, i32* %last_sel, align 4, !dbg !17821
  br label %for.cond3, !dbg !17822, !llvm.loop !17823

for.end155:                                       ; preds = %for.cond3
  br label %if.end336, !dbg !17825

if.else156:                                       ; preds = %for.body
  %141 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17826
  %bp157 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %141, i32 0, i32 17, !dbg !17828
  %142 = load %struct.BPoint*, %struct.BPoint** %bp157, align 8, !dbg !17828
  %tobool158 = icmp ne %struct.BPoint* %142, null, !dbg !17826
  br i1 %tobool158, label %if.then159, label %if.end335, !dbg !17829

if.then159:                                       ; preds = %if.else156
  store i32 0, i32* %last_sel, align 4, !dbg !17830
  br label %for.cond160, !dbg !17833

for.cond160:                                      ; preds = %for.inc332, %if.then159
  %143 = load i32, i32* %last_sel, align 4, !dbg !17834
  %144 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17836
  %pntsu161 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %144, i32 0, i32 6, !dbg !17837
  %145 = load i32, i32* %pntsu161, align 8, !dbg !17837
  %cmp162 = icmp slt i32 %143, %145, !dbg !17838
  br i1 %cmp162, label %for.body164, label %for.end334, !dbg !17839

for.body164:                                      ; preds = %for.cond160
  store i32 -1, i32* %start_sel, align 4, !dbg !17840
  %146 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17842
  %bp165 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %146, i32 0, i32 17, !dbg !17844
  %147 = load %struct.BPoint*, %struct.BPoint** %bp165, align 8, !dbg !17844
  %148 = load i32, i32* %last_sel, align 4, !dbg !17845
  %idxprom166 = sext i32 %148 to i64, !dbg !17842
  %arrayidx167 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %147, i64 %idxprom166, !dbg !17842
  store %struct.BPoint* %arrayidx167, %struct.BPoint** %bp, align 8, !dbg !17846
  %149 = load i32, i32* %last_sel, align 4, !dbg !17847
  store i32 %149, i32* %a, align 4, !dbg !17848
  br label %for.cond168, !dbg !17849

for.cond168:                                      ; preds = %for.inc178, %for.body164
  %150 = load i32, i32* %a, align 4, !dbg !17850
  %151 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17852
  %pntsu169 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %151, i32 0, i32 6, !dbg !17853
  %152 = load i32, i32* %pntsu169, align 8, !dbg !17853
  %cmp170 = icmp slt i32 %150, %152, !dbg !17854
  br i1 %cmp170, label %for.body172, label %for.end181, !dbg !17855

for.body172:                                      ; preds = %for.cond168
  %153 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !17856
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %153, i32 0, i32 3, !dbg !17859
  %154 = load i16, i16* %f1, align 4, !dbg !17859
  %conv173 = sext i16 %154 to i32, !dbg !17856
  %and174 = and i32 %conv173, 1, !dbg !17860
  %tobool175 = icmp ne i32 %and174, 0, !dbg !17860
  br i1 %tobool175, label %if.then176, label %if.end177, !dbg !17861

if.then176:                                       ; preds = %for.body172
  %155 = load i32, i32* %a, align 4, !dbg !17862
  store i32 %155, i32* %start_sel, align 4, !dbg !17864
  br label %for.end181, !dbg !17865

if.end177:                                        ; preds = %for.body172
  br label %for.inc178, !dbg !17866

for.inc178:                                       ; preds = %if.end177
  %156 = load i32, i32* %a, align 4, !dbg !17867
  %inc179 = add nsw i32 %156, 1, !dbg !17867
  store i32 %inc179, i32* %a, align 4, !dbg !17867
  %157 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !17868
  %incdec.ptr180 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %157, i32 1, !dbg !17868
  store %struct.BPoint* %incdec.ptr180, %struct.BPoint** %bp, align 8, !dbg !17868
  br label %for.cond168, !dbg !17869, !llvm.loop !17870

for.end181:                                       ; preds = %if.then176, %for.cond168
  %158 = load i32, i32* %start_sel, align 4, !dbg !17872
  store i32 %158, i32* %end_sel, align 4, !dbg !17873
  %159 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17874
  %bp182 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %159, i32 0, i32 17, !dbg !17876
  %160 = load %struct.BPoint*, %struct.BPoint** %bp182, align 8, !dbg !17876
  %161 = load i32, i32* %start_sel, align 4, !dbg !17877
  %add183 = add nsw i32 %161, 1, !dbg !17878
  %idxprom184 = sext i32 %add183 to i64, !dbg !17874
  %arrayidx185 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %160, i64 %idxprom184, !dbg !17874
  store %struct.BPoint* %arrayidx185, %struct.BPoint** %bp, align 8, !dbg !17879
  %162 = load i32, i32* %start_sel, align 4, !dbg !17880
  %add186 = add nsw i32 %162, 1, !dbg !17881
  store i32 %add186, i32* %a, align 4, !dbg !17882
  br label %for.cond187, !dbg !17883

for.cond187:                                      ; preds = %for.inc199, %for.end181
  %163 = load i32, i32* %a, align 4, !dbg !17884
  %164 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17886
  %pntsu188 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %164, i32 0, i32 6, !dbg !17887
  %165 = load i32, i32* %pntsu188, align 8, !dbg !17887
  %cmp189 = icmp slt i32 %163, %165, !dbg !17888
  br i1 %cmp189, label %for.body191, label %for.end202, !dbg !17889

for.body191:                                      ; preds = %for.cond187
  %166 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !17890
  %f1192 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %166, i32 0, i32 3, !dbg !17893
  %167 = load i16, i16* %f1192, align 4, !dbg !17893
  %conv193 = sext i16 %167 to i32, !dbg !17890
  %and194 = and i32 %conv193, 1, !dbg !17894
  %cmp195 = icmp eq i32 %and194, 0, !dbg !17895
  br i1 %cmp195, label %if.then197, label %if.end198, !dbg !17896

if.then197:                                       ; preds = %for.body191
  br label %for.end202, !dbg !17897

if.end198:                                        ; preds = %for.body191
  %168 = load i32, i32* %a, align 4, !dbg !17899
  store i32 %168, i32* %end_sel, align 4, !dbg !17900
  br label %for.inc199, !dbg !17901

for.inc199:                                       ; preds = %if.end198
  %169 = load i32, i32* %a, align 4, !dbg !17902
  %inc200 = add nsw i32 %169, 1, !dbg !17902
  store i32 %inc200, i32* %a, align 4, !dbg !17902
  %170 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !17903
  %incdec.ptr201 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %170, i32 1, !dbg !17903
  store %struct.BPoint* %incdec.ptr201, %struct.BPoint** %bp, align 8, !dbg !17903
  br label %for.cond187, !dbg !17904, !llvm.loop !17905

for.end202:                                       ; preds = %if.then197, %for.cond187
  %171 = load i32, i32* %start_sel, align 4, !dbg !17907
  %cmp203 = icmp eq i32 %171, -1, !dbg !17909
  br i1 %cmp203, label %if.then205, label %if.else207, !dbg !17910

if.then205:                                       ; preds = %for.end202
  %172 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17911
  %pntsu206 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %172, i32 0, i32 6, !dbg !17913
  %173 = load i32, i32* %pntsu206, align 8, !dbg !17913
  store i32 %173, i32* %last_sel, align 4, !dbg !17914
  br label %if.end331, !dbg !17915

if.else207:                                       ; preds = %for.end202
  %174 = load i32, i32* %end_sel, align 4, !dbg !17916
  store i32 %174, i32* %last_sel, align 4, !dbg !17918
  store float 0x47EFFFFFE0000000, float* %end_rad, align 4, !dbg !17919
  store float 0x47EFFFFFE0000000, float* %start_rad, align 4, !dbg !17920
  %175 = load i32, i32* %start_sel, align 4, !dbg !17921
  %176 = load i32, i32* %end_sel, align 4, !dbg !17923
  %cmp208 = icmp eq i32 %175, %176, !dbg !17924
  br i1 %cmp208, label %if.then210, label %if.else269, !dbg !17925

if.then210:                                       ; preds = %if.else207
  %177 = load i32, i32* %start_sel, align 4, !dbg !17926
  %cmp211 = icmp sgt i32 %177, 0, !dbg !17929
  br i1 %cmp211, label %if.then213, label %if.end220, !dbg !17930

if.then213:                                       ; preds = %if.then210
  %178 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17931
  %bp214 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %178, i32 0, i32 17, !dbg !17931
  %179 = load %struct.BPoint*, %struct.BPoint** %bp214, align 8, !dbg !17931
  %180 = load i32, i32* %start_sel, align 4, !dbg !17931
  %sub215 = sub nsw i32 %180, 1, !dbg !17931
  %idxprom216 = sext i32 %sub215 to i64, !dbg !17931
  %arrayidx217 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %179, i64 %idxprom216, !dbg !17931
  %181 = bitcast %struct.BPoint* %arrayidx217 to i8*, !dbg !17931
  %182 = load i32, i32* %bp_offset.addr, align 4, !dbg !17931
  %idx.ext218 = sext i32 %182 to i64, !dbg !17931
  %add.ptr219 = getelementptr inbounds i8, i8* %181, i64 %idx.ext218, !dbg !17931
  %183 = bitcast i8* %add.ptr219 to float*, !dbg !17931
  %184 = load float, float* %183, align 4, !dbg !17931
  store float %184, float* %start_rad, align 4, !dbg !17932
  br label %if.end220, !dbg !17933

if.end220:                                        ; preds = %if.then213, %if.then210
  %185 = load i32, i32* %end_sel, align 4, !dbg !17934
  %cmp221 = icmp ne i32 %185, -1, !dbg !17936
  br i1 %cmp221, label %land.lhs.true223, label %if.end234, !dbg !17937

land.lhs.true223:                                 ; preds = %if.end220
  %186 = load i32, i32* %end_sel, align 4, !dbg !17938
  %187 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17939
  %pntsu224 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %187, i32 0, i32 6, !dbg !17940
  %188 = load i32, i32* %pntsu224, align 8, !dbg !17940
  %cmp225 = icmp slt i32 %186, %188, !dbg !17941
  br i1 %cmp225, label %if.then227, label %if.end234, !dbg !17942

if.then227:                                       ; preds = %land.lhs.true223
  %189 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17943
  %bp228 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %189, i32 0, i32 17, !dbg !17943
  %190 = load %struct.BPoint*, %struct.BPoint** %bp228, align 8, !dbg !17943
  %191 = load i32, i32* %start_sel, align 4, !dbg !17943
  %add229 = add nsw i32 %191, 1, !dbg !17943
  %idxprom230 = sext i32 %add229 to i64, !dbg !17943
  %arrayidx231 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %190, i64 %idxprom230, !dbg !17943
  %192 = bitcast %struct.BPoint* %arrayidx231 to i8*, !dbg !17943
  %193 = load i32, i32* %bp_offset.addr, align 4, !dbg !17943
  %idx.ext232 = sext i32 %193 to i64, !dbg !17943
  %add.ptr233 = getelementptr inbounds i8, i8* %192, i64 %idx.ext232, !dbg !17943
  %194 = bitcast i8* %add.ptr233 to float*, !dbg !17943
  %195 = load float, float* %194, align 4, !dbg !17943
  store float %195, float* %end_rad, align 4, !dbg !17944
  br label %if.end234, !dbg !17945

if.end234:                                        ; preds = %if.then227, %land.lhs.true223, %if.end220
  %196 = load float, float* %start_rad, align 4, !dbg !17946
  %cmp235 = fcmp une float %196, 0x47EFFFFFE0000000, !dbg !17948
  br i1 %cmp235, label %land.lhs.true237, label %if.else248, !dbg !17949

land.lhs.true237:                                 ; preds = %if.end234
  %197 = load float, float* %end_rad, align 4, !dbg !17950
  %cmp238 = fcmp une float %197, 0x47EFFFFFE0000000, !dbg !17951
  br i1 %cmp238, label %if.then240, label %if.else248, !dbg !17952

if.then240:                                       ; preds = %land.lhs.true237
  %198 = load float, float* %start_rad, align 4, !dbg !17953
  %199 = load float, float* %end_rad, align 4, !dbg !17954
  %add241 = fadd float %198, %199, !dbg !17955
  %div242 = fdiv float %add241, 2.000000e+00, !dbg !17956
  %200 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17957
  %bp243 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %200, i32 0, i32 17, !dbg !17957
  %201 = load %struct.BPoint*, %struct.BPoint** %bp243, align 8, !dbg !17957
  %202 = load i32, i32* %start_sel, align 4, !dbg !17957
  %idxprom244 = sext i32 %202 to i64, !dbg !17957
  %arrayidx245 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %201, i64 %idxprom244, !dbg !17957
  %203 = bitcast %struct.BPoint* %arrayidx245 to i8*, !dbg !17957
  %204 = load i32, i32* %bp_offset.addr, align 4, !dbg !17957
  %idx.ext246 = sext i32 %204 to i64, !dbg !17957
  %add.ptr247 = getelementptr inbounds i8, i8* %203, i64 %idx.ext246, !dbg !17957
  %205 = bitcast i8* %add.ptr247 to float*, !dbg !17957
  store float %div242, float* %205, align 4, !dbg !17958
  br label %if.end268, !dbg !17957

if.else248:                                       ; preds = %land.lhs.true237, %if.end234
  %206 = load float, float* %start_rad, align 4, !dbg !17959
  %cmp249 = fcmp une float %206, 0x47EFFFFFE0000000, !dbg !17961
  br i1 %cmp249, label %if.then251, label %if.else257, !dbg !17962

if.then251:                                       ; preds = %if.else248
  %207 = load float, float* %start_rad, align 4, !dbg !17963
  %208 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17964
  %bp252 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %208, i32 0, i32 17, !dbg !17964
  %209 = load %struct.BPoint*, %struct.BPoint** %bp252, align 8, !dbg !17964
  %210 = load i32, i32* %start_sel, align 4, !dbg !17964
  %idxprom253 = sext i32 %210 to i64, !dbg !17964
  %arrayidx254 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %209, i64 %idxprom253, !dbg !17964
  %211 = bitcast %struct.BPoint* %arrayidx254 to i8*, !dbg !17964
  %212 = load i32, i32* %bp_offset.addr, align 4, !dbg !17964
  %idx.ext255 = sext i32 %212 to i64, !dbg !17964
  %add.ptr256 = getelementptr inbounds i8, i8* %211, i64 %idx.ext255, !dbg !17964
  %213 = bitcast i8* %add.ptr256 to float*, !dbg !17964
  store float %207, float* %213, align 4, !dbg !17965
  br label %if.end267, !dbg !17964

if.else257:                                       ; preds = %if.else248
  %214 = load float, float* %end_rad, align 4, !dbg !17966
  %cmp258 = fcmp une float %214, 0x47EFFFFFE0000000, !dbg !17968
  br i1 %cmp258, label %if.then260, label %if.end266, !dbg !17969

if.then260:                                       ; preds = %if.else257
  %215 = load float, float* %end_rad, align 4, !dbg !17970
  %216 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17971
  %bp261 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %216, i32 0, i32 17, !dbg !17971
  %217 = load %struct.BPoint*, %struct.BPoint** %bp261, align 8, !dbg !17971
  %218 = load i32, i32* %start_sel, align 4, !dbg !17971
  %idxprom262 = sext i32 %218 to i64, !dbg !17971
  %arrayidx263 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %217, i64 %idxprom262, !dbg !17971
  %219 = bitcast %struct.BPoint* %arrayidx263 to i8*, !dbg !17971
  %220 = load i32, i32* %bp_offset.addr, align 4, !dbg !17971
  %idx.ext264 = sext i32 %220 to i64, !dbg !17971
  %add.ptr265 = getelementptr inbounds i8, i8* %219, i64 %idx.ext264, !dbg !17971
  %221 = bitcast i8* %add.ptr265 to float*, !dbg !17971
  store float %215, float* %221, align 4, !dbg !17972
  br label %if.end266, !dbg !17971

if.end266:                                        ; preds = %if.then260, %if.else257
  br label %if.end267

if.end267:                                        ; preds = %if.end266, %if.then251
  br label %if.end268

if.end268:                                        ; preds = %if.end267, %if.then240
  br label %if.end330, !dbg !17973

if.else269:                                       ; preds = %if.else207
  %222 = load i32, i32* %start_sel, align 4, !dbg !17974
  %cmp270 = icmp eq i32 %222, 0, !dbg !17977
  br i1 %cmp270, label %if.then272, label %if.else279, !dbg !17978

if.then272:                                       ; preds = %if.else269
  %223 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17979
  %bp273 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %223, i32 0, i32 17, !dbg !17979
  %224 = load %struct.BPoint*, %struct.BPoint** %bp273, align 8, !dbg !17979
  %225 = load i32, i32* %start_sel, align 4, !dbg !17979
  %idxprom274 = sext i32 %225 to i64, !dbg !17979
  %arrayidx275 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %224, i64 %idxprom274, !dbg !17979
  %226 = bitcast %struct.BPoint* %arrayidx275 to i8*, !dbg !17979
  %227 = load i32, i32* %bp_offset.addr, align 4, !dbg !17979
  %idx.ext276 = sext i32 %227 to i64, !dbg !17979
  %add.ptr277 = getelementptr inbounds i8, i8* %226, i64 %idx.ext276, !dbg !17979
  %228 = bitcast i8* %add.ptr277 to float*, !dbg !17979
  %229 = load float, float* %228, align 4, !dbg !17979
  store float %229, float* %start_rad, align 4, !dbg !17981
  %230 = load i32, i32* %start_sel, align 4, !dbg !17982
  %inc278 = add nsw i32 %230, 1, !dbg !17982
  store i32 %inc278, i32* %start_sel, align 4, !dbg !17982
  br label %if.end286, !dbg !17983

if.else279:                                       ; preds = %if.else269
  %231 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17984
  %bp280 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %231, i32 0, i32 17, !dbg !17984
  %232 = load %struct.BPoint*, %struct.BPoint** %bp280, align 8, !dbg !17984
  %233 = load i32, i32* %start_sel, align 4, !dbg !17984
  %sub281 = sub nsw i32 %233, 1, !dbg !17984
  %idxprom282 = sext i32 %sub281 to i64, !dbg !17984
  %arrayidx283 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %232, i64 %idxprom282, !dbg !17984
  %234 = bitcast %struct.BPoint* %arrayidx283 to i8*, !dbg !17984
  %235 = load i32, i32* %bp_offset.addr, align 4, !dbg !17984
  %idx.ext284 = sext i32 %235 to i64, !dbg !17984
  %add.ptr285 = getelementptr inbounds i8, i8* %234, i64 %idx.ext284, !dbg !17984
  %236 = bitcast i8* %add.ptr285 to float*, !dbg !17984
  %237 = load float, float* %236, align 4, !dbg !17984
  store float %237, float* %start_rad, align 4, !dbg !17986
  br label %if.end286

if.end286:                                        ; preds = %if.else279, %if.then272
  %238 = load i32, i32* %end_sel, align 4, !dbg !17987
  %239 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17989
  %pntsu287 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %239, i32 0, i32 6, !dbg !17990
  %240 = load i32, i32* %pntsu287, align 8, !dbg !17990
  %sub288 = sub nsw i32 %240, 1, !dbg !17991
  %cmp289 = icmp eq i32 %238, %sub288, !dbg !17992
  br i1 %cmp289, label %if.then291, label %if.else298, !dbg !17993

if.then291:                                       ; preds = %if.end286
  %241 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17994
  %bp292 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %241, i32 0, i32 17, !dbg !17994
  %242 = load %struct.BPoint*, %struct.BPoint** %bp292, align 8, !dbg !17994
  %243 = load i32, i32* %end_sel, align 4, !dbg !17994
  %idxprom293 = sext i32 %243 to i64, !dbg !17994
  %arrayidx294 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %242, i64 %idxprom293, !dbg !17994
  %244 = bitcast %struct.BPoint* %arrayidx294 to i8*, !dbg !17994
  %245 = load i32, i32* %bp_offset.addr, align 4, !dbg !17994
  %idx.ext295 = sext i32 %245 to i64, !dbg !17994
  %add.ptr296 = getelementptr inbounds i8, i8* %244, i64 %idx.ext295, !dbg !17994
  %246 = bitcast i8* %add.ptr296 to float*, !dbg !17994
  %247 = load float, float* %246, align 4, !dbg !17994
  store float %247, float* %end_rad, align 4, !dbg !17996
  %248 = load i32, i32* %end_sel, align 4, !dbg !17997
  %dec297 = add nsw i32 %248, -1, !dbg !17997
  store i32 %dec297, i32* %end_sel, align 4, !dbg !17997
  br label %if.end305, !dbg !17998

if.else298:                                       ; preds = %if.end286
  %249 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !17999
  %bp299 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %249, i32 0, i32 17, !dbg !17999
  %250 = load %struct.BPoint*, %struct.BPoint** %bp299, align 8, !dbg !17999
  %251 = load i32, i32* %end_sel, align 4, !dbg !17999
  %add300 = add nsw i32 %251, 1, !dbg !17999
  %idxprom301 = sext i32 %add300 to i64, !dbg !17999
  %arrayidx302 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %250, i64 %idxprom301, !dbg !17999
  %252 = bitcast %struct.BPoint* %arrayidx302 to i8*, !dbg !17999
  %253 = load i32, i32* %bp_offset.addr, align 4, !dbg !17999
  %idx.ext303 = sext i32 %253 to i64, !dbg !17999
  %add.ptr304 = getelementptr inbounds i8, i8* %252, i64 %idx.ext303, !dbg !17999
  %254 = bitcast i8* %add.ptr304 to float*, !dbg !17999
  %255 = load float, float* %254, align 4, !dbg !17999
  store float %255, float* %end_rad, align 4, !dbg !18001
  br label %if.end305

if.end305:                                        ; preds = %if.else298, %if.then291
  %256 = load i32, i32* %end_sel, align 4, !dbg !18002
  %257 = load i32, i32* %start_sel, align 4, !dbg !18003
  %sub306 = sub nsw i32 %256, %257, !dbg !18004
  %conv307 = sitofp i32 %sub306 to float, !dbg !18005
  %add308 = fadd float %conv307, 2.000000e+00, !dbg !18006
  store float %add308, float* %range, align 4, !dbg !18007
  %258 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18008
  %bp309 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %258, i32 0, i32 17, !dbg !18010
  %259 = load %struct.BPoint*, %struct.BPoint** %bp309, align 8, !dbg !18010
  %260 = load i32, i32* %start_sel, align 4, !dbg !18011
  %idxprom310 = sext i32 %260 to i64, !dbg !18008
  %arrayidx311 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %259, i64 %idxprom310, !dbg !18008
  store %struct.BPoint* %arrayidx311, %struct.BPoint** %bp, align 8, !dbg !18012
  %261 = load i32, i32* %start_sel, align 4, !dbg !18013
  store i32 %261, i32* %a, align 4, !dbg !18014
  br label %for.cond312, !dbg !18015

for.cond312:                                      ; preds = %for.inc326, %if.end305
  %262 = load i32, i32* %a, align 4, !dbg !18016
  %263 = load i32, i32* %end_sel, align 4, !dbg !18018
  %cmp313 = icmp sle i32 %262, %263, !dbg !18019
  br i1 %cmp313, label %for.body315, label %for.end329, !dbg !18020

for.body315:                                      ; preds = %for.cond312
  %264 = load i32, i32* %a, align 4, !dbg !18021
  %add316 = add nsw i32 1, %264, !dbg !18023
  %265 = load i32, i32* %start_sel, align 4, !dbg !18024
  %sub317 = sub nsw i32 %add316, %265, !dbg !18025
  %conv318 = sitofp i32 %sub317 to float, !dbg !18026
  %266 = load float, float* %range, align 4, !dbg !18027
  %div319 = fdiv float %conv318, %266, !dbg !18028
  store float %div319, float* %fac, align 4, !dbg !18029
  %267 = load float, float* %start_rad, align 4, !dbg !18030
  %268 = load float, float* %fac, align 4, !dbg !18031
  %sub320 = fsub float 1.000000e+00, %268, !dbg !18032
  %mul321 = fmul float %267, %sub320, !dbg !18033
  %269 = load float, float* %end_rad, align 4, !dbg !18034
  %270 = load float, float* %fac, align 4, !dbg !18035
  %mul322 = fmul float %269, %270, !dbg !18036
  %add323 = fadd float %mul321, %mul322, !dbg !18037
  %271 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18038
  %272 = bitcast %struct.BPoint* %271 to i8*, !dbg !18038
  %273 = load i32, i32* %bp_offset.addr, align 4, !dbg !18038
  %idx.ext324 = sext i32 %273 to i64, !dbg !18038
  %add.ptr325 = getelementptr inbounds i8, i8* %272, i64 %idx.ext324, !dbg !18038
  %274 = bitcast i8* %add.ptr325 to float*, !dbg !18038
  store float %add323, float* %274, align 4, !dbg !18039
  br label %for.inc326, !dbg !18040

for.inc326:                                       ; preds = %for.body315
  %275 = load i32, i32* %a, align 4, !dbg !18041
  %inc327 = add nsw i32 %275, 1, !dbg !18041
  store i32 %inc327, i32* %a, align 4, !dbg !18041
  %276 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18042
  %incdec.ptr328 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %276, i32 1, !dbg !18042
  store %struct.BPoint* %incdec.ptr328, %struct.BPoint** %bp, align 8, !dbg !18042
  br label %for.cond312, !dbg !18043, !llvm.loop !18044

for.end329:                                       ; preds = %for.cond312
  br label %if.end330

if.end330:                                        ; preds = %for.end329, %if.end268
  br label %if.end331

if.end331:                                        ; preds = %if.end330, %if.then205
  br label %for.inc332, !dbg !18046

for.inc332:                                       ; preds = %if.end331
  %277 = load i32, i32* %last_sel, align 4, !dbg !18047
  %inc333 = add nsw i32 %277, 1, !dbg !18047
  store i32 %inc333, i32* %last_sel, align 4, !dbg !18047
  br label %for.cond160, !dbg !18048, !llvm.loop !18049

for.end334:                                       ; preds = %for.cond160
  br label %if.end335, !dbg !18051

if.end335:                                        ; preds = %for.end334, %if.else156
  br label %if.end336

if.end336:                                        ; preds = %if.end335, %for.end155
  br label %for.inc337, !dbg !18052

for.inc337:                                       ; preds = %if.end336
  %278 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18053
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %278, i32 0, i32 0, !dbg !18054
  %279 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !18054
  store %struct.Nurb* %279, %struct.Nurb** %nu, align 8, !dbg !18055
  br label %for.cond, !dbg !18056, !llvm.loop !18057

for.end338:                                       ; preds = %for.cond
  ret void, !dbg !18059
}

declare dso_local void @BKE_curve_nurb_vert_active_validate(%struct.Curve*) #2

declare dso_local i32 @RNA_enum_get(%struct.PointerRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @nurb_has_selected_cps(%struct.ListBase* %editnurb) #0 !dbg !18060 {
entry:
  %retval = alloca i8, align 1
  %editnurb.addr = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  store %struct.ListBase* %editnurb, %struct.ListBase** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb.addr, metadata !18063, metadata !DIExpression()), !dbg !18064
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !18065, metadata !DIExpression()), !dbg !18066
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !18067, metadata !DIExpression()), !dbg !18068
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !18069, metadata !DIExpression()), !dbg !18070
  call void @llvm.dbg.declare(metadata i32* %a, metadata !18071, metadata !DIExpression()), !dbg !18072
  %0 = load %struct.ListBase*, %struct.ListBase** %editnurb.addr, align 8, !dbg !18073
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !18075
  %1 = load i8*, i8** %first, align 8, !dbg !18075
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !18073
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !18076
  br label %for.cond, !dbg !18077

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18078
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !18080
  br i1 %tobool, label %for.body, label %for.end, !dbg !18080

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18081
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 2, !dbg !18084
  %5 = load i16, i16* %type, align 8, !dbg !18084
  %conv = sext i16 %5 to i32, !dbg !18081
  %cmp = icmp eq i32 %conv, 1, !dbg !18085
  br i1 %cmp, label %if.then, label %if.else, !dbg !18086

if.then:                                          ; preds = %for.body
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18087
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 6, !dbg !18089
  %7 = load i32, i32* %pntsu, align 8, !dbg !18089
  store i32 %7, i32* %a, align 4, !dbg !18090
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18091
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 18, !dbg !18092
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !18092
  store %struct.BezTriple* %9, %struct.BezTriple** %bezt, align 8, !dbg !18093
  br label %while.cond, !dbg !18094

while.cond:                                       ; preds = %if.end18, %if.then
  %10 = load i32, i32* %a, align 4, !dbg !18095
  %dec = add nsw i32 %10, -1, !dbg !18095
  store i32 %dec, i32* %a, align 4, !dbg !18095
  %tobool3 = icmp ne i32 %10, 0, !dbg !18094
  br i1 %tobool3, label %while.body, label %while.end, !dbg !18094

while.body:                                       ; preds = %while.cond
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18096
  %hide = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %11, i32 0, i32 10, !dbg !18099
  %12 = load i8, i8* %hide, align 2, !dbg !18099
  %conv4 = zext i8 %12 to i32, !dbg !18096
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !18100
  br i1 %cmp5, label %if.then7, label %if.end18, !dbg !18101

if.then7:                                         ; preds = %while.body
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18102
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %13, i32 0, i32 7, !dbg !18105
  %14 = load i8, i8* %f1, align 1, !dbg !18105
  %conv8 = zext i8 %14 to i32, !dbg !18102
  %and = and i32 %conv8, 1, !dbg !18106
  %tobool9 = icmp ne i32 %and, 0, !dbg !18106
  br i1 %tobool9, label %if.then17, label %lor.lhs.false, !dbg !18107

lor.lhs.false:                                    ; preds = %if.then7
  %15 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18108
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %15, i32 0, i32 8, !dbg !18109
  %16 = load i8, i8* %f2, align 4, !dbg !18109
  %conv10 = zext i8 %16 to i32, !dbg !18108
  %and11 = and i32 %conv10, 1, !dbg !18110
  %tobool12 = icmp ne i32 %and11, 0, !dbg !18110
  br i1 %tobool12, label %if.then17, label %lor.lhs.false13, !dbg !18111

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %17 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18112
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %17, i32 0, i32 9, !dbg !18113
  %18 = load i8, i8* %f3, align 1, !dbg !18113
  %conv14 = zext i8 %18 to i32, !dbg !18112
  %and15 = and i32 %conv14, 1, !dbg !18114
  %tobool16 = icmp ne i32 %and15, 0, !dbg !18114
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !18115

if.then17:                                        ; preds = %lor.lhs.false13, %lor.lhs.false, %if.then7
  store i8 1, i8* %retval, align 1, !dbg !18116
  br label %return, !dbg !18116

if.end:                                           ; preds = %lor.lhs.false13
  br label %if.end18, !dbg !18118

if.end18:                                         ; preds = %if.end, %while.body
  %19 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18119
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %19, i32 1, !dbg !18119
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !18119
  br label %while.cond, !dbg !18094, !llvm.loop !18120

while.end:                                        ; preds = %while.cond
  br label %if.end37, !dbg !18122

if.else:                                          ; preds = %for.body
  %20 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18123
  %pntsu19 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %20, i32 0, i32 6, !dbg !18125
  %21 = load i32, i32* %pntsu19, align 8, !dbg !18125
  %22 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18126
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %22, i32 0, i32 7, !dbg !18127
  %23 = load i32, i32* %pntsv, align 4, !dbg !18127
  %mul = mul nsw i32 %21, %23, !dbg !18128
  store i32 %mul, i32* %a, align 4, !dbg !18129
  %24 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18130
  %bp20 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %24, i32 0, i32 17, !dbg !18131
  %25 = load %struct.BPoint*, %struct.BPoint** %bp20, align 8, !dbg !18131
  store %struct.BPoint* %25, %struct.BPoint** %bp, align 8, !dbg !18132
  br label %while.cond21, !dbg !18133

while.cond21:                                     ; preds = %if.end34, %if.else
  %26 = load i32, i32* %a, align 4, !dbg !18134
  %dec22 = add nsw i32 %26, -1, !dbg !18134
  store i32 %dec22, i32* %a, align 4, !dbg !18134
  %tobool23 = icmp ne i32 %26, 0, !dbg !18133
  br i1 %tobool23, label %while.body24, label %while.end36, !dbg !18133

while.body24:                                     ; preds = %while.cond21
  %27 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18135
  %hide25 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %27, i32 0, i32 4, !dbg !18138
  %28 = load i16, i16* %hide25, align 2, !dbg !18138
  %conv26 = sext i16 %28 to i32, !dbg !18135
  %cmp27 = icmp eq i32 %conv26, 0, !dbg !18139
  br i1 %cmp27, label %land.lhs.true, label %if.end34, !dbg !18140

land.lhs.true:                                    ; preds = %while.body24
  %29 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18141
  %f129 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %29, i32 0, i32 3, !dbg !18142
  %30 = load i16, i16* %f129, align 4, !dbg !18142
  %conv30 = sext i16 %30 to i32, !dbg !18141
  %and31 = and i32 %conv30, 1, !dbg !18143
  %tobool32 = icmp ne i32 %and31, 0, !dbg !18143
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !18144

if.then33:                                        ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !18145
  br label %return, !dbg !18145

if.end34:                                         ; preds = %land.lhs.true, %while.body24
  %31 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18146
  %incdec.ptr35 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %31, i32 1, !dbg !18146
  store %struct.BPoint* %incdec.ptr35, %struct.BPoint** %bp, align 8, !dbg !18146
  br label %while.cond21, !dbg !18133, !llvm.loop !18147

while.end36:                                      ; preds = %while.cond21
  br label %if.end37

if.end37:                                         ; preds = %while.end36, %while.end
  br label %for.inc, !dbg !18149

for.inc:                                          ; preds = %if.end37
  %32 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18150
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %32, i32 0, i32 0, !dbg !18151
  %33 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !18151
  store %struct.Nurb* %33, %struct.Nurb** %nu, align 8, !dbg !18152
  br label %for.cond, !dbg !18153, !llvm.loop !18154

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !18156
  br label %return, !dbg !18156

return:                                           ; preds = %for.end, %if.then33, %if.then17
  %34 = load i8, i8* %retval, align 1, !dbg !18157
  ret i8 %34, !dbg !18157
}

declare dso_local i32 @RNA_boolean_get(%struct.PointerRNA*, i8*) #2

declare dso_local i32 @RNA_int_get(%struct.PointerRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @subdividenurb(%struct.Object* %obedit, i32 %number_cuts) #0 !dbg !18158 {
entry:
  %obedit.addr = alloca %struct.Object*, align 8
  %number_cuts.addr = alloca i32, align 4
  %cu = alloca %struct.Curve*, align 8
  %editnurb = alloca %struct.EditNurb*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %beztnew = alloca %struct.BezTriple*, align 8
  %beztn = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %prevbp = alloca %struct.BPoint*, align 8
  %bpnew = alloca %struct.BPoint*, align 8
  %bpn = alloca %struct.BPoint*, align 8
  %vec = alloca [15 x float], align 16
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %sel = alloca i32, align 4
  %amount = alloca i32, align 4
  %usel = alloca i32*, align 8
  %vsel = alloca i32*, align 8
  %i = alloca i32, align 4
  %factor = alloca float, align 4
  %nextbezt = alloca %struct.BezTriple*, align 8
  %prevvec = alloca [3 x [3 x float]], align 16
  %nextbp = alloca %struct.BPoint*, align 8
  %countu = alloca i32, align 4
  %tot = alloca i32, align 4
  %tmp = alloca %struct.BPoint*, align 8
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !18161, metadata !DIExpression()), !dbg !18162
  store i32 %number_cuts, i32* %number_cuts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %number_cuts.addr, metadata !18163, metadata !DIExpression()), !dbg !18164
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !18165, metadata !DIExpression()), !dbg !18166
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !18167
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !18168
  %1 = load i8*, i8** %data, align 8, !dbg !18168
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !18167
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !18166
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb, metadata !18169, metadata !DIExpression()), !dbg !18170
  %3 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !18171
  %editnurb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 4, !dbg !18172
  %4 = load %struct.EditNurb*, %struct.EditNurb** %editnurb1, align 8, !dbg !18172
  store %struct.EditNurb* %4, %struct.EditNurb** %editnurb, align 8, !dbg !18170
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !18173, metadata !DIExpression()), !dbg !18174
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !18175, metadata !DIExpression()), !dbg !18176
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %beztnew, metadata !18177, metadata !DIExpression()), !dbg !18178
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %beztn, metadata !18179, metadata !DIExpression()), !dbg !18180
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !18181, metadata !DIExpression()), !dbg !18182
  call void @llvm.dbg.declare(metadata %struct.BPoint** %prevbp, metadata !18183, metadata !DIExpression()), !dbg !18184
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bpnew, metadata !18185, metadata !DIExpression()), !dbg !18186
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bpn, metadata !18187, metadata !DIExpression()), !dbg !18188
  call void @llvm.dbg.declare(metadata [15 x float]* %vec, metadata !18189, metadata !DIExpression()), !dbg !18193
  call void @llvm.dbg.declare(metadata i32* %a, metadata !18194, metadata !DIExpression()), !dbg !18195
  call void @llvm.dbg.declare(metadata i32* %b, metadata !18196, metadata !DIExpression()), !dbg !18197
  call void @llvm.dbg.declare(metadata i32* %sel, metadata !18198, metadata !DIExpression()), !dbg !18199
  call void @llvm.dbg.declare(metadata i32* %amount, metadata !18200, metadata !DIExpression()), !dbg !18201
  call void @llvm.dbg.declare(metadata i32** %usel, metadata !18202, metadata !DIExpression()), !dbg !18203
  call void @llvm.dbg.declare(metadata i32** %vsel, metadata !18204, metadata !DIExpression()), !dbg !18205
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18206, metadata !DIExpression()), !dbg !18207
  call void @llvm.dbg.declare(metadata float* %factor, metadata !18208, metadata !DIExpression()), !dbg !18209
  %5 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !18210
  %nurbs = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %5, i32 0, i32 0, !dbg !18212
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurbs, i32 0, i32 0, !dbg !18213
  %6 = load i8*, i8** %first, align 8, !dbg !18213
  %7 = bitcast i8* %6 to %struct.Nurb*, !dbg !18210
  store %struct.Nurb* %7, %struct.Nurb** %nu, align 8, !dbg !18214
  br label %for.cond, !dbg !18215

for.cond:                                         ; preds = %for.inc715, %entry
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18216
  %tobool = icmp ne %struct.Nurb* %8, null, !dbg !18218
  br i1 %tobool, label %for.body, label %for.end716, !dbg !18218

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %amount, align 4, !dbg !18219
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18221
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 2, !dbg !18223
  %10 = load i16, i16* %type, align 8, !dbg !18223
  %conv = sext i16 %10 to i32, !dbg !18221
  %cmp = icmp eq i32 %conv, 1, !dbg !18224
  br i1 %cmp, label %if.then, label %if.else219, !dbg !18225

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %nextbezt, metadata !18226, metadata !DIExpression()), !dbg !18228
  %11 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18229
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 6, !dbg !18230
  %12 = load i32, i32* %pntsu, align 8, !dbg !18230
  store i32 %12, i32* %a, align 4, !dbg !18231
  %13 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18232
  %bezt3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 18, !dbg !18233
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt3, align 8, !dbg !18233
  store %struct.BezTriple* %14, %struct.BezTriple** %bezt, align 8, !dbg !18234
  br label %while.cond, !dbg !18235

while.cond:                                       ; preds = %if.end49, %if.then
  %15 = load i32, i32* %a, align 4, !dbg !18236
  %dec = add nsw i32 %15, -1, !dbg !18236
  store i32 %dec, i32* %a, align 4, !dbg !18236
  %tobool4 = icmp ne i32 %15, 0, !dbg !18235
  br i1 %tobool4, label %while.body, label %while.end, !dbg !18235

while.body:                                       ; preds = %while.cond
  %16 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18237
  %17 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18239
  %call = call %struct.BezTriple* @BKE_nurb_bezt_get_next(%struct.Nurb* %16, %struct.BezTriple* %17), !dbg !18240
  store %struct.BezTriple* %call, %struct.BezTriple** %nextbezt, align 8, !dbg !18241
  %18 = load %struct.BezTriple*, %struct.BezTriple** %nextbezt, align 8, !dbg !18242
  %cmp5 = icmp eq %struct.BezTriple* %18, null, !dbg !18244
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !18245

if.then7:                                         ; preds = %while.body
  br label %while.end, !dbg !18246

if.end:                                           ; preds = %while.body
  %19 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !18248
  %drawflag = getelementptr inbounds %struct.Curve, %struct.Curve* %19, i32 0, i32 16, !dbg !18248
  %20 = load i16, i16* %drawflag, align 8, !dbg !18248
  %conv8 = sext i16 %20 to i32, !dbg !18248
  %and = and i32 %conv8, 1, !dbg !18248
  %tobool9 = icmp ne i32 %and, 0, !dbg !18248
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !18250

cond.true:                                        ; preds = %if.end
  %21 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18248
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %21, i32 0, i32 8, !dbg !18248
  %22 = load i8, i8* %f2, align 4, !dbg !18248
  %conv10 = zext i8 %22 to i32, !dbg !18248
  %and11 = and i32 %conv10, 1, !dbg !18248
  %tobool12 = icmp ne i32 %and11, 0, !dbg !18248
  br i1 %tobool12, label %land.lhs.true, label %if.end49, !dbg !18248

cond.false:                                       ; preds = %if.end
  %23 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18248
  %f213 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %23, i32 0, i32 8, !dbg !18248
  %24 = load i8, i8* %f213, align 4, !dbg !18248
  %conv14 = zext i8 %24 to i32, !dbg !18248
  %and15 = and i32 %conv14, 1, !dbg !18248
  %tobool16 = icmp ne i32 %and15, 0, !dbg !18248
  br i1 %tobool16, label %land.lhs.true, label %lor.lhs.false, !dbg !18248

lor.lhs.false:                                    ; preds = %cond.false
  %25 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18248
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %25, i32 0, i32 7, !dbg !18248
  %26 = load i8, i8* %f1, align 1, !dbg !18248
  %conv17 = zext i8 %26 to i32, !dbg !18248
  %and18 = and i32 %conv17, 1, !dbg !18248
  %tobool19 = icmp ne i32 %and18, 0, !dbg !18248
  br i1 %tobool19, label %land.lhs.true, label %lor.lhs.false20, !dbg !18248

lor.lhs.false20:                                  ; preds = %lor.lhs.false
  %27 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18248
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %27, i32 0, i32 9, !dbg !18248
  %28 = load i8, i8* %f3, align 1, !dbg !18248
  %conv21 = zext i8 %28 to i32, !dbg !18248
  %and22 = and i32 %conv21, 1, !dbg !18248
  %tobool23 = icmp ne i32 %and22, 0, !dbg !18248
  br i1 %tobool23, label %land.lhs.true, label %if.end49, !dbg !18250

land.lhs.true:                                    ; preds = %lor.lhs.false20, %lor.lhs.false, %cond.false, %cond.true
  %29 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !18251
  %drawflag24 = getelementptr inbounds %struct.Curve, %struct.Curve* %29, i32 0, i32 16, !dbg !18251
  %30 = load i16, i16* %drawflag24, align 8, !dbg !18251
  %conv25 = sext i16 %30 to i32, !dbg !18251
  %and26 = and i32 %conv25, 1, !dbg !18251
  %tobool27 = icmp ne i32 %and26, 0, !dbg !18251
  br i1 %tobool27, label %cond.true28, label %cond.false33, !dbg !18252

cond.true28:                                      ; preds = %land.lhs.true
  %31 = load %struct.BezTriple*, %struct.BezTriple** %nextbezt, align 8, !dbg !18251
  %f229 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %31, i32 0, i32 8, !dbg !18251
  %32 = load i8, i8* %f229, align 4, !dbg !18251
  %conv30 = zext i8 %32 to i32, !dbg !18251
  %and31 = and i32 %conv30, 1, !dbg !18251
  %tobool32 = icmp ne i32 %and31, 0, !dbg !18251
  br i1 %tobool32, label %if.then48, label %if.end49, !dbg !18251

cond.false33:                                     ; preds = %land.lhs.true
  %33 = load %struct.BezTriple*, %struct.BezTriple** %nextbezt, align 8, !dbg !18251
  %f234 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %33, i32 0, i32 8, !dbg !18251
  %34 = load i8, i8* %f234, align 4, !dbg !18251
  %conv35 = zext i8 %34 to i32, !dbg !18251
  %and36 = and i32 %conv35, 1, !dbg !18251
  %tobool37 = icmp ne i32 %and36, 0, !dbg !18251
  br i1 %tobool37, label %if.then48, label %lor.lhs.false38, !dbg !18251

lor.lhs.false38:                                  ; preds = %cond.false33
  %35 = load %struct.BezTriple*, %struct.BezTriple** %nextbezt, align 8, !dbg !18251
  %f139 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %35, i32 0, i32 7, !dbg !18251
  %36 = load i8, i8* %f139, align 1, !dbg !18251
  %conv40 = zext i8 %36 to i32, !dbg !18251
  %and41 = and i32 %conv40, 1, !dbg !18251
  %tobool42 = icmp ne i32 %and41, 0, !dbg !18251
  br i1 %tobool42, label %if.then48, label %lor.lhs.false43, !dbg !18251

lor.lhs.false43:                                  ; preds = %lor.lhs.false38
  %37 = load %struct.BezTriple*, %struct.BezTriple** %nextbezt, align 8, !dbg !18251
  %f344 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %37, i32 0, i32 9, !dbg !18251
  %38 = load i8, i8* %f344, align 1, !dbg !18251
  %conv45 = zext i8 %38 to i32, !dbg !18251
  %and46 = and i32 %conv45, 1, !dbg !18251
  %tobool47 = icmp ne i32 %and46, 0, !dbg !18251
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !18252

if.then48:                                        ; preds = %lor.lhs.false43, %lor.lhs.false38, %cond.false33, %cond.true28
  %39 = load i32, i32* %number_cuts.addr, align 4, !dbg !18253
  %40 = load i32, i32* %amount, align 4, !dbg !18255
  %add = add nsw i32 %40, %39, !dbg !18255
  store i32 %add, i32* %amount, align 4, !dbg !18255
  br label %if.end49, !dbg !18256

if.end49:                                         ; preds = %if.then48, %lor.lhs.false43, %cond.true28, %lor.lhs.false20, %cond.true
  %41 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18257
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %41, i32 1, !dbg !18257
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !18257
  br label %while.cond, !dbg !18235, !llvm.loop !18258

while.end:                                        ; preds = %if.then7, %while.cond
  %42 = load i32, i32* %amount, align 4, !dbg !18260
  %tobool50 = icmp ne i32 %42, 0, !dbg !18260
  br i1 %tobool50, label %if.then51, label %if.end218, !dbg !18262

if.then51:                                        ; preds = %while.end
  %43 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !18263
  %44 = load i32, i32* %amount, align 4, !dbg !18265
  %45 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18266
  %pntsu52 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %45, i32 0, i32 6, !dbg !18267
  %46 = load i32, i32* %pntsu52, align 8, !dbg !18267
  %add53 = add nsw i32 %44, %46, !dbg !18268
  %conv54 = sext i32 %add53 to i64, !dbg !18269
  %mul = mul i64 %conv54, 72, !dbg !18270
  %call55 = call i8* %43(i64 %mul, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i64 0, i64 0)), !dbg !18263
  %47 = bitcast i8* %call55 to %struct.BezTriple*, !dbg !18271
  store %struct.BezTriple* %47, %struct.BezTriple** %beztnew, align 8, !dbg !18272
  %48 = load %struct.BezTriple*, %struct.BezTriple** %beztnew, align 8, !dbg !18273
  store %struct.BezTriple* %48, %struct.BezTriple** %beztn, align 8, !dbg !18274
  %49 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18275
  %pntsu56 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %49, i32 0, i32 6, !dbg !18276
  %50 = load i32, i32* %pntsu56, align 8, !dbg !18276
  store i32 %50, i32* %a, align 4, !dbg !18277
  %51 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18278
  %bezt57 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %51, i32 0, i32 18, !dbg !18279
  %52 = load %struct.BezTriple*, %struct.BezTriple** %bezt57, align 8, !dbg !18279
  store %struct.BezTriple* %52, %struct.BezTriple** %bezt, align 8, !dbg !18280
  br label %while.cond58, !dbg !18281

while.cond58:                                     ; preds = %if.end211, %if.then51
  %53 = load i32, i32* %a, align 4, !dbg !18282
  %dec59 = add nsw i32 %53, -1, !dbg !18282
  store i32 %dec59, i32* %a, align 4, !dbg !18282
  %tobool60 = icmp ne i32 %53, 0, !dbg !18281
  br i1 %tobool60, label %while.body61, label %while.end213, !dbg !18281

while.body61:                                     ; preds = %while.cond58
  %54 = load %struct.BezTriple*, %struct.BezTriple** %beztn, align 8, !dbg !18283
  %55 = bitcast %struct.BezTriple* %54 to i8*, !dbg !18285
  %56 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18286
  %57 = bitcast %struct.BezTriple* %56 to i8*, !dbg !18285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %57, i64 72, i1 false), !dbg !18285
  %58 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !18287
  %59 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18288
  %60 = load %struct.BezTriple*, %struct.BezTriple** %beztn, align 8, !dbg !18289
  call void @keyIndex_updateBezt(%struct.EditNurb* %58, %struct.BezTriple* %59, %struct.BezTriple* %60, i32 1), !dbg !18290
  %61 = load %struct.BezTriple*, %struct.BezTriple** %beztn, align 8, !dbg !18291
  %incdec.ptr62 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %61, i32 1, !dbg !18291
  store %struct.BezTriple* %incdec.ptr62, %struct.BezTriple** %beztn, align 8, !dbg !18291
  %62 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18292
  %63 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18293
  %call63 = call %struct.BezTriple* @BKE_nurb_bezt_get_next(%struct.Nurb* %62, %struct.BezTriple* %63), !dbg !18294
  store %struct.BezTriple* %call63, %struct.BezTriple** %nextbezt, align 8, !dbg !18295
  %64 = load %struct.BezTriple*, %struct.BezTriple** %nextbezt, align 8, !dbg !18296
  %cmp64 = icmp eq %struct.BezTriple* %64, null, !dbg !18298
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !18299

if.then66:                                        ; preds = %while.body61
  br label %while.end213, !dbg !18300

if.end67:                                         ; preds = %while.body61
  %65 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !18302
  %drawflag68 = getelementptr inbounds %struct.Curve, %struct.Curve* %65, i32 0, i32 16, !dbg !18302
  %66 = load i16, i16* %drawflag68, align 8, !dbg !18302
  %conv69 = sext i16 %66 to i32, !dbg !18302
  %and70 = and i32 %conv69, 1, !dbg !18302
  %tobool71 = icmp ne i32 %and70, 0, !dbg !18302
  br i1 %tobool71, label %cond.true72, label %cond.false77, !dbg !18304

cond.true72:                                      ; preds = %if.end67
  %67 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18302
  %f273 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %67, i32 0, i32 8, !dbg !18302
  %68 = load i8, i8* %f273, align 4, !dbg !18302
  %conv74 = zext i8 %68 to i32, !dbg !18302
  %and75 = and i32 %conv74, 1, !dbg !18302
  %tobool76 = icmp ne i32 %and75, 0, !dbg !18302
  br i1 %tobool76, label %land.lhs.true92, label %if.end211, !dbg !18302

cond.false77:                                     ; preds = %if.end67
  %69 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18302
  %f278 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %69, i32 0, i32 8, !dbg !18302
  %70 = load i8, i8* %f278, align 4, !dbg !18302
  %conv79 = zext i8 %70 to i32, !dbg !18302
  %and80 = and i32 %conv79, 1, !dbg !18302
  %tobool81 = icmp ne i32 %and80, 0, !dbg !18302
  br i1 %tobool81, label %land.lhs.true92, label %lor.lhs.false82, !dbg !18302

lor.lhs.false82:                                  ; preds = %cond.false77
  %71 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18302
  %f183 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %71, i32 0, i32 7, !dbg !18302
  %72 = load i8, i8* %f183, align 1, !dbg !18302
  %conv84 = zext i8 %72 to i32, !dbg !18302
  %and85 = and i32 %conv84, 1, !dbg !18302
  %tobool86 = icmp ne i32 %and85, 0, !dbg !18302
  br i1 %tobool86, label %land.lhs.true92, label %lor.lhs.false87, !dbg !18302

lor.lhs.false87:                                  ; preds = %lor.lhs.false82
  %73 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18302
  %f388 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %73, i32 0, i32 9, !dbg !18302
  %74 = load i8, i8* %f388, align 1, !dbg !18302
  %conv89 = zext i8 %74 to i32, !dbg !18302
  %and90 = and i32 %conv89, 1, !dbg !18302
  %tobool91 = icmp ne i32 %and90, 0, !dbg !18302
  br i1 %tobool91, label %land.lhs.true92, label %if.end211, !dbg !18304

land.lhs.true92:                                  ; preds = %lor.lhs.false87, %lor.lhs.false82, %cond.false77, %cond.true72
  %75 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !18305
  %drawflag93 = getelementptr inbounds %struct.Curve, %struct.Curve* %75, i32 0, i32 16, !dbg !18305
  %76 = load i16, i16* %drawflag93, align 8, !dbg !18305
  %conv94 = sext i16 %76 to i32, !dbg !18305
  %and95 = and i32 %conv94, 1, !dbg !18305
  %tobool96 = icmp ne i32 %and95, 0, !dbg !18305
  br i1 %tobool96, label %cond.true97, label %cond.false102, !dbg !18306

cond.true97:                                      ; preds = %land.lhs.true92
  %77 = load %struct.BezTriple*, %struct.BezTriple** %nextbezt, align 8, !dbg !18305
  %f298 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %77, i32 0, i32 8, !dbg !18305
  %78 = load i8, i8* %f298, align 4, !dbg !18305
  %conv99 = zext i8 %78 to i32, !dbg !18305
  %and100 = and i32 %conv99, 1, !dbg !18305
  %tobool101 = icmp ne i32 %and100, 0, !dbg !18305
  br i1 %tobool101, label %if.then117, label %if.end211, !dbg !18305

cond.false102:                                    ; preds = %land.lhs.true92
  %79 = load %struct.BezTriple*, %struct.BezTriple** %nextbezt, align 8, !dbg !18305
  %f2103 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %79, i32 0, i32 8, !dbg !18305
  %80 = load i8, i8* %f2103, align 4, !dbg !18305
  %conv104 = zext i8 %80 to i32, !dbg !18305
  %and105 = and i32 %conv104, 1, !dbg !18305
  %tobool106 = icmp ne i32 %and105, 0, !dbg !18305
  br i1 %tobool106, label %if.then117, label %lor.lhs.false107, !dbg !18305

lor.lhs.false107:                                 ; preds = %cond.false102
  %81 = load %struct.BezTriple*, %struct.BezTriple** %nextbezt, align 8, !dbg !18305
  %f1108 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %81, i32 0, i32 7, !dbg !18305
  %82 = load i8, i8* %f1108, align 1, !dbg !18305
  %conv109 = zext i8 %82 to i32, !dbg !18305
  %and110 = and i32 %conv109, 1, !dbg !18305
  %tobool111 = icmp ne i32 %and110, 0, !dbg !18305
  br i1 %tobool111, label %if.then117, label %lor.lhs.false112, !dbg !18305

lor.lhs.false112:                                 ; preds = %lor.lhs.false107
  %83 = load %struct.BezTriple*, %struct.BezTriple** %nextbezt, align 8, !dbg !18305
  %f3113 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %83, i32 0, i32 9, !dbg !18305
  %84 = load i8, i8* %f3113, align 1, !dbg !18305
  %conv114 = zext i8 %84 to i32, !dbg !18305
  %and115 = and i32 %conv114, 1, !dbg !18305
  %tobool116 = icmp ne i32 %and115, 0, !dbg !18305
  br i1 %tobool116, label %if.then117, label %if.end211, !dbg !18306

if.then117:                                       ; preds = %lor.lhs.false112, %lor.lhs.false107, %cond.false102, %cond.true97
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %prevvec, metadata !18307, metadata !DIExpression()), !dbg !18309
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %prevvec, i64 0, i64 0, !dbg !18310
  %85 = bitcast [3 x float]* %arraydecay to i8*, !dbg !18310
  %86 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18311
  %vec118 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %86, i32 0, i32 0, !dbg !18312
  %arraydecay119 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec118, i64 0, i64 0, !dbg !18310
  %87 = bitcast [3 x float]* %arraydecay119 to i8*, !dbg !18310
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %85, i8* align 4 %87, i64 36, i1 false), !dbg !18310
  store i32 0, i32* %i, align 4, !dbg !18313
  br label %for.cond120, !dbg !18315

for.cond120:                                      ; preds = %for.inc, %if.then117
  %88 = load i32, i32* %i, align 4, !dbg !18316
  %89 = load i32, i32* %number_cuts.addr, align 4, !dbg !18318
  %cmp121 = icmp slt i32 %88, %89, !dbg !18319
  br i1 %cmp121, label %for.body123, label %for.end, !dbg !18320

for.body123:                                      ; preds = %for.cond120
  %90 = load i32, i32* %number_cuts.addr, align 4, !dbg !18321
  %add124 = add nsw i32 %90, 1, !dbg !18323
  %91 = load i32, i32* %i, align 4, !dbg !18324
  %sub = sub nsw i32 %add124, %91, !dbg !18325
  %conv125 = sitofp i32 %sub to float, !dbg !18326
  %div = fdiv float 1.000000e+00, %conv125, !dbg !18327
  store float %div, float* %factor, align 4, !dbg !18328
  %92 = load %struct.BezTriple*, %struct.BezTriple** %beztn, align 8, !dbg !18329
  %93 = bitcast %struct.BezTriple* %92 to i8*, !dbg !18330
  %94 = load %struct.BezTriple*, %struct.BezTriple** %nextbezt, align 8, !dbg !18331
  %95 = bitcast %struct.BezTriple* %94 to i8*, !dbg !18330
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %95, i64 72, i1 false), !dbg !18330
  %arraydecay126 = getelementptr inbounds [15 x float], [15 x float]* %vec, i64 0, i64 0, !dbg !18332
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %prevvec, i64 0, i64 1, !dbg !18333
  %arraydecay127 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !18333
  %arrayidx128 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %prevvec, i64 0, i64 2, !dbg !18334
  %arraydecay129 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx128, i64 0, i64 0, !dbg !18334
  %96 = load float, float* %factor, align 4, !dbg !18335
  call void @interp_v3_v3v3(float* %arraydecay126, float* %arraydecay127, float* %arraydecay129, float %96), !dbg !18336
  %arraydecay130 = getelementptr inbounds [15 x float], [15 x float]* %vec, i64 0, i64 0, !dbg !18337
  %add.ptr = getelementptr inbounds float, float* %arraydecay130, i64 3, !dbg !18338
  %arrayidx131 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %prevvec, i64 0, i64 2, !dbg !18339
  %arraydecay132 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx131, i64 0, i64 0, !dbg !18339
  %97 = load %struct.BezTriple*, %struct.BezTriple** %nextbezt, align 8, !dbg !18340
  %vec133 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %97, i32 0, i32 0, !dbg !18341
  %arrayidx134 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec133, i64 0, i64 0, !dbg !18340
  %arraydecay135 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx134, i64 0, i64 0, !dbg !18340
  %98 = load float, float* %factor, align 4, !dbg !18342
  call void @interp_v3_v3v3(float* %add.ptr, float* %arraydecay132, float* %arraydecay135, float %98), !dbg !18343
  %arraydecay136 = getelementptr inbounds [15 x float], [15 x float]* %vec, i64 0, i64 0, !dbg !18344
  %add.ptr137 = getelementptr inbounds float, float* %arraydecay136, i64 6, !dbg !18345
  %99 = load %struct.BezTriple*, %struct.BezTriple** %nextbezt, align 8, !dbg !18346
  %vec138 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %99, i32 0, i32 0, !dbg !18347
  %arrayidx139 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec138, i64 0, i64 0, !dbg !18346
  %arraydecay140 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx139, i64 0, i64 0, !dbg !18346
  %100 = load %struct.BezTriple*, %struct.BezTriple** %nextbezt, align 8, !dbg !18348
  %vec141 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %100, i32 0, i32 0, !dbg !18349
  %arrayidx142 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec141, i64 0, i64 1, !dbg !18348
  %arraydecay143 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx142, i64 0, i64 0, !dbg !18348
  %101 = load float, float* %factor, align 4, !dbg !18350
  call void @interp_v3_v3v3(float* %add.ptr137, float* %arraydecay140, float* %arraydecay143, float %101), !dbg !18351
  %arraydecay144 = getelementptr inbounds [15 x float], [15 x float]* %vec, i64 0, i64 0, !dbg !18352
  %add.ptr145 = getelementptr inbounds float, float* %arraydecay144, i64 9, !dbg !18353
  %arraydecay146 = getelementptr inbounds [15 x float], [15 x float]* %vec, i64 0, i64 0, !dbg !18354
  %arraydecay147 = getelementptr inbounds [15 x float], [15 x float]* %vec, i64 0, i64 0, !dbg !18355
  %add.ptr148 = getelementptr inbounds float, float* %arraydecay147, i64 3, !dbg !18356
  %102 = load float, float* %factor, align 4, !dbg !18357
  call void @interp_v3_v3v3(float* %add.ptr145, float* %arraydecay146, float* %add.ptr148, float %102), !dbg !18358
  %arraydecay149 = getelementptr inbounds [15 x float], [15 x float]* %vec, i64 0, i64 0, !dbg !18359
  %add.ptr150 = getelementptr inbounds float, float* %arraydecay149, i64 12, !dbg !18360
  %arraydecay151 = getelementptr inbounds [15 x float], [15 x float]* %vec, i64 0, i64 0, !dbg !18361
  %add.ptr152 = getelementptr inbounds float, float* %arraydecay151, i64 3, !dbg !18362
  %arraydecay153 = getelementptr inbounds [15 x float], [15 x float]* %vec, i64 0, i64 0, !dbg !18363
  %add.ptr154 = getelementptr inbounds float, float* %arraydecay153, i64 6, !dbg !18364
  %103 = load float, float* %factor, align 4, !dbg !18365
  call void @interp_v3_v3v3(float* %add.ptr150, float* %add.ptr152, float* %add.ptr154, float %103), !dbg !18366
  %104 = load %struct.BezTriple*, %struct.BezTriple** %beztn, align 8, !dbg !18367
  %add.ptr155 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %104, i64 -1, !dbg !18368
  %vec156 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %add.ptr155, i32 0, i32 0, !dbg !18369
  %arrayidx157 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec156, i64 0, i64 2, !dbg !18370
  %arraydecay158 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx157, i64 0, i64 0, !dbg !18370
  %arraydecay159 = getelementptr inbounds [15 x float], [15 x float]* %vec, i64 0, i64 0, !dbg !18371
  call void @copy_v3_v3(float* %arraydecay158, float* %arraydecay159), !dbg !18372
  %105 = load %struct.BezTriple*, %struct.BezTriple** %beztn, align 8, !dbg !18373
  %vec160 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %105, i32 0, i32 0, !dbg !18374
  %arrayidx161 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec160, i64 0, i64 0, !dbg !18373
  %arraydecay162 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx161, i64 0, i64 0, !dbg !18373
  %arraydecay163 = getelementptr inbounds [15 x float], [15 x float]* %vec, i64 0, i64 0, !dbg !18375
  %add.ptr164 = getelementptr inbounds float, float* %arraydecay163, i64 9, !dbg !18376
  call void @copy_v3_v3(float* %arraydecay162, float* %add.ptr164), !dbg !18377
  %106 = load %struct.BezTriple*, %struct.BezTriple** %beztn, align 8, !dbg !18378
  %vec165 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %106, i32 0, i32 0, !dbg !18379
  %arrayidx166 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec165, i64 0, i64 1, !dbg !18378
  %arraydecay167 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx166, i64 0, i64 0, !dbg !18378
  %arraydecay168 = getelementptr inbounds [15 x float], [15 x float]* %vec, i64 0, i64 0, !dbg !18380
  %add.ptr169 = getelementptr inbounds float, float* %arraydecay168, i64 9, !dbg !18381
  %arraydecay170 = getelementptr inbounds [15 x float], [15 x float]* %vec, i64 0, i64 0, !dbg !18382
  %add.ptr171 = getelementptr inbounds float, float* %arraydecay170, i64 12, !dbg !18383
  %107 = load float, float* %factor, align 4, !dbg !18384
  call void @interp_v3_v3v3(float* %arraydecay167, float* %add.ptr169, float* %add.ptr171, float %107), !dbg !18385
  %108 = load %struct.BezTriple*, %struct.BezTriple** %beztn, align 8, !dbg !18386
  %vec172 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %108, i32 0, i32 0, !dbg !18387
  %arrayidx173 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec172, i64 0, i64 2, !dbg !18386
  %arraydecay174 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx173, i64 0, i64 0, !dbg !18386
  %arraydecay175 = getelementptr inbounds [15 x float], [15 x float]* %vec, i64 0, i64 0, !dbg !18388
  %add.ptr176 = getelementptr inbounds float, float* %arraydecay175, i64 12, !dbg !18389
  call void @copy_v3_v3(float* %arraydecay174, float* %add.ptr176), !dbg !18390
  %109 = load i32, i32* %a, align 4, !dbg !18391
  %cmp177 = icmp eq i32 %109, 0, !dbg !18393
  br i1 %cmp177, label %land.lhs.true179, label %if.else, !dbg !18394

land.lhs.true179:                                 ; preds = %for.body123
  %110 = load i32, i32* %i, align 4, !dbg !18395
  %111 = load i32, i32* %number_cuts.addr, align 4, !dbg !18396
  %sub180 = sub nsw i32 %111, 1, !dbg !18397
  %cmp181 = icmp eq i32 %110, %sub180, !dbg !18398
  br i1 %cmp181, label %land.lhs.true183, label %if.else, !dbg !18399

land.lhs.true183:                                 ; preds = %land.lhs.true179
  %112 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18400
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %112, i32 0, i32 13, !dbg !18401
  %113 = load i16, i16* %flagu, align 4, !dbg !18401
  %conv184 = sext i16 %113 to i32, !dbg !18400
  %and185 = and i32 %conv184, 1, !dbg !18402
  %tobool186 = icmp ne i32 %and185, 0, !dbg !18402
  br i1 %tobool186, label %if.then187, label %if.else, !dbg !18403

if.then187:                                       ; preds = %land.lhs.true183
  %114 = load %struct.BezTriple*, %struct.BezTriple** %beztnew, align 8, !dbg !18404
  %vec188 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %114, i32 0, i32 0, !dbg !18406
  %arrayidx189 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec188, i64 0, i64 0, !dbg !18404
  %arraydecay190 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx189, i64 0, i64 0, !dbg !18404
  %arraydecay191 = getelementptr inbounds [15 x float], [15 x float]* %vec, i64 0, i64 0, !dbg !18407
  %add.ptr192 = getelementptr inbounds float, float* %arraydecay191, i64 6, !dbg !18408
  call void @copy_v3_v3(float* %arraydecay190, float* %add.ptr192), !dbg !18409
  br label %if.end198, !dbg !18410

if.else:                                          ; preds = %land.lhs.true183, %land.lhs.true179, %for.body123
  %115 = load %struct.BezTriple*, %struct.BezTriple** %nextbezt, align 8, !dbg !18411
  %vec193 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %115, i32 0, i32 0, !dbg !18413
  %arrayidx194 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec193, i64 0, i64 0, !dbg !18411
  %arraydecay195 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx194, i64 0, i64 0, !dbg !18411
  %arraydecay196 = getelementptr inbounds [15 x float], [15 x float]* %vec, i64 0, i64 0, !dbg !18414
  %add.ptr197 = getelementptr inbounds float, float* %arraydecay196, i64 6, !dbg !18415
  call void @copy_v3_v3(float* %arraydecay195, float* %add.ptr197), !dbg !18416
  br label %if.end198

if.end198:                                        ; preds = %if.else, %if.then187
  %116 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18417
  %radius = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %116, i32 0, i32 3, !dbg !18418
  %117 = load float, float* %radius, align 4, !dbg !18418
  %118 = load %struct.BezTriple*, %struct.BezTriple** %nextbezt, align 8, !dbg !18419
  %radius199 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %118, i32 0, i32 3, !dbg !18420
  %119 = load float, float* %radius199, align 4, !dbg !18420
  %add200 = fadd float %117, %119, !dbg !18421
  %div201 = fdiv float %add200, 2.000000e+00, !dbg !18422
  %120 = load %struct.BezTriple*, %struct.BezTriple** %beztn, align 8, !dbg !18423
  %radius202 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %120, i32 0, i32 3, !dbg !18424
  store float %div201, float* %radius202, align 4, !dbg !18425
  %121 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18426
  %weight = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %121, i32 0, i32 2, !dbg !18427
  %122 = load float, float* %weight, align 4, !dbg !18427
  %123 = load %struct.BezTriple*, %struct.BezTriple** %nextbezt, align 8, !dbg !18428
  %weight203 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %123, i32 0, i32 2, !dbg !18429
  %124 = load float, float* %weight203, align 4, !dbg !18429
  %add204 = fadd float %122, %124, !dbg !18430
  %div205 = fdiv float %add204, 2.000000e+00, !dbg !18431
  %125 = load %struct.BezTriple*, %struct.BezTriple** %beztn, align 8, !dbg !18432
  %weight206 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %125, i32 0, i32 2, !dbg !18433
  store float %div205, float* %weight206, align 4, !dbg !18434
  %arraydecay207 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %prevvec, i64 0, i64 0, !dbg !18435
  %126 = bitcast [3 x float]* %arraydecay207 to i8*, !dbg !18435
  %127 = load %struct.BezTriple*, %struct.BezTriple** %beztn, align 8, !dbg !18436
  %vec208 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %127, i32 0, i32 0, !dbg !18437
  %arraydecay209 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec208, i64 0, i64 0, !dbg !18435
  %128 = bitcast [3 x float]* %arraydecay209 to i8*, !dbg !18435
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %126, i8* align 4 %128, i64 36, i1 false), !dbg !18435
  %129 = load %struct.BezTriple*, %struct.BezTriple** %beztn, align 8, !dbg !18438
  %incdec.ptr210 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %129, i32 1, !dbg !18438
  store %struct.BezTriple* %incdec.ptr210, %struct.BezTriple** %beztn, align 8, !dbg !18438
  br label %for.inc, !dbg !18439

for.inc:                                          ; preds = %if.end198
  %130 = load i32, i32* %i, align 4, !dbg !18440
  %inc = add nsw i32 %130, 1, !dbg !18440
  store i32 %inc, i32* %i, align 4, !dbg !18440
  br label %for.cond120, !dbg !18441, !llvm.loop !18442

for.end:                                          ; preds = %for.cond120
  br label %if.end211, !dbg !18444

if.end211:                                        ; preds = %for.end, %lor.lhs.false112, %cond.true97, %lor.lhs.false87, %cond.true72
  %131 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !18445
  %incdec.ptr212 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %131, i32 1, !dbg !18445
  store %struct.BezTriple* %incdec.ptr212, %struct.BezTriple** %bezt, align 8, !dbg !18445
  br label %while.cond58, !dbg !18281, !llvm.loop !18446

while.end213:                                     ; preds = %if.then66, %while.cond58
  %132 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !18448
  %133 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18449
  %bezt214 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %133, i32 0, i32 18, !dbg !18450
  %134 = load %struct.BezTriple*, %struct.BezTriple** %bezt214, align 8, !dbg !18450
  %135 = bitcast %struct.BezTriple* %134 to i8*, !dbg !18449
  call void %132(i8* %135), !dbg !18448
  %136 = load %struct.BezTriple*, %struct.BezTriple** %beztnew, align 8, !dbg !18451
  %137 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18452
  %bezt215 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %137, i32 0, i32 18, !dbg !18453
  store %struct.BezTriple* %136, %struct.BezTriple** %bezt215, align 8, !dbg !18454
  %138 = load i32, i32* %amount, align 4, !dbg !18455
  %139 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18456
  %pntsu216 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %139, i32 0, i32 6, !dbg !18457
  %140 = load i32, i32* %pntsu216, align 8, !dbg !18458
  %add217 = add nsw i32 %140, %138, !dbg !18458
  store i32 %add217, i32* %pntsu216, align 8, !dbg !18458
  %141 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18459
  call void @BKE_nurb_handles_calc(%struct.Nurb* %141), !dbg !18460
  br label %if.end218, !dbg !18461

if.end218:                                        ; preds = %while.end213, %while.end
  br label %if.end714, !dbg !18462

if.else219:                                       ; preds = %for.body
  %142 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18463
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %142, i32 0, i32 7, !dbg !18465
  %143 = load i32, i32* %pntsv, align 4, !dbg !18465
  %cmp220 = icmp eq i32 %143, 1, !dbg !18466
  br i1 %cmp220, label %if.then222, label %if.else310, !dbg !18467

if.then222:                                       ; preds = %if.else219
  call void @llvm.dbg.declare(metadata %struct.BPoint** %nextbp, metadata !18468, metadata !DIExpression()), !dbg !18470
  %144 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18471
  %pntsu223 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %144, i32 0, i32 6, !dbg !18472
  %145 = load i32, i32* %pntsu223, align 8, !dbg !18472
  store i32 %145, i32* %a, align 4, !dbg !18473
  %146 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18474
  %bp224 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %146, i32 0, i32 17, !dbg !18475
  %147 = load %struct.BPoint*, %struct.BPoint** %bp224, align 8, !dbg !18475
  store %struct.BPoint* %147, %struct.BPoint** %bp, align 8, !dbg !18476
  br label %while.cond225, !dbg !18477

while.cond225:                                    ; preds = %if.end245, %if.then222
  %148 = load i32, i32* %a, align 4, !dbg !18478
  %dec226 = add nsw i32 %148, -1, !dbg !18478
  store i32 %dec226, i32* %a, align 4, !dbg !18478
  %tobool227 = icmp ne i32 %148, 0, !dbg !18477
  br i1 %tobool227, label %while.body228, label %while.end247, !dbg !18477

while.body228:                                    ; preds = %while.cond225
  %149 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18479
  %150 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18481
  %call229 = call %struct.BPoint* @BKE_nurb_bpoint_get_next(%struct.Nurb* %149, %struct.BPoint* %150), !dbg !18482
  store %struct.BPoint* %call229, %struct.BPoint** %nextbp, align 8, !dbg !18483
  %151 = load %struct.BPoint*, %struct.BPoint** %nextbp, align 8, !dbg !18484
  %cmp230 = icmp eq %struct.BPoint* %151, null, !dbg !18486
  br i1 %cmp230, label %if.then232, label %if.end233, !dbg !18487

if.then232:                                       ; preds = %while.body228
  br label %while.end247, !dbg !18488

if.end233:                                        ; preds = %while.body228
  %152 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18490
  %f1234 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %152, i32 0, i32 3, !dbg !18492
  %153 = load i16, i16* %f1234, align 4, !dbg !18492
  %conv235 = sext i16 %153 to i32, !dbg !18490
  %and236 = and i32 %conv235, 1, !dbg !18493
  %tobool237 = icmp ne i32 %and236, 0, !dbg !18493
  br i1 %tobool237, label %land.lhs.true238, label %if.end245, !dbg !18494

land.lhs.true238:                                 ; preds = %if.end233
  %154 = load %struct.BPoint*, %struct.BPoint** %nextbp, align 8, !dbg !18495
  %f1239 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %154, i32 0, i32 3, !dbg !18496
  %155 = load i16, i16* %f1239, align 4, !dbg !18496
  %conv240 = sext i16 %155 to i32, !dbg !18495
  %and241 = and i32 %conv240, 1, !dbg !18497
  %tobool242 = icmp ne i32 %and241, 0, !dbg !18497
  br i1 %tobool242, label %if.then243, label %if.end245, !dbg !18498

if.then243:                                       ; preds = %land.lhs.true238
  %156 = load i32, i32* %number_cuts.addr, align 4, !dbg !18499
  %157 = load i32, i32* %amount, align 4, !dbg !18501
  %add244 = add nsw i32 %157, %156, !dbg !18501
  store i32 %add244, i32* %amount, align 4, !dbg !18501
  br label %if.end245, !dbg !18502

if.end245:                                        ; preds = %if.then243, %land.lhs.true238, %if.end233
  %158 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18503
  %incdec.ptr246 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %158, i32 1, !dbg !18503
  store %struct.BPoint* %incdec.ptr246, %struct.BPoint** %bp, align 8, !dbg !18503
  br label %while.cond225, !dbg !18477, !llvm.loop !18504

while.end247:                                     ; preds = %if.then232, %while.cond225
  %159 = load i32, i32* %amount, align 4, !dbg !18506
  %tobool248 = icmp ne i32 %159, 0, !dbg !18506
  br i1 %tobool248, label %if.then249, label %if.end309, !dbg !18508

if.then249:                                       ; preds = %while.end247
  %160 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !18509
  %161 = load i32, i32* %amount, align 4, !dbg !18511
  %162 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18512
  %pntsu250 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %162, i32 0, i32 6, !dbg !18513
  %163 = load i32, i32* %pntsu250, align 8, !dbg !18513
  %add251 = add nsw i32 %161, %163, !dbg !18514
  %conv252 = sext i32 %add251 to i64, !dbg !18515
  %mul253 = mul i64 %conv252, 36, !dbg !18516
  %call254 = call i8* %160(i64 %mul253, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.200, i64 0, i64 0)), !dbg !18509
  %164 = bitcast i8* %call254 to %struct.BPoint*, !dbg !18517
  store %struct.BPoint* %164, %struct.BPoint** %bpnew, align 8, !dbg !18518
  %165 = load %struct.BPoint*, %struct.BPoint** %bpnew, align 8, !dbg !18519
  store %struct.BPoint* %165, %struct.BPoint** %bpn, align 8, !dbg !18520
  %166 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18521
  %pntsu255 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %166, i32 0, i32 6, !dbg !18522
  %167 = load i32, i32* %pntsu255, align 8, !dbg !18522
  store i32 %167, i32* %a, align 4, !dbg !18523
  %168 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18524
  %bp256 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %168, i32 0, i32 17, !dbg !18525
  %169 = load %struct.BPoint*, %struct.BPoint** %bp256, align 8, !dbg !18525
  store %struct.BPoint* %169, %struct.BPoint** %bp, align 8, !dbg !18526
  br label %while.cond257, !dbg !18527

while.cond257:                                    ; preds = %if.end296, %if.then249
  %170 = load i32, i32* %a, align 4, !dbg !18528
  %dec258 = add nsw i32 %170, -1, !dbg !18528
  store i32 %dec258, i32* %a, align 4, !dbg !18528
  %tobool259 = icmp ne i32 %170, 0, !dbg !18527
  br i1 %tobool259, label %while.body260, label %while.end298, !dbg !18527

while.body260:                                    ; preds = %while.cond257
  %171 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !18529
  %172 = bitcast %struct.BPoint* %171 to i8*, !dbg !18531
  %173 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18532
  %174 = bitcast %struct.BPoint* %173 to i8*, !dbg !18531
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %172, i8* align 4 %174, i64 36, i1 false), !dbg !18531
  %175 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !18533
  %176 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18534
  %177 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !18535
  call void @keyIndex_updateBP(%struct.EditNurb* %175, %struct.BPoint* %176, %struct.BPoint* %177, i32 1), !dbg !18536
  %178 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !18537
  %incdec.ptr261 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %178, i32 1, !dbg !18537
  store %struct.BPoint* %incdec.ptr261, %struct.BPoint** %bpn, align 8, !dbg !18537
  %179 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18538
  %180 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18539
  %call262 = call %struct.BPoint* @BKE_nurb_bpoint_get_next(%struct.Nurb* %179, %struct.BPoint* %180), !dbg !18540
  store %struct.BPoint* %call262, %struct.BPoint** %nextbp, align 8, !dbg !18541
  %181 = load %struct.BPoint*, %struct.BPoint** %nextbp, align 8, !dbg !18542
  %cmp263 = icmp eq %struct.BPoint* %181, null, !dbg !18544
  br i1 %cmp263, label %if.then265, label %if.end266, !dbg !18545

if.then265:                                       ; preds = %while.body260
  br label %while.end298, !dbg !18546

if.end266:                                        ; preds = %while.body260
  %182 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18548
  %f1267 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %182, i32 0, i32 3, !dbg !18550
  %183 = load i16, i16* %f1267, align 4, !dbg !18550
  %conv268 = sext i16 %183 to i32, !dbg !18548
  %and269 = and i32 %conv268, 1, !dbg !18551
  %tobool270 = icmp ne i32 %and269, 0, !dbg !18551
  br i1 %tobool270, label %land.lhs.true271, label %if.end296, !dbg !18552

land.lhs.true271:                                 ; preds = %if.end266
  %184 = load %struct.BPoint*, %struct.BPoint** %nextbp, align 8, !dbg !18553
  %f1272 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %184, i32 0, i32 3, !dbg !18554
  %185 = load i16, i16* %f1272, align 4, !dbg !18554
  %conv273 = sext i16 %185 to i32, !dbg !18553
  %and274 = and i32 %conv273, 1, !dbg !18555
  %tobool275 = icmp ne i32 %and274, 0, !dbg !18555
  br i1 %tobool275, label %if.then276, label %if.end296, !dbg !18556

if.then276:                                       ; preds = %land.lhs.true271
  store i32 0, i32* %i, align 4, !dbg !18557
  br label %for.cond277, !dbg !18560

for.cond277:                                      ; preds = %for.inc293, %if.then276
  %186 = load i32, i32* %i, align 4, !dbg !18561
  %187 = load i32, i32* %number_cuts.addr, align 4, !dbg !18563
  %cmp278 = icmp slt i32 %186, %187, !dbg !18564
  br i1 %cmp278, label %for.body280, label %for.end295, !dbg !18565

for.body280:                                      ; preds = %for.cond277
  %188 = load i32, i32* %i, align 4, !dbg !18566
  %add281 = add nsw i32 %188, 1, !dbg !18568
  %conv282 = sitofp i32 %add281 to float, !dbg !18569
  %189 = load i32, i32* %number_cuts.addr, align 4, !dbg !18570
  %add283 = add nsw i32 %189, 1, !dbg !18571
  %conv284 = sitofp i32 %add283 to float, !dbg !18572
  %div285 = fdiv float %conv282, %conv284, !dbg !18573
  store float %div285, float* %factor, align 4, !dbg !18574
  %190 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !18575
  %191 = bitcast %struct.BPoint* %190 to i8*, !dbg !18576
  %192 = load %struct.BPoint*, %struct.BPoint** %nextbp, align 8, !dbg !18577
  %193 = bitcast %struct.BPoint* %192 to i8*, !dbg !18576
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %191, i8* align 4 %193, i64 36, i1 false), !dbg !18576
  %194 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !18578
  %vec286 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %194, i32 0, i32 0, !dbg !18579
  %arraydecay287 = getelementptr inbounds [4 x float], [4 x float]* %vec286, i64 0, i64 0, !dbg !18578
  %195 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18580
  %vec288 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %195, i32 0, i32 0, !dbg !18581
  %arraydecay289 = getelementptr inbounds [4 x float], [4 x float]* %vec288, i64 0, i64 0, !dbg !18580
  %196 = load %struct.BPoint*, %struct.BPoint** %nextbp, align 8, !dbg !18582
  %vec290 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %196, i32 0, i32 0, !dbg !18583
  %arraydecay291 = getelementptr inbounds [4 x float], [4 x float]* %vec290, i64 0, i64 0, !dbg !18582
  %197 = load float, float* %factor, align 4, !dbg !18584
  call void @interp_v4_v4v4(float* %arraydecay287, float* %arraydecay289, float* %arraydecay291, float %197), !dbg !18585
  %198 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !18586
  %incdec.ptr292 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %198, i32 1, !dbg !18586
  store %struct.BPoint* %incdec.ptr292, %struct.BPoint** %bpn, align 8, !dbg !18586
  br label %for.inc293, !dbg !18587

for.inc293:                                       ; preds = %for.body280
  %199 = load i32, i32* %i, align 4, !dbg !18588
  %inc294 = add nsw i32 %199, 1, !dbg !18588
  store i32 %inc294, i32* %i, align 4, !dbg !18588
  br label %for.cond277, !dbg !18589, !llvm.loop !18590

for.end295:                                       ; preds = %for.cond277
  br label %if.end296, !dbg !18592

if.end296:                                        ; preds = %for.end295, %land.lhs.true271, %if.end266
  %200 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18593
  %incdec.ptr297 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %200, i32 1, !dbg !18593
  store %struct.BPoint* %incdec.ptr297, %struct.BPoint** %bp, align 8, !dbg !18593
  br label %while.cond257, !dbg !18527, !llvm.loop !18594

while.end298:                                     ; preds = %if.then265, %while.cond257
  %201 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !18596
  %202 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18597
  %bp299 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %202, i32 0, i32 17, !dbg !18598
  %203 = load %struct.BPoint*, %struct.BPoint** %bp299, align 8, !dbg !18598
  %204 = bitcast %struct.BPoint* %203 to i8*, !dbg !18597
  call void %201(i8* %204), !dbg !18596
  %205 = load %struct.BPoint*, %struct.BPoint** %bpnew, align 8, !dbg !18599
  %206 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18600
  %bp300 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %206, i32 0, i32 17, !dbg !18601
  store %struct.BPoint* %205, %struct.BPoint** %bp300, align 8, !dbg !18602
  %207 = load i32, i32* %amount, align 4, !dbg !18603
  %208 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18604
  %pntsu301 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %208, i32 0, i32 6, !dbg !18605
  %209 = load i32, i32* %pntsu301, align 8, !dbg !18606
  %add302 = add nsw i32 %209, %207, !dbg !18606
  store i32 %add302, i32* %pntsu301, align 8, !dbg !18606
  %210 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18607
  %type303 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %210, i32 0, i32 2, !dbg !18609
  %211 = load i16, i16* %type303, align 8, !dbg !18609
  %conv304 = sext i16 %211 to i32, !dbg !18607
  %and305 = and i32 %conv304, 4, !dbg !18610
  %tobool306 = icmp ne i32 %and305, 0, !dbg !18610
  br i1 %tobool306, label %if.then307, label %if.end308, !dbg !18611

if.then307:                                       ; preds = %while.end298
  %212 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18612
  call void @BKE_nurb_knot_calc_u(%struct.Nurb* %212), !dbg !18614
  br label %if.end308, !dbg !18615

if.end308:                                        ; preds = %if.then307, %while.end298
  br label %if.end309, !dbg !18616

if.end309:                                        ; preds = %if.end308, %while.end247
  br label %if.end713, !dbg !18617

if.else310:                                       ; preds = %if.else219
  %213 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18618
  %type311 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %213, i32 0, i32 2, !dbg !18620
  %214 = load i16, i16* %type311, align 8, !dbg !18620
  %conv312 = sext i16 %214 to i32, !dbg !18618
  %cmp313 = icmp eq i32 %conv312, 4, !dbg !18621
  br i1 %cmp313, label %if.then315, label %if.end712, !dbg !18622

if.then315:                                       ; preds = %if.else310
  %215 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !18623
  %216 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18625
  %pntsu316 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %216, i32 0, i32 6, !dbg !18626
  %217 = load i32, i32* %pntsu316, align 8, !dbg !18626
  %conv317 = sext i32 %217 to i64, !dbg !18625
  %mul318 = mul i64 4, %conv317, !dbg !18627
  %call319 = call i8* %215(i64 %mul318, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.201, i64 0, i64 0)), !dbg !18623
  %218 = bitcast i8* %call319 to i32*, !dbg !18623
  store i32* %218, i32** %usel, align 8, !dbg !18628
  %219 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !18629
  %220 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18630
  %pntsv320 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %220, i32 0, i32 7, !dbg !18631
  %221 = load i32, i32* %pntsv320, align 4, !dbg !18631
  %conv321 = sext i32 %221 to i64, !dbg !18630
  %mul322 = mul i64 4, %conv321, !dbg !18632
  %call323 = call i8* %219(i64 %mul322, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.201, i64 0, i64 0)), !dbg !18629
  %222 = bitcast i8* %call323 to i32*, !dbg !18629
  store i32* %222, i32** %vsel, align 8, !dbg !18633
  store i32 0, i32* %sel, align 4, !dbg !18634
  %223 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18635
  %bp324 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %223, i32 0, i32 17, !dbg !18636
  %224 = load %struct.BPoint*, %struct.BPoint** %bp324, align 8, !dbg !18636
  store %struct.BPoint* %224, %struct.BPoint** %bp, align 8, !dbg !18637
  store i32 0, i32* %a, align 4, !dbg !18638
  br label %for.cond325, !dbg !18640

for.cond325:                                      ; preds = %for.inc351, %if.then315
  %225 = load i32, i32* %a, align 4, !dbg !18641
  %226 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18643
  %pntsv326 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %226, i32 0, i32 7, !dbg !18644
  %227 = load i32, i32* %pntsv326, align 4, !dbg !18644
  %cmp327 = icmp slt i32 %225, %227, !dbg !18645
  br i1 %cmp327, label %for.body329, label %for.end353, !dbg !18646

for.body329:                                      ; preds = %for.cond325
  store i32 0, i32* %b, align 4, !dbg !18647
  br label %for.cond330, !dbg !18650

for.cond330:                                      ; preds = %for.inc348, %for.body329
  %228 = load i32, i32* %b, align 4, !dbg !18651
  %229 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18653
  %pntsu331 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %229, i32 0, i32 6, !dbg !18654
  %230 = load i32, i32* %pntsu331, align 8, !dbg !18654
  %cmp332 = icmp slt i32 %228, %230, !dbg !18655
  br i1 %cmp332, label %for.body334, label %for.end350, !dbg !18656

for.body334:                                      ; preds = %for.cond330
  %231 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18657
  %f1335 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %231, i32 0, i32 3, !dbg !18660
  %232 = load i16, i16* %f1335, align 4, !dbg !18660
  %conv336 = sext i16 %232 to i32, !dbg !18657
  %and337 = and i32 %conv336, 1, !dbg !18661
  %tobool338 = icmp ne i32 %and337, 0, !dbg !18661
  br i1 %tobool338, label %if.then339, label %if.end346, !dbg !18662

if.then339:                                       ; preds = %for.body334
  %233 = load i32*, i32** %usel, align 8, !dbg !18663
  %234 = load i32, i32* %b, align 4, !dbg !18665
  %idxprom = sext i32 %234 to i64, !dbg !18663
  %arrayidx340 = getelementptr inbounds i32, i32* %233, i64 %idxprom, !dbg !18663
  %235 = load i32, i32* %arrayidx340, align 4, !dbg !18666
  %inc341 = add nsw i32 %235, 1, !dbg !18666
  store i32 %inc341, i32* %arrayidx340, align 4, !dbg !18666
  %236 = load i32*, i32** %vsel, align 8, !dbg !18667
  %237 = load i32, i32* %a, align 4, !dbg !18668
  %idxprom342 = sext i32 %237 to i64, !dbg !18667
  %arrayidx343 = getelementptr inbounds i32, i32* %236, i64 %idxprom342, !dbg !18667
  %238 = load i32, i32* %arrayidx343, align 4, !dbg !18669
  %inc344 = add nsw i32 %238, 1, !dbg !18669
  store i32 %inc344, i32* %arrayidx343, align 4, !dbg !18669
  %239 = load i32, i32* %sel, align 4, !dbg !18670
  %inc345 = add nsw i32 %239, 1, !dbg !18670
  store i32 %inc345, i32* %sel, align 4, !dbg !18670
  br label %if.end346, !dbg !18671

if.end346:                                        ; preds = %if.then339, %for.body334
  %240 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18672
  %incdec.ptr347 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %240, i32 1, !dbg !18672
  store %struct.BPoint* %incdec.ptr347, %struct.BPoint** %bp, align 8, !dbg !18672
  br label %for.inc348, !dbg !18673

for.inc348:                                       ; preds = %if.end346
  %241 = load i32, i32* %b, align 4, !dbg !18674
  %inc349 = add nsw i32 %241, 1, !dbg !18674
  store i32 %inc349, i32* %b, align 4, !dbg !18674
  br label %for.cond330, !dbg !18675, !llvm.loop !18676

for.end350:                                       ; preds = %for.cond330
  br label %for.inc351, !dbg !18678

for.inc351:                                       ; preds = %for.end350
  %242 = load i32, i32* %a, align 4, !dbg !18679
  %inc352 = add nsw i32 %242, 1, !dbg !18679
  store i32 %inc352, i32* %a, align 4, !dbg !18679
  br label %for.cond325, !dbg !18680, !llvm.loop !18681

for.end353:                                       ; preds = %for.cond325
  %243 = load i32, i32* %sel, align 4, !dbg !18683
  %244 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18685
  %pntsu354 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %244, i32 0, i32 6, !dbg !18686
  %245 = load i32, i32* %pntsu354, align 8, !dbg !18686
  %246 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18687
  %pntsv355 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %246, i32 0, i32 7, !dbg !18688
  %247 = load i32, i32* %pntsv355, align 4, !dbg !18688
  %mul356 = mul nsw i32 %245, %247, !dbg !18689
  %cmp357 = icmp eq i32 %243, %mul356, !dbg !18690
  br i1 %cmp357, label %if.then359, label %if.else501, !dbg !18691

if.then359:                                       ; preds = %for.end353
  call void @llvm.dbg.declare(metadata i32* %countu, metadata !18692, metadata !DIExpression()), !dbg !18694
  %248 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18695
  %pntsu360 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %248, i32 0, i32 6, !dbg !18696
  %249 = load i32, i32* %pntsu360, align 8, !dbg !18696
  %250 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18697
  %pntsu361 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %250, i32 0, i32 6, !dbg !18698
  %251 = load i32, i32* %pntsu361, align 8, !dbg !18698
  %sub362 = sub nsw i32 %251, 1, !dbg !18699
  %252 = load i32, i32* %number_cuts.addr, align 4, !dbg !18700
  %mul363 = mul nsw i32 %sub362, %252, !dbg !18701
  %add364 = add nsw i32 %249, %mul363, !dbg !18702
  store i32 %add364, i32* %countu, align 4, !dbg !18694
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !18703, metadata !DIExpression()), !dbg !18704
  %253 = load i32, i32* %number_cuts.addr, align 4, !dbg !18705
  %add365 = add nsw i32 %253, 1, !dbg !18706
  %254 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18707
  %pntsu366 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %254, i32 0, i32 6, !dbg !18708
  %255 = load i32, i32* %pntsu366, align 8, !dbg !18708
  %mul367 = mul nsw i32 %add365, %255, !dbg !18709
  %256 = load i32, i32* %number_cuts.addr, align 4, !dbg !18710
  %sub368 = sub nsw i32 %mul367, %256, !dbg !18711
  %257 = load i32, i32* %number_cuts.addr, align 4, !dbg !18712
  %add369 = add nsw i32 %257, 1, !dbg !18713
  %258 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18714
  %pntsv370 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %258, i32 0, i32 7, !dbg !18715
  %259 = load i32, i32* %pntsv370, align 4, !dbg !18715
  %mul371 = mul nsw i32 %add369, %259, !dbg !18716
  %260 = load i32, i32* %number_cuts.addr, align 4, !dbg !18717
  %sub372 = sub nsw i32 %mul371, %260, !dbg !18718
  %mul373 = mul nsw i32 %sub368, %sub372, !dbg !18719
  store i32 %mul373, i32* %tot, align 4, !dbg !18704
  %261 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !18720
  %262 = load i32, i32* %tot, align 4, !dbg !18721
  %conv374 = sext i32 %262 to i64, !dbg !18721
  %mul375 = mul i64 %conv374, 36, !dbg !18722
  %call376 = call i8* %261(i64 %mul375, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.202, i64 0, i64 0)), !dbg !18720
  %263 = bitcast i8* %call376 to %struct.BPoint*, !dbg !18720
  store %struct.BPoint* %263, %struct.BPoint** %bpnew, align 8, !dbg !18723
  store %struct.BPoint* %263, %struct.BPoint** %bpn, align 8, !dbg !18724
  %264 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18725
  %bp377 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %264, i32 0, i32 17, !dbg !18726
  %265 = load %struct.BPoint*, %struct.BPoint** %bp377, align 8, !dbg !18726
  store %struct.BPoint* %265, %struct.BPoint** %bp, align 8, !dbg !18727
  store i32 0, i32* %a, align 4, !dbg !18728
  br label %for.cond378, !dbg !18730

for.cond378:                                      ; preds = %for.inc421, %if.then359
  %266 = load i32, i32* %a, align 4, !dbg !18731
  %267 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18733
  %pntsv379 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %267, i32 0, i32 7, !dbg !18734
  %268 = load i32, i32* %pntsv379, align 4, !dbg !18734
  %cmp380 = icmp slt i32 %266, %268, !dbg !18735
  br i1 %cmp380, label %for.body382, label %for.end423, !dbg !18736

for.body382:                                      ; preds = %for.cond378
  store i32 0, i32* %b, align 4, !dbg !18737
  br label %for.cond383, !dbg !18740

for.cond383:                                      ; preds = %for.inc416, %for.body382
  %269 = load i32, i32* %b, align 4, !dbg !18741
  %270 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18743
  %pntsu384 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %270, i32 0, i32 6, !dbg !18744
  %271 = load i32, i32* %pntsu384, align 8, !dbg !18744
  %cmp385 = icmp slt i32 %269, %271, !dbg !18745
  br i1 %cmp385, label %for.body387, label %for.end418, !dbg !18746

for.body387:                                      ; preds = %for.cond383
  %272 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !18747
  %273 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18749
  %274 = bitcast %struct.BPoint* %272 to i8*, !dbg !18750
  %275 = bitcast %struct.BPoint* %273 to i8*, !dbg !18750
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %274, i8* align 4 %275, i64 36, i1 false), !dbg !18750
  %276 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !18751
  %277 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18752
  %278 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !18753
  call void @keyIndex_updateBP(%struct.EditNurb* %276, %struct.BPoint* %277, %struct.BPoint* %278, i32 1), !dbg !18754
  %279 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !18755
  %incdec.ptr388 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %279, i32 1, !dbg !18755
  store %struct.BPoint* %incdec.ptr388, %struct.BPoint** %bpn, align 8, !dbg !18755
  %280 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18756
  %incdec.ptr389 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %280, i32 1, !dbg !18756
  store %struct.BPoint* %incdec.ptr389, %struct.BPoint** %bp, align 8, !dbg !18756
  %281 = load i32, i32* %b, align 4, !dbg !18757
  %282 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18759
  %pntsu390 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %282, i32 0, i32 6, !dbg !18760
  %283 = load i32, i32* %pntsu390, align 8, !dbg !18760
  %sub391 = sub nsw i32 %283, 1, !dbg !18761
  %cmp392 = icmp slt i32 %281, %sub391, !dbg !18762
  br i1 %cmp392, label %if.then394, label %if.end415, !dbg !18763

if.then394:                                       ; preds = %for.body387
  %284 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18764
  %add.ptr395 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %284, i64 -1, !dbg !18766
  store %struct.BPoint* %add.ptr395, %struct.BPoint** %prevbp, align 8, !dbg !18767
  store i32 0, i32* %i, align 4, !dbg !18768
  br label %for.cond396, !dbg !18770

for.cond396:                                      ; preds = %for.inc412, %if.then394
  %285 = load i32, i32* %i, align 4, !dbg !18771
  %286 = load i32, i32* %number_cuts.addr, align 4, !dbg !18773
  %cmp397 = icmp slt i32 %285, %286, !dbg !18774
  br i1 %cmp397, label %for.body399, label %for.end414, !dbg !18775

for.body399:                                      ; preds = %for.cond396
  %287 = load i32, i32* %i, align 4, !dbg !18776
  %add400 = add nsw i32 %287, 1, !dbg !18778
  %conv401 = sitofp i32 %add400 to float, !dbg !18779
  %288 = load i32, i32* %number_cuts.addr, align 4, !dbg !18780
  %add402 = add nsw i32 %288, 1, !dbg !18781
  %conv403 = sitofp i32 %add402 to float, !dbg !18782
  %div404 = fdiv float %conv401, %conv403, !dbg !18783
  store float %div404, float* %factor, align 4, !dbg !18784
  %289 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !18785
  %290 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18786
  %291 = bitcast %struct.BPoint* %289 to i8*, !dbg !18787
  %292 = bitcast %struct.BPoint* %290 to i8*, !dbg !18787
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %291, i8* align 4 %292, i64 36, i1 false), !dbg !18787
  %293 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !18788
  %vec405 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %293, i32 0, i32 0, !dbg !18789
  %arraydecay406 = getelementptr inbounds [4 x float], [4 x float]* %vec405, i64 0, i64 0, !dbg !18788
  %294 = load %struct.BPoint*, %struct.BPoint** %prevbp, align 8, !dbg !18790
  %vec407 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %294, i32 0, i32 0, !dbg !18791
  %arraydecay408 = getelementptr inbounds [4 x float], [4 x float]* %vec407, i64 0, i64 0, !dbg !18790
  %295 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18792
  %vec409 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %295, i32 0, i32 0, !dbg !18793
  %arraydecay410 = getelementptr inbounds [4 x float], [4 x float]* %vec409, i64 0, i64 0, !dbg !18792
  %296 = load float, float* %factor, align 4, !dbg !18794
  call void @interp_v4_v4v4(float* %arraydecay406, float* %arraydecay408, float* %arraydecay410, float %296), !dbg !18795
  %297 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !18796
  %incdec.ptr411 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %297, i32 1, !dbg !18796
  store %struct.BPoint* %incdec.ptr411, %struct.BPoint** %bpn, align 8, !dbg !18796
  br label %for.inc412, !dbg !18797

for.inc412:                                       ; preds = %for.body399
  %298 = load i32, i32* %i, align 4, !dbg !18798
  %inc413 = add nsw i32 %298, 1, !dbg !18798
  store i32 %inc413, i32* %i, align 4, !dbg !18798
  br label %for.cond396, !dbg !18799, !llvm.loop !18800

for.end414:                                       ; preds = %for.cond396
  br label %if.end415, !dbg !18802

if.end415:                                        ; preds = %for.end414, %for.body387
  br label %for.inc416, !dbg !18803

for.inc416:                                       ; preds = %if.end415
  %299 = load i32, i32* %b, align 4, !dbg !18804
  %inc417 = add nsw i32 %299, 1, !dbg !18804
  store i32 %inc417, i32* %b, align 4, !dbg !18804
  br label %for.cond383, !dbg !18805, !llvm.loop !18806

for.end418:                                       ; preds = %for.cond383
  %300 = load i32, i32* %number_cuts.addr, align 4, !dbg !18808
  %301 = load i32, i32* %countu, align 4, !dbg !18809
  %mul419 = mul nsw i32 %300, %301, !dbg !18810
  %302 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !18811
  %idx.ext = sext i32 %mul419 to i64, !dbg !18811
  %add.ptr420 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %302, i64 %idx.ext, !dbg !18811
  store %struct.BPoint* %add.ptr420, %struct.BPoint** %bpn, align 8, !dbg !18811
  br label %for.inc421, !dbg !18812

for.inc421:                                       ; preds = %for.end418
  %303 = load i32, i32* %a, align 4, !dbg !18813
  %inc422 = add nsw i32 %303, 1, !dbg !18813
  store i32 %inc422, i32* %a, align 4, !dbg !18813
  br label %for.cond378, !dbg !18814, !llvm.loop !18815

for.end423:                                       ; preds = %for.cond378
  %304 = load %struct.BPoint*, %struct.BPoint** %bpnew, align 8, !dbg !18817
  %305 = load i32, i32* %number_cuts.addr, align 4, !dbg !18818
  %add424 = add nsw i32 %305, 1, !dbg !18819
  %306 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18820
  %pntsu425 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %306, i32 0, i32 6, !dbg !18821
  %307 = load i32, i32* %pntsu425, align 8, !dbg !18821
  %mul426 = mul nsw i32 %add424, %307, !dbg !18822
  %308 = load i32, i32* %number_cuts.addr, align 4, !dbg !18823
  %sub427 = sub nsw i32 %mul426, %308, !dbg !18824
  %idx.ext428 = sext i32 %sub427 to i64, !dbg !18825
  %add.ptr429 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %304, i64 %idx.ext428, !dbg !18825
  store %struct.BPoint* %add.ptr429, %struct.BPoint** %bpn, align 8, !dbg !18826
  %309 = load %struct.BPoint*, %struct.BPoint** %bpnew, align 8, !dbg !18827
  %310 = load i32, i32* %number_cuts.addr, align 4, !dbg !18828
  %add430 = add nsw i32 %310, 1, !dbg !18829
  %311 = load i32, i32* %number_cuts.addr, align 4, !dbg !18830
  %add431 = add nsw i32 %311, 1, !dbg !18831
  %312 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18832
  %pntsu432 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %312, i32 0, i32 6, !dbg !18833
  %313 = load i32, i32* %pntsu432, align 8, !dbg !18833
  %mul433 = mul nsw i32 %add431, %313, !dbg !18834
  %314 = load i32, i32* %number_cuts.addr, align 4, !dbg !18835
  %sub434 = sub nsw i32 %mul433, %314, !dbg !18836
  %mul435 = mul nsw i32 %add430, %sub434, !dbg !18837
  %idx.ext436 = sext i32 %mul435 to i64, !dbg !18838
  %add.ptr437 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %309, i64 %idx.ext436, !dbg !18838
  store %struct.BPoint* %add.ptr437, %struct.BPoint** %bp, align 8, !dbg !18839
  %315 = load %struct.BPoint*, %struct.BPoint** %bpnew, align 8, !dbg !18840
  store %struct.BPoint* %315, %struct.BPoint** %prevbp, align 8, !dbg !18841
  store i32 1, i32* %a, align 4, !dbg !18842
  br label %for.cond438, !dbg !18844

for.cond438:                                      ; preds = %for.inc486, %for.end423
  %316 = load i32, i32* %a, align 4, !dbg !18845
  %317 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18847
  %pntsv439 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %317, i32 0, i32 7, !dbg !18848
  %318 = load i32, i32* %pntsv439, align 4, !dbg !18848
  %cmp440 = icmp slt i32 %316, %318, !dbg !18849
  br i1 %cmp440, label %for.body442, label %for.end488, !dbg !18850

for.body442:                                      ; preds = %for.cond438
  store i32 0, i32* %b, align 4, !dbg !18851
  br label %for.cond443, !dbg !18854

for.cond443:                                      ; preds = %for.inc474, %for.body442
  %319 = load i32, i32* %b, align 4, !dbg !18855
  %320 = load i32, i32* %number_cuts.addr, align 4, !dbg !18857
  %add444 = add nsw i32 %320, 1, !dbg !18858
  %321 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18859
  %pntsu445 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %321, i32 0, i32 6, !dbg !18860
  %322 = load i32, i32* %pntsu445, align 8, !dbg !18860
  %mul446 = mul nsw i32 %add444, %322, !dbg !18861
  %323 = load i32, i32* %number_cuts.addr, align 4, !dbg !18862
  %sub447 = sub nsw i32 %mul446, %323, !dbg !18863
  %cmp448 = icmp slt i32 %319, %sub447, !dbg !18864
  br i1 %cmp448, label %for.body450, label %for.end476, !dbg !18865

for.body450:                                      ; preds = %for.cond443
  call void @llvm.dbg.declare(metadata %struct.BPoint** %tmp, metadata !18866, metadata !DIExpression()), !dbg !18868
  %324 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !18869
  store %struct.BPoint* %324, %struct.BPoint** %tmp, align 8, !dbg !18868
  store i32 0, i32* %i, align 4, !dbg !18870
  br label %for.cond451, !dbg !18872

for.cond451:                                      ; preds = %for.inc468, %for.body450
  %325 = load i32, i32* %i, align 4, !dbg !18873
  %326 = load i32, i32* %number_cuts.addr, align 4, !dbg !18875
  %cmp452 = icmp slt i32 %325, %326, !dbg !18876
  br i1 %cmp452, label %for.body454, label %for.end470, !dbg !18877

for.body454:                                      ; preds = %for.cond451
  %327 = load i32, i32* %i, align 4, !dbg !18878
  %add455 = add nsw i32 %327, 1, !dbg !18880
  %conv456 = sitofp i32 %add455 to float, !dbg !18881
  %328 = load i32, i32* %number_cuts.addr, align 4, !dbg !18882
  %add457 = add nsw i32 %328, 1, !dbg !18883
  %conv458 = sitofp i32 %add457 to float, !dbg !18884
  %div459 = fdiv float %conv456, %conv458, !dbg !18885
  store float %div459, float* %factor, align 4, !dbg !18886
  %329 = load %struct.BPoint*, %struct.BPoint** %tmp, align 8, !dbg !18887
  %330 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18888
  %331 = bitcast %struct.BPoint* %329 to i8*, !dbg !18889
  %332 = bitcast %struct.BPoint* %330 to i8*, !dbg !18889
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %331, i8* align 4 %332, i64 36, i1 false), !dbg !18889
  %333 = load %struct.BPoint*, %struct.BPoint** %tmp, align 8, !dbg !18890
  %vec460 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %333, i32 0, i32 0, !dbg !18891
  %arraydecay461 = getelementptr inbounds [4 x float], [4 x float]* %vec460, i64 0, i64 0, !dbg !18890
  %334 = load %struct.BPoint*, %struct.BPoint** %prevbp, align 8, !dbg !18892
  %vec462 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %334, i32 0, i32 0, !dbg !18893
  %arraydecay463 = getelementptr inbounds [4 x float], [4 x float]* %vec462, i64 0, i64 0, !dbg !18892
  %335 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18894
  %vec464 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %335, i32 0, i32 0, !dbg !18895
  %arraydecay465 = getelementptr inbounds [4 x float], [4 x float]* %vec464, i64 0, i64 0, !dbg !18894
  %336 = load float, float* %factor, align 4, !dbg !18896
  call void @interp_v4_v4v4(float* %arraydecay461, float* %arraydecay463, float* %arraydecay465, float %336), !dbg !18897
  %337 = load i32, i32* %countu, align 4, !dbg !18898
  %338 = load %struct.BPoint*, %struct.BPoint** %tmp, align 8, !dbg !18899
  %idx.ext466 = sext i32 %337 to i64, !dbg !18899
  %add.ptr467 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %338, i64 %idx.ext466, !dbg !18899
  store %struct.BPoint* %add.ptr467, %struct.BPoint** %tmp, align 8, !dbg !18899
  br label %for.inc468, !dbg !18900

for.inc468:                                       ; preds = %for.body454
  %339 = load i32, i32* %i, align 4, !dbg !18901
  %inc469 = add nsw i32 %339, 1, !dbg !18901
  store i32 %inc469, i32* %i, align 4, !dbg !18901
  br label %for.cond451, !dbg !18902, !llvm.loop !18903

for.end470:                                       ; preds = %for.cond451
  %340 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18905
  %incdec.ptr471 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %340, i32 1, !dbg !18905
  store %struct.BPoint* %incdec.ptr471, %struct.BPoint** %bp, align 8, !dbg !18905
  %341 = load %struct.BPoint*, %struct.BPoint** %prevbp, align 8, !dbg !18906
  %incdec.ptr472 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %341, i32 1, !dbg !18906
  store %struct.BPoint* %incdec.ptr472, %struct.BPoint** %prevbp, align 8, !dbg !18906
  %342 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !18907
  %incdec.ptr473 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %342, i32 1, !dbg !18907
  store %struct.BPoint* %incdec.ptr473, %struct.BPoint** %bpn, align 8, !dbg !18907
  br label %for.inc474, !dbg !18908

for.inc474:                                       ; preds = %for.end470
  %343 = load i32, i32* %b, align 4, !dbg !18909
  %inc475 = add nsw i32 %343, 1, !dbg !18909
  store i32 %inc475, i32* %b, align 4, !dbg !18909
  br label %for.cond443, !dbg !18910, !llvm.loop !18911

for.end476:                                       ; preds = %for.cond443
  %344 = load i32, i32* %number_cuts.addr, align 4, !dbg !18913
  %345 = load i32, i32* %countu, align 4, !dbg !18914
  %mul477 = mul nsw i32 %344, %345, !dbg !18915
  %346 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !18916
  %idx.ext478 = sext i32 %mul477 to i64, !dbg !18916
  %add.ptr479 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %346, i64 %idx.ext478, !dbg !18916
  store %struct.BPoint* %add.ptr479, %struct.BPoint** %bp, align 8, !dbg !18916
  %347 = load i32, i32* %number_cuts.addr, align 4, !dbg !18917
  %348 = load i32, i32* %countu, align 4, !dbg !18918
  %mul480 = mul nsw i32 %347, %348, !dbg !18919
  %349 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !18920
  %idx.ext481 = sext i32 %mul480 to i64, !dbg !18920
  %add.ptr482 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %349, i64 %idx.ext481, !dbg !18920
  store %struct.BPoint* %add.ptr482, %struct.BPoint** %bpn, align 8, !dbg !18920
  %350 = load i32, i32* %number_cuts.addr, align 4, !dbg !18921
  %351 = load i32, i32* %countu, align 4, !dbg !18922
  %mul483 = mul nsw i32 %350, %351, !dbg !18923
  %352 = load %struct.BPoint*, %struct.BPoint** %prevbp, align 8, !dbg !18924
  %idx.ext484 = sext i32 %mul483 to i64, !dbg !18924
  %add.ptr485 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %352, i64 %idx.ext484, !dbg !18924
  store %struct.BPoint* %add.ptr485, %struct.BPoint** %prevbp, align 8, !dbg !18924
  br label %for.inc486, !dbg !18925

for.inc486:                                       ; preds = %for.end476
  %353 = load i32, i32* %a, align 4, !dbg !18926
  %inc487 = add nsw i32 %353, 1, !dbg !18926
  store i32 %inc487, i32* %a, align 4, !dbg !18926
  br label %for.cond438, !dbg !18927, !llvm.loop !18928

for.end488:                                       ; preds = %for.cond438
  %354 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !18930
  %355 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18931
  %bp489 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %355, i32 0, i32 17, !dbg !18932
  %356 = load %struct.BPoint*, %struct.BPoint** %bp489, align 8, !dbg !18932
  %357 = bitcast %struct.BPoint* %356 to i8*, !dbg !18931
  call void %354(i8* %357), !dbg !18930
  %358 = load %struct.BPoint*, %struct.BPoint** %bpnew, align 8, !dbg !18933
  %359 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18934
  %bp490 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %359, i32 0, i32 17, !dbg !18935
  store %struct.BPoint* %358, %struct.BPoint** %bp490, align 8, !dbg !18936
  %360 = load i32, i32* %number_cuts.addr, align 4, !dbg !18937
  %add491 = add nsw i32 %360, 1, !dbg !18938
  %361 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18939
  %pntsu492 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %361, i32 0, i32 6, !dbg !18940
  %362 = load i32, i32* %pntsu492, align 8, !dbg !18940
  %mul493 = mul nsw i32 %add491, %362, !dbg !18941
  %363 = load i32, i32* %number_cuts.addr, align 4, !dbg !18942
  %sub494 = sub nsw i32 %mul493, %363, !dbg !18943
  %364 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18944
  %pntsu495 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %364, i32 0, i32 6, !dbg !18945
  store i32 %sub494, i32* %pntsu495, align 8, !dbg !18946
  %365 = load i32, i32* %number_cuts.addr, align 4, !dbg !18947
  %add496 = add nsw i32 %365, 1, !dbg !18948
  %366 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18949
  %pntsv497 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %366, i32 0, i32 7, !dbg !18950
  %367 = load i32, i32* %pntsv497, align 4, !dbg !18950
  %mul498 = mul nsw i32 %add496, %367, !dbg !18951
  %368 = load i32, i32* %number_cuts.addr, align 4, !dbg !18952
  %sub499 = sub nsw i32 %mul498, %368, !dbg !18953
  %369 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18954
  %pntsv500 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %369, i32 0, i32 7, !dbg !18955
  store i32 %sub499, i32* %pntsv500, align 4, !dbg !18956
  %370 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18957
  call void @BKE_nurb_knot_calc_u(%struct.Nurb* %370), !dbg !18958
  %371 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18959
  call void @BKE_nurb_knot_calc_v(%struct.Nurb* %371), !dbg !18960
  br label %if.end711, !dbg !18961

if.else501:                                       ; preds = %for.end353
  store i32 0, i32* %sel, align 4, !dbg !18962
  store i32 0, i32* %a, align 4, !dbg !18964
  br label %for.cond502, !dbg !18966

for.cond502:                                      ; preds = %for.inc523, %if.else501
  %372 = load i32, i32* %a, align 4, !dbg !18967
  %373 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18969
  %pntsv503 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %373, i32 0, i32 7, !dbg !18970
  %374 = load i32, i32* %pntsv503, align 4, !dbg !18970
  %sub504 = sub nsw i32 %374, 1, !dbg !18971
  %cmp505 = icmp slt i32 %372, %sub504, !dbg !18972
  br i1 %cmp505, label %for.body507, label %for.end525, !dbg !18973

for.body507:                                      ; preds = %for.cond502
  %375 = load i32*, i32** %vsel, align 8, !dbg !18974
  %376 = load i32, i32* %a, align 4, !dbg !18977
  %idxprom508 = sext i32 %376 to i64, !dbg !18974
  %arrayidx509 = getelementptr inbounds i32, i32* %375, i64 %idxprom508, !dbg !18974
  %377 = load i32, i32* %arrayidx509, align 4, !dbg !18974
  %378 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18978
  %pntsu510 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %378, i32 0, i32 6, !dbg !18979
  %379 = load i32, i32* %pntsu510, align 8, !dbg !18979
  %cmp511 = icmp eq i32 %377, %379, !dbg !18980
  br i1 %cmp511, label %land.lhs.true513, label %if.end522, !dbg !18981

land.lhs.true513:                                 ; preds = %for.body507
  %380 = load i32*, i32** %vsel, align 8, !dbg !18982
  %381 = load i32, i32* %a, align 4, !dbg !18983
  %add514 = add nsw i32 %381, 1, !dbg !18984
  %idxprom515 = sext i32 %add514 to i64, !dbg !18982
  %arrayidx516 = getelementptr inbounds i32, i32* %380, i64 %idxprom515, !dbg !18982
  %382 = load i32, i32* %arrayidx516, align 4, !dbg !18982
  %383 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !18985
  %pntsu517 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %383, i32 0, i32 6, !dbg !18986
  %384 = load i32, i32* %pntsu517, align 8, !dbg !18986
  %cmp518 = icmp eq i32 %382, %384, !dbg !18987
  br i1 %cmp518, label %if.then520, label %if.end522, !dbg !18988

if.then520:                                       ; preds = %land.lhs.true513
  %385 = load i32, i32* %number_cuts.addr, align 4, !dbg !18989
  %386 = load i32, i32* %sel, align 4, !dbg !18990
  %add521 = add nsw i32 %386, %385, !dbg !18990
  store i32 %add521, i32* %sel, align 4, !dbg !18990
  br label %if.end522, !dbg !18991

if.end522:                                        ; preds = %if.then520, %land.lhs.true513, %for.body507
  br label %for.inc523, !dbg !18992

for.inc523:                                       ; preds = %if.end522
  %387 = load i32, i32* %a, align 4, !dbg !18993
  %inc524 = add nsw i32 %387, 1, !dbg !18993
  store i32 %inc524, i32* %a, align 4, !dbg !18993
  br label %for.cond502, !dbg !18994, !llvm.loop !18995

for.end525:                                       ; preds = %for.cond502
  %388 = load i32, i32* %sel, align 4, !dbg !18997
  %tobool526 = icmp ne i32 %388, 0, !dbg !18997
  br i1 %tobool526, label %if.then527, label %if.else613, !dbg !18999

if.then527:                                       ; preds = %for.end525
  %389 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !19000
  %390 = load i32, i32* %sel, align 4, !dbg !19002
  %391 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19003
  %pntsv528 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %391, i32 0, i32 7, !dbg !19004
  %392 = load i32, i32* %pntsv528, align 4, !dbg !19004
  %add529 = add nsw i32 %390, %392, !dbg !19005
  %393 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19006
  %pntsu530 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %393, i32 0, i32 6, !dbg !19007
  %394 = load i32, i32* %pntsu530, align 8, !dbg !19007
  %mul531 = mul nsw i32 %add529, %394, !dbg !19008
  %conv532 = sext i32 %mul531 to i64, !dbg !19009
  %mul533 = mul i64 %conv532, 36, !dbg !19010
  %call534 = call i8* %389(i64 %mul533, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.202, i64 0, i64 0)), !dbg !19000
  %395 = bitcast i8* %call534 to %struct.BPoint*, !dbg !19000
  store %struct.BPoint* %395, %struct.BPoint** %bpnew, align 8, !dbg !19011
  store %struct.BPoint* %395, %struct.BPoint** %bpn, align 8, !dbg !19012
  %396 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19013
  %bp535 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %396, i32 0, i32 17, !dbg !19014
  %397 = load %struct.BPoint*, %struct.BPoint** %bp535, align 8, !dbg !19014
  store %struct.BPoint* %397, %struct.BPoint** %bp, align 8, !dbg !19015
  store i32 0, i32* %a, align 4, !dbg !19016
  br label %for.cond536, !dbg !19018

for.cond536:                                      ; preds = %for.inc606, %if.then527
  %398 = load i32, i32* %a, align 4, !dbg !19019
  %399 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19021
  %pntsv537 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %399, i32 0, i32 7, !dbg !19022
  %400 = load i32, i32* %pntsv537, align 4, !dbg !19022
  %cmp538 = icmp slt i32 %398, %400, !dbg !19023
  br i1 %cmp538, label %for.body540, label %for.end608, !dbg !19024

for.body540:                                      ; preds = %for.cond536
  store i32 0, i32* %b, align 4, !dbg !19025
  br label %for.cond541, !dbg !19028

for.cond541:                                      ; preds = %for.inc548, %for.body540
  %401 = load i32, i32* %b, align 4, !dbg !19029
  %402 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19031
  %pntsu542 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %402, i32 0, i32 6, !dbg !19032
  %403 = load i32, i32* %pntsu542, align 8, !dbg !19032
  %cmp543 = icmp slt i32 %401, %403, !dbg !19033
  br i1 %cmp543, label %for.body545, label %for.end550, !dbg !19034

for.body545:                                      ; preds = %for.cond541
  %404 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !19035
  %405 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !19037
  %406 = bitcast %struct.BPoint* %404 to i8*, !dbg !19038
  %407 = bitcast %struct.BPoint* %405 to i8*, !dbg !19038
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %406, i8* align 4 %407, i64 36, i1 false), !dbg !19038
  %408 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !19039
  %409 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !19040
  %410 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !19041
  call void @keyIndex_updateBP(%struct.EditNurb* %408, %struct.BPoint* %409, %struct.BPoint* %410, i32 1), !dbg !19042
  %411 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !19043
  %incdec.ptr546 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %411, i32 1, !dbg !19043
  store %struct.BPoint* %incdec.ptr546, %struct.BPoint** %bpn, align 8, !dbg !19043
  %412 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !19044
  %incdec.ptr547 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %412, i32 1, !dbg !19044
  store %struct.BPoint* %incdec.ptr547, %struct.BPoint** %bp, align 8, !dbg !19044
  br label %for.inc548, !dbg !19045

for.inc548:                                       ; preds = %for.body545
  %413 = load i32, i32* %b, align 4, !dbg !19046
  %inc549 = add nsw i32 %413, 1, !dbg !19046
  store i32 %inc549, i32* %b, align 4, !dbg !19046
  br label %for.cond541, !dbg !19047, !llvm.loop !19048

for.end550:                                       ; preds = %for.cond541
  %414 = load i32, i32* %a, align 4, !dbg !19050
  %415 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19052
  %pntsv551 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %415, i32 0, i32 7, !dbg !19053
  %416 = load i32, i32* %pntsv551, align 4, !dbg !19053
  %sub552 = sub nsw i32 %416, 1, !dbg !19054
  %cmp553 = icmp slt i32 %414, %sub552, !dbg !19055
  br i1 %cmp553, label %land.lhs.true555, label %if.end605, !dbg !19056

land.lhs.true555:                                 ; preds = %for.end550
  %417 = load i32*, i32** %vsel, align 8, !dbg !19057
  %418 = load i32, i32* %a, align 4, !dbg !19058
  %idxprom556 = sext i32 %418 to i64, !dbg !19057
  %arrayidx557 = getelementptr inbounds i32, i32* %417, i64 %idxprom556, !dbg !19057
  %419 = load i32, i32* %arrayidx557, align 4, !dbg !19057
  %420 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19059
  %pntsu558 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %420, i32 0, i32 6, !dbg !19060
  %421 = load i32, i32* %pntsu558, align 8, !dbg !19060
  %cmp559 = icmp eq i32 %419, %421, !dbg !19061
  br i1 %cmp559, label %land.lhs.true561, label %if.end605, !dbg !19062

land.lhs.true561:                                 ; preds = %land.lhs.true555
  %422 = load i32*, i32** %vsel, align 8, !dbg !19063
  %423 = load i32, i32* %a, align 4, !dbg !19064
  %add562 = add nsw i32 %423, 1, !dbg !19065
  %idxprom563 = sext i32 %add562 to i64, !dbg !19063
  %arrayidx564 = getelementptr inbounds i32, i32* %422, i64 %idxprom563, !dbg !19063
  %424 = load i32, i32* %arrayidx564, align 4, !dbg !19063
  %425 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19066
  %pntsu565 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %425, i32 0, i32 6, !dbg !19067
  %426 = load i32, i32* %pntsu565, align 8, !dbg !19067
  %cmp566 = icmp eq i32 %424, %426, !dbg !19068
  br i1 %cmp566, label %if.then568, label %if.end605, !dbg !19069

if.then568:                                       ; preds = %land.lhs.true561
  store i32 0, i32* %i, align 4, !dbg !19070
  br label %for.cond569, !dbg !19073

for.cond569:                                      ; preds = %for.inc602, %if.then568
  %427 = load i32, i32* %i, align 4, !dbg !19074
  %428 = load i32, i32* %number_cuts.addr, align 4, !dbg !19076
  %cmp570 = icmp slt i32 %427, %428, !dbg !19077
  br i1 %cmp570, label %for.body572, label %for.end604, !dbg !19078

for.body572:                                      ; preds = %for.cond569
  %429 = load i32, i32* %i, align 4, !dbg !19079
  %add573 = add nsw i32 %429, 1, !dbg !19081
  %conv574 = sitofp i32 %add573 to float, !dbg !19082
  %430 = load i32, i32* %number_cuts.addr, align 4, !dbg !19083
  %add575 = add nsw i32 %430, 1, !dbg !19084
  %conv576 = sitofp i32 %add575 to float, !dbg !19085
  %div577 = fdiv float %conv574, %conv576, !dbg !19086
  store float %div577, float* %factor, align 4, !dbg !19087
  %431 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !19088
  %432 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19089
  %pntsu578 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %432, i32 0, i32 6, !dbg !19090
  %433 = load i32, i32* %pntsu578, align 8, !dbg !19090
  %idx.ext579 = sext i32 %433 to i64, !dbg !19091
  %idx.neg = sub i64 0, %idx.ext579, !dbg !19091
  %add.ptr580 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %431, i64 %idx.neg, !dbg !19091
  store %struct.BPoint* %add.ptr580, %struct.BPoint** %prevbp, align 8, !dbg !19092
  store i32 0, i32* %b, align 4, !dbg !19093
  br label %for.cond581, !dbg !19095

for.cond581:                                      ; preds = %for.inc595, %for.body572
  %434 = load i32, i32* %b, align 4, !dbg !19096
  %435 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19098
  %pntsu582 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %435, i32 0, i32 6, !dbg !19099
  %436 = load i32, i32* %pntsu582, align 8, !dbg !19099
  %cmp583 = icmp slt i32 %434, %436, !dbg !19100
  br i1 %cmp583, label %for.body585, label %for.end597, !dbg !19101

for.body585:                                      ; preds = %for.cond581
  %437 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !19102
  %438 = load %struct.BPoint*, %struct.BPoint** %prevbp, align 8, !dbg !19104
  %439 = bitcast %struct.BPoint* %437 to i8*, !dbg !19105
  %440 = bitcast %struct.BPoint* %438 to i8*, !dbg !19105
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %439, i8* align 4 %440, i64 36, i1 false), !dbg !19105
  %441 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !19106
  %vec586 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %441, i32 0, i32 0, !dbg !19107
  %arraydecay587 = getelementptr inbounds [4 x float], [4 x float]* %vec586, i64 0, i64 0, !dbg !19106
  %442 = load %struct.BPoint*, %struct.BPoint** %prevbp, align 8, !dbg !19108
  %vec588 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %442, i32 0, i32 0, !dbg !19109
  %arraydecay589 = getelementptr inbounds [4 x float], [4 x float]* %vec588, i64 0, i64 0, !dbg !19108
  %443 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !19110
  %vec590 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %443, i32 0, i32 0, !dbg !19111
  %arraydecay591 = getelementptr inbounds [4 x float], [4 x float]* %vec590, i64 0, i64 0, !dbg !19110
  %444 = load float, float* %factor, align 4, !dbg !19112
  call void @interp_v4_v4v4(float* %arraydecay587, float* %arraydecay589, float* %arraydecay591, float %444), !dbg !19113
  %445 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !19114
  %incdec.ptr592 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %445, i32 1, !dbg !19114
  store %struct.BPoint* %incdec.ptr592, %struct.BPoint** %bpn, align 8, !dbg !19114
  %446 = load %struct.BPoint*, %struct.BPoint** %prevbp, align 8, !dbg !19115
  %incdec.ptr593 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %446, i32 1, !dbg !19115
  store %struct.BPoint* %incdec.ptr593, %struct.BPoint** %prevbp, align 8, !dbg !19115
  %447 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !19116
  %incdec.ptr594 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %447, i32 1, !dbg !19116
  store %struct.BPoint* %incdec.ptr594, %struct.BPoint** %bp, align 8, !dbg !19116
  br label %for.inc595, !dbg !19117

for.inc595:                                       ; preds = %for.body585
  %448 = load i32, i32* %b, align 4, !dbg !19118
  %inc596 = add nsw i32 %448, 1, !dbg !19118
  store i32 %inc596, i32* %b, align 4, !dbg !19118
  br label %for.cond581, !dbg !19119, !llvm.loop !19120

for.end597:                                       ; preds = %for.cond581
  %449 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19122
  %pntsu598 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %449, i32 0, i32 6, !dbg !19123
  %450 = load i32, i32* %pntsu598, align 8, !dbg !19123
  %451 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !19124
  %idx.ext599 = sext i32 %450 to i64, !dbg !19124
  %idx.neg600 = sub i64 0, %idx.ext599, !dbg !19124
  %add.ptr601 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %451, i64 %idx.neg600, !dbg !19124
  store %struct.BPoint* %add.ptr601, %struct.BPoint** %bp, align 8, !dbg !19124
  br label %for.inc602, !dbg !19125

for.inc602:                                       ; preds = %for.end597
  %452 = load i32, i32* %i, align 4, !dbg !19126
  %inc603 = add nsw i32 %452, 1, !dbg !19126
  store i32 %inc603, i32* %i, align 4, !dbg !19126
  br label %for.cond569, !dbg !19127, !llvm.loop !19128

for.end604:                                       ; preds = %for.cond569
  br label %if.end605, !dbg !19130

if.end605:                                        ; preds = %for.end604, %land.lhs.true561, %land.lhs.true555, %for.end550
  br label %for.inc606, !dbg !19131

for.inc606:                                       ; preds = %if.end605
  %453 = load i32, i32* %a, align 4, !dbg !19132
  %inc607 = add nsw i32 %453, 1, !dbg !19132
  store i32 %inc607, i32* %a, align 4, !dbg !19132
  br label %for.cond536, !dbg !19133, !llvm.loop !19134

for.end608:                                       ; preds = %for.cond536
  %454 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !19136
  %455 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19137
  %bp609 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %455, i32 0, i32 17, !dbg !19138
  %456 = load %struct.BPoint*, %struct.BPoint** %bp609, align 8, !dbg !19138
  %457 = bitcast %struct.BPoint* %456 to i8*, !dbg !19137
  call void %454(i8* %457), !dbg !19136
  %458 = load %struct.BPoint*, %struct.BPoint** %bpnew, align 8, !dbg !19139
  %459 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19140
  %bp610 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %459, i32 0, i32 17, !dbg !19141
  store %struct.BPoint* %458, %struct.BPoint** %bp610, align 8, !dbg !19142
  %460 = load i32, i32* %sel, align 4, !dbg !19143
  %461 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19144
  %pntsv611 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %461, i32 0, i32 7, !dbg !19145
  %462 = load i32, i32* %pntsv611, align 4, !dbg !19146
  %add612 = add nsw i32 %462, %460, !dbg !19146
  store i32 %add612, i32* %pntsv611, align 4, !dbg !19146
  %463 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19147
  call void @BKE_nurb_knot_calc_v(%struct.Nurb* %463), !dbg !19148
  br label %if.end710, !dbg !19149

if.else613:                                       ; preds = %for.end525
  store i32 0, i32* %sel, align 4, !dbg !19150
  store i32 0, i32* %a, align 4, !dbg !19152
  br label %for.cond614, !dbg !19154

for.cond614:                                      ; preds = %for.inc635, %if.else613
  %464 = load i32, i32* %a, align 4, !dbg !19155
  %465 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19157
  %pntsu615 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %465, i32 0, i32 6, !dbg !19158
  %466 = load i32, i32* %pntsu615, align 8, !dbg !19158
  %sub616 = sub nsw i32 %466, 1, !dbg !19159
  %cmp617 = icmp slt i32 %464, %sub616, !dbg !19160
  br i1 %cmp617, label %for.body619, label %for.end637, !dbg !19161

for.body619:                                      ; preds = %for.cond614
  %467 = load i32*, i32** %usel, align 8, !dbg !19162
  %468 = load i32, i32* %a, align 4, !dbg !19165
  %idxprom620 = sext i32 %468 to i64, !dbg !19162
  %arrayidx621 = getelementptr inbounds i32, i32* %467, i64 %idxprom620, !dbg !19162
  %469 = load i32, i32* %arrayidx621, align 4, !dbg !19162
  %470 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19166
  %pntsv622 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %470, i32 0, i32 7, !dbg !19167
  %471 = load i32, i32* %pntsv622, align 4, !dbg !19167
  %cmp623 = icmp eq i32 %469, %471, !dbg !19168
  br i1 %cmp623, label %land.lhs.true625, label %if.end634, !dbg !19169

land.lhs.true625:                                 ; preds = %for.body619
  %472 = load i32*, i32** %usel, align 8, !dbg !19170
  %473 = load i32, i32* %a, align 4, !dbg !19171
  %add626 = add nsw i32 %473, 1, !dbg !19172
  %idxprom627 = sext i32 %add626 to i64, !dbg !19170
  %arrayidx628 = getelementptr inbounds i32, i32* %472, i64 %idxprom627, !dbg !19170
  %474 = load i32, i32* %arrayidx628, align 4, !dbg !19170
  %475 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19173
  %pntsv629 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %475, i32 0, i32 7, !dbg !19174
  %476 = load i32, i32* %pntsv629, align 4, !dbg !19174
  %cmp630 = icmp eq i32 %474, %476, !dbg !19175
  br i1 %cmp630, label %if.then632, label %if.end634, !dbg !19176

if.then632:                                       ; preds = %land.lhs.true625
  %477 = load i32, i32* %number_cuts.addr, align 4, !dbg !19177
  %478 = load i32, i32* %sel, align 4, !dbg !19178
  %add633 = add nsw i32 %478, %477, !dbg !19178
  store i32 %add633, i32* %sel, align 4, !dbg !19178
  br label %if.end634, !dbg !19179

if.end634:                                        ; preds = %if.then632, %land.lhs.true625, %for.body619
  br label %for.inc635, !dbg !19180

for.inc635:                                       ; preds = %if.end634
  %479 = load i32, i32* %a, align 4, !dbg !19181
  %inc636 = add nsw i32 %479, 1, !dbg !19181
  store i32 %inc636, i32* %a, align 4, !dbg !19181
  br label %for.cond614, !dbg !19182, !llvm.loop !19183

for.end637:                                       ; preds = %for.cond614
  %480 = load i32, i32* %sel, align 4, !dbg !19185
  %tobool638 = icmp ne i32 %480, 0, !dbg !19185
  br i1 %tobool638, label %if.then639, label %if.end709, !dbg !19187

if.then639:                                       ; preds = %for.end637
  %481 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !19188
  %482 = load i32, i32* %sel, align 4, !dbg !19190
  %483 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19191
  %pntsu640 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %483, i32 0, i32 6, !dbg !19192
  %484 = load i32, i32* %pntsu640, align 8, !dbg !19192
  %add641 = add nsw i32 %482, %484, !dbg !19193
  %485 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19194
  %pntsv642 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %485, i32 0, i32 7, !dbg !19195
  %486 = load i32, i32* %pntsv642, align 4, !dbg !19195
  %mul643 = mul nsw i32 %add641, %486, !dbg !19196
  %conv644 = sext i32 %mul643 to i64, !dbg !19197
  %mul645 = mul i64 %conv644, 36, !dbg !19198
  %call646 = call i8* %481(i64 %mul645, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.202, i64 0, i64 0)), !dbg !19188
  %487 = bitcast i8* %call646 to %struct.BPoint*, !dbg !19188
  store %struct.BPoint* %487, %struct.BPoint** %bpnew, align 8, !dbg !19199
  store %struct.BPoint* %487, %struct.BPoint** %bpn, align 8, !dbg !19200
  %488 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19201
  %bp647 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %488, i32 0, i32 17, !dbg !19202
  %489 = load %struct.BPoint*, %struct.BPoint** %bp647, align 8, !dbg !19202
  store %struct.BPoint* %489, %struct.BPoint** %bp, align 8, !dbg !19203
  store i32 0, i32* %a, align 4, !dbg !19204
  br label %for.cond648, !dbg !19206

for.cond648:                                      ; preds = %for.inc702, %if.then639
  %490 = load i32, i32* %a, align 4, !dbg !19207
  %491 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19209
  %pntsv649 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %491, i32 0, i32 7, !dbg !19210
  %492 = load i32, i32* %pntsv649, align 4, !dbg !19210
  %cmp650 = icmp slt i32 %490, %492, !dbg !19211
  br i1 %cmp650, label %for.body652, label %for.end704, !dbg !19212

for.body652:                                      ; preds = %for.cond648
  store i32 0, i32* %b, align 4, !dbg !19213
  br label %for.cond653, !dbg !19216

for.cond653:                                      ; preds = %for.inc699, %for.body652
  %493 = load i32, i32* %b, align 4, !dbg !19217
  %494 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19219
  %pntsu654 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %494, i32 0, i32 6, !dbg !19220
  %495 = load i32, i32* %pntsu654, align 8, !dbg !19220
  %cmp655 = icmp slt i32 %493, %495, !dbg !19221
  br i1 %cmp655, label %for.body657, label %for.end701, !dbg !19222

for.body657:                                      ; preds = %for.cond653
  %496 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !19223
  %497 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !19225
  %498 = bitcast %struct.BPoint* %496 to i8*, !dbg !19226
  %499 = bitcast %struct.BPoint* %497 to i8*, !dbg !19226
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %498, i8* align 4 %499, i64 36, i1 false), !dbg !19226
  %500 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !19227
  %501 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !19228
  %502 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !19229
  call void @keyIndex_updateBP(%struct.EditNurb* %500, %struct.BPoint* %501, %struct.BPoint* %502, i32 1), !dbg !19230
  %503 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !19231
  %incdec.ptr658 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %503, i32 1, !dbg !19231
  store %struct.BPoint* %incdec.ptr658, %struct.BPoint** %bpn, align 8, !dbg !19231
  %504 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !19232
  %incdec.ptr659 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %504, i32 1, !dbg !19232
  store %struct.BPoint* %incdec.ptr659, %struct.BPoint** %bp, align 8, !dbg !19232
  %505 = load i32, i32* %b, align 4, !dbg !19233
  %506 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19235
  %pntsu660 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %506, i32 0, i32 6, !dbg !19236
  %507 = load i32, i32* %pntsu660, align 8, !dbg !19236
  %sub661 = sub nsw i32 %507, 1, !dbg !19237
  %cmp662 = icmp slt i32 %505, %sub661, !dbg !19238
  br i1 %cmp662, label %land.lhs.true664, label %if.end698, !dbg !19239

land.lhs.true664:                                 ; preds = %for.body657
  %508 = load i32*, i32** %usel, align 8, !dbg !19240
  %509 = load i32, i32* %b, align 4, !dbg !19241
  %idxprom665 = sext i32 %509 to i64, !dbg !19240
  %arrayidx666 = getelementptr inbounds i32, i32* %508, i64 %idxprom665, !dbg !19240
  %510 = load i32, i32* %arrayidx666, align 4, !dbg !19240
  %511 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19242
  %pntsv667 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %511, i32 0, i32 7, !dbg !19243
  %512 = load i32, i32* %pntsv667, align 4, !dbg !19243
  %cmp668 = icmp eq i32 %510, %512, !dbg !19244
  br i1 %cmp668, label %land.lhs.true670, label %if.end698, !dbg !19245

land.lhs.true670:                                 ; preds = %land.lhs.true664
  %513 = load i32*, i32** %usel, align 8, !dbg !19246
  %514 = load i32, i32* %b, align 4, !dbg !19247
  %add671 = add nsw i32 %514, 1, !dbg !19248
  %idxprom672 = sext i32 %add671 to i64, !dbg !19246
  %arrayidx673 = getelementptr inbounds i32, i32* %513, i64 %idxprom672, !dbg !19246
  %515 = load i32, i32* %arrayidx673, align 4, !dbg !19246
  %516 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19249
  %pntsv674 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %516, i32 0, i32 7, !dbg !19250
  %517 = load i32, i32* %pntsv674, align 4, !dbg !19250
  %cmp675 = icmp eq i32 %515, %517, !dbg !19251
  br i1 %cmp675, label %if.then677, label %if.end698, !dbg !19252

if.then677:                                       ; preds = %land.lhs.true670
  store i32 0, i32* %i, align 4, !dbg !19253
  br label %for.cond678, !dbg !19256

for.cond678:                                      ; preds = %for.inc695, %if.then677
  %518 = load i32, i32* %i, align 4, !dbg !19257
  %519 = load i32, i32* %number_cuts.addr, align 4, !dbg !19259
  %cmp679 = icmp slt i32 %518, %519, !dbg !19260
  br i1 %cmp679, label %for.body681, label %for.end697, !dbg !19261

for.body681:                                      ; preds = %for.cond678
  %520 = load i32, i32* %i, align 4, !dbg !19262
  %add682 = add nsw i32 %520, 1, !dbg !19264
  %conv683 = sitofp i32 %add682 to float, !dbg !19265
  %521 = load i32, i32* %number_cuts.addr, align 4, !dbg !19266
  %add684 = add nsw i32 %521, 1, !dbg !19267
  %conv685 = sitofp i32 %add684 to float, !dbg !19268
  %div686 = fdiv float %conv683, %conv685, !dbg !19269
  store float %div686, float* %factor, align 4, !dbg !19270
  %522 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !19271
  %add.ptr687 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %522, i64 -1, !dbg !19272
  store %struct.BPoint* %add.ptr687, %struct.BPoint** %prevbp, align 8, !dbg !19273
  %523 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !19274
  %524 = load %struct.BPoint*, %struct.BPoint** %prevbp, align 8, !dbg !19275
  %525 = bitcast %struct.BPoint* %523 to i8*, !dbg !19276
  %526 = bitcast %struct.BPoint* %524 to i8*, !dbg !19276
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %525, i8* align 4 %526, i64 36, i1 false), !dbg !19276
  %527 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !19277
  %vec688 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %527, i32 0, i32 0, !dbg !19278
  %arraydecay689 = getelementptr inbounds [4 x float], [4 x float]* %vec688, i64 0, i64 0, !dbg !19277
  %528 = load %struct.BPoint*, %struct.BPoint** %prevbp, align 8, !dbg !19279
  %vec690 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %528, i32 0, i32 0, !dbg !19280
  %arraydecay691 = getelementptr inbounds [4 x float], [4 x float]* %vec690, i64 0, i64 0, !dbg !19279
  %529 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !19281
  %vec692 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %529, i32 0, i32 0, !dbg !19282
  %arraydecay693 = getelementptr inbounds [4 x float], [4 x float]* %vec692, i64 0, i64 0, !dbg !19281
  %530 = load float, float* %factor, align 4, !dbg !19283
  call void @interp_v4_v4v4(float* %arraydecay689, float* %arraydecay691, float* %arraydecay693, float %530), !dbg !19284
  %531 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !19285
  %incdec.ptr694 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %531, i32 1, !dbg !19285
  store %struct.BPoint* %incdec.ptr694, %struct.BPoint** %bpn, align 8, !dbg !19285
  br label %for.inc695, !dbg !19286

for.inc695:                                       ; preds = %for.body681
  %532 = load i32, i32* %i, align 4, !dbg !19287
  %inc696 = add nsw i32 %532, 1, !dbg !19287
  store i32 %inc696, i32* %i, align 4, !dbg !19287
  br label %for.cond678, !dbg !19288, !llvm.loop !19289

for.end697:                                       ; preds = %for.cond678
  br label %if.end698, !dbg !19291

if.end698:                                        ; preds = %for.end697, %land.lhs.true670, %land.lhs.true664, %for.body657
  br label %for.inc699, !dbg !19292

for.inc699:                                       ; preds = %if.end698
  %533 = load i32, i32* %b, align 4, !dbg !19293
  %inc700 = add nsw i32 %533, 1, !dbg !19293
  store i32 %inc700, i32* %b, align 4, !dbg !19293
  br label %for.cond653, !dbg !19294, !llvm.loop !19295

for.end701:                                       ; preds = %for.cond653
  br label %for.inc702, !dbg !19297

for.inc702:                                       ; preds = %for.end701
  %534 = load i32, i32* %a, align 4, !dbg !19298
  %inc703 = add nsw i32 %534, 1, !dbg !19298
  store i32 %inc703, i32* %a, align 4, !dbg !19298
  br label %for.cond648, !dbg !19299, !llvm.loop !19300

for.end704:                                       ; preds = %for.cond648
  %535 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !19302
  %536 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19303
  %bp705 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %536, i32 0, i32 17, !dbg !19304
  %537 = load %struct.BPoint*, %struct.BPoint** %bp705, align 8, !dbg !19304
  %538 = bitcast %struct.BPoint* %537 to i8*, !dbg !19303
  call void %535(i8* %538), !dbg !19302
  %539 = load %struct.BPoint*, %struct.BPoint** %bpnew, align 8, !dbg !19305
  %540 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19306
  %bp706 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %540, i32 0, i32 17, !dbg !19307
  store %struct.BPoint* %539, %struct.BPoint** %bp706, align 8, !dbg !19308
  %541 = load i32, i32* %sel, align 4, !dbg !19309
  %542 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19310
  %pntsu707 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %542, i32 0, i32 6, !dbg !19311
  %543 = load i32, i32* %pntsu707, align 8, !dbg !19312
  %add708 = add nsw i32 %543, %541, !dbg !19312
  store i32 %add708, i32* %pntsu707, align 8, !dbg !19312
  %544 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19313
  call void @BKE_nurb_knot_calc_u(%struct.Nurb* %544), !dbg !19314
  br label %if.end709, !dbg !19315

if.end709:                                        ; preds = %for.end704, %for.end637
  br label %if.end710

if.end710:                                        ; preds = %if.end709, %for.end608
  br label %if.end711

if.end711:                                        ; preds = %if.end710, %for.end488
  %545 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !19316
  %546 = load i32*, i32** %usel, align 8, !dbg !19317
  %547 = bitcast i32* %546 to i8*, !dbg !19317
  call void %545(i8* %547), !dbg !19316
  %548 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !19318
  %549 = load i32*, i32** %vsel, align 8, !dbg !19319
  %550 = bitcast i32* %549 to i8*, !dbg !19319
  call void %548(i8* %550), !dbg !19318
  br label %if.end712, !dbg !19320

if.end712:                                        ; preds = %if.end711, %if.else310
  br label %if.end713

if.end713:                                        ; preds = %if.end712, %if.end309
  br label %if.end714

if.end714:                                        ; preds = %if.end713, %if.end218
  br label %for.inc715, !dbg !19321

for.inc715:                                       ; preds = %if.end714
  %551 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19322
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %551, i32 0, i32 0, !dbg !19323
  %552 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !19323
  store %struct.Nurb* %552, %struct.Nurb** %nu, align 8, !dbg !19324
  br label %for.cond, !dbg !19325, !llvm.loop !19326

for.end716:                                       ; preds = %for.cond
  ret void, !dbg !19328
}

declare dso_local %struct.BezTriple* @BKE_nurb_bezt_get_next(%struct.Nurb*, %struct.BezTriple*) #2

declare dso_local void @interp_v3_v3v3(float*, float*, float*, float) #2

declare dso_local %struct.BPoint* @BKE_nurb_bpoint_get_next(%struct.Nurb*, %struct.BPoint*) #2

declare dso_local void @interp_v4_v4v4(float*, float*, float*, float) #2

declare dso_local zeroext i8 @BKE_nurb_type_convert(%struct.Nurb*, i16 signext, i8 zeroext) #2

declare dso_local void @BKE_nurbList_handles_set(%struct.ListBase*, i8 zeroext) #2

declare dso_local void @BKE_nurbList_handles_recalculate(%struct.ListBase*, i8 zeroext, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @isNurbsel_count(%struct.Curve* %cu, %struct.Nurb* %nu) #0 !dbg !19329 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %nu.addr = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  %sel = alloca i32, align 4
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !19332, metadata !DIExpression()), !dbg !19333
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !19334, metadata !DIExpression()), !dbg !19335
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !19336, metadata !DIExpression()), !dbg !19337
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !19338, metadata !DIExpression()), !dbg !19339
  call void @llvm.dbg.declare(metadata i32* %a, metadata !19340, metadata !DIExpression()), !dbg !19341
  call void @llvm.dbg.declare(metadata i32* %sel, metadata !19342, metadata !DIExpression()), !dbg !19343
  store i32 0, i32* %sel, align 4, !dbg !19343
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !19344
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %0, i32 0, i32 2, !dbg !19346
  %1 = load i16, i16* %type, align 8, !dbg !19346
  %conv = sext i16 %1 to i32, !dbg !19344
  %cmp = icmp eq i32 %conv, 1, !dbg !19347
  br i1 %cmp, label %if.then, label %if.else, !dbg !19348

if.then:                                          ; preds = %entry
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !19349
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %2, i32 0, i32 18, !dbg !19351
  %3 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !19351
  store %struct.BezTriple* %3, %struct.BezTriple** %bezt, align 8, !dbg !19352
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !19353
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 6, !dbg !19354
  %5 = load i32, i32* %pntsu, align 8, !dbg !19354
  store i32 %5, i32* %a, align 4, !dbg !19355
  br label %while.cond, !dbg !19356

while.cond:                                       ; preds = %if.end, %if.then
  %6 = load i32, i32* %a, align 4, !dbg !19357
  %dec = add nsw i32 %6, -1, !dbg !19357
  store i32 %dec, i32* %a, align 4, !dbg !19357
  %tobool = icmp ne i32 %6, 0, !dbg !19356
  br i1 %tobool, label %while.body, label %while.end, !dbg !19356

while.body:                                       ; preds = %while.cond
  %7 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !19358
  %drawflag = getelementptr inbounds %struct.Curve, %struct.Curve* %7, i32 0, i32 16, !dbg !19358
  %8 = load i16, i16* %drawflag, align 8, !dbg !19358
  %conv3 = sext i16 %8 to i32, !dbg !19358
  %and = and i32 %conv3, 1, !dbg !19358
  %tobool4 = icmp ne i32 %and, 0, !dbg !19358
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !19361

cond.true:                                        ; preds = %while.body
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !19358
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %9, i32 0, i32 8, !dbg !19358
  %10 = load i8, i8* %f2, align 4, !dbg !19358
  %conv5 = zext i8 %10 to i32, !dbg !19358
  %and6 = and i32 %conv5, 1, !dbg !19358
  %tobool7 = icmp ne i32 %and6, 0, !dbg !19358
  br i1 %tobool7, label %if.then19, label %if.end, !dbg !19358

cond.false:                                       ; preds = %while.body
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !19358
  %f28 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %11, i32 0, i32 8, !dbg !19358
  %12 = load i8, i8* %f28, align 4, !dbg !19358
  %conv9 = zext i8 %12 to i32, !dbg !19358
  %and10 = and i32 %conv9, 1, !dbg !19358
  %tobool11 = icmp ne i32 %and10, 0, !dbg !19358
  br i1 %tobool11, label %if.then19, label %lor.lhs.false, !dbg !19358

lor.lhs.false:                                    ; preds = %cond.false
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !19358
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %13, i32 0, i32 7, !dbg !19358
  %14 = load i8, i8* %f1, align 1, !dbg !19358
  %conv12 = zext i8 %14 to i32, !dbg !19358
  %and13 = and i32 %conv12, 1, !dbg !19358
  %tobool14 = icmp ne i32 %and13, 0, !dbg !19358
  br i1 %tobool14, label %if.then19, label %lor.lhs.false15, !dbg !19358

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %15 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !19358
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %15, i32 0, i32 9, !dbg !19358
  %16 = load i8, i8* %f3, align 1, !dbg !19358
  %conv16 = zext i8 %16 to i32, !dbg !19358
  %and17 = and i32 %conv16, 1, !dbg !19358
  %tobool18 = icmp ne i32 %and17, 0, !dbg !19358
  br i1 %tobool18, label %if.then19, label %if.end, !dbg !19361

if.then19:                                        ; preds = %lor.lhs.false15, %lor.lhs.false, %cond.false, %cond.true
  %17 = load i32, i32* %sel, align 4, !dbg !19362
  %inc = add nsw i32 %17, 1, !dbg !19362
  store i32 %inc, i32* %sel, align 4, !dbg !19362
  br label %if.end, !dbg !19363

if.end:                                           ; preds = %if.then19, %lor.lhs.false15, %cond.true
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !19364
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %18, i32 1, !dbg !19364
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !19364
  br label %while.cond, !dbg !19356, !llvm.loop !19365

while.end:                                        ; preds = %while.cond
  br label %if.end35, !dbg !19367

if.else:                                          ; preds = %entry
  %19 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !19368
  %bp20 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %19, i32 0, i32 17, !dbg !19370
  %20 = load %struct.BPoint*, %struct.BPoint** %bp20, align 8, !dbg !19370
  store %struct.BPoint* %20, %struct.BPoint** %bp, align 8, !dbg !19371
  %21 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !19372
  %pntsu21 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 6, !dbg !19373
  %22 = load i32, i32* %pntsu21, align 8, !dbg !19373
  %23 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !19374
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %23, i32 0, i32 7, !dbg !19375
  %24 = load i32, i32* %pntsv, align 4, !dbg !19375
  %mul = mul nsw i32 %22, %24, !dbg !19376
  store i32 %mul, i32* %a, align 4, !dbg !19377
  br label %while.cond22, !dbg !19378

while.cond22:                                     ; preds = %if.end32, %if.else
  %25 = load i32, i32* %a, align 4, !dbg !19379
  %dec23 = add nsw i32 %25, -1, !dbg !19379
  store i32 %dec23, i32* %a, align 4, !dbg !19379
  %tobool24 = icmp ne i32 %25, 0, !dbg !19378
  br i1 %tobool24, label %while.body25, label %while.end34, !dbg !19378

while.body25:                                     ; preds = %while.cond22
  %26 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !19380
  %f126 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %26, i32 0, i32 3, !dbg !19383
  %27 = load i16, i16* %f126, align 4, !dbg !19383
  %conv27 = sext i16 %27 to i32, !dbg !19380
  %and28 = and i32 %conv27, 1, !dbg !19384
  %tobool29 = icmp ne i32 %and28, 0, !dbg !19384
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !19385

if.then30:                                        ; preds = %while.body25
  %28 = load i32, i32* %sel, align 4, !dbg !19386
  %inc31 = add nsw i32 %28, 1, !dbg !19386
  store i32 %inc31, i32* %sel, align 4, !dbg !19386
  br label %if.end32, !dbg !19387

if.end32:                                         ; preds = %if.then30, %while.body25
  %29 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !19388
  %incdec.ptr33 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %29, i32 1, !dbg !19388
  store %struct.BPoint* %incdec.ptr33, %struct.BPoint** %bp, align 8, !dbg !19388
  br label %while.cond22, !dbg !19378, !llvm.loop !19389

while.end34:                                      ; preds = %while.cond22
  br label %if.end35

if.end35:                                         ; preds = %while.end34, %while.end
  %30 = load i32, i32* %sel, align 4, !dbg !19391
  ret i32 %30, !dbg !19392
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @merge_nurb(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !19393 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %nus1 = alloca %struct.NurbSort*, align 8
  %nus2 = alloca %struct.NurbSort*, align 8
  %ok = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !19394, metadata !DIExpression()), !dbg !19395
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !19396, metadata !DIExpression()), !dbg !19397
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !19398, metadata !DIExpression()), !dbg !19399
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19400
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !19401
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !19399
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !19402, metadata !DIExpression()), !dbg !19403
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !19404
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !19405
  %2 = load i8*, i8** %data, align 8, !dbg !19405
  %3 = bitcast i8* %2 to %struct.Curve*, !dbg !19404
  store %struct.Curve* %3, %struct.Curve** %cu, align 8, !dbg !19403
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !19406, metadata !DIExpression()), !dbg !19407
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !19408
  %call1 = call %struct.ListBase* @object_editcurve_get(%struct.Object* %4), !dbg !19409
  store %struct.ListBase* %call1, %struct.ListBase** %editnurb, align 8, !dbg !19407
  call void @llvm.dbg.declare(metadata %struct.NurbSort** %nus1, metadata !19410, metadata !DIExpression()), !dbg !19411
  call void @llvm.dbg.declare(metadata %struct.NurbSort** %nus2, metadata !19412, metadata !DIExpression()), !dbg !19413
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !19414, metadata !DIExpression()), !dbg !19415
  store i8 1, i8* %ok, align 1, !dbg !19415
  %5 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !19416
  call void @make_selection_list_nurb(%struct.ListBase* %5), !dbg !19417
  %6 = load i8*, i8** getelementptr inbounds (%struct.ListBase, %struct.ListBase* @nsortbase, i32 0, i32 0), align 8, !dbg !19418
  %7 = load i8*, i8** getelementptr inbounds (%struct.ListBase, %struct.ListBase* @nsortbase, i32 0, i32 1), align 8, !dbg !19420
  %cmp = icmp eq i8* %6, %7, !dbg !19421
  br i1 %cmp, label %if.then, label %if.end, !dbg !19422

if.then:                                          ; preds = %entry
  call void @BLI_freelistN(%struct.ListBase* @nsortbase), !dbg !19423
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !19425
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 8, !dbg !19426
  %9 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !19426
  call void @BKE_report(%struct.ReportList* %9, i32 32, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.208, i64 0, i64 0)), !dbg !19427
  store i32 2, i32* %retval, align 4, !dbg !19428
  br label %return, !dbg !19428

if.end:                                           ; preds = %entry
  %10 = load i8*, i8** getelementptr inbounds (%struct.ListBase, %struct.ListBase* @nsortbase, i32 0, i32 0), align 8, !dbg !19429
  %11 = bitcast i8* %10 to %struct.NurbSort*, !dbg !19430
  store %struct.NurbSort* %11, %struct.NurbSort** %nus1, align 8, !dbg !19431
  %12 = load %struct.NurbSort*, %struct.NurbSort** %nus1, align 8, !dbg !19432
  %next = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %12, i32 0, i32 0, !dbg !19433
  %13 = load %struct.NurbSort*, %struct.NurbSort** %next, align 8, !dbg !19433
  store %struct.NurbSort* %13, %struct.NurbSort** %nus2, align 8, !dbg !19434
  %14 = load %struct.NurbSort*, %struct.NurbSort** %nus1, align 8, !dbg !19435
  %nu = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %14, i32 0, i32 2, !dbg !19437
  %15 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19437
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %15, i32 0, i32 7, !dbg !19438
  %16 = load i32, i32* %pntsv, align 4, !dbg !19438
  %cmp2 = icmp eq i32 %16, 1, !dbg !19439
  br i1 %cmp2, label %if.then3, label %if.else15, !dbg !19440

if.then3:                                         ; preds = %if.end
  %17 = load %struct.NurbSort*, %struct.NurbSort** %nus1, align 8, !dbg !19441
  %nu4 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %17, i32 0, i32 2, !dbg !19444
  %18 = load %struct.Nurb*, %struct.Nurb** %nu4, align 8, !dbg !19444
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %18, i32 0, i32 6, !dbg !19445
  %19 = load i32, i32* %pntsu, align 8, !dbg !19445
  %20 = load %struct.NurbSort*, %struct.NurbSort** %nus2, align 8, !dbg !19446
  %nu5 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %20, i32 0, i32 2, !dbg !19447
  %21 = load %struct.Nurb*, %struct.Nurb** %nu5, align 8, !dbg !19447
  %pntsu6 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 6, !dbg !19448
  %22 = load i32, i32* %pntsu6, align 8, !dbg !19448
  %cmp7 = icmp eq i32 %19, %22, !dbg !19449
  br i1 %cmp7, label %if.then13, label %lor.lhs.false, !dbg !19450

lor.lhs.false:                                    ; preds = %if.then3
  %23 = load %struct.NurbSort*, %struct.NurbSort** %nus1, align 8, !dbg !19451
  %nu8 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %23, i32 0, i32 2, !dbg !19452
  %24 = load %struct.Nurb*, %struct.Nurb** %nu8, align 8, !dbg !19452
  %pntsu9 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %24, i32 0, i32 6, !dbg !19453
  %25 = load i32, i32* %pntsu9, align 8, !dbg !19453
  %26 = load %struct.NurbSort*, %struct.NurbSort** %nus2, align 8, !dbg !19454
  %nu10 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %26, i32 0, i32 2, !dbg !19455
  %27 = load %struct.Nurb*, %struct.Nurb** %nu10, align 8, !dbg !19455
  %pntsv11 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %27, i32 0, i32 7, !dbg !19456
  %28 = load i32, i32* %pntsv11, align 4, !dbg !19456
  %cmp12 = icmp eq i32 %25, %28, !dbg !19457
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !19458

if.then13:                                        ; preds = %lor.lhs.false, %if.then3
  br label %if.end14, !dbg !19459

if.else:                                          ; preds = %lor.lhs.false
  store i8 0, i8* %ok, align 1, !dbg !19461
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then13
  br label %if.end64, !dbg !19463

if.else15:                                        ; preds = %if.end
  %29 = load %struct.NurbSort*, %struct.NurbSort** %nus2, align 8, !dbg !19464
  %nu16 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %29, i32 0, i32 2, !dbg !19466
  %30 = load %struct.Nurb*, %struct.Nurb** %nu16, align 8, !dbg !19466
  %pntsv17 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %30, i32 0, i32 7, !dbg !19467
  %31 = load i32, i32* %pntsv17, align 4, !dbg !19467
  %cmp18 = icmp eq i32 %31, 1, !dbg !19468
  br i1 %cmp18, label %if.then19, label %if.else34, !dbg !19469

if.then19:                                        ; preds = %if.else15
  %32 = load %struct.NurbSort*, %struct.NurbSort** %nus2, align 8, !dbg !19470
  %nu20 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %32, i32 0, i32 2, !dbg !19473
  %33 = load %struct.Nurb*, %struct.Nurb** %nu20, align 8, !dbg !19473
  %pntsu21 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %33, i32 0, i32 6, !dbg !19474
  %34 = load i32, i32* %pntsu21, align 8, !dbg !19474
  %35 = load %struct.NurbSort*, %struct.NurbSort** %nus1, align 8, !dbg !19475
  %nu22 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %35, i32 0, i32 2, !dbg !19476
  %36 = load %struct.Nurb*, %struct.Nurb** %nu22, align 8, !dbg !19476
  %pntsu23 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %36, i32 0, i32 6, !dbg !19477
  %37 = load i32, i32* %pntsu23, align 8, !dbg !19477
  %cmp24 = icmp eq i32 %34, %37, !dbg !19478
  br i1 %cmp24, label %if.then31, label %lor.lhs.false25, !dbg !19479

lor.lhs.false25:                                  ; preds = %if.then19
  %38 = load %struct.NurbSort*, %struct.NurbSort** %nus2, align 8, !dbg !19480
  %nu26 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %38, i32 0, i32 2, !dbg !19481
  %39 = load %struct.Nurb*, %struct.Nurb** %nu26, align 8, !dbg !19481
  %pntsu27 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %39, i32 0, i32 6, !dbg !19482
  %40 = load i32, i32* %pntsu27, align 8, !dbg !19482
  %41 = load %struct.NurbSort*, %struct.NurbSort** %nus1, align 8, !dbg !19483
  %nu28 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %41, i32 0, i32 2, !dbg !19484
  %42 = load %struct.Nurb*, %struct.Nurb** %nu28, align 8, !dbg !19484
  %pntsv29 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %42, i32 0, i32 7, !dbg !19485
  %43 = load i32, i32* %pntsv29, align 4, !dbg !19485
  %cmp30 = icmp eq i32 %40, %43, !dbg !19486
  br i1 %cmp30, label %if.then31, label %if.else32, !dbg !19487

if.then31:                                        ; preds = %lor.lhs.false25, %if.then19
  br label %if.end33, !dbg !19488

if.else32:                                        ; preds = %lor.lhs.false25
  store i8 0, i8* %ok, align 1, !dbg !19490
  br label %if.end33

if.end33:                                         ; preds = %if.else32, %if.then31
  br label %if.end63, !dbg !19492

if.else34:                                        ; preds = %if.else15
  %44 = load %struct.NurbSort*, %struct.NurbSort** %nus1, align 8, !dbg !19493
  %nu35 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %44, i32 0, i32 2, !dbg !19495
  %45 = load %struct.Nurb*, %struct.Nurb** %nu35, align 8, !dbg !19495
  %pntsu36 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %45, i32 0, i32 6, !dbg !19496
  %46 = load i32, i32* %pntsu36, align 8, !dbg !19496
  %47 = load %struct.NurbSort*, %struct.NurbSort** %nus2, align 8, !dbg !19497
  %nu37 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %47, i32 0, i32 2, !dbg !19498
  %48 = load %struct.Nurb*, %struct.Nurb** %nu37, align 8, !dbg !19498
  %pntsu38 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %48, i32 0, i32 6, !dbg !19499
  %49 = load i32, i32* %pntsu38, align 8, !dbg !19499
  %cmp39 = icmp eq i32 %46, %49, !dbg !19500
  br i1 %cmp39, label %if.then46, label %lor.lhs.false40, !dbg !19501

lor.lhs.false40:                                  ; preds = %if.else34
  %50 = load %struct.NurbSort*, %struct.NurbSort** %nus1, align 8, !dbg !19502
  %nu41 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %50, i32 0, i32 2, !dbg !19503
  %51 = load %struct.Nurb*, %struct.Nurb** %nu41, align 8, !dbg !19503
  %pntsv42 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %51, i32 0, i32 7, !dbg !19504
  %52 = load i32, i32* %pntsv42, align 4, !dbg !19504
  %53 = load %struct.NurbSort*, %struct.NurbSort** %nus2, align 8, !dbg !19505
  %nu43 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %53, i32 0, i32 2, !dbg !19506
  %54 = load %struct.Nurb*, %struct.Nurb** %nu43, align 8, !dbg !19506
  %pntsv44 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %54, i32 0, i32 7, !dbg !19507
  %55 = load i32, i32* %pntsv44, align 4, !dbg !19507
  %cmp45 = icmp eq i32 %52, %55, !dbg !19508
  br i1 %cmp45, label %if.then46, label %if.else47, !dbg !19509

if.then46:                                        ; preds = %lor.lhs.false40, %if.else34
  br label %if.end62, !dbg !19510

if.else47:                                        ; preds = %lor.lhs.false40
  %56 = load %struct.NurbSort*, %struct.NurbSort** %nus1, align 8, !dbg !19512
  %nu48 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %56, i32 0, i32 2, !dbg !19514
  %57 = load %struct.Nurb*, %struct.Nurb** %nu48, align 8, !dbg !19514
  %pntsu49 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %57, i32 0, i32 6, !dbg !19515
  %58 = load i32, i32* %pntsu49, align 8, !dbg !19515
  %59 = load %struct.NurbSort*, %struct.NurbSort** %nus2, align 8, !dbg !19516
  %nu50 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %59, i32 0, i32 2, !dbg !19517
  %60 = load %struct.Nurb*, %struct.Nurb** %nu50, align 8, !dbg !19517
  %pntsv51 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %60, i32 0, i32 7, !dbg !19518
  %61 = load i32, i32* %pntsv51, align 4, !dbg !19518
  %cmp52 = icmp eq i32 %58, %61, !dbg !19519
  br i1 %cmp52, label %if.then59, label %lor.lhs.false53, !dbg !19520

lor.lhs.false53:                                  ; preds = %if.else47
  %62 = load %struct.NurbSort*, %struct.NurbSort** %nus1, align 8, !dbg !19521
  %nu54 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %62, i32 0, i32 2, !dbg !19522
  %63 = load %struct.Nurb*, %struct.Nurb** %nu54, align 8, !dbg !19522
  %pntsv55 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %63, i32 0, i32 7, !dbg !19523
  %64 = load i32, i32* %pntsv55, align 4, !dbg !19523
  %65 = load %struct.NurbSort*, %struct.NurbSort** %nus2, align 8, !dbg !19524
  %nu56 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %65, i32 0, i32 2, !dbg !19525
  %66 = load %struct.Nurb*, %struct.Nurb** %nu56, align 8, !dbg !19525
  %pntsu57 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %66, i32 0, i32 6, !dbg !19526
  %67 = load i32, i32* %pntsu57, align 8, !dbg !19526
  %cmp58 = icmp eq i32 %64, %67, !dbg !19527
  br i1 %cmp58, label %if.then59, label %if.else60, !dbg !19528

if.then59:                                        ; preds = %lor.lhs.false53, %if.else47
  br label %if.end61, !dbg !19529

if.else60:                                        ; preds = %lor.lhs.false53
  store i8 0, i8* %ok, align 1, !dbg !19531
  br label %if.end61

if.end61:                                         ; preds = %if.else60, %if.then59
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then46
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.end33
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.end14
  %68 = load i8, i8* %ok, align 1, !dbg !19533
  %conv = zext i8 %68 to i32, !dbg !19533
  %cmp65 = icmp eq i32 %conv, 0, !dbg !19535
  br i1 %cmp65, label %if.then67, label %if.end69, !dbg !19536

if.then67:                                        ; preds = %if.end64
  %69 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !19537
  %reports68 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %69, i32 0, i32 8, !dbg !19539
  %70 = load %struct.ReportList*, %struct.ReportList** %reports68, align 8, !dbg !19539
  call void @BKE_report(%struct.ReportList* %70, i32 32, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.209, i64 0, i64 0)), !dbg !19540
  call void @BLI_freelistN(%struct.ListBase* @nsortbase), !dbg !19541
  store i32 2, i32* %retval, align 4, !dbg !19542
  br label %return, !dbg !19542

if.end69:                                         ; preds = %if.end64
  br label %while.cond, !dbg !19543

while.cond:                                       ; preds = %while.body, %if.end69
  %71 = load %struct.NurbSort*, %struct.NurbSort** %nus2, align 8, !dbg !19544
  %tobool = icmp ne %struct.NurbSort* %71, null, !dbg !19543
  br i1 %tobool, label %while.body, label %while.end, !dbg !19543

while.body:                                       ; preds = %while.cond
  %72 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !19545
  %73 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !19547
  %74 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !19548
  %75 = load %struct.NurbSort*, %struct.NurbSort** %nus1, align 8, !dbg !19549
  %nu70 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %75, i32 0, i32 2, !dbg !19550
  %76 = load %struct.Nurb*, %struct.Nurb** %nu70, align 8, !dbg !19550
  %77 = load %struct.NurbSort*, %struct.NurbSort** %nus2, align 8, !dbg !19551
  %nu71 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %77, i32 0, i32 2, !dbg !19552
  %78 = load %struct.Nurb*, %struct.Nurb** %nu71, align 8, !dbg !19552
  call void @merge_2_nurb(%struct.wmOperator* %72, %struct.Curve* %73, %struct.ListBase* %74, %struct.Nurb* %76, %struct.Nurb* %78), !dbg !19553
  %79 = load %struct.NurbSort*, %struct.NurbSort** %nus2, align 8, !dbg !19554
  %next72 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %79, i32 0, i32 0, !dbg !19555
  %80 = load %struct.NurbSort*, %struct.NurbSort** %next72, align 8, !dbg !19555
  store %struct.NurbSort* %80, %struct.NurbSort** %nus2, align 8, !dbg !19556
  br label %while.cond, !dbg !19543, !llvm.loop !19557

while.end:                                        ; preds = %while.cond
  call void @BLI_freelistN(%struct.ListBase* @nsortbase), !dbg !19559
  %81 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !19560
  %data73 = getelementptr inbounds %struct.Object, %struct.Object* %81, i32 0, i32 19, !dbg !19561
  %82 = load i8*, i8** %data73, align 8, !dbg !19561
  %83 = bitcast i8* %82 to %struct.Curve*, !dbg !19560
  call void @BKE_curve_nurb_active_set(%struct.Curve* %83, %struct.Nurb* null), !dbg !19562
  %84 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19563
  %85 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !19564
  %data74 = getelementptr inbounds %struct.Object, %struct.Object* %85, i32 0, i32 19, !dbg !19565
  %86 = load i8*, i8** %data74, align 8, !dbg !19565
  call void @WM_event_add_notifier(%struct.bContext* %84, i32 274399232, i8* %86), !dbg !19566
  %87 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !19567
  %data75 = getelementptr inbounds %struct.Object, %struct.Object* %87, i32 0, i32 19, !dbg !19568
  %88 = load i8*, i8** %data75, align 8, !dbg !19568
  %89 = bitcast i8* %88 to %struct.ID*, !dbg !19567
  call void @DAG_id_tag_update(%struct.ID* %89, i16 signext 0), !dbg !19569
  store i32 4, i32* %retval, align 4, !dbg !19570
  br label %return, !dbg !19570

return:                                           ; preds = %while.end, %if.then67, %if.then
  %90 = load i32, i32* %retval, align 4, !dbg !19571
  ret i32 %90, !dbg !19571
}

declare dso_local void @BKE_nurb_free(%struct.Nurb*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @make_selection_list_nurb(%struct.ListBase* %editnurb) #0 !dbg !19572 {
entry:
  %editnurb.addr = alloca %struct.ListBase*, align 8
  %nbase = alloca %struct.ListBase, align 8
  %nus = alloca %struct.NurbSort*, align 8
  %nustest = alloca %struct.NurbSort*, align 8
  %headdo = alloca %struct.NurbSort*, align 8
  %taildo = alloca %struct.NurbSort*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %dist = alloca float, align 4
  %headdist = alloca float, align 4
  %taildist = alloca float, align 4
  %a = alloca i32, align 4
  store %struct.ListBase* %editnurb, %struct.ListBase** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb.addr, metadata !19575, metadata !DIExpression()), !dbg !19576
  call void @llvm.dbg.declare(metadata %struct.ListBase* %nbase, metadata !19577, metadata !DIExpression()), !dbg !19578
  %0 = bitcast %struct.ListBase* %nbase to i8*, !dbg !19578
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !19578
  call void @llvm.dbg.declare(metadata %struct.NurbSort** %nus, metadata !19579, metadata !DIExpression()), !dbg !19580
  call void @llvm.dbg.declare(metadata %struct.NurbSort** %nustest, metadata !19581, metadata !DIExpression()), !dbg !19582
  call void @llvm.dbg.declare(metadata %struct.NurbSort** %headdo, metadata !19583, metadata !DIExpression()), !dbg !19584
  call void @llvm.dbg.declare(metadata %struct.NurbSort** %taildo, metadata !19585, metadata !DIExpression()), !dbg !19586
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !19587, metadata !DIExpression()), !dbg !19588
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !19589, metadata !DIExpression()), !dbg !19590
  call void @llvm.dbg.declare(metadata float* %dist, metadata !19591, metadata !DIExpression()), !dbg !19592
  call void @llvm.dbg.declare(metadata float* %headdist, metadata !19593, metadata !DIExpression()), !dbg !19594
  call void @llvm.dbg.declare(metadata float* %taildist, metadata !19595, metadata !DIExpression()), !dbg !19596
  call void @llvm.dbg.declare(metadata i32* %a, metadata !19597, metadata !DIExpression()), !dbg !19598
  %1 = load %struct.ListBase*, %struct.ListBase** %editnurb.addr, align 8, !dbg !19599
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !19601
  %2 = load i8*, i8** %first, align 8, !dbg !19601
  %3 = bitcast i8* %2 to %struct.Nurb*, !dbg !19599
  store %struct.Nurb* %3, %struct.Nurb** %nu, align 8, !dbg !19602
  br label %for.cond, !dbg !19603

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19604
  %tobool = icmp ne %struct.Nurb* %4, null, !dbg !19606
  br i1 %tobool, label %for.body, label %for.end, !dbg !19606

for.body:                                         ; preds = %for.cond
  %5 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19607
  %call = call i32 @isNurbsel(%struct.Nurb* %5), !dbg !19610
  %tobool1 = icmp ne i32 %call, 0, !dbg !19610
  br i1 %tobool1, label %if.then, label %if.end, !dbg !19611

if.then:                                          ; preds = %for.body
  %6 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !19612
  %call2 = call i8* %6(i64 40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.210, i64 0, i64 0)), !dbg !19612
  %7 = bitcast i8* %call2 to %struct.NurbSort*, !dbg !19614
  store %struct.NurbSort* %7, %struct.NurbSort** %nus, align 8, !dbg !19615
  %8 = load %struct.NurbSort*, %struct.NurbSort** %nus, align 8, !dbg !19616
  %9 = bitcast %struct.NurbSort* %8 to i8*, !dbg !19616
  call void @BLI_addhead(%struct.ListBase* %nbase, i8* %9), !dbg !19617
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19618
  %11 = load %struct.NurbSort*, %struct.NurbSort** %nus, align 8, !dbg !19619
  %nu3 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %11, i32 0, i32 2, !dbg !19620
  store %struct.Nurb* %10, %struct.Nurb** %nu3, align 8, !dbg !19621
  %12 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19622
  %bp4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 17, !dbg !19623
  %13 = load %struct.BPoint*, %struct.BPoint** %bp4, align 8, !dbg !19623
  store %struct.BPoint* %13, %struct.BPoint** %bp, align 8, !dbg !19624
  %14 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19625
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 6, !dbg !19626
  %15 = load i32, i32* %pntsu, align 8, !dbg !19626
  store i32 %15, i32* %a, align 4, !dbg !19627
  br label %while.cond, !dbg !19628

while.cond:                                       ; preds = %while.body, %if.then
  %16 = load i32, i32* %a, align 4, !dbg !19629
  %dec = add nsw i32 %16, -1, !dbg !19629
  store i32 %dec, i32* %a, align 4, !dbg !19629
  %tobool5 = icmp ne i32 %16, 0, !dbg !19628
  br i1 %tobool5, label %while.body, label %while.end, !dbg !19628

while.body:                                       ; preds = %while.cond
  %17 = load %struct.NurbSort*, %struct.NurbSort** %nus, align 8, !dbg !19630
  %vec = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %17, i32 0, i32 3, !dbg !19632
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !19630
  %18 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !19633
  %vec6 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %18, i32 0, i32 0, !dbg !19634
  %arraydecay7 = getelementptr inbounds [4 x float], [4 x float]* %vec6, i64 0, i64 0, !dbg !19633
  call void @add_v3_v3(float* %arraydecay, float* %arraydecay7), !dbg !19635
  %19 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !19636
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %19, i32 1, !dbg !19636
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp, align 8, !dbg !19636
  br label %while.cond, !dbg !19628, !llvm.loop !19637

while.end:                                        ; preds = %while.cond
  %20 = load %struct.NurbSort*, %struct.NurbSort** %nus, align 8, !dbg !19639
  %vec8 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %20, i32 0, i32 3, !dbg !19640
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %vec8, i64 0, i64 0, !dbg !19639
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19641
  %pntsu10 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 6, !dbg !19642
  %22 = load i32, i32* %pntsu10, align 8, !dbg !19642
  %conv = sitofp i32 %22 to float, !dbg !19643
  %div = fdiv float 1.000000e+00, %conv, !dbg !19644
  call void @mul_v3_fl(float* %arraydecay9, float %div), !dbg !19645
  br label %if.end, !dbg !19646

if.end:                                           ; preds = %while.end, %for.body
  br label %for.inc, !dbg !19647

for.inc:                                          ; preds = %if.end
  %23 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !19648
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %23, i32 0, i32 0, !dbg !19649
  %24 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !19649
  store %struct.Nurb* %24, %struct.Nurb** %nu, align 8, !dbg !19650
  br label %for.cond, !dbg !19651, !llvm.loop !19652

for.end:                                          ; preds = %for.cond
  %first11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nbase, i32 0, i32 0, !dbg !19654
  %25 = load i8*, i8** %first11, align 8, !dbg !19654
  %26 = bitcast i8* %25 to %struct.NurbSort*, !dbg !19655
  store %struct.NurbSort* %26, %struct.NurbSort** %nus, align 8, !dbg !19656
  %27 = load %struct.NurbSort*, %struct.NurbSort** %nus, align 8, !dbg !19657
  %28 = bitcast %struct.NurbSort* %27 to i8*, !dbg !19657
  call void @BLI_remlink(%struct.ListBase* %nbase, i8* %28), !dbg !19658
  %29 = load %struct.NurbSort*, %struct.NurbSort** %nus, align 8, !dbg !19659
  %30 = bitcast %struct.NurbSort* %29 to i8*, !dbg !19659
  call void @BLI_addtail(%struct.ListBase* @nsortbase, i8* %30), !dbg !19660
  br label %while.cond12, !dbg !19661

while.cond12:                                     ; preds = %if.end42, %for.end
  %first13 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nbase, i32 0, i32 0, !dbg !19662
  %31 = load i8*, i8** %first13, align 8, !dbg !19662
  %tobool14 = icmp ne i8* %31, null, !dbg !19661
  br i1 %tobool14, label %while.body15, label %while.end43, !dbg !19661

while.body15:                                     ; preds = %while.cond12
  store float 0x46293E5940000000, float* %taildist, align 4, !dbg !19663
  store float 0x46293E5940000000, float* %headdist, align 4, !dbg !19665
  store %struct.NurbSort* null, %struct.NurbSort** %taildo, align 8, !dbg !19666
  store %struct.NurbSort* null, %struct.NurbSort** %headdo, align 8, !dbg !19667
  %first16 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nbase, i32 0, i32 0, !dbg !19668
  %32 = load i8*, i8** %first16, align 8, !dbg !19668
  %33 = bitcast i8* %32 to %struct.NurbSort*, !dbg !19669
  store %struct.NurbSort* %33, %struct.NurbSort** %nustest, align 8, !dbg !19670
  br label %while.cond17, !dbg !19671

while.cond17:                                     ; preds = %if.end36, %while.body15
  %34 = load %struct.NurbSort*, %struct.NurbSort** %nustest, align 8, !dbg !19672
  %tobool18 = icmp ne %struct.NurbSort* %34, null, !dbg !19671
  br i1 %tobool18, label %while.body19, label %while.end38, !dbg !19671

while.body19:                                     ; preds = %while.cond17
  %35 = load %struct.NurbSort*, %struct.NurbSort** %nustest, align 8, !dbg !19673
  %vec20 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %35, i32 0, i32 3, !dbg !19675
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %vec20, i64 0, i64 0, !dbg !19673
  %36 = load i8*, i8** getelementptr inbounds (%struct.ListBase, %struct.ListBase* @nsortbase, i32 0, i32 0), align 8, !dbg !19676
  %37 = bitcast i8* %36 to %struct.NurbSort*, !dbg !19677
  %vec22 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %37, i32 0, i32 3, !dbg !19678
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %vec22, i64 0, i64 0, !dbg !19679
  %call24 = call float @len_v3v3(float* %arraydecay21, float* %arraydecay23), !dbg !19680
  store float %call24, float* %dist, align 4, !dbg !19681
  %38 = load float, float* %dist, align 4, !dbg !19682
  %39 = load float, float* %headdist, align 4, !dbg !19684
  %cmp = fcmp olt float %38, %39, !dbg !19685
  br i1 %cmp, label %if.then26, label %if.end27, !dbg !19686

if.then26:                                        ; preds = %while.body19
  %40 = load float, float* %dist, align 4, !dbg !19687
  store float %40, float* %headdist, align 4, !dbg !19689
  %41 = load %struct.NurbSort*, %struct.NurbSort** %nustest, align 8, !dbg !19690
  store %struct.NurbSort* %41, %struct.NurbSort** %headdo, align 8, !dbg !19691
  br label %if.end27, !dbg !19692

if.end27:                                         ; preds = %if.then26, %while.body19
  %42 = load %struct.NurbSort*, %struct.NurbSort** %nustest, align 8, !dbg !19693
  %vec28 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %42, i32 0, i32 3, !dbg !19694
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %vec28, i64 0, i64 0, !dbg !19693
  %43 = load i8*, i8** getelementptr inbounds (%struct.ListBase, %struct.ListBase* @nsortbase, i32 0, i32 1), align 8, !dbg !19695
  %44 = bitcast i8* %43 to %struct.NurbSort*, !dbg !19696
  %vec30 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %44, i32 0, i32 3, !dbg !19697
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %vec30, i64 0, i64 0, !dbg !19698
  %call32 = call float @len_v3v3(float* %arraydecay29, float* %arraydecay31), !dbg !19699
  store float %call32, float* %dist, align 4, !dbg !19700
  %45 = load float, float* %dist, align 4, !dbg !19701
  %46 = load float, float* %taildist, align 4, !dbg !19703
  %cmp33 = fcmp olt float %45, %46, !dbg !19704
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !19705

if.then35:                                        ; preds = %if.end27
  %47 = load float, float* %dist, align 4, !dbg !19706
  store float %47, float* %taildist, align 4, !dbg !19708
  %48 = load %struct.NurbSort*, %struct.NurbSort** %nustest, align 8, !dbg !19709
  store %struct.NurbSort* %48, %struct.NurbSort** %taildo, align 8, !dbg !19710
  br label %if.end36, !dbg !19711

if.end36:                                         ; preds = %if.then35, %if.end27
  %49 = load %struct.NurbSort*, %struct.NurbSort** %nustest, align 8, !dbg !19712
  %next37 = getelementptr inbounds %struct.NurbSort, %struct.NurbSort* %49, i32 0, i32 0, !dbg !19713
  %50 = load %struct.NurbSort*, %struct.NurbSort** %next37, align 8, !dbg !19713
  store %struct.NurbSort* %50, %struct.NurbSort** %nustest, align 8, !dbg !19714
  br label %while.cond17, !dbg !19671, !llvm.loop !19715

while.end38:                                      ; preds = %while.cond17
  %51 = load float, float* %headdist, align 4, !dbg !19717
  %52 = load float, float* %taildist, align 4, !dbg !19719
  %cmp39 = fcmp olt float %51, %52, !dbg !19720
  br i1 %cmp39, label %if.then41, label %if.else, !dbg !19721

if.then41:                                        ; preds = %while.end38
  %53 = load %struct.NurbSort*, %struct.NurbSort** %headdo, align 8, !dbg !19722
  %54 = bitcast %struct.NurbSort* %53 to i8*, !dbg !19722
  call void @BLI_remlink(%struct.ListBase* %nbase, i8* %54), !dbg !19724
  %55 = load %struct.NurbSort*, %struct.NurbSort** %headdo, align 8, !dbg !19725
  %56 = bitcast %struct.NurbSort* %55 to i8*, !dbg !19725
  call void @BLI_addhead(%struct.ListBase* @nsortbase, i8* %56), !dbg !19726
  br label %if.end42, !dbg !19727

if.else:                                          ; preds = %while.end38
  %57 = load %struct.NurbSort*, %struct.NurbSort** %taildo, align 8, !dbg !19728
  %58 = bitcast %struct.NurbSort* %57 to i8*, !dbg !19728
  call void @BLI_remlink(%struct.ListBase* %nbase, i8* %58), !dbg !19730
  %59 = load %struct.NurbSort*, %struct.NurbSort** %taildo, align 8, !dbg !19731
  %60 = bitcast %struct.NurbSort* %59 to i8*, !dbg !19731
  call void @BLI_addtail(%struct.ListBase* @nsortbase, i8* %60), !dbg !19732
  br label %if.end42

if.end42:                                         ; preds = %if.else, %if.then41
  br label %while.cond12, !dbg !19661, !llvm.loop !19733

while.end43:                                      ; preds = %while.cond12
  ret void, !dbg !19735
}

; Function Attrs: noinline nounwind uwtable
define internal void @merge_2_nurb(%struct.wmOperator* %op, %struct.Curve* %cu, %struct.ListBase* %editnurb, %struct.Nurb* %nu1, %struct.Nurb* %nu2) #0 !dbg !19736 {
entry:
  %op.addr = alloca %struct.wmOperator*, align 8
  %cu.addr = alloca %struct.Curve*, align 8
  %editnurb.addr = alloca %struct.ListBase*, align 8
  %nu1.addr = alloca %struct.Nurb*, align 8
  %nu2.addr = alloca %struct.Nurb*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %bp1 = alloca %struct.BPoint*, align 8
  %bp2 = alloca %struct.BPoint*, align 8
  %temp = alloca %struct.BPoint*, align 8
  %len1 = alloca float, align 4
  %len2 = alloca float, align 4
  %origu = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !19739, metadata !DIExpression()), !dbg !19740
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !19741, metadata !DIExpression()), !dbg !19742
  store %struct.ListBase* %editnurb, %struct.ListBase** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb.addr, metadata !19743, metadata !DIExpression()), !dbg !19744
  store %struct.Nurb* %nu1, %struct.Nurb** %nu1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu1.addr, metadata !19745, metadata !DIExpression()), !dbg !19746
  store %struct.Nurb* %nu2, %struct.Nurb** %nu2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu2.addr, metadata !19747, metadata !DIExpression()), !dbg !19748
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !19749, metadata !DIExpression()), !dbg !19750
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp1, metadata !19751, metadata !DIExpression()), !dbg !19752
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp2, metadata !19753, metadata !DIExpression()), !dbg !19754
  call void @llvm.dbg.declare(metadata %struct.BPoint** %temp, metadata !19755, metadata !DIExpression()), !dbg !19756
  call void @llvm.dbg.declare(metadata float* %len1, metadata !19757, metadata !DIExpression()), !dbg !19758
  call void @llvm.dbg.declare(metadata float* %len2, metadata !19759, metadata !DIExpression()), !dbg !19760
  call void @llvm.dbg.declare(metadata i32* %origu, metadata !19761, metadata !DIExpression()), !dbg !19762
  call void @llvm.dbg.declare(metadata i32* %u, metadata !19763, metadata !DIExpression()), !dbg !19764
  call void @llvm.dbg.declare(metadata i32* %v, metadata !19765, metadata !DIExpression()), !dbg !19766
  %0 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19767
  %1 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19769
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %1, i32 0, i32 6, !dbg !19770
  %2 = load i32, i32* %pntsu, align 8, !dbg !19770
  %sub = sub nsw i32 %2, 1, !dbg !19771
  %call = call zeroext i8 @is_u_selected(%struct.Nurb* %0, i32 %sub), !dbg !19772
  %tobool = icmp ne i8 %call, 0, !dbg !19772
  br i1 %tobool, label %if.then, label %if.else, !dbg !19773

if.then:                                          ; preds = %entry
  br label %if.end29, !dbg !19774

if.else:                                          ; preds = %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19776
  %orderv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %3, i32 0, i32 12, !dbg !19779
  %4 = load i16, i16* %orderv, align 2, !dbg !19779
  %conv = sext i16 %4 to i32, !dbg !19776
  %cmp = icmp eq i32 %conv, 0, !dbg !19780
  br i1 %cmp, label %if.then2, label %if.end, !dbg !19781

if.then2:                                         ; preds = %if.else
  %5 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19782
  %orderv3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %5, i32 0, i32 12, !dbg !19783
  store i16 1, i16* %orderv3, align 2, !dbg !19784
  br label %if.end, !dbg !19782

if.end:                                           ; preds = %if.then2, %if.else
  %6 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19785
  call void @rotate_direction_nurb(%struct.Nurb* %6), !dbg !19786
  %7 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19787
  %8 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19789
  %pntsu4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 6, !dbg !19790
  %9 = load i32, i32* %pntsu4, align 8, !dbg !19790
  %sub5 = sub nsw i32 %9, 1, !dbg !19791
  %call6 = call zeroext i8 @is_u_selected(%struct.Nurb* %7, i32 %sub5), !dbg !19792
  %tobool7 = icmp ne i8 %call6, 0, !dbg !19792
  br i1 %tobool7, label %if.then8, label %if.else9, !dbg !19793

if.then8:                                         ; preds = %if.end
  br label %if.end28, !dbg !19794

if.else9:                                         ; preds = %if.end
  %10 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19796
  call void @rotate_direction_nurb(%struct.Nurb* %10), !dbg !19798
  %11 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19799
  %12 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19801
  %pntsu10 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 6, !dbg !19802
  %13 = load i32, i32* %pntsu10, align 8, !dbg !19802
  %sub11 = sub nsw i32 %13, 1, !dbg !19803
  %call12 = call zeroext i8 @is_u_selected(%struct.Nurb* %11, i32 %sub11), !dbg !19804
  %tobool13 = icmp ne i8 %call12, 0, !dbg !19804
  br i1 %tobool13, label %if.then14, label %if.else15, !dbg !19805

if.then14:                                        ; preds = %if.else9
  br label %if.end27, !dbg !19806

if.else15:                                        ; preds = %if.else9
  %14 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19808
  call void @rotate_direction_nurb(%struct.Nurb* %14), !dbg !19810
  %15 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19811
  %16 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19813
  %pntsu16 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %16, i32 0, i32 6, !dbg !19814
  %17 = load i32, i32* %pntsu16, align 8, !dbg !19814
  %sub17 = sub nsw i32 %17, 1, !dbg !19815
  %call18 = call zeroext i8 @is_u_selected(%struct.Nurb* %15, i32 %sub17), !dbg !19816
  %tobool19 = icmp ne i8 %call18, 0, !dbg !19816
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !19817

if.then20:                                        ; preds = %if.else15
  br label %if.end26, !dbg !19818

if.else21:                                        ; preds = %if.else15
  %18 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19820
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %18, i32 0, i32 7, !dbg !19823
  %19 = load i32, i32* %pntsv, align 4, !dbg !19823
  %cmp22 = icmp ne i32 %19, 1, !dbg !19824
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !19825

if.then24:                                        ; preds = %if.else21
  %20 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19826
  call void @rotate_direction_nurb(%struct.Nurb* %20), !dbg !19827
  br label %if.end25, !dbg !19827

if.end25:                                         ; preds = %if.then24, %if.else21
  br label %return, !dbg !19828

if.end26:                                         ; preds = %if.then20
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then14
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then8
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then
  %21 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !19829
  %call30 = call zeroext i8 @is_u_selected(%struct.Nurb* %21, i32 0), !dbg !19831
  %tobool31 = icmp ne i8 %call30, 0, !dbg !19831
  br i1 %tobool31, label %if.then32, label %if.else33, !dbg !19832

if.then32:                                        ; preds = %if.end29
  br label %if.end66, !dbg !19833

if.else33:                                        ; preds = %if.end29
  %22 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !19835
  %orderv34 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %22, i32 0, i32 12, !dbg !19838
  %23 = load i16, i16* %orderv34, align 2, !dbg !19838
  %conv35 = sext i16 %23 to i32, !dbg !19835
  %cmp36 = icmp eq i32 %conv35, 0, !dbg !19839
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !19840

if.then38:                                        ; preds = %if.else33
  %24 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !19841
  %orderv39 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %24, i32 0, i32 12, !dbg !19842
  store i16 1, i16* %orderv39, align 2, !dbg !19843
  br label %if.end40, !dbg !19841

if.end40:                                         ; preds = %if.then38, %if.else33
  %25 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !19844
  call void @rotate_direction_nurb(%struct.Nurb* %25), !dbg !19845
  %26 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !19846
  %call41 = call zeroext i8 @is_u_selected(%struct.Nurb* %26, i32 0), !dbg !19848
  %tobool42 = icmp ne i8 %call41, 0, !dbg !19848
  br i1 %tobool42, label %if.then43, label %if.else44, !dbg !19849

if.then43:                                        ; preds = %if.end40
  br label %if.end65, !dbg !19850

if.else44:                                        ; preds = %if.end40
  %27 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !19852
  call void @rotate_direction_nurb(%struct.Nurb* %27), !dbg !19854
  %28 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !19855
  %call45 = call zeroext i8 @is_u_selected(%struct.Nurb* %28, i32 0), !dbg !19857
  %tobool46 = icmp ne i8 %call45, 0, !dbg !19857
  br i1 %tobool46, label %if.then47, label %if.else48, !dbg !19858

if.then47:                                        ; preds = %if.else44
  br label %if.end64, !dbg !19859

if.else48:                                        ; preds = %if.else44
  %29 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !19861
  call void @rotate_direction_nurb(%struct.Nurb* %29), !dbg !19863
  %30 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !19864
  %call49 = call zeroext i8 @is_u_selected(%struct.Nurb* %30, i32 0), !dbg !19866
  %tobool50 = icmp ne i8 %call49, 0, !dbg !19866
  br i1 %tobool50, label %if.then51, label %if.else52, !dbg !19867

if.then51:                                        ; preds = %if.else48
  br label %if.end63, !dbg !19868

if.else52:                                        ; preds = %if.else48
  %31 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19870
  %pntsu53 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %31, i32 0, i32 6, !dbg !19873
  %32 = load i32, i32* %pntsu53, align 8, !dbg !19873
  %cmp54 = icmp eq i32 %32, 1, !dbg !19874
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !19875

if.then56:                                        ; preds = %if.else52
  %33 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19876
  call void @rotate_direction_nurb(%struct.Nurb* %33), !dbg !19877
  br label %if.end57, !dbg !19877

if.end57:                                         ; preds = %if.then56, %if.else52
  %34 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !19878
  %pntsv58 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %34, i32 0, i32 7, !dbg !19880
  %35 = load i32, i32* %pntsv58, align 4, !dbg !19880
  %cmp59 = icmp ne i32 %35, 1, !dbg !19881
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !19882

if.then61:                                        ; preds = %if.end57
  %36 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !19883
  call void @rotate_direction_nurb(%struct.Nurb* %36), !dbg !19884
  br label %if.end62, !dbg !19884

if.end62:                                         ; preds = %if.then61, %if.end57
  br label %return, !dbg !19885

if.end63:                                         ; preds = %if.then51
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then47
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then43
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then32
  %37 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19886
  %pntsv67 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %37, i32 0, i32 7, !dbg !19888
  %38 = load i32, i32* %pntsv67, align 4, !dbg !19888
  %39 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !19889
  %pntsv68 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %39, i32 0, i32 7, !dbg !19890
  %40 = load i32, i32* %pntsv68, align 4, !dbg !19890
  %cmp69 = icmp ne i32 %38, %40, !dbg !19891
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !19892

if.then71:                                        ; preds = %if.end66
  %41 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !19893
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %41, i32 0, i32 8, !dbg !19895
  %42 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !19895
  call void @BKE_report(%struct.ReportList* %42, i32 32, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.209, i64 0, i64 0)), !dbg !19896
  br label %return, !dbg !19897

if.end72:                                         ; preds = %if.end66
  %43 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19898
  %bp73 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %43, i32 0, i32 17, !dbg !19899
  %44 = load %struct.BPoint*, %struct.BPoint** %bp73, align 8, !dbg !19899
  %45 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19900
  %pntsu74 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %45, i32 0, i32 6, !dbg !19901
  %46 = load i32, i32* %pntsu74, align 8, !dbg !19901
  %sub75 = sub nsw i32 %46, 1, !dbg !19902
  %idxprom = sext i32 %sub75 to i64, !dbg !19898
  %arrayidx = getelementptr inbounds %struct.BPoint, %struct.BPoint* %44, i64 %idxprom, !dbg !19898
  store %struct.BPoint* %arrayidx, %struct.BPoint** %bp1, align 8, !dbg !19903
  %47 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !19904
  %bp76 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %47, i32 0, i32 17, !dbg !19905
  %48 = load %struct.BPoint*, %struct.BPoint** %bp76, align 8, !dbg !19905
  store %struct.BPoint* %48, %struct.BPoint** %bp2, align 8, !dbg !19906
  store float 0.000000e+00, float* %len1, align 4, !dbg !19907
  store i32 0, i32* %v, align 4, !dbg !19908
  br label %for.cond, !dbg !19910

for.cond:                                         ; preds = %for.inc, %if.end72
  %49 = load i32, i32* %v, align 4, !dbg !19911
  %50 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19913
  %pntsv77 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %50, i32 0, i32 7, !dbg !19914
  %51 = load i32, i32* %pntsv77, align 4, !dbg !19914
  %cmp78 = icmp slt i32 %49, %51, !dbg !19915
  br i1 %cmp78, label %for.body, label %for.end, !dbg !19916

for.body:                                         ; preds = %for.cond
  %52 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !19917
  %vec = getelementptr inbounds %struct.BPoint, %struct.BPoint* %52, i32 0, i32 0, !dbg !19919
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !19917
  %53 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !19920
  %vec80 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %53, i32 0, i32 0, !dbg !19921
  %arraydecay81 = getelementptr inbounds [4 x float], [4 x float]* %vec80, i64 0, i64 0, !dbg !19920
  %call82 = call float @len_v3v3(float* %arraydecay, float* %arraydecay81), !dbg !19922
  %54 = load float, float* %len1, align 4, !dbg !19923
  %add = fadd float %54, %call82, !dbg !19923
  store float %add, float* %len1, align 4, !dbg !19923
  br label %for.inc, !dbg !19924

for.inc:                                          ; preds = %for.body
  %55 = load i32, i32* %v, align 4, !dbg !19925
  %inc = add nsw i32 %55, 1, !dbg !19925
  store i32 %inc, i32* %v, align 4, !dbg !19925
  %56 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19926
  %pntsu83 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %56, i32 0, i32 6, !dbg !19927
  %57 = load i32, i32* %pntsu83, align 8, !dbg !19927
  %58 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !19928
  %idx.ext = sext i32 %57 to i64, !dbg !19928
  %add.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %58, i64 %idx.ext, !dbg !19928
  store %struct.BPoint* %add.ptr, %struct.BPoint** %bp1, align 8, !dbg !19928
  %59 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !19929
  %pntsu84 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %59, i32 0, i32 6, !dbg !19930
  %60 = load i32, i32* %pntsu84, align 8, !dbg !19930
  %61 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !19931
  %idx.ext85 = sext i32 %60 to i64, !dbg !19931
  %add.ptr86 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %61, i64 %idx.ext85, !dbg !19931
  store %struct.BPoint* %add.ptr86, %struct.BPoint** %bp2, align 8, !dbg !19931
  br label %for.cond, !dbg !19932, !llvm.loop !19933

for.end:                                          ; preds = %for.cond
  %62 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19935
  %bp87 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %62, i32 0, i32 17, !dbg !19936
  %63 = load %struct.BPoint*, %struct.BPoint** %bp87, align 8, !dbg !19936
  %64 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19937
  %pntsu88 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %64, i32 0, i32 6, !dbg !19938
  %65 = load i32, i32* %pntsu88, align 8, !dbg !19938
  %sub89 = sub nsw i32 %65, 1, !dbg !19939
  %idxprom90 = sext i32 %sub89 to i64, !dbg !19935
  %arrayidx91 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %63, i64 %idxprom90, !dbg !19935
  store %struct.BPoint* %arrayidx91, %struct.BPoint** %bp1, align 8, !dbg !19940
  %66 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !19941
  %bp92 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %66, i32 0, i32 17, !dbg !19942
  %67 = load %struct.BPoint*, %struct.BPoint** %bp92, align 8, !dbg !19942
  %68 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !19943
  %pntsu93 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %68, i32 0, i32 6, !dbg !19944
  %69 = load i32, i32* %pntsu93, align 8, !dbg !19944
  %70 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !19945
  %pntsv94 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %70, i32 0, i32 7, !dbg !19946
  %71 = load i32, i32* %pntsv94, align 4, !dbg !19946
  %sub95 = sub nsw i32 %71, 1, !dbg !19947
  %mul = mul nsw i32 %69, %sub95, !dbg !19948
  %idxprom96 = sext i32 %mul to i64, !dbg !19941
  %arrayidx97 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %67, i64 %idxprom96, !dbg !19941
  store %struct.BPoint* %arrayidx97, %struct.BPoint** %bp2, align 8, !dbg !19949
  store float 0.000000e+00, float* %len2, align 4, !dbg !19950
  store i32 0, i32* %v, align 4, !dbg !19951
  br label %for.cond98, !dbg !19953

for.cond98:                                       ; preds = %for.inc109, %for.end
  %72 = load i32, i32* %v, align 4, !dbg !19954
  %73 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19956
  %pntsv99 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %73, i32 0, i32 7, !dbg !19957
  %74 = load i32, i32* %pntsv99, align 4, !dbg !19957
  %cmp100 = icmp slt i32 %72, %74, !dbg !19958
  br i1 %cmp100, label %for.body102, label %for.end117, !dbg !19959

for.body102:                                      ; preds = %for.cond98
  %75 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !19960
  %vec103 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %75, i32 0, i32 0, !dbg !19962
  %arraydecay104 = getelementptr inbounds [4 x float], [4 x float]* %vec103, i64 0, i64 0, !dbg !19960
  %76 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !19963
  %vec105 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %76, i32 0, i32 0, !dbg !19964
  %arraydecay106 = getelementptr inbounds [4 x float], [4 x float]* %vec105, i64 0, i64 0, !dbg !19963
  %call107 = call float @len_v3v3(float* %arraydecay104, float* %arraydecay106), !dbg !19965
  %77 = load float, float* %len2, align 4, !dbg !19966
  %add108 = fadd float %77, %call107, !dbg !19966
  store float %add108, float* %len2, align 4, !dbg !19966
  br label %for.inc109, !dbg !19967

for.inc109:                                       ; preds = %for.body102
  %78 = load i32, i32* %v, align 4, !dbg !19968
  %inc110 = add nsw i32 %78, 1, !dbg !19968
  store i32 %inc110, i32* %v, align 4, !dbg !19968
  %79 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19969
  %pntsu111 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %79, i32 0, i32 6, !dbg !19970
  %80 = load i32, i32* %pntsu111, align 8, !dbg !19970
  %81 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !19971
  %idx.ext112 = sext i32 %80 to i64, !dbg !19971
  %add.ptr113 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %81, i64 %idx.ext112, !dbg !19971
  store %struct.BPoint* %add.ptr113, %struct.BPoint** %bp1, align 8, !dbg !19971
  %82 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !19972
  %pntsu114 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %82, i32 0, i32 6, !dbg !19973
  %83 = load i32, i32* %pntsu114, align 8, !dbg !19973
  %84 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !19974
  %idx.ext115 = sext i32 %83 to i64, !dbg !19974
  %idx.neg = sub i64 0, %idx.ext115, !dbg !19974
  %add.ptr116 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %84, i64 %idx.neg, !dbg !19974
  store %struct.BPoint* %add.ptr116, %struct.BPoint** %bp2, align 8, !dbg !19974
  br label %for.cond98, !dbg !19975, !llvm.loop !19976

for.end117:                                       ; preds = %for.cond98
  %85 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19978
  %pntsu118 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %85, i32 0, i32 6, !dbg !19979
  %86 = load i32, i32* %pntsu118, align 8, !dbg !19979
  store i32 %86, i32* %origu, align 4, !dbg !19980
  %87 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !19981
  %pntsu119 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %87, i32 0, i32 6, !dbg !19982
  %88 = load i32, i32* %pntsu119, align 8, !dbg !19982
  %89 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19983
  %pntsu120 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %89, i32 0, i32 6, !dbg !19984
  %90 = load i32, i32* %pntsu120, align 8, !dbg !19985
  %add121 = add nsw i32 %90, %88, !dbg !19985
  store i32 %add121, i32* %pntsu120, align 8, !dbg !19985
  %91 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19986
  %orderu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %91, i32 0, i32 11, !dbg !19988
  %92 = load i16, i16* %orderu, align 8, !dbg !19988
  %conv122 = sext i16 %92 to i32, !dbg !19986
  %cmp123 = icmp slt i32 %conv122, 3, !dbg !19989
  br i1 %cmp123, label %land.lhs.true, label %if.end133, !dbg !19990

land.lhs.true:                                    ; preds = %for.end117
  %93 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19991
  %orderu125 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %93, i32 0, i32 11, !dbg !19992
  %94 = load i16, i16* %orderu125, align 8, !dbg !19992
  %conv126 = sext i16 %94 to i32, !dbg !19991
  %95 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19993
  %pntsu127 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %95, i32 0, i32 6, !dbg !19994
  %96 = load i32, i32* %pntsu127, align 8, !dbg !19994
  %cmp128 = icmp slt i32 %conv126, %96, !dbg !19995
  br i1 %cmp128, label %if.then130, label %if.end133, !dbg !19996

if.then130:                                       ; preds = %land.lhs.true
  %97 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !19997
  %orderu131 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %97, i32 0, i32 11, !dbg !19998
  %98 = load i16, i16* %orderu131, align 8, !dbg !19999
  %inc132 = add i16 %98, 1, !dbg !19999
  store i16 %inc132, i16* %orderu131, align 8, !dbg !19999
  br label %if.end133, !dbg !19997

if.end133:                                        ; preds = %if.then130, %land.lhs.true, %for.end117
  %99 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !20000
  %orderv134 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %99, i32 0, i32 12, !dbg !20002
  %100 = load i16, i16* %orderv134, align 2, !dbg !20002
  %conv135 = sext i16 %100 to i32, !dbg !20000
  %cmp136 = icmp slt i32 %conv135, 3, !dbg !20003
  br i1 %cmp136, label %land.lhs.true138, label %if.end147, !dbg !20004

land.lhs.true138:                                 ; preds = %if.end133
  %101 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !20005
  %orderv139 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %101, i32 0, i32 12, !dbg !20006
  %102 = load i16, i16* %orderv139, align 2, !dbg !20006
  %conv140 = sext i16 %102 to i32, !dbg !20005
  %103 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !20007
  %pntsv141 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %103, i32 0, i32 7, !dbg !20008
  %104 = load i32, i32* %pntsv141, align 4, !dbg !20008
  %cmp142 = icmp slt i32 %conv140, %104, !dbg !20009
  br i1 %cmp142, label %if.then144, label %if.end147, !dbg !20010

if.then144:                                       ; preds = %land.lhs.true138
  %105 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !20011
  %orderv145 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %105, i32 0, i32 12, !dbg !20012
  %106 = load i16, i16* %orderv145, align 2, !dbg !20013
  %inc146 = add i16 %106, 1, !dbg !20013
  store i16 %inc146, i16* %orderv145, align 2, !dbg !20013
  br label %if.end147, !dbg !20011

if.end147:                                        ; preds = %if.then144, %land.lhs.true138, %if.end133
  %107 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !20014
  %bp148 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %107, i32 0, i32 17, !dbg !20015
  %108 = load %struct.BPoint*, %struct.BPoint** %bp148, align 8, !dbg !20015
  store %struct.BPoint* %108, %struct.BPoint** %temp, align 8, !dbg !20016
  %109 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !20017
  %110 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !20018
  %pntsu149 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %110, i32 0, i32 6, !dbg !20019
  %111 = load i32, i32* %pntsu149, align 8, !dbg !20019
  %112 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !20020
  %pntsv150 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %112, i32 0, i32 7, !dbg !20021
  %113 = load i32, i32* %pntsv150, align 4, !dbg !20021
  %mul151 = mul nsw i32 %111, %113, !dbg !20022
  %conv152 = sext i32 %mul151 to i64, !dbg !20018
  %mul153 = mul i64 %conv152, 36, !dbg !20023
  %call154 = call i8* %109(i64 %mul153, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.211, i64 0, i64 0)), !dbg !20017
  %114 = bitcast i8* %call154 to %struct.BPoint*, !dbg !20017
  %115 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !20024
  %bp155 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %115, i32 0, i32 17, !dbg !20025
  store %struct.BPoint* %114, %struct.BPoint** %bp155, align 8, !dbg !20026
  %116 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !20027
  %bp156 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %116, i32 0, i32 17, !dbg !20028
  %117 = load %struct.BPoint*, %struct.BPoint** %bp156, align 8, !dbg !20028
  store %struct.BPoint* %117, %struct.BPoint** %bp, align 8, !dbg !20029
  %118 = load %struct.BPoint*, %struct.BPoint** %temp, align 8, !dbg !20030
  store %struct.BPoint* %118, %struct.BPoint** %bp1, align 8, !dbg !20031
  store i32 0, i32* %v, align 4, !dbg !20032
  br label %for.cond157, !dbg !20034

for.cond157:                                      ; preds = %for.inc198, %if.end147
  %119 = load i32, i32* %v, align 4, !dbg !20035
  %120 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !20037
  %pntsv158 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %120, i32 0, i32 7, !dbg !20038
  %121 = load i32, i32* %pntsv158, align 4, !dbg !20038
  %cmp159 = icmp slt i32 %119, %121, !dbg !20039
  br i1 %cmp159, label %for.body161, label %for.end200, !dbg !20040

for.body161:                                      ; preds = %for.cond157
  %122 = load float, float* %len1, align 4, !dbg !20041
  %123 = load float, float* %len2, align 4, !dbg !20044
  %cmp162 = fcmp olt float %122, %123, !dbg !20045
  br i1 %cmp162, label %if.then164, label %if.else170, !dbg !20046

if.then164:                                       ; preds = %for.body161
  %124 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !20047
  %bp165 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %124, i32 0, i32 17, !dbg !20048
  %125 = load %struct.BPoint*, %struct.BPoint** %bp165, align 8, !dbg !20048
  %126 = load i32, i32* %v, align 4, !dbg !20049
  %127 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !20050
  %pntsu166 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %127, i32 0, i32 6, !dbg !20051
  %128 = load i32, i32* %pntsu166, align 8, !dbg !20051
  %mul167 = mul nsw i32 %126, %128, !dbg !20052
  %idxprom168 = sext i32 %mul167 to i64, !dbg !20047
  %arrayidx169 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %125, i64 %idxprom168, !dbg !20047
  store %struct.BPoint* %arrayidx169, %struct.BPoint** %bp2, align 8, !dbg !20053
  br label %if.end179, !dbg !20054

if.else170:                                       ; preds = %for.body161
  %129 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !20055
  %bp171 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %129, i32 0, i32 17, !dbg !20056
  %130 = load %struct.BPoint*, %struct.BPoint** %bp171, align 8, !dbg !20056
  %131 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !20057
  %pntsv172 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %131, i32 0, i32 7, !dbg !20058
  %132 = load i32, i32* %pntsv172, align 4, !dbg !20058
  %133 = load i32, i32* %v, align 4, !dbg !20059
  %sub173 = sub nsw i32 %132, %133, !dbg !20060
  %sub174 = sub nsw i32 %sub173, 1, !dbg !20061
  %134 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !20062
  %pntsu175 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %134, i32 0, i32 6, !dbg !20063
  %135 = load i32, i32* %pntsu175, align 8, !dbg !20063
  %mul176 = mul nsw i32 %sub174, %135, !dbg !20064
  %idxprom177 = sext i32 %mul176 to i64, !dbg !20055
  %arrayidx178 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %130, i64 %idxprom177, !dbg !20055
  store %struct.BPoint* %arrayidx178, %struct.BPoint** %bp2, align 8, !dbg !20065
  br label %if.end179

if.end179:                                        ; preds = %if.else170, %if.then164
  store i32 0, i32* %u, align 4, !dbg !20066
  br label %for.cond180, !dbg !20068

for.cond180:                                      ; preds = %for.inc194, %if.end179
  %136 = load i32, i32* %u, align 4, !dbg !20069
  %137 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !20071
  %pntsu181 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %137, i32 0, i32 6, !dbg !20072
  %138 = load i32, i32* %pntsu181, align 8, !dbg !20072
  %cmp182 = icmp slt i32 %136, %138, !dbg !20073
  br i1 %cmp182, label %for.body184, label %for.end197, !dbg !20074

for.body184:                                      ; preds = %for.cond180
  %139 = load i32, i32* %u, align 4, !dbg !20075
  %140 = load i32, i32* %origu, align 4, !dbg !20078
  %cmp185 = icmp slt i32 %139, %140, !dbg !20079
  br i1 %cmp185, label %if.then187, label %if.else190, !dbg !20080

if.then187:                                       ; preds = %for.body184
  %141 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !20081
  %editnurb188 = getelementptr inbounds %struct.Curve, %struct.Curve* %141, i32 0, i32 4, !dbg !20083
  %142 = load %struct.EditNurb*, %struct.EditNurb** %editnurb188, align 8, !dbg !20083
  %143 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !20084
  %144 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !20085
  call void @keyIndex_updateBP(%struct.EditNurb* %142, %struct.BPoint* %143, %struct.BPoint* %144, i32 1), !dbg !20086
  %145 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !20087
  %146 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !20088
  %147 = bitcast %struct.BPoint* %145 to i8*, !dbg !20089
  %148 = bitcast %struct.BPoint* %146 to i8*, !dbg !20089
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %147, i8* align 4 %148, i64 36, i1 false), !dbg !20089
  %149 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !20090
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %149, i32 1, !dbg !20090
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp1, align 8, !dbg !20090
  %150 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !20091
  %call189 = call zeroext i8 @select_bpoint(%struct.BPoint* %150, i8 zeroext 1, i16 signext 1, i8 zeroext 1), !dbg !20092
  br label %if.end193, !dbg !20093

if.else190:                                       ; preds = %for.body184
  %151 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !20094
  %editnurb191 = getelementptr inbounds %struct.Curve, %struct.Curve* %151, i32 0, i32 4, !dbg !20096
  %152 = load %struct.EditNurb*, %struct.EditNurb** %editnurb191, align 8, !dbg !20096
  %153 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !20097
  %154 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !20098
  call void @keyIndex_updateBP(%struct.EditNurb* %152, %struct.BPoint* %153, %struct.BPoint* %154, i32 1), !dbg !20099
  %155 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !20100
  %156 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !20101
  %157 = bitcast %struct.BPoint* %155 to i8*, !dbg !20102
  %158 = bitcast %struct.BPoint* %156 to i8*, !dbg !20102
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %157, i8* align 4 %158, i64 36, i1 false), !dbg !20102
  %159 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !20103
  %incdec.ptr192 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %159, i32 1, !dbg !20103
  store %struct.BPoint* %incdec.ptr192, %struct.BPoint** %bp2, align 8, !dbg !20103
  br label %if.end193

if.end193:                                        ; preds = %if.else190, %if.then187
  br label %for.inc194, !dbg !20104

for.inc194:                                       ; preds = %if.end193
  %160 = load i32, i32* %u, align 4, !dbg !20105
  %inc195 = add nsw i32 %160, 1, !dbg !20105
  store i32 %inc195, i32* %u, align 4, !dbg !20105
  %161 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !20106
  %incdec.ptr196 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %161, i32 1, !dbg !20106
  store %struct.BPoint* %incdec.ptr196, %struct.BPoint** %bp, align 8, !dbg !20106
  br label %for.cond180, !dbg !20107, !llvm.loop !20108

for.end197:                                       ; preds = %for.cond180
  br label %for.inc198, !dbg !20110

for.inc198:                                       ; preds = %for.end197
  %162 = load i32, i32* %v, align 4, !dbg !20111
  %inc199 = add nsw i32 %162, 1, !dbg !20111
  store i32 %inc199, i32* %v, align 4, !dbg !20111
  br label %for.cond157, !dbg !20112, !llvm.loop !20113

for.end200:                                       ; preds = %for.cond157
  %163 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !20115
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %163, i32 0, i32 2, !dbg !20117
  %164 = load i16, i16* %type, align 8, !dbg !20117
  %conv201 = sext i16 %164 to i32, !dbg !20115
  %cmp202 = icmp eq i32 %conv201, 4, !dbg !20118
  br i1 %cmp202, label %if.then204, label %if.end205, !dbg !20119

if.then204:                                       ; preds = %for.end200
  %165 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !20120
  call void @BKE_nurb_knot_calc_u(%struct.Nurb* %165), !dbg !20122
  %166 = load %struct.Nurb*, %struct.Nurb** %nu1.addr, align 8, !dbg !20123
  call void @BKE_nurb_knot_calc_v(%struct.Nurb* %166), !dbg !20124
  br label %if.end205, !dbg !20125

if.end205:                                        ; preds = %if.then204, %for.end200
  %167 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !20126
  %168 = load %struct.BPoint*, %struct.BPoint** %temp, align 8, !dbg !20127
  %169 = bitcast %struct.BPoint* %168 to i8*, !dbg !20127
  call void %167(i8* %169), !dbg !20126
  %170 = load %struct.ListBase*, %struct.ListBase** %editnurb.addr, align 8, !dbg !20128
  %171 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !20129
  %172 = bitcast %struct.Nurb* %171 to i8*, !dbg !20129
  call void @BLI_remlink(%struct.ListBase* %170, i8* %172), !dbg !20130
  %173 = load %struct.Nurb*, %struct.Nurb** %nu2.addr, align 8, !dbg !20131
  call void @BKE_nurb_free(%struct.Nurb* %173), !dbg !20132
  br label %return, !dbg !20133

return:                                           ; preds = %if.end205, %if.then71, %if.end62, %if.end25
  ret void, !dbg !20133
}

declare dso_local void @BLI_addhead(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !20134 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !20137, metadata !DIExpression()), !dbg !20138
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !20139, metadata !DIExpression()), !dbg !20140
  %0 = load float, float* %f.addr, align 4, !dbg !20141
  %1 = load float*, float** %r.addr, align 8, !dbg !20142
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !20142
  %2 = load float, float* %arrayidx, align 4, !dbg !20143
  %mul = fmul float %2, %0, !dbg !20143
  store float %mul, float* %arrayidx, align 4, !dbg !20143
  %3 = load float, float* %f.addr, align 4, !dbg !20144
  %4 = load float*, float** %r.addr, align 8, !dbg !20145
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !20145
  %5 = load float, float* %arrayidx1, align 4, !dbg !20146
  %mul2 = fmul float %5, %3, !dbg !20146
  store float %mul2, float* %arrayidx1, align 4, !dbg !20146
  %6 = load float, float* %f.addr, align 4, !dbg !20147
  %7 = load float*, float** %r.addr, align 8, !dbg !20148
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !20148
  %8 = load float, float* %arrayidx3, align 4, !dbg !20149
  %mul4 = fmul float %8, %6, !dbg !20149
  store float %mul4, float* %arrayidx3, align 4, !dbg !20149
  ret void, !dbg !20150
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3v3(float* %a, float* %b) #0 !dbg !20151 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !20154, metadata !DIExpression()), !dbg !20155
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !20156, metadata !DIExpression()), !dbg !20157
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !20158, metadata !DIExpression()), !dbg !20159
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !20160
  %0 = load float*, float** %b.addr, align 8, !dbg !20161
  %1 = load float*, float** %a.addr, align 8, !dbg !20162
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !20163
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !20164
  %call = call float @len_v3(float* %arraydecay1), !dbg !20165
  ret float %call, !dbg !20166
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !20167 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !20170, metadata !DIExpression()), !dbg !20171
  %0 = load float*, float** %a.addr, align 8, !dbg !20172
  %1 = load float*, float** %a.addr, align 8, !dbg !20173
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !20174
  %call1 = call float @sqrtf(float %call) #9, !dbg !20175
  ret float %call1, !dbg !20176
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #5

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !20177 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !20178, metadata !DIExpression()), !dbg !20179
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !20180, metadata !DIExpression()), !dbg !20181
  %0 = load float*, float** %a.addr, align 8, !dbg !20182
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !20182
  %1 = load float, float* %arrayidx, align 4, !dbg !20182
  %2 = load float*, float** %b.addr, align 8, !dbg !20183
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !20183
  %3 = load float, float* %arrayidx1, align 4, !dbg !20183
  %mul = fmul float %1, %3, !dbg !20184
  %4 = load float*, float** %a.addr, align 8, !dbg !20185
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !20185
  %5 = load float, float* %arrayidx2, align 4, !dbg !20185
  %6 = load float*, float** %b.addr, align 8, !dbg !20186
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !20186
  %7 = load float, float* %arrayidx3, align 4, !dbg !20186
  %mul4 = fmul float %5, %7, !dbg !20187
  %add = fadd float %mul, %mul4, !dbg !20188
  %8 = load float*, float** %a.addr, align 8, !dbg !20189
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !20189
  %9 = load float, float* %arrayidx5, align 4, !dbg !20189
  %10 = load float*, float** %b.addr, align 8, !dbg !20190
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !20190
  %11 = load float, float* %arrayidx6, align 4, !dbg !20190
  %mul7 = fmul float %9, %11, !dbg !20191
  %add8 = fadd float %add, %mul7, !dbg !20192
  ret float %add8, !dbg !20193
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @is_u_selected(%struct.Nurb* %nu, i32 %u) #0 !dbg !20194 {
entry:
  %retval = alloca i8, align 1
  %nu.addr = alloca %struct.Nurb*, align 8
  %u.addr = alloca i32, align 4
  %bp = alloca %struct.BPoint*, align 8
  %v = alloca i32, align 4
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !20197, metadata !DIExpression()), !dbg !20198
  store i32 %u, i32* %u.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr, metadata !20199, metadata !DIExpression()), !dbg !20200
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !20201, metadata !DIExpression()), !dbg !20202
  call void @llvm.dbg.declare(metadata i32* %v, metadata !20203, metadata !DIExpression()), !dbg !20204
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20205
  %bp1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %0, i32 0, i32 17, !dbg !20206
  %1 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !20206
  %2 = load i32, i32* %u.addr, align 4, !dbg !20207
  %idxprom = sext i32 %2 to i64, !dbg !20205
  %arrayidx = getelementptr inbounds %struct.BPoint, %struct.BPoint* %1, i64 %idxprom, !dbg !20205
  store %struct.BPoint* %arrayidx, %struct.BPoint** %bp, align 8, !dbg !20208
  store i32 0, i32* %v, align 4, !dbg !20209
  br label %for.cond, !dbg !20211

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %v, align 4, !dbg !20212
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20214
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 7, !dbg !20215
  %5 = load i32, i32* %pntsv, align 4, !dbg !20215
  %sub = sub nsw i32 %5, 1, !dbg !20216
  %cmp = icmp slt i32 %3, %sub, !dbg !20217
  br i1 %cmp, label %for.body, label %for.end, !dbg !20218

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %v, align 4, !dbg !20219
  %cmp2 = icmp ne i32 %6, 0, !dbg !20222
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !20223

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !20224
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %7, i32 0, i32 3, !dbg !20225
  %8 = load i16, i16* %f1, align 4, !dbg !20225
  %conv = sext i16 %8 to i32, !dbg !20224
  %and = and i32 %conv, 1, !dbg !20226
  %tobool = icmp ne i32 %and, 0, !dbg !20226
  br i1 %tobool, label %if.then, label %if.end, !dbg !20227

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !20228
  br label %return, !dbg !20228

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !20230

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %v, align 4, !dbg !20231
  %inc = add nsw i32 %9, 1, !dbg !20231
  store i32 %inc, i32* %v, align 4, !dbg !20231
  %10 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20232
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 6, !dbg !20233
  %11 = load i32, i32* %pntsu, align 8, !dbg !20233
  %12 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !20234
  %idx.ext = sext i32 %11 to i64, !dbg !20234
  %add.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %12, i64 %idx.ext, !dbg !20234
  store %struct.BPoint* %add.ptr, %struct.BPoint** %bp, align 8, !dbg !20234
  br label %for.cond, !dbg !20235, !llvm.loop !20236

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !20238
  br label %return, !dbg !20238

return:                                           ; preds = %for.end, %if.then
  %13 = load i8, i8* %retval, align 1, !dbg !20239
  ret i8 %13, !dbg !20239
}

; Function Attrs: noinline nounwind uwtable
define internal void @rotate_direction_nurb(%struct.Nurb* %nu) #0 !dbg !20240 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %bp1 = alloca %struct.BPoint*, align 8
  %bp2 = alloca %struct.BPoint*, align 8
  %temp = alloca %struct.BPoint*, align 8
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %sw_ap = alloca i32, align 4
  %sw_ap3 = alloca i16, align 2
  %sw_ap6 = alloca i16, align 2
  %sw_ap9 = alloca i16, align 2
  %sw_ap12 = alloca float*, align 8
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !20243, metadata !DIExpression()), !dbg !20244
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp1, metadata !20245, metadata !DIExpression()), !dbg !20246
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp2, metadata !20247, metadata !DIExpression()), !dbg !20248
  call void @llvm.dbg.declare(metadata %struct.BPoint** %temp, metadata !20249, metadata !DIExpression()), !dbg !20250
  call void @llvm.dbg.declare(metadata i32* %u, metadata !20251, metadata !DIExpression()), !dbg !20252
  call void @llvm.dbg.declare(metadata i32* %v, metadata !20253, metadata !DIExpression()), !dbg !20254
  call void @llvm.dbg.declare(metadata i32* %sw_ap, metadata !20255, metadata !DIExpression()), !dbg !20257
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20257
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %0, i32 0, i32 6, !dbg !20257
  %1 = load i32, i32* %pntsu, align 8, !dbg !20257
  store i32 %1, i32* %sw_ap, align 4, !dbg !20257
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20257
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %2, i32 0, i32 7, !dbg !20257
  %3 = load i32, i32* %pntsv, align 4, !dbg !20257
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20257
  %pntsu1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 6, !dbg !20257
  store i32 %3, i32* %pntsu1, align 8, !dbg !20257
  %5 = load i32, i32* %sw_ap, align 4, !dbg !20257
  %6 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20257
  %pntsv2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 7, !dbg !20257
  store i32 %5, i32* %pntsv2, align 4, !dbg !20257
  call void @llvm.dbg.declare(metadata i16* %sw_ap3, metadata !20258, metadata !DIExpression()), !dbg !20260
  %7 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20260
  %orderu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %7, i32 0, i32 11, !dbg !20260
  %8 = load i16, i16* %orderu, align 8, !dbg !20260
  store i16 %8, i16* %sw_ap3, align 2, !dbg !20260
  %9 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20260
  %orderv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 12, !dbg !20260
  %10 = load i16, i16* %orderv, align 2, !dbg !20260
  %11 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20260
  %orderu4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 11, !dbg !20260
  store i16 %10, i16* %orderu4, align 8, !dbg !20260
  %12 = load i16, i16* %sw_ap3, align 2, !dbg !20260
  %13 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20260
  %orderv5 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 12, !dbg !20260
  store i16 %12, i16* %orderv5, align 2, !dbg !20260
  call void @llvm.dbg.declare(metadata i16* %sw_ap6, metadata !20261, metadata !DIExpression()), !dbg !20263
  %14 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20263
  %resolu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 9, !dbg !20263
  %15 = load i16, i16* %resolu, align 4, !dbg !20263
  store i16 %15, i16* %sw_ap6, align 2, !dbg !20263
  %16 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20263
  %resolv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %16, i32 0, i32 10, !dbg !20263
  %17 = load i16, i16* %resolv, align 2, !dbg !20263
  %18 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20263
  %resolu7 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %18, i32 0, i32 9, !dbg !20263
  store i16 %17, i16* %resolu7, align 4, !dbg !20263
  %19 = load i16, i16* %sw_ap6, align 2, !dbg !20263
  %20 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20263
  %resolv8 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %20, i32 0, i32 10, !dbg !20263
  store i16 %19, i16* %resolv8, align 2, !dbg !20263
  call void @llvm.dbg.declare(metadata i16* %sw_ap9, metadata !20264, metadata !DIExpression()), !dbg !20266
  %21 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20266
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 13, !dbg !20266
  %22 = load i16, i16* %flagu, align 4, !dbg !20266
  store i16 %22, i16* %sw_ap9, align 2, !dbg !20266
  %23 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20266
  %flagv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %23, i32 0, i32 14, !dbg !20266
  %24 = load i16, i16* %flagv, align 2, !dbg !20266
  %25 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20266
  %flagu10 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %25, i32 0, i32 13, !dbg !20266
  store i16 %24, i16* %flagu10, align 4, !dbg !20266
  %26 = load i16, i16* %sw_ap9, align 2, !dbg !20266
  %27 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20266
  %flagv11 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %27, i32 0, i32 14, !dbg !20266
  store i16 %26, i16* %flagv11, align 2, !dbg !20266
  call void @llvm.dbg.declare(metadata float** %sw_ap12, metadata !20267, metadata !DIExpression()), !dbg !20269
  %28 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20269
  %knotsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 15, !dbg !20269
  %29 = load float*, float** %knotsu, align 8, !dbg !20269
  store float* %29, float** %sw_ap12, align 8, !dbg !20269
  %30 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20269
  %knotsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %30, i32 0, i32 16, !dbg !20269
  %31 = load float*, float** %knotsv, align 8, !dbg !20269
  %32 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20269
  %knotsu13 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %32, i32 0, i32 15, !dbg !20269
  store float* %31, float** %knotsu13, align 8, !dbg !20269
  %33 = load float*, float** %sw_ap12, align 8, !dbg !20269
  %34 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20269
  %knotsv14 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %34, i32 0, i32 16, !dbg !20269
  store float* %33, float** %knotsv14, align 8, !dbg !20269
  %35 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20270
  %knotsv15 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %35, i32 0, i32 16, !dbg !20271
  %36 = load float*, float** %knotsv15, align 8, !dbg !20271
  %37 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20272
  %orderv16 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %37, i32 0, i32 12, !dbg !20272
  %38 = load i16, i16* %orderv16, align 2, !dbg !20272
  %conv = sext i16 %38 to i32, !dbg !20272
  %39 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20272
  %pntsv17 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %39, i32 0, i32 7, !dbg !20272
  %40 = load i32, i32* %pntsv17, align 4, !dbg !20272
  %add = add nsw i32 %conv, %40, !dbg !20272
  %41 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20272
  %flagv18 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %41, i32 0, i32 14, !dbg !20272
  %42 = load i16, i16* %flagv18, align 2, !dbg !20272
  %conv19 = sext i16 %42 to i32, !dbg !20272
  %and = and i32 %conv19, 1, !dbg !20272
  %tobool = icmp ne i32 %and, 0, !dbg !20272
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20272

cond.true:                                        ; preds = %entry
  %43 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20272
  %orderv20 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %43, i32 0, i32 12, !dbg !20272
  %44 = load i16, i16* %orderv20, align 2, !dbg !20272
  %conv21 = sext i16 %44 to i32, !dbg !20272
  %sub = sub nsw i32 %conv21, 1, !dbg !20272
  br label %cond.end, !dbg !20272

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !20272

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ 0, %cond.false ], !dbg !20272
  %add22 = add nsw i32 %add, %cond, !dbg !20272
  call void @switchdirection_knots(float* %36, i32 %add22), !dbg !20273
  %45 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !20274
  %46 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20275
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %46, i32 0, i32 17, !dbg !20276
  %47 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !20276
  %48 = bitcast %struct.BPoint* %47 to i8*, !dbg !20275
  %call = call i8* %45(i8* %48), !dbg !20274
  %49 = bitcast i8* %call to %struct.BPoint*, !dbg !20274
  store %struct.BPoint* %49, %struct.BPoint** %temp, align 8, !dbg !20277
  %50 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20278
  %bp23 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %50, i32 0, i32 17, !dbg !20279
  %51 = load %struct.BPoint*, %struct.BPoint** %bp23, align 8, !dbg !20279
  store %struct.BPoint* %51, %struct.BPoint** %bp1, align 8, !dbg !20280
  store i32 0, i32* %v, align 4, !dbg !20281
  br label %for.cond, !dbg !20283

for.cond:                                         ; preds = %for.inc37, %cond.end
  %52 = load i32, i32* %v, align 4, !dbg !20284
  %53 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20286
  %pntsv24 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %53, i32 0, i32 7, !dbg !20287
  %54 = load i32, i32* %pntsv24, align 4, !dbg !20287
  %cmp = icmp slt i32 %52, %54, !dbg !20288
  br i1 %cmp, label %for.body, label %for.end39, !dbg !20289

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %u, align 4, !dbg !20290
  br label %for.cond26, !dbg !20293

for.cond26:                                       ; preds = %for.inc, %for.body
  %55 = load i32, i32* %u, align 4, !dbg !20294
  %56 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20296
  %pntsu27 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %56, i32 0, i32 6, !dbg !20297
  %57 = load i32, i32* %pntsu27, align 8, !dbg !20297
  %cmp28 = icmp slt i32 %55, %57, !dbg !20298
  br i1 %cmp28, label %for.body30, label %for.end, !dbg !20299

for.body30:                                       ; preds = %for.cond26
  %58 = load %struct.BPoint*, %struct.BPoint** %temp, align 8, !dbg !20300
  %59 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20302
  %pntsu31 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %59, i32 0, i32 6, !dbg !20303
  %60 = load i32, i32* %pntsu31, align 8, !dbg !20303
  %61 = load i32, i32* %u, align 4, !dbg !20304
  %sub32 = sub nsw i32 %60, %61, !dbg !20305
  %sub33 = sub nsw i32 %sub32, 1, !dbg !20306
  %62 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20307
  %pntsv34 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %62, i32 0, i32 7, !dbg !20308
  %63 = load i32, i32* %pntsv34, align 4, !dbg !20308
  %mul = mul nsw i32 %sub33, %63, !dbg !20309
  %idx.ext = sext i32 %mul to i64, !dbg !20310
  %add.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %58, i64 %idx.ext, !dbg !20310
  %64 = load i32, i32* %v, align 4, !dbg !20311
  %idx.ext35 = sext i32 %64 to i64, !dbg !20312
  %add.ptr36 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr, i64 %idx.ext35, !dbg !20312
  store %struct.BPoint* %add.ptr36, %struct.BPoint** %bp2, align 8, !dbg !20313
  %65 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !20314
  %66 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !20315
  %67 = bitcast %struct.BPoint* %65 to i8*, !dbg !20316
  %68 = bitcast %struct.BPoint* %66 to i8*, !dbg !20316
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %68, i64 36, i1 false), !dbg !20316
  br label %for.inc, !dbg !20317

for.inc:                                          ; preds = %for.body30
  %69 = load i32, i32* %u, align 4, !dbg !20318
  %inc = add nsw i32 %69, 1, !dbg !20318
  store i32 %inc, i32* %u, align 4, !dbg !20318
  %70 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !20319
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %70, i32 1, !dbg !20319
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp1, align 8, !dbg !20319
  br label %for.cond26, !dbg !20320, !llvm.loop !20321

for.end:                                          ; preds = %for.cond26
  br label %for.inc37, !dbg !20323

for.inc37:                                        ; preds = %for.end
  %71 = load i32, i32* %v, align 4, !dbg !20324
  %inc38 = add nsw i32 %71, 1, !dbg !20324
  store i32 %inc38, i32* %v, align 4, !dbg !20324
  br label %for.cond, !dbg !20325, !llvm.loop !20326

for.end39:                                        ; preds = %for.cond
  %72 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !20328
  %73 = load %struct.BPoint*, %struct.BPoint** %temp, align 8, !dbg !20329
  %74 = bitcast %struct.BPoint* %73 to i8*, !dbg !20329
  call void %72(i8* %74), !dbg !20328
  ret void, !dbg !20330
}

; Function Attrs: noinline nounwind uwtable
define internal void @switchdirection_knots(float* %base, i32 %tot) #0 !dbg !20331 {
entry:
  %base.addr = alloca float*, align 8
  %tot.addr = alloca i32, align 4
  %fp1 = alloca float*, align 8
  %fp2 = alloca float*, align 8
  %tempf = alloca float*, align 8
  %a = alloca i32, align 4
  %sw_ap = alloca float, align 4
  store float* %base, float** %base.addr, align 8
  call void @llvm.dbg.declare(metadata float** %base.addr, metadata !20334, metadata !DIExpression()), !dbg !20335
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !20336, metadata !DIExpression()), !dbg !20337
  call void @llvm.dbg.declare(metadata float** %fp1, metadata !20338, metadata !DIExpression()), !dbg !20339
  call void @llvm.dbg.declare(metadata float** %fp2, metadata !20340, metadata !DIExpression()), !dbg !20341
  call void @llvm.dbg.declare(metadata float** %tempf, metadata !20342, metadata !DIExpression()), !dbg !20343
  call void @llvm.dbg.declare(metadata i32* %a, metadata !20344, metadata !DIExpression()), !dbg !20345
  %0 = load float*, float** %base.addr, align 8, !dbg !20346
  %cmp = icmp eq float* %0, null, !dbg !20348
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !20349

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %tot.addr, align 4, !dbg !20350
  %cmp1 = icmp eq i32 %1, 0, !dbg !20351
  br i1 %cmp1, label %if.then, label %if.end, !dbg !20352

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !20353

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i32, i32* %tot.addr, align 4, !dbg !20354
  store i32 %2, i32* %a, align 4, !dbg !20355
  %3 = load float*, float** %base.addr, align 8, !dbg !20356
  store float* %3, float** %fp1, align 8, !dbg !20357
  %4 = load float*, float** %fp1, align 8, !dbg !20358
  %5 = load i32, i32* %a, align 4, !dbg !20359
  %sub = sub nsw i32 %5, 1, !dbg !20360
  %idx.ext = sext i32 %sub to i64, !dbg !20361
  %add.ptr = getelementptr inbounds float, float* %4, i64 %idx.ext, !dbg !20361
  store float* %add.ptr, float** %fp2, align 8, !dbg !20362
  %6 = load i32, i32* %a, align 4, !dbg !20363
  %div = sdiv i32 %6, 2, !dbg !20363
  store i32 %div, i32* %a, align 4, !dbg !20363
  br label %while.cond, !dbg !20364

while.cond:                                       ; preds = %while.body, %if.end
  %7 = load float*, float** %fp1, align 8, !dbg !20365
  %8 = load float*, float** %fp2, align 8, !dbg !20366
  %cmp2 = icmp ne float* %7, %8, !dbg !20367
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !20368

land.rhs:                                         ; preds = %while.cond
  %9 = load i32, i32* %a, align 4, !dbg !20369
  %cmp3 = icmp sgt i32 %9, 0, !dbg !20370
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %cmp3, %land.rhs ], !dbg !20371
  br i1 %10, label %while.body, label %while.end, !dbg !20364

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata float* %sw_ap, metadata !20372, metadata !DIExpression()), !dbg !20375
  %11 = load float*, float** %fp1, align 8, !dbg !20375
  %12 = load float, float* %11, align 4, !dbg !20375
  store float %12, float* %sw_ap, align 4, !dbg !20375
  %13 = load float*, float** %fp2, align 8, !dbg !20375
  %14 = load float, float* %13, align 4, !dbg !20375
  %15 = load float*, float** %fp1, align 8, !dbg !20375
  store float %14, float* %15, align 4, !dbg !20375
  %16 = load float, float* %sw_ap, align 4, !dbg !20375
  %17 = load float*, float** %fp2, align 8, !dbg !20375
  store float %16, float* %17, align 4, !dbg !20375
  %18 = load i32, i32* %a, align 4, !dbg !20376
  %dec = add nsw i32 %18, -1, !dbg !20376
  store i32 %dec, i32* %a, align 4, !dbg !20376
  %19 = load float*, float** %fp1, align 8, !dbg !20377
  %incdec.ptr = getelementptr inbounds float, float* %19, i32 1, !dbg !20377
  store float* %incdec.ptr, float** %fp1, align 8, !dbg !20377
  %20 = load float*, float** %fp2, align 8, !dbg !20378
  %incdec.ptr4 = getelementptr inbounds float, float* %20, i32 -1, !dbg !20378
  store float* %incdec.ptr4, float** %fp2, align 8, !dbg !20378
  br label %while.cond, !dbg !20364, !llvm.loop !20379

while.end:                                        ; preds = %land.end
  %21 = load i32, i32* %tot.addr, align 4, !dbg !20381
  store i32 %21, i32* %a, align 4, !dbg !20382
  %22 = load float*, float** %base.addr, align 8, !dbg !20383
  store float* %22, float** %fp1, align 8, !dbg !20384
  %23 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !20385
  %24 = load i32, i32* %a, align 4, !dbg !20386
  %conv = sext i32 %24 to i64, !dbg !20386
  %mul = mul i64 4, %conv, !dbg !20387
  %call = call i8* %23(i64 %mul, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.212, i64 0, i64 0)), !dbg !20385
  %25 = bitcast i8* %call to float*, !dbg !20385
  store float* %25, float** %tempf, align 8, !dbg !20388
  store float* %25, float** %fp2, align 8, !dbg !20389
  br label %while.cond5, !dbg !20390

while.cond5:                                      ; preds = %while.body7, %while.end
  %26 = load i32, i32* %a, align 4, !dbg !20391
  %dec6 = add nsw i32 %26, -1, !dbg !20391
  store i32 %dec6, i32* %a, align 4, !dbg !20391
  %tobool = icmp ne i32 %26, 0, !dbg !20390
  br i1 %tobool, label %while.body7, label %while.end13, !dbg !20390

while.body7:                                      ; preds = %while.cond5
  %27 = load float*, float** %fp1, align 8, !dbg !20392
  %arrayidx = getelementptr inbounds float, float* %27, i64 1, !dbg !20392
  %28 = load float, float* %arrayidx, align 4, !dbg !20392
  %29 = load float*, float** %fp1, align 8, !dbg !20394
  %arrayidx8 = getelementptr inbounds float, float* %29, i64 0, !dbg !20394
  %30 = load float, float* %arrayidx8, align 4, !dbg !20394
  %sub9 = fsub float %28, %30, !dbg !20395
  %31 = call float @llvm.fabs.f32(float %sub9), !dbg !20396
  %32 = load float*, float** %fp2, align 8, !dbg !20397
  %arrayidx10 = getelementptr inbounds float, float* %32, i64 0, !dbg !20397
  store float %31, float* %arrayidx10, align 4, !dbg !20398
  %33 = load float*, float** %fp1, align 8, !dbg !20399
  %incdec.ptr11 = getelementptr inbounds float, float* %33, i32 1, !dbg !20399
  store float* %incdec.ptr11, float** %fp1, align 8, !dbg !20399
  %34 = load float*, float** %fp2, align 8, !dbg !20400
  %incdec.ptr12 = getelementptr inbounds float, float* %34, i32 1, !dbg !20400
  store float* %incdec.ptr12, float** %fp2, align 8, !dbg !20400
  br label %while.cond5, !dbg !20390, !llvm.loop !20401

while.end13:                                      ; preds = %while.cond5
  %35 = load i32, i32* %tot.addr, align 4, !dbg !20403
  %sub14 = sub nsw i32 %35, 1, !dbg !20404
  store i32 %sub14, i32* %a, align 4, !dbg !20405
  %36 = load float*, float** %base.addr, align 8, !dbg !20406
  store float* %36, float** %fp1, align 8, !dbg !20407
  %37 = load float*, float** %tempf, align 8, !dbg !20408
  store float* %37, float** %fp2, align 8, !dbg !20409
  %38 = load float*, float** %fp1, align 8, !dbg !20410
  %arrayidx15 = getelementptr inbounds float, float* %38, i64 0, !dbg !20410
  store float 0.000000e+00, float* %arrayidx15, align 4, !dbg !20411
  %39 = load float*, float** %fp1, align 8, !dbg !20412
  %incdec.ptr16 = getelementptr inbounds float, float* %39, i32 1, !dbg !20412
  store float* %incdec.ptr16, float** %fp1, align 8, !dbg !20412
  br label %while.cond17, !dbg !20413

while.cond17:                                     ; preds = %while.body20, %while.end13
  %40 = load i32, i32* %a, align 4, !dbg !20414
  %dec18 = add nsw i32 %40, -1, !dbg !20414
  store i32 %dec18, i32* %a, align 4, !dbg !20414
  %tobool19 = icmp ne i32 %40, 0, !dbg !20413
  br i1 %tobool19, label %while.body20, label %while.end26, !dbg !20413

while.body20:                                     ; preds = %while.cond17
  %41 = load float*, float** %fp1, align 8, !dbg !20415
  %arrayidx21 = getelementptr inbounds float, float* %41, i64 -1, !dbg !20415
  %42 = load float, float* %arrayidx21, align 4, !dbg !20415
  %43 = load float*, float** %fp2, align 8, !dbg !20417
  %arrayidx22 = getelementptr inbounds float, float* %43, i64 0, !dbg !20417
  %44 = load float, float* %arrayidx22, align 4, !dbg !20417
  %add = fadd float %42, %44, !dbg !20418
  %45 = load float*, float** %fp1, align 8, !dbg !20419
  %arrayidx23 = getelementptr inbounds float, float* %45, i64 0, !dbg !20419
  store float %add, float* %arrayidx23, align 4, !dbg !20420
  %46 = load float*, float** %fp1, align 8, !dbg !20421
  %incdec.ptr24 = getelementptr inbounds float, float* %46, i32 1, !dbg !20421
  store float* %incdec.ptr24, float** %fp1, align 8, !dbg !20421
  %47 = load float*, float** %fp2, align 8, !dbg !20422
  %incdec.ptr25 = getelementptr inbounds float, float* %47, i32 1, !dbg !20422
  store float* %incdec.ptr25, float** %fp2, align 8, !dbg !20422
  br label %while.cond17, !dbg !20413, !llvm.loop !20423

while.end26:                                      ; preds = %while.cond17
  %48 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !20425
  %49 = load float*, float** %tempf, align 8, !dbg !20426
  %50 = bitcast float* %49 to i8*, !dbg !20426
  call void %48(i8* %50), !dbg !20425
  br label %return, !dbg !20427

return:                                           ; preds = %while.end26, %if.then
  ret void, !dbg !20427
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

declare dso_local float @ED_view3d_select_dist_px() #2

declare dso_local void @ED_view3d_init_mats_rv3d(%struct.Object*, %struct.RegionView3D*) #2

declare dso_local void @nurbs_foreachScreenVert(%struct.ViewContext*, void (i8*, %struct.Nurb*, %struct.BPoint*, %struct.BezTriple*, i32, float*)*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @findnearestNurbvert__doClosest(i8* %userData, %struct.Nurb* %nu, %struct.BPoint* %bp, %struct.BezTriple* %bezt, i32 %beztindex, float* %screen_co) #0 !dbg !20428 {
entry:
  %userData.addr = alloca i8*, align 8
  %nu.addr = alloca %struct.Nurb*, align 8
  %bp.addr = alloca %struct.BPoint*, align 8
  %bezt.addr = alloca %struct.BezTriple*, align 8
  %beztindex.addr = alloca i32, align 4
  %screen_co.addr = alloca float*, align 8
  %data = alloca %struct.anon.1*, align 8
  %flag = alloca i16, align 2
  %dist_test = alloca float, align 4
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !20431, metadata !DIExpression()), !dbg !20432
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !20433, metadata !DIExpression()), !dbg !20434
  store %struct.BPoint* %bp, %struct.BPoint** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp.addr, metadata !20435, metadata !DIExpression()), !dbg !20436
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !20437, metadata !DIExpression()), !dbg !20438
  store i32 %beztindex, i32* %beztindex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %beztindex.addr, metadata !20439, metadata !DIExpression()), !dbg !20440
  store float* %screen_co, float** %screen_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %screen_co.addr, metadata !20441, metadata !DIExpression()), !dbg !20442
  call void @llvm.dbg.declare(metadata %struct.anon.1** %data, metadata !20443, metadata !DIExpression()), !dbg !20454
  %0 = load i8*, i8** %userData.addr, align 8, !dbg !20455
  %1 = bitcast i8* %0 to %struct.anon.1*, !dbg !20455
  store %struct.anon.1* %1, %struct.anon.1** %data, align 8, !dbg !20454
  call void @llvm.dbg.declare(metadata i16* %flag, metadata !20456, metadata !DIExpression()), !dbg !20457
  call void @llvm.dbg.declare(metadata float* %dist_test, metadata !20458, metadata !DIExpression()), !dbg !20459
  %2 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !20460
  %tobool = icmp ne %struct.BPoint* %2, null, !dbg !20460
  br i1 %tobool, label %if.then, label %if.else, !dbg !20462

if.then:                                          ; preds = %entry
  %3 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !20463
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %3, i32 0, i32 3, !dbg !20465
  %4 = load i16, i16* %f1, align 4, !dbg !20465
  store i16 %4, i16* %flag, align 2, !dbg !20466
  br label %if.end11, !dbg !20467

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %beztindex.addr, align 4, !dbg !20468
  %cmp = icmp eq i32 %5, 0, !dbg !20471
  br i1 %cmp, label %if.then1, label %if.else3, !dbg !20472

if.then1:                                         ; preds = %if.else
  %6 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !20473
  %f12 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %6, i32 0, i32 7, !dbg !20475
  %7 = load i8, i8* %f12, align 1, !dbg !20475
  %conv = zext i8 %7 to i16, !dbg !20473
  store i16 %conv, i16* %flag, align 2, !dbg !20476
  br label %if.end10, !dbg !20477

if.else3:                                         ; preds = %if.else
  %8 = load i32, i32* %beztindex.addr, align 4, !dbg !20478
  %cmp4 = icmp eq i32 %8, 1, !dbg !20480
  br i1 %cmp4, label %if.then6, label %if.else8, !dbg !20481

if.then6:                                         ; preds = %if.else3
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !20482
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %9, i32 0, i32 8, !dbg !20484
  %10 = load i8, i8* %f2, align 4, !dbg !20484
  %conv7 = zext i8 %10 to i16, !dbg !20482
  store i16 %conv7, i16* %flag, align 2, !dbg !20485
  br label %if.end, !dbg !20486

if.else8:                                         ; preds = %if.else3
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !20487
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %11, i32 0, i32 9, !dbg !20489
  %12 = load i8, i8* %f3, align 1, !dbg !20489
  %conv9 = zext i8 %12 to i16, !dbg !20487
  store i16 %conv9, i16* %flag, align 2, !dbg !20490
  br label %if.end

if.end:                                           ; preds = %if.else8, %if.then6
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then1
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.then
  %13 = load %struct.anon.1*, %struct.anon.1** %data, align 8, !dbg !20491
  %mval_fl = getelementptr inbounds %struct.anon.1, %struct.anon.1* %13, i32 0, i32 6, !dbg !20492
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %mval_fl, i64 0, i64 0, !dbg !20491
  %14 = load float*, float** %screen_co.addr, align 8, !dbg !20493
  %call = call float @len_manhattan_v2v2(float* %arraydecay, float* %14), !dbg !20494
  store float %call, float* %dist_test, align 4, !dbg !20495
  %15 = load i16, i16* %flag, align 2, !dbg !20496
  %conv12 = sext i16 %15 to i32, !dbg !20496
  %and = and i32 %conv12, 1, !dbg !20498
  %16 = load %struct.anon.1*, %struct.anon.1** %data, align 8, !dbg !20499
  %select = getelementptr inbounds %struct.anon.1, %struct.anon.1* %16, i32 0, i32 5, !dbg !20500
  %17 = load i32, i32* %select, align 8, !dbg !20500
  %cmp13 = icmp eq i32 %and, %17, !dbg !20501
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !20502

if.then15:                                        ; preds = %if.end11
  %18 = load float, float* %dist_test, align 4, !dbg !20503
  %add = fadd float %18, 5.000000e+00, !dbg !20503
  store float %add, float* %dist_test, align 4, !dbg !20503
  br label %if.end16, !dbg !20504

if.end16:                                         ; preds = %if.then15, %if.end11
  %19 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !20505
  %tobool17 = icmp ne %struct.BezTriple* %19, null, !dbg !20505
  br i1 %tobool17, label %land.lhs.true, label %if.end22, !dbg !20507

land.lhs.true:                                    ; preds = %if.end16
  %20 = load i32, i32* %beztindex.addr, align 4, !dbg !20508
  %cmp18 = icmp eq i32 %20, 1, !dbg !20509
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !20510

if.then20:                                        ; preds = %land.lhs.true
  %21 = load float, float* %dist_test, align 4, !dbg !20511
  %add21 = fadd float %21, 3.000000e+00, !dbg !20511
  store float %add21, float* %dist_test, align 4, !dbg !20511
  br label %if.end22, !dbg !20512

if.end22:                                         ; preds = %if.then20, %land.lhs.true, %if.end16
  %22 = load float, float* %dist_test, align 4, !dbg !20513
  %23 = load %struct.anon.1*, %struct.anon.1** %data, align 8, !dbg !20515
  %dist = getelementptr inbounds %struct.anon.1, %struct.anon.1* %23, i32 0, i32 3, !dbg !20516
  %24 = load float, float* %dist, align 8, !dbg !20516
  %cmp23 = fcmp olt float %22, %24, !dbg !20517
  br i1 %cmp23, label %if.then25, label %if.end30, !dbg !20518

if.then25:                                        ; preds = %if.end22
  %25 = load float, float* %dist_test, align 4, !dbg !20519
  %26 = load %struct.anon.1*, %struct.anon.1** %data, align 8, !dbg !20521
  %dist26 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %26, i32 0, i32 3, !dbg !20522
  store float %25, float* %dist26, align 8, !dbg !20523
  %27 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !20524
  %28 = load %struct.anon.1*, %struct.anon.1** %data, align 8, !dbg !20525
  %bp27 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %28, i32 0, i32 0, !dbg !20526
  store %struct.BPoint* %27, %struct.BPoint** %bp27, align 8, !dbg !20527
  %29 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !20528
  %30 = load %struct.anon.1*, %struct.anon.1** %data, align 8, !dbg !20529
  %bezt28 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %30, i32 0, i32 1, !dbg !20530
  store %struct.BezTriple* %29, %struct.BezTriple** %bezt28, align 8, !dbg !20531
  %31 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !20532
  %32 = load %struct.anon.1*, %struct.anon.1** %data, align 8, !dbg !20533
  %nurb = getelementptr inbounds %struct.anon.1, %struct.anon.1* %32, i32 0, i32 2, !dbg !20534
  store %struct.Nurb* %31, %struct.Nurb** %nurb, align 8, !dbg !20535
  %33 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !20536
  %tobool29 = icmp ne %struct.BezTriple* %33, null, !dbg !20536
  br i1 %tobool29, label %cond.true, label %cond.false, !dbg !20536

cond.true:                                        ; preds = %if.then25
  %34 = load i32, i32* %beztindex.addr, align 4, !dbg !20537
  br label %cond.end, !dbg !20536

cond.false:                                       ; preds = %if.then25
  br label %cond.end, !dbg !20536

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %34, %cond.true ], [ 0, %cond.false ], !dbg !20536
  %35 = load %struct.anon.1*, %struct.anon.1** %data, align 8, !dbg !20538
  %hpoint = getelementptr inbounds %struct.anon.1, %struct.anon.1* %35, i32 0, i32 4, !dbg !20539
  store i32 %cond, i32* %hpoint, align 4, !dbg !20540
  br label %if.end30, !dbg !20541

if.end30:                                         ; preds = %cond.end, %if.end22
  ret void, !dbg !20542
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_manhattan_v2v2(float* %a, float* %b) #0 !dbg !20543 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [2 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !20544, metadata !DIExpression()), !dbg !20545
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !20546, metadata !DIExpression()), !dbg !20547
  call void @llvm.dbg.declare(metadata [2 x float]* %d, metadata !20548, metadata !DIExpression()), !dbg !20549
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !20550
  %0 = load float*, float** %b.addr, align 8, !dbg !20551
  %1 = load float*, float** %a.addr, align 8, !dbg !20552
  call void @sub_v2_v2v2(float* %arraydecay, float* %0, float* %1), !dbg !20553
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !20554
  %call = call float @len_manhattan_v2(float* %arraydecay1), !dbg !20555
  ret float %call, !dbg !20556
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v2_v2v2(float* %r, float* %a, float* %b) #0 !dbg !20557 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !20558, metadata !DIExpression()), !dbg !20559
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !20560, metadata !DIExpression()), !dbg !20561
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !20562, metadata !DIExpression()), !dbg !20563
  %0 = load float*, float** %a.addr, align 8, !dbg !20564
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !20564
  %1 = load float, float* %arrayidx, align 4, !dbg !20564
  %2 = load float*, float** %b.addr, align 8, !dbg !20565
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !20565
  %3 = load float, float* %arrayidx1, align 4, !dbg !20565
  %sub = fsub float %1, %3, !dbg !20566
  %4 = load float*, float** %r.addr, align 8, !dbg !20567
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !20567
  store float %sub, float* %arrayidx2, align 4, !dbg !20568
  %5 = load float*, float** %a.addr, align 8, !dbg !20569
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !20569
  %6 = load float, float* %arrayidx3, align 4, !dbg !20569
  %7 = load float*, float** %b.addr, align 8, !dbg !20570
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !20570
  %8 = load float, float* %arrayidx4, align 4, !dbg !20570
  %sub5 = fsub float %6, %8, !dbg !20571
  %9 = load float*, float** %r.addr, align 8, !dbg !20572
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !20572
  store float %sub5, float* %arrayidx6, align 4, !dbg !20573
  ret void, !dbg !20574
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_manhattan_v2(float* %v) #0 !dbg !20575 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !20576, metadata !DIExpression()), !dbg !20577
  %0 = load float*, float** %v.addr, align 8, !dbg !20578
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !20578
  %1 = load float, float* %arrayidx, align 4, !dbg !20578
  %2 = call float @llvm.fabs.f32(float %1), !dbg !20579
  %3 = load float*, float** %v.addr, align 8, !dbg !20580
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !20580
  %4 = load float, float* %arrayidx1, align 4, !dbg !20580
  %5 = call float @llvm.fabs.f32(float %4), !dbg !20581
  %add = fadd float %2, %5, !dbg !20582
  ret float %add, !dbg !20583
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3(float* %r, float* %a) #0 !dbg !20584 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !20585, metadata !DIExpression()), !dbg !20586
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !20587, metadata !DIExpression()), !dbg !20588
  %0 = load float*, float** %a.addr, align 8, !dbg !20589
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !20589
  %1 = load float, float* %arrayidx, align 4, !dbg !20589
  %2 = load float*, float** %r.addr, align 8, !dbg !20590
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !20590
  %3 = load float, float* %arrayidx1, align 4, !dbg !20591
  %sub = fsub float %3, %1, !dbg !20591
  store float %sub, float* %arrayidx1, align 4, !dbg !20591
  %4 = load float*, float** %a.addr, align 8, !dbg !20592
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !20592
  %5 = load float, float* %arrayidx2, align 4, !dbg !20592
  %6 = load float*, float** %r.addr, align 8, !dbg !20593
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !20593
  %7 = load float, float* %arrayidx3, align 4, !dbg !20594
  %sub4 = fsub float %7, %5, !dbg !20594
  store float %sub4, float* %arrayidx3, align 4, !dbg !20594
  %8 = load float*, float** %a.addr, align 8, !dbg !20595
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !20595
  %9 = load float, float* %arrayidx5, align 4, !dbg !20595
  %10 = load float*, float** %r.addr, align 8, !dbg !20596
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !20596
  %11 = load float, float* %arrayidx6, align 4, !dbg !20597
  %sub7 = fsub float %11, %9, !dbg !20597
  store float %sub7, float* %arrayidx6, align 4, !dbg !20597
  ret void, !dbg !20598
}

declare dso_local void @mul_m3_v3([3 x float]*, float*) #2

declare dso_local %struct.RegionView3D* @ED_view3d_context_rv3d(%struct.bContext*) #2

declare dso_local void @RNA_float_get_array(%struct.PointerRNA*, i8*, float*) #2

declare dso_local void @copy_m4_m4([4 x float]*, [4 x float]*) #2

declare dso_local void @unit_m4([4 x float]*) #2

declare dso_local %struct.View3D* @CTX_wm_view3d(%struct.bContext*) #2

declare dso_local void @RNA_float_set_array(%struct.PointerRNA*, i8*, float*) #2

declare dso_local float* @ED_view3d_cursor3d_get(%struct.Scene*, %struct.View3D*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @addvert_Nurb(%struct.bContext* %C, i16 signext %mode, float* %location) #0 !dbg !20599 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %mode.addr = alloca i16, align 2
  %location.addr = alloca float*, align 8
  %obedit = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %editnurb = alloca %struct.EditNurb*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %newnu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %newbezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %newbp = alloca %struct.BPoint*, align 8
  %imat = alloca [4 x [4 x float]], align 16
  %temp = alloca [3 x float], align 4
  %ok = alloca i8, align 1
  %bezt_recalc = alloca [3 x %struct.BezTriple*], align 16
  %h1313 = alloca i8, align 1
  %h2316 = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !20602, metadata !DIExpression()), !dbg !20603
  store i16 %mode, i16* %mode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mode.addr, metadata !20604, metadata !DIExpression()), !dbg !20605
  store float* %location, float** %location.addr, align 8
  call void @llvm.dbg.declare(metadata float** %location.addr, metadata !20606, metadata !DIExpression()), !dbg !20607
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !20608, metadata !DIExpression()), !dbg !20609
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !20610
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !20611
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !20609
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !20612, metadata !DIExpression()), !dbg !20613
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !20614
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !20615
  %2 = load i8*, i8** %data, align 8, !dbg !20615
  %3 = bitcast i8* %2 to %struct.Curve*, !dbg !20616
  store %struct.Curve* %3, %struct.Curve** %cu, align 8, !dbg !20613
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb, metadata !20617, metadata !DIExpression()), !dbg !20618
  %4 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !20619
  %editnurb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %4, i32 0, i32 4, !dbg !20620
  %5 = load %struct.EditNurb*, %struct.EditNurb** %editnurb1, align 8, !dbg !20620
  store %struct.EditNurb* %5, %struct.EditNurb** %editnurb, align 8, !dbg !20618
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !20621, metadata !DIExpression()), !dbg !20622
  call void @llvm.dbg.declare(metadata %struct.Nurb** %newnu, metadata !20623, metadata !DIExpression()), !dbg !20624
  store %struct.Nurb* null, %struct.Nurb** %newnu, align 8, !dbg !20624
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !20625, metadata !DIExpression()), !dbg !20626
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %newbezt, metadata !20627, metadata !DIExpression()), !dbg !20628
  store %struct.BezTriple* null, %struct.BezTriple** %newbezt, align 8, !dbg !20628
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !20629, metadata !DIExpression()), !dbg !20630
  call void @llvm.dbg.declare(metadata %struct.BPoint** %newbp, metadata !20631, metadata !DIExpression()), !dbg !20632
  store %struct.BPoint* null, %struct.BPoint** %newbp, align 8, !dbg !20632
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !20633, metadata !DIExpression()), !dbg !20634
  call void @llvm.dbg.declare(metadata [3 x float]* %temp, metadata !20635, metadata !DIExpression()), !dbg !20636
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !20637, metadata !DIExpression()), !dbg !20638
  store i8 0, i8* %ok, align 1, !dbg !20638
  call void @llvm.dbg.declare(metadata [3 x %struct.BezTriple*]* %bezt_recalc, metadata !20639, metadata !DIExpression()), !dbg !20641
  %6 = bitcast [3 x %struct.BezTriple*]* %bezt_recalc to i8*, !dbg !20641
  call void @llvm.memset.p0i8.i64(i8* align 16 %6, i8 0, i64 24, i1 false), !dbg !20641
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !20642
  %7 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !20643
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 47, !dbg !20644
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !20643
  %call3 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay2), !dbg !20645
  %8 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !20646
  %nurbs = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %8, i32 0, i32 0, !dbg !20647
  call void @findselectedNurbvert(%struct.ListBase* %nurbs, %struct.Nurb** %nu, %struct.BezTriple** %bezt, %struct.BPoint** %bp), !dbg !20648
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20649
  %cmp = icmp eq %struct.Nurb* %9, null, !dbg !20651
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !20652

lor.lhs.false:                                    ; preds = %entry
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20653
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 2, !dbg !20654
  %11 = load i16, i16* %type, align 8, !dbg !20654
  %conv = sext i16 %11 to i32, !dbg !20653
  %cmp4 = icmp eq i32 %conv, 1, !dbg !20655
  br i1 %cmp4, label %land.lhs.true, label %lor.lhs.false8, !dbg !20656

land.lhs.true:                                    ; preds = %lor.lhs.false
  %12 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !20657
  %cmp6 = icmp eq %struct.BezTriple* %12, null, !dbg !20658
  br i1 %cmp6, label %if.then, label %lor.lhs.false8, !dbg !20659

lor.lhs.false8:                                   ; preds = %land.lhs.true, %lor.lhs.false
  %13 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20660
  %type9 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 2, !dbg !20661
  %14 = load i16, i16* %type9, align 8, !dbg !20661
  %conv10 = sext i16 %14 to i32, !dbg !20660
  %cmp11 = icmp ne i32 %conv10, 1, !dbg !20662
  br i1 %cmp11, label %land.lhs.true13, label %if.end108, !dbg !20663

land.lhs.true13:                                  ; preds = %lor.lhs.false8
  %15 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !20664
  %cmp14 = icmp eq %struct.BPoint* %15, null, !dbg !20665
  br i1 %cmp14, label %if.then, label %if.end108, !dbg !20666

if.then:                                          ; preds = %land.lhs.true13, %land.lhs.true, %entry
  %16 = load i16, i16* %mode.addr, align 2, !dbg !20667
  %conv16 = sext i16 %16 to i32, !dbg !20667
  %cmp17 = icmp ne i32 %conv16, 101, !dbg !20670
  br i1 %cmp17, label %if.then19, label %if.end104, !dbg !20671

if.then19:                                        ; preds = %if.then
  %17 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !20672
  %actnu = getelementptr inbounds %struct.Curve, %struct.Curve* %17, i32 0, i32 31, !dbg !20675
  %18 = load i32, i32* %actnu, align 4, !dbg !20675
  %cmp20 = icmp ne i32 %18, -1, !dbg !20676
  br i1 %cmp20, label %if.then22, label %if.end, !dbg !20677

if.then22:                                        ; preds = %if.then19
  %19 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !20678
  %nurbs23 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %19, i32 0, i32 0, !dbg !20679
  %20 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !20680
  %actnu24 = getelementptr inbounds %struct.Curve, %struct.Curve* %20, i32 0, i32 31, !dbg !20681
  %21 = load i32, i32* %actnu24, align 4, !dbg !20681
  %call25 = call i8* @BLI_findlink(%struct.ListBase* %nurbs23, i32 %21), !dbg !20682
  %22 = bitcast i8* %call25 to %struct.Nurb*, !dbg !20682
  store %struct.Nurb* %22, %struct.Nurb** %nu, align 8, !dbg !20683
  br label %if.end, !dbg !20684

if.end:                                           ; preds = %if.then22, %if.then19
  %23 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20685
  %tobool = icmp ne %struct.Nurb* %23, null, !dbg !20685
  br i1 %tobool, label %lor.lhs.false26, label %if.then31, !dbg !20687

lor.lhs.false26:                                  ; preds = %if.end
  %24 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20688
  %type27 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %24, i32 0, i32 2, !dbg !20689
  %25 = load i16, i16* %type27, align 8, !dbg !20689
  %conv28 = sext i16 %25 to i32, !dbg !20688
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !20690
  br i1 %cmp29, label %if.then31, label %if.else82, !dbg !20691

if.then31:                                        ; preds = %lor.lhs.false26, %if.end
  %26 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !20692
  %call32 = call i8* %26(i64 72, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.214, i64 0, i64 0)), !dbg !20692
  %27 = bitcast i8* %call32 to %struct.BezTriple*, !dbg !20694
  store %struct.BezTriple* %27, %struct.BezTriple** %newbezt, align 8, !dbg !20695
  %28 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20696
  %radius = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %28, i32 0, i32 3, !dbg !20697
  store float 1.000000e+00, float* %radius, align 4, !dbg !20698
  %29 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20699
  %alfa = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %29, i32 0, i32 1, !dbg !20700
  store float 0.000000e+00, float* %alfa, align 4, !dbg !20701
  %30 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20702
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %30, i32 0, i32 7, !dbg !20702
  %31 = load i8, i8* %f1, align 1, !dbg !20702
  %conv33 = zext i8 %31 to i32, !dbg !20702
  %or = or i32 %conv33, 1, !dbg !20702
  %conv34 = trunc i32 %or to i8, !dbg !20702
  store i8 %conv34, i8* %f1, align 1, !dbg !20702
  %32 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20702
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %32, i32 0, i32 8, !dbg !20702
  %33 = load i8, i8* %f2, align 4, !dbg !20702
  %conv35 = zext i8 %33 to i32, !dbg !20702
  %or36 = or i32 %conv35, 1, !dbg !20702
  %conv37 = trunc i32 %or36 to i8, !dbg !20702
  store i8 %conv37, i8* %f2, align 4, !dbg !20702
  %34 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20702
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %34, i32 0, i32 9, !dbg !20702
  %35 = load i8, i8* %f3, align 1, !dbg !20702
  %conv38 = zext i8 %35 to i32, !dbg !20702
  %or39 = or i32 %conv38, 1, !dbg !20702
  %conv40 = trunc i32 %or39 to i8, !dbg !20702
  store i8 %conv40, i8* %f3, align 1, !dbg !20702
  %36 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20704
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %36, i32 0, i32 5, !dbg !20705
  store i8 1, i8* %h1, align 1, !dbg !20706
  %37 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20707
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %37, i32 0, i32 6, !dbg !20708
  store i8 1, i8* %h2, align 2, !dbg !20709
  %38 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !20710
  %call41 = call i8* %38(i64 88, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.215, i64 0, i64 0)), !dbg !20710
  %39 = bitcast i8* %call41 to %struct.Nurb*, !dbg !20711
  store %struct.Nurb* %39, %struct.Nurb** %newnu, align 8, !dbg !20712
  %40 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20713
  %tobool42 = icmp ne %struct.Nurb* %40, null, !dbg !20713
  br i1 %tobool42, label %if.else, label %if.then43, !dbg !20715

if.then43:                                        ; preds = %if.then31
  %41 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !20716
  %type44 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %41, i32 0, i32 2, !dbg !20718
  store i16 1, i16* %type44, align 8, !dbg !20719
  %42 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !20720
  %resolu = getelementptr inbounds %struct.Curve, %struct.Curve* %42, i32 0, i32 27, !dbg !20721
  %43 = load i16, i16* %resolu, align 4, !dbg !20721
  %44 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !20722
  %resolu45 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %44, i32 0, i32 9, !dbg !20723
  store i16 %43, i16* %resolu45, align 4, !dbg !20724
  %45 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !20725
  %flag = getelementptr inbounds %struct.Nurb, %struct.Nurb* %45, i32 0, i32 5, !dbg !20726
  %46 = load i16, i16* %flag, align 2, !dbg !20727
  %conv46 = sext i16 %46 to i32, !dbg !20727
  %or47 = or i32 %conv46, 1, !dbg !20727
  %conv48 = trunc i32 %or47 to i16, !dbg !20727
  store i16 %conv48, i16* %flag, align 2, !dbg !20727
  br label %if.end49, !dbg !20728

if.else:                                          ; preds = %if.then31
  %47 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !20729
  %48 = bitcast %struct.Nurb* %47 to i8*, !dbg !20731
  %49 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20732
  %50 = bitcast %struct.Nurb* %49 to i8*, !dbg !20731
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %50, i64 88, i1 false), !dbg !20731
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.then43
  %51 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !20733
  %nurbs50 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %51, i32 0, i32 0, !dbg !20734
  %52 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !20735
  %53 = bitcast %struct.Nurb* %52 to i8*, !dbg !20735
  call void @BLI_addtail(%struct.ListBase* %nurbs50, i8* %53), !dbg !20736
  %54 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20737
  %55 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !20738
  %bezt51 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %55, i32 0, i32 18, !dbg !20739
  store %struct.BezTriple* %54, %struct.BezTriple** %bezt51, align 8, !dbg !20740
  %56 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !20741
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %56, i32 0, i32 6, !dbg !20742
  store i32 1, i32* %pntsu, align 8, !dbg !20743
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !20744
  store float 1.000000e+00, float* %arrayidx, align 4, !dbg !20745
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 1, !dbg !20746
  store float 0.000000e+00, float* %arrayidx52, align 4, !dbg !20747
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 2, !dbg !20748
  store float 0.000000e+00, float* %arrayidx53, align 4, !dbg !20749
  %57 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20750
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %57, i32 0, i32 0, !dbg !20751
  %arrayidx54 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 1, !dbg !20750
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx54, i64 0, i64 0, !dbg !20750
  %58 = load float*, float** %location.addr, align 8, !dbg !20752
  call void @copy_v3_v3(float* %arraydecay55, float* %58), !dbg !20753
  %59 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20754
  %vec56 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %59, i32 0, i32 0, !dbg !20755
  %arrayidx57 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec56, i64 0, i64 0, !dbg !20754
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx57, i64 0, i64 0, !dbg !20754
  %60 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20756
  %vec59 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %60, i32 0, i32 0, !dbg !20757
  %arrayidx60 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec59, i64 0, i64 1, !dbg !20756
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx60, i64 0, i64 0, !dbg !20756
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !20758
  call void @sub_v3_v3v3(float* %arraydecay58, float* %arraydecay61, float* %arraydecay62), !dbg !20759
  %61 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20760
  %vec63 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %61, i32 0, i32 0, !dbg !20761
  %arrayidx64 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec63, i64 0, i64 2, !dbg !20760
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx64, i64 0, i64 0, !dbg !20760
  %62 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20762
  %vec66 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %62, i32 0, i32 0, !dbg !20763
  %arrayidx67 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec66, i64 0, i64 1, !dbg !20762
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx67, i64 0, i64 0, !dbg !20762
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !20764
  call void @add_v3_v3v3(float* %arraydecay65, float* %arraydecay68, float* %arraydecay69), !dbg !20765
  %arraydecay70 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !20766
  %63 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20767
  %vec71 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %63, i32 0, i32 0, !dbg !20768
  %arrayidx72 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec71, i64 0, i64 0, !dbg !20767
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx72, i64 0, i64 0, !dbg !20767
  call void @mul_m4_v3([4 x float]* %arraydecay70, float* %arraydecay73), !dbg !20769
  %arraydecay74 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !20770
  %64 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20771
  %vec75 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %64, i32 0, i32 0, !dbg !20772
  %arrayidx76 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec75, i64 0, i64 1, !dbg !20771
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx76, i64 0, i64 0, !dbg !20771
  call void @mul_m4_v3([4 x float]* %arraydecay74, float* %arraydecay77), !dbg !20773
  %arraydecay78 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !20774
  %65 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20775
  %vec79 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %65, i32 0, i32 0, !dbg !20776
  %arrayidx80 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec79, i64 0, i64 2, !dbg !20775
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx80, i64 0, i64 0, !dbg !20775
  call void @mul_m4_v3([4 x float]* %arraydecay78, float* %arraydecay81), !dbg !20777
  store i8 1, i8* %ok, align 1, !dbg !20778
  %66 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !20779
  store %struct.Nurb* %66, %struct.Nurb** %nu, align 8, !dbg !20780
  br label %if.end103, !dbg !20781

if.else82:                                        ; preds = %lor.lhs.false26
  %67 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20782
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %67, i32 0, i32 7, !dbg !20784
  %68 = load i32, i32* %pntsv, align 4, !dbg !20784
  %cmp83 = icmp eq i32 %68, 1, !dbg !20785
  br i1 %cmp83, label %if.then85, label %if.end102, !dbg !20786

if.then85:                                        ; preds = %if.else82
  %69 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !20787
  %call86 = call i8* %69(i64 36, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.216, i64 0, i64 0)), !dbg !20787
  %70 = bitcast i8* %call86 to %struct.BPoint*, !dbg !20789
  store %struct.BPoint* %70, %struct.BPoint** %newbp, align 8, !dbg !20790
  %71 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !20791
  %radius87 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %71, i32 0, i32 5, !dbg !20792
  store float 1.000000e+00, float* %radius87, align 4, !dbg !20793
  %72 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !20794
  %alfa88 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %72, i32 0, i32 1, !dbg !20795
  store float 0.000000e+00, float* %alfa88, align 4, !dbg !20796
  %73 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !20797
  %f189 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %73, i32 0, i32 3, !dbg !20798
  %74 = load i16, i16* %f189, align 4, !dbg !20799
  %conv90 = sext i16 %74 to i32, !dbg !20799
  %or91 = or i32 %conv90, 1, !dbg !20799
  %conv92 = trunc i32 %or91 to i16, !dbg !20799
  store i16 %conv92, i16* %f189, align 4, !dbg !20799
  %75 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !20800
  %call93 = call i8* %75(i64 88, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.215, i64 0, i64 0)), !dbg !20800
  %76 = bitcast i8* %call93 to %struct.Nurb*, !dbg !20801
  store %struct.Nurb* %76, %struct.Nurb** %newnu, align 8, !dbg !20802
  %77 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !20803
  %78 = bitcast %struct.Nurb* %77 to i8*, !dbg !20804
  %79 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20805
  %80 = bitcast %struct.Nurb* %79 to i8*, !dbg !20804
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %80, i64 88, i1 false), !dbg !20804
  %81 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !20806
  %nurbs94 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %81, i32 0, i32 0, !dbg !20807
  %82 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !20808
  %83 = bitcast %struct.Nurb* %82 to i8*, !dbg !20808
  call void @BLI_addtail(%struct.ListBase* %nurbs94, i8* %83), !dbg !20809
  %84 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !20810
  %85 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !20811
  %bp95 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %85, i32 0, i32 17, !dbg !20812
  store %struct.BPoint* %84, %struct.BPoint** %bp95, align 8, !dbg !20813
  %86 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !20814
  %orderu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %86, i32 0, i32 11, !dbg !20815
  store i16 2, i16* %orderu, align 8, !dbg !20816
  %87 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !20817
  %pntsu96 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %87, i32 0, i32 6, !dbg !20818
  store i32 1, i32* %pntsu96, align 8, !dbg !20819
  %88 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !20820
  %vec97 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %88, i32 0, i32 0, !dbg !20821
  %arraydecay98 = getelementptr inbounds [4 x float], [4 x float]* %vec97, i64 0, i64 0, !dbg !20820
  %arraydecay99 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !20822
  %89 = load float*, float** %location.addr, align 8, !dbg !20823
  call void @mul_v3_m4v3(float* %arraydecay98, [4 x float]* %arraydecay99, float* %89), !dbg !20824
  %90 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !20825
  %vec100 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %90, i32 0, i32 0, !dbg !20826
  %arrayidx101 = getelementptr inbounds [4 x float], [4 x float]* %vec100, i64 0, i64 3, !dbg !20825
  store float 1.000000e+00, float* %arrayidx101, align 4, !dbg !20827
  %91 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !20828
  %knotsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %91, i32 0, i32 16, !dbg !20829
  store float* null, float** %knotsv, align 8, !dbg !20830
  %92 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !20831
  %knotsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %92, i32 0, i32 15, !dbg !20832
  store float* null, float** %knotsu, align 8, !dbg !20833
  %93 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !20834
  call void @BKE_nurb_knot_calc_u(%struct.Nurb* %93), !dbg !20835
  store i8 1, i8* %ok, align 1, !dbg !20836
  %94 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !20837
  store %struct.Nurb* %94, %struct.Nurb** %nu, align 8, !dbg !20838
  br label %if.end102, !dbg !20839

if.end102:                                        ; preds = %if.then85, %if.else82
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.end49
  br label %if.end104, !dbg !20840

if.end104:                                        ; preds = %if.end103, %if.then
  %95 = load i8, i8* %ok, align 1, !dbg !20841
  %tobool105 = icmp ne i8 %95, 0, !dbg !20841
  br i1 %tobool105, label %if.end107, label %if.then106, !dbg !20843

if.then106:                                       ; preds = %if.end104
  store i32 2, i32* %retval, align 4, !dbg !20844
  br label %return, !dbg !20844

if.end107:                                        ; preds = %if.end104
  br label %if.end108, !dbg !20845

if.end108:                                        ; preds = %if.end107, %land.lhs.true13, %lor.lhs.false8
  %96 = load i8, i8* %ok, align 1, !dbg !20846
  %tobool109 = icmp ne i8 %96, 0, !dbg !20846
  br i1 %tobool109, label %if.else352, label %land.lhs.true110, !dbg !20848

land.lhs.true110:                                 ; preds = %if.end108
  %97 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20849
  %type111 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %97, i32 0, i32 2, !dbg !20850
  %98 = load i16, i16* %type111, align 8, !dbg !20850
  %conv112 = sext i16 %98 to i32, !dbg !20849
  %cmp113 = icmp eq i32 %conv112, 1, !dbg !20851
  br i1 %cmp113, label %if.then115, label %if.else352, !dbg !20852

if.then115:                                       ; preds = %land.lhs.true110
  %99 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !20853
  %100 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20856
  %bezt116 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %100, i32 0, i32 18, !dbg !20857
  %101 = load %struct.BezTriple*, %struct.BezTriple** %bezt116, align 8, !dbg !20857
  %102 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20858
  %pntsu117 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %102, i32 0, i32 6, !dbg !20859
  %103 = load i32, i32* %pntsu117, align 8, !dbg !20859
  %sub = sub nsw i32 %103, 1, !dbg !20860
  %idxprom = sext i32 %sub to i64, !dbg !20856
  %arrayidx118 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %101, i64 %idxprom, !dbg !20856
  %cmp119 = icmp eq %struct.BezTriple* %99, %arrayidx118, !dbg !20861
  br i1 %cmp119, label %if.then121, label %if.else175, !dbg !20862

if.then121:                                       ; preds = %if.then115
  %104 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !20863
  %f1122 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %104, i32 0, i32 7, !dbg !20863
  %105 = load i8, i8* %f1122, align 1, !dbg !20863
  %conv123 = zext i8 %105 to i32, !dbg !20863
  %and = and i32 %conv123, -2, !dbg !20863
  %conv124 = trunc i32 %and to i8, !dbg !20863
  store i8 %conv124, i8* %f1122, align 1, !dbg !20863
  %106 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !20863
  %f2125 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %106, i32 0, i32 8, !dbg !20863
  %107 = load i8, i8* %f2125, align 4, !dbg !20863
  %conv126 = zext i8 %107 to i32, !dbg !20863
  %and127 = and i32 %conv126, -2, !dbg !20863
  %conv128 = trunc i32 %and127 to i8, !dbg !20863
  store i8 %conv128, i8* %f2125, align 4, !dbg !20863
  %108 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !20863
  %f3129 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %108, i32 0, i32 9, !dbg !20863
  %109 = load i8, i8* %f3129, align 1, !dbg !20863
  %conv130 = zext i8 %109 to i32, !dbg !20863
  %and131 = and i32 %conv130, -2, !dbg !20863
  %conv132 = trunc i32 %and131 to i8, !dbg !20863
  store i8 %conv132, i8* %f3129, align 1, !dbg !20863
  %110 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !20866
  %111 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20867
  %pntsu133 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %111, i32 0, i32 6, !dbg !20868
  %112 = load i32, i32* %pntsu133, align 8, !dbg !20868
  %add = add nsw i32 %112, 1, !dbg !20869
  %conv134 = sext i32 %add to i64, !dbg !20870
  %mul = mul i64 %conv134, 72, !dbg !20871
  %call135 = call i8* %110(i64 %mul, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.214, i64 0, i64 0)), !dbg !20866
  %113 = bitcast i8* %call135 to %struct.BezTriple*, !dbg !20872
  store %struct.BezTriple* %113, %struct.BezTriple** %newbezt, align 8, !dbg !20873
  %114 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !20874
  %115 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20875
  %116 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20876
  %bezt136 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %116, i32 0, i32 18, !dbg !20877
  %117 = load %struct.BezTriple*, %struct.BezTriple** %bezt136, align 8, !dbg !20877
  %118 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20878
  %pntsu137 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %118, i32 0, i32 6, !dbg !20879
  %119 = load i32, i32* %pntsu137, align 8, !dbg !20879
  call void @ED_curve_beztcpy(%struct.EditNurb* %114, %struct.BezTriple* %115, %struct.BezTriple* %117, i32 %119), !dbg !20880
  %120 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20881
  %121 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20882
  %pntsu138 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %121, i32 0, i32 6, !dbg !20883
  %122 = load i32, i32* %pntsu138, align 8, !dbg !20883
  %idxprom139 = sext i32 %122 to i64, !dbg !20881
  %arrayidx140 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %120, i64 %idxprom139, !dbg !20881
  %123 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !20884
  %124 = bitcast %struct.BezTriple* %arrayidx140 to i8*, !dbg !20885
  %125 = bitcast %struct.BezTriple* %123 to i8*, !dbg !20885
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %124, i8* align 4 %125, i64 72, i1 false), !dbg !20885
  %arraydecay141 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !20886
  %126 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !20887
  %vec142 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %126, i32 0, i32 0, !dbg !20888
  %arrayidx143 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec142, i64 0, i64 1, !dbg !20887
  %arraydecay144 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx143, i64 0, i64 0, !dbg !20887
  call void @copy_v3_v3(float* %arraydecay141, float* %arraydecay144), !dbg !20889
  %127 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !20890
  %128 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20891
  %bezt145 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %128, i32 0, i32 18, !dbg !20892
  %129 = load %struct.BezTriple*, %struct.BezTriple** %bezt145, align 8, !dbg !20892
  %130 = bitcast %struct.BezTriple* %129 to i8*, !dbg !20891
  call void %127(i8* %130), !dbg !20890
  %131 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20893
  %132 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20894
  %bezt146 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %132, i32 0, i32 18, !dbg !20895
  store %struct.BezTriple* %131, %struct.BezTriple** %bezt146, align 8, !dbg !20896
  %133 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20897
  %pntsu147 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %133, i32 0, i32 6, !dbg !20898
  %134 = load i32, i32* %pntsu147, align 8, !dbg !20898
  %135 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20899
  %idx.ext = sext i32 %134 to i64, !dbg !20899
  %add.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %135, i64 %idx.ext, !dbg !20899
  store %struct.BezTriple* %add.ptr, %struct.BezTriple** %newbezt, align 8, !dbg !20899
  %136 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20900
  %f1148 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %136, i32 0, i32 7, !dbg !20900
  %137 = load i8, i8* %f1148, align 1, !dbg !20900
  %conv149 = zext i8 %137 to i32, !dbg !20900
  %or150 = or i32 %conv149, 1, !dbg !20900
  %conv151 = trunc i32 %or150 to i8, !dbg !20900
  store i8 %conv151, i8* %f1148, align 1, !dbg !20900
  %138 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20900
  %f2152 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %138, i32 0, i32 8, !dbg !20900
  %139 = load i8, i8* %f2152, align 4, !dbg !20900
  %conv153 = zext i8 %139 to i32, !dbg !20900
  %or154 = or i32 %conv153, 1, !dbg !20900
  %conv155 = trunc i32 %or154 to i8, !dbg !20900
  store i8 %conv155, i8* %f2152, align 4, !dbg !20900
  %140 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20900
  %f3156 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %140, i32 0, i32 9, !dbg !20900
  %141 = load i8, i8* %f3156, align 1, !dbg !20900
  %conv157 = zext i8 %141 to i32, !dbg !20900
  %or158 = or i32 %conv157, 1, !dbg !20900
  %conv159 = trunc i32 %or158 to i8, !dbg !20900
  store i8 %conv159, i8* %f3156, align 1, !dbg !20900
  %142 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20902
  %h2160 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %142, i32 0, i32 6, !dbg !20903
  %143 = load i8, i8* %h2160, align 2, !dbg !20903
  %144 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20904
  %h1161 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %144, i32 0, i32 5, !dbg !20905
  store i8 %143, i8* %h1161, align 1, !dbg !20906
  %145 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20907
  %bezt162 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %145, i32 0, i32 18, !dbg !20908
  %146 = load %struct.BezTriple*, %struct.BezTriple** %bezt162, align 8, !dbg !20908
  %147 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20909
  %pntsu163 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %147, i32 0, i32 6, !dbg !20910
  %148 = load i32, i32* %pntsu163, align 8, !dbg !20910
  %sub164 = sub nsw i32 %148, 1, !dbg !20911
  %idxprom165 = sext i32 %sub164 to i64, !dbg !20907
  %arrayidx166 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %146, i64 %idxprom165, !dbg !20907
  store %struct.BezTriple* %arrayidx166, %struct.BezTriple** %bezt, align 8, !dbg !20912
  store i8 1, i8* %ok, align 1, !dbg !20913
  %149 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20914
  %pntsu167 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %149, i32 0, i32 6, !dbg !20916
  %150 = load i32, i32* %pntsu167, align 8, !dbg !20916
  %cmp168 = icmp sgt i32 %150, 1, !dbg !20917
  br i1 %cmp168, label %if.then170, label %if.end174, !dbg !20918

if.then170:                                       ; preds = %if.then121
  %151 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20919
  %arrayidx171 = getelementptr inbounds [3 x %struct.BezTriple*], [3 x %struct.BezTriple*]* %bezt_recalc, i64 0, i64 1, !dbg !20921
  store %struct.BezTriple* %151, %struct.BezTriple** %arrayidx171, align 8, !dbg !20922
  %152 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20923
  %add.ptr172 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %152, i64 -1, !dbg !20924
  %arrayidx173 = getelementptr inbounds [3 x %struct.BezTriple*], [3 x %struct.BezTriple*]* %bezt_recalc, i64 0, i64 0, !dbg !20925
  store %struct.BezTriple* %add.ptr172, %struct.BezTriple** %arrayidx173, align 16, !dbg !20926
  br label %if.end174, !dbg !20927

if.end174:                                        ; preds = %if.then170, %if.then121
  br label %if.end271, !dbg !20928

if.else175:                                       ; preds = %if.then115
  %153 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !20929
  %154 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20931
  %bezt176 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %154, i32 0, i32 18, !dbg !20932
  %155 = load %struct.BezTriple*, %struct.BezTriple** %bezt176, align 8, !dbg !20932
  %cmp177 = icmp eq %struct.BezTriple* %153, %155, !dbg !20933
  br i1 %cmp177, label %if.then179, label %if.else228, !dbg !20934

if.then179:                                       ; preds = %if.else175
  %156 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !20935
  %f1180 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %156, i32 0, i32 7, !dbg !20935
  %157 = load i8, i8* %f1180, align 1, !dbg !20935
  %conv181 = zext i8 %157 to i32, !dbg !20935
  %and182 = and i32 %conv181, -2, !dbg !20935
  %conv183 = trunc i32 %and182 to i8, !dbg !20935
  store i8 %conv183, i8* %f1180, align 1, !dbg !20935
  %158 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !20935
  %f2184 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %158, i32 0, i32 8, !dbg !20935
  %159 = load i8, i8* %f2184, align 4, !dbg !20935
  %conv185 = zext i8 %159 to i32, !dbg !20935
  %and186 = and i32 %conv185, -2, !dbg !20935
  %conv187 = trunc i32 %and186 to i8, !dbg !20935
  store i8 %conv187, i8* %f2184, align 4, !dbg !20935
  %160 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !20935
  %f3188 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %160, i32 0, i32 9, !dbg !20935
  %161 = load i8, i8* %f3188, align 1, !dbg !20935
  %conv189 = zext i8 %161 to i32, !dbg !20935
  %and190 = and i32 %conv189, -2, !dbg !20935
  %conv191 = trunc i32 %and190 to i8, !dbg !20935
  store i8 %conv191, i8* %f3188, align 1, !dbg !20935
  %162 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !20938
  %163 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20939
  %pntsu192 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %163, i32 0, i32 6, !dbg !20940
  %164 = load i32, i32* %pntsu192, align 8, !dbg !20940
  %add193 = add nsw i32 %164, 1, !dbg !20941
  %conv194 = sext i32 %add193 to i64, !dbg !20942
  %mul195 = mul i64 %conv194, 72, !dbg !20943
  %call196 = call i8* %162(i64 %mul195, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.214, i64 0, i64 0)), !dbg !20938
  %165 = bitcast i8* %call196 to %struct.BezTriple*, !dbg !20944
  store %struct.BezTriple* %165, %struct.BezTriple** %newbezt, align 8, !dbg !20945
  %166 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !20946
  %167 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20947
  %add.ptr197 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %167, i64 1, !dbg !20948
  %168 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !20949
  %169 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20950
  %pntsu198 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %169, i32 0, i32 6, !dbg !20951
  %170 = load i32, i32* %pntsu198, align 8, !dbg !20951
  call void @ED_curve_beztcpy(%struct.EditNurb* %166, %struct.BezTriple* %add.ptr197, %struct.BezTriple* %168, i32 %170), !dbg !20952
  %171 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20953
  %172 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !20954
  %173 = bitcast %struct.BezTriple* %171 to i8*, !dbg !20955
  %174 = bitcast %struct.BezTriple* %172 to i8*, !dbg !20955
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %173, i8* align 4 %174, i64 72, i1 false), !dbg !20955
  %175 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20956
  %f1199 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %175, i32 0, i32 7, !dbg !20956
  %176 = load i8, i8* %f1199, align 1, !dbg !20956
  %conv200 = zext i8 %176 to i32, !dbg !20956
  %or201 = or i32 %conv200, 1, !dbg !20956
  %conv202 = trunc i32 %or201 to i8, !dbg !20956
  store i8 %conv202, i8* %f1199, align 1, !dbg !20956
  %177 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20956
  %f2203 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %177, i32 0, i32 8, !dbg !20956
  %178 = load i8, i8* %f2203, align 4, !dbg !20956
  %conv204 = zext i8 %178 to i32, !dbg !20956
  %or205 = or i32 %conv204, 1, !dbg !20956
  %conv206 = trunc i32 %or205 to i8, !dbg !20956
  store i8 %conv206, i8* %f2203, align 4, !dbg !20956
  %179 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20956
  %f3207 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %179, i32 0, i32 9, !dbg !20956
  %180 = load i8, i8* %f3207, align 1, !dbg !20956
  %conv208 = zext i8 %180 to i32, !dbg !20956
  %or209 = or i32 %conv208, 1, !dbg !20956
  %conv210 = trunc i32 %or209 to i8, !dbg !20956
  store i8 %conv210, i8* %f3207, align 1, !dbg !20956
  %181 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20958
  %h1211 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %181, i32 0, i32 5, !dbg !20959
  %182 = load i8, i8* %h1211, align 1, !dbg !20959
  %183 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20960
  %h2212 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %183, i32 0, i32 6, !dbg !20961
  store i8 %182, i8* %h2212, align 2, !dbg !20962
  %arraydecay213 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !20963
  %184 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !20964
  %vec214 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %184, i32 0, i32 0, !dbg !20965
  %arrayidx215 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec214, i64 0, i64 1, !dbg !20964
  %arraydecay216 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx215, i64 0, i64 0, !dbg !20964
  call void @copy_v3_v3(float* %arraydecay213, float* %arraydecay216), !dbg !20966
  %185 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !20967
  %186 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20968
  %bezt217 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %186, i32 0, i32 18, !dbg !20969
  %187 = load %struct.BezTriple*, %struct.BezTriple** %bezt217, align 8, !dbg !20969
  %188 = bitcast %struct.BezTriple* %187 to i8*, !dbg !20968
  call void %185(i8* %188), !dbg !20967
  %189 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20970
  %190 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20971
  %bezt218 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %190, i32 0, i32 18, !dbg !20972
  store %struct.BezTriple* %189, %struct.BezTriple** %bezt218, align 8, !dbg !20973
  %191 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20974
  %add.ptr219 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %191, i64 1, !dbg !20975
  store %struct.BezTriple* %add.ptr219, %struct.BezTriple** %bezt, align 8, !dbg !20976
  store i8 1, i8* %ok, align 1, !dbg !20977
  %192 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !20978
  %pntsu220 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %192, i32 0, i32 6, !dbg !20980
  %193 = load i32, i32* %pntsu220, align 8, !dbg !20980
  %cmp221 = icmp sgt i32 %193, 1, !dbg !20981
  br i1 %cmp221, label %if.then223, label %if.end227, !dbg !20982

if.then223:                                       ; preds = %if.then179
  %194 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20983
  %arrayidx224 = getelementptr inbounds [3 x %struct.BezTriple*], [3 x %struct.BezTriple*]* %bezt_recalc, i64 0, i64 1, !dbg !20985
  store %struct.BezTriple* %194, %struct.BezTriple** %arrayidx224, align 8, !dbg !20986
  %195 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !20987
  %add.ptr225 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %195, i64 1, !dbg !20988
  %arrayidx226 = getelementptr inbounds [3 x %struct.BezTriple*], [3 x %struct.BezTriple*]* %bezt_recalc, i64 0, i64 2, !dbg !20989
  store %struct.BezTriple* %add.ptr225, %struct.BezTriple** %arrayidx226, align 16, !dbg !20990
  br label %if.end227, !dbg !20991

if.end227:                                        ; preds = %if.then223, %if.then179
  br label %if.end270, !dbg !20992

if.else228:                                       ; preds = %if.else175
  %196 = load i16, i16* %mode.addr, align 2, !dbg !20993
  %conv229 = sext i16 %196 to i32, !dbg !20993
  %cmp230 = icmp ne i32 %conv229, 101, !dbg !20995
  br i1 %cmp230, label %if.then232, label %if.else268, !dbg !20996

if.then232:                                       ; preds = %if.else228
  %197 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !20997
  %f1233 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %197, i32 0, i32 7, !dbg !20997
  %198 = load i8, i8* %f1233, align 1, !dbg !20997
  %conv234 = zext i8 %198 to i32, !dbg !20997
  %and235 = and i32 %conv234, -2, !dbg !20997
  %conv236 = trunc i32 %and235 to i8, !dbg !20997
  store i8 %conv236, i8* %f1233, align 1, !dbg !20997
  %199 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !20997
  %f2237 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %199, i32 0, i32 8, !dbg !20997
  %200 = load i8, i8* %f2237, align 4, !dbg !20997
  %conv238 = zext i8 %200 to i32, !dbg !20997
  %and239 = and i32 %conv238, -2, !dbg !20997
  %conv240 = trunc i32 %and239 to i8, !dbg !20997
  store i8 %conv240, i8* %f2237, align 4, !dbg !20997
  %201 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !20997
  %f3241 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %201, i32 0, i32 9, !dbg !20997
  %202 = load i8, i8* %f3241, align 1, !dbg !20997
  %conv242 = zext i8 %202 to i32, !dbg !20997
  %and243 = and i32 %conv242, -2, !dbg !20997
  %conv244 = trunc i32 %and243 to i8, !dbg !20997
  store i8 %conv244, i8* %f3241, align 1, !dbg !20997
  %203 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !21000
  %call245 = call i8* %203(i64 72, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.214, i64 0, i64 0)), !dbg !21000
  %204 = bitcast i8* %call245 to %struct.BezTriple*, !dbg !21001
  store %struct.BezTriple* %204, %struct.BezTriple** %newbezt, align 8, !dbg !21002
  %205 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !21003
  %206 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !21004
  %207 = bitcast %struct.BezTriple* %205 to i8*, !dbg !21005
  %208 = bitcast %struct.BezTriple* %206 to i8*, !dbg !21005
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 4 %208, i64 72, i1 false), !dbg !21005
  %209 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !21006
  %f1246 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %209, i32 0, i32 7, !dbg !21006
  %210 = load i8, i8* %f1246, align 1, !dbg !21006
  %conv247 = zext i8 %210 to i32, !dbg !21006
  %or248 = or i32 %conv247, 1, !dbg !21006
  %conv249 = trunc i32 %or248 to i8, !dbg !21006
  store i8 %conv249, i8* %f1246, align 1, !dbg !21006
  %211 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !21006
  %f2250 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %211, i32 0, i32 8, !dbg !21006
  %212 = load i8, i8* %f2250, align 4, !dbg !21006
  %conv251 = zext i8 %212 to i32, !dbg !21006
  %or252 = or i32 %conv251, 1, !dbg !21006
  %conv253 = trunc i32 %or252 to i8, !dbg !21006
  store i8 %conv253, i8* %f2250, align 4, !dbg !21006
  %213 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !21006
  %f3254 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %213, i32 0, i32 9, !dbg !21006
  %214 = load i8, i8* %f3254, align 1, !dbg !21006
  %conv255 = zext i8 %214 to i32, !dbg !21006
  %or256 = or i32 %conv255, 1, !dbg !21006
  %conv257 = trunc i32 %or256 to i8, !dbg !21006
  store i8 %conv257, i8* %f3254, align 1, !dbg !21006
  %215 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !21008
  %h1258 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %215, i32 0, i32 5, !dbg !21009
  %216 = load i8, i8* %h1258, align 1, !dbg !21009
  %217 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !21010
  %h2259 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %217, i32 0, i32 6, !dbg !21011
  store i8 %216, i8* %h2259, align 2, !dbg !21012
  %arraydecay260 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !21013
  %218 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !21014
  %vec261 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %218, i32 0, i32 0, !dbg !21015
  %arrayidx262 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec261, i64 0, i64 1, !dbg !21014
  %arraydecay263 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx262, i64 0, i64 0, !dbg !21014
  call void @copy_v3_v3(float* %arraydecay260, float* %arraydecay263), !dbg !21016
  %219 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !21017
  %call264 = call i8* %219(i64 88, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.215, i64 0, i64 0)), !dbg !21017
  %220 = bitcast i8* %call264 to %struct.Nurb*, !dbg !21018
  store %struct.Nurb* %220, %struct.Nurb** %newnu, align 8, !dbg !21019
  %221 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !21020
  %222 = bitcast %struct.Nurb* %221 to i8*, !dbg !21021
  %223 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21022
  %224 = bitcast %struct.Nurb* %223 to i8*, !dbg !21021
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %224, i64 88, i1 false), !dbg !21021
  %225 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !21023
  %nurbs265 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %225, i32 0, i32 0, !dbg !21024
  %226 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !21025
  %227 = bitcast %struct.Nurb* %226 to i8*, !dbg !21025
  call void @BLI_addtail(%struct.ListBase* %nurbs265, i8* %227), !dbg !21026
  %228 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !21027
  %229 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !21028
  %bezt266 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %229, i32 0, i32 18, !dbg !21029
  store %struct.BezTriple* %228, %struct.BezTriple** %bezt266, align 8, !dbg !21030
  %230 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !21031
  %pntsu267 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %230, i32 0, i32 6, !dbg !21032
  store i32 1, i32* %pntsu267, align 8, !dbg !21033
  %231 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !21034
  store %struct.Nurb* %231, %struct.Nurb** %nu, align 8, !dbg !21035
  %232 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !21036
  store %struct.BezTriple* %232, %struct.BezTriple** %bezt, align 8, !dbg !21037
  store i8 1, i8* %ok, align 1, !dbg !21038
  br label %if.end269, !dbg !21039

if.else268:                                       ; preds = %if.else228
  store %struct.BezTriple* null, %struct.BezTriple** %bezt, align 8, !dbg !21040
  br label %if.end269

if.end269:                                        ; preds = %if.else268, %if.then232
  br label %if.end270

if.end270:                                        ; preds = %if.end269, %if.end227
  br label %if.end271

if.end271:                                        ; preds = %if.end270, %if.end174
  %233 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !21042
  %tobool272 = icmp ne %struct.BezTriple* %233, null, !dbg !21042
  br i1 %tobool272, label %if.then273, label %if.end351, !dbg !21044

if.then273:                                       ; preds = %if.end271
  %234 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !21045
  %tobool274 = icmp ne %struct.Nurb* %234, null, !dbg !21045
  br i1 %tobool274, label %if.end277, label %if.then275, !dbg !21048

if.then275:                                       ; preds = %if.then273
  %235 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21049
  %pntsu276 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %235, i32 0, i32 6, !dbg !21050
  %236 = load i32, i32* %pntsu276, align 8, !dbg !21051
  %inc = add nsw i32 %236, 1, !dbg !21051
  store i32 %inc, i32* %pntsu276, align 8, !dbg !21051
  br label %if.end277, !dbg !21049

if.end277:                                        ; preds = %if.then275, %if.then273
  %237 = load i16, i16* %mode.addr, align 2, !dbg !21052
  %conv278 = sext i16 %237 to i32, !dbg !21052
  %cmp279 = icmp eq i32 %conv278, 101, !dbg !21054
  br i1 %cmp279, label %if.then281, label %if.else300, !dbg !21055

if.then281:                                       ; preds = %if.end277
  %238 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !21056
  %vec282 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %238, i32 0, i32 0, !dbg !21058
  %arrayidx283 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec282, i64 0, i64 0, !dbg !21056
  %arraydecay284 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx283, i64 0, i64 0, !dbg !21056
  %239 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !21059
  %vec285 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %239, i32 0, i32 0, !dbg !21060
  %arrayidx286 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec285, i64 0, i64 0, !dbg !21059
  %arraydecay287 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx286, i64 0, i64 0, !dbg !21059
  call void @copy_v3_v3(float* %arraydecay284, float* %arraydecay287), !dbg !21061
  %240 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !21062
  %vec288 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %240, i32 0, i32 0, !dbg !21063
  %arrayidx289 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec288, i64 0, i64 1, !dbg !21062
  %arraydecay290 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx289, i64 0, i64 0, !dbg !21062
  %241 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !21064
  %vec291 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %241, i32 0, i32 0, !dbg !21065
  %arrayidx292 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec291, i64 0, i64 1, !dbg !21064
  %arraydecay293 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx292, i64 0, i64 0, !dbg !21064
  call void @copy_v3_v3(float* %arraydecay290, float* %arraydecay293), !dbg !21066
  %242 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !21067
  %vec294 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %242, i32 0, i32 0, !dbg !21068
  %arrayidx295 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec294, i64 0, i64 2, !dbg !21067
  %arraydecay296 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx295, i64 0, i64 0, !dbg !21067
  %243 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !21069
  %vec297 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %243, i32 0, i32 0, !dbg !21070
  %arrayidx298 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec297, i64 0, i64 2, !dbg !21069
  %arraydecay299 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx298, i64 0, i64 0, !dbg !21069
  call void @copy_v3_v3(float* %arraydecay296, float* %arraydecay299), !dbg !21071
  br label %if.end350, !dbg !21072

if.else300:                                       ; preds = %if.end277
  %244 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !21073
  %vec301 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %244, i32 0, i32 0, !dbg !21075
  %arrayidx302 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec301, i64 0, i64 1, !dbg !21073
  %arraydecay303 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx302, i64 0, i64 0, !dbg !21073
  %arraydecay304 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !21076
  %245 = load float*, float** %location.addr, align 8, !dbg !21077
  call void @mul_v3_m4v3(float* %arraydecay303, [4 x float]* %arraydecay304, float* %245), !dbg !21078
  %arraydecay305 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !21079
  %246 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !21080
  %vec306 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %246, i32 0, i32 0, !dbg !21081
  %arrayidx307 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec306, i64 0, i64 1, !dbg !21080
  %arraydecay308 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx307, i64 0, i64 0, !dbg !21080
  %arraydecay309 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !21082
  call void @sub_v3_v3v3(float* %arraydecay305, float* %arraydecay308, float* %arraydecay309), !dbg !21083
  %arrayidx310 = getelementptr inbounds [3 x %struct.BezTriple*], [3 x %struct.BezTriple*]* %bezt_recalc, i64 0, i64 1, !dbg !21084
  %247 = load %struct.BezTriple*, %struct.BezTriple** %arrayidx310, align 8, !dbg !21084
  %tobool311 = icmp ne %struct.BezTriple* %247, null, !dbg !21084
  br i1 %tobool311, label %if.then312, label %if.else330, !dbg !21086

if.then312:                                       ; preds = %if.else300
  call void @llvm.dbg.declare(metadata i8* %h1313, metadata !21087, metadata !DIExpression()), !dbg !21089
  %arrayidx314 = getelementptr inbounds [3 x %struct.BezTriple*], [3 x %struct.BezTriple*]* %bezt_recalc, i64 0, i64 1, !dbg !21090
  %248 = load %struct.BezTriple*, %struct.BezTriple** %arrayidx314, align 8, !dbg !21090
  %h1315 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %248, i32 0, i32 5, !dbg !21091
  %249 = load i8, i8* %h1315, align 1, !dbg !21091
  store i8 %249, i8* %h1313, align 1, !dbg !21089
  call void @llvm.dbg.declare(metadata i8* %h2316, metadata !21092, metadata !DIExpression()), !dbg !21093
  %arrayidx317 = getelementptr inbounds [3 x %struct.BezTriple*], [3 x %struct.BezTriple*]* %bezt_recalc, i64 0, i64 1, !dbg !21094
  %250 = load %struct.BezTriple*, %struct.BezTriple** %arrayidx317, align 8, !dbg !21094
  %h2318 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %250, i32 0, i32 6, !dbg !21095
  %251 = load i8, i8* %h2318, align 2, !dbg !21095
  store i8 %251, i8* %h2316, align 1, !dbg !21093
  %arrayidx319 = getelementptr inbounds [3 x %struct.BezTriple*], [3 x %struct.BezTriple*]* %bezt_recalc, i64 0, i64 1, !dbg !21096
  %252 = load %struct.BezTriple*, %struct.BezTriple** %arrayidx319, align 8, !dbg !21096
  %h2320 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %252, i32 0, i32 6, !dbg !21097
  store i8 1, i8* %h2320, align 2, !dbg !21098
  %arrayidx321 = getelementptr inbounds [3 x %struct.BezTriple*], [3 x %struct.BezTriple*]* %bezt_recalc, i64 0, i64 1, !dbg !21099
  %253 = load %struct.BezTriple*, %struct.BezTriple** %arrayidx321, align 8, !dbg !21099
  %h1322 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %253, i32 0, i32 5, !dbg !21100
  store i8 1, i8* %h1322, align 1, !dbg !21101
  %arrayidx323 = getelementptr inbounds [3 x %struct.BezTriple*], [3 x %struct.BezTriple*]* %bezt_recalc, i64 0, i64 1, !dbg !21102
  %254 = load %struct.BezTriple*, %struct.BezTriple** %arrayidx323, align 8, !dbg !21102
  %arrayidx324 = getelementptr inbounds [3 x %struct.BezTriple*], [3 x %struct.BezTriple*]* %bezt_recalc, i64 0, i64 0, !dbg !21103
  %255 = load %struct.BezTriple*, %struct.BezTriple** %arrayidx324, align 16, !dbg !21103
  %arrayidx325 = getelementptr inbounds [3 x %struct.BezTriple*], [3 x %struct.BezTriple*]* %bezt_recalc, i64 0, i64 2, !dbg !21104
  %256 = load %struct.BezTriple*, %struct.BezTriple** %arrayidx325, align 16, !dbg !21104
  call void @BKE_nurb_handle_calc(%struct.BezTriple* %254, %struct.BezTriple* %255, %struct.BezTriple* %256, i8 zeroext 0), !dbg !21105
  %257 = load i8, i8* %h1313, align 1, !dbg !21106
  %arrayidx326 = getelementptr inbounds [3 x %struct.BezTriple*], [3 x %struct.BezTriple*]* %bezt_recalc, i64 0, i64 1, !dbg !21107
  %258 = load %struct.BezTriple*, %struct.BezTriple** %arrayidx326, align 8, !dbg !21107
  %h1327 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %258, i32 0, i32 5, !dbg !21108
  store i8 %257, i8* %h1327, align 1, !dbg !21109
  %259 = load i8, i8* %h2316, align 1, !dbg !21110
  %arrayidx328 = getelementptr inbounds [3 x %struct.BezTriple*], [3 x %struct.BezTriple*]* %bezt_recalc, i64 0, i64 1, !dbg !21111
  %260 = load %struct.BezTriple*, %struct.BezTriple** %arrayidx328, align 8, !dbg !21111
  %h2329 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %260, i32 0, i32 6, !dbg !21112
  store i8 %259, i8* %h2329, align 2, !dbg !21113
  br label %if.end345, !dbg !21114

if.else330:                                       ; preds = %if.else300
  %261 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !21115
  %vec331 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %261, i32 0, i32 0, !dbg !21117
  %arrayidx332 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec331, i64 0, i64 0, !dbg !21115
  %arraydecay333 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx332, i64 0, i64 0, !dbg !21115
  %262 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !21118
  %vec334 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %262, i32 0, i32 0, !dbg !21119
  %arrayidx335 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec334, i64 0, i64 0, !dbg !21118
  %arraydecay336 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx335, i64 0, i64 0, !dbg !21118
  %arraydecay337 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !21120
  call void @add_v3_v3v3(float* %arraydecay333, float* %arraydecay336, float* %arraydecay337), !dbg !21121
  %263 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !21122
  %vec338 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %263, i32 0, i32 0, !dbg !21123
  %arrayidx339 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec338, i64 0, i64 2, !dbg !21122
  %arraydecay340 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx339, i64 0, i64 0, !dbg !21122
  %264 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !21124
  %vec341 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %264, i32 0, i32 0, !dbg !21125
  %arrayidx342 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec341, i64 0, i64 2, !dbg !21124
  %arraydecay343 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx342, i64 0, i64 0, !dbg !21124
  %arraydecay344 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !21126
  call void @add_v3_v3v3(float* %arraydecay340, float* %arraydecay343, float* %arraydecay344), !dbg !21127
  br label %if.end345

if.end345:                                        ; preds = %if.else330, %if.then312
  %265 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !21128
  %tobool346 = icmp ne %struct.Nurb* %265, null, !dbg !21128
  br i1 %tobool346, label %if.then347, label %if.else348, !dbg !21130

if.then347:                                       ; preds = %if.end345
  %266 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !21131
  call void @BKE_nurb_handles_calc(%struct.Nurb* %266), !dbg !21132
  br label %if.end349, !dbg !21132

if.else348:                                       ; preds = %if.end345
  %267 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21133
  call void @BKE_nurb_handles_calc(%struct.Nurb* %267), !dbg !21134
  br label %if.end349

if.end349:                                        ; preds = %if.else348, %if.then347
  br label %if.end350

if.end350:                                        ; preds = %if.end349, %if.then281
  br label %if.end351, !dbg !21135

if.end351:                                        ; preds = %if.end350, %if.end271
  br label %if.end471, !dbg !21136

if.else352:                                       ; preds = %land.lhs.true110, %if.end108
  %268 = load i8, i8* %ok, align 1, !dbg !21137
  %tobool353 = icmp ne i8 %268, 0, !dbg !21137
  br i1 %tobool353, label %if.end470, label %land.lhs.true354, !dbg !21139

land.lhs.true354:                                 ; preds = %if.else352
  %269 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21140
  %pntsv355 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %269, i32 0, i32 7, !dbg !21141
  %270 = load i32, i32* %pntsv355, align 4, !dbg !21141
  %cmp356 = icmp eq i32 %270, 1, !dbg !21142
  br i1 %cmp356, label %if.then358, label %if.end470, !dbg !21143

if.then358:                                       ; preds = %land.lhs.true354
  %271 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21144
  %272 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21147
  %bp359 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %272, i32 0, i32 17, !dbg !21148
  %273 = load %struct.BPoint*, %struct.BPoint** %bp359, align 8, !dbg !21148
  %274 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21149
  %pntsu360 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %274, i32 0, i32 6, !dbg !21150
  %275 = load i32, i32* %pntsu360, align 8, !dbg !21150
  %sub361 = sub nsw i32 %275, 1, !dbg !21151
  %idxprom362 = sext i32 %sub361 to i64, !dbg !21147
  %arrayidx363 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %273, i64 %idxprom362, !dbg !21147
  %cmp364 = icmp eq %struct.BPoint* %271, %arrayidx363, !dbg !21152
  br i1 %cmp364, label %if.then366, label %if.else388, !dbg !21153

if.then366:                                       ; preds = %if.then358
  %276 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21154
  %f1367 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %276, i32 0, i32 3, !dbg !21156
  store i16 0, i16* %f1367, align 4, !dbg !21157
  %277 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !21158
  %278 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21159
  %pntsu368 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %278, i32 0, i32 6, !dbg !21160
  %279 = load i32, i32* %pntsu368, align 8, !dbg !21160
  %add369 = add nsw i32 %279, 1, !dbg !21161
  %conv370 = sext i32 %add369 to i64, !dbg !21162
  %mul371 = mul i64 %conv370, 36, !dbg !21163
  %call372 = call i8* %277(i64 %mul371, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.217, i64 0, i64 0)), !dbg !21158
  %280 = bitcast i8* %call372 to %struct.BPoint*, !dbg !21164
  store %struct.BPoint* %280, %struct.BPoint** %newbp, align 8, !dbg !21165
  %281 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !21166
  %282 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !21167
  %283 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21168
  %bp373 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %283, i32 0, i32 17, !dbg !21169
  %284 = load %struct.BPoint*, %struct.BPoint** %bp373, align 8, !dbg !21169
  %285 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21170
  %pntsu374 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %285, i32 0, i32 6, !dbg !21171
  %286 = load i32, i32* %pntsu374, align 8, !dbg !21171
  call void @ED_curve_bpcpy(%struct.EditNurb* %281, %struct.BPoint* %282, %struct.BPoint* %284, i32 %286), !dbg !21172
  %287 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !21173
  %288 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21174
  %pntsu375 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %288, i32 0, i32 6, !dbg !21175
  %289 = load i32, i32* %pntsu375, align 8, !dbg !21175
  %idxprom376 = sext i32 %289 to i64, !dbg !21173
  %arrayidx377 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %287, i64 %idxprom376, !dbg !21173
  %290 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21176
  %291 = bitcast %struct.BPoint* %arrayidx377 to i8*, !dbg !21177
  %292 = bitcast %struct.BPoint* %290 to i8*, !dbg !21177
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %291, i8* align 4 %292, i64 36, i1 false), !dbg !21177
  %293 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !21178
  %294 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21179
  %bp378 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %294, i32 0, i32 17, !dbg !21180
  %295 = load %struct.BPoint*, %struct.BPoint** %bp378, align 8, !dbg !21180
  %296 = bitcast %struct.BPoint* %295 to i8*, !dbg !21179
  call void %293(i8* %296), !dbg !21178
  %297 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !21181
  %298 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21182
  %bp379 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %298, i32 0, i32 17, !dbg !21183
  store %struct.BPoint* %297, %struct.BPoint** %bp379, align 8, !dbg !21184
  %299 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21185
  %pntsu380 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %299, i32 0, i32 6, !dbg !21186
  %300 = load i32, i32* %pntsu380, align 8, !dbg !21186
  %301 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !21187
  %idx.ext381 = sext i32 %300 to i64, !dbg !21187
  %add.ptr382 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %301, i64 %idx.ext381, !dbg !21187
  store %struct.BPoint* %add.ptr382, %struct.BPoint** %newbp, align 8, !dbg !21187
  %302 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !21188
  %f1383 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %302, i32 0, i32 3, !dbg !21189
  %303 = load i16, i16* %f1383, align 4, !dbg !21190
  %conv384 = sext i16 %303 to i32, !dbg !21190
  %or385 = or i32 %conv384, 1, !dbg !21190
  %conv386 = trunc i32 %or385 to i16, !dbg !21190
  store i16 %conv386, i16* %f1383, align 4, !dbg !21190
  %304 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !21191
  %add.ptr387 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %304, i64 -1, !dbg !21192
  store %struct.BPoint* %add.ptr387, %struct.BPoint** %bp, align 8, !dbg !21193
  store i8 1, i8* %ok, align 1, !dbg !21194
  br label %if.end429, !dbg !21195

if.else388:                                       ; preds = %if.then358
  %305 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21196
  %306 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21198
  %bp389 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %306, i32 0, i32 17, !dbg !21199
  %307 = load %struct.BPoint*, %struct.BPoint** %bp389, align 8, !dbg !21199
  %cmp390 = icmp eq %struct.BPoint* %305, %307, !dbg !21200
  br i1 %cmp390, label %if.then392, label %if.else408, !dbg !21201

if.then392:                                       ; preds = %if.else388
  %308 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21202
  %f1393 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %308, i32 0, i32 3, !dbg !21204
  store i16 0, i16* %f1393, align 4, !dbg !21205
  %309 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !21206
  %310 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21207
  %pntsu394 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %310, i32 0, i32 6, !dbg !21208
  %311 = load i32, i32* %pntsu394, align 8, !dbg !21208
  %add395 = add nsw i32 %311, 1, !dbg !21209
  %conv396 = sext i32 %add395 to i64, !dbg !21210
  %mul397 = mul i64 %conv396, 36, !dbg !21211
  %call398 = call i8* %309(i64 %mul397, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.218, i64 0, i64 0)), !dbg !21206
  %312 = bitcast i8* %call398 to %struct.BPoint*, !dbg !21212
  store %struct.BPoint* %312, %struct.BPoint** %newbp, align 8, !dbg !21213
  %313 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !21214
  %314 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !21215
  %add.ptr399 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %314, i64 1, !dbg !21216
  %315 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21217
  %316 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21218
  %pntsu400 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %316, i32 0, i32 6, !dbg !21219
  %317 = load i32, i32* %pntsu400, align 8, !dbg !21219
  call void @ED_curve_bpcpy(%struct.EditNurb* %313, %struct.BPoint* %add.ptr399, %struct.BPoint* %315, i32 %317), !dbg !21220
  %318 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !21221
  %319 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21222
  %320 = bitcast %struct.BPoint* %318 to i8*, !dbg !21223
  %321 = bitcast %struct.BPoint* %319 to i8*, !dbg !21223
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %320, i8* align 4 %321, i64 36, i1 false), !dbg !21223
  %322 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !21224
  %f1401 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %322, i32 0, i32 3, !dbg !21225
  %323 = load i16, i16* %f1401, align 4, !dbg !21226
  %conv402 = sext i16 %323 to i32, !dbg !21226
  %or403 = or i32 %conv402, 1, !dbg !21226
  %conv404 = trunc i32 %or403 to i16, !dbg !21226
  store i16 %conv404, i16* %f1401, align 4, !dbg !21226
  %324 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !21227
  %325 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21228
  %bp405 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %325, i32 0, i32 17, !dbg !21229
  %326 = load %struct.BPoint*, %struct.BPoint** %bp405, align 8, !dbg !21229
  %327 = bitcast %struct.BPoint* %326 to i8*, !dbg !21228
  call void %324(i8* %327), !dbg !21227
  %328 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !21230
  %329 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21231
  %bp406 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %329, i32 0, i32 17, !dbg !21232
  store %struct.BPoint* %328, %struct.BPoint** %bp406, align 8, !dbg !21233
  %330 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !21234
  %add.ptr407 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %330, i64 1, !dbg !21235
  store %struct.BPoint* %add.ptr407, %struct.BPoint** %bp, align 8, !dbg !21236
  store i8 1, i8* %ok, align 1, !dbg !21237
  br label %if.end428, !dbg !21238

if.else408:                                       ; preds = %if.else388
  %331 = load i16, i16* %mode.addr, align 2, !dbg !21239
  %conv409 = sext i16 %331 to i32, !dbg !21239
  %cmp410 = icmp ne i32 %conv409, 101, !dbg !21241
  br i1 %cmp410, label %if.then412, label %if.else426, !dbg !21242

if.then412:                                       ; preds = %if.else408
  %332 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21243
  %f1413 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %332, i32 0, i32 3, !dbg !21245
  store i16 0, i16* %f1413, align 4, !dbg !21246
  %333 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !21247
  %call414 = call i8* %333(i64 36, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.216, i64 0, i64 0)), !dbg !21247
  %334 = bitcast i8* %call414 to %struct.BPoint*, !dbg !21248
  store %struct.BPoint* %334, %struct.BPoint** %newbp, align 8, !dbg !21249
  %335 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !21250
  %336 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21251
  %337 = bitcast %struct.BPoint* %335 to i8*, !dbg !21252
  %338 = bitcast %struct.BPoint* %336 to i8*, !dbg !21252
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %337, i8* align 4 %338, i64 36, i1 false), !dbg !21252
  %339 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !21253
  %f1415 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %339, i32 0, i32 3, !dbg !21254
  %340 = load i16, i16* %f1415, align 4, !dbg !21255
  %conv416 = sext i16 %340 to i32, !dbg !21255
  %or417 = or i32 %conv416, 1, !dbg !21255
  %conv418 = trunc i32 %or417 to i16, !dbg !21255
  store i16 %conv418, i16* %f1415, align 4, !dbg !21255
  %341 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !21256
  %call419 = call i8* %341(i64 88, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.215, i64 0, i64 0)), !dbg !21256
  %342 = bitcast i8* %call419 to %struct.Nurb*, !dbg !21257
  store %struct.Nurb* %342, %struct.Nurb** %newnu, align 8, !dbg !21258
  %343 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !21259
  %344 = bitcast %struct.Nurb* %343 to i8*, !dbg !21260
  %345 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21261
  %346 = bitcast %struct.Nurb* %345 to i8*, !dbg !21260
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %344, i8* align 8 %346, i64 88, i1 false), !dbg !21260
  %347 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !21262
  %nurbs420 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %347, i32 0, i32 0, !dbg !21263
  %348 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !21264
  %349 = bitcast %struct.Nurb* %348 to i8*, !dbg !21264
  call void @BLI_addtail(%struct.ListBase* %nurbs420, i8* %349), !dbg !21265
  %350 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !21266
  %351 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !21267
  %bp421 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %351, i32 0, i32 17, !dbg !21268
  store %struct.BPoint* %350, %struct.BPoint** %bp421, align 8, !dbg !21269
  %352 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !21270
  %orderu422 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %352, i32 0, i32 11, !dbg !21271
  store i16 2, i16* %orderu422, align 8, !dbg !21272
  %353 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !21273
  %pntsu423 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %353, i32 0, i32 6, !dbg !21274
  store i32 1, i32* %pntsu423, align 8, !dbg !21275
  %354 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !21276
  %knotsv424 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %354, i32 0, i32 16, !dbg !21277
  store float* null, float** %knotsv424, align 8, !dbg !21278
  %355 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !21279
  %knotsu425 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %355, i32 0, i32 15, !dbg !21280
  store float* null, float** %knotsu425, align 8, !dbg !21281
  %356 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !21282
  store %struct.Nurb* %356, %struct.Nurb** %nu, align 8, !dbg !21283
  %357 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !21284
  store %struct.BPoint* %357, %struct.BPoint** %bp, align 8, !dbg !21285
  store i8 1, i8* %ok, align 1, !dbg !21286
  br label %if.end427, !dbg !21287

if.else426:                                       ; preds = %if.else408
  store %struct.BPoint* null, %struct.BPoint** %bp, align 8, !dbg !21288
  br label %if.end427

if.end427:                                        ; preds = %if.else426, %if.then412
  br label %if.end428

if.end428:                                        ; preds = %if.end427, %if.then392
  br label %if.end429

if.end429:                                        ; preds = %if.end428, %if.then366
  %358 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21290
  %tobool430 = icmp ne %struct.BPoint* %358, null, !dbg !21290
  br i1 %tobool430, label %if.then431, label %if.end469, !dbg !21292

if.then431:                                       ; preds = %if.end429
  %359 = load i16, i16* %mode.addr, align 2, !dbg !21293
  %conv432 = sext i16 %359 to i32, !dbg !21293
  %cmp433 = icmp eq i32 %conv432, 101, !dbg !21296
  br i1 %cmp433, label %if.then435, label %if.else440, !dbg !21297

if.then435:                                       ; preds = %if.then431
  %360 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !21298
  %vec436 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %360, i32 0, i32 0, !dbg !21300
  %arraydecay437 = getelementptr inbounds [4 x float], [4 x float]* %vec436, i64 0, i64 0, !dbg !21298
  %361 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21301
  %vec438 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %361, i32 0, i32 0, !dbg !21302
  %arraydecay439 = getelementptr inbounds [4 x float], [4 x float]* %vec438, i64 0, i64 0, !dbg !21301
  call void @copy_v3_v3(float* %arraydecay437, float* %arraydecay439), !dbg !21303
  br label %if.end462, !dbg !21304

if.else440:                                       ; preds = %if.then431
  %362 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !21305
  %vec441 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %362, i32 0, i32 0, !dbg !21307
  %arraydecay442 = getelementptr inbounds [4 x float], [4 x float]* %vec441, i64 0, i64 0, !dbg !21305
  %arraydecay443 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !21308
  %363 = load float*, float** %location.addr, align 8, !dbg !21309
  call void @mul_v3_m4v3(float* %arraydecay442, [4 x float]* %arraydecay443, float* %363), !dbg !21310
  %364 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !21311
  %vec444 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %364, i32 0, i32 0, !dbg !21312
  %arrayidx445 = getelementptr inbounds [4 x float], [4 x float]* %vec444, i64 0, i64 3, !dbg !21311
  store float 1.000000e+00, float* %arrayidx445, align 4, !dbg !21313
  %365 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !21314
  %tobool446 = icmp ne %struct.Nurb* %365, null, !dbg !21314
  br i1 %tobool446, label %if.end461, label %land.lhs.true447, !dbg !21316

land.lhs.true447:                                 ; preds = %if.else440
  %366 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21317
  %orderu448 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %366, i32 0, i32 11, !dbg !21318
  %367 = load i16, i16* %orderu448, align 8, !dbg !21318
  %conv449 = sext i16 %367 to i32, !dbg !21317
  %cmp450 = icmp slt i32 %conv449, 4, !dbg !21319
  br i1 %cmp450, label %land.lhs.true452, label %if.end461, !dbg !21320

land.lhs.true452:                                 ; preds = %land.lhs.true447
  %368 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21321
  %orderu453 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %368, i32 0, i32 11, !dbg !21322
  %369 = load i16, i16* %orderu453, align 8, !dbg !21322
  %conv454 = sext i16 %369 to i32, !dbg !21321
  %370 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21323
  %pntsu455 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %370, i32 0, i32 6, !dbg !21324
  %371 = load i32, i32* %pntsu455, align 8, !dbg !21324
  %cmp456 = icmp sle i32 %conv454, %371, !dbg !21325
  br i1 %cmp456, label %if.then458, label %if.end461, !dbg !21326

if.then458:                                       ; preds = %land.lhs.true452
  %372 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21327
  %orderu459 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %372, i32 0, i32 11, !dbg !21328
  %373 = load i16, i16* %orderu459, align 8, !dbg !21329
  %inc460 = add i16 %373, 1, !dbg !21329
  store i16 %inc460, i16* %orderu459, align 8, !dbg !21329
  br label %if.end461, !dbg !21327

if.end461:                                        ; preds = %if.then458, %land.lhs.true452, %land.lhs.true447, %if.else440
  br label %if.end462

if.end462:                                        ; preds = %if.end461, %if.then435
  %374 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !21330
  %tobool463 = icmp ne %struct.Nurb* %374, null, !dbg !21330
  br i1 %tobool463, label %if.else467, label %if.then464, !dbg !21332

if.then464:                                       ; preds = %if.end462
  %375 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21333
  %pntsu465 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %375, i32 0, i32 6, !dbg !21335
  %376 = load i32, i32* %pntsu465, align 8, !dbg !21336
  %inc466 = add nsw i32 %376, 1, !dbg !21336
  store i32 %inc466, i32* %pntsu465, align 8, !dbg !21336
  %377 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21337
  call void @BKE_nurb_knot_calc_u(%struct.Nurb* %377), !dbg !21338
  br label %if.end468, !dbg !21339

if.else467:                                       ; preds = %if.end462
  %378 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !21340
  call void @BKE_nurb_knot_calc_u(%struct.Nurb* %378), !dbg !21342
  br label %if.end468

if.end468:                                        ; preds = %if.else467, %if.then464
  br label %if.end469, !dbg !21343

if.end469:                                        ; preds = %if.end468, %if.end429
  br label %if.end470, !dbg !21344

if.end470:                                        ; preds = %if.end469, %land.lhs.true354, %if.else352
  br label %if.end471

if.end471:                                        ; preds = %if.end470, %if.end351
  %379 = load i8, i8* %ok, align 1, !dbg !21345
  %tobool472 = icmp ne i8 %379, 0, !dbg !21345
  br i1 %tobool472, label %if.then473, label %if.end486, !dbg !21347

if.then473:                                       ; preds = %if.end471
  %380 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21348
  %bezt474 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %380, i32 0, i32 18, !dbg !21351
  %381 = load %struct.BezTriple*, %struct.BezTriple** %bezt474, align 8, !dbg !21351
  %tobool475 = icmp ne %struct.BezTriple* %381, null, !dbg !21348
  br i1 %tobool475, label %if.then476, label %if.else477, !dbg !21352

if.then476:                                       ; preds = %if.then473
  %382 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !21353
  %383 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21355
  %384 = load %struct.BezTriple*, %struct.BezTriple** %newbezt, align 8, !dbg !21356
  %385 = bitcast %struct.BezTriple* %384 to i8*, !dbg !21356
  call void @BKE_curve_nurb_vert_active_set(%struct.Curve* %382, %struct.Nurb* %383, i8* %385), !dbg !21357
  br label %if.end478, !dbg !21358

if.else477:                                       ; preds = %if.then473
  %386 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !21359
  %387 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21361
  %388 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !21362
  %389 = bitcast %struct.BPoint* %388 to i8*, !dbg !21362
  call void @BKE_curve_nurb_vert_active_set(%struct.Curve* %386, %struct.Nurb* %387, i8* %389), !dbg !21363
  br label %if.end478

if.end478:                                        ; preds = %if.else477, %if.then476
  %390 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21364
  call void @BKE_nurb_test2D(%struct.Nurb* %390), !dbg !21365
  %391 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !21366
  %data479 = getelementptr inbounds %struct.Object, %struct.Object* %391, i32 0, i32 19, !dbg !21368
  %392 = load i8*, i8** %data479, align 8, !dbg !21368
  %393 = bitcast i8* %392 to %struct.Curve*, !dbg !21366
  %call480 = call i32 @ED_curve_updateAnimPaths(%struct.Curve* %393), !dbg !21369
  %tobool481 = icmp ne i32 %call480, 0, !dbg !21369
  br i1 %tobool481, label %if.then482, label %if.end483, !dbg !21370

if.then482:                                       ; preds = %if.end478
  %394 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !21371
  %395 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !21372
  %396 = bitcast %struct.Object* %395 to i8*, !dbg !21372
  call void @WM_event_add_notifier(%struct.bContext* %394, i32 85524480, i8* %396), !dbg !21373
  br label %if.end483, !dbg !21373

if.end483:                                        ; preds = %if.then482, %if.end478
  %397 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !21374
  %398 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !21375
  %data484 = getelementptr inbounds %struct.Object, %struct.Object* %398, i32 0, i32 19, !dbg !21376
  %399 = load i8*, i8** %data484, align 8, !dbg !21376
  call void @WM_event_add_notifier(%struct.bContext* %397, i32 274399232, i8* %399), !dbg !21377
  %400 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !21378
  %data485 = getelementptr inbounds %struct.Object, %struct.Object* %400, i32 0, i32 19, !dbg !21379
  %401 = load i8*, i8** %data485, align 8, !dbg !21379
  %402 = bitcast i8* %401 to %struct.ID*, !dbg !21378
  call void @DAG_id_tag_update(%struct.ID* %402, i16 signext 0), !dbg !21380
  store i32 4, i32* %retval, align 4, !dbg !21381
  br label %return, !dbg !21381

if.end486:                                        ; preds = %if.end471
  store i32 2, i32* %retval, align 4, !dbg !21382
  br label %return, !dbg !21382

return:                                           ; preds = %if.end486, %if.end483, %if.then106
  %403 = load i32, i32* %retval, align 4, !dbg !21383
  ret i32 %403, !dbg !21383
}

; Function Attrs: noinline nounwind uwtable
define internal void @findselectedNurbvert(%struct.ListBase* %editnurb, %struct.Nurb** %nu, %struct.BezTriple** %bezt, %struct.BPoint** %bp) #0 !dbg !21384 {
entry:
  %editnurb.addr = alloca %struct.ListBase*, align 8
  %nu.addr = alloca %struct.Nurb**, align 8
  %bezt.addr = alloca %struct.BezTriple**, align 8
  %bp.addr = alloca %struct.BPoint**, align 8
  %nu1 = alloca %struct.Nurb*, align 8
  %bezt1 = alloca %struct.BezTriple*, align 8
  %bp1 = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  store %struct.ListBase* %editnurb, %struct.ListBase** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb.addr, metadata !21387, metadata !DIExpression()), !dbg !21388
  store %struct.Nurb** %nu, %struct.Nurb*** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb*** %nu.addr, metadata !21389, metadata !DIExpression()), !dbg !21390
  store %struct.BezTriple** %bezt, %struct.BezTriple*** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple*** %bezt.addr, metadata !21391, metadata !DIExpression()), !dbg !21392
  store %struct.BPoint** %bp, %struct.BPoint*** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BPoint*** %bp.addr, metadata !21393, metadata !DIExpression()), !dbg !21394
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu1, metadata !21395, metadata !DIExpression()), !dbg !21396
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt1, metadata !21397, metadata !DIExpression()), !dbg !21398
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp1, metadata !21399, metadata !DIExpression()), !dbg !21400
  call void @llvm.dbg.declare(metadata i32* %a, metadata !21401, metadata !DIExpression()), !dbg !21402
  %0 = load %struct.Nurb**, %struct.Nurb*** %nu.addr, align 8, !dbg !21403
  store %struct.Nurb* null, %struct.Nurb** %0, align 8, !dbg !21404
  %1 = load %struct.BezTriple**, %struct.BezTriple*** %bezt.addr, align 8, !dbg !21405
  store %struct.BezTriple* null, %struct.BezTriple** %1, align 8, !dbg !21406
  %2 = load %struct.BPoint**, %struct.BPoint*** %bp.addr, align 8, !dbg !21407
  store %struct.BPoint* null, %struct.BPoint** %2, align 8, !dbg !21408
  %3 = load %struct.ListBase*, %struct.ListBase** %editnurb.addr, align 8, !dbg !21409
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %3, i32 0, i32 0, !dbg !21411
  %4 = load i8*, i8** %first, align 8, !dbg !21411
  %5 = bitcast i8* %4 to %struct.Nurb*, !dbg !21409
  store %struct.Nurb* %5, %struct.Nurb** %nu1, align 8, !dbg !21412
  br label %for.cond, !dbg !21413

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !21414
  %tobool = icmp ne %struct.Nurb* %6, null, !dbg !21416
  br i1 %tobool, label %for.body, label %for.end, !dbg !21416

for.body:                                         ; preds = %for.cond
  %7 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !21417
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %7, i32 0, i32 2, !dbg !21420
  %8 = load i16, i16* %type, align 8, !dbg !21420
  %conv = sext i16 %8 to i32, !dbg !21417
  %cmp = icmp eq i32 %conv, 1, !dbg !21421
  br i1 %cmp, label %if.then, label %if.else26, !dbg !21422

if.then:                                          ; preds = %for.body
  %9 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !21423
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 18, !dbg !21425
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !21425
  store %struct.BezTriple* %10, %struct.BezTriple** %bezt1, align 8, !dbg !21426
  %11 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !21427
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 6, !dbg !21428
  %12 = load i32, i32* %pntsu, align 8, !dbg !21428
  store i32 %12, i32* %a, align 4, !dbg !21429
  br label %while.cond, !dbg !21430

while.cond:                                       ; preds = %if.end25, %if.then
  %13 = load i32, i32* %a, align 4, !dbg !21431
  %dec = add nsw i32 %13, -1, !dbg !21431
  store i32 %dec, i32* %a, align 4, !dbg !21431
  %tobool3 = icmp ne i32 %13, 0, !dbg !21430
  br i1 %tobool3, label %while.body, label %while.end, !dbg !21430

while.body:                                       ; preds = %while.cond
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !21432
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %14, i32 0, i32 7, !dbg !21435
  %15 = load i8, i8* %f1, align 1, !dbg !21435
  %conv4 = zext i8 %15 to i32, !dbg !21432
  %and = and i32 %conv4, 1, !dbg !21436
  %tobool5 = icmp ne i32 %and, 0, !dbg !21436
  br i1 %tobool5, label %if.then13, label %lor.lhs.false, !dbg !21437

lor.lhs.false:                                    ; preds = %while.body
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !21438
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %16, i32 0, i32 8, !dbg !21439
  %17 = load i8, i8* %f2, align 4, !dbg !21439
  %conv6 = zext i8 %17 to i32, !dbg !21438
  %and7 = and i32 %conv6, 1, !dbg !21440
  %tobool8 = icmp ne i32 %and7, 0, !dbg !21440
  br i1 %tobool8, label %if.then13, label %lor.lhs.false9, !dbg !21441

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !21442
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %18, i32 0, i32 9, !dbg !21443
  %19 = load i8, i8* %f3, align 1, !dbg !21443
  %conv10 = zext i8 %19 to i32, !dbg !21442
  %and11 = and i32 %conv10, 1, !dbg !21444
  %tobool12 = icmp ne i32 %and11, 0, !dbg !21444
  br i1 %tobool12, label %if.then13, label %if.end25, !dbg !21445

if.then13:                                        ; preds = %lor.lhs.false9, %lor.lhs.false, %while.body
  %20 = load %struct.Nurb**, %struct.Nurb*** %nu.addr, align 8, !dbg !21446
  %21 = load %struct.Nurb*, %struct.Nurb** %20, align 8, !dbg !21449
  %cmp14 = icmp ne %struct.Nurb* %21, null, !dbg !21450
  br i1 %cmp14, label %land.lhs.true, label %if.else, !dbg !21451

land.lhs.true:                                    ; preds = %if.then13
  %22 = load %struct.Nurb**, %struct.Nurb*** %nu.addr, align 8, !dbg !21452
  %23 = load %struct.Nurb*, %struct.Nurb** %22, align 8, !dbg !21453
  %24 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !21454
  %cmp16 = icmp ne %struct.Nurb* %23, %24, !dbg !21455
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !21456

if.then18:                                        ; preds = %land.lhs.true
  %25 = load %struct.Nurb**, %struct.Nurb*** %nu.addr, align 8, !dbg !21457
  store %struct.Nurb* null, %struct.Nurb** %25, align 8, !dbg !21459
  %26 = load %struct.BPoint**, %struct.BPoint*** %bp.addr, align 8, !dbg !21460
  store %struct.BPoint* null, %struct.BPoint** %26, align 8, !dbg !21461
  %27 = load %struct.BezTriple**, %struct.BezTriple*** %bezt.addr, align 8, !dbg !21462
  store %struct.BezTriple* null, %struct.BezTriple** %27, align 8, !dbg !21463
  br label %for.end, !dbg !21464

if.else:                                          ; preds = %land.lhs.true, %if.then13
  %28 = load %struct.BezTriple**, %struct.BezTriple*** %bezt.addr, align 8, !dbg !21465
  %29 = load %struct.BezTriple*, %struct.BezTriple** %28, align 8, !dbg !21467
  %tobool19 = icmp ne %struct.BezTriple* %29, null, !dbg !21467
  br i1 %tobool19, label %if.then22, label %lor.lhs.false20, !dbg !21468

lor.lhs.false20:                                  ; preds = %if.else
  %30 = load %struct.BPoint**, %struct.BPoint*** %bp.addr, align 8, !dbg !21469
  %31 = load %struct.BPoint*, %struct.BPoint** %30, align 8, !dbg !21470
  %tobool21 = icmp ne %struct.BPoint* %31, null, !dbg !21470
  br i1 %tobool21, label %if.then22, label %if.else23, !dbg !21471

if.then22:                                        ; preds = %lor.lhs.false20, %if.else
  %32 = load %struct.BPoint**, %struct.BPoint*** %bp.addr, align 8, !dbg !21472
  store %struct.BPoint* null, %struct.BPoint** %32, align 8, !dbg !21474
  %33 = load %struct.BezTriple**, %struct.BezTriple*** %bezt.addr, align 8, !dbg !21475
  store %struct.BezTriple* null, %struct.BezTriple** %33, align 8, !dbg !21476
  br label %if.end, !dbg !21477

if.else23:                                        ; preds = %lor.lhs.false20
  %34 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !21478
  %35 = load %struct.BezTriple**, %struct.BezTriple*** %bezt.addr, align 8, !dbg !21480
  store %struct.BezTriple* %34, %struct.BezTriple** %35, align 8, !dbg !21481
  %36 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !21482
  %37 = load %struct.Nurb**, %struct.Nurb*** %nu.addr, align 8, !dbg !21483
  store %struct.Nurb* %36, %struct.Nurb** %37, align 8, !dbg !21484
  br label %if.end

if.end:                                           ; preds = %if.else23, %if.then22
  br label %if.end24

if.end24:                                         ; preds = %if.end
  br label %if.end25, !dbg !21485

if.end25:                                         ; preds = %if.end24, %lor.lhs.false9
  %38 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !21486
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %38, i32 1, !dbg !21486
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt1, align 8, !dbg !21486
  br label %while.cond, !dbg !21430, !llvm.loop !21487

while.end:                                        ; preds = %while.cond
  br label %if.end55, !dbg !21489

if.else26:                                        ; preds = %for.body
  %39 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !21490
  %bp27 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %39, i32 0, i32 17, !dbg !21492
  %40 = load %struct.BPoint*, %struct.BPoint** %bp27, align 8, !dbg !21492
  store %struct.BPoint* %40, %struct.BPoint** %bp1, align 8, !dbg !21493
  %41 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !21494
  %pntsu28 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %41, i32 0, i32 6, !dbg !21495
  %42 = load i32, i32* %pntsu28, align 8, !dbg !21495
  %43 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !21496
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %43, i32 0, i32 7, !dbg !21497
  %44 = load i32, i32* %pntsv, align 4, !dbg !21497
  %mul = mul nsw i32 %42, %44, !dbg !21498
  store i32 %mul, i32* %a, align 4, !dbg !21499
  br label %while.cond29, !dbg !21500

while.cond29:                                     ; preds = %if.end52, %if.else26
  %45 = load i32, i32* %a, align 4, !dbg !21501
  %dec30 = add nsw i32 %45, -1, !dbg !21501
  store i32 %dec30, i32* %a, align 4, !dbg !21501
  %tobool31 = icmp ne i32 %45, 0, !dbg !21500
  br i1 %tobool31, label %while.body32, label %while.end54, !dbg !21500

while.body32:                                     ; preds = %while.cond29
  %46 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !21502
  %f133 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %46, i32 0, i32 3, !dbg !21505
  %47 = load i16, i16* %f133, align 4, !dbg !21505
  %conv34 = sext i16 %47 to i32, !dbg !21502
  %and35 = and i32 %conv34, 1, !dbg !21506
  %tobool36 = icmp ne i32 %and35, 0, !dbg !21506
  br i1 %tobool36, label %if.then37, label %if.end52, !dbg !21507

if.then37:                                        ; preds = %while.body32
  %48 = load %struct.Nurb**, %struct.Nurb*** %nu.addr, align 8, !dbg !21508
  %49 = load %struct.Nurb*, %struct.Nurb** %48, align 8, !dbg !21511
  %cmp38 = icmp ne %struct.Nurb* %49, null, !dbg !21512
  br i1 %cmp38, label %land.lhs.true40, label %if.else44, !dbg !21513

land.lhs.true40:                                  ; preds = %if.then37
  %50 = load %struct.Nurb**, %struct.Nurb*** %nu.addr, align 8, !dbg !21514
  %51 = load %struct.Nurb*, %struct.Nurb** %50, align 8, !dbg !21515
  %52 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !21516
  %cmp41 = icmp ne %struct.Nurb* %51, %52, !dbg !21517
  br i1 %cmp41, label %if.then43, label %if.else44, !dbg !21518

if.then43:                                        ; preds = %land.lhs.true40
  %53 = load %struct.BPoint**, %struct.BPoint*** %bp.addr, align 8, !dbg !21519
  store %struct.BPoint* null, %struct.BPoint** %53, align 8, !dbg !21521
  %54 = load %struct.BezTriple**, %struct.BezTriple*** %bezt.addr, align 8, !dbg !21522
  store %struct.BezTriple* null, %struct.BezTriple** %54, align 8, !dbg !21523
  %55 = load %struct.Nurb**, %struct.Nurb*** %nu.addr, align 8, !dbg !21524
  store %struct.Nurb* null, %struct.Nurb** %55, align 8, !dbg !21525
  br label %for.end, !dbg !21526

if.else44:                                        ; preds = %land.lhs.true40, %if.then37
  %56 = load %struct.BezTriple**, %struct.BezTriple*** %bezt.addr, align 8, !dbg !21527
  %57 = load %struct.BezTriple*, %struct.BezTriple** %56, align 8, !dbg !21529
  %tobool45 = icmp ne %struct.BezTriple* %57, null, !dbg !21529
  br i1 %tobool45, label %if.then48, label %lor.lhs.false46, !dbg !21530

lor.lhs.false46:                                  ; preds = %if.else44
  %58 = load %struct.BPoint**, %struct.BPoint*** %bp.addr, align 8, !dbg !21531
  %59 = load %struct.BPoint*, %struct.BPoint** %58, align 8, !dbg !21532
  %tobool47 = icmp ne %struct.BPoint* %59, null, !dbg !21532
  br i1 %tobool47, label %if.then48, label %if.else49, !dbg !21533

if.then48:                                        ; preds = %lor.lhs.false46, %if.else44
  %60 = load %struct.BPoint**, %struct.BPoint*** %bp.addr, align 8, !dbg !21534
  store %struct.BPoint* null, %struct.BPoint** %60, align 8, !dbg !21536
  %61 = load %struct.BezTriple**, %struct.BezTriple*** %bezt.addr, align 8, !dbg !21537
  store %struct.BezTriple* null, %struct.BezTriple** %61, align 8, !dbg !21538
  br label %if.end50, !dbg !21539

if.else49:                                        ; preds = %lor.lhs.false46
  %62 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !21540
  %63 = load %struct.BPoint**, %struct.BPoint*** %bp.addr, align 8, !dbg !21542
  store %struct.BPoint* %62, %struct.BPoint** %63, align 8, !dbg !21543
  %64 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !21544
  %65 = load %struct.Nurb**, %struct.Nurb*** %nu.addr, align 8, !dbg !21545
  store %struct.Nurb* %64, %struct.Nurb** %65, align 8, !dbg !21546
  br label %if.end50

if.end50:                                         ; preds = %if.else49, %if.then48
  br label %if.end51

if.end51:                                         ; preds = %if.end50
  br label %if.end52, !dbg !21547

if.end52:                                         ; preds = %if.end51, %while.body32
  %66 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !21548
  %incdec.ptr53 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %66, i32 1, !dbg !21548
  store %struct.BPoint* %incdec.ptr53, %struct.BPoint** %bp1, align 8, !dbg !21548
  br label %while.cond29, !dbg !21500, !llvm.loop !21549

while.end54:                                      ; preds = %while.cond29
  br label %if.end55

if.end55:                                         ; preds = %while.end54, %while.end
  br label %for.inc, !dbg !21551

for.inc:                                          ; preds = %if.end55
  %67 = load %struct.Nurb*, %struct.Nurb** %nu1, align 8, !dbg !21552
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %67, i32 0, i32 0, !dbg !21553
  %68 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !21553
  store %struct.Nurb* %68, %struct.Nurb** %nu1, align 8, !dbg !21554
  br label %for.cond, !dbg !21555, !llvm.loop !21556

for.end:                                          ; preds = %if.then18, %if.then43, %for.cond
  ret void, !dbg !21558
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !21559 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !21560, metadata !DIExpression()), !dbg !21561
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !21562, metadata !DIExpression()), !dbg !21563
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !21564, metadata !DIExpression()), !dbg !21565
  %0 = load float*, float** %a.addr, align 8, !dbg !21566
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !21566
  %1 = load float, float* %arrayidx, align 4, !dbg !21566
  %2 = load float*, float** %b.addr, align 8, !dbg !21567
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !21567
  %3 = load float, float* %arrayidx1, align 4, !dbg !21567
  %add = fadd float %1, %3, !dbg !21568
  %4 = load float*, float** %r.addr, align 8, !dbg !21569
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !21569
  store float %add, float* %arrayidx2, align 4, !dbg !21570
  %5 = load float*, float** %a.addr, align 8, !dbg !21571
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !21571
  %6 = load float, float* %arrayidx3, align 4, !dbg !21571
  %7 = load float*, float** %b.addr, align 8, !dbg !21572
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !21572
  %8 = load float, float* %arrayidx4, align 4, !dbg !21572
  %add5 = fadd float %6, %8, !dbg !21573
  %9 = load float*, float** %r.addr, align 8, !dbg !21574
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !21574
  store float %add5, float* %arrayidx6, align 4, !dbg !21575
  %10 = load float*, float** %a.addr, align 8, !dbg !21576
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !21576
  %11 = load float, float* %arrayidx7, align 4, !dbg !21576
  %12 = load float*, float** %b.addr, align 8, !dbg !21577
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !21577
  %13 = load float, float* %arrayidx8, align 4, !dbg !21577
  %add9 = fadd float %11, %13, !dbg !21578
  %14 = load float*, float** %r.addr, align 8, !dbg !21579
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !21579
  store float %add9, float* %arrayidx10, align 4, !dbg !21580
  ret void, !dbg !21581
}

declare dso_local void @mul_v3_m4v3(float*, [4 x float]*, float*) #2

declare dso_local zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA*, i8*) #2

declare dso_local void @ED_view3d_win_to_3d_int(%struct.ARegion*, float*, i32*, float*) #2

declare dso_local zeroext i8 @snapObjectsContext(%struct.bContext*, float*, float*, float*, float*, i32) #2

declare dso_local %struct.uiPopupMenu* @uiPupMenuBegin(%struct.bContext*, i8*, i32) #2

declare dso_local %struct.uiLayout* @uiPupMenuLayout(%struct.uiPopupMenu*) #2

declare dso_local void @uiItemsEnumO(%struct.uiLayout*, i8*, i8*) #2

declare dso_local void @uiPupMenuEnd(%struct.bContext*, %struct.uiPopupMenu*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @select_adjacent_cp(%struct.ListBase* %editnurb, i16 signext %next, i8 zeroext %cont, i8 zeroext %selstatus) #0 !dbg !21582 {
entry:
  %editnurb.addr = alloca %struct.ListBase*, align 8
  %next.addr = alloca i16, align 2
  %cont.addr = alloca i8, align 1
  %selstatus.addr = alloca i8, align 1
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  %lastsel = alloca i8, align 1
  %sel = alloca i16, align 2
  %sel118 = alloca i16, align 2
  store %struct.ListBase* %editnurb, %struct.ListBase** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb.addr, metadata !21585, metadata !DIExpression()), !dbg !21586
  store i16 %next, i16* %next.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %next.addr, metadata !21587, metadata !DIExpression()), !dbg !21588
  store i8 %cont, i8* %cont.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %cont.addr, metadata !21589, metadata !DIExpression()), !dbg !21590
  store i8 %selstatus, i8* %selstatus.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %selstatus.addr, metadata !21591, metadata !DIExpression()), !dbg !21592
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !21593, metadata !DIExpression()), !dbg !21594
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !21595, metadata !DIExpression()), !dbg !21596
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !21597, metadata !DIExpression()), !dbg !21598
  call void @llvm.dbg.declare(metadata i32* %a, metadata !21599, metadata !DIExpression()), !dbg !21600
  call void @llvm.dbg.declare(metadata i8* %lastsel, metadata !21601, metadata !DIExpression()), !dbg !21602
  store i8 0, i8* %lastsel, align 1, !dbg !21602
  %0 = load i16, i16* %next.addr, align 2, !dbg !21603
  %conv = sext i16 %0 to i32, !dbg !21603
  %cmp = icmp eq i32 %conv, 0, !dbg !21605
  br i1 %cmp, label %if.then, label %if.end, !dbg !21606

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !21607

if.end:                                           ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %editnurb.addr, align 8, !dbg !21608
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !21610
  %2 = load i8*, i8** %first, align 8, !dbg !21610
  %3 = bitcast i8* %2 to %struct.Nurb*, !dbg !21608
  store %struct.Nurb* %3, %struct.Nurb** %nu, align 8, !dbg !21611
  br label %for.cond, !dbg !21612

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21613
  %tobool = icmp ne %struct.Nurb* %4, null, !dbg !21615
  br i1 %tobool, label %for.body, label %for.end, !dbg !21615

for.body:                                         ; preds = %for.cond
  store i8 0, i8* %lastsel, align 1, !dbg !21616
  %5 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21618
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %5, i32 0, i32 2, !dbg !21620
  %6 = load i16, i16* %type, align 8, !dbg !21620
  %conv2 = sext i16 %6 to i32, !dbg !21618
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !21621
  br i1 %cmp3, label %if.then5, label %if.else66, !dbg !21622

if.then5:                                         ; preds = %for.body
  %7 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21623
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %7, i32 0, i32 6, !dbg !21625
  %8 = load i32, i32* %pntsu, align 8, !dbg !21625
  store i32 %8, i32* %a, align 4, !dbg !21626
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21627
  %bezt6 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 18, !dbg !21628
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt6, align 8, !dbg !21628
  store %struct.BezTriple* %10, %struct.BezTriple** %bezt, align 8, !dbg !21629
  %11 = load i16, i16* %next.addr, align 2, !dbg !21630
  %conv7 = sext i16 %11 to i32, !dbg !21630
  %cmp8 = icmp slt i32 %conv7, 0, !dbg !21632
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !21633

if.then10:                                        ; preds = %if.then5
  %12 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21634
  %bezt11 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 18, !dbg !21635
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt11, align 8, !dbg !21635
  %14 = load i32, i32* %a, align 4, !dbg !21636
  %sub = sub nsw i32 %14, 1, !dbg !21637
  %idxprom = sext i32 %sub to i64, !dbg !21634
  %arrayidx = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %13, i64 %idxprom, !dbg !21634
  store %struct.BezTriple* %arrayidx, %struct.BezTriple** %bezt, align 8, !dbg !21638
  br label %if.end12, !dbg !21639

if.end12:                                         ; preds = %if.then10, %if.then5
  br label %while.cond, !dbg !21640

while.cond:                                       ; preds = %if.end58, %if.end12
  %15 = load i32, i32* %a, align 4, !dbg !21641
  %dec = add nsw i32 %15, -1, !dbg !21641
  store i32 %dec, i32* %a, align 4, !dbg !21641
  %tobool13 = icmp ne i32 %15, 0, !dbg !21640
  br i1 %tobool13, label %while.body, label %while.end, !dbg !21640

while.body:                                       ; preds = %while.cond
  %16 = load i32, i32* %a, align 4, !dbg !21642
  %17 = load i16, i16* %next.addr, align 2, !dbg !21645
  %conv14 = sext i16 %17 to i32, !dbg !21645
  %call = call i32 @abs(i32 %conv14) #8, !dbg !21646
  %sub15 = sub nsw i32 %16, %call, !dbg !21647
  %cmp16 = icmp slt i32 %sub15, 0, !dbg !21648
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !21649

if.then18:                                        ; preds = %while.body
  br label %while.end, !dbg !21650

if.end19:                                         ; preds = %while.body
  %18 = load i8, i8* %lastsel, align 1, !dbg !21651
  %conv20 = zext i8 %18 to i32, !dbg !21651
  %cmp21 = icmp eq i32 %conv20, 0, !dbg !21653
  br i1 %cmp21, label %land.lhs.true, label %if.else, !dbg !21654

land.lhs.true:                                    ; preds = %if.end19
  %19 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !21655
  %hide = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %19, i32 0, i32 10, !dbg !21656
  %20 = load i8, i8* %hide, align 2, !dbg !21656
  %conv23 = zext i8 %20 to i32, !dbg !21655
  %cmp24 = icmp eq i32 %conv23, 0, !dbg !21657
  br i1 %cmp24, label %land.lhs.true26, label %if.else, !dbg !21658

land.lhs.true26:                                  ; preds = %land.lhs.true
  %21 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !21659
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %21, i32 0, i32 8, !dbg !21660
  %22 = load i8, i8* %f2, align 4, !dbg !21660
  %conv27 = zext i8 %22 to i32, !dbg !21659
  %and = and i32 %conv27, 1, !dbg !21661
  %tobool28 = icmp ne i32 %and, 0, !dbg !21661
  br i1 %tobool28, label %if.then32, label %lor.lhs.false, !dbg !21662

lor.lhs.false:                                    ; preds = %land.lhs.true26
  %23 = load i8, i8* %selstatus.addr, align 1, !dbg !21663
  %conv29 = zext i8 %23 to i32, !dbg !21663
  %cmp30 = icmp eq i32 %conv29, 0, !dbg !21664
  br i1 %cmp30, label %if.then32, label %if.else, !dbg !21665

if.then32:                                        ; preds = %lor.lhs.false, %land.lhs.true26
  %24 = load i16, i16* %next.addr, align 2, !dbg !21666
  %conv33 = sext i16 %24 to i32, !dbg !21666
  %25 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !21668
  %idx.ext = sext i32 %conv33 to i64, !dbg !21668
  %add.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %25, i64 %idx.ext, !dbg !21668
  store %struct.BezTriple* %add.ptr, %struct.BezTriple** %bezt, align 8, !dbg !21668
  %26 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !21669
  %f234 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %26, i32 0, i32 8, !dbg !21671
  %27 = load i8, i8* %f234, align 4, !dbg !21671
  %conv35 = zext i8 %27 to i32, !dbg !21669
  %and36 = and i32 %conv35, 1, !dbg !21672
  %tobool37 = icmp ne i32 %and36, 0, !dbg !21672
  br i1 %tobool37, label %lor.lhs.false38, label %if.then42, !dbg !21673

lor.lhs.false38:                                  ; preds = %if.then32
  %28 = load i8, i8* %selstatus.addr, align 1, !dbg !21674
  %conv39 = zext i8 %28 to i32, !dbg !21674
  %cmp40 = icmp eq i32 %conv39, 0, !dbg !21675
  br i1 %cmp40, label %if.then42, label %if.end54, !dbg !21676

if.then42:                                        ; preds = %lor.lhs.false38, %if.then32
  call void @llvm.dbg.declare(metadata i16* %sel, metadata !21677, metadata !DIExpression()), !dbg !21679
  %29 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !21680
  %30 = load i8, i8* %selstatus.addr, align 1, !dbg !21681
  %call43 = call zeroext i8 @select_beztriple(%struct.BezTriple* %29, i8 zeroext %30, i16 signext 1, i32 0), !dbg !21682
  %conv44 = zext i8 %call43 to i16, !dbg !21682
  store i16 %conv44, i16* %sel, align 2, !dbg !21679
  %31 = load i16, i16* %sel, align 2, !dbg !21683
  %conv45 = sext i16 %31 to i32, !dbg !21683
  %cmp46 = icmp eq i32 %conv45, 1, !dbg !21685
  br i1 %cmp46, label %land.lhs.true48, label %if.end53, !dbg !21686

land.lhs.true48:                                  ; preds = %if.then42
  %32 = load i8, i8* %cont.addr, align 1, !dbg !21687
  %conv49 = zext i8 %32 to i32, !dbg !21687
  %cmp50 = icmp eq i32 %conv49, 0, !dbg !21688
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !21689

if.then52:                                        ; preds = %land.lhs.true48
  store i8 1, i8* %lastsel, align 1, !dbg !21690
  br label %if.end53, !dbg !21691

if.end53:                                         ; preds = %if.then52, %land.lhs.true48, %if.then42
  br label %if.end54, !dbg !21692

if.end54:                                         ; preds = %if.end53, %lor.lhs.false38
  br label %if.end58, !dbg !21693

if.else:                                          ; preds = %lor.lhs.false, %land.lhs.true, %if.end19
  %33 = load i16, i16* %next.addr, align 2, !dbg !21694
  %conv55 = sext i16 %33 to i32, !dbg !21694
  %34 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !21696
  %idx.ext56 = sext i32 %conv55 to i64, !dbg !21696
  %add.ptr57 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %34, i64 %idx.ext56, !dbg !21696
  store %struct.BezTriple* %add.ptr57, %struct.BezTriple** %bezt, align 8, !dbg !21696
  store i8 0, i8* %lastsel, align 1, !dbg !21697
  br label %if.end58

if.end58:                                         ; preds = %if.else, %if.end54
  %35 = load i16, i16* %next.addr, align 2, !dbg !21698
  %conv59 = sext i16 %35 to i32, !dbg !21698
  %36 = load i16, i16* %next.addr, align 2, !dbg !21699
  %conv60 = sext i16 %36 to i32, !dbg !21699
  %37 = load i16, i16* %next.addr, align 2, !dbg !21700
  %conv61 = sext i16 %37 to i32, !dbg !21700
  %call62 = call i32 @abs(i32 %conv61) #8, !dbg !21701
  %div = sdiv i32 %conv60, %call62, !dbg !21702
  %sub63 = sub nsw i32 %conv59, %div, !dbg !21703
  %38 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !21704
  %idx.ext64 = sext i32 %sub63 to i64, !dbg !21704
  %idx.neg = sub i64 0, %idx.ext64, !dbg !21704
  %add.ptr65 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %38, i64 %idx.neg, !dbg !21704
  store %struct.BezTriple* %add.ptr65, %struct.BezTriple** %bezt, align 8, !dbg !21704
  br label %while.cond, !dbg !21640, !llvm.loop !21705

while.end:                                        ; preds = %if.then18, %while.cond
  br label %if.end146, !dbg !21707

if.else66:                                        ; preds = %for.body
  %39 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21708
  %pntsu67 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %39, i32 0, i32 6, !dbg !21710
  %40 = load i32, i32* %pntsu67, align 8, !dbg !21710
  %41 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21711
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %41, i32 0, i32 7, !dbg !21712
  %42 = load i32, i32* %pntsv, align 4, !dbg !21712
  %mul = mul nsw i32 %40, %42, !dbg !21713
  store i32 %mul, i32* %a, align 4, !dbg !21714
  %43 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21715
  %bp68 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %43, i32 0, i32 17, !dbg !21716
  %44 = load %struct.BPoint*, %struct.BPoint** %bp68, align 8, !dbg !21716
  store %struct.BPoint* %44, %struct.BPoint** %bp, align 8, !dbg !21717
  %45 = load i16, i16* %next.addr, align 2, !dbg !21718
  %conv69 = sext i16 %45 to i32, !dbg !21718
  %cmp70 = icmp slt i32 %conv69, 0, !dbg !21720
  br i1 %cmp70, label %if.then72, label %if.end77, !dbg !21721

if.then72:                                        ; preds = %if.else66
  %46 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21722
  %bp73 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %46, i32 0, i32 17, !dbg !21723
  %47 = load %struct.BPoint*, %struct.BPoint** %bp73, align 8, !dbg !21723
  %48 = load i32, i32* %a, align 4, !dbg !21724
  %sub74 = sub nsw i32 %48, 1, !dbg !21725
  %idxprom75 = sext i32 %sub74 to i64, !dbg !21722
  %arrayidx76 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %47, i64 %idxprom75, !dbg !21722
  store %struct.BPoint* %arrayidx76, %struct.BPoint** %bp, align 8, !dbg !21726
  br label %if.end77, !dbg !21727

if.end77:                                         ; preds = %if.then72, %if.else66
  br label %while.cond78, !dbg !21728

while.cond78:                                     ; preds = %if.end135, %if.end77
  %49 = load i32, i32* %a, align 4, !dbg !21729
  %dec79 = add nsw i32 %49, -1, !dbg !21729
  store i32 %dec79, i32* %a, align 4, !dbg !21729
  %tobool80 = icmp ne i32 %49, 0, !dbg !21728
  br i1 %tobool80, label %while.body81, label %while.end145, !dbg !21728

while.body81:                                     ; preds = %while.cond78
  %50 = load i32, i32* %a, align 4, !dbg !21730
  %51 = load i16, i16* %next.addr, align 2, !dbg !21733
  %conv82 = sext i16 %51 to i32, !dbg !21733
  %call83 = call i32 @abs(i32 %conv82) #8, !dbg !21734
  %sub84 = sub nsw i32 %50, %call83, !dbg !21735
  %cmp85 = icmp slt i32 %sub84, 0, !dbg !21736
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !21737

if.then87:                                        ; preds = %while.body81
  br label %while.end145, !dbg !21738

if.end88:                                         ; preds = %while.body81
  %52 = load i8, i8* %lastsel, align 1, !dbg !21739
  %conv89 = zext i8 %52 to i32, !dbg !21739
  %cmp90 = icmp eq i32 %conv89, 0, !dbg !21741
  br i1 %cmp90, label %land.lhs.true92, label %if.else131, !dbg !21742

land.lhs.true92:                                  ; preds = %if.end88
  %53 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21743
  %hide93 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %53, i32 0, i32 4, !dbg !21744
  %54 = load i16, i16* %hide93, align 2, !dbg !21744
  %conv94 = sext i16 %54 to i32, !dbg !21743
  %cmp95 = icmp eq i32 %conv94, 0, !dbg !21745
  br i1 %cmp95, label %land.lhs.true97, label %if.else131, !dbg !21746

land.lhs.true97:                                  ; preds = %land.lhs.true92
  %55 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21747
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %55, i32 0, i32 3, !dbg !21748
  %56 = load i16, i16* %f1, align 4, !dbg !21748
  %conv98 = sext i16 %56 to i32, !dbg !21747
  %and99 = and i32 %conv98, 1, !dbg !21749
  %tobool100 = icmp ne i32 %and99, 0, !dbg !21749
  br i1 %tobool100, label %if.then105, label %lor.lhs.false101, !dbg !21750

lor.lhs.false101:                                 ; preds = %land.lhs.true97
  %57 = load i8, i8* %selstatus.addr, align 1, !dbg !21751
  %conv102 = zext i8 %57 to i32, !dbg !21751
  %cmp103 = icmp eq i32 %conv102, 0, !dbg !21752
  br i1 %cmp103, label %if.then105, label %if.else131, !dbg !21753

if.then105:                                       ; preds = %lor.lhs.false101, %land.lhs.true97
  %58 = load i16, i16* %next.addr, align 2, !dbg !21754
  %conv106 = sext i16 %58 to i32, !dbg !21754
  %59 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21756
  %idx.ext107 = sext i32 %conv106 to i64, !dbg !21756
  %add.ptr108 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %59, i64 %idx.ext107, !dbg !21756
  store %struct.BPoint* %add.ptr108, %struct.BPoint** %bp, align 8, !dbg !21756
  %60 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21757
  %f1109 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %60, i32 0, i32 3, !dbg !21759
  %61 = load i16, i16* %f1109, align 4, !dbg !21759
  %conv110 = sext i16 %61 to i32, !dbg !21757
  %and111 = and i32 %conv110, 1, !dbg !21760
  %tobool112 = icmp ne i32 %and111, 0, !dbg !21760
  br i1 %tobool112, label %lor.lhs.false113, label %if.then117, !dbg !21761

lor.lhs.false113:                                 ; preds = %if.then105
  %62 = load i8, i8* %selstatus.addr, align 1, !dbg !21762
  %conv114 = zext i8 %62 to i32, !dbg !21762
  %cmp115 = icmp eq i32 %conv114, 0, !dbg !21763
  br i1 %cmp115, label %if.then117, label %if.end130, !dbg !21764

if.then117:                                       ; preds = %lor.lhs.false113, %if.then105
  call void @llvm.dbg.declare(metadata i16* %sel118, metadata !21765, metadata !DIExpression()), !dbg !21767
  %63 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21768
  %64 = load i8, i8* %selstatus.addr, align 1, !dbg !21769
  %call119 = call zeroext i8 @select_bpoint(%struct.BPoint* %63, i8 zeroext %64, i16 signext 1, i8 zeroext 0), !dbg !21770
  %conv120 = zext i8 %call119 to i16, !dbg !21770
  store i16 %conv120, i16* %sel118, align 2, !dbg !21767
  %65 = load i16, i16* %sel118, align 2, !dbg !21771
  %conv121 = sext i16 %65 to i32, !dbg !21771
  %cmp122 = icmp eq i32 %conv121, 1, !dbg !21773
  br i1 %cmp122, label %land.lhs.true124, label %if.end129, !dbg !21774

land.lhs.true124:                                 ; preds = %if.then117
  %66 = load i8, i8* %cont.addr, align 1, !dbg !21775
  %conv125 = zext i8 %66 to i32, !dbg !21775
  %cmp126 = icmp eq i32 %conv125, 0, !dbg !21776
  br i1 %cmp126, label %if.then128, label %if.end129, !dbg !21777

if.then128:                                       ; preds = %land.lhs.true124
  store i8 1, i8* %lastsel, align 1, !dbg !21778
  br label %if.end129, !dbg !21779

if.end129:                                        ; preds = %if.then128, %land.lhs.true124, %if.then117
  br label %if.end130, !dbg !21780

if.end130:                                        ; preds = %if.end129, %lor.lhs.false113
  br label %if.end135, !dbg !21781

if.else131:                                       ; preds = %lor.lhs.false101, %land.lhs.true92, %if.end88
  %67 = load i16, i16* %next.addr, align 2, !dbg !21782
  %conv132 = sext i16 %67 to i32, !dbg !21782
  %68 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21784
  %idx.ext133 = sext i32 %conv132 to i64, !dbg !21784
  %add.ptr134 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %68, i64 %idx.ext133, !dbg !21784
  store %struct.BPoint* %add.ptr134, %struct.BPoint** %bp, align 8, !dbg !21784
  store i8 0, i8* %lastsel, align 1, !dbg !21785
  br label %if.end135

if.end135:                                        ; preds = %if.else131, %if.end130
  %69 = load i16, i16* %next.addr, align 2, !dbg !21786
  %conv136 = sext i16 %69 to i32, !dbg !21786
  %70 = load i16, i16* %next.addr, align 2, !dbg !21787
  %conv137 = sext i16 %70 to i32, !dbg !21787
  %71 = load i16, i16* %next.addr, align 2, !dbg !21788
  %conv138 = sext i16 %71 to i32, !dbg !21788
  %call139 = call i32 @abs(i32 %conv138) #8, !dbg !21789
  %div140 = sdiv i32 %conv137, %call139, !dbg !21790
  %sub141 = sub nsw i32 %conv136, %div140, !dbg !21791
  %72 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21792
  %idx.ext142 = sext i32 %sub141 to i64, !dbg !21792
  %idx.neg143 = sub i64 0, %idx.ext142, !dbg !21792
  %add.ptr144 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %72, i64 %idx.neg143, !dbg !21792
  store %struct.BPoint* %add.ptr144, %struct.BPoint** %bp, align 8, !dbg !21792
  br label %while.cond78, !dbg !21728, !llvm.loop !21793

while.end145:                                     ; preds = %if.then87, %while.cond78
  br label %if.end146

if.end146:                                        ; preds = %while.end145, %while.end
  br label %for.inc, !dbg !21795

for.inc:                                          ; preds = %if.end146
  %73 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21796
  %next147 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %73, i32 0, i32 0, !dbg !21797
  %74 = load %struct.Nurb*, %struct.Nurb** %next147, align 8, !dbg !21797
  store %struct.Nurb* %74, %struct.Nurb** %nu, align 8, !dbg !21798
  br label %for.cond, !dbg !21799, !llvm.loop !21800

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !21802
}

; Function Attrs: nounwind readnone
declare dso_local i32 @abs(i32) #6

; Function Attrs: noinline nounwind uwtable
define internal void @curve_select_random(%struct.ListBase* %editnurb, float %randfac, i8 zeroext %select) #0 !dbg !21803 {
entry:
  %editnurb.addr = alloca %struct.ListBase*, align 8
  %randfac.addr = alloca float, align 4
  %select.addr = alloca i8, align 1
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  store %struct.ListBase* %editnurb, %struct.ListBase** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb.addr, metadata !21806, metadata !DIExpression()), !dbg !21807
  store float %randfac, float* %randfac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %randfac.addr, metadata !21808, metadata !DIExpression()), !dbg !21809
  store i8 %select, i8* %select.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select.addr, metadata !21810, metadata !DIExpression()), !dbg !21811
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !21812, metadata !DIExpression()), !dbg !21813
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !21814, metadata !DIExpression()), !dbg !21815
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !21816, metadata !DIExpression()), !dbg !21817
  call void @llvm.dbg.declare(metadata i32* %a, metadata !21818, metadata !DIExpression()), !dbg !21819
  %0 = load %struct.ListBase*, %struct.ListBase** %editnurb.addr, align 8, !dbg !21820
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !21822
  %1 = load i8*, i8** %first, align 8, !dbg !21822
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !21820
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !21823
  br label %for.cond, !dbg !21824

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21825
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !21827
  br i1 %tobool, label %for.body, label %for.end, !dbg !21827

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21828
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 2, !dbg !21831
  %5 = load i16, i16* %type, align 8, !dbg !21831
  %conv = sext i16 %5 to i32, !dbg !21828
  %cmp = icmp eq i32 %conv, 1, !dbg !21832
  br i1 %cmp, label %if.then, label %if.else, !dbg !21833

if.then:                                          ; preds = %for.body
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21834
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 18, !dbg !21836
  %7 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !21836
  store %struct.BezTriple* %7, %struct.BezTriple** %bezt, align 8, !dbg !21837
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21838
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 6, !dbg !21839
  %9 = load i32, i32* %pntsu, align 8, !dbg !21839
  store i32 %9, i32* %a, align 4, !dbg !21840
  br label %while.cond, !dbg !21841

while.cond:                                       ; preds = %if.end10, %if.then
  %10 = load i32, i32* %a, align 4, !dbg !21842
  %dec = add nsw i32 %10, -1, !dbg !21842
  store i32 %dec, i32* %a, align 4, !dbg !21842
  %tobool3 = icmp ne i32 %10, 0, !dbg !21841
  br i1 %tobool3, label %while.body, label %while.end, !dbg !21841

while.body:                                       ; preds = %while.cond
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !21843
  %hide = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %11, i32 0, i32 10, !dbg !21846
  %12 = load i8, i8* %hide, align 2, !dbg !21846
  %tobool4 = icmp ne i8 %12, 0, !dbg !21843
  br i1 %tobool4, label %if.end10, label %if.then5, !dbg !21847

if.then5:                                         ; preds = %while.body
  %call = call float @BLI_frand(), !dbg !21848
  %13 = load float, float* %randfac.addr, align 4, !dbg !21851
  %cmp6 = fcmp olt float %call, %13, !dbg !21852
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !21853

if.then8:                                         ; preds = %if.then5
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !21854
  %15 = load i8, i8* %select.addr, align 1, !dbg !21856
  %call9 = call zeroext i8 @select_beztriple(%struct.BezTriple* %14, i8 zeroext %15, i16 signext 1, i32 0), !dbg !21857
  br label %if.end, !dbg !21858

if.end:                                           ; preds = %if.then8, %if.then5
  br label %if.end10, !dbg !21859

if.end10:                                         ; preds = %if.end, %while.body
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !21860
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %16, i32 1, !dbg !21860
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !21860
  br label %while.cond, !dbg !21841, !llvm.loop !21861

while.end:                                        ; preds = %while.cond
  br label %if.end29, !dbg !21863

if.else:                                          ; preds = %for.body
  %17 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21864
  %bp11 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %17, i32 0, i32 17, !dbg !21866
  %18 = load %struct.BPoint*, %struct.BPoint** %bp11, align 8, !dbg !21866
  store %struct.BPoint* %18, %struct.BPoint** %bp, align 8, !dbg !21867
  %19 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21868
  %pntsu12 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %19, i32 0, i32 6, !dbg !21869
  %20 = load i32, i32* %pntsu12, align 8, !dbg !21869
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21870
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 7, !dbg !21871
  %22 = load i32, i32* %pntsv, align 4, !dbg !21871
  %mul = mul nsw i32 %20, %22, !dbg !21872
  store i32 %mul, i32* %a, align 4, !dbg !21873
  br label %while.cond13, !dbg !21874

while.cond13:                                     ; preds = %if.end26, %if.else
  %23 = load i32, i32* %a, align 4, !dbg !21875
  %dec14 = add nsw i32 %23, -1, !dbg !21875
  store i32 %dec14, i32* %a, align 4, !dbg !21875
  %tobool15 = icmp ne i32 %23, 0, !dbg !21874
  br i1 %tobool15, label %while.body16, label %while.end28, !dbg !21874

while.body16:                                     ; preds = %while.cond13
  %24 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21876
  %hide17 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %24, i32 0, i32 4, !dbg !21879
  %25 = load i16, i16* %hide17, align 2, !dbg !21879
  %tobool18 = icmp ne i16 %25, 0, !dbg !21876
  br i1 %tobool18, label %if.end26, label %if.then19, !dbg !21880

if.then19:                                        ; preds = %while.body16
  %call20 = call float @BLI_frand(), !dbg !21881
  %26 = load float, float* %randfac.addr, align 4, !dbg !21884
  %cmp21 = fcmp olt float %call20, %26, !dbg !21885
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !21886

if.then23:                                        ; preds = %if.then19
  %27 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21887
  %28 = load i8, i8* %select.addr, align 1, !dbg !21889
  %call24 = call zeroext i8 @select_bpoint(%struct.BPoint* %27, i8 zeroext %28, i16 signext 1, i8 zeroext 0), !dbg !21890
  br label %if.end25, !dbg !21891

if.end25:                                         ; preds = %if.then23, %if.then19
  br label %if.end26, !dbg !21892

if.end26:                                         ; preds = %if.end25, %while.body16
  %29 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21893
  %incdec.ptr27 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %29, i32 1, !dbg !21893
  store %struct.BPoint* %incdec.ptr27, %struct.BPoint** %bp, align 8, !dbg !21893
  br label %while.cond13, !dbg !21874, !llvm.loop !21894

while.end28:                                      ; preds = %while.cond13
  br label %if.end29

if.end29:                                         ; preds = %while.end28, %while.end
  br label %for.inc, !dbg !21896

for.inc:                                          ; preds = %if.end29
  %30 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21897
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %30, i32 0, i32 0, !dbg !21898
  %31 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !21898
  store %struct.Nurb* %31, %struct.Nurb** %nu, align 8, !dbg !21899
  br label %for.cond, !dbg !21900, !llvm.loop !21901

for.end:                                          ; preds = %for.cond
  ret void, !dbg !21903
}

declare dso_local float @BLI_frand() #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @curve_delete_vertices(%struct.Object* %obedit) #0 !dbg !21904 {
entry:
  %obedit.addr = alloca %struct.Object*, align 8
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !21907, metadata !DIExpression()), !dbg !21908
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !21909
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !21911
  %1 = load i16, i16* %type, align 8, !dbg !21911
  %conv = sext i16 %1 to i32, !dbg !21909
  %cmp = icmp eq i32 %conv, 3, !dbg !21912
  br i1 %cmp, label %if.then, label %if.else, !dbg !21913

if.then:                                          ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !21914
  call void @ed_surf_delete_selected(%struct.Object* %2), !dbg !21916
  br label %if.end, !dbg !21917

if.else:                                          ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !21918
  call void @ed_curve_delete_selected(%struct.Object* %3), !dbg !21920
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 4, !dbg !21921
}

; Function Attrs: noinline nounwind uwtable
define internal void @ed_surf_delete_selected(%struct.Object* %obedit) #0 !dbg !21922 {
entry:
  %obedit.addr = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %editnurb = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %next = alloca %struct.Nurb*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %bpn = alloca %struct.BPoint*, align 8
  %newbp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %newu = alloca i32, align 4
  %newv = alloca i32, align 4
  %sw_ap = alloca i16, align 2
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !21923, metadata !DIExpression()), !dbg !21924
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !21925, metadata !DIExpression()), !dbg !21926
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !21927
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !21928
  %1 = load i8*, i8** %data, align 8, !dbg !21928
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !21927
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !21926
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb, metadata !21929, metadata !DIExpression()), !dbg !21930
  %3 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !21931
  %call = call %struct.ListBase* @object_editcurve_get(%struct.Object* %3), !dbg !21932
  store %struct.ListBase* %call, %struct.ListBase** %editnurb, align 8, !dbg !21930
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !21933, metadata !DIExpression()), !dbg !21934
  call void @llvm.dbg.declare(metadata %struct.Nurb** %next, metadata !21935, metadata !DIExpression()), !dbg !21936
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !21937, metadata !DIExpression()), !dbg !21938
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bpn, metadata !21939, metadata !DIExpression()), !dbg !21940
  call void @llvm.dbg.declare(metadata %struct.BPoint** %newbp, metadata !21941, metadata !DIExpression()), !dbg !21942
  call void @llvm.dbg.declare(metadata i32* %a, metadata !21943, metadata !DIExpression()), !dbg !21944
  call void @llvm.dbg.declare(metadata i32* %b, metadata !21945, metadata !DIExpression()), !dbg !21946
  call void @llvm.dbg.declare(metadata i32* %newu, metadata !21947, metadata !DIExpression()), !dbg !21948
  call void @llvm.dbg.declare(metadata i32* %newv, metadata !21949, metadata !DIExpression()), !dbg !21950
  %4 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !21951
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %4, i32 0, i32 0, !dbg !21952
  %5 = load i8*, i8** %first, align 8, !dbg !21952
  %6 = bitcast i8* %5 to %struct.Nurb*, !dbg !21951
  store %struct.Nurb* %6, %struct.Nurb** %nu, align 8, !dbg !21953
  br label %while.cond, !dbg !21954

while.cond:                                       ; preds = %if.end121, %entry
  %7 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21955
  %tobool = icmp ne %struct.Nurb* %7, null, !dbg !21954
  br i1 %tobool, label %while.body, label %while.end122, !dbg !21954

while.body:                                       ; preds = %while.cond
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21956
  %next1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 0, !dbg !21958
  %9 = load %struct.Nurb*, %struct.Nurb** %next1, align 8, !dbg !21958
  store %struct.Nurb* %9, %struct.Nurb** %next, align 8, !dbg !21959
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21960
  %bp2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 17, !dbg !21961
  %11 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !21961
  store %struct.BPoint* %11, %struct.BPoint** %bp, align 8, !dbg !21962
  %12 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21963
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 6, !dbg !21964
  %13 = load i32, i32* %pntsu, align 8, !dbg !21964
  %14 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21965
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 7, !dbg !21966
  %15 = load i32, i32* %pntsv, align 4, !dbg !21966
  %mul = mul nsw i32 %13, %15, !dbg !21967
  store i32 %mul, i32* %a, align 4, !dbg !21968
  br label %while.cond3, !dbg !21969

while.cond3:                                      ; preds = %if.end, %while.body
  %16 = load i32, i32* %a, align 4, !dbg !21970
  %tobool4 = icmp ne i32 %16, 0, !dbg !21969
  br i1 %tobool4, label %while.body5, label %while.end, !dbg !21969

while.body5:                                      ; preds = %while.cond3
  %17 = load i32, i32* %a, align 4, !dbg !21971
  %dec = add nsw i32 %17, -1, !dbg !21971
  store i32 %dec, i32* %a, align 4, !dbg !21971
  %18 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21973
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %18, i32 0, i32 3, !dbg !21975
  %19 = load i16, i16* %f1, align 4, !dbg !21975
  %conv = sext i16 %19 to i32, !dbg !21973
  %and = and i32 %conv, 1, !dbg !21976
  %tobool6 = icmp ne i32 %and, 0, !dbg !21976
  br i1 %tobool6, label %if.then, label %if.else, !dbg !21977

if.then:                                          ; preds = %while.body5
  br label %if.end, !dbg !21978

if.else:                                          ; preds = %while.body5
  br label %while.end, !dbg !21980

if.end:                                           ; preds = %if.then
  %20 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !21982
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %20, i32 1, !dbg !21982
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp, align 8, !dbg !21982
  br label %while.cond3, !dbg !21969, !llvm.loop !21983

while.end:                                        ; preds = %if.else, %while.cond3
  %21 = load i32, i32* %a, align 4, !dbg !21985
  %cmp = icmp eq i32 %21, 0, !dbg !21987
  br i1 %cmp, label %if.then8, label %if.else10, !dbg !21988

if.then8:                                         ; preds = %while.end
  %22 = load %struct.ListBase*, %struct.ListBase** %editnurb, align 8, !dbg !21989
  %23 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21991
  %24 = bitcast %struct.Nurb* %23 to i8*, !dbg !21991
  call void @BLI_remlink(%struct.ListBase* %22, i8* %24), !dbg !21992
  %25 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !21993
  %editnurb9 = getelementptr inbounds %struct.Curve, %struct.Curve* %25, i32 0, i32 4, !dbg !21994
  %26 = load %struct.EditNurb*, %struct.EditNurb** %editnurb9, align 8, !dbg !21994
  %27 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21995
  call void @keyIndex_delNurb(%struct.EditNurb* %26, %struct.Nurb* %27), !dbg !21996
  %28 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !21997
  call void @BKE_nurb_free(%struct.Nurb* %28), !dbg !21998
  store %struct.Nurb* null, %struct.Nurb** %nu, align 8, !dbg !21999
  br label %if.end121, !dbg !22000

if.else10:                                        ; preds = %while.end
  %29 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22001
  %call11 = call zeroext i8 @isNurbselU(%struct.Nurb* %29, i32* %newv, i32 1), !dbg !22004
  %tobool12 = icmp ne i8 %call11, 0, !dbg !22004
  br i1 %tobool12, label %if.then13, label %if.else51, !dbg !22005

if.then13:                                        ; preds = %if.else10
  %30 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22006
  %pntsv14 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %30, i32 0, i32 7, !dbg !22008
  %31 = load i32, i32* %pntsv14, align 4, !dbg !22008
  %32 = load i32, i32* %newv, align 4, !dbg !22009
  %sub = sub nsw i32 %31, %32, !dbg !22010
  store i32 %sub, i32* %newv, align 4, !dbg !22011
  %33 = load i32, i32* %newv, align 4, !dbg !22012
  %34 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22014
  %pntsv15 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %34, i32 0, i32 7, !dbg !22015
  %35 = load i32, i32* %pntsv15, align 4, !dbg !22015
  %cmp16 = icmp ne i32 %33, %35, !dbg !22016
  br i1 %cmp16, label %if.then18, label %if.end50, !dbg !22017

if.then18:                                        ; preds = %if.then13
  %36 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22018
  %bp19 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %36, i32 0, i32 17, !dbg !22020
  %37 = load %struct.BPoint*, %struct.BPoint** %bp19, align 8, !dbg !22020
  store %struct.BPoint* %37, %struct.BPoint** %bp, align 8, !dbg !22021
  %38 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !22022
  %39 = load i32, i32* %newv, align 4, !dbg !22023
  %40 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22024
  %pntsu20 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %40, i32 0, i32 6, !dbg !22025
  %41 = load i32, i32* %pntsu20, align 8, !dbg !22025
  %mul21 = mul nsw i32 %39, %41, !dbg !22026
  %conv22 = sext i32 %mul21 to i64, !dbg !22023
  %mul23 = mul i64 %conv22, 36, !dbg !22027
  %call24 = call i8* %38(i64 %mul23, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.223, i64 0, i64 0)), !dbg !22022
  %42 = bitcast i8* %call24 to %struct.BPoint*, !dbg !22028
  store %struct.BPoint* %42, %struct.BPoint** %newbp, align 8, !dbg !22029
  store %struct.BPoint* %42, %struct.BPoint** %bpn, align 8, !dbg !22030
  store i32 0, i32* %b, align 4, !dbg !22031
  br label %for.cond, !dbg !22033

for.cond:                                         ; preds = %for.inc, %if.then18
  %43 = load i32, i32* %b, align 4, !dbg !22034
  %44 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22036
  %pntsv25 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %44, i32 0, i32 7, !dbg !22037
  %45 = load i32, i32* %pntsv25, align 4, !dbg !22037
  %cmp26 = icmp slt i32 %43, %45, !dbg !22038
  br i1 %cmp26, label %for.body, label %for.end, !dbg !22039

for.body:                                         ; preds = %for.cond
  %46 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !22040
  %f128 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %46, i32 0, i32 3, !dbg !22043
  %47 = load i16, i16* %f128, align 4, !dbg !22043
  %conv29 = sext i16 %47 to i32, !dbg !22040
  %and30 = and i32 %conv29, 1, !dbg !22044
  %cmp31 = icmp eq i32 %and30, 0, !dbg !22045
  br i1 %cmp31, label %if.then33, label %if.else40, !dbg !22046

if.then33:                                        ; preds = %for.body
  %48 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !22047
  %49 = bitcast %struct.BPoint* %48 to i8*, !dbg !22049
  %50 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !22050
  %51 = bitcast %struct.BPoint* %50 to i8*, !dbg !22049
  %52 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22051
  %pntsu34 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %52, i32 0, i32 6, !dbg !22052
  %53 = load i32, i32* %pntsu34, align 8, !dbg !22052
  %conv35 = sext i32 %53 to i64, !dbg !22051
  %mul36 = mul i64 %conv35, 36, !dbg !22053
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 %51, i64 %mul36, i1 false), !dbg !22049
  %54 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !22054
  %editnurb37 = getelementptr inbounds %struct.Curve, %struct.Curve* %54, i32 0, i32 4, !dbg !22055
  %55 = load %struct.EditNurb*, %struct.EditNurb** %editnurb37, align 8, !dbg !22055
  %56 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !22056
  %57 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !22057
  %58 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22058
  %pntsu38 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %58, i32 0, i32 6, !dbg !22059
  %59 = load i32, i32* %pntsu38, align 8, !dbg !22059
  call void @keyIndex_updateBP(%struct.EditNurb* %55, %struct.BPoint* %56, %struct.BPoint* %57, i32 %59), !dbg !22060
  %60 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22061
  %pntsu39 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %60, i32 0, i32 6, !dbg !22062
  %61 = load i32, i32* %pntsu39, align 8, !dbg !22062
  %62 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !22063
  %idx.ext = sext i32 %61 to i64, !dbg !22063
  %add.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %62, i64 %idx.ext, !dbg !22063
  store %struct.BPoint* %add.ptr, %struct.BPoint** %bpn, align 8, !dbg !22063
  br label %if.end42, !dbg !22064

if.else40:                                        ; preds = %for.body
  %63 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !22065
  %editnurb41 = getelementptr inbounds %struct.Curve, %struct.Curve* %63, i32 0, i32 4, !dbg !22067
  %64 = load %struct.EditNurb*, %struct.EditNurb** %editnurb41, align 8, !dbg !22067
  %65 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !22068
  call void @keyIndex_delBP(%struct.EditNurb* %64, %struct.BPoint* %65), !dbg !22069
  br label %if.end42

if.end42:                                         ; preds = %if.else40, %if.then33
  %66 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22070
  %pntsu43 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %66, i32 0, i32 6, !dbg !22071
  %67 = load i32, i32* %pntsu43, align 8, !dbg !22071
  %68 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !22072
  %idx.ext44 = sext i32 %67 to i64, !dbg !22072
  %add.ptr45 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %68, i64 %idx.ext44, !dbg !22072
  store %struct.BPoint* %add.ptr45, %struct.BPoint** %bp, align 8, !dbg !22072
  br label %for.inc, !dbg !22073

for.inc:                                          ; preds = %if.end42
  %69 = load i32, i32* %b, align 4, !dbg !22074
  %inc = add nsw i32 %69, 1, !dbg !22074
  store i32 %inc, i32* %b, align 4, !dbg !22074
  br label %for.cond, !dbg !22075, !llvm.loop !22076

for.end:                                          ; preds = %for.cond
  %70 = load i32, i32* %newv, align 4, !dbg !22078
  %71 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22079
  %pntsv46 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %71, i32 0, i32 7, !dbg !22080
  store i32 %70, i32* %pntsv46, align 4, !dbg !22081
  %72 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !22082
  %73 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22083
  %bp47 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %73, i32 0, i32 17, !dbg !22084
  %74 = load %struct.BPoint*, %struct.BPoint** %bp47, align 8, !dbg !22084
  %75 = bitcast %struct.BPoint* %74 to i8*, !dbg !22083
  call void %72(i8* %75), !dbg !22082
  %76 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !22085
  %77 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22086
  %bp48 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %77, i32 0, i32 17, !dbg !22087
  store %struct.BPoint* %76, %struct.BPoint** %bp48, align 8, !dbg !22088
  %78 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22089
  %call49 = call zeroext i8 @BKE_nurb_order_clamp_v(%struct.Nurb* %78), !dbg !22090
  %79 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22091
  call void @BKE_nurb_knot_calc_v(%struct.Nurb* %79), !dbg !22092
  br label %if.end50, !dbg !22093

if.end50:                                         ; preds = %for.end, %if.then13
  br label %if.end120, !dbg !22094

if.else51:                                        ; preds = %if.else10
  %80 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22095
  %call52 = call zeroext i8 @isNurbselV(%struct.Nurb* %80, i32* %newu, i32 1), !dbg !22097
  %tobool53 = icmp ne i8 %call52, 0, !dbg !22097
  br i1 %tobool53, label %if.then54, label %if.end119, !dbg !22098

if.then54:                                        ; preds = %if.else51
  %81 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22099
  %pntsu55 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %81, i32 0, i32 6, !dbg !22101
  %82 = load i32, i32* %pntsu55, align 8, !dbg !22101
  %83 = load i32, i32* %newu, align 4, !dbg !22102
  %sub56 = sub nsw i32 %82, %83, !dbg !22103
  store i32 %sub56, i32* %newu, align 4, !dbg !22104
  %84 = load i32, i32* %newu, align 4, !dbg !22105
  %85 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22107
  %pntsu57 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %85, i32 0, i32 6, !dbg !22108
  %86 = load i32, i32* %pntsu57, align 8, !dbg !22108
  %cmp58 = icmp ne i32 %84, %86, !dbg !22109
  br i1 %cmp58, label %if.then60, label %if.end118, !dbg !22110

if.then60:                                        ; preds = %if.then54
  %87 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22111
  %bp61 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %87, i32 0, i32 17, !dbg !22113
  %88 = load %struct.BPoint*, %struct.BPoint** %bp61, align 8, !dbg !22113
  store %struct.BPoint* %88, %struct.BPoint** %bp, align 8, !dbg !22114
  %89 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !22115
  %90 = load i32, i32* %newu, align 4, !dbg !22116
  %91 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22117
  %pntsv62 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %91, i32 0, i32 7, !dbg !22118
  %92 = load i32, i32* %pntsv62, align 4, !dbg !22118
  %mul63 = mul nsw i32 %90, %92, !dbg !22119
  %conv64 = sext i32 %mul63 to i64, !dbg !22116
  %mul65 = mul i64 %conv64, 36, !dbg !22120
  %call66 = call i8* %89(i64 %mul65, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.223, i64 0, i64 0)), !dbg !22115
  %93 = bitcast i8* %call66 to %struct.BPoint*, !dbg !22121
  store %struct.BPoint* %93, %struct.BPoint** %newbp, align 8, !dbg !22122
  store %struct.BPoint* %93, %struct.BPoint** %bpn, align 8, !dbg !22123
  store i32 0, i32* %b, align 4, !dbg !22124
  br label %for.cond67, !dbg !22126

for.cond67:                                       ; preds = %for.inc92, %if.then60
  %94 = load i32, i32* %b, align 4, !dbg !22127
  %95 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22129
  %pntsv68 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %95, i32 0, i32 7, !dbg !22130
  %96 = load i32, i32* %pntsv68, align 4, !dbg !22130
  %cmp69 = icmp slt i32 %94, %96, !dbg !22131
  br i1 %cmp69, label %for.body71, label %for.end94, !dbg !22132

for.body71:                                       ; preds = %for.cond67
  store i32 0, i32* %a, align 4, !dbg !22133
  br label %for.cond72, !dbg !22136

for.cond72:                                       ; preds = %for.inc88, %for.body71
  %97 = load i32, i32* %a, align 4, !dbg !22137
  %98 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22139
  %pntsu73 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %98, i32 0, i32 6, !dbg !22140
  %99 = load i32, i32* %pntsu73, align 8, !dbg !22140
  %cmp74 = icmp slt i32 %97, %99, !dbg !22141
  br i1 %cmp74, label %for.body76, label %for.end91, !dbg !22142

for.body76:                                       ; preds = %for.cond72
  %100 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !22143
  %f177 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %100, i32 0, i32 3, !dbg !22146
  %101 = load i16, i16* %f177, align 4, !dbg !22146
  %conv78 = sext i16 %101 to i32, !dbg !22143
  %and79 = and i32 %conv78, 1, !dbg !22147
  %cmp80 = icmp eq i32 %and79, 0, !dbg !22148
  br i1 %cmp80, label %if.then82, label %if.else85, !dbg !22149

if.then82:                                        ; preds = %for.body76
  %102 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !22150
  %103 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !22152
  %104 = bitcast %struct.BPoint* %102 to i8*, !dbg !22153
  %105 = bitcast %struct.BPoint* %103 to i8*, !dbg !22153
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %105, i64 36, i1 false), !dbg !22153
  %106 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !22154
  %editnurb83 = getelementptr inbounds %struct.Curve, %struct.Curve* %106, i32 0, i32 4, !dbg !22155
  %107 = load %struct.EditNurb*, %struct.EditNurb** %editnurb83, align 8, !dbg !22155
  %108 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !22156
  %109 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !22157
  call void @keyIndex_updateBP(%struct.EditNurb* %107, %struct.BPoint* %108, %struct.BPoint* %109, i32 1), !dbg !22158
  %110 = load %struct.BPoint*, %struct.BPoint** %bpn, align 8, !dbg !22159
  %incdec.ptr84 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %110, i32 1, !dbg !22159
  store %struct.BPoint* %incdec.ptr84, %struct.BPoint** %bpn, align 8, !dbg !22159
  br label %if.end87, !dbg !22160

if.else85:                                        ; preds = %for.body76
  %111 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !22161
  %editnurb86 = getelementptr inbounds %struct.Curve, %struct.Curve* %111, i32 0, i32 4, !dbg !22163
  %112 = load %struct.EditNurb*, %struct.EditNurb** %editnurb86, align 8, !dbg !22163
  %113 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !22164
  call void @keyIndex_delBP(%struct.EditNurb* %112, %struct.BPoint* %113), !dbg !22165
  br label %if.end87

if.end87:                                         ; preds = %if.else85, %if.then82
  br label %for.inc88, !dbg !22166

for.inc88:                                        ; preds = %if.end87
  %114 = load i32, i32* %a, align 4, !dbg !22167
  %inc89 = add nsw i32 %114, 1, !dbg !22167
  store i32 %inc89, i32* %a, align 4, !dbg !22167
  %115 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !22168
  %incdec.ptr90 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %115, i32 1, !dbg !22168
  store %struct.BPoint* %incdec.ptr90, %struct.BPoint** %bp, align 8, !dbg !22168
  br label %for.cond72, !dbg !22169, !llvm.loop !22170

for.end91:                                        ; preds = %for.cond72
  br label %for.inc92, !dbg !22172

for.inc92:                                        ; preds = %for.end91
  %116 = load i32, i32* %b, align 4, !dbg !22173
  %inc93 = add nsw i32 %116, 1, !dbg !22173
  store i32 %inc93, i32* %b, align 4, !dbg !22173
  br label %for.cond67, !dbg !22174, !llvm.loop !22175

for.end94:                                        ; preds = %for.cond67
  %117 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !22177
  %118 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22178
  %bp95 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %118, i32 0, i32 17, !dbg !22179
  %119 = load %struct.BPoint*, %struct.BPoint** %bp95, align 8, !dbg !22179
  %120 = bitcast %struct.BPoint* %119 to i8*, !dbg !22178
  call void %117(i8* %120), !dbg !22177
  %121 = load %struct.BPoint*, %struct.BPoint** %newbp, align 8, !dbg !22180
  %122 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22181
  %bp96 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %122, i32 0, i32 17, !dbg !22182
  store %struct.BPoint* %121, %struct.BPoint** %bp96, align 8, !dbg !22183
  %123 = load i32, i32* %newu, align 4, !dbg !22184
  %cmp97 = icmp eq i32 %123, 1, !dbg !22186
  br i1 %cmp97, label %land.lhs.true, label %if.else114, !dbg !22187

land.lhs.true:                                    ; preds = %for.end94
  %124 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22188
  %pntsv99 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %124, i32 0, i32 7, !dbg !22189
  %125 = load i32, i32* %pntsv99, align 4, !dbg !22189
  %cmp100 = icmp sgt i32 %125, 1, !dbg !22190
  br i1 %cmp100, label %if.then102, label %if.else114, !dbg !22191

if.then102:                                       ; preds = %land.lhs.true
  %126 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22192
  %pntsv103 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %126, i32 0, i32 7, !dbg !22194
  %127 = load i32, i32* %pntsv103, align 4, !dbg !22194
  %128 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22195
  %pntsu104 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %128, i32 0, i32 6, !dbg !22196
  store i32 %127, i32* %pntsu104, align 8, !dbg !22197
  %129 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22198
  %pntsv105 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %129, i32 0, i32 7, !dbg !22199
  store i32 1, i32* %pntsv105, align 4, !dbg !22200
  call void @llvm.dbg.declare(metadata i16* %sw_ap, metadata !22201, metadata !DIExpression()), !dbg !22203
  %130 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22203
  %orderu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %130, i32 0, i32 11, !dbg !22203
  %131 = load i16, i16* %orderu, align 8, !dbg !22203
  store i16 %131, i16* %sw_ap, align 2, !dbg !22203
  %132 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22203
  %orderv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %132, i32 0, i32 12, !dbg !22203
  %133 = load i16, i16* %orderv, align 2, !dbg !22203
  %134 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22203
  %orderu106 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %134, i32 0, i32 11, !dbg !22203
  store i16 %133, i16* %orderu106, align 8, !dbg !22203
  %135 = load i16, i16* %sw_ap, align 2, !dbg !22203
  %136 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22203
  %orderv107 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %136, i32 0, i32 12, !dbg !22203
  store i16 %135, i16* %orderv107, align 2, !dbg !22203
  %137 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22204
  %call108 = call zeroext i8 @BKE_nurb_order_clamp_u(%struct.Nurb* %137), !dbg !22205
  %138 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22206
  %knotsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %138, i32 0, i32 16, !dbg !22208
  %139 = load float*, float** %knotsv, align 8, !dbg !22208
  %tobool109 = icmp ne float* %139, null, !dbg !22206
  br i1 %tobool109, label %if.then110, label %if.end112, !dbg !22209

if.then110:                                       ; preds = %if.then102
  %140 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !22210
  %141 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22211
  %knotsv111 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %141, i32 0, i32 16, !dbg !22212
  %142 = load float*, float** %knotsv111, align 8, !dbg !22212
  %143 = bitcast float* %142 to i8*, !dbg !22211
  call void %140(i8* %143), !dbg !22210
  br label %if.end112, !dbg !22210

if.end112:                                        ; preds = %if.then110, %if.then102
  %144 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22213
  %knotsv113 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %144, i32 0, i32 16, !dbg !22214
  store float* null, float** %knotsv113, align 8, !dbg !22215
  br label %if.end117, !dbg !22216

if.else114:                                       ; preds = %land.lhs.true, %for.end94
  %145 = load i32, i32* %newu, align 4, !dbg !22217
  %146 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22219
  %pntsu115 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %146, i32 0, i32 6, !dbg !22220
  store i32 %145, i32* %pntsu115, align 8, !dbg !22221
  %147 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22222
  %call116 = call zeroext i8 @BKE_nurb_order_clamp_u(%struct.Nurb* %147), !dbg !22223
  br label %if.end117

if.end117:                                        ; preds = %if.else114, %if.end112
  %148 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22224
  call void @BKE_nurb_knot_calc_u(%struct.Nurb* %148), !dbg !22225
  br label %if.end118, !dbg !22226

if.end118:                                        ; preds = %if.end117, %if.then54
  br label %if.end119, !dbg !22227

if.end119:                                        ; preds = %if.end118, %if.else51
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.end50
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then8
  %149 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !22228
  store %struct.Nurb* %149, %struct.Nurb** %nu, align 8, !dbg !22229
  br label %while.cond, !dbg !21954, !llvm.loop !22230

while.end122:                                     ; preds = %while.cond
  ret void, !dbg !22232
}

; Function Attrs: noinline nounwind uwtable
define internal void @ed_curve_delete_selected(%struct.Object* %obedit) #0 !dbg !22233 {
entry:
  %obedit.addr = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %editnurb = alloca %struct.EditNurb*, align 8
  %nubase = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %next = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bezt1 = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %bp1 = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  %type = alloca i32, align 4
  %nuindex = alloca i32, align 4
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !22234, metadata !DIExpression()), !dbg !22235
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !22236, metadata !DIExpression()), !dbg !22237
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !22238
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !22239
  %1 = load i8*, i8** %data, align 8, !dbg !22239
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !22238
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !22237
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb, metadata !22240, metadata !DIExpression()), !dbg !22241
  %3 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !22242
  %editnurb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 4, !dbg !22243
  %4 = load %struct.EditNurb*, %struct.EditNurb** %editnurb1, align 8, !dbg !22243
  store %struct.EditNurb* %4, %struct.EditNurb** %editnurb, align 8, !dbg !22241
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nubase, metadata !22244, metadata !DIExpression()), !dbg !22245
  %5 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !22246
  %nurbs = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %5, i32 0, i32 0, !dbg !22247
  store %struct.ListBase* %nurbs, %struct.ListBase** %nubase, align 8, !dbg !22245
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !22248, metadata !DIExpression()), !dbg !22249
  call void @llvm.dbg.declare(metadata %struct.Nurb** %next, metadata !22250, metadata !DIExpression()), !dbg !22251
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !22252, metadata !DIExpression()), !dbg !22253
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt1, metadata !22254, metadata !DIExpression()), !dbg !22255
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !22256, metadata !DIExpression()), !dbg !22257
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp1, metadata !22258, metadata !DIExpression()), !dbg !22259
  call void @llvm.dbg.declare(metadata i32* %a, metadata !22260, metadata !DIExpression()), !dbg !22261
  call void @llvm.dbg.declare(metadata i32* %type, metadata !22262, metadata !DIExpression()), !dbg !22263
  call void @llvm.dbg.declare(metadata i32* %nuindex, metadata !22264, metadata !DIExpression()), !dbg !22265
  store i32 0, i32* %nuindex, align 4, !dbg !22265
  %6 = load %struct.ListBase*, %struct.ListBase** %nubase, align 8, !dbg !22266
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %6, i32 0, i32 0, !dbg !22267
  %7 = load i8*, i8** %first, align 8, !dbg !22267
  %8 = bitcast i8* %7 to %struct.Nurb*, !dbg !22266
  store %struct.Nurb* %8, %struct.Nurb** %nu, align 8, !dbg !22268
  br label %while.cond, !dbg !22269

while.cond:                                       ; preds = %if.end67, %entry
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22270
  %tobool = icmp ne %struct.Nurb* %9, null, !dbg !22269
  br i1 %tobool, label %while.body, label %while.end68, !dbg !22269

while.body:                                       ; preds = %while.cond
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22271
  %next2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 0, !dbg !22273
  %11 = load %struct.Nurb*, %struct.Nurb** %next2, align 8, !dbg !22273
  store %struct.Nurb* %11, %struct.Nurb** %next, align 8, !dbg !22274
  %12 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22275
  %type3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 2, !dbg !22277
  %13 = load i16, i16* %type3, align 8, !dbg !22277
  %conv = sext i16 %13 to i32, !dbg !22275
  %cmp = icmp eq i32 %conv, 1, !dbg !22278
  br i1 %cmp, label %if.then, label %if.else38, !dbg !22279

if.then:                                          ; preds = %while.body
  %14 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22280
  %bezt5 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 18, !dbg !22282
  %15 = load %struct.BezTriple*, %struct.BezTriple** %bezt5, align 8, !dbg !22282
  store %struct.BezTriple* %15, %struct.BezTriple** %bezt, align 8, !dbg !22283
  %16 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22284
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %16, i32 0, i32 6, !dbg !22285
  %17 = load i32, i32* %pntsu, align 8, !dbg !22285
  store i32 %17, i32* %a, align 4, !dbg !22286
  %18 = load i32, i32* %a, align 4, !dbg !22287
  %tobool6 = icmp ne i32 %18, 0, !dbg !22287
  br i1 %tobool6, label %if.then7, label %if.end37, !dbg !22289

if.then7:                                         ; preds = %if.then
  br label %while.cond8, !dbg !22290

while.cond8:                                      ; preds = %if.end, %if.then7
  %19 = load i32, i32* %a, align 4, !dbg !22292
  %tobool9 = icmp ne i32 %19, 0, !dbg !22290
  br i1 %tobool9, label %while.body10, label %while.end, !dbg !22290

while.body10:                                     ; preds = %while.cond8
  %20 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !22293
  %drawflag = getelementptr inbounds %struct.Curve, %struct.Curve* %20, i32 0, i32 16, !dbg !22293
  %21 = load i16, i16* %drawflag, align 8, !dbg !22293
  %conv11 = sext i16 %21 to i32, !dbg !22293
  %and = and i32 %conv11, 1, !dbg !22293
  %tobool12 = icmp ne i32 %and, 0, !dbg !22293
  br i1 %tobool12, label %cond.true, label %cond.false, !dbg !22296

cond.true:                                        ; preds = %while.body10
  %22 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !22293
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %22, i32 0, i32 8, !dbg !22293
  %23 = load i8, i8* %f2, align 4, !dbg !22293
  %conv13 = zext i8 %23 to i32, !dbg !22293
  %and14 = and i32 %conv13, 1, !dbg !22293
  %tobool15 = icmp ne i32 %and14, 0, !dbg !22293
  br i1 %tobool15, label %if.then27, label %if.else, !dbg !22293

cond.false:                                       ; preds = %while.body10
  %24 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !22293
  %f216 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %24, i32 0, i32 8, !dbg !22293
  %25 = load i8, i8* %f216, align 4, !dbg !22293
  %conv17 = zext i8 %25 to i32, !dbg !22293
  %and18 = and i32 %conv17, 1, !dbg !22293
  %tobool19 = icmp ne i32 %and18, 0, !dbg !22293
  br i1 %tobool19, label %if.then27, label %lor.lhs.false, !dbg !22293

lor.lhs.false:                                    ; preds = %cond.false
  %26 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !22293
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %26, i32 0, i32 7, !dbg !22293
  %27 = load i8, i8* %f1, align 1, !dbg !22293
  %conv20 = zext i8 %27 to i32, !dbg !22293
  %and21 = and i32 %conv20, 1, !dbg !22293
  %tobool22 = icmp ne i32 %and21, 0, !dbg !22293
  br i1 %tobool22, label %if.then27, label %lor.lhs.false23, !dbg !22293

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %28 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !22293
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %28, i32 0, i32 9, !dbg !22293
  %29 = load i8, i8* %f3, align 1, !dbg !22293
  %conv24 = zext i8 %29 to i32, !dbg !22293
  %and25 = and i32 %conv24, 1, !dbg !22293
  %tobool26 = icmp ne i32 %and25, 0, !dbg !22293
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !22296

if.then27:                                        ; preds = %lor.lhs.false23, %lor.lhs.false, %cond.false, %cond.true
  br label %if.end, !dbg !22297

if.else:                                          ; preds = %lor.lhs.false23, %cond.true
  br label %while.end, !dbg !22299

if.end:                                           ; preds = %if.then27
  %30 = load i32, i32* %a, align 4, !dbg !22301
  %dec = add nsw i32 %30, -1, !dbg !22301
  store i32 %dec, i32* %a, align 4, !dbg !22301
  %31 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !22302
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %31, i32 1, !dbg !22302
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !22302
  br label %while.cond8, !dbg !22290, !llvm.loop !22303

while.end:                                        ; preds = %if.else, %while.cond8
  %32 = load i32, i32* %a, align 4, !dbg !22305
  %cmp28 = icmp eq i32 %32, 0, !dbg !22307
  br i1 %cmp28, label %if.then30, label %if.end36, !dbg !22308

if.then30:                                        ; preds = %while.end
  %33 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !22309
  %actnu = getelementptr inbounds %struct.Curve, %struct.Curve* %33, i32 0, i32 31, !dbg !22312
  %34 = load i32, i32* %actnu, align 4, !dbg !22312
  %35 = load i32, i32* %nuindex, align 4, !dbg !22313
  %cmp31 = icmp eq i32 %34, %35, !dbg !22314
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !22315

if.then33:                                        ; preds = %if.then30
  %36 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !22316
  %actnu34 = getelementptr inbounds %struct.Curve, %struct.Curve* %36, i32 0, i32 31, !dbg !22317
  store i32 -1, i32* %actnu34, align 4, !dbg !22318
  br label %if.end35, !dbg !22316

if.end35:                                         ; preds = %if.then33, %if.then30
  %37 = load %struct.ListBase*, %struct.ListBase** %nubase, align 8, !dbg !22319
  %38 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22320
  %39 = bitcast %struct.Nurb* %38 to i8*, !dbg !22320
  call void @BLI_remlink(%struct.ListBase* %37, i8* %39), !dbg !22321
  %40 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !22322
  %41 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22323
  call void @keyIndex_delNurb(%struct.EditNurb* %40, %struct.Nurb* %41), !dbg !22324
  %42 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22325
  call void @BKE_nurb_free(%struct.Nurb* %42), !dbg !22326
  store %struct.Nurb* null, %struct.Nurb** %nu, align 8, !dbg !22327
  br label %if.end36, !dbg !22328

if.end36:                                         ; preds = %if.end35, %while.end
  br label %if.end37, !dbg !22329

if.end37:                                         ; preds = %if.end36, %if.then
  br label %if.end67, !dbg !22330

if.else38:                                        ; preds = %while.body
  %43 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22331
  %bp39 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %43, i32 0, i32 17, !dbg !22333
  %44 = load %struct.BPoint*, %struct.BPoint** %bp39, align 8, !dbg !22333
  store %struct.BPoint* %44, %struct.BPoint** %bp, align 8, !dbg !22334
  %45 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22335
  %pntsu40 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %45, i32 0, i32 6, !dbg !22336
  %46 = load i32, i32* %pntsu40, align 8, !dbg !22336
  %47 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22337
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %47, i32 0, i32 7, !dbg !22338
  %48 = load i32, i32* %pntsv, align 4, !dbg !22338
  %mul = mul nsw i32 %46, %48, !dbg !22339
  store i32 %mul, i32* %a, align 4, !dbg !22340
  %49 = load i32, i32* %a, align 4, !dbg !22341
  %tobool41 = icmp ne i32 %49, 0, !dbg !22341
  br i1 %tobool41, label %if.then42, label %if.end66, !dbg !22343

if.then42:                                        ; preds = %if.else38
  br label %while.cond43, !dbg !22344

while.cond43:                                     ; preds = %if.end52, %if.then42
  %50 = load i32, i32* %a, align 4, !dbg !22346
  %tobool44 = icmp ne i32 %50, 0, !dbg !22344
  br i1 %tobool44, label %while.body45, label %while.end55, !dbg !22344

while.body45:                                     ; preds = %while.cond43
  %51 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !22347
  %f146 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %51, i32 0, i32 3, !dbg !22350
  %52 = load i16, i16* %f146, align 4, !dbg !22350
  %conv47 = sext i16 %52 to i32, !dbg !22347
  %and48 = and i32 %conv47, 1, !dbg !22351
  %tobool49 = icmp ne i32 %and48, 0, !dbg !22351
  br i1 %tobool49, label %if.then50, label %if.else51, !dbg !22352

if.then50:                                        ; preds = %while.body45
  br label %if.end52, !dbg !22353

if.else51:                                        ; preds = %while.body45
  br label %while.end55, !dbg !22355

if.end52:                                         ; preds = %if.then50
  %53 = load i32, i32* %a, align 4, !dbg !22357
  %dec53 = add nsw i32 %53, -1, !dbg !22357
  store i32 %dec53, i32* %a, align 4, !dbg !22357
  %54 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !22358
  %incdec.ptr54 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %54, i32 1, !dbg !22358
  store %struct.BPoint* %incdec.ptr54, %struct.BPoint** %bp, align 8, !dbg !22358
  br label %while.cond43, !dbg !22344, !llvm.loop !22359

while.end55:                                      ; preds = %if.else51, %while.cond43
  %55 = load i32, i32* %a, align 4, !dbg !22361
  %cmp56 = icmp eq i32 %55, 0, !dbg !22363
  br i1 %cmp56, label %if.then58, label %if.end65, !dbg !22364

if.then58:                                        ; preds = %while.end55
  %56 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !22365
  %actnu59 = getelementptr inbounds %struct.Curve, %struct.Curve* %56, i32 0, i32 31, !dbg !22368
  %57 = load i32, i32* %actnu59, align 4, !dbg !22368
  %58 = load i32, i32* %nuindex, align 4, !dbg !22369
  %cmp60 = icmp eq i32 %57, %58, !dbg !22370
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !22371

if.then62:                                        ; preds = %if.then58
  %59 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !22372
  %actnu63 = getelementptr inbounds %struct.Curve, %struct.Curve* %59, i32 0, i32 31, !dbg !22373
  store i32 -1, i32* %actnu63, align 4, !dbg !22374
  br label %if.end64, !dbg !22372

if.end64:                                         ; preds = %if.then62, %if.then58
  %60 = load %struct.ListBase*, %struct.ListBase** %nubase, align 8, !dbg !22375
  %61 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22376
  %62 = bitcast %struct.Nurb* %61 to i8*, !dbg !22376
  call void @BLI_remlink(%struct.ListBase* %60, i8* %62), !dbg !22377
  %63 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !22378
  %64 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22379
  call void @keyIndex_delNurb(%struct.EditNurb* %63, %struct.Nurb* %64), !dbg !22380
  %65 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22381
  call void @BKE_nurb_free(%struct.Nurb* %65), !dbg !22382
  store %struct.Nurb* null, %struct.Nurb** %nu, align 8, !dbg !22383
  br label %if.end65, !dbg !22384

if.end65:                                         ; preds = %if.end64, %while.end55
  br label %if.end66, !dbg !22385

if.end66:                                         ; preds = %if.end65, %if.else38
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.end37
  %66 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !22386
  store %struct.Nurb* %66, %struct.Nurb** %nu, align 8, !dbg !22387
  %67 = load i32, i32* %nuindex, align 4, !dbg !22388
  %inc = add nsw i32 %67, 1, !dbg !22388
  store i32 %inc, i32* %nuindex, align 4, !dbg !22388
  br label %while.cond, !dbg !22269, !llvm.loop !22389

while.end68:                                      ; preds = %while.cond
  %68 = load %struct.ListBase*, %struct.ListBase** %nubase, align 8, !dbg !22391
  %first69 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %68, i32 0, i32 0, !dbg !22392
  %69 = load i8*, i8** %first69, align 8, !dbg !22392
  %70 = bitcast i8* %69 to %struct.Nurb*, !dbg !22391
  store %struct.Nurb* %70, %struct.Nurb** %nu, align 8, !dbg !22393
  br label %while.cond70, !dbg !22394

while.cond70:                                     ; preds = %if.end189, %while.end68
  %71 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22395
  %tobool71 = icmp ne %struct.Nurb* %71, null, !dbg !22394
  br i1 %tobool71, label %while.body72, label %while.end190, !dbg !22394

while.body72:                                     ; preds = %while.cond70
  %72 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22396
  %next73 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %72, i32 0, i32 0, !dbg !22398
  %73 = load %struct.Nurb*, %struct.Nurb** %next73, align 8, !dbg !22398
  store %struct.Nurb* %73, %struct.Nurb** %next, align 8, !dbg !22399
  store i32 0, i32* %type, align 4, !dbg !22400
  %74 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22401
  %type74 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %74, i32 0, i32 2, !dbg !22403
  %75 = load i16, i16* %type74, align 8, !dbg !22403
  %conv75 = sext i16 %75 to i32, !dbg !22401
  %cmp76 = icmp eq i32 %conv75, 1, !dbg !22404
  br i1 %cmp76, label %if.then78, label %if.else137, !dbg !22405

if.then78:                                        ; preds = %while.body72
  %76 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22406
  %bezt79 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %76, i32 0, i32 18, !dbg !22408
  %77 = load %struct.BezTriple*, %struct.BezTriple** %bezt79, align 8, !dbg !22408
  store %struct.BezTriple* %77, %struct.BezTriple** %bezt, align 8, !dbg !22409
  store i32 0, i32* %a, align 4, !dbg !22410
  br label %for.cond, !dbg !22412

for.cond:                                         ; preds = %for.inc, %if.then78
  %78 = load i32, i32* %a, align 4, !dbg !22413
  %79 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22415
  %pntsu80 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %79, i32 0, i32 6, !dbg !22416
  %80 = load i32, i32* %pntsu80, align 8, !dbg !22416
  %cmp81 = icmp slt i32 %78, %80, !dbg !22417
  br i1 %cmp81, label %for.body, label %for.end, !dbg !22418

for.body:                                         ; preds = %for.cond
  %81 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !22419
  %drawflag83 = getelementptr inbounds %struct.Curve, %struct.Curve* %81, i32 0, i32 16, !dbg !22419
  %82 = load i16, i16* %drawflag83, align 8, !dbg !22419
  %conv84 = sext i16 %82 to i32, !dbg !22419
  %and85 = and i32 %conv84, 1, !dbg !22419
  %tobool86 = icmp ne i32 %and85, 0, !dbg !22419
  br i1 %tobool86, label %cond.true87, label %cond.false92, !dbg !22422

cond.true87:                                      ; preds = %for.body
  %83 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !22419
  %f288 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %83, i32 0, i32 8, !dbg !22419
  %84 = load i8, i8* %f288, align 4, !dbg !22419
  %conv89 = zext i8 %84 to i32, !dbg !22419
  %and90 = and i32 %conv89, 1, !dbg !22419
  %tobool91 = icmp ne i32 %and90, 0, !dbg !22419
  br i1 %tobool91, label %if.then107, label %if.else119, !dbg !22419

cond.false92:                                     ; preds = %for.body
  %85 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !22419
  %f293 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %85, i32 0, i32 8, !dbg !22419
  %86 = load i8, i8* %f293, align 4, !dbg !22419
  %conv94 = zext i8 %86 to i32, !dbg !22419
  %and95 = and i32 %conv94, 1, !dbg !22419
  %tobool96 = icmp ne i32 %and95, 0, !dbg !22419
  br i1 %tobool96, label %if.then107, label %lor.lhs.false97, !dbg !22419

lor.lhs.false97:                                  ; preds = %cond.false92
  %87 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !22419
  %f198 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %87, i32 0, i32 7, !dbg !22419
  %88 = load i8, i8* %f198, align 1, !dbg !22419
  %conv99 = zext i8 %88 to i32, !dbg !22419
  %and100 = and i32 %conv99, 1, !dbg !22419
  %tobool101 = icmp ne i32 %and100, 0, !dbg !22419
  br i1 %tobool101, label %if.then107, label %lor.lhs.false102, !dbg !22419

lor.lhs.false102:                                 ; preds = %lor.lhs.false97
  %89 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !22419
  %f3103 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %89, i32 0, i32 9, !dbg !22419
  %90 = load i8, i8* %f3103, align 1, !dbg !22419
  %conv104 = zext i8 %90 to i32, !dbg !22419
  %and105 = and i32 %conv104, 1, !dbg !22419
  %tobool106 = icmp ne i32 %and105, 0, !dbg !22419
  br i1 %tobool106, label %if.then107, label %if.else119, !dbg !22422

if.then107:                                       ; preds = %lor.lhs.false102, %lor.lhs.false97, %cond.false92, %cond.true87
  %91 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !22423
  %92 = bitcast %struct.BezTriple* %91 to i8*, !dbg !22425
  %93 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !22426
  %add.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %93, i64 1, !dbg !22427
  %94 = bitcast %struct.BezTriple* %add.ptr to i8*, !dbg !22425
  %95 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22428
  %pntsu108 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %95, i32 0, i32 6, !dbg !22429
  %96 = load i32, i32* %pntsu108, align 8, !dbg !22429
  %97 = load i32, i32* %a, align 4, !dbg !22430
  %sub = sub nsw i32 %96, %97, !dbg !22431
  %sub109 = sub nsw i32 %sub, 1, !dbg !22432
  %conv110 = sext i32 %sub109 to i64, !dbg !22433
  %mul111 = mul i64 %conv110, 72, !dbg !22434
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %94, i64 %mul111, i1 false), !dbg !22425
  %98 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !22435
  %99 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !22436
  call void @keyIndex_delBezt(%struct.EditNurb* %98, %struct.BezTriple* %99), !dbg !22437
  %100 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !22438
  %101 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !22439
  %add.ptr112 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %101, i64 1, !dbg !22440
  %102 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !22441
  %103 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22442
  %pntsu113 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %103, i32 0, i32 6, !dbg !22443
  %104 = load i32, i32* %pntsu113, align 8, !dbg !22443
  %105 = load i32, i32* %a, align 4, !dbg !22444
  %sub114 = sub nsw i32 %104, %105, !dbg !22445
  %sub115 = sub nsw i32 %sub114, 1, !dbg !22446
  call void @keyIndex_updateBezt(%struct.EditNurb* %100, %struct.BezTriple* %add.ptr112, %struct.BezTriple* %102, i32 %sub115), !dbg !22447
  %106 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22448
  %pntsu116 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %106, i32 0, i32 6, !dbg !22449
  %107 = load i32, i32* %pntsu116, align 8, !dbg !22450
  %dec117 = add nsw i32 %107, -1, !dbg !22450
  store i32 %dec117, i32* %pntsu116, align 8, !dbg !22450
  %108 = load i32, i32* %a, align 4, !dbg !22451
  %dec118 = add nsw i32 %108, -1, !dbg !22451
  store i32 %dec118, i32* %a, align 4, !dbg !22451
  store i32 1, i32* %type, align 4, !dbg !22452
  br label %if.end121, !dbg !22453

if.else119:                                       ; preds = %lor.lhs.false102, %cond.true87
  %109 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !22454
  %incdec.ptr120 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %109, i32 1, !dbg !22454
  store %struct.BezTriple* %incdec.ptr120, %struct.BezTriple** %bezt, align 8, !dbg !22454
  br label %if.end121

if.end121:                                        ; preds = %if.else119, %if.then107
  br label %for.inc, !dbg !22456

for.inc:                                          ; preds = %if.end121
  %110 = load i32, i32* %a, align 4, !dbg !22457
  %inc122 = add nsw i32 %110, 1, !dbg !22457
  store i32 %inc122, i32* %a, align 4, !dbg !22457
  br label %for.cond, !dbg !22458, !llvm.loop !22459

for.end:                                          ; preds = %for.cond
  %111 = load i32, i32* %type, align 4, !dbg !22461
  %tobool123 = icmp ne i32 %111, 0, !dbg !22461
  br i1 %tobool123, label %if.then124, label %if.end136, !dbg !22463

if.then124:                                       ; preds = %for.end
  %112 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !22464
  %113 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22466
  %pntsu125 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %113, i32 0, i32 6, !dbg !22467
  %114 = load i32, i32* %pntsu125, align 8, !dbg !22467
  %conv126 = sext i32 %114 to i64, !dbg !22468
  %mul127 = mul i64 %conv126, 72, !dbg !22469
  %call = call i8* %112(i64 %mul127, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.224, i64 0, i64 0)), !dbg !22464
  %115 = bitcast i8* %call to %struct.BezTriple*, !dbg !22470
  store %struct.BezTriple* %115, %struct.BezTriple** %bezt1, align 8, !dbg !22471
  %116 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !22472
  %117 = bitcast %struct.BezTriple* %116 to i8*, !dbg !22473
  %118 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22474
  %bezt128 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %118, i32 0, i32 18, !dbg !22475
  %119 = load %struct.BezTriple*, %struct.BezTriple** %bezt128, align 8, !dbg !22475
  %120 = bitcast %struct.BezTriple* %119 to i8*, !dbg !22473
  %121 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22476
  %pntsu129 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %121, i32 0, i32 6, !dbg !22477
  %122 = load i32, i32* %pntsu129, align 8, !dbg !22477
  %conv130 = sext i32 %122 to i64, !dbg !22478
  %mul131 = mul i64 %conv130, 72, !dbg !22479
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %117, i8* align 4 %120, i64 %mul131, i1 false), !dbg !22473
  %123 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !22480
  %124 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22481
  %bezt132 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %124, i32 0, i32 18, !dbg !22482
  %125 = load %struct.BezTriple*, %struct.BezTriple** %bezt132, align 8, !dbg !22482
  %126 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !22483
  %127 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22484
  %pntsu133 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %127, i32 0, i32 6, !dbg !22485
  %128 = load i32, i32* %pntsu133, align 8, !dbg !22485
  call void @keyIndex_updateBezt(%struct.EditNurb* %123, %struct.BezTriple* %125, %struct.BezTriple* %126, i32 %128), !dbg !22486
  %129 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !22487
  %130 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22488
  %bezt134 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %130, i32 0, i32 18, !dbg !22489
  %131 = load %struct.BezTriple*, %struct.BezTriple** %bezt134, align 8, !dbg !22489
  %132 = bitcast %struct.BezTriple* %131 to i8*, !dbg !22488
  call void %129(i8* %132), !dbg !22487
  %133 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !22490
  %134 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22491
  %bezt135 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %134, i32 0, i32 18, !dbg !22492
  store %struct.BezTriple* %133, %struct.BezTriple** %bezt135, align 8, !dbg !22493
  %135 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22494
  call void @BKE_nurb_handles_calc(%struct.Nurb* %135), !dbg !22495
  br label %if.end136, !dbg !22496

if.end136:                                        ; preds = %if.then124, %for.end
  br label %if.end189, !dbg !22497

if.else137:                                       ; preds = %while.body72
  %136 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22498
  %pntsv138 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %136, i32 0, i32 7, !dbg !22500
  %137 = load i32, i32* %pntsv138, align 4, !dbg !22500
  %cmp139 = icmp eq i32 %137, 1, !dbg !22501
  br i1 %cmp139, label %if.then141, label %if.end188, !dbg !22502

if.then141:                                       ; preds = %if.else137
  %138 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22503
  %bp142 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %138, i32 0, i32 17, !dbg !22505
  %139 = load %struct.BPoint*, %struct.BPoint** %bp142, align 8, !dbg !22505
  store %struct.BPoint* %139, %struct.BPoint** %bp, align 8, !dbg !22506
  store i32 0, i32* %a, align 4, !dbg !22507
  br label %for.cond143, !dbg !22509

for.cond143:                                      ; preds = %for.inc169, %if.then141
  %140 = load i32, i32* %a, align 4, !dbg !22510
  %141 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22512
  %pntsu144 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %141, i32 0, i32 6, !dbg !22513
  %142 = load i32, i32* %pntsu144, align 8, !dbg !22513
  %cmp145 = icmp slt i32 %140, %142, !dbg !22514
  br i1 %cmp145, label %for.body147, label %for.end171, !dbg !22515

for.body147:                                      ; preds = %for.cond143
  %143 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !22516
  %f1148 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %143, i32 0, i32 3, !dbg !22519
  %144 = load i16, i16* %f1148, align 4, !dbg !22519
  %conv149 = sext i16 %144 to i32, !dbg !22516
  %and150 = and i32 %conv149, 1, !dbg !22520
  %tobool151 = icmp ne i32 %and150, 0, !dbg !22520
  br i1 %tobool151, label %if.then152, label %if.else166, !dbg !22521

if.then152:                                       ; preds = %for.body147
  %145 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !22522
  %146 = bitcast %struct.BPoint* %145 to i8*, !dbg !22524
  %147 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !22525
  %add.ptr153 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %147, i64 1, !dbg !22526
  %148 = bitcast %struct.BPoint* %add.ptr153 to i8*, !dbg !22524
  %149 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22527
  %pntsu154 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %149, i32 0, i32 6, !dbg !22528
  %150 = load i32, i32* %pntsu154, align 8, !dbg !22528
  %151 = load i32, i32* %a, align 4, !dbg !22529
  %sub155 = sub nsw i32 %150, %151, !dbg !22530
  %sub156 = sub nsw i32 %sub155, 1, !dbg !22531
  %conv157 = sext i32 %sub156 to i64, !dbg !22532
  %mul158 = mul i64 %conv157, 36, !dbg !22533
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %146, i8* align 4 %148, i64 %mul158, i1 false), !dbg !22524
  %152 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !22534
  %153 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !22535
  call void @keyIndex_delBP(%struct.EditNurb* %152, %struct.BPoint* %153), !dbg !22536
  %154 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !22537
  %155 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !22538
  %add.ptr159 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %155, i64 1, !dbg !22539
  %156 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !22540
  %157 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22541
  %pntsu160 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %157, i32 0, i32 6, !dbg !22542
  %158 = load i32, i32* %pntsu160, align 8, !dbg !22542
  %159 = load i32, i32* %a, align 4, !dbg !22543
  %sub161 = sub nsw i32 %158, %159, !dbg !22544
  %sub162 = sub nsw i32 %sub161, 1, !dbg !22545
  call void @keyIndex_updateBP(%struct.EditNurb* %154, %struct.BPoint* %add.ptr159, %struct.BPoint* %156, i32 %sub162), !dbg !22546
  %160 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22547
  %pntsu163 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %160, i32 0, i32 6, !dbg !22548
  %161 = load i32, i32* %pntsu163, align 8, !dbg !22549
  %dec164 = add nsw i32 %161, -1, !dbg !22549
  store i32 %dec164, i32* %pntsu163, align 8, !dbg !22549
  %162 = load i32, i32* %a, align 4, !dbg !22550
  %dec165 = add nsw i32 %162, -1, !dbg !22550
  store i32 %dec165, i32* %a, align 4, !dbg !22550
  store i32 1, i32* %type, align 4, !dbg !22551
  br label %if.end168, !dbg !22552

if.else166:                                       ; preds = %for.body147
  %163 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !22553
  %incdec.ptr167 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %163, i32 1, !dbg !22553
  store %struct.BPoint* %incdec.ptr167, %struct.BPoint** %bp, align 8, !dbg !22553
  br label %if.end168

if.end168:                                        ; preds = %if.else166, %if.then152
  br label %for.inc169, !dbg !22555

for.inc169:                                       ; preds = %if.end168
  %164 = load i32, i32* %a, align 4, !dbg !22556
  %inc170 = add nsw i32 %164, 1, !dbg !22556
  store i32 %inc170, i32* %a, align 4, !dbg !22556
  br label %for.cond143, !dbg !22557, !llvm.loop !22558

for.end171:                                       ; preds = %for.cond143
  %165 = load i32, i32* %type, align 4, !dbg !22560
  %tobool172 = icmp ne i32 %165, 0, !dbg !22560
  br i1 %tobool172, label %if.then173, label %if.end186, !dbg !22562

if.then173:                                       ; preds = %for.end171
  %166 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !22563
  %167 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22565
  %pntsu174 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %167, i32 0, i32 6, !dbg !22566
  %168 = load i32, i32* %pntsu174, align 8, !dbg !22566
  %conv175 = sext i32 %168 to i64, !dbg !22565
  %mul176 = mul i64 %conv175, 36, !dbg !22567
  %call177 = call i8* %166(i64 %mul176, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.225, i64 0, i64 0)), !dbg !22563
  %169 = bitcast i8* %call177 to %struct.BPoint*, !dbg !22568
  store %struct.BPoint* %169, %struct.BPoint** %bp1, align 8, !dbg !22569
  %170 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !22570
  %171 = bitcast %struct.BPoint* %170 to i8*, !dbg !22571
  %172 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22572
  %bp178 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %172, i32 0, i32 17, !dbg !22573
  %173 = load %struct.BPoint*, %struct.BPoint** %bp178, align 8, !dbg !22573
  %174 = bitcast %struct.BPoint* %173 to i8*, !dbg !22571
  %175 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22574
  %pntsu179 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %175, i32 0, i32 6, !dbg !22575
  %176 = load i32, i32* %pntsu179, align 8, !dbg !22575
  %conv180 = sext i32 %176 to i64, !dbg !22576
  %mul181 = mul i64 %conv180, 36, !dbg !22577
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %171, i8* align 4 %174, i64 %mul181, i1 false), !dbg !22571
  %177 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !22578
  %178 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22579
  %bp182 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %178, i32 0, i32 17, !dbg !22580
  %179 = load %struct.BPoint*, %struct.BPoint** %bp182, align 8, !dbg !22580
  %180 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !22581
  %181 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22582
  %pntsu183 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %181, i32 0, i32 6, !dbg !22583
  %182 = load i32, i32* %pntsu183, align 8, !dbg !22583
  call void @keyIndex_updateBP(%struct.EditNurb* %177, %struct.BPoint* %179, %struct.BPoint* %180, i32 %182), !dbg !22584
  %183 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !22585
  %184 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22586
  %bp184 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %184, i32 0, i32 17, !dbg !22587
  %185 = load %struct.BPoint*, %struct.BPoint** %bp184, align 8, !dbg !22587
  %186 = bitcast %struct.BPoint* %185 to i8*, !dbg !22586
  call void %183(i8* %186), !dbg !22585
  %187 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !22588
  %188 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22589
  %bp185 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %188, i32 0, i32 17, !dbg !22590
  store %struct.BPoint* %187, %struct.BPoint** %bp185, align 8, !dbg !22591
  br label %if.end186, !dbg !22592

if.end186:                                        ; preds = %if.then173, %for.end171
  %189 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22593
  %call187 = call zeroext i8 @BKE_nurb_order_clamp_u(%struct.Nurb* %189), !dbg !22594
  %190 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !22595
  call void @BKE_nurb_knot_calc_u(%struct.Nurb* %190), !dbg !22596
  br label %if.end188, !dbg !22597

if.end188:                                        ; preds = %if.end186, %if.else137
  br label %if.end189

if.end189:                                        ; preds = %if.end188, %if.end136
  %191 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !22598
  store %struct.Nurb* %191, %struct.Nurb** %nu, align 8, !dbg !22599
  br label %while.cond70, !dbg !22394, !llvm.loop !22600

while.end190:                                     ; preds = %while.cond70
  ret void, !dbg !22602
}

; Function Attrs: noinline nounwind uwtable
define internal void @keyIndex_delBP(%struct.EditNurb* %editnurb, %struct.BPoint* %bp) #0 !dbg !22603 {
entry:
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %bp.addr = alloca %struct.BPoint*, align 8
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !22606, metadata !DIExpression()), !dbg !22607
  store %struct.BPoint* %bp, %struct.BPoint** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp.addr, metadata !22608, metadata !DIExpression()), !dbg !22609
  %0 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !22610
  %1 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !22611
  %2 = bitcast %struct.BPoint* %1 to i8*, !dbg !22611
  call void @keyIndex_delCV(%struct.EditNurb* %0, i8* %2), !dbg !22612
  ret void, !dbg !22613
}

; Function Attrs: noinline nounwind uwtable
define internal void @keyIndex_delCV(%struct.EditNurb* %editnurb, i8* %cv) #0 !dbg !22614 {
entry:
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %cv.addr = alloca i8*, align 8
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !22617, metadata !DIExpression()), !dbg !22618
  store i8* %cv, i8** %cv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cv.addr, metadata !22619, metadata !DIExpression()), !dbg !22620
  %0 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !22621
  %keyindex = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %0, i32 0, i32 1, !dbg !22623
  %1 = load %struct.GHash*, %struct.GHash** %keyindex, align 8, !dbg !22623
  %tobool = icmp ne %struct.GHash* %1, null, !dbg !22621
  br i1 %tobool, label %if.end, label %if.then, !dbg !22624

if.then:                                          ; preds = %entry
  br label %return, !dbg !22625

if.end:                                           ; preds = %entry
  %2 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !22627
  %keyindex1 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %2, i32 0, i32 1, !dbg !22628
  %3 = load %struct.GHash*, %struct.GHash** %keyindex1, align 8, !dbg !22628
  %4 = load i8*, i8** %cv.addr, align 8, !dbg !22629
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !22630
  %call = call zeroext i8 @BLI_ghash_remove(%struct.GHash* %3, i8* %4, void (i8*)* null, void (i8*)* %5), !dbg !22631
  br label %return, !dbg !22632

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !22632
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @keyIndex_delBezt(%struct.EditNurb* %editnurb, %struct.BezTriple* %bezt) #0 !dbg !22633 {
entry:
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %bezt.addr = alloca %struct.BezTriple*, align 8
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !22636, metadata !DIExpression()), !dbg !22637
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !22638, metadata !DIExpression()), !dbg !22639
  %0 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !22640
  %1 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !22641
  %2 = bitcast %struct.BezTriple* %1 to i8*, !dbg !22641
  call void @keyIndex_delCV(%struct.EditNurb* %0, i8* %2), !dbg !22642
  ret void, !dbg !22643
}

declare dso_local void @RNA_enum_items_add_value(%struct.EnumPropertyItem**, i32*, %struct.EnumPropertyItem*, i32) #2

declare dso_local void @RNA_enum_item_end(%struct.EnumPropertyItem**, i32*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #4

declare dso_local void @BLI_ghash_free(%struct.GHash*, void (i8*)*, void (i8*)*) #2

declare dso_local void @free_fcurves(%struct.ListBase*) #2

declare dso_local %struct.ListBase* @BKE_curve_editNurbs_get(%struct.Curve*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.GHash* @dupli_keyIndexHash(%struct.GHash* %keyindex) #0 !dbg !22644 {
entry:
  %keyindex.addr = alloca %struct.GHash*, align 8
  %gh = alloca %struct.GHash*, align 8
  %hashIter = alloca %struct.GHashIterator*, align 8
  %cv = alloca i8*, align 8
  %index = alloca %struct.CVKeyIndex*, align 8
  %newIndex = alloca %struct.CVKeyIndex*, align 8
  store %struct.GHash* %keyindex, %struct.GHash** %keyindex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHash** %keyindex.addr, metadata !22647, metadata !DIExpression()), !dbg !22648
  call void @llvm.dbg.declare(metadata %struct.GHash** %gh, metadata !22649, metadata !DIExpression()), !dbg !22650
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %hashIter, metadata !22651, metadata !DIExpression()), !dbg !22661
  %0 = load %struct.GHash*, %struct.GHash** %keyindex.addr, align 8, !dbg !22662
  %call = call i32 @BLI_ghash_size(%struct.GHash* %0), !dbg !22663
  %call1 = call %struct.GHash* @BLI_ghash_ptr_new_ex(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.230, i64 0, i64 0), i32 %call), !dbg !22664
  store %struct.GHash* %call1, %struct.GHash** %gh, align 8, !dbg !22665
  %1 = load %struct.GHash*, %struct.GHash** %keyindex.addr, align 8, !dbg !22666
  %call2 = call %struct.GHashIterator* @BLI_ghashIterator_new(%struct.GHash* %1), !dbg !22668
  store %struct.GHashIterator* %call2, %struct.GHashIterator** %hashIter, align 8, !dbg !22669
  br label %for.cond, !dbg !22670

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.GHashIterator*, %struct.GHashIterator** %hashIter, align 8, !dbg !22671
  %call3 = call zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %2), !dbg !22673
  %conv = zext i8 %call3 to i32, !dbg !22673
  %cmp = icmp eq i32 %conv, 0, !dbg !22674
  br i1 %cmp, label %for.body, label %for.end, !dbg !22675

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %cv, metadata !22676, metadata !DIExpression()), !dbg !22678
  %3 = load %struct.GHashIterator*, %struct.GHashIterator** %hashIter, align 8, !dbg !22679
  %call5 = call i8* @BLI_ghashIterator_getKey(%struct.GHashIterator* %3), !dbg !22680
  store i8* %call5, i8** %cv, align 8, !dbg !22678
  call void @llvm.dbg.declare(metadata %struct.CVKeyIndex** %index, metadata !22681, metadata !DIExpression()), !dbg !22682
  %4 = load %struct.GHashIterator*, %struct.GHashIterator** %hashIter, align 8, !dbg !22683
  %call6 = call i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %4), !dbg !22684
  %5 = bitcast i8* %call6 to %struct.CVKeyIndex*, !dbg !22684
  store %struct.CVKeyIndex* %5, %struct.CVKeyIndex** %index, align 8, !dbg !22682
  call void @llvm.dbg.declare(metadata %struct.CVKeyIndex** %newIndex, metadata !22685, metadata !DIExpression()), !dbg !22686
  %6 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !22687
  %call7 = call i8* %6(i64 40, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.231, i64 0, i64 0)), !dbg !22687
  %7 = bitcast i8* %call7 to %struct.CVKeyIndex*, !dbg !22687
  store %struct.CVKeyIndex* %7, %struct.CVKeyIndex** %newIndex, align 8, !dbg !22686
  %8 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %newIndex, align 8, !dbg !22688
  %9 = bitcast %struct.CVKeyIndex* %8 to i8*, !dbg !22689
  %10 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index, align 8, !dbg !22690
  %11 = bitcast %struct.CVKeyIndex* %10 to i8*, !dbg !22689
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %11, i64 40, i1 false), !dbg !22689
  %12 = load %struct.GHash*, %struct.GHash** %gh, align 8, !dbg !22691
  %13 = load i8*, i8** %cv, align 8, !dbg !22692
  %14 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %newIndex, align 8, !dbg !22693
  %15 = bitcast %struct.CVKeyIndex* %14 to i8*, !dbg !22693
  call void @BLI_ghash_insert(%struct.GHash* %12, i8* %13, i8* %15), !dbg !22694
  br label %for.inc, !dbg !22695

for.inc:                                          ; preds = %for.body
  %16 = load %struct.GHashIterator*, %struct.GHashIterator** %hashIter, align 8, !dbg !22696
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %16), !dbg !22697
  br label %for.cond, !dbg !22698, !llvm.loop !22699

for.end:                                          ; preds = %for.cond
  %17 = load %struct.GHashIterator*, %struct.GHashIterator** %hashIter, align 8, !dbg !22701
  call void @BLI_ghashIterator_free(%struct.GHashIterator* %17), !dbg !22702
  %18 = load %struct.GHash*, %struct.GHash** %gh, align 8, !dbg !22703
  ret %struct.GHash* %18, !dbg !22704
}

declare dso_local void @copy_fcurves(%struct.ListBase*, %struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @keyIndex_updateNurb(%struct.EditNurb* %editnurb, %struct.Nurb* %nu, %struct.Nurb* %newnu) #0 !dbg !22705 {
entry:
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %nu.addr = alloca %struct.Nurb*, align 8
  %newnu.addr = alloca %struct.Nurb*, align 8
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !22708, metadata !DIExpression()), !dbg !22709
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !22710, metadata !DIExpression()), !dbg !22711
  store %struct.Nurb* %newnu, %struct.Nurb** %newnu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %newnu.addr, metadata !22712, metadata !DIExpression()), !dbg !22713
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !22714
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %0, i32 0, i32 18, !dbg !22716
  %1 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !22716
  %tobool = icmp ne %struct.BezTriple* %1, null, !dbg !22714
  br i1 %tobool, label %if.then, label %if.else, !dbg !22717

if.then:                                          ; preds = %entry
  %2 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !22718
  %3 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !22720
  %bezt1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %3, i32 0, i32 18, !dbg !22721
  %4 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !22721
  %5 = load %struct.Nurb*, %struct.Nurb** %newnu.addr, align 8, !dbg !22722
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %5, i32 0, i32 18, !dbg !22723
  %6 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !22723
  %7 = load %struct.Nurb*, %struct.Nurb** %newnu.addr, align 8, !dbg !22724
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %7, i32 0, i32 6, !dbg !22725
  %8 = load i32, i32* %pntsu, align 8, !dbg !22725
  call void @keyIndex_updateBezt(%struct.EditNurb* %2, %struct.BezTriple* %4, %struct.BezTriple* %6, i32 %8), !dbg !22726
  br label %if.end, !dbg !22727

if.else:                                          ; preds = %entry
  %9 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !22728
  %10 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !22730
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 17, !dbg !22731
  %11 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !22731
  %12 = load %struct.Nurb*, %struct.Nurb** %newnu.addr, align 8, !dbg !22732
  %bp3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 17, !dbg !22733
  %13 = load %struct.BPoint*, %struct.BPoint** %bp3, align 8, !dbg !22733
  %14 = load %struct.Nurb*, %struct.Nurb** %newnu.addr, align 8, !dbg !22734
  %pntsu4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 6, !dbg !22735
  %15 = load i32, i32* %pntsu4, align 8, !dbg !22735
  %16 = load %struct.Nurb*, %struct.Nurb** %newnu.addr, align 8, !dbg !22736
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %16, i32 0, i32 7, !dbg !22737
  %17 = load i32, i32* %pntsv, align 4, !dbg !22737
  %mul = mul nsw i32 %15, %17, !dbg !22738
  call void @keyIndex_updateBP(%struct.EditNurb* %9, %struct.BPoint* %11, %struct.BPoint* %13, i32 %mul), !dbg !22739
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !22740
}

declare dso_local %struct.GHash* @BLI_ghash_ptr_new_ex(i8*, i32) #2

declare dso_local i32 @BLI_ghash_size(%struct.GHash*) #2

declare dso_local %struct.GHashIterator* @BLI_ghashIterator_new(%struct.GHash*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %ghi) #0 !dbg !22741 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !22744, metadata !DIExpression()), !dbg !22745
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !22746
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !22747
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !22747
  %tobool = icmp ne %struct.Entry* %1, null, !dbg !22748
  %lnot = xor i1 %tobool, true, !dbg !22748
  %lnot.ext = zext i1 %lnot to i32, !dbg !22748
  %conv = trunc i32 %lnot.ext to i8, !dbg !22748
  ret i8 %conv, !dbg !22749
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BLI_ghashIterator_getKey(%struct.GHashIterator* %ghi) #0 !dbg !22750 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !22753, metadata !DIExpression()), !dbg !22754
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !22755
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !22756
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !22756
  %2 = bitcast %struct.Entry* %1 to %struct._gh_Entry*, !dbg !22757
  %key = getelementptr inbounds %struct._gh_Entry, %struct._gh_Entry* %2, i32 0, i32 1, !dbg !22757
  %3 = load i8*, i8** %key, align 8, !dbg !22757
  ret i8* %3, !dbg !22758
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %ghi) #0 !dbg !22759 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !22760, metadata !DIExpression()), !dbg !22761
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !22762
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !22763
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !22763
  %2 = bitcast %struct.Entry* %1 to %struct._gh_Entry*, !dbg !22764
  %val = getelementptr inbounds %struct._gh_Entry, %struct._gh_Entry* %2, i32 0, i32 2, !dbg !22764
  %3 = load i8*, i8** %val, align 8, !dbg !22764
  ret i8* %3, !dbg !22765
}

declare dso_local void @BLI_ghashIterator_step(%struct.GHashIterator*) #2

declare dso_local void @BLI_ghashIterator_free(%struct.GHashIterator*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @keyIndex_updateCV(%struct.EditNurb* %editnurb, i8* %cv, i8* %newcv, i32 %count, i32 %size) #0 !dbg !22766 {
entry:
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  %cv.addr = alloca i8*, align 8
  %newcv.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %index = alloca %struct.CVKeyIndex*, align 8
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !22769, metadata !DIExpression()), !dbg !22770
  store i8* %cv, i8** %cv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cv.addr, metadata !22771, metadata !DIExpression()), !dbg !22772
  store i8* %newcv, i8** %newcv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %newcv.addr, metadata !22773, metadata !DIExpression()), !dbg !22774
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !22775, metadata !DIExpression()), !dbg !22776
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !22777, metadata !DIExpression()), !dbg !22778
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22779, metadata !DIExpression()), !dbg !22780
  call void @llvm.dbg.declare(metadata %struct.CVKeyIndex** %index, metadata !22781, metadata !DIExpression()), !dbg !22782
  %0 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !22783
  %keyindex = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %0, i32 0, i32 1, !dbg !22785
  %1 = load %struct.GHash*, %struct.GHash** %keyindex, align 8, !dbg !22785
  %cmp = icmp eq %struct.GHash* %1, null, !dbg !22786
  br i1 %cmp, label %if.then, label %if.end, !dbg !22787

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !22788

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !22790
  br label %for.cond, !dbg !22792

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !22793
  %3 = load i32, i32* %count.addr, align 4, !dbg !22795
  %cmp1 = icmp slt i32 %2, %3, !dbg !22796
  br i1 %cmp1, label %for.body, label %for.end, !dbg !22797

for.body:                                         ; preds = %for.cond
  %4 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !22798
  %5 = load i8*, i8** %cv.addr, align 8, !dbg !22800
  %call = call %struct.CVKeyIndex* @popCVKeyIndex(%struct.EditNurb* %4, i8* %5), !dbg !22801
  store %struct.CVKeyIndex* %call, %struct.CVKeyIndex** %index, align 8, !dbg !22802
  %6 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index, align 8, !dbg !22803
  %tobool = icmp ne %struct.CVKeyIndex* %6, null, !dbg !22803
  br i1 %tobool, label %if.then2, label %if.end4, !dbg !22805

if.then2:                                         ; preds = %for.body
  %7 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !22806
  %keyindex3 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %7, i32 0, i32 1, !dbg !22808
  %8 = load %struct.GHash*, %struct.GHash** %keyindex3, align 8, !dbg !22808
  %9 = load i8*, i8** %newcv.addr, align 8, !dbg !22809
  %10 = load %struct.CVKeyIndex*, %struct.CVKeyIndex** %index, align 8, !dbg !22810
  %11 = bitcast %struct.CVKeyIndex* %10 to i8*, !dbg !22810
  call void @BLI_ghash_insert(%struct.GHash* %8, i8* %9, i8* %11), !dbg !22811
  br label %if.end4, !dbg !22812

if.end4:                                          ; preds = %if.then2, %for.body
  %12 = load i32, i32* %size.addr, align 4, !dbg !22813
  %13 = load i8*, i8** %newcv.addr, align 8, !dbg !22814
  %idx.ext = sext i32 %12 to i64, !dbg !22814
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 %idx.ext, !dbg !22814
  store i8* %add.ptr, i8** %newcv.addr, align 8, !dbg !22814
  %14 = load i32, i32* %size.addr, align 4, !dbg !22815
  %15 = load i8*, i8** %cv.addr, align 8, !dbg !22816
  %idx.ext5 = sext i32 %14 to i64, !dbg !22816
  %add.ptr6 = getelementptr inbounds i8, i8* %15, i64 %idx.ext5, !dbg !22816
  store i8* %add.ptr6, i8** %cv.addr, align 8, !dbg !22816
  br label %for.inc, !dbg !22817

for.inc:                                          ; preds = %if.end4
  %16 = load i32, i32* %i, align 4, !dbg !22818
  %inc = add nsw i32 %16, 1, !dbg !22818
  store i32 %inc, i32* %i, align 4, !dbg !22818
  br label %for.cond, !dbg !22819, !llvm.loop !22820

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !22822
}

declare dso_local void @BKE_displist_make_curveTypes(%struct.Scene*, %struct.Object*, i8 zeroext) #2

declare dso_local void @BKE_displist_minmax(%struct.ListBase*, float*, float*) #2

declare dso_local void @mid_v3_v3v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !22823 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !22826, metadata !DIExpression()), !dbg !22827
  %0 = load float*, float** %r.addr, align 8, !dbg !22828
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !22828
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !22829
  %1 = load float*, float** %r.addr, align 8, !dbg !22830
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !22830
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !22831
  %2 = load float*, float** %r.addr, align 8, !dbg !22832
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !22832
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !22833
  ret void, !dbg !22834
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly }
attributes #8 = { nounwind readnone }
attributes #9 = { nounwind }

!llvm.dbg.cu = !{!1881}
!llvm.module.flags = !{!3235, !3236, !3237}
!llvm.ident = !{!3238}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "type_items", scope: !2, file: !3, line: 3942, type: !3234, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "CURVE_OT_spline_type_set", scope: !3, file: !3, line: 3940, type: !4, scopeLine: 3941, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!3 = !DIFile(filename: "blender/source/blender/editors/curve/editcurve.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{null, !6}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !8, line: 568, baseType: !9)
!8 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !8, line: 508, size: 1536, elements: !10)
!10 = !{!11, !15, !16, !17, !18, !1807, !1811, !1817, !1821, !1822, !1826, !1827, !1828, !1829, !1833, !1834, !1849, !1850, !1854, !1880}
!11 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9, file: !8, line: 509, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14)
!14 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !9, file: !8, line: 510, baseType: !12, size: 64, offset: 64)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !9, file: !8, line: 511, baseType: !12, size: 64, offset: 128)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !9, file: !8, line: 512, baseType: !12, size: 64, offset: 192)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !9, file: !8, line: 518, baseType: !19, size: 64, offset: 256)
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64)
!20 = !DISubroutineType(types: !21)
!21 = !{!22, !23, !26}
!22 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!24 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !25, line: 44, flags: DIFlagFwdDecl)
!25 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!27 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !28, line: 328, size: 1344, elements: !29)
!28 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!29 = !{!30, !31, !32, !36, !68, !70, !71, !72, !84, !1800, !1801, !1802, !1805, !1806}
!30 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !27, file: !28, line: 329, baseType: !26, size: 64)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !27, file: !28, line: 329, baseType: !26, size: 64, offset: 64)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !27, file: !28, line: 332, baseType: !33, size: 512, offset: 128)
!33 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 512, elements: !34)
!34 = !{!35}
!35 = !DISubrange(count: 64)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !27, file: !28, line: 333, baseType: !37, size: 64, offset: 640)
!37 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !39, line: 75, baseType: !40)
!39 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!40 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !39, line: 62, size: 1024, elements: !41)
!41 = !{!42, !44, !45, !46, !47, !49, !50, !51, !66, !67}
!42 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !40, file: !39, line: 63, baseType: !43, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !40, file: !39, line: 63, baseType: !43, size: 64, offset: 64)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !40, file: !39, line: 64, baseType: !14, size: 8, offset: 128)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !40, file: !39, line: 64, baseType: !14, size: 8, offset: 136)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !40, file: !39, line: 65, baseType: !48, size: 16, offset: 144)
!48 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !40, file: !39, line: 66, baseType: !33, size: 512, offset: 160)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !40, file: !39, line: 67, baseType: !22, size: 32, offset: 672)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !40, file: !39, line: 69, baseType: !52, size: 256, offset: 704)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !39, line: 60, baseType: !53)
!53 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !39, line: 48, size: 256, elements: !54)
!54 = !{!55, !57, !64, !65}
!55 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !53, file: !39, line: 49, baseType: !56, size: 64)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !53, file: !39, line: 58, baseType: !58, size: 128, offset: 64)
!58 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !59, line: 71, baseType: !60)
!59 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!60 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !59, line: 69, size: 128, elements: !61)
!61 = !{!62, !63}
!62 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !60, file: !59, line: 70, baseType: !56, size: 64)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !60, file: !59, line: 70, baseType: !56, size: 64, offset: 64)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !53, file: !39, line: 59, baseType: !22, size: 32, offset: 192)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !53, file: !39, line: 59, baseType: !22, size: 32, offset: 224)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !40, file: !39, line: 70, baseType: !22, size: 32, offset: 960)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !40, file: !39, line: 74, baseType: !22, size: 32, offset: 992)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !27, file: !28, line: 336, baseType: !69, size: 64, offset: 704)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !27, file: !28, line: 337, baseType: !56, size: 64, offset: 768)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !27, file: !28, line: 338, baseType: !56, size: 64, offset: 832)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !27, file: !28, line: 340, baseType: !73, size: 64, offset: 896)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!74 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !25, line: 55, size: 192, elements: !75)
!75 = !{!76, !80, !83}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !74, file: !25, line: 58, baseType: !77, size: 64)
!77 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !74, file: !25, line: 56, size: 64, elements: !78)
!78 = !{!79}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !77, file: !25, line: 57, baseType: !56, size: 64)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !74, file: !25, line: 60, baseType: !81, size: 64, offset: 64)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!82 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !25, line: 41, flags: DIFlagFwdDecl)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !74, file: !25, line: 61, baseType: !56, size: 64, offset: 128)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !27, file: !28, line: 341, baseType: !85, size: 64, offset: 960)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64)
!86 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !28, line: 106, size: 320, elements: !87)
!87 = !{!88, !89, !90, !91, !92, !93}
!88 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !86, file: !28, line: 107, baseType: !58, size: 128)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !86, file: !28, line: 108, baseType: !22, size: 32, offset: 128)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !86, file: !28, line: 109, baseType: !22, size: 32, offset: 160)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !86, file: !28, line: 110, baseType: !22, size: 32, offset: 192)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !86, file: !28, line: 110, baseType: !22, size: 32, offset: 224)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !86, file: !28, line: 111, baseType: !94, size: 64, offset: 256)
!94 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64)
!95 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !8, line: 490, size: 768, elements: !96)
!96 = !{!97, !98, !99, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799}
!97 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !95, file: !8, line: 491, baseType: !94, size: 64)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !95, file: !8, line: 491, baseType: !94, size: 64, offset: 64)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !95, file: !8, line: 493, baseType: !100, size: 64, offset: 128)
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64)
!101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !28, line: 169, size: 2048, elements: !102)
!102 = !{!103, !104, !105, !106, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1766, !1769, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790}
!103 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !101, file: !28, line: 170, baseType: !100, size: 64)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !101, file: !28, line: 170, baseType: !100, size: 64, offset: 64)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !101, file: !28, line: 172, baseType: !56, size: 64, offset: 128)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !101, file: !28, line: 174, baseType: !107, size: 64, offset: 192)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !109, line: 49, size: 1984, elements: !110)
!109 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!110 = !{!111, !147, !148, !149, !150, !151, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !108, file: !109, line: 50, baseType: !112, size: 960)
!112 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !39, line: 130, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !39, line: 117, size: 960, elements: !114)
!114 = !{!115, !116, !117, !119, !138, !142, !143, !144, !145, !146}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !113, file: !39, line: 118, baseType: !56, size: 64)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !113, file: !39, line: 118, baseType: !56, size: 64, offset: 64)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !113, file: !39, line: 119, baseType: !118, size: 64, offset: 128)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !113, file: !39, line: 120, baseType: !120, size: 64, offset: 192)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !39, line: 136, size: 17600, elements: !122)
!122 = !{!123, !124, !126, !129, !133, !134, !135}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !121, file: !39, line: 137, baseType: !112, size: 960)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !121, file: !39, line: 138, baseType: !125, size: 64, offset: 960)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 64)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !121, file: !39, line: 139, baseType: !127, size: 64, offset: 1024)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64)
!128 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !39, line: 43, flags: DIFlagFwdDecl)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !121, file: !39, line: 140, baseType: !130, size: 8192, offset: 1088)
!130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 8192, elements: !131)
!131 = !{!132}
!132 = !DISubrange(count: 1024)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !121, file: !39, line: 141, baseType: !130, size: 8192, offset: 9280)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !121, file: !39, line: 148, baseType: !120, size: 64, offset: 17472)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !121, file: !39, line: 150, baseType: !136, size: 64, offset: 17536)
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64)
!137 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !39, line: 45, flags: DIFlagFwdDecl)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !113, file: !39, line: 121, baseType: !139, size: 528, offset: 256)
!139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 528, elements: !140)
!140 = !{!141}
!141 = !DISubrange(count: 66)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !113, file: !39, line: 126, baseType: !48, size: 16, offset: 784)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !113, file: !39, line: 127, baseType: !22, size: 32, offset: 800)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !113, file: !39, line: 128, baseType: !22, size: 32, offset: 832)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !113, file: !39, line: 128, baseType: !22, size: 32, offset: 864)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !113, file: !39, line: 129, baseType: !37, size: 64, offset: 896)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !108, file: !109, line: 52, baseType: !58, size: 128, offset: 960)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !108, file: !109, line: 53, baseType: !58, size: 128, offset: 1088)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !108, file: !109, line: 54, baseType: !58, size: 128, offset: 1216)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !108, file: !109, line: 55, baseType: !58, size: 128, offset: 1344)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !108, file: !109, line: 57, baseType: !152, size: 64, offset: 1472)
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 64)
!153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !154, line: 1216, size: 39680, elements: !155)
!154 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!155 = !{!156, !157, !228, !529, !532, !533, !534, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !560, !631, !1059, !1274, !1277, !1566, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1588, !1589, !1590, !1591, !1592, !1600, !1667, !1674, !1675, !1682, !1683, !1684, !1685, !1686, !1687, !1688}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !153, file: !154, line: 1217, baseType: !112, size: 960)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !153, file: !154, line: 1218, baseType: !158, size: 64, offset: 960)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !160, line: 838, size: 768, elements: !161)
!160 = !DIFile(filename: "blender/source/blender/makesdna/DNA_anim_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!161 = !{!162, !177, !178, !188, !189, !221, !222, !223, !224, !225, !226, !227}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !159, file: !160, line: 840, baseType: !163, size: 64)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAction", file: !165, line: 499, baseType: !166)
!165 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !165, line: 486, size: 1600, elements: !167)
!167 = !{!168, !169, !170, !171, !172, !173, !174, !175, !176}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !166, file: !165, line: 487, baseType: !112, size: 960)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !166, file: !165, line: 489, baseType: !58, size: 128, offset: 960)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !166, file: !165, line: 490, baseType: !58, size: 128, offset: 1088)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !166, file: !165, line: 491, baseType: !58, size: 128, offset: 1216)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !166, file: !165, line: 492, baseType: !58, size: 128, offset: 1344)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !166, file: !165, line: 494, baseType: !22, size: 32, offset: 1472)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !166, file: !165, line: 495, baseType: !22, size: 32, offset: 1504)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !166, file: !165, line: 497, baseType: !22, size: 32, offset: 1536)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !166, file: !165, line: 498, baseType: !22, size: 32, offset: 1568)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "tmpact", scope: !159, file: !160, line: 844, baseType: !163, size: 64, offset: 64)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !159, file: !160, line: 848, baseType: !179, size: 64, offset: 128)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimMapper", file: !160, line: 549, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimMapper", file: !160, line: 544, size: 320, elements: !182)
!182 = !{!183, !185, !186, !187}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !181, file: !160, line: 545, baseType: !184, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !181, file: !160, line: 545, baseType: !184, size: 64, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !181, file: !160, line: 547, baseType: !163, size: 64, offset: 128)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "mappings", scope: !181, file: !160, line: 548, baseType: !58, size: 128, offset: 192)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tracks", scope: !159, file: !160, line: 851, baseType: !58, size: 128, offset: 192)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "actstrip", scope: !159, file: !160, line: 853, baseType: !190, size: 64, offset: 320)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaStrip", file: !160, line: 594, baseType: !192)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaStrip", file: !160, line: 561, size: 1664, elements: !193)
!193 = !{!194, !196, !197, !198, !199, !200, !201, !202, !203, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !192, file: !160, line: 562, baseType: !195, size: 64)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !192, file: !160, line: 562, baseType: !195, size: 64, offset: 64)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "strips", scope: !192, file: !160, line: 564, baseType: !58, size: 128, offset: 128)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "act", scope: !192, file: !160, line: 565, baseType: !163, size: 64, offset: 256)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !192, file: !160, line: 566, baseType: !179, size: 64, offset: 320)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "fcurves", scope: !192, file: !160, line: 568, baseType: !58, size: 128, offset: 384)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !192, file: !160, line: 569, baseType: !58, size: 128, offset: 512)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !192, file: !160, line: 571, baseType: !33, size: 512, offset: 640)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !192, file: !160, line: 573, baseType: !204, size: 32, offset: 1152)
!204 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "strip_time", scope: !192, file: !160, line: 574, baseType: !204, size: 32, offset: 1184)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !192, file: !160, line: 576, baseType: !204, size: 32, offset: 1216)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !192, file: !160, line: 576, baseType: !204, size: 32, offset: 1248)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "actstart", scope: !192, file: !160, line: 577, baseType: !204, size: 32, offset: 1280)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "actend", scope: !192, file: !160, line: 577, baseType: !204, size: 32, offset: 1312)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !192, file: !160, line: 579, baseType: !204, size: 32, offset: 1344)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !192, file: !160, line: 580, baseType: !204, size: 32, offset: 1376)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "blendin", scope: !192, file: !160, line: 582, baseType: !204, size: 32, offset: 1408)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "blendout", scope: !192, file: !160, line: 582, baseType: !204, size: 32, offset: 1440)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "blendmode", scope: !192, file: !160, line: 583, baseType: !48, size: 16, offset: 1472)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "extendmode", scope: !192, file: !160, line: 585, baseType: !48, size: 16, offset: 1488)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !192, file: !160, line: 586, baseType: !48, size: 16, offset: 1504)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !192, file: !160, line: 588, baseType: !48, size: 16, offset: 1520)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handle", scope: !192, file: !160, line: 590, baseType: !56, size: 64, offset: 1536)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !192, file: !160, line: 592, baseType: !22, size: 32, offset: 1600)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !192, file: !160, line: 593, baseType: !22, size: 32, offset: 1632)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "drivers", scope: !159, file: !160, line: 858, baseType: !58, size: 128, offset: 384)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "overrides", scope: !159, file: !160, line: 859, baseType: !58, size: 128, offset: 512)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !159, file: !160, line: 862, baseType: !22, size: 32, offset: 640)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !159, file: !160, line: 863, baseType: !22, size: 32, offset: 672)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "act_blendmode", scope: !159, file: !160, line: 866, baseType: !48, size: 16, offset: 704)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "act_extendmode", scope: !159, file: !160, line: 867, baseType: !48, size: 16, offset: 720)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "act_influence", scope: !159, file: !160, line: 868, baseType: !204, size: 32, offset: 736)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !153, file: !154, line: 1220, baseType: !229, size: 64, offset: 1024)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !231, line: 115, size: 11392, elements: !232)
!231 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!232 = !{!233, !234, !235, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !253, !264, !266, !267, !311, !312, !315, !316, !332, !333, !334, !335, !336, !337, !338, !342, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !358, !359, !360, !361, !362, !363, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !423, !424, !425, !426, !427, !428, !429, !430, !431, !434, !437, !440, !441, !442, !443, !444, !447, !470, !473, !474, !480, !481, !482, !483, !484, !485, !487, !490, !493, !497, !517, !518}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !230, file: !231, line: 116, baseType: !112, size: 960)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !230, file: !231, line: 117, baseType: !158, size: 64, offset: 960)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !230, file: !231, line: 119, baseType: !236, size: 64, offset: 1024)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 64)
!237 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !231, line: 57, flags: DIFlagFwdDecl)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !230, file: !231, line: 121, baseType: !48, size: 16, offset: 1088)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !230, file: !231, line: 121, baseType: !48, size: 16, offset: 1104)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !230, file: !231, line: 122, baseType: !22, size: 32, offset: 1120)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !230, file: !231, line: 122, baseType: !22, size: 32, offset: 1152)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !230, file: !231, line: 122, baseType: !22, size: 32, offset: 1184)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !230, file: !231, line: 123, baseType: !33, size: 512, offset: 1216)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !230, file: !231, line: 124, baseType: !229, size: 64, offset: 1728)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !230, file: !231, line: 124, baseType: !229, size: 64, offset: 1792)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !230, file: !231, line: 127, baseType: !229, size: 64, offset: 1856)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !230, file: !231, line: 127, baseType: !229, size: 64, offset: 1920)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !230, file: !231, line: 127, baseType: !229, size: 64, offset: 1984)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !230, file: !231, line: 128, baseType: !250, size: 64, offset: 2048)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!251 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !252, line: 43, flags: DIFlagFwdDecl)
!252 = !DIFile(filename: "blender/source/blender/makesdna/DNA_key_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!253 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !230, file: !231, line: 130, baseType: !254, size: 64, offset: 2112)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 64)
!255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !231, line: 97, size: 832, elements: !256)
!256 = !{!257, !262, !263}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !255, file: !231, line: 98, baseType: !258, size: 768)
!258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 768, elements: !259)
!259 = !{!260, !261}
!260 = !DISubrange(count: 8)
!261 = !DISubrange(count: 3)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !255, file: !231, line: 99, baseType: !22, size: 32, offset: 768)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !255, file: !231, line: 99, baseType: !22, size: 32, offset: 800)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !230, file: !231, line: 131, baseType: !265, size: 64, offset: 2176)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 64)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !230, file: !231, line: 132, baseType: !265, size: 64, offset: 2240)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !230, file: !231, line: 133, baseType: !268, size: 64, offset: 2304)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !165, line: 334, size: 1728, elements: !270)
!270 = !{!271, !272, !275, !276, !277, !279, !280, !281, !284, !285, !286, !287, !288, !289, !290, !310}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !269, file: !165, line: 335, baseType: !58, size: 128)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !269, file: !165, line: 336, baseType: !273, size: 64, offset: 128)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64)
!274 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !165, line: 47, flags: DIFlagFwdDecl)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !269, file: !165, line: 338, baseType: !48, size: 16, offset: 192)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !269, file: !165, line: 338, baseType: !48, size: 16, offset: 208)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !269, file: !165, line: 339, baseType: !278, size: 32, offset: 224)
!278 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !269, file: !165, line: 340, baseType: !22, size: 32, offset: 256)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !269, file: !165, line: 342, baseType: !204, size: 32, offset: 288)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !269, file: !165, line: 343, baseType: !282, size: 96, offset: 320)
!282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 96, elements: !283)
!283 = !{!261}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !269, file: !165, line: 344, baseType: !282, size: 96, offset: 416)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !269, file: !165, line: 347, baseType: !58, size: 128, offset: 512)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !269, file: !165, line: 349, baseType: !22, size: 32, offset: 640)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !269, file: !165, line: 350, baseType: !22, size: 32, offset: 672)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !269, file: !165, line: 351, baseType: !56, size: 64, offset: 704)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !269, file: !165, line: 352, baseType: !56, size: 64, offset: 768)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !269, file: !165, line: 354, baseType: !291, size: 384, offset: 832)
!291 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !165, line: 116, baseType: !292)
!292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !165, line: 94, size: 384, elements: !293)
!293 = !{!294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !292, file: !165, line: 96, baseType: !22, size: 32)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !292, file: !165, line: 96, baseType: !22, size: 32, offset: 32)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !292, file: !165, line: 97, baseType: !22, size: 32, offset: 64)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !292, file: !165, line: 97, baseType: !22, size: 32, offset: 96)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !292, file: !165, line: 99, baseType: !48, size: 16, offset: 128)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !292, file: !165, line: 100, baseType: !48, size: 16, offset: 144)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !292, file: !165, line: 102, baseType: !48, size: 16, offset: 160)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !292, file: !165, line: 105, baseType: !48, size: 16, offset: 176)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !292, file: !165, line: 108, baseType: !48, size: 16, offset: 192)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !292, file: !165, line: 109, baseType: !48, size: 16, offset: 208)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !292, file: !165, line: 111, baseType: !48, size: 16, offset: 224)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !292, file: !165, line: 112, baseType: !48, size: 16, offset: 240)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !292, file: !165, line: 114, baseType: !22, size: 32, offset: 256)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !292, file: !165, line: 114, baseType: !22, size: 32, offset: 288)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !292, file: !165, line: 115, baseType: !22, size: 32, offset: 320)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !292, file: !165, line: 115, baseType: !22, size: 32, offset: 352)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !269, file: !165, line: 355, baseType: !33, size: 512, offset: 1216)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !230, file: !231, line: 134, baseType: !56, size: 64, offset: 2368)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !230, file: !231, line: 136, baseType: !313, size: 64, offset: 2432)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!314 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !231, line: 58, flags: DIFlagFwdDecl)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !230, file: !231, line: 138, baseType: !291, size: 384, offset: 2496)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !230, file: !231, line: 139, baseType: !317, size: 64, offset: 2880)
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !165, line: 80, baseType: !319)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !165, line: 72, size: 192, elements: !320)
!320 = !{!321, !328, !329, !330, !331}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !319, file: !165, line: 73, baseType: !322, size: 64)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !165, line: 59, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !165, line: 56, size: 128, elements: !325)
!325 = !{!326, !327}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !324, file: !165, line: 57, baseType: !282, size: 96)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !324, file: !165, line: 58, baseType: !22, size: 32, offset: 96)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !319, file: !165, line: 74, baseType: !22, size: 32, offset: 64)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !319, file: !165, line: 76, baseType: !22, size: 32, offset: 96)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !319, file: !165, line: 77, baseType: !22, size: 32, offset: 128)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !319, file: !165, line: 79, baseType: !22, size: 32, offset: 160)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !230, file: !231, line: 141, baseType: !58, size: 128, offset: 2944)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !230, file: !231, line: 142, baseType: !58, size: 128, offset: 3072)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !230, file: !231, line: 143, baseType: !58, size: 128, offset: 3200)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !230, file: !231, line: 144, baseType: !58, size: 128, offset: 3328)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !230, file: !231, line: 146, baseType: !22, size: 32, offset: 3456)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !230, file: !231, line: 147, baseType: !22, size: 32, offset: 3488)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !230, file: !231, line: 150, baseType: !339, size: 64, offset: 3520)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!341 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !231, line: 50, flags: DIFlagFwdDecl)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !230, file: !231, line: 151, baseType: !343, size: 64, offset: 3584)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !230, file: !231, line: 152, baseType: !22, size: 32, offset: 3648)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !230, file: !231, line: 153, baseType: !22, size: 32, offset: 3680)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !230, file: !231, line: 156, baseType: !282, size: 96, offset: 3712)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !230, file: !231, line: 156, baseType: !282, size: 96, offset: 3808)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !230, file: !231, line: 156, baseType: !282, size: 96, offset: 3904)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !230, file: !231, line: 157, baseType: !282, size: 96, offset: 4000)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !230, file: !231, line: 158, baseType: !282, size: 96, offset: 4096)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !230, file: !231, line: 159, baseType: !282, size: 96, offset: 4192)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !230, file: !231, line: 160, baseType: !282, size: 96, offset: 4288)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !230, file: !231, line: 160, baseType: !282, size: 96, offset: 4384)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !230, file: !231, line: 161, baseType: !355, size: 128, offset: 4480)
!355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 128, elements: !356)
!356 = !{!357}
!357 = !DISubrange(count: 4)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !230, file: !231, line: 161, baseType: !355, size: 128, offset: 4608)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !230, file: !231, line: 162, baseType: !282, size: 96, offset: 4736)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !230, file: !231, line: 162, baseType: !282, size: 96, offset: 4832)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !230, file: !231, line: 163, baseType: !204, size: 32, offset: 4928)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !230, file: !231, line: 163, baseType: !204, size: 32, offset: 4960)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !230, file: !231, line: 164, baseType: !364, size: 512, offset: 4992)
!364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 512, elements: !365)
!365 = !{!357, !357}
!366 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !230, file: !231, line: 165, baseType: !364, size: 512, offset: 5504)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !230, file: !231, line: 166, baseType: !364, size: 512, offset: 6016)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !230, file: !231, line: 167, baseType: !364, size: 512, offset: 6528)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !230, file: !231, line: 176, baseType: !364, size: 512, offset: 7040)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !230, file: !231, line: 178, baseType: !278, size: 32, offset: 7552)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !230, file: !231, line: 180, baseType: !48, size: 16, offset: 7584)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !230, file: !231, line: 181, baseType: !48, size: 16, offset: 7600)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !230, file: !231, line: 183, baseType: !48, size: 16, offset: 7616)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !230, file: !231, line: 183, baseType: !48, size: 16, offset: 7632)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !230, file: !231, line: 184, baseType: !48, size: 16, offset: 7648)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !230, file: !231, line: 184, baseType: !48, size: 16, offset: 7664)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !230, file: !231, line: 185, baseType: !48, size: 16, offset: 7680)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !230, file: !231, line: 186, baseType: !48, size: 16, offset: 7696)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !230, file: !231, line: 187, baseType: !48, size: 16, offset: 7712)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !230, file: !231, line: 188, baseType: !14, size: 8, offset: 7728)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !230, file: !231, line: 189, baseType: !14, size: 8, offset: 7736)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !230, file: !231, line: 192, baseType: !22, size: 32, offset: 7744)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !230, file: !231, line: 192, baseType: !22, size: 32, offset: 7776)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !230, file: !231, line: 192, baseType: !22, size: 32, offset: 7808)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !230, file: !231, line: 192, baseType: !22, size: 32, offset: 7840)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !230, file: !231, line: 194, baseType: !22, size: 32, offset: 7872)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !230, file: !231, line: 202, baseType: !204, size: 32, offset: 7904)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !230, file: !231, line: 202, baseType: !204, size: 32, offset: 7936)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !230, file: !231, line: 202, baseType: !204, size: 32, offset: 7968)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !230, file: !231, line: 211, baseType: !204, size: 32, offset: 8000)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !230, file: !231, line: 212, baseType: !204, size: 32, offset: 8032)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !230, file: !231, line: 213, baseType: !204, size: 32, offset: 8064)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !230, file: !231, line: 214, baseType: !204, size: 32, offset: 8096)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !230, file: !231, line: 215, baseType: !204, size: 32, offset: 8128)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !230, file: !231, line: 216, baseType: !204, size: 32, offset: 8160)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !230, file: !231, line: 219, baseType: !204, size: 32, offset: 8192)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !230, file: !231, line: 220, baseType: !204, size: 32, offset: 8224)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !230, file: !231, line: 221, baseType: !204, size: 32, offset: 8256)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !230, file: !231, line: 224, baseType: !400, size: 16, offset: 8288)
!400 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !230, file: !231, line: 224, baseType: !400, size: 16, offset: 8304)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !230, file: !231, line: 226, baseType: !48, size: 16, offset: 8320)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !230, file: !231, line: 228, baseType: !14, size: 8, offset: 8336)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !230, file: !231, line: 229, baseType: !14, size: 8, offset: 8344)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !230, file: !231, line: 231, baseType: !48, size: 16, offset: 8352)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !230, file: !231, line: 232, baseType: !14, size: 8, offset: 8368)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !230, file: !231, line: 233, baseType: !14, size: 8, offset: 8376)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !230, file: !231, line: 234, baseType: !204, size: 32, offset: 8384)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !230, file: !231, line: 235, baseType: !204, size: 32, offset: 8416)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !230, file: !231, line: 237, baseType: !58, size: 128, offset: 8448)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !230, file: !231, line: 238, baseType: !58, size: 128, offset: 8576)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !230, file: !231, line: 239, baseType: !58, size: 128, offset: 8704)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !230, file: !231, line: 240, baseType: !58, size: 128, offset: 8832)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !230, file: !231, line: 242, baseType: !204, size: 32, offset: 8960)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !230, file: !231, line: 244, baseType: !48, size: 16, offset: 8992)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !230, file: !231, line: 245, baseType: !400, size: 16, offset: 9008)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !230, file: !231, line: 246, baseType: !355, size: 128, offset: 9024)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !230, file: !231, line: 248, baseType: !22, size: 32, offset: 9152)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !230, file: !231, line: 249, baseType: !22, size: 32, offset: 9184)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !230, file: !231, line: 251, baseType: !421, size: 64, offset: 9216)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!422 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !231, line: 251, flags: DIFlagFwdDecl)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !230, file: !231, line: 253, baseType: !14, size: 8, offset: 9280)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !230, file: !231, line: 254, baseType: !14, size: 8, offset: 9288)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !230, file: !231, line: 255, baseType: !48, size: 16, offset: 9296)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !230, file: !231, line: 256, baseType: !282, size: 96, offset: 9312)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !230, file: !231, line: 258, baseType: !58, size: 128, offset: 9408)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !230, file: !231, line: 259, baseType: !58, size: 128, offset: 9536)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !230, file: !231, line: 260, baseType: !58, size: 128, offset: 9664)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !230, file: !231, line: 261, baseType: !58, size: 128, offset: 9792)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !230, file: !231, line: 263, baseType: !432, size: 64, offset: 9920)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!433 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !231, line: 52, flags: DIFlagFwdDecl)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !230, file: !231, line: 264, baseType: !435, size: 64, offset: 9984)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!436 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !231, line: 53, flags: DIFlagFwdDecl)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !230, file: !231, line: 265, baseType: !438, size: 64, offset: 10048)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 64)
!439 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !165, line: 46, flags: DIFlagFwdDecl)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !230, file: !231, line: 267, baseType: !14, size: 8, offset: 10112)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !230, file: !231, line: 268, baseType: !14, size: 8, offset: 10120)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !230, file: !231, line: 269, baseType: !48, size: 16, offset: 10128)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !230, file: !231, line: 270, baseType: !204, size: 32, offset: 10144)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !230, file: !231, line: 272, baseType: !445, size: 64, offset: 10176)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !231, line: 54, flags: DIFlagFwdDecl)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !230, file: !231, line: 275, baseType: !448, size: 64, offset: 10240)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !450, line: 49, size: 448, elements: !451)
!450 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_curve.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!451 = !{!452, !453, !454, !455}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !449, file: !450, line: 50, baseType: !58, size: 128)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "bev", scope: !449, file: !450, line: 51, baseType: !58, size: 128, offset: 128)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "deformed_nurbs", scope: !449, file: !450, line: 52, baseType: !58, size: 128, offset: 256)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !449, file: !450, line: 53, baseType: !456, size: 64, offset: 384)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Path", file: !458, line: 65, size: 128, elements: !459)
!458 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!459 = !{!460, !468, !469}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !457, file: !458, line: 66, baseType: !461, size: 64)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PathPoint", file: !458, line: 56, size: 320, elements: !463)
!463 = !{!464, !465, !466, !467}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !462, file: !458, line: 57, baseType: !355, size: 128)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !462, file: !458, line: 58, baseType: !355, size: 128, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !462, file: !458, line: 59, baseType: !204, size: 32, offset: 256)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !462, file: !458, line: 59, baseType: !204, size: 32, offset: 288)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !457, file: !458, line: 67, baseType: !22, size: 32, offset: 64)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "totdist", scope: !457, file: !458, line: 68, baseType: !204, size: 32, offset: 96)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !230, file: !231, line: 277, baseType: !471, size: 64, offset: 10304)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !231, line: 56, flags: DIFlagFwdDecl)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !230, file: !231, line: 277, baseType: !471, size: 64, offset: 10368)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !230, file: !231, line: 278, baseType: !475, size: 64, offset: 10432)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !476, line: 27, baseType: !477)
!476 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!477 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !478, line: 45, baseType: !479)
!478 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!479 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !230, file: !231, line: 279, baseType: !475, size: 64, offset: 10496)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !230, file: !231, line: 280, baseType: !278, size: 32, offset: 10560)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !230, file: !231, line: 281, baseType: !278, size: 32, offset: 10592)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !230, file: !231, line: 283, baseType: !58, size: 128, offset: 10624)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !230, file: !231, line: 284, baseType: !58, size: 128, offset: 10752)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !230, file: !231, line: 285, baseType: !486, size: 64, offset: 10880)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !230, file: !231, line: 287, baseType: !488, size: 64, offset: 10944)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!489 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !231, line: 59, flags: DIFlagFwdDecl)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !230, file: !231, line: 288, baseType: !491, size: 64, offset: 11008)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!492 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !231, line: 288, flags: DIFlagFwdDecl)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !230, file: !231, line: 290, baseType: !494, size: 64, offset: 11072)
!494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 64, elements: !495)
!495 = !{!496}
!496 = !DISubrange(count: 2)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !230, file: !231, line: 291, baseType: !498, size: 64, offset: 11136)
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 64)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !500, line: 65, baseType: !501)
!500 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !500, line: 50, size: 320, elements: !502)
!502 = !{!503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !501, file: !500, line: 51, baseType: !152, size: 64)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !501, file: !500, line: 53, baseType: !22, size: 32, offset: 64)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !501, file: !500, line: 54, baseType: !22, size: 32, offset: 96)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !501, file: !500, line: 55, baseType: !22, size: 32, offset: 128)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !501, file: !500, line: 55, baseType: !22, size: 32, offset: 160)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !501, file: !500, line: 56, baseType: !14, size: 8, offset: 192)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !501, file: !500, line: 56, baseType: !14, size: 8, offset: 200)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !501, file: !500, line: 57, baseType: !14, size: 8, offset: 208)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !501, file: !500, line: 57, baseType: !14, size: 8, offset: 216)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !501, file: !500, line: 59, baseType: !48, size: 16, offset: 224)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !501, file: !500, line: 59, baseType: !48, size: 16, offset: 240)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !501, file: !500, line: 59, baseType: !48, size: 16, offset: 256)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !501, file: !500, line: 61, baseType: !48, size: 16, offset: 272)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !501, file: !500, line: 63, baseType: !22, size: 32, offset: 288)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !230, file: !231, line: 293, baseType: !58, size: 128, offset: 11200)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !230, file: !231, line: 294, baseType: !519, size: 64, offset: 11328)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !231, line: 113, baseType: !521)
!521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !231, line: 108, size: 256, elements: !522)
!522 = !{!523, !525, !526, !527, !528}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !521, file: !231, line: 109, baseType: !524, size: 64)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !521, file: !231, line: 109, baseType: !524, size: 64, offset: 64)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !521, file: !231, line: 110, baseType: !229, size: 64, offset: 128)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !521, file: !231, line: 111, baseType: !22, size: 32, offset: 192)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !521, file: !231, line: 112, baseType: !204, size: 32, offset: 224)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !153, file: !154, line: 1221, baseType: !530, size: 64, offset: 1088)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !154, line: 52, flags: DIFlagFwdDecl)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !153, file: !154, line: 1223, baseType: !152, size: 64, offset: 1152)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !153, file: !154, line: 1225, baseType: !58, size: 128, offset: 1216)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !153, file: !154, line: 1226, baseType: !535, size: 64, offset: 1344)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64)
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !154, line: 69, size: 320, elements: !537)
!537 = !{!538, !539, !540, !541, !542, !543, !544, !545}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !536, file: !154, line: 70, baseType: !535, size: 64)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !536, file: !154, line: 70, baseType: !535, size: 64, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !536, file: !154, line: 71, baseType: !278, size: 32, offset: 128)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !536, file: !154, line: 71, baseType: !278, size: 32, offset: 160)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !536, file: !154, line: 72, baseType: !22, size: 32, offset: 192)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !536, file: !154, line: 73, baseType: !48, size: 16, offset: 224)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !536, file: !154, line: 73, baseType: !48, size: 16, offset: 240)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !536, file: !154, line: 74, baseType: !229, size: 64, offset: 256)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !153, file: !154, line: 1227, baseType: !229, size: 64, offset: 1408)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !153, file: !154, line: 1229, baseType: !282, size: 96, offset: 1472)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !153, file: !154, line: 1230, baseType: !282, size: 96, offset: 1568)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !153, file: !154, line: 1231, baseType: !282, size: 96, offset: 1664)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !153, file: !154, line: 1231, baseType: !282, size: 96, offset: 1760)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !153, file: !154, line: 1233, baseType: !278, size: 32, offset: 1856)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !153, file: !154, line: 1234, baseType: !22, size: 32, offset: 1888)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !153, file: !154, line: 1235, baseType: !278, size: 32, offset: 1920)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !153, file: !154, line: 1237, baseType: !48, size: 16, offset: 1952)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !153, file: !154, line: 1239, baseType: !14, size: 8, offset: 1968)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !153, file: !154, line: 1240, baseType: !557, size: 8, offset: 1976)
!557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 8, elements: !558)
!558 = !{!559}
!559 = !DISubrange(count: 1)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !153, file: !154, line: 1242, baseType: !561, size: 64, offset: 1984)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !563, line: 328, size: 3456, elements: !564)
!563 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!564 = !{!565, !566, !567, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !597, !598, !599, !602, !607, !608, !611, !615, !619, !623, !627, !628, !629, !630}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !562, file: !563, line: 329, baseType: !112, size: 960)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !562, file: !563, line: 330, baseType: !158, size: 64, offset: 960)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !562, file: !563, line: 332, baseType: !568, size: 64, offset: 1024)
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!569 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !563, line: 332, flags: DIFlagFwdDecl)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !562, file: !563, line: 333, baseType: !33, size: 512, offset: 1088)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !562, file: !563, line: 335, baseType: !81, size: 64, offset: 1600)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !562, file: !563, line: 337, baseType: !313, size: 64, offset: 1664)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !562, file: !563, line: 338, baseType: !494, size: 64, offset: 1728)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !562, file: !563, line: 340, baseType: !58, size: 128, offset: 1792)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !562, file: !563, line: 340, baseType: !58, size: 128, offset: 1920)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !562, file: !563, line: 342, baseType: !22, size: 32, offset: 2048)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !562, file: !563, line: 342, baseType: !22, size: 32, offset: 2080)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !562, file: !563, line: 343, baseType: !22, size: 32, offset: 2112)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !562, file: !563, line: 345, baseType: !22, size: 32, offset: 2144)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !562, file: !563, line: 346, baseType: !22, size: 32, offset: 2176)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !562, file: !563, line: 347, baseType: !48, size: 16, offset: 2208)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !562, file: !563, line: 348, baseType: !48, size: 16, offset: 2224)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !562, file: !563, line: 349, baseType: !22, size: 32, offset: 2240)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !562, file: !563, line: 351, baseType: !22, size: 32, offset: 2272)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !562, file: !563, line: 353, baseType: !48, size: 16, offset: 2304)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !562, file: !563, line: 354, baseType: !48, size: 16, offset: 2320)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !562, file: !563, line: 355, baseType: !22, size: 32, offset: 2336)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !562, file: !563, line: 357, baseType: !589, size: 128, offset: 2368)
!589 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !590, line: 95, baseType: !591)
!590 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !590, line: 92, size: 128, elements: !592)
!592 = !{!593, !594, !595, !596}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !591, file: !590, line: 93, baseType: !204, size: 32)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !591, file: !590, line: 93, baseType: !204, size: 32, offset: 32)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !591, file: !590, line: 94, baseType: !204, size: 32, offset: 64)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !591, file: !590, line: 94, baseType: !204, size: 32, offset: 96)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !562, file: !563, line: 363, baseType: !58, size: 128, offset: 2496)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !562, file: !563, line: 363, baseType: !58, size: 128, offset: 2624)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !562, file: !563, line: 368, baseType: !600, size: 64, offset: 2752)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!601 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !563, line: 48, flags: DIFlagFwdDecl)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !562, file: !563, line: 372, baseType: !603, size: 32, offset: 2816)
!603 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !563, line: 274, baseType: !604)
!604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !563, line: 271, size: 32, elements: !605)
!605 = !{!606}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !604, file: !563, line: 273, baseType: !278, size: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !562, file: !563, line: 373, baseType: !22, size: 32, offset: 2848)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !562, file: !563, line: 382, baseType: !609, size: 64, offset: 2880)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !563, line: 46, flags: DIFlagFwdDecl)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !562, file: !563, line: 385, baseType: !612, size: 64, offset: 2944)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = !DISubroutineType(types: !614)
!614 = !{null, !56, !204}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !562, file: !563, line: 386, baseType: !616, size: 64, offset: 3008)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = !DISubroutineType(types: !618)
!618 = !{null, !56, !343}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !562, file: !563, line: 387, baseType: !620, size: 64, offset: 3072)
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!621 = !DISubroutineType(types: !622)
!622 = !{!22, !56}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !562, file: !563, line: 388, baseType: !624, size: 64, offset: 3136)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = !DISubroutineType(types: !626)
!626 = !{null, !56}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !562, file: !563, line: 389, baseType: !56, size: 64, offset: 3200)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !562, file: !563, line: 389, baseType: !56, size: 64, offset: 3264)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !562, file: !563, line: 389, baseType: !56, size: 64, offset: 3328)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !562, file: !563, line: 389, baseType: !56, size: 64, offset: 3392)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !153, file: !154, line: 1244, baseType: !632, size: 64, offset: 2048)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !634, line: 200, size: 17024, elements: !635)
!634 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!635 = !{!636, !637, !638, !639, !1052, !1053, !1054, !1055, !1056, !1057, !1058}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !633, file: !634, line: 201, baseType: !486, size: 64)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !633, file: !634, line: 202, baseType: !58, size: 128, offset: 64)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !633, file: !634, line: 203, baseType: !58, size: 128, offset: 192)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !633, file: !634, line: 206, baseType: !640, size: 64, offset: 320)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !634, line: 190, baseType: !642)
!642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !634, line: 126, size: 2816, elements: !643)
!643 = !{!644, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !742, !743, !744, !745, !1023, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1051}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !642, file: !634, line: 127, baseType: !645, size: 64)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !642, file: !634, line: 127, baseType: !645, size: 64, offset: 64)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !642, file: !634, line: 128, baseType: !56, size: 64, offset: 128)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !642, file: !634, line: 129, baseType: !56, size: 64, offset: 192)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !642, file: !634, line: 130, baseType: !33, size: 512, offset: 256)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !642, file: !634, line: 132, baseType: !22, size: 32, offset: 768)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !642, file: !634, line: 132, baseType: !22, size: 32, offset: 800)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !642, file: !634, line: 133, baseType: !22, size: 32, offset: 832)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !642, file: !634, line: 134, baseType: !22, size: 32, offset: 864)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !642, file: !634, line: 134, baseType: !22, size: 32, offset: 896)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !642, file: !634, line: 134, baseType: !22, size: 32, offset: 928)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !642, file: !634, line: 135, baseType: !22, size: 32, offset: 960)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !642, file: !634, line: 135, baseType: !22, size: 32, offset: 992)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !642, file: !634, line: 136, baseType: !22, size: 32, offset: 1024)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !642, file: !634, line: 136, baseType: !22, size: 32, offset: 1056)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !642, file: !634, line: 137, baseType: !22, size: 32, offset: 1088)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !642, file: !634, line: 137, baseType: !22, size: 32, offset: 1120)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !642, file: !634, line: 138, baseType: !204, size: 32, offset: 1152)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !642, file: !634, line: 139, baseType: !204, size: 32, offset: 1184)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !642, file: !634, line: 139, baseType: !204, size: 32, offset: 1216)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !642, file: !634, line: 141, baseType: !48, size: 16, offset: 1248)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !642, file: !634, line: 142, baseType: !48, size: 16, offset: 1264)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !642, file: !634, line: 143, baseType: !22, size: 32, offset: 1280)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !642, file: !634, line: 144, baseType: !22, size: 32, offset: 1312)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !642, file: !634, line: 146, baseType: !670, size: 64, offset: 1344)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !634, line: 114, baseType: !672)
!672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !634, line: 99, size: 7232, elements: !673)
!673 = !{!674, !676, !677, !678, !679, !680, !681, !692, !696, !710, !719, !726, !736}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !672, file: !634, line: 100, baseType: !675, size: 64)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !672, file: !634, line: 100, baseType: !675, size: 64, offset: 64)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !672, file: !634, line: 101, baseType: !22, size: 32, offset: 128)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !672, file: !634, line: 101, baseType: !22, size: 32, offset: 160)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !672, file: !634, line: 102, baseType: !22, size: 32, offset: 192)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !672, file: !634, line: 102, baseType: !22, size: 32, offset: 224)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !672, file: !634, line: 103, baseType: !682, size: 64, offset: 256)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !634, line: 59, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !634, line: 56, size: 2112, elements: !685)
!685 = !{!686, !690, !691}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !684, file: !634, line: 57, baseType: !687, size: 2048)
!687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 2048, elements: !688)
!688 = !{!689}
!689 = !DISubrange(count: 256)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !684, file: !634, line: 58, baseType: !22, size: 32, offset: 2048)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !684, file: !634, line: 58, baseType: !22, size: 32, offset: 2080)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !672, file: !634, line: 106, baseType: !693, size: 6144, offset: 320)
!693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 6144, elements: !694)
!694 = !{!695}
!695 = !DISubrange(count: 768)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !672, file: !634, line: 107, baseType: !697, size: 64, offset: 6464)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !634, line: 97, baseType: !699)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !634, line: 83, size: 8320, elements: !700)
!700 = !{!701, !702, !703, !706, !707, !708, !709}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !699, file: !634, line: 84, baseType: !693, size: 6144)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !699, file: !634, line: 87, baseType: !687, size: 2048, offset: 6144)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !699, file: !634, line: 88, baseType: !704, size: 64, offset: 8192)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !500, line: 41, flags: DIFlagFwdDecl)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !699, file: !634, line: 90, baseType: !48, size: 16, offset: 8256)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !699, file: !634, line: 92, baseType: !48, size: 16, offset: 8272)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !699, file: !634, line: 93, baseType: !48, size: 16, offset: 8288)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !699, file: !634, line: 95, baseType: !48, size: 16, offset: 8304)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !672, file: !634, line: 108, baseType: !711, size: 64, offset: 6528)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !634, line: 66, baseType: !713)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !634, line: 61, size: 128, elements: !714)
!714 = !{!715, !716, !717, !718}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !713, file: !634, line: 62, baseType: !22, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !713, file: !634, line: 63, baseType: !22, size: 32, offset: 32)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !713, file: !634, line: 64, baseType: !22, size: 32, offset: 64)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !713, file: !634, line: 65, baseType: !22, size: 32, offset: 96)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !672, file: !634, line: 109, baseType: !720, size: 64, offset: 6592)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !634, line: 71, baseType: !722)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !634, line: 68, size: 64, elements: !723)
!723 = !{!724, !725}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !722, file: !634, line: 69, baseType: !22, size: 32)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !722, file: !634, line: 70, baseType: !22, size: 32, offset: 32)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !672, file: !634, line: 110, baseType: !727, size: 64, offset: 6656)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !634, line: 81, baseType: !729)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !634, line: 73, size: 352, elements: !730)
!730 = !{!731, !732, !733, !734, !735}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !729, file: !634, line: 74, baseType: !282, size: 96)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !729, file: !634, line: 75, baseType: !282, size: 96, offset: 96)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !729, file: !634, line: 76, baseType: !282, size: 96, offset: 192)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !729, file: !634, line: 77, baseType: !22, size: 32, offset: 288)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !729, file: !634, line: 78, baseType: !22, size: 32, offset: 320)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !672, file: !634, line: 113, baseType: !737, size: 512, offset: 6720)
!737 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !738, line: 182, baseType: !739)
!738 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !738, line: 180, size: 512, elements: !740)
!740 = !{!741}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !739, file: !738, line: 181, baseType: !33, size: 512)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !642, file: !634, line: 148, baseType: !250, size: 64, offset: 1408)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !642, file: !634, line: 151, baseType: !152, size: 64, offset: 1472)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !642, file: !634, line: 152, baseType: !229, size: 64, offset: 1536)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !642, file: !634, line: 153, baseType: !746, size: 64, offset: 1600)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !748, line: 64, size: 19136, elements: !749)
!748 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!749 = !{!750, !751, !752, !753, !754, !755, !757, !758, !759, !760, !763, !764, !1009, !1010, !1018, !1019, !1020, !1021, !1022}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !747, file: !748, line: 65, baseType: !112, size: 960)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !747, file: !748, line: 66, baseType: !158, size: 64, offset: 960)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !747, file: !748, line: 68, baseType: !130, size: 8192, offset: 1024)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !747, file: !748, line: 70, baseType: !22, size: 32, offset: 9216)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !747, file: !748, line: 71, baseType: !22, size: 32, offset: 9248)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !747, file: !748, line: 72, baseType: !756, size: 64, offset: 9280)
!756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 64, elements: !495)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !747, file: !748, line: 74, baseType: !204, size: 32, offset: 9344)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !747, file: !748, line: 74, baseType: !204, size: 32, offset: 9376)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !747, file: !748, line: 76, baseType: !704, size: 64, offset: 9408)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !747, file: !748, line: 77, baseType: !761, size: 64, offset: 9472)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !748, line: 77, flags: DIFlagFwdDecl)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !747, file: !748, line: 78, baseType: !313, size: 64, offset: 9536)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !747, file: !748, line: 80, baseType: !765, size: 2624, offset: 9600)
!765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !766, line: 340, size: 2624, elements: !767)
!766 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!767 = !{!768, !796, !814, !815, !816, !831, !889, !890, !989, !990, !991, !992, !998}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !765, file: !766, line: 341, baseType: !769, size: 576)
!769 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !766, line: 251, baseType: !770)
!770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !766, line: 207, size: 576, elements: !771)
!771 = !{!772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !770, file: !766, line: 208, baseType: !22, size: 32)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !770, file: !766, line: 211, baseType: !48, size: 16, offset: 32)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !770, file: !766, line: 212, baseType: !48, size: 16, offset: 48)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !770, file: !766, line: 213, baseType: !204, size: 32, offset: 64)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !770, file: !766, line: 214, baseType: !48, size: 16, offset: 96)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !770, file: !766, line: 215, baseType: !48, size: 16, offset: 112)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !770, file: !766, line: 216, baseType: !48, size: 16, offset: 128)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !770, file: !766, line: 217, baseType: !48, size: 16, offset: 144)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !770, file: !766, line: 218, baseType: !48, size: 16, offset: 160)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !770, file: !766, line: 219, baseType: !48, size: 16, offset: 176)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !770, file: !766, line: 220, baseType: !204, size: 32, offset: 192)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !770, file: !766, line: 222, baseType: !48, size: 16, offset: 224)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !770, file: !766, line: 225, baseType: !48, size: 16, offset: 240)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !770, file: !766, line: 228, baseType: !22, size: 32, offset: 256)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !770, file: !766, line: 229, baseType: !22, size: 32, offset: 288)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !770, file: !766, line: 233, baseType: !22, size: 32, offset: 320)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !770, file: !766, line: 236, baseType: !48, size: 16, offset: 352)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !770, file: !766, line: 236, baseType: !48, size: 16, offset: 368)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !770, file: !766, line: 241, baseType: !204, size: 32, offset: 384)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !770, file: !766, line: 244, baseType: !22, size: 32, offset: 416)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !770, file: !766, line: 244, baseType: !22, size: 32, offset: 448)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !770, file: !766, line: 245, baseType: !204, size: 32, offset: 480)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !770, file: !766, line: 248, baseType: !204, size: 32, offset: 512)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !770, file: !766, line: 250, baseType: !22, size: 32, offset: 544)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !765, file: !766, line: 342, baseType: !797, size: 448, offset: 576)
!797 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !766, line: 79, baseType: !798)
!798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !766, line: 61, size: 448, elements: !799)
!799 = !{!800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !798, file: !766, line: 62, baseType: !56, size: 64)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !798, file: !766, line: 64, baseType: !48, size: 16, offset: 64)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !798, file: !766, line: 65, baseType: !48, size: 16, offset: 80)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !798, file: !766, line: 67, baseType: !204, size: 32, offset: 96)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !798, file: !766, line: 68, baseType: !204, size: 32, offset: 128)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !798, file: !766, line: 69, baseType: !204, size: 32, offset: 160)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !798, file: !766, line: 70, baseType: !48, size: 16, offset: 192)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !798, file: !766, line: 71, baseType: !48, size: 16, offset: 208)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !798, file: !766, line: 72, baseType: !494, size: 64, offset: 224)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !798, file: !766, line: 75, baseType: !204, size: 32, offset: 288)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !798, file: !766, line: 75, baseType: !204, size: 32, offset: 320)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !798, file: !766, line: 75, baseType: !204, size: 32, offset: 352)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !798, file: !766, line: 78, baseType: !204, size: 32, offset: 384)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !798, file: !766, line: 78, baseType: !204, size: 32, offset: 416)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !765, file: !766, line: 343, baseType: !58, size: 128, offset: 1024)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !765, file: !766, line: 344, baseType: !58, size: 128, offset: 1152)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !765, file: !766, line: 345, baseType: !817, size: 192, offset: 1280)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !766, line: 278, baseType: !818)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !766, line: 270, size: 192, elements: !819)
!819 = !{!820, !821, !822, !823, !824}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !818, file: !766, line: 271, baseType: !22, size: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !818, file: !766, line: 273, baseType: !204, size: 32, offset: 32)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !818, file: !766, line: 275, baseType: !22, size: 32, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !818, file: !766, line: 276, baseType: !22, size: 32, offset: 96)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !818, file: !766, line: 277, baseType: !825, size: 64, offset: 128)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !766, line: 55, size: 576, elements: !827)
!827 = !{!828, !829, !830}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !826, file: !766, line: 56, baseType: !22, size: 32)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !826, file: !766, line: 57, baseType: !204, size: 32, offset: 32)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !826, file: !766, line: 58, baseType: !364, size: 512, offset: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !765, file: !766, line: 346, baseType: !832, size: 384, offset: 1472)
!832 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !766, line: 268, baseType: !833)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !766, line: 253, size: 384, elements: !834)
!834 = !{!835, !836, !837, !838, !839, !883, !884, !885, !886, !887, !888}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !833, file: !766, line: 254, baseType: !22, size: 32)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !833, file: !766, line: 255, baseType: !22, size: 32, offset: 32)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !833, file: !766, line: 255, baseType: !22, size: 32, offset: 64)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !833, file: !766, line: 258, baseType: !204, size: 32, offset: 96)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !833, file: !766, line: 259, baseType: !840, size: 64, offset: 128)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !766, line: 164, baseType: !842)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !766, line: 108, size: 1664, elements: !843)
!843 = !{!844, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !842, file: !766, line: 109, baseType: !845, size: 64)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !842, file: !766, line: 109, baseType: !845, size: 64, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !842, file: !766, line: 111, baseType: !33, size: 512, offset: 128)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !842, file: !766, line: 119, baseType: !494, size: 64, offset: 640)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !842, file: !766, line: 119, baseType: !494, size: 64, offset: 704)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !842, file: !766, line: 125, baseType: !494, size: 64, offset: 768)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !842, file: !766, line: 125, baseType: !494, size: 64, offset: 832)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !842, file: !766, line: 127, baseType: !494, size: 64, offset: 896)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !842, file: !766, line: 130, baseType: !22, size: 32, offset: 960)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !842, file: !766, line: 131, baseType: !22, size: 32, offset: 992)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !842, file: !766, line: 132, baseType: !856, size: 64, offset: 1024)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !766, line: 106, baseType: !858)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !766, line: 81, size: 512, elements: !859)
!859 = !{!860, !861, !864, !865, !866, !867}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !858, file: !766, line: 82, baseType: !494, size: 64)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !858, file: !766, line: 97, baseType: !862, size: 256, offset: 64)
!862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 256, elements: !863)
!863 = !{!357, !496}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !858, file: !766, line: 102, baseType: !494, size: 64, offset: 320)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !858, file: !766, line: 102, baseType: !494, size: 64, offset: 384)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !858, file: !766, line: 104, baseType: !22, size: 32, offset: 448)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !858, file: !766, line: 105, baseType: !22, size: 32, offset: 480)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !842, file: !766, line: 135, baseType: !282, size: 96, offset: 1088)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !842, file: !766, line: 136, baseType: !204, size: 32, offset: 1184)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !842, file: !766, line: 139, baseType: !22, size: 32, offset: 1216)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !842, file: !766, line: 139, baseType: !22, size: 32, offset: 1248)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !842, file: !766, line: 139, baseType: !22, size: 32, offset: 1280)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !842, file: !766, line: 140, baseType: !282, size: 96, offset: 1312)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !842, file: !766, line: 143, baseType: !48, size: 16, offset: 1408)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !842, file: !766, line: 144, baseType: !48, size: 16, offset: 1424)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !842, file: !766, line: 145, baseType: !48, size: 16, offset: 1440)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !842, file: !766, line: 148, baseType: !48, size: 16, offset: 1456)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !842, file: !766, line: 149, baseType: !22, size: 32, offset: 1472)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !842, file: !766, line: 150, baseType: !204, size: 32, offset: 1504)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !842, file: !766, line: 152, baseType: !313, size: 64, offset: 1536)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !842, file: !766, line: 163, baseType: !204, size: 32, offset: 1600)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !842, file: !766, line: 163, baseType: !204, size: 32, offset: 1632)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !833, file: !766, line: 261, baseType: !204, size: 32, offset: 192)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !833, file: !766, line: 261, baseType: !204, size: 32, offset: 224)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !833, file: !766, line: 261, baseType: !204, size: 32, offset: 256)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !833, file: !766, line: 263, baseType: !22, size: 32, offset: 288)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !833, file: !766, line: 266, baseType: !22, size: 32, offset: 320)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !833, file: !766, line: 267, baseType: !204, size: 32, offset: 352)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !765, file: !766, line: 347, baseType: !840, size: 64, offset: 1856)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !765, file: !766, line: 348, baseType: !891, size: 64, offset: 1920)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !766, line: 205, baseType: !893)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !766, line: 186, size: 1024, elements: !894)
!894 = !{!895, !897, !898, !899, !901, !902, !903, !911, !912, !913, !987, !988}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !893, file: !766, line: 187, baseType: !896, size: 64)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !893, file: !766, line: 187, baseType: !896, size: 64, offset: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !893, file: !766, line: 189, baseType: !33, size: 512, offset: 128)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !893, file: !766, line: 191, baseType: !900, size: 64, offset: 640)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !893, file: !766, line: 193, baseType: !22, size: 32, offset: 704)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !893, file: !766, line: 193, baseType: !22, size: 32, offset: 736)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !893, file: !766, line: 195, baseType: !904, size: 64, offset: 768)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !766, line: 184, baseType: !906)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !766, line: 166, size: 320, elements: !907)
!907 = !{!908, !909, !910}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !906, file: !766, line: 180, baseType: !862, size: 256)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !906, file: !766, line: 182, baseType: !22, size: 32, offset: 256)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !906, file: !766, line: 183, baseType: !22, size: 32, offset: 288)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !893, file: !766, line: 196, baseType: !22, size: 32, offset: 832)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !893, file: !766, line: 198, baseType: !22, size: 32, offset: 864)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !893, file: !766, line: 200, baseType: !914, size: 64, offset: 896)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !500, line: 77, size: 15424, elements: !916)
!916 = !{!917, !918, !919, !922, !925, !926, !929, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !948, !949, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !981}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !915, file: !500, line: 78, baseType: !112, size: 960)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !915, file: !500, line: 80, baseType: !130, size: 8192, offset: 960)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !915, file: !500, line: 82, baseType: !920, size: 64, offset: 9152)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !500, line: 43, flags: DIFlagFwdDecl)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !915, file: !500, line: 83, baseType: !923, size: 64, offset: 9216)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !39, line: 46, flags: DIFlagFwdDecl)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !915, file: !500, line: 86, baseType: !704, size: 64, offset: 9280)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !915, file: !500, line: 87, baseType: !927, size: 64, offset: 9344)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !500, line: 44, flags: DIFlagFwdDecl)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !915, file: !500, line: 89, baseType: !930, size: 512, offset: 9408)
!930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !927, size: 512, elements: !931)
!931 = !{!260}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !915, file: !500, line: 90, baseType: !48, size: 16, offset: 9920)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !915, file: !500, line: 90, baseType: !48, size: 16, offset: 9936)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !915, file: !500, line: 92, baseType: !48, size: 16, offset: 9952)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !915, file: !500, line: 92, baseType: !48, size: 16, offset: 9968)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !915, file: !500, line: 93, baseType: !48, size: 16, offset: 9984)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !915, file: !500, line: 93, baseType: !48, size: 16, offset: 10000)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !915, file: !500, line: 94, baseType: !22, size: 32, offset: 10016)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !915, file: !500, line: 97, baseType: !48, size: 16, offset: 10048)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !915, file: !500, line: 97, baseType: !48, size: 16, offset: 10064)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !915, file: !500, line: 98, baseType: !48, size: 16, offset: 10080)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !915, file: !500, line: 98, baseType: !48, size: 16, offset: 10096)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !915, file: !500, line: 99, baseType: !48, size: 16, offset: 10112)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !915, file: !500, line: 99, baseType: !48, size: 16, offset: 10128)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !915, file: !500, line: 100, baseType: !278, size: 32, offset: 10144)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !915, file: !500, line: 101, baseType: !947, size: 64, offset: 10176)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !915, file: !500, line: 103, baseType: !136, size: 64, offset: 10240)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !915, file: !500, line: 104, baseType: !950, size: 64, offset: 10304)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !39, line: 159, size: 448, elements: !952)
!952 = !{!953, !955, !956, !958, !959, !961}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !951, file: !39, line: 161, baseType: !954, size: 64)
!954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 64, elements: !495)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !951, file: !39, line: 162, baseType: !954, size: 64, offset: 64)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !951, file: !39, line: 163, baseType: !957, size: 32, offset: 128)
!957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 32, elements: !495)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !951, file: !39, line: 164, baseType: !957, size: 32, offset: 160)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !951, file: !39, line: 165, baseType: !960, size: 128, offset: 192)
!960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !947, size: 128, elements: !495)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !951, file: !39, line: 166, baseType: !962, size: 128, offset: 320)
!962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !923, size: 128, elements: !495)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !915, file: !500, line: 107, baseType: !204, size: 32, offset: 10368)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !915, file: !500, line: 108, baseType: !22, size: 32, offset: 10400)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !915, file: !500, line: 109, baseType: !48, size: 16, offset: 10432)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !915, file: !500, line: 110, baseType: !48, size: 16, offset: 10448)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !915, file: !500, line: 113, baseType: !22, size: 32, offset: 10464)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !915, file: !500, line: 113, baseType: !22, size: 32, offset: 10496)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !915, file: !500, line: 114, baseType: !14, size: 8, offset: 10528)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !915, file: !500, line: 114, baseType: !14, size: 8, offset: 10536)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !915, file: !500, line: 115, baseType: !48, size: 16, offset: 10544)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !915, file: !500, line: 116, baseType: !355, size: 128, offset: 10560)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !915, file: !500, line: 119, baseType: !204, size: 32, offset: 10688)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !915, file: !500, line: 119, baseType: !204, size: 32, offset: 10720)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !915, file: !500, line: 122, baseType: !737, size: 512, offset: 10752)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !915, file: !500, line: 123, baseType: !14, size: 8, offset: 11264)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !915, file: !500, line: 125, baseType: !978, size: 56, offset: 11272)
!978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 56, elements: !979)
!979 = !{!980}
!980 = !DISubrange(count: 7)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !915, file: !500, line: 126, baseType: !982, size: 4096, offset: 11328)
!982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !983, size: 4096, elements: !931)
!983 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !500, line: 69, baseType: !984)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !500, line: 67, size: 512, elements: !985)
!985 = !{!986}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !984, file: !500, line: 68, baseType: !33, size: 512)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !893, file: !766, line: 201, baseType: !204, size: 32, offset: 960)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !893, file: !766, line: 204, baseType: !22, size: 32, offset: 992)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !765, file: !766, line: 350, baseType: !58, size: 128, offset: 1984)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !765, file: !766, line: 351, baseType: !22, size: 32, offset: 2112)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !765, file: !766, line: 351, baseType: !22, size: 32, offset: 2144)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !765, file: !766, line: 353, baseType: !993, size: 64, offset: 2176)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !766, line: 297, baseType: !995)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !766, line: 295, size: 2048, elements: !996)
!996 = !{!997}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !995, file: !766, line: 296, baseType: !687, size: 2048)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !765, file: !766, line: 355, baseType: !999, size: 384, offset: 2240)
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !766, line: 338, baseType: !1000)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !766, line: 322, size: 384, elements: !1001)
!1001 = !{!1002, !1003, !1004, !1005, !1006, !1007, !1008}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1000, file: !766, line: 323, baseType: !22, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !1000, file: !766, line: 325, baseType: !48, size: 16, offset: 32)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1000, file: !766, line: 326, baseType: !48, size: 16, offset: 48)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !1000, file: !766, line: 331, baseType: !58, size: 128, offset: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1000, file: !766, line: 334, baseType: !58, size: 128, offset: 192)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !1000, file: !766, line: 335, baseType: !22, size: 32, offset: 320)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1000, file: !766, line: 337, baseType: !22, size: 32, offset: 352)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !747, file: !748, line: 81, baseType: !56, size: 64, offset: 12224)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !747, file: !748, line: 85, baseType: !1011, size: 6208, offset: 12288)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !748, line: 55, size: 6208, elements: !1012)
!1012 = !{!1013, !1014, !1015, !1016, !1017}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1011, file: !748, line: 56, baseType: !693, size: 6144)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1011, file: !748, line: 58, baseType: !48, size: 16, offset: 6144)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1011, file: !748, line: 59, baseType: !48, size: 16, offset: 6160)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !1011, file: !748, line: 60, baseType: !48, size: 16, offset: 6176)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !1011, file: !748, line: 61, baseType: !48, size: 16, offset: 6192)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !747, file: !748, line: 86, baseType: !22, size: 32, offset: 18496)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !747, file: !748, line: 88, baseType: !22, size: 32, offset: 18528)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !747, file: !748, line: 90, baseType: !22, size: 32, offset: 18560)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !747, file: !748, line: 94, baseType: !22, size: 32, offset: 18592)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !747, file: !748, line: 100, baseType: !737, size: 512, offset: 18624)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !642, file: !634, line: 154, baseType: !1024, size: 64, offset: 1664)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !1026, line: 264, flags: DIFlagFwdDecl)
!1026 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !642, file: !634, line: 156, baseType: !704, size: 64, offset: 1728)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !642, file: !634, line: 158, baseType: !204, size: 32, offset: 1792)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !642, file: !634, line: 159, baseType: !204, size: 32, offset: 1824)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !642, file: !634, line: 162, baseType: !645, size: 64, offset: 1856)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !642, file: !634, line: 162, baseType: !645, size: 64, offset: 1920)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !642, file: !634, line: 162, baseType: !645, size: 64, offset: 1984)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !642, file: !634, line: 164, baseType: !58, size: 128, offset: 2048)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !642, file: !634, line: 166, baseType: !1035, size: 64, offset: 2176)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !634, line: 51, flags: DIFlagFwdDecl)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !642, file: !634, line: 167, baseType: !56, size: 64, offset: 2240)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !642, file: !634, line: 168, baseType: !204, size: 32, offset: 2304)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !642, file: !634, line: 170, baseType: !204, size: 32, offset: 2336)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !642, file: !634, line: 170, baseType: !204, size: 32, offset: 2368)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !642, file: !634, line: 171, baseType: !204, size: 32, offset: 2400)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !642, file: !634, line: 173, baseType: !56, size: 64, offset: 2432)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !642, file: !634, line: 175, baseType: !22, size: 32, offset: 2496)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !642, file: !634, line: 176, baseType: !22, size: 32, offset: 2528)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !642, file: !634, line: 179, baseType: !22, size: 32, offset: 2560)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !642, file: !634, line: 180, baseType: !204, size: 32, offset: 2592)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !642, file: !634, line: 183, baseType: !22, size: 32, offset: 2624)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !642, file: !634, line: 185, baseType: !14, size: 8, offset: 2656)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !642, file: !634, line: 186, baseType: !1050, size: 24, offset: 2664)
!1050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 24, elements: !283)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !642, file: !634, line: 189, baseType: !58, size: 128, offset: 2688)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !633, file: !634, line: 207, baseType: !130, size: 8192, offset: 384)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !633, file: !634, line: 208, baseType: !130, size: 8192, offset: 8576)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !633, file: !634, line: 210, baseType: !22, size: 32, offset: 16768)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !633, file: !634, line: 210, baseType: !22, size: 32, offset: 16800)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !633, file: !634, line: 211, baseType: !22, size: 32, offset: 16832)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !633, file: !634, line: 211, baseType: !22, size: 32, offset: 16864)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !633, file: !634, line: 212, baseType: !589, size: 128, offset: 16896)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !153, file: !154, line: 1246, baseType: !1060, size: 64, offset: 2112)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !154, line: 1067, size: 5184, elements: !1062)
!1062 = !{!1063, !1093, !1094, !1109, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1131, !1147, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1257}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1061, file: !154, line: 1068, baseType: !1064, size: 64)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !154, line: 934, baseType: !1066)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !154, line: 925, size: 576, elements: !1067)
!1067 = !{!1068, !1085, !1086, !1087, !1088, !1089, !1092}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1066, file: !154, line: 926, baseType: !1069, size: 320)
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !154, line: 830, baseType: !1070)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !154, line: 813, size: 320, elements: !1071)
!1071 = !{!1072, !1075, !1078, !1079, !1082, !1083, !1084}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1070, file: !154, line: 814, baseType: !1073, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !154, line: 51, flags: DIFlagFwdDecl)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1070, file: !154, line: 815, baseType: !1076, size: 64, offset: 64)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !154, line: 815, flags: DIFlagFwdDecl)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1070, file: !154, line: 818, baseType: !56, size: 64, offset: 128)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1070, file: !154, line: 819, baseType: !1080, size: 32, offset: 192)
!1080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1081, size: 32, elements: !356)
!1081 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1070, file: !154, line: 822, baseType: !22, size: 32, offset: 224)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1070, file: !154, line: 826, baseType: !22, size: 32, offset: 256)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1070, file: !154, line: 829, baseType: !22, size: 32, offset: 288)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1066, file: !154, line: 928, baseType: !48, size: 16, offset: 320)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1066, file: !154, line: 928, baseType: !48, size: 16, offset: 336)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1066, file: !154, line: 929, baseType: !22, size: 32, offset: 352)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1066, file: !154, line: 930, baseType: !947, size: 64, offset: 384)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1066, file: !154, line: 931, baseType: !1090, size: 64, offset: 448)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!1091 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !154, line: 931, flags: DIFlagFwdDecl)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1066, file: !154, line: 933, baseType: !56, size: 64, offset: 512)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1061, file: !154, line: 1069, baseType: !1064, size: 64, offset: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1061, file: !154, line: 1070, baseType: !1095, size: 64, offset: 128)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !154, line: 916, baseType: !1097)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !154, line: 891, size: 704, elements: !1098)
!1098 = !{!1099, !1100, !1101, !1103, !1104, !1105, !1106, !1107, !1108}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1097, file: !154, line: 892, baseType: !1069, size: 320)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1097, file: !154, line: 896, baseType: !22, size: 32, offset: 320)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1097, file: !154, line: 900, baseType: !1102, size: 96, offset: 352)
!1102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 96, elements: !283)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1097, file: !154, line: 903, baseType: !204, size: 32, offset: 448)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1097, file: !154, line: 906, baseType: !22, size: 32, offset: 480)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1097, file: !154, line: 909, baseType: !204, size: 32, offset: 512)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1097, file: !154, line: 912, baseType: !204, size: 32, offset: 544)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1097, file: !154, line: 914, baseType: !229, size: 64, offset: 576)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1097, file: !154, line: 915, baseType: !56, size: 64, offset: 640)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1061, file: !154, line: 1071, baseType: !1110, size: 64, offset: 192)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !154, line: 920, baseType: !1112)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !154, line: 918, size: 320, elements: !1113)
!1113 = !{!1114}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1112, file: !154, line: 919, baseType: !1069, size: 320)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1061, file: !154, line: 1075, baseType: !204, size: 32, offset: 256)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1061, file: !154, line: 1077, baseType: !204, size: 32, offset: 288)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1061, file: !154, line: 1078, baseType: !204, size: 32, offset: 320)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1061, file: !154, line: 1079, baseType: !48, size: 16, offset: 352)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1061, file: !154, line: 1082, baseType: !48, size: 16, offset: 368)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1061, file: !154, line: 1085, baseType: !14, size: 8, offset: 384)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1061, file: !154, line: 1086, baseType: !14, size: 8, offset: 392)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1061, file: !154, line: 1087, baseType: !14, size: 8, offset: 400)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1061, file: !154, line: 1088, baseType: !14, size: 8, offset: 408)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1061, file: !154, line: 1090, baseType: !204, size: 32, offset: 416)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1061, file: !154, line: 1093, baseType: !48, size: 16, offset: 448)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1061, file: !154, line: 1096, baseType: !14, size: 8, offset: 464)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1061, file: !154, line: 1098, baseType: !1128, size: 40, offset: 472)
!1128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 40, elements: !1129)
!1129 = !{!1130}
!1130 = !DISubrange(count: 5)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1061, file: !154, line: 1101, baseType: !1132, size: 832, offset: 512)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !154, line: 836, size: 832, elements: !1133)
!1133 = !{!1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1132, file: !154, line: 837, baseType: !1069, size: 320)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1132, file: !154, line: 839, baseType: !48, size: 16, offset: 320)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1132, file: !154, line: 839, baseType: !48, size: 16, offset: 336)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1132, file: !154, line: 842, baseType: !48, size: 16, offset: 352)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1132, file: !154, line: 842, baseType: !48, size: 16, offset: 368)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1132, file: !154, line: 843, baseType: !957, size: 32, offset: 384)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1132, file: !154, line: 845, baseType: !22, size: 32, offset: 416)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1132, file: !154, line: 847, baseType: !56, size: 64, offset: 448)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1132, file: !154, line: 848, baseType: !914, size: 64, offset: 512)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1132, file: !154, line: 849, baseType: !914, size: 64, offset: 576)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1132, file: !154, line: 850, baseType: !914, size: 64, offset: 640)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1132, file: !154, line: 851, baseType: !282, size: 96, offset: 704)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1132, file: !154, line: 852, baseType: !204, size: 32, offset: 800)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1061, file: !154, line: 1104, baseType: !1148, size: 1344, offset: 1344)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !154, line: 867, size: 1344, elements: !1149)
!1149 = !{!1150, !1151, !1152, !1153, !1154, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1148, file: !154, line: 868, baseType: !48, size: 16)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1148, file: !154, line: 869, baseType: !48, size: 16, offset: 16)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1148, file: !154, line: 870, baseType: !48, size: 16, offset: 32)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1148, file: !154, line: 871, baseType: !48, size: 16, offset: 48)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1148, file: !154, line: 873, baseType: !1155, size: 896, offset: 64)
!1155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1156, size: 896, elements: !979)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !154, line: 864, baseType: !1157)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !154, line: 859, size: 128, elements: !1158)
!1158 = !{!1159, !1160, !1161, !1162, !1163, !1164}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1157, file: !154, line: 860, baseType: !48, size: 16)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1157, file: !154, line: 861, baseType: !48, size: 16, offset: 16)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1157, file: !154, line: 861, baseType: !48, size: 16, offset: 32)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1157, file: !154, line: 861, baseType: !48, size: 16, offset: 48)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1157, file: !154, line: 862, baseType: !22, size: 32, offset: 64)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1157, file: !154, line: 863, baseType: !204, size: 32, offset: 96)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1148, file: !154, line: 874, baseType: !56, size: 64, offset: 960)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1148, file: !154, line: 876, baseType: !204, size: 32, offset: 1024)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1148, file: !154, line: 876, baseType: !204, size: 32, offset: 1056)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1148, file: !154, line: 878, baseType: !22, size: 32, offset: 1088)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1148, file: !154, line: 879, baseType: !22, size: 32, offset: 1120)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1148, file: !154, line: 881, baseType: !22, size: 32, offset: 1152)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1148, file: !154, line: 881, baseType: !22, size: 32, offset: 1184)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1148, file: !154, line: 883, baseType: !152, size: 64, offset: 1216)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1148, file: !154, line: 884, baseType: !229, size: 64, offset: 1280)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1061, file: !154, line: 1107, baseType: !204, size: 32, offset: 2688)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1061, file: !154, line: 1110, baseType: !204, size: 32, offset: 2720)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1061, file: !154, line: 1113, baseType: !48, size: 16, offset: 2752)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1061, file: !154, line: 1113, baseType: !48, size: 16, offset: 2768)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1061, file: !154, line: 1116, baseType: !14, size: 8, offset: 2784)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1061, file: !154, line: 1117, baseType: !557, size: 8, offset: 2792)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1061, file: !154, line: 1120, baseType: !48, size: 16, offset: 2800)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1061, file: !154, line: 1121, baseType: !204, size: 32, offset: 2816)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1061, file: !154, line: 1122, baseType: !204, size: 32, offset: 2848)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1061, file: !154, line: 1123, baseType: !204, size: 32, offset: 2880)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1061, file: !154, line: 1124, baseType: !204, size: 32, offset: 2912)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1061, file: !154, line: 1125, baseType: !204, size: 32, offset: 2944)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1061, file: !154, line: 1126, baseType: !204, size: 32, offset: 2976)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1061, file: !154, line: 1127, baseType: !204, size: 32, offset: 3008)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1061, file: !154, line: 1128, baseType: !204, size: 32, offset: 3040)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1061, file: !154, line: 1129, baseType: !204, size: 32, offset: 3072)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1061, file: !154, line: 1130, baseType: !204, size: 32, offset: 3104)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1061, file: !154, line: 1131, baseType: !48, size: 16, offset: 3136)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1061, file: !154, line: 1132, baseType: !14, size: 8, offset: 3152)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1061, file: !154, line: 1133, baseType: !14, size: 8, offset: 3160)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1061, file: !154, line: 1134, baseType: !1050, size: 24, offset: 3168)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1061, file: !154, line: 1135, baseType: !14, size: 8, offset: 3192)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1061, file: !154, line: 1138, baseType: !229, size: 64, offset: 3200)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1061, file: !154, line: 1139, baseType: !14, size: 8, offset: 3264)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1061, file: !154, line: 1140, baseType: !14, size: 8, offset: 3272)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1061, file: !154, line: 1141, baseType: !14, size: 8, offset: 3280)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1061, file: !154, line: 1142, baseType: !14, size: 8, offset: 3288)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1061, file: !154, line: 1143, baseType: !14, size: 8, offset: 3296)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1061, file: !154, line: 1144, baseType: !1203, size: 64, offset: 3304)
!1203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 64, elements: !931)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1061, file: !154, line: 1145, baseType: !1203, size: 64, offset: 3368)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1061, file: !154, line: 1148, baseType: !14, size: 8, offset: 3432)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1061, file: !154, line: 1149, baseType: !14, size: 8, offset: 3440)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1061, file: !154, line: 1152, baseType: !14, size: 8, offset: 3448)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1061, file: !154, line: 1152, baseType: !14, size: 8, offset: 3456)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1061, file: !154, line: 1153, baseType: !14, size: 8, offset: 3464)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1061, file: !154, line: 1154, baseType: !48, size: 16, offset: 3472)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1061, file: !154, line: 1154, baseType: !48, size: 16, offset: 3488)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1061, file: !154, line: 1155, baseType: !48, size: 16, offset: 3504)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1061, file: !154, line: 1155, baseType: !48, size: 16, offset: 3520)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1061, file: !154, line: 1156, baseType: !14, size: 8, offset: 3536)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1061, file: !154, line: 1157, baseType: !14, size: 8, offset: 3544)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1061, file: !154, line: 1159, baseType: !14, size: 8, offset: 3552)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1061, file: !154, line: 1160, baseType: !14, size: 8, offset: 3560)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1061, file: !154, line: 1161, baseType: !14, size: 8, offset: 3568)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1061, file: !154, line: 1162, baseType: !14, size: 8, offset: 3576)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1061, file: !154, line: 1165, baseType: !22, size: 32, offset: 3584)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1061, file: !154, line: 1166, baseType: !22, size: 32, offset: 3616)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1061, file: !154, line: 1167, baseType: !22, size: 32, offset: 3648)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1061, file: !154, line: 1168, baseType: !22, size: 32, offset: 3680)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1061, file: !154, line: 1171, baseType: !48, size: 16, offset: 3712)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1061, file: !154, line: 1171, baseType: !48, size: 16, offset: 3728)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1061, file: !154, line: 1172, baseType: !22, size: 32, offset: 3744)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1061, file: !154, line: 1173, baseType: !204, size: 32, offset: 3776)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1061, file: !154, line: 1174, baseType: !204, size: 32, offset: 3808)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1061, file: !154, line: 1177, baseType: !1230, size: 1024, offset: 3840)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !154, line: 963, size: 1024, elements: !1231)
!1231 = !{!1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1255, !1256}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1230, file: !154, line: 965, baseType: !22, size: 32)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1230, file: !154, line: 968, baseType: !204, size: 32, offset: 32)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1230, file: !154, line: 971, baseType: !204, size: 32, offset: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1230, file: !154, line: 974, baseType: !204, size: 32, offset: 96)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1230, file: !154, line: 977, baseType: !282, size: 96, offset: 128)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1230, file: !154, line: 979, baseType: !282, size: 96, offset: 224)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1230, file: !154, line: 982, baseType: !22, size: 32, offset: 320)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1230, file: !154, line: 987, baseType: !494, size: 64, offset: 352)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1230, file: !154, line: 989, baseType: !204, size: 32, offset: 416)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1230, file: !154, line: 994, baseType: !22, size: 32, offset: 448)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1230, file: !154, line: 995, baseType: !22, size: 32, offset: 480)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1230, file: !154, line: 997, baseType: !14, size: 8, offset: 512)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1230, file: !154, line: 998, baseType: !978, size: 56, offset: 520)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1230, file: !154, line: 1000, baseType: !204, size: 32, offset: 576)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1230, file: !154, line: 1003, baseType: !494, size: 64, offset: 608)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1230, file: !154, line: 1006, baseType: !22, size: 32, offset: 672)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1230, file: !154, line: 1009, baseType: !204, size: 32, offset: 704)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1230, file: !154, line: 1012, baseType: !494, size: 64, offset: 736)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1230, file: !154, line: 1015, baseType: !494, size: 64, offset: 800)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1230, file: !154, line: 1018, baseType: !22, size: 32, offset: 864)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1230, file: !154, line: 1019, baseType: !1253, size: 64, offset: 896)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!1254 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !154, line: 63, flags: DIFlagFwdDecl)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1230, file: !154, line: 1023, baseType: !204, size: 32, offset: 960)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1230, file: !154, line: 1024, baseType: !22, size: 32, offset: 992)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1061, file: !154, line: 1179, baseType: !1258, size: 320, offset: 4864)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !154, line: 1043, size: 320, elements: !1259)
!1259 = !{!1260, !1261, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1258, file: !154, line: 1044, baseType: !14, size: 8)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1258, file: !154, line: 1045, baseType: !1262, size: 16, offset: 8)
!1262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 16, elements: !495)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1258, file: !154, line: 1048, baseType: !14, size: 8, offset: 24)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1258, file: !154, line: 1049, baseType: !204, size: 32, offset: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1258, file: !154, line: 1049, baseType: !204, size: 32, offset: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1258, file: !154, line: 1052, baseType: !204, size: 32, offset: 96)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1258, file: !154, line: 1052, baseType: !204, size: 32, offset: 128)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1258, file: !154, line: 1053, baseType: !14, size: 8, offset: 160)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1258, file: !154, line: 1054, baseType: !1050, size: 24, offset: 168)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1258, file: !154, line: 1057, baseType: !204, size: 32, offset: 192)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1258, file: !154, line: 1057, baseType: !204, size: 32, offset: 224)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1258, file: !154, line: 1060, baseType: !204, size: 32, offset: 256)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1258, file: !154, line: 1060, baseType: !204, size: 32, offset: 288)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !153, file: !154, line: 1247, baseType: !1275, size: 64, offset: 2176)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!1276 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !154, line: 60, flags: DIFlagFwdDecl)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !153, file: !154, line: 1251, baseType: !1278, size: 31872, offset: 2240)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !154, line: 403, size: 31872, elements: !1279)
!1279 = !{!1280, !1355, !1375, !1384, !1404, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1542, !1543, !1544, !1548, !1564, !1565}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1278, file: !154, line: 404, baseType: !1281, size: 1984)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !154, line: 259, size: 1984, elements: !1282)
!1282 = !{!1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1300, !1350}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1281, file: !154, line: 260, baseType: !14, size: 8)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1281, file: !154, line: 263, baseType: !14, size: 8, offset: 8)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1281, file: !154, line: 266, baseType: !14, size: 8, offset: 16)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1281, file: !154, line: 267, baseType: !14, size: 8, offset: 24)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1281, file: !154, line: 269, baseType: !14, size: 8, offset: 32)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1281, file: !154, line: 270, baseType: !14, size: 8, offset: 40)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1281, file: !154, line: 276, baseType: !14, size: 8, offset: 48)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1281, file: !154, line: 279, baseType: !14, size: 8, offset: 56)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1281, file: !154, line: 280, baseType: !48, size: 16, offset: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1281, file: !154, line: 280, baseType: !48, size: 16, offset: 80)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1281, file: !154, line: 281, baseType: !204, size: 32, offset: 96)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1281, file: !154, line: 284, baseType: !14, size: 8, offset: 128)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1281, file: !154, line: 285, baseType: !14, size: 8, offset: 136)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1281, file: !154, line: 287, baseType: !1297, size: 48, offset: 144)
!1297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 48, elements: !1298)
!1298 = !{!1299}
!1299 = !DISubrange(count: 6)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1281, file: !154, line: 290, baseType: !1301, size: 1280, offset: 192)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !738, line: 174, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !738, line: 166, size: 1280, elements: !1303)
!1303 = !{!1304, !1305, !1306, !1307, !1308, !1309, !1310, !1349}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1302, file: !738, line: 167, baseType: !22, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1302, file: !738, line: 167, baseType: !22, size: 32, offset: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1302, file: !738, line: 168, baseType: !33, size: 512, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1302, file: !738, line: 169, baseType: !33, size: 512, offset: 576)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1302, file: !738, line: 170, baseType: !204, size: 32, offset: 1088)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1302, file: !738, line: 171, baseType: !204, size: 32, offset: 1120)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1302, file: !738, line: 172, baseType: !1311, size: 64, offset: 1152)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !738, line: 72, size: 3072, elements: !1313)
!1313 = !{!1314, !1315, !1316, !1317, !1318, !1319, !1320, !1345, !1346, !1347, !1348}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1312, file: !738, line: 73, baseType: !22, size: 32)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1312, file: !738, line: 73, baseType: !22, size: 32, offset: 32)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1312, file: !738, line: 74, baseType: !22, size: 32, offset: 64)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1312, file: !738, line: 75, baseType: !22, size: 32, offset: 96)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1312, file: !738, line: 77, baseType: !589, size: 128, offset: 128)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1312, file: !738, line: 77, baseType: !589, size: 128, offset: 256)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1312, file: !738, line: 79, baseType: !1321, size: 2304, offset: 384)
!1321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1322, size: 2304, elements: !356)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !738, line: 67, baseType: !1323)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !738, line: 55, size: 576, elements: !1324)
!1324 = !{!1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1341, !1342, !1343, !1344}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1323, file: !738, line: 56, baseType: !48, size: 16)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1323, file: !738, line: 56, baseType: !48, size: 16, offset: 16)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1323, file: !738, line: 58, baseType: !204, size: 32, offset: 32)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1323, file: !738, line: 59, baseType: !204, size: 32, offset: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1323, file: !738, line: 59, baseType: !204, size: 32, offset: 96)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1323, file: !738, line: 60, baseType: !494, size: 64, offset: 128)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1323, file: !738, line: 60, baseType: !494, size: 64, offset: 192)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1323, file: !738, line: 61, baseType: !1333, size: 64, offset: 256)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !738, line: 47, baseType: !1335)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !738, line: 44, size: 96, elements: !1336)
!1336 = !{!1337, !1338, !1339, !1340}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1335, file: !738, line: 45, baseType: !204, size: 32)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1335, file: !738, line: 45, baseType: !204, size: 32, offset: 32)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1335, file: !738, line: 46, baseType: !48, size: 16, offset: 64)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1335, file: !738, line: 46, baseType: !48, size: 16, offset: 80)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1323, file: !738, line: 62, baseType: !1333, size: 64, offset: 320)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1323, file: !738, line: 64, baseType: !1333, size: 64, offset: 384)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1323, file: !738, line: 65, baseType: !494, size: 64, offset: 448)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1323, file: !738, line: 66, baseType: !494, size: 64, offset: 512)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1312, file: !738, line: 80, baseType: !282, size: 96, offset: 2688)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1312, file: !738, line: 80, baseType: !282, size: 96, offset: 2784)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1312, file: !738, line: 81, baseType: !282, size: 96, offset: 2880)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1312, file: !738, line: 83, baseType: !282, size: 96, offset: 2976)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1302, file: !738, line: 173, baseType: !56, size: 64, offset: 1216)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1281, file: !154, line: 291, baseType: !1351, size: 512, offset: 1472)
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !738, line: 178, baseType: !1352)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !738, line: 176, size: 512, elements: !1353)
!1353 = !{!1354}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1352, file: !738, line: 177, baseType: !33, size: 512)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1278, file: !154, line: 406, baseType: !1356, size: 64, offset: 1984)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !154, line: 80, size: 1472, elements: !1358)
!1358 = !{!1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1357, file: !154, line: 81, baseType: !56, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1357, file: !154, line: 82, baseType: !56, size: 64, offset: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1357, file: !154, line: 83, baseType: !278, size: 32, offset: 128)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1357, file: !154, line: 84, baseType: !278, size: 32, offset: 160)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1357, file: !154, line: 86, baseType: !278, size: 32, offset: 192)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1357, file: !154, line: 87, baseType: !278, size: 32, offset: 224)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1357, file: !154, line: 88, baseType: !278, size: 32, offset: 256)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1357, file: !154, line: 89, baseType: !278, size: 32, offset: 288)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1357, file: !154, line: 90, baseType: !278, size: 32, offset: 320)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1357, file: !154, line: 91, baseType: !278, size: 32, offset: 352)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1357, file: !154, line: 92, baseType: !278, size: 32, offset: 384)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1357, file: !154, line: 93, baseType: !278, size: 32, offset: 416)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1357, file: !154, line: 95, baseType: !1372, size: 1024, offset: 448)
!1372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 1024, elements: !1373)
!1373 = !{!1374}
!1374 = !DISubrange(count: 128)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1278, file: !154, line: 407, baseType: !1376, size: 64, offset: 2048)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !154, line: 98, size: 1216, elements: !1378)
!1378 = !{!1379, !1380, !1381, !1382, !1383}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1377, file: !154, line: 100, baseType: !56, size: 64)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1377, file: !154, line: 101, baseType: !56, size: 64, offset: 64)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1377, file: !154, line: 103, baseType: !278, size: 32, offset: 128)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1377, file: !154, line: 104, baseType: !278, size: 32, offset: 160)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1377, file: !154, line: 106, baseType: !1372, size: 1024, offset: 192)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1278, file: !154, line: 408, baseType: !1385, size: 512, offset: 2112)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !154, line: 109, size: 512, elements: !1386)
!1386 = !{!1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1385, file: !154, line: 111, baseType: !22, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1385, file: !154, line: 112, baseType: !22, size: 32, offset: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1385, file: !154, line: 115, baseType: !22, size: 32, offset: 64)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1385, file: !154, line: 116, baseType: !22, size: 32, offset: 96)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1385, file: !154, line: 117, baseType: !22, size: 32, offset: 128)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1385, file: !154, line: 118, baseType: !22, size: 32, offset: 160)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1385, file: !154, line: 119, baseType: !22, size: 32, offset: 192)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1385, file: !154, line: 120, baseType: !22, size: 32, offset: 224)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1385, file: !154, line: 121, baseType: !22, size: 32, offset: 256)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1385, file: !154, line: 122, baseType: !22, size: 32, offset: 288)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1385, file: !154, line: 125, baseType: !22, size: 32, offset: 320)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1385, file: !154, line: 126, baseType: !22, size: 32, offset: 352)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1385, file: !154, line: 127, baseType: !48, size: 16, offset: 384)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1385, file: !154, line: 128, baseType: !48, size: 16, offset: 400)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1385, file: !154, line: 129, baseType: !22, size: 32, offset: 416)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1385, file: !154, line: 130, baseType: !22, size: 32, offset: 448)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1385, file: !154, line: 131, baseType: !22, size: 32, offset: 480)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1278, file: !154, line: 409, baseType: !1405, size: 576, offset: 2624)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !154, line: 134, size: 576, elements: !1406)
!1406 = !{!1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1405, file: !154, line: 135, baseType: !22, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1405, file: !154, line: 136, baseType: !22, size: 32, offset: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1405, file: !154, line: 137, baseType: !22, size: 32, offset: 64)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1405, file: !154, line: 138, baseType: !22, size: 32, offset: 96)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1405, file: !154, line: 139, baseType: !22, size: 32, offset: 128)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1405, file: !154, line: 140, baseType: !22, size: 32, offset: 160)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1405, file: !154, line: 141, baseType: !22, size: 32, offset: 192)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1405, file: !154, line: 142, baseType: !22, size: 32, offset: 224)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1405, file: !154, line: 143, baseType: !204, size: 32, offset: 256)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1405, file: !154, line: 144, baseType: !22, size: 32, offset: 288)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1405, file: !154, line: 145, baseType: !22, size: 32, offset: 320)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1405, file: !154, line: 147, baseType: !22, size: 32, offset: 352)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1405, file: !154, line: 148, baseType: !22, size: 32, offset: 384)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1405, file: !154, line: 149, baseType: !22, size: 32, offset: 416)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1405, file: !154, line: 150, baseType: !22, size: 32, offset: 448)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1405, file: !154, line: 151, baseType: !22, size: 32, offset: 480)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1405, file: !154, line: 152, baseType: !37, size: 64, offset: 512)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1278, file: !154, line: 411, baseType: !22, size: 32, offset: 3200)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1278, file: !154, line: 411, baseType: !22, size: 32, offset: 3232)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1278, file: !154, line: 411, baseType: !22, size: 32, offset: 3264)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1278, file: !154, line: 412, baseType: !204, size: 32, offset: 3296)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1278, file: !154, line: 413, baseType: !22, size: 32, offset: 3328)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1278, file: !154, line: 413, baseType: !22, size: 32, offset: 3360)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1278, file: !154, line: 415, baseType: !22, size: 32, offset: 3392)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1278, file: !154, line: 415, baseType: !22, size: 32, offset: 3424)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1278, file: !154, line: 416, baseType: !48, size: 16, offset: 3456)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1278, file: !154, line: 416, baseType: !48, size: 16, offset: 3472)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1278, file: !154, line: 418, baseType: !204, size: 32, offset: 3488)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1278, file: !154, line: 418, baseType: !204, size: 32, offset: 3520)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1278, file: !154, line: 421, baseType: !204, size: 32, offset: 3552)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1278, file: !154, line: 421, baseType: !204, size: 32, offset: 3584)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1278, file: !154, line: 421, baseType: !204, size: 32, offset: 3616)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1278, file: !154, line: 425, baseType: !48, size: 16, offset: 3648)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1278, file: !154, line: 425, baseType: !48, size: 16, offset: 3664)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1278, file: !154, line: 425, baseType: !48, size: 16, offset: 3680)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1278, file: !154, line: 426, baseType: !48, size: 16, offset: 3696)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1278, file: !154, line: 428, baseType: !48, size: 16, offset: 3712)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1278, file: !154, line: 428, baseType: !48, size: 16, offset: 3728)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1278, file: !154, line: 431, baseType: !22, size: 32, offset: 3744)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1278, file: !154, line: 433, baseType: !48, size: 16, offset: 3776)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1278, file: !154, line: 435, baseType: !48, size: 16, offset: 3792)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1278, file: !154, line: 437, baseType: !48, size: 16, offset: 3808)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1278, file: !154, line: 439, baseType: !48, size: 16, offset: 3824)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1278, file: !154, line: 441, baseType: !48, size: 16, offset: 3840)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1278, file: !154, line: 443, baseType: !48, size: 16, offset: 3856)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1278, file: !154, line: 449, baseType: !22, size: 32, offset: 3872)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1278, file: !154, line: 453, baseType: !22, size: 32, offset: 3904)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1278, file: !154, line: 458, baseType: !48, size: 16, offset: 3936)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1278, file: !154, line: 462, baseType: !48, size: 16, offset: 3952)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1278, file: !154, line: 467, baseType: !22, size: 32, offset: 3968)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1278, file: !154, line: 467, baseType: !22, size: 32, offset: 4000)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1278, file: !154, line: 469, baseType: !48, size: 16, offset: 4032)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1278, file: !154, line: 469, baseType: !48, size: 16, offset: 4048)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1278, file: !154, line: 469, baseType: !48, size: 16, offset: 4064)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1278, file: !154, line: 469, baseType: !48, size: 16, offset: 4080)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1278, file: !154, line: 474, baseType: !48, size: 16, offset: 4096)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1278, file: !154, line: 475, baseType: !14, size: 8, offset: 4112)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1278, file: !154, line: 476, baseType: !14, size: 8, offset: 4120)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1278, file: !154, line: 481, baseType: !22, size: 32, offset: 4128)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1278, file: !154, line: 486, baseType: !22, size: 32, offset: 4160)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1278, file: !154, line: 491, baseType: !22, size: 32, offset: 4192)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1278, file: !154, line: 496, baseType: !48, size: 16, offset: 4224)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1278, file: !154, line: 498, baseType: !48, size: 16, offset: 4240)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1278, file: !154, line: 501, baseType: !48, size: 16, offset: 4256)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1278, file: !154, line: 502, baseType: !48, size: 16, offset: 4272)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1278, file: !154, line: 508, baseType: !48, size: 16, offset: 4288)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1278, file: !154, line: 513, baseType: !48, size: 16, offset: 4304)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1278, file: !154, line: 515, baseType: !48, size: 16, offset: 4320)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1278, file: !154, line: 515, baseType: !48, size: 16, offset: 4336)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1278, file: !154, line: 519, baseType: !589, size: 128, offset: 4352)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1278, file: !154, line: 519, baseType: !589, size: 128, offset: 4480)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1278, file: !154, line: 520, baseType: !1479, size: 128, offset: 4608)
!1479 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !590, line: 89, baseType: !1480)
!1480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !590, line: 86, size: 128, elements: !1481)
!1481 = !{!1482, !1483, !1484, !1485}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1480, file: !590, line: 87, baseType: !22, size: 32)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1480, file: !590, line: 87, baseType: !22, size: 32, offset: 32)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1480, file: !590, line: 88, baseType: !22, size: 32, offset: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1480, file: !590, line: 88, baseType: !22, size: 32, offset: 96)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1278, file: !154, line: 523, baseType: !58, size: 128, offset: 4736)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1278, file: !154, line: 524, baseType: !48, size: 16, offset: 4864)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1278, file: !154, line: 527, baseType: !48, size: 16, offset: 4880)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1278, file: !154, line: 532, baseType: !204, size: 32, offset: 4896)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1278, file: !154, line: 532, baseType: !204, size: 32, offset: 4928)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1278, file: !154, line: 534, baseType: !204, size: 32, offset: 4960)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1278, file: !154, line: 538, baseType: !204, size: 32, offset: 4992)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1278, file: !154, line: 542, baseType: !22, size: 32, offset: 5024)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1278, file: !154, line: 545, baseType: !204, size: 32, offset: 5056)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1278, file: !154, line: 545, baseType: !204, size: 32, offset: 5088)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1278, file: !154, line: 545, baseType: !204, size: 32, offset: 5120)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1278, file: !154, line: 548, baseType: !204, size: 32, offset: 5152)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1278, file: !154, line: 551, baseType: !48, size: 16, offset: 5184)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1278, file: !154, line: 551, baseType: !48, size: 16, offset: 5200)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1278, file: !154, line: 551, baseType: !48, size: 16, offset: 5216)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1278, file: !154, line: 551, baseType: !48, size: 16, offset: 5232)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1278, file: !154, line: 552, baseType: !48, size: 16, offset: 5248)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1278, file: !154, line: 552, baseType: !48, size: 16, offset: 5264)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1278, file: !154, line: 553, baseType: !204, size: 32, offset: 5280)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1278, file: !154, line: 553, baseType: !204, size: 32, offset: 5312)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1278, file: !154, line: 554, baseType: !48, size: 16, offset: 5344)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1278, file: !154, line: 554, baseType: !48, size: 16, offset: 5360)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1278, file: !154, line: 555, baseType: !204, size: 32, offset: 5376)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1278, file: !154, line: 555, baseType: !204, size: 32, offset: 5408)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1278, file: !154, line: 558, baseType: !130, size: 8192, offset: 5440)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1278, file: !154, line: 561, baseType: !22, size: 32, offset: 13632)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1278, file: !154, line: 562, baseType: !48, size: 16, offset: 13664)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1278, file: !154, line: 562, baseType: !48, size: 16, offset: 13680)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1278, file: !154, line: 565, baseType: !693, size: 6144, offset: 13696)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1278, file: !154, line: 568, baseType: !355, size: 128, offset: 19840)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1278, file: !154, line: 569, baseType: !355, size: 128, offset: 19968)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1278, file: !154, line: 572, baseType: !14, size: 8, offset: 20096)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1278, file: !154, line: 573, baseType: !14, size: 8, offset: 20104)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1278, file: !154, line: 574, baseType: !14, size: 8, offset: 20112)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1278, file: !154, line: 575, baseType: !1128, size: 40, offset: 20120)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1278, file: !154, line: 578, baseType: !22, size: 32, offset: 20160)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1278, file: !154, line: 579, baseType: !48, size: 16, offset: 20192)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1278, file: !154, line: 580, baseType: !48, size: 16, offset: 20208)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1278, file: !154, line: 581, baseType: !204, size: 32, offset: 20224)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1278, file: !154, line: 582, baseType: !204, size: 32, offset: 20256)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1278, file: !154, line: 585, baseType: !48, size: 16, offset: 20288)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1278, file: !154, line: 585, baseType: !48, size: 16, offset: 20304)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1278, file: !154, line: 586, baseType: !204, size: 32, offset: 20320)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1278, file: !154, line: 589, baseType: !48, size: 16, offset: 20352)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1278, file: !154, line: 589, baseType: !48, size: 16, offset: 20368)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1278, file: !154, line: 590, baseType: !22, size: 32, offset: 20384)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1278, file: !154, line: 593, baseType: !48, size: 16, offset: 20416)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1278, file: !154, line: 593, baseType: !48, size: 16, offset: 20432)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1278, file: !154, line: 594, baseType: !48, size: 16, offset: 20448)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1278, file: !154, line: 594, baseType: !48, size: 16, offset: 20464)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1278, file: !154, line: 595, baseType: !204, size: 32, offset: 20480)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1278, file: !154, line: 596, baseType: !204, size: 32, offset: 20512)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1278, file: !154, line: 597, baseType: !1539, size: 64, offset: 20544)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1541, line: 44, flags: DIFlagFwdDecl)
!1541 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1278, file: !154, line: 600, baseType: !22, size: 32, offset: 20608)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1278, file: !154, line: 601, baseType: !204, size: 32, offset: 20640)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1278, file: !154, line: 604, baseType: !1545, size: 256, offset: 20672)
!1545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 256, elements: !1546)
!1546 = !{!1547}
!1547 = !DISubrange(count: 32)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1278, file: !154, line: 607, baseType: !1549, size: 10880, offset: 20928)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !154, line: 364, size: 10880, elements: !1550)
!1550 = !{!1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1549, file: !154, line: 365, baseType: !1281, size: 1984)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1549, file: !154, line: 367, baseType: !130, size: 8192, offset: 1984)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1549, file: !154, line: 369, baseType: !48, size: 16, offset: 10176)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1549, file: !154, line: 369, baseType: !48, size: 16, offset: 10192)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1549, file: !154, line: 370, baseType: !48, size: 16, offset: 10208)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1549, file: !154, line: 370, baseType: !48, size: 16, offset: 10224)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1549, file: !154, line: 372, baseType: !204, size: 32, offset: 10240)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1549, file: !154, line: 373, baseType: !204, size: 32, offset: 10272)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1549, file: !154, line: 375, baseType: !1050, size: 24, offset: 10304)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1549, file: !154, line: 376, baseType: !14, size: 8, offset: 10328)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1549, file: !154, line: 378, baseType: !14, size: 8, offset: 10336)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1549, file: !154, line: 379, baseType: !1050, size: 24, offset: 10344)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1549, file: !154, line: 381, baseType: !33, size: 512, offset: 10368)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1278, file: !154, line: 609, baseType: !22, size: 32, offset: 31808)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1278, file: !154, line: 610, baseType: !22, size: 32, offset: 31840)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !153, file: !154, line: 1252, baseType: !1567, size: 256, offset: 34112)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !154, line: 158, size: 256, elements: !1568)
!1568 = !{!1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1567, file: !154, line: 159, baseType: !22, size: 32)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1567, file: !154, line: 160, baseType: !204, size: 32, offset: 32)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1567, file: !154, line: 161, baseType: !204, size: 32, offset: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1567, file: !154, line: 162, baseType: !204, size: 32, offset: 96)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1567, file: !154, line: 163, baseType: !22, size: 32, offset: 128)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1567, file: !154, line: 164, baseType: !48, size: 16, offset: 160)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1567, file: !154, line: 165, baseType: !48, size: 16, offset: 176)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1567, file: !154, line: 166, baseType: !204, size: 32, offset: 192)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1567, file: !154, line: 167, baseType: !204, size: 32, offset: 224)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !153, file: !154, line: 1254, baseType: !58, size: 128, offset: 34368)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !153, file: !154, line: 1255, baseType: !58, size: 128, offset: 34496)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !153, file: !154, line: 1257, baseType: !56, size: 64, offset: 34624)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !153, file: !154, line: 1258, baseType: !56, size: 64, offset: 34688)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !153, file: !154, line: 1259, baseType: !56, size: 64, offset: 34752)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !153, file: !154, line: 1260, baseType: !56, size: 64, offset: 34816)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !153, file: !154, line: 1262, baseType: !56, size: 64, offset: 34880)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !153, file: !154, line: 1265, baseType: !1586, size: 64, offset: 34944)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 64)
!1587 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !154, line: 1265, flags: DIFlagFwdDecl)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !153, file: !154, line: 1266, baseType: !48, size: 16, offset: 35008)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !153, file: !154, line: 1267, baseType: !48, size: 16, offset: 35024)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !153, file: !154, line: 1270, baseType: !22, size: 32, offset: 35040)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !153, file: !154, line: 1271, baseType: !58, size: 128, offset: 35072)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !153, file: !154, line: 1274, baseType: !1593, size: 128, offset: 35200)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !154, line: 650, size: 128, elements: !1594)
!1594 = !{!1595, !1596, !1597, !1598, !1599}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1593, file: !154, line: 651, baseType: !282, size: 96)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1593, file: !154, line: 652, baseType: !14, size: 8, offset: 96)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1593, file: !154, line: 652, baseType: !14, size: 8, offset: 104)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1593, file: !154, line: 652, baseType: !14, size: 8, offset: 112)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1593, file: !154, line: 652, baseType: !14, size: 8, offset: 120)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !153, file: !154, line: 1275, baseType: !1601, size: 1472, offset: 35328)
!1601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !154, line: 676, size: 1472, elements: !1602)
!1602 = !{!1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1615, !1625, !1626, !1627, !1628, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1601, file: !154, line: 679, baseType: !1593, size: 128)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1601, file: !154, line: 680, baseType: !48, size: 16, offset: 128)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1601, file: !154, line: 680, baseType: !48, size: 16, offset: 144)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1601, file: !154, line: 680, baseType: !48, size: 16, offset: 160)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1601, file: !154, line: 680, baseType: !48, size: 16, offset: 176)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1601, file: !154, line: 681, baseType: !48, size: 16, offset: 192)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1601, file: !154, line: 681, baseType: !48, size: 16, offset: 208)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1601, file: !154, line: 681, baseType: !48, size: 16, offset: 224)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1601, file: !154, line: 681, baseType: !48, size: 16, offset: 240)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1601, file: !154, line: 682, baseType: !48, size: 16, offset: 256)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1601, file: !154, line: 682, baseType: !1614, size: 48, offset: 272)
!1614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 48, elements: !283)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1601, file: !154, line: 685, baseType: !1616, size: 192, offset: 320)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !154, line: 633, size: 192, elements: !1617)
!1617 = !{!1618, !1619, !1620, !1621, !1622, !1623, !1624}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1616, file: !154, line: 634, baseType: !48, size: 16)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1616, file: !154, line: 634, baseType: !48, size: 16, offset: 16)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1616, file: !154, line: 635, baseType: !48, size: 16, offset: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1616, file: !154, line: 635, baseType: !48, size: 16, offset: 48)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1616, file: !154, line: 636, baseType: !204, size: 32, offset: 64)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1616, file: !154, line: 636, baseType: !204, size: 32, offset: 96)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1616, file: !154, line: 637, baseType: !1539, size: 64, offset: 128)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1601, file: !154, line: 686, baseType: !48, size: 16, offset: 512)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1601, file: !154, line: 686, baseType: !48, size: 16, offset: 528)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1601, file: !154, line: 687, baseType: !204, size: 32, offset: 544)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1601, file: !154, line: 688, baseType: !1629, size: 448, offset: 576)
!1629 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !154, line: 674, baseType: !1630)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !154, line: 659, size: 448, elements: !1631)
!1631 = !{!1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1630, file: !154, line: 660, baseType: !204, size: 32)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1630, file: !154, line: 661, baseType: !204, size: 32, offset: 32)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1630, file: !154, line: 662, baseType: !204, size: 32, offset: 64)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1630, file: !154, line: 663, baseType: !204, size: 32, offset: 96)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1630, file: !154, line: 664, baseType: !204, size: 32, offset: 128)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1630, file: !154, line: 665, baseType: !204, size: 32, offset: 160)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1630, file: !154, line: 666, baseType: !204, size: 32, offset: 192)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1630, file: !154, line: 667, baseType: !204, size: 32, offset: 224)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1630, file: !154, line: 668, baseType: !204, size: 32, offset: 256)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1630, file: !154, line: 669, baseType: !204, size: 32, offset: 288)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1630, file: !154, line: 670, baseType: !22, size: 32, offset: 320)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1630, file: !154, line: 671, baseType: !204, size: 32, offset: 352)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1630, file: !154, line: 672, baseType: !204, size: 32, offset: 384)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1630, file: !154, line: 673, baseType: !48, size: 16, offset: 416)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1630, file: !154, line: 673, baseType: !48, size: 16, offset: 432)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1601, file: !154, line: 692, baseType: !204, size: 32, offset: 1024)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1601, file: !154, line: 697, baseType: !204, size: 32, offset: 1056)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1601, file: !154, line: 703, baseType: !22, size: 32, offset: 1088)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1601, file: !154, line: 704, baseType: !48, size: 16, offset: 1120)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1601, file: !154, line: 704, baseType: !48, size: 16, offset: 1136)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1601, file: !154, line: 705, baseType: !48, size: 16, offset: 1152)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1601, file: !154, line: 706, baseType: !48, size: 16, offset: 1168)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1601, file: !154, line: 707, baseType: !48, size: 16, offset: 1184)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1601, file: !154, line: 708, baseType: !48, size: 16, offset: 1200)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1601, file: !154, line: 709, baseType: !48, size: 16, offset: 1216)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1601, file: !154, line: 709, baseType: !48, size: 16, offset: 1232)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1601, file: !154, line: 709, baseType: !48, size: 16, offset: 1248)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1601, file: !154, line: 709, baseType: !48, size: 16, offset: 1264)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1601, file: !154, line: 710, baseType: !48, size: 16, offset: 1280)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1601, file: !154, line: 711, baseType: !48, size: 16, offset: 1296)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1601, file: !154, line: 712, baseType: !204, size: 32, offset: 1312)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1601, file: !154, line: 713, baseType: !204, size: 32, offset: 1344)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1601, file: !154, line: 713, baseType: !204, size: 32, offset: 1376)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1601, file: !154, line: 713, baseType: !204, size: 32, offset: 1408)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1601, file: !154, line: 713, baseType: !204, size: 32, offset: 1440)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !153, file: !154, line: 1278, baseType: !1668, size: 64, offset: 36800)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !154, line: 1197, size: 64, elements: !1669)
!1669 = !{!1670, !1671, !1672, !1673}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1668, file: !154, line: 1199, baseType: !204, size: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1668, file: !154, line: 1200, baseType: !14, size: 8, offset: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1668, file: !154, line: 1201, baseType: !14, size: 8, offset: 40)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1668, file: !154, line: 1202, baseType: !48, size: 16, offset: 48)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !153, file: !154, line: 1281, baseType: !313, size: 64, offset: 36864)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !153, file: !154, line: 1284, baseType: !1676, size: 192, offset: 36928)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !154, line: 1208, size: 192, elements: !1677)
!1677 = !{!1678, !1679, !1680, !1681}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1676, file: !154, line: 1209, baseType: !282, size: 96)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1676, file: !154, line: 1210, baseType: !22, size: 32, offset: 96)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1676, file: !154, line: 1210, baseType: !22, size: 32, offset: 128)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1676, file: !154, line: 1210, baseType: !22, size: 32, offset: 160)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !153, file: !154, line: 1287, baseType: !746, size: 64, offset: 37120)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !153, file: !154, line: 1289, baseType: !475, size: 64, offset: 37184)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !153, file: !154, line: 1290, baseType: !475, size: 64, offset: 37248)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !153, file: !154, line: 1293, baseType: !1301, size: 1280, offset: 37312)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !153, file: !154, line: 1294, baseType: !1351, size: 512, offset: 38592)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !153, file: !154, line: 1295, baseType: !737, size: 512, offset: 39104)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !153, file: !154, line: 1298, baseType: !1689, size: 64, offset: 39616)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64)
!1690 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !154, line: 1298, flags: DIFlagFwdDecl)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !108, file: !109, line: 58, baseType: !152, size: 64, offset: 1536)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !108, file: !109, line: 60, baseType: !22, size: 32, offset: 1600)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !108, file: !109, line: 61, baseType: !22, size: 32, offset: 1632)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !108, file: !109, line: 63, baseType: !48, size: 16, offset: 1664)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !108, file: !109, line: 64, baseType: !48, size: 16, offset: 1680)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !108, file: !109, line: 65, baseType: !48, size: 16, offset: 1696)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !108, file: !109, line: 66, baseType: !48, size: 16, offset: 1712)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !108, file: !109, line: 67, baseType: !48, size: 16, offset: 1728)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !108, file: !109, line: 68, baseType: !48, size: 16, offset: 1744)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !108, file: !109, line: 69, baseType: !48, size: 16, offset: 1760)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !108, file: !109, line: 70, baseType: !48, size: 16, offset: 1776)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !108, file: !109, line: 71, baseType: !48, size: 16, offset: 1792)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !108, file: !109, line: 73, baseType: !48, size: 16, offset: 1808)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !108, file: !109, line: 74, baseType: !48, size: 16, offset: 1824)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !108, file: !109, line: 76, baseType: !48, size: 16, offset: 1840)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !108, file: !109, line: 78, baseType: !94, size: 64, offset: 1856)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !108, file: !109, line: 79, baseType: !56, size: 64, offset: 1920)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !101, file: !28, line: 175, baseType: !107, size: 64, offset: 256)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !101, file: !28, line: 176, baseType: !33, size: 512, offset: 320)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !101, file: !28, line: 178, baseType: !48, size: 16, offset: 832)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !101, file: !28, line: 178, baseType: !48, size: 16, offset: 848)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !101, file: !28, line: 178, baseType: !48, size: 16, offset: 864)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !101, file: !28, line: 178, baseType: !48, size: 16, offset: 880)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !101, file: !28, line: 179, baseType: !48, size: 16, offset: 896)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !101, file: !28, line: 180, baseType: !48, size: 16, offset: 912)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !101, file: !28, line: 181, baseType: !48, size: 16, offset: 928)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !101, file: !28, line: 182, baseType: !48, size: 16, offset: 944)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !101, file: !28, line: 183, baseType: !48, size: 16, offset: 960)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !101, file: !28, line: 184, baseType: !48, size: 16, offset: 976)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !101, file: !28, line: 185, baseType: !48, size: 16, offset: 992)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !101, file: !28, line: 186, baseType: !48, size: 16, offset: 1008)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !101, file: !28, line: 188, baseType: !22, size: 32, offset: 1024)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !101, file: !28, line: 190, baseType: !48, size: 16, offset: 1056)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !101, file: !28, line: 191, baseType: !48, size: 16, offset: 1072)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !101, file: !28, line: 194, baseType: !1726, size: 64, offset: 1088)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 64)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !8, line: 421, size: 960, elements: !1728)
!1728 = !{!1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1762, !1763, !1764, !1765}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1727, file: !8, line: 422, baseType: !1726, size: 64)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1727, file: !8, line: 422, baseType: !1726, size: 64, offset: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1727, file: !8, line: 424, baseType: !48, size: 16, offset: 128)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1727, file: !8, line: 425, baseType: !48, size: 16, offset: 144)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1727, file: !8, line: 426, baseType: !22, size: 32, offset: 160)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1727, file: !8, line: 426, baseType: !22, size: 32, offset: 192)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !1727, file: !8, line: 427, baseType: !756, size: 64, offset: 224)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !1727, file: !8, line: 428, baseType: !1297, size: 48, offset: 288)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !1727, file: !8, line: 431, baseType: !14, size: 8, offset: 336)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1727, file: !8, line: 432, baseType: !14, size: 8, offset: 344)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !1727, file: !8, line: 435, baseType: !48, size: 16, offset: 352)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !1727, file: !8, line: 436, baseType: !48, size: 16, offset: 368)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !1727, file: !8, line: 437, baseType: !22, size: 32, offset: 384)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !1727, file: !8, line: 437, baseType: !22, size: 32, offset: 416)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !1727, file: !8, line: 438, baseType: !1744, size: 64, offset: 448)
!1744 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !1727, file: !8, line: 439, baseType: !22, size: 32, offset: 512)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !1727, file: !8, line: 439, baseType: !22, size: 32, offset: 544)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !1727, file: !8, line: 442, baseType: !48, size: 16, offset: 576)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !1727, file: !8, line: 442, baseType: !48, size: 16, offset: 592)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1727, file: !8, line: 442, baseType: !48, size: 16, offset: 608)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !1727, file: !8, line: 442, baseType: !48, size: 16, offset: 624)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !1727, file: !8, line: 443, baseType: !48, size: 16, offset: 640)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !1727, file: !8, line: 446, baseType: !48, size: 16, offset: 656)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !1727, file: !8, line: 449, baseType: !12, size: 64, offset: 704)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !1727, file: !8, line: 452, baseType: !1755, size: 64, offset: 768)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 64)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !8, line: 463, size: 128, elements: !1757)
!1757 = !{!1758, !1759, !1760, !1761}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !1756, file: !8, line: 464, baseType: !22, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !1756, file: !8, line: 465, baseType: !204, size: 32, offset: 32)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !1756, file: !8, line: 466, baseType: !204, size: 32, offset: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !1756, file: !8, line: 467, baseType: !204, size: 32, offset: 96)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !1727, file: !8, line: 455, baseType: !48, size: 16, offset: 832)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !1727, file: !8, line: 456, baseType: !48, size: 16, offset: 848)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1727, file: !8, line: 457, baseType: !22, size: 32, offset: 864)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1727, file: !8, line: 458, baseType: !56, size: 64, offset: 896)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !101, file: !28, line: 196, baseType: !1767, size: 64, offset: 1152)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !28, line: 55, flags: DIFlagFwdDecl)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !101, file: !28, line: 198, baseType: !1770, size: 64, offset: 1216)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 64)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !8, line: 398, size: 448, elements: !1772)
!1772 = !{!1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1771, file: !8, line: 399, baseType: !1770, size: 64)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1771, file: !8, line: 399, baseType: !1770, size: 64, offset: 64)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !1771, file: !8, line: 400, baseType: !22, size: 32, offset: 128)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1771, file: !8, line: 401, baseType: !22, size: 32, offset: 160)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1771, file: !8, line: 402, baseType: !22, size: 32, offset: 192)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !1771, file: !8, line: 403, baseType: !22, size: 32, offset: 224)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1771, file: !8, line: 404, baseType: !22, size: 32, offset: 256)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1771, file: !8, line: 405, baseType: !22, size: 32, offset: 288)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1771, file: !8, line: 407, baseType: !56, size: 64, offset: 320)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !1771, file: !8, line: 414, baseType: !56, size: 64, offset: 384)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !101, file: !28, line: 200, baseType: !22, size: 32, offset: 1280)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !101, file: !28, line: 200, baseType: !22, size: 32, offset: 1312)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !101, file: !28, line: 201, baseType: !56, size: 64, offset: 1344)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !101, file: !28, line: 203, baseType: !58, size: 128, offset: 1408)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !101, file: !28, line: 204, baseType: !58, size: 128, offset: 1536)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !101, file: !28, line: 205, baseType: !58, size: 128, offset: 1664)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !101, file: !28, line: 207, baseType: !58, size: 128, offset: 1792)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !101, file: !28, line: 208, baseType: !58, size: 128, offset: 1920)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !95, file: !8, line: 495, baseType: !1744, size: 64, offset: 192)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !95, file: !8, line: 496, baseType: !22, size: 32, offset: 256)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !95, file: !8, line: 497, baseType: !56, size: 64, offset: 320)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !95, file: !8, line: 499, baseType: !1744, size: 64, offset: 384)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !95, file: !8, line: 500, baseType: !1744, size: 64, offset: 448)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !95, file: !8, line: 502, baseType: !1744, size: 64, offset: 512)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !95, file: !8, line: 503, baseType: !1744, size: 64, offset: 576)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !95, file: !8, line: 504, baseType: !1744, size: 64, offset: 640)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !95, file: !8, line: 505, baseType: !22, size: 32, offset: 704)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !27, file: !28, line: 343, baseType: !58, size: 128, offset: 1024)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !27, file: !28, line: 344, baseType: !26, size: 64, offset: 1152)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !27, file: !28, line: 345, baseType: !1803, size: 64, offset: 1216)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64)
!1804 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !28, line: 61, flags: DIFlagFwdDecl)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !27, file: !28, line: 346, baseType: !48, size: 16, offset: 1280)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !27, file: !28, line: 346, baseType: !1614, size: 48, offset: 1296)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !9, file: !8, line: 524, baseType: !1808, size: 64, offset: 320)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!1081, !23, !26}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !9, file: !8, line: 530, baseType: !1812, size: 64, offset: 384)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{!22, !23, !26, !1815}
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 64)
!1816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1727)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !9, file: !8, line: 531, baseType: !1818, size: 64, offset: 448)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1819 = !DISubroutineType(types: !1820)
!1820 = !{null, !23, !26}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !9, file: !8, line: 532, baseType: !1812, size: 64, offset: 512)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !9, file: !8, line: 536, baseType: !1823, size: 64, offset: 576)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = !DISubroutineType(types: !1825)
!1825 = !{!22, !23}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !9, file: !8, line: 539, baseType: !1818, size: 64, offset: 640)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !9, file: !8, line: 542, baseType: !81, size: 64, offset: 704)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !9, file: !8, line: 545, baseType: !43, size: 64, offset: 768)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !9, file: !8, line: 549, baseType: !1830, size: 64, offset: 832)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64)
!1831 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !25, line: 333, baseType: !1832)
!1832 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !25, line: 39, flags: DIFlagFwdDecl)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !9, file: !8, line: 552, baseType: !58, size: 128, offset: 896)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !9, file: !8, line: 555, baseType: !1835, size: 64, offset: 1024)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !28, line: 281, size: 1088, elements: !1837)
!1837 = !{!1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1836, file: !28, line: 282, baseType: !1835, size: 64)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1836, file: !28, line: 282, baseType: !1835, size: 64, offset: 64)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !1836, file: !28, line: 284, baseType: !58, size: 128, offset: 128)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !1836, file: !28, line: 285, baseType: !58, size: 128, offset: 256)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1836, file: !28, line: 287, baseType: !33, size: 512, offset: 384)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !1836, file: !28, line: 288, baseType: !48, size: 16, offset: 896)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !1836, file: !28, line: 289, baseType: !48, size: 16, offset: 912)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1836, file: !28, line: 291, baseType: !48, size: 16, offset: 928)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !1836, file: !28, line: 292, baseType: !48, size: 16, offset: 944)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1836, file: !28, line: 295, baseType: !1823, size: 64, offset: 960)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !1836, file: !28, line: 296, baseType: !56, size: 64, offset: 1024)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !9, file: !8, line: 559, baseType: !56, size: 64, offset: 1088)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !9, file: !8, line: 560, baseType: !1851, size: 64, offset: 1152)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = !DISubroutineType(types: !1853)
!1853 = !{!22, !23, !69}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !9, file: !8, line: 563, baseType: !1855, size: 256, offset: 1216)
!1855 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !25, line: 436, baseType: !1856)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !25, line: 430, size: 256, elements: !1857)
!1857 = !{!1858, !1859, !1862, !1878}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1856, file: !25, line: 431, baseType: !56, size: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !1856, file: !25, line: 432, baseType: !1860, size: 64, offset: 64)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64)
!1861 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !25, line: 417, baseType: !82)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !1856, file: !25, line: 433, baseType: !1863, size: 64, offset: 128)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !25, line: 408, baseType: !1864)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1865 = !DISubroutineType(types: !1866)
!1866 = !{!22, !23, !73, !1867, !1869}
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !25, line: 38, flags: DIFlagFwdDecl)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64)
!1870 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !25, line: 348, baseType: !1871)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !25, line: 337, size: 256, elements: !1872)
!1872 = !{!1873, !1874, !1875, !1876, !1877}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1871, file: !25, line: 339, baseType: !56, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1871, file: !25, line: 342, baseType: !1867, size: 64, offset: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !1871, file: !25, line: 345, baseType: !22, size: 32, offset: 128)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !1871, file: !25, line: 347, baseType: !22, size: 32, offset: 160)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !1871, file: !25, line: 347, baseType: !22, size: 32, offset: 192)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1856, file: !25, line: 434, baseType: !1879, size: 64, offset: 192)
!1879 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !25, line: 409, baseType: !624)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9, file: !8, line: 566, baseType: !48, size: 16, offset: 1472)
!1881 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1882, retainedTypes: !2952, globals: !3201, splitDebugInlining: false, nameTableKind: None)
!1882 = !{!1883, !1896, !1900, !1904, !1937, !1972, !1983, !1991, !2002, !2055, !2059, !2065, !2077, !2085, !2093, !2098, !2948}
!1883 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !231, line: 339, baseType: !278, size: 32, elements: !1884)
!1884 = !{!1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895}
!1885 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!1886 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!1887 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!1888 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!1889 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!1890 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!1891 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!1892 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!1893 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!1894 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!1895 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!1896 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eVisible_Types", file: !3, line: 98, baseType: !278, size: 32, elements: !1897)
!1897 = !{!1898, !1899}
!1898 = !DIEnumerator(name: "HIDDEN", value: 1, isUnsigned: true)
!1899 = !DIEnumerator(name: "VISIBLE", value: 0, isUnsigned: true)
!1900 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eEndPoint_Types", file: !3, line: 103, baseType: !278, size: 32, elements: !1901)
!1901 = !{!1902, !1903}
!1902 = !DIEnumerator(name: "FIRST", value: 1, isUnsigned: true)
!1903 = !DIEnumerator(name: "LAST", value: 0, isUnsigned: true)
!1904 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyFlag", file: !25, line: 151, baseType: !278, size: 32, elements: !1905)
!1905 = !{!1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936}
!1906 = !DIEnumerator(name: "PROP_EDITABLE", value: 1, isUnsigned: true)
!1907 = !DIEnumerator(name: "PROP_LIB_EXCEPTION", value: 65536, isUnsigned: true)
!1908 = !DIEnumerator(name: "PROP_ANIMATABLE", value: 2, isUnsigned: true)
!1909 = !DIEnumerator(name: "PROP_ICONS_CONSECUTIVE", value: 4096, isUnsigned: true)
!1910 = !DIEnumerator(name: "PROP_HIDDEN", value: 524288, isUnsigned: true)
!1911 = !DIEnumerator(name: "PROP_SKIP_SAVE", value: 268435456, isUnsigned: true)
!1912 = !DIEnumerator(name: "PROP_REQUIRED", value: 4, isUnsigned: true)
!1913 = !DIEnumerator(name: "PROP_OUTPUT", value: 8, isUnsigned: true)
!1914 = !DIEnumerator(name: "PROP_RNAPTR", value: 2048, isUnsigned: true)
!1915 = !DIEnumerator(name: "PROP_PYFUNC_OPTIONAL", value: 1073741824, isUnsigned: true)
!1916 = !DIEnumerator(name: "PROP_REGISTER", value: 16, isUnsigned: true)
!1917 = !DIEnumerator(name: "PROP_REGISTER_OPTIONAL", value: 48, isUnsigned: true)
!1918 = !DIEnumerator(name: "PROP_PROPORTIONAL", value: 67108864, isUnsigned: true)
!1919 = !DIEnumerator(name: "PROP_ID_REFCOUNT", value: 64, isUnsigned: true)
!1920 = !DIEnumerator(name: "PROP_ID_SELF_CHECK", value: 1048576, isUnsigned: true)
!1921 = !DIEnumerator(name: "PROP_NEVER_NULL", value: 262144, isUnsigned: true)
!1922 = !DIEnumerator(name: "PROP_NEVER_UNLINK", value: 33554432, isUnsigned: true)
!1923 = !DIEnumerator(name: "PROP_ENUM_FLAG", value: 2097152, isUnsigned: true)
!1924 = !DIEnumerator(name: "PROP_CONTEXT_UPDATE", value: 4194304, isUnsigned: true)
!1925 = !DIEnumerator(name: "PROP_CONTEXT_PROPERTY_UPDATE", value: 138412032, isUnsigned: true)
!1926 = !DIEnumerator(name: "PROP_THICK_WRAP", value: 8388608, isUnsigned: true)
!1927 = !DIEnumerator(name: "PROP_BUILTIN", value: 128, isUnsigned: true)
!1928 = !DIEnumerator(name: "PROP_EXPORT", value: 256, isUnsigned: true)
!1929 = !DIEnumerator(name: "PROP_RUNTIME", value: 512, isUnsigned: true)
!1930 = !DIEnumerator(name: "PROP_IDPROPERTY", value: 1024, isUnsigned: true)
!1931 = !DIEnumerator(name: "PROP_RAW_ACCESS", value: 8192, isUnsigned: true)
!1932 = !DIEnumerator(name: "PROP_RAW_ARRAY", value: 16384, isUnsigned: true)
!1933 = !DIEnumerator(name: "PROP_FREE_POINTERS", value: 32768, isUnsigned: true)
!1934 = !DIEnumerator(name: "PROP_DYNAMIC", value: 131072, isUnsigned: true)
!1935 = !DIEnumerator(name: "PROP_ENUM_NO_CONTEXT", value: 16777216, isUnsigned: true)
!1936 = !DIEnumerator(name: "PROP_ENUM_NO_TRANSLATE", value: 536870912, isUnsigned: true)
!1937 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "TfmMode", file: !1938, line: 56, baseType: !22, size: 32, elements: !1939)
!1938 = !DIFile(filename: "blender/source/blender/editors/include/ED_transform.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1939 = !{!1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971}
!1940 = !DIEnumerator(name: "TFM_INIT", value: -1)
!1941 = !DIEnumerator(name: "TFM_DUMMY", value: 0)
!1942 = !DIEnumerator(name: "TFM_TRANSLATION", value: 1)
!1943 = !DIEnumerator(name: "TFM_ROTATION", value: 2)
!1944 = !DIEnumerator(name: "TFM_RESIZE", value: 3)
!1945 = !DIEnumerator(name: "TFM_SKIN_RESIZE", value: 4)
!1946 = !DIEnumerator(name: "TFM_TOSPHERE", value: 5)
!1947 = !DIEnumerator(name: "TFM_SHEAR", value: 6)
!1948 = !DIEnumerator(name: "TFM_BEND", value: 7)
!1949 = !DIEnumerator(name: "TFM_SHRINKFATTEN", value: 8)
!1950 = !DIEnumerator(name: "TFM_TILT", value: 9)
!1951 = !DIEnumerator(name: "TFM_TRACKBALL", value: 10)
!1952 = !DIEnumerator(name: "TFM_PUSHPULL", value: 11)
!1953 = !DIEnumerator(name: "TFM_CREASE", value: 12)
!1954 = !DIEnumerator(name: "TFM_MIRROR", value: 13)
!1955 = !DIEnumerator(name: "TFM_BONESIZE", value: 14)
!1956 = !DIEnumerator(name: "TFM_BONE_ENVELOPE", value: 15)
!1957 = !DIEnumerator(name: "TFM_CURVE_SHRINKFATTEN", value: 16)
!1958 = !DIEnumerator(name: "TFM_MASK_SHRINKFATTEN", value: 17)
!1959 = !DIEnumerator(name: "TFM_BONE_ROLL", value: 18)
!1960 = !DIEnumerator(name: "TFM_TIME_TRANSLATE", value: 19)
!1961 = !DIEnumerator(name: "TFM_TIME_SLIDE", value: 20)
!1962 = !DIEnumerator(name: "TFM_TIME_SCALE", value: 21)
!1963 = !DIEnumerator(name: "TFM_TIME_EXTEND", value: 22)
!1964 = !DIEnumerator(name: "TFM_TIME_DUPLICATE", value: 23)
!1965 = !DIEnumerator(name: "TFM_BAKE_TIME", value: 24)
!1966 = !DIEnumerator(name: "TFM_DEPRECATED", value: 25)
!1967 = !DIEnumerator(name: "TFM_BWEIGHT", value: 26)
!1968 = !DIEnumerator(name: "TFM_ALIGN", value: 27)
!1969 = !DIEnumerator(name: "TFM_EDGE_SLIDE", value: 28)
!1970 = !DIEnumerator(name: "TFM_VERT_SLIDE", value: 29)
!1971 = !DIEnumerator(name: "TFM_SEQ_SLIDE", value: 30)
!1972 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !28, line: 67, baseType: !278, size: 32, elements: !1973)
!1973 = !{!1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982}
!1974 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!1975 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!1976 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!1977 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!1978 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!1979 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!1980 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!1981 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!1982 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!1983 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !28, line: 351, baseType: !278, size: 32, elements: !1984)
!1984 = !{!1985, !1986, !1987, !1988, !1989, !1990}
!1985 = !DIEnumerator(name: "OPERATOR_RUNNING_MODAL", value: 1, isUnsigned: true)
!1986 = !DIEnumerator(name: "OPERATOR_CANCELLED", value: 2, isUnsigned: true)
!1987 = !DIEnumerator(name: "OPERATOR_FINISHED", value: 4, isUnsigned: true)
!1988 = !DIEnumerator(name: "OPERATOR_PASS_THROUGH", value: 8, isUnsigned: true)
!1989 = !DIEnumerator(name: "OPERATOR_HANDLED", value: 16, isUnsigned: true)
!1990 = !DIEnumerator(name: "OPERATOR_INTERFACE", value: 32, isUnsigned: true)
!1991 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !231, line: 377, baseType: !278, size: 32, elements: !1992)
!1992 = !{!1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001}
!1993 = !DIEnumerator(name: "PARTYPE", value: 15, isUnsigned: true)
!1994 = !DIEnumerator(name: "PAROBJECT", value: 0, isUnsigned: true)
!1995 = !DIEnumerator(name: "PARCURVE", value: 1, isUnsigned: true)
!1996 = !DIEnumerator(name: "PARKEY", value: 2, isUnsigned: true)
!1997 = !DIEnumerator(name: "PARSKEL", value: 4, isUnsigned: true)
!1998 = !DIEnumerator(name: "PARVERT1", value: 5, isUnsigned: true)
!1999 = !DIEnumerator(name: "PARVERT3", value: 6, isUnsigned: true)
!2000 = !DIEnumerator(name: "PARBONE", value: 7, isUnsigned: true)
!2001 = !DIEnumerator(name: "PARSLOW", value: 16, isUnsigned: true)
!2002 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierType", file: !2003, line: 35, baseType: !278, size: 32, elements: !2004)
!2003 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2004 = !{!2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054}
!2005 = !DIEnumerator(name: "eModifierType_None", value: 0, isUnsigned: true)
!2006 = !DIEnumerator(name: "eModifierType_Subsurf", value: 1, isUnsigned: true)
!2007 = !DIEnumerator(name: "eModifierType_Lattice", value: 2, isUnsigned: true)
!2008 = !DIEnumerator(name: "eModifierType_Curve", value: 3, isUnsigned: true)
!2009 = !DIEnumerator(name: "eModifierType_Build", value: 4, isUnsigned: true)
!2010 = !DIEnumerator(name: "eModifierType_Mirror", value: 5, isUnsigned: true)
!2011 = !DIEnumerator(name: "eModifierType_Decimate", value: 6, isUnsigned: true)
!2012 = !DIEnumerator(name: "eModifierType_Wave", value: 7, isUnsigned: true)
!2013 = !DIEnumerator(name: "eModifierType_Armature", value: 8, isUnsigned: true)
!2014 = !DIEnumerator(name: "eModifierType_Hook", value: 9, isUnsigned: true)
!2015 = !DIEnumerator(name: "eModifierType_Softbody", value: 10, isUnsigned: true)
!2016 = !DIEnumerator(name: "eModifierType_Boolean", value: 11, isUnsigned: true)
!2017 = !DIEnumerator(name: "eModifierType_Array", value: 12, isUnsigned: true)
!2018 = !DIEnumerator(name: "eModifierType_EdgeSplit", value: 13, isUnsigned: true)
!2019 = !DIEnumerator(name: "eModifierType_Displace", value: 14, isUnsigned: true)
!2020 = !DIEnumerator(name: "eModifierType_UVProject", value: 15, isUnsigned: true)
!2021 = !DIEnumerator(name: "eModifierType_Smooth", value: 16, isUnsigned: true)
!2022 = !DIEnumerator(name: "eModifierType_Cast", value: 17, isUnsigned: true)
!2023 = !DIEnumerator(name: "eModifierType_MeshDeform", value: 18, isUnsigned: true)
!2024 = !DIEnumerator(name: "eModifierType_ParticleSystem", value: 19, isUnsigned: true)
!2025 = !DIEnumerator(name: "eModifierType_ParticleInstance", value: 20, isUnsigned: true)
!2026 = !DIEnumerator(name: "eModifierType_Explode", value: 21, isUnsigned: true)
!2027 = !DIEnumerator(name: "eModifierType_Cloth", value: 22, isUnsigned: true)
!2028 = !DIEnumerator(name: "eModifierType_Collision", value: 23, isUnsigned: true)
!2029 = !DIEnumerator(name: "eModifierType_Bevel", value: 24, isUnsigned: true)
!2030 = !DIEnumerator(name: "eModifierType_Shrinkwrap", value: 25, isUnsigned: true)
!2031 = !DIEnumerator(name: "eModifierType_Fluidsim", value: 26, isUnsigned: true)
!2032 = !DIEnumerator(name: "eModifierType_Mask", value: 27, isUnsigned: true)
!2033 = !DIEnumerator(name: "eModifierType_SimpleDeform", value: 28, isUnsigned: true)
!2034 = !DIEnumerator(name: "eModifierType_Multires", value: 29, isUnsigned: true)
!2035 = !DIEnumerator(name: "eModifierType_Surface", value: 30, isUnsigned: true)
!2036 = !DIEnumerator(name: "eModifierType_Smoke", value: 31, isUnsigned: true)
!2037 = !DIEnumerator(name: "eModifierType_ShapeKey", value: 32, isUnsigned: true)
!2038 = !DIEnumerator(name: "eModifierType_Solidify", value: 33, isUnsigned: true)
!2039 = !DIEnumerator(name: "eModifierType_Screw", value: 34, isUnsigned: true)
!2040 = !DIEnumerator(name: "eModifierType_Warp", value: 35, isUnsigned: true)
!2041 = !DIEnumerator(name: "eModifierType_WeightVGEdit", value: 36, isUnsigned: true)
!2042 = !DIEnumerator(name: "eModifierType_WeightVGMix", value: 37, isUnsigned: true)
!2043 = !DIEnumerator(name: "eModifierType_WeightVGProximity", value: 38, isUnsigned: true)
!2044 = !DIEnumerator(name: "eModifierType_Ocean", value: 39, isUnsigned: true)
!2045 = !DIEnumerator(name: "eModifierType_DynamicPaint", value: 40, isUnsigned: true)
!2046 = !DIEnumerator(name: "eModifierType_Remesh", value: 41, isUnsigned: true)
!2047 = !DIEnumerator(name: "eModifierType_Skin", value: 42, isUnsigned: true)
!2048 = !DIEnumerator(name: "eModifierType_LaplacianSmooth", value: 43, isUnsigned: true)
!2049 = !DIEnumerator(name: "eModifierType_Triangulate", value: 44, isUnsigned: true)
!2050 = !DIEnumerator(name: "eModifierType_UVWarp", value: 45, isUnsigned: true)
!2051 = !DIEnumerator(name: "eModifierType_MeshCache", value: 46, isUnsigned: true)
!2052 = !DIEnumerator(name: "eModifierType_LaplacianDeform", value: 47, isUnsigned: true)
!2053 = !DIEnumerator(name: "eModifierType_Wireframe", value: 48, isUnsigned: true)
!2054 = !DIEnumerator(name: "NUM_MODIFIER_TYPES", value: 49, isUnsigned: true)
!2055 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !252, line: 110, baseType: !278, size: 32, elements: !2056)
!2056 = !{!2057, !2058}
!2057 = !DIEnumerator(name: "KEY_NORMAL", value: 0, isUnsigned: true)
!2058 = !DIEnumerator(name: "KEY_RELATIVE", value: 1, isUnsigned: true)
!2059 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !231, line: 519, baseType: !278, size: 32, elements: !2060)
!2060 = !{!2061, !2062, !2063, !2064}
!2061 = !DIEnumerator(name: "OB_RECALC_OB", value: 1, isUnsigned: true)
!2062 = !DIEnumerator(name: "OB_RECALC_DATA", value: 2, isUnsigned: true)
!2063 = !DIEnumerator(name: "OB_RECALC_TIME", value: 4, isUnsigned: true)
!2064 = !DIEnumerator(name: "OB_RECALC_ALL", value: 7, isUnsigned: true)
!2065 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2066, line: 123, baseType: !278, size: 32, elements: !2067)
!2066 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_global.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2067 = !{!2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076}
!2068 = !DIEnumerator(name: "G_DEBUG", value: 1, isUnsigned: true)
!2069 = !DIEnumerator(name: "G_DEBUG_FFMPEG", value: 2, isUnsigned: true)
!2070 = !DIEnumerator(name: "G_DEBUG_PYTHON", value: 4, isUnsigned: true)
!2071 = !DIEnumerator(name: "G_DEBUG_EVENTS", value: 8, isUnsigned: true)
!2072 = !DIEnumerator(name: "G_DEBUG_HANDLERS", value: 16, isUnsigned: true)
!2073 = !DIEnumerator(name: "G_DEBUG_WM", value: 32, isUnsigned: true)
!2074 = !DIEnumerator(name: "G_DEBUG_JOBS", value: 64, isUnsigned: true)
!2075 = !DIEnumerator(name: "G_DEBUG_FREESTYLE", value: 128, isUnsigned: true)
!2076 = !DIEnumerator(name: "G_DEBUG_DEPSGRAPH", value: 256, isUnsigned: true)
!2077 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2078, line: 119, baseType: !278, size: 32, elements: !2079)
!2078 = !DIFile(filename: "blender/source/blender/editors/include/ED_view3d.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2079 = !{!2080, !2081, !2082, !2083, !2084}
!2080 = !DIEnumerator(name: "V3D_PROJ_TEST_NOP", value: 0, isUnsigned: true)
!2081 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_BB", value: 1, isUnsigned: true)
!2082 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_WIN", value: 2, isUnsigned: true)
!2083 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_NEAR", value: 4, isUnsigned: true)
!2084 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_ZERO", value: 8, isUnsigned: true)
!2085 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBezTriple_Handle", file: !458, line: 361, baseType: !278, size: 32, elements: !2086)
!2086 = !{!2087, !2088, !2089, !2090, !2091, !2092}
!2087 = !DIEnumerator(name: "HD_FREE", value: 0, isUnsigned: true)
!2088 = !DIEnumerator(name: "HD_AUTO", value: 1, isUnsigned: true)
!2089 = !DIEnumerator(name: "HD_VECT", value: 2, isUnsigned: true)
!2090 = !DIEnumerator(name: "HD_ALIGN", value: 3, isUnsigned: true)
!2091 = !DIEnumerator(name: "HD_AUTO_ANIM", value: 4, isUnsigned: true)
!2092 = !DIEnumerator(name: "HD_ALIGN_DOUBLESIDE", value: 5, isUnsigned: true)
!2093 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "SnapMode", file: !1938, line: 172, baseType: !278, size: 32, elements: !2094)
!2094 = !{!2095, !2096, !2097}
!2095 = !DIEnumerator(name: "SNAP_ALL", value: 0, isUnsigned: true)
!2096 = !DIEnumerator(name: "SNAP_NOT_SELECTED", value: 1, isUnsigned: true)
!2097 = !DIEnumerator(name: "SNAP_NOT_OBEDIT", value: 2, isUnsigned: true)
!2098 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2099, line: 40, baseType: !278, size: 32, elements: !2100)
!2099 = !DIFile(filename: "blender/source/blender/editors/include/UI_resources.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2100 = !{!2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947}
!2101 = !DIEnumerator(name: "ICON_NONE", value: 0, isUnsigned: true)
!2102 = !DIEnumerator(name: "ICON_QUESTION", value: 1, isUnsigned: true)
!2103 = !DIEnumerator(name: "ICON_ERROR", value: 2, isUnsigned: true)
!2104 = !DIEnumerator(name: "ICON_CANCEL", value: 3, isUnsigned: true)
!2105 = !DIEnumerator(name: "ICON_TRIA_RIGHT", value: 4, isUnsigned: true)
!2106 = !DIEnumerator(name: "ICON_TRIA_DOWN", value: 5, isUnsigned: true)
!2107 = !DIEnumerator(name: "ICON_TRIA_LEFT", value: 6, isUnsigned: true)
!2108 = !DIEnumerator(name: "ICON_TRIA_UP", value: 7, isUnsigned: true)
!2109 = !DIEnumerator(name: "ICON_ARROW_LEFTRIGHT", value: 8, isUnsigned: true)
!2110 = !DIEnumerator(name: "ICON_PLUS", value: 9, isUnsigned: true)
!2111 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_DOWN", value: 10, isUnsigned: true)
!2112 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_RIGHT", value: 11, isUnsigned: true)
!2113 = !DIEnumerator(name: "ICON_RADIOBUT_OFF", value: 12, isUnsigned: true)
!2114 = !DIEnumerator(name: "ICON_RADIOBUT_ON", value: 13, isUnsigned: true)
!2115 = !DIEnumerator(name: "ICON_MENU_PANEL", value: 14, isUnsigned: true)
!2116 = !DIEnumerator(name: "ICON_BLENDER", value: 15, isUnsigned: true)
!2117 = !DIEnumerator(name: "ICON_GRIP", value: 16, isUnsigned: true)
!2118 = !DIEnumerator(name: "ICON_DOT", value: 17, isUnsigned: true)
!2119 = !DIEnumerator(name: "ICON_COLLAPSEMENU", value: 18, isUnsigned: true)
!2120 = !DIEnumerator(name: "ICON_X", value: 19, isUnsigned: true)
!2121 = !DIEnumerator(name: "ICON_BLANK005", value: 20, isUnsigned: true)
!2122 = !DIEnumerator(name: "ICON_GO_LEFT", value: 21, isUnsigned: true)
!2123 = !DIEnumerator(name: "ICON_PLUG", value: 22, isUnsigned: true)
!2124 = !DIEnumerator(name: "ICON_UI", value: 23, isUnsigned: true)
!2125 = !DIEnumerator(name: "ICON_NODE", value: 24, isUnsigned: true)
!2126 = !DIEnumerator(name: "ICON_NODE_SEL", value: 25, isUnsigned: true)
!2127 = !DIEnumerator(name: "ICON_FULLSCREEN", value: 26, isUnsigned: true)
!2128 = !DIEnumerator(name: "ICON_SPLITSCREEN", value: 27, isUnsigned: true)
!2129 = !DIEnumerator(name: "ICON_RIGHTARROW_THIN", value: 28, isUnsigned: true)
!2130 = !DIEnumerator(name: "ICON_BORDERMOVE", value: 29, isUnsigned: true)
!2131 = !DIEnumerator(name: "ICON_VIEWZOOM", value: 30, isUnsigned: true)
!2132 = !DIEnumerator(name: "ICON_ZOOMIN", value: 31, isUnsigned: true)
!2133 = !DIEnumerator(name: "ICON_ZOOMOUT", value: 32, isUnsigned: true)
!2134 = !DIEnumerator(name: "ICON_PANEL_CLOSE", value: 33, isUnsigned: true)
!2135 = !DIEnumerator(name: "ICON_COPY_ID", value: 34, isUnsigned: true)
!2136 = !DIEnumerator(name: "ICON_EYEDROPPER", value: 35, isUnsigned: true)
!2137 = !DIEnumerator(name: "ICON_LINK_AREA", value: 36, isUnsigned: true)
!2138 = !DIEnumerator(name: "ICON_AUTO", value: 37, isUnsigned: true)
!2139 = !DIEnumerator(name: "ICON_CHECKBOX_DEHLT", value: 38, isUnsigned: true)
!2140 = !DIEnumerator(name: "ICON_CHECKBOX_HLT", value: 39, isUnsigned: true)
!2141 = !DIEnumerator(name: "ICON_UNLOCKED", value: 40, isUnsigned: true)
!2142 = !DIEnumerator(name: "ICON_LOCKED", value: 41, isUnsigned: true)
!2143 = !DIEnumerator(name: "ICON_UNPINNED", value: 42, isUnsigned: true)
!2144 = !DIEnumerator(name: "ICON_PINNED", value: 43, isUnsigned: true)
!2145 = !DIEnumerator(name: "ICON_SCREEN_BACK", value: 44, isUnsigned: true)
!2146 = !DIEnumerator(name: "ICON_RIGHTARROW", value: 45, isUnsigned: true)
!2147 = !DIEnumerator(name: "ICON_DOWNARROW_HLT", value: 46, isUnsigned: true)
!2148 = !DIEnumerator(name: "ICON_DOTSUP", value: 47, isUnsigned: true)
!2149 = !DIEnumerator(name: "ICON_DOTSDOWN", value: 48, isUnsigned: true)
!2150 = !DIEnumerator(name: "ICON_LINK", value: 49, isUnsigned: true)
!2151 = !DIEnumerator(name: "ICON_INLINK", value: 50, isUnsigned: true)
!2152 = !DIEnumerator(name: "ICON_PLUGIN", value: 51, isUnsigned: true)
!2153 = !DIEnumerator(name: "ICON_HELP", value: 52, isUnsigned: true)
!2154 = !DIEnumerator(name: "ICON_GHOST_ENABLED", value: 53, isUnsigned: true)
!2155 = !DIEnumerator(name: "ICON_COLOR", value: 54, isUnsigned: true)
!2156 = !DIEnumerator(name: "ICON_LINKED", value: 55, isUnsigned: true)
!2157 = !DIEnumerator(name: "ICON_UNLINKED", value: 56, isUnsigned: true)
!2158 = !DIEnumerator(name: "ICON_HAND", value: 57, isUnsigned: true)
!2159 = !DIEnumerator(name: "ICON_ZOOM_ALL", value: 58, isUnsigned: true)
!2160 = !DIEnumerator(name: "ICON_ZOOM_SELECTED", value: 59, isUnsigned: true)
!2161 = !DIEnumerator(name: "ICON_ZOOM_PREVIOUS", value: 60, isUnsigned: true)
!2162 = !DIEnumerator(name: "ICON_ZOOM_IN", value: 61, isUnsigned: true)
!2163 = !DIEnumerator(name: "ICON_ZOOM_OUT", value: 62, isUnsigned: true)
!2164 = !DIEnumerator(name: "ICON_RENDER_REGION", value: 63, isUnsigned: true)
!2165 = !DIEnumerator(name: "ICON_BORDER_RECT", value: 64, isUnsigned: true)
!2166 = !DIEnumerator(name: "ICON_BORDER_LASSO", value: 65, isUnsigned: true)
!2167 = !DIEnumerator(name: "ICON_FREEZE", value: 66, isUnsigned: true)
!2168 = !DIEnumerator(name: "ICON_STYLUS_PRESSURE", value: 67, isUnsigned: true)
!2169 = !DIEnumerator(name: "ICON_GHOST_DISABLED", value: 68, isUnsigned: true)
!2170 = !DIEnumerator(name: "ICON_NEW", value: 69, isUnsigned: true)
!2171 = !DIEnumerator(name: "ICON_FILE_TICK", value: 70, isUnsigned: true)
!2172 = !DIEnumerator(name: "ICON_QUIT", value: 71, isUnsigned: true)
!2173 = !DIEnumerator(name: "ICON_URL", value: 72, isUnsigned: true)
!2174 = !DIEnumerator(name: "ICON_RECOVER_LAST", value: 73, isUnsigned: true)
!2175 = !DIEnumerator(name: "ICON_BLANK038", value: 74, isUnsigned: true)
!2176 = !DIEnumerator(name: "ICON_FULLSCREEN_ENTER", value: 75, isUnsigned: true)
!2177 = !DIEnumerator(name: "ICON_FULLSCREEN_EXIT", value: 76, isUnsigned: true)
!2178 = !DIEnumerator(name: "ICON_BLANK1", value: 77, isUnsigned: true)
!2179 = !DIEnumerator(name: "ICON_LAMP", value: 78, isUnsigned: true)
!2180 = !DIEnumerator(name: "ICON_MATERIAL", value: 79, isUnsigned: true)
!2181 = !DIEnumerator(name: "ICON_TEXTURE", value: 80, isUnsigned: true)
!2182 = !DIEnumerator(name: "ICON_ANIM", value: 81, isUnsigned: true)
!2183 = !DIEnumerator(name: "ICON_WORLD", value: 82, isUnsigned: true)
!2184 = !DIEnumerator(name: "ICON_SCENE", value: 83, isUnsigned: true)
!2185 = !DIEnumerator(name: "ICON_EDIT", value: 84, isUnsigned: true)
!2186 = !DIEnumerator(name: "ICON_GAME", value: 85, isUnsigned: true)
!2187 = !DIEnumerator(name: "ICON_RADIO", value: 86, isUnsigned: true)
!2188 = !DIEnumerator(name: "ICON_SCRIPT", value: 87, isUnsigned: true)
!2189 = !DIEnumerator(name: "ICON_PARTICLES", value: 88, isUnsigned: true)
!2190 = !DIEnumerator(name: "ICON_PHYSICS", value: 89, isUnsigned: true)
!2191 = !DIEnumerator(name: "ICON_SPEAKER", value: 90, isUnsigned: true)
!2192 = !DIEnumerator(name: "ICON_TEXTURE_SHADED", value: 91, isUnsigned: true)
!2193 = !DIEnumerator(name: "ICON_BLANK042", value: 92, isUnsigned: true)
!2194 = !DIEnumerator(name: "ICON_BLANK043", value: 93, isUnsigned: true)
!2195 = !DIEnumerator(name: "ICON_BLANK044", value: 94, isUnsigned: true)
!2196 = !DIEnumerator(name: "ICON_BLANK045", value: 95, isUnsigned: true)
!2197 = !DIEnumerator(name: "ICON_BLANK046", value: 96, isUnsigned: true)
!2198 = !DIEnumerator(name: "ICON_BLANK047", value: 97, isUnsigned: true)
!2199 = !DIEnumerator(name: "ICON_BLANK048", value: 98, isUnsigned: true)
!2200 = !DIEnumerator(name: "ICON_BLANK049", value: 99, isUnsigned: true)
!2201 = !DIEnumerator(name: "ICON_BLANK050", value: 100, isUnsigned: true)
!2202 = !DIEnumerator(name: "ICON_BLANK051", value: 101, isUnsigned: true)
!2203 = !DIEnumerator(name: "ICON_BLANK052", value: 102, isUnsigned: true)
!2204 = !DIEnumerator(name: "ICON_BLANK052b", value: 103, isUnsigned: true)
!2205 = !DIEnumerator(name: "ICON_VIEW3D", value: 104, isUnsigned: true)
!2206 = !DIEnumerator(name: "ICON_IPO", value: 105, isUnsigned: true)
!2207 = !DIEnumerator(name: "ICON_OOPS", value: 106, isUnsigned: true)
!2208 = !DIEnumerator(name: "ICON_BUTS", value: 107, isUnsigned: true)
!2209 = !DIEnumerator(name: "ICON_FILESEL", value: 108, isUnsigned: true)
!2210 = !DIEnumerator(name: "ICON_IMAGE_COL", value: 109, isUnsigned: true)
!2211 = !DIEnumerator(name: "ICON_INFO", value: 110, isUnsigned: true)
!2212 = !DIEnumerator(name: "ICON_SEQUENCE", value: 111, isUnsigned: true)
!2213 = !DIEnumerator(name: "ICON_TEXT", value: 112, isUnsigned: true)
!2214 = !DIEnumerator(name: "ICON_IMASEL", value: 113, isUnsigned: true)
!2215 = !DIEnumerator(name: "ICON_SOUND", value: 114, isUnsigned: true)
!2216 = !DIEnumerator(name: "ICON_ACTION", value: 115, isUnsigned: true)
!2217 = !DIEnumerator(name: "ICON_NLA", value: 116, isUnsigned: true)
!2218 = !DIEnumerator(name: "ICON_SCRIPTWIN", value: 117, isUnsigned: true)
!2219 = !DIEnumerator(name: "ICON_TIME", value: 118, isUnsigned: true)
!2220 = !DIEnumerator(name: "ICON_NODETREE", value: 119, isUnsigned: true)
!2221 = !DIEnumerator(name: "ICON_LOGIC", value: 120, isUnsigned: true)
!2222 = !DIEnumerator(name: "ICON_CONSOLE", value: 121, isUnsigned: true)
!2223 = !DIEnumerator(name: "ICON_PREFERENCES", value: 122, isUnsigned: true)
!2224 = !DIEnumerator(name: "ICON_CLIP", value: 123, isUnsigned: true)
!2225 = !DIEnumerator(name: "ICON_ASSET_MANAGER", value: 124, isUnsigned: true)
!2226 = !DIEnumerator(name: "ICON_BLANK057", value: 125, isUnsigned: true)
!2227 = !DIEnumerator(name: "ICON_BLANK058", value: 126, isUnsigned: true)
!2228 = !DIEnumerator(name: "ICON_BLANK059", value: 127, isUnsigned: true)
!2229 = !DIEnumerator(name: "ICON_BLANK060", value: 128, isUnsigned: true)
!2230 = !DIEnumerator(name: "ICON_BLANK061", value: 129, isUnsigned: true)
!2231 = !DIEnumerator(name: "ICON_OBJECT_DATAMODE", value: 130, isUnsigned: true)
!2232 = !DIEnumerator(name: "ICON_EDITMODE_HLT", value: 131, isUnsigned: true)
!2233 = !DIEnumerator(name: "ICON_FACESEL_HLT", value: 132, isUnsigned: true)
!2234 = !DIEnumerator(name: "ICON_VPAINT_HLT", value: 133, isUnsigned: true)
!2235 = !DIEnumerator(name: "ICON_TPAINT_HLT", value: 134, isUnsigned: true)
!2236 = !DIEnumerator(name: "ICON_WPAINT_HLT", value: 135, isUnsigned: true)
!2237 = !DIEnumerator(name: "ICON_SCULPTMODE_HLT", value: 136, isUnsigned: true)
!2238 = !DIEnumerator(name: "ICON_POSE_HLT", value: 137, isUnsigned: true)
!2239 = !DIEnumerator(name: "ICON_PARTICLEMODE", value: 138, isUnsigned: true)
!2240 = !DIEnumerator(name: "ICON_LIGHTPAINT", value: 139, isUnsigned: true)
!2241 = !DIEnumerator(name: "ICON_BLANK063", value: 140, isUnsigned: true)
!2242 = !DIEnumerator(name: "ICON_BLANK064", value: 141, isUnsigned: true)
!2243 = !DIEnumerator(name: "ICON_BLANK065", value: 142, isUnsigned: true)
!2244 = !DIEnumerator(name: "ICON_BLANK066", value: 143, isUnsigned: true)
!2245 = !DIEnumerator(name: "ICON_BLANK067", value: 144, isUnsigned: true)
!2246 = !DIEnumerator(name: "ICON_BLANK068", value: 145, isUnsigned: true)
!2247 = !DIEnumerator(name: "ICON_BLANK069", value: 146, isUnsigned: true)
!2248 = !DIEnumerator(name: "ICON_BLANK070", value: 147, isUnsigned: true)
!2249 = !DIEnumerator(name: "ICON_BLANK071", value: 148, isUnsigned: true)
!2250 = !DIEnumerator(name: "ICON_BLANK072", value: 149, isUnsigned: true)
!2251 = !DIEnumerator(name: "ICON_BLANK073", value: 150, isUnsigned: true)
!2252 = !DIEnumerator(name: "ICON_BLANK074", value: 151, isUnsigned: true)
!2253 = !DIEnumerator(name: "ICON_BLANK075", value: 152, isUnsigned: true)
!2254 = !DIEnumerator(name: "ICON_BLANK076", value: 153, isUnsigned: true)
!2255 = !DIEnumerator(name: "ICON_BLANK077", value: 154, isUnsigned: true)
!2256 = !DIEnumerator(name: "ICON_BLANK077b", value: 155, isUnsigned: true)
!2257 = !DIEnumerator(name: "ICON_SCENE_DATA", value: 156, isUnsigned: true)
!2258 = !DIEnumerator(name: "ICON_RENDERLAYERS", value: 157, isUnsigned: true)
!2259 = !DIEnumerator(name: "ICON_WORLD_DATA", value: 158, isUnsigned: true)
!2260 = !DIEnumerator(name: "ICON_OBJECT_DATA", value: 159, isUnsigned: true)
!2261 = !DIEnumerator(name: "ICON_MESH_DATA", value: 160, isUnsigned: true)
!2262 = !DIEnumerator(name: "ICON_CURVE_DATA", value: 161, isUnsigned: true)
!2263 = !DIEnumerator(name: "ICON_META_DATA", value: 162, isUnsigned: true)
!2264 = !DIEnumerator(name: "ICON_LATTICE_DATA", value: 163, isUnsigned: true)
!2265 = !DIEnumerator(name: "ICON_LAMP_DATA", value: 164, isUnsigned: true)
!2266 = !DIEnumerator(name: "ICON_MATERIAL_DATA", value: 165, isUnsigned: true)
!2267 = !DIEnumerator(name: "ICON_TEXTURE_DATA", value: 166, isUnsigned: true)
!2268 = !DIEnumerator(name: "ICON_ANIM_DATA", value: 167, isUnsigned: true)
!2269 = !DIEnumerator(name: "ICON_CAMERA_DATA", value: 168, isUnsigned: true)
!2270 = !DIEnumerator(name: "ICON_PARTICLE_DATA", value: 169, isUnsigned: true)
!2271 = !DIEnumerator(name: "ICON_LIBRARY_DATA_DIRECT", value: 170, isUnsigned: true)
!2272 = !DIEnumerator(name: "ICON_GROUP", value: 171, isUnsigned: true)
!2273 = !DIEnumerator(name: "ICON_ARMATURE_DATA", value: 172, isUnsigned: true)
!2274 = !DIEnumerator(name: "ICON_POSE_DATA", value: 173, isUnsigned: true)
!2275 = !DIEnumerator(name: "ICON_BONE_DATA", value: 174, isUnsigned: true)
!2276 = !DIEnumerator(name: "ICON_CONSTRAINT", value: 175, isUnsigned: true)
!2277 = !DIEnumerator(name: "ICON_SHAPEKEY_DATA", value: 176, isUnsigned: true)
!2278 = !DIEnumerator(name: "ICON_CONSTRAINT_BONE", value: 177, isUnsigned: true)
!2279 = !DIEnumerator(name: "ICON_CAMERA_STEREO", value: 178, isUnsigned: true)
!2280 = !DIEnumerator(name: "ICON_PACKAGE", value: 179, isUnsigned: true)
!2281 = !DIEnumerator(name: "ICON_UGLYPACKAGE", value: 180, isUnsigned: true)
!2282 = !DIEnumerator(name: "ICON_BLANK079b", value: 181, isUnsigned: true)
!2283 = !DIEnumerator(name: "ICON_BRUSH_DATA", value: 182, isUnsigned: true)
!2284 = !DIEnumerator(name: "ICON_IMAGE_DATA", value: 183, isUnsigned: true)
!2285 = !DIEnumerator(name: "ICON_FILE", value: 184, isUnsigned: true)
!2286 = !DIEnumerator(name: "ICON_FCURVE", value: 185, isUnsigned: true)
!2287 = !DIEnumerator(name: "ICON_FONT_DATA", value: 186, isUnsigned: true)
!2288 = !DIEnumerator(name: "ICON_RENDER_RESULT", value: 187, isUnsigned: true)
!2289 = !DIEnumerator(name: "ICON_SURFACE_DATA", value: 188, isUnsigned: true)
!2290 = !DIEnumerator(name: "ICON_EMPTY_DATA", value: 189, isUnsigned: true)
!2291 = !DIEnumerator(name: "ICON_SETTINGS", value: 190, isUnsigned: true)
!2292 = !DIEnumerator(name: "ICON_RENDER_ANIMATION", value: 191, isUnsigned: true)
!2293 = !DIEnumerator(name: "ICON_RENDER_STILL", value: 192, isUnsigned: true)
!2294 = !DIEnumerator(name: "ICON_BLANK080F", value: 193, isUnsigned: true)
!2295 = !DIEnumerator(name: "ICON_BOIDS", value: 194, isUnsigned: true)
!2296 = !DIEnumerator(name: "ICON_STRANDS", value: 195, isUnsigned: true)
!2297 = !DIEnumerator(name: "ICON_LIBRARY_DATA_INDIRECT", value: 196, isUnsigned: true)
!2298 = !DIEnumerator(name: "ICON_GREASEPENCIL", value: 197, isUnsigned: true)
!2299 = !DIEnumerator(name: "ICON_LINE_DATA", value: 198, isUnsigned: true)
!2300 = !DIEnumerator(name: "ICON_BLANK084", value: 199, isUnsigned: true)
!2301 = !DIEnumerator(name: "ICON_GROUP_BONE", value: 200, isUnsigned: true)
!2302 = !DIEnumerator(name: "ICON_GROUP_VERTEX", value: 201, isUnsigned: true)
!2303 = !DIEnumerator(name: "ICON_GROUP_VCOL", value: 202, isUnsigned: true)
!2304 = !DIEnumerator(name: "ICON_GROUP_UVS", value: 203, isUnsigned: true)
!2305 = !DIEnumerator(name: "ICON_BLANK089", value: 204, isUnsigned: true)
!2306 = !DIEnumerator(name: "ICON_BLANK090", value: 205, isUnsigned: true)
!2307 = !DIEnumerator(name: "ICON_RNA", value: 206, isUnsigned: true)
!2308 = !DIEnumerator(name: "ICON_RNA_ADD", value: 207, isUnsigned: true)
!2309 = !DIEnumerator(name: "ICON_BLANK092", value: 208, isUnsigned: true)
!2310 = !DIEnumerator(name: "ICON_BLANK093", value: 209, isUnsigned: true)
!2311 = !DIEnumerator(name: "ICON_BLANK094", value: 210, isUnsigned: true)
!2312 = !DIEnumerator(name: "ICON_BLANK095", value: 211, isUnsigned: true)
!2313 = !DIEnumerator(name: "ICON_BLANK096", value: 212, isUnsigned: true)
!2314 = !DIEnumerator(name: "ICON_BLANK097", value: 213, isUnsigned: true)
!2315 = !DIEnumerator(name: "ICON_BLANK098", value: 214, isUnsigned: true)
!2316 = !DIEnumerator(name: "ICON_BLANK099", value: 215, isUnsigned: true)
!2317 = !DIEnumerator(name: "ICON_BLANK100", value: 216, isUnsigned: true)
!2318 = !DIEnumerator(name: "ICON_BLANK101", value: 217, isUnsigned: true)
!2319 = !DIEnumerator(name: "ICON_BLANK102", value: 218, isUnsigned: true)
!2320 = !DIEnumerator(name: "ICON_BLANK103", value: 219, isUnsigned: true)
!2321 = !DIEnumerator(name: "ICON_BLANK104", value: 220, isUnsigned: true)
!2322 = !DIEnumerator(name: "ICON_BLANK105", value: 221, isUnsigned: true)
!2323 = !DIEnumerator(name: "ICON_BLANK106", value: 222, isUnsigned: true)
!2324 = !DIEnumerator(name: "ICON_BLANK107", value: 223, isUnsigned: true)
!2325 = !DIEnumerator(name: "ICON_BLANK108", value: 224, isUnsigned: true)
!2326 = !DIEnumerator(name: "ICON_BLANK109", value: 225, isUnsigned: true)
!2327 = !DIEnumerator(name: "ICON_BLANK110", value: 226, isUnsigned: true)
!2328 = !DIEnumerator(name: "ICON_BLANK111", value: 227, isUnsigned: true)
!2329 = !DIEnumerator(name: "ICON_BLANK112", value: 228, isUnsigned: true)
!2330 = !DIEnumerator(name: "ICON_BLANK113", value: 229, isUnsigned: true)
!2331 = !DIEnumerator(name: "ICON_BLANK114", value: 230, isUnsigned: true)
!2332 = !DIEnumerator(name: "ICON_BLANK115", value: 231, isUnsigned: true)
!2333 = !DIEnumerator(name: "ICON_BLANK116", value: 232, isUnsigned: true)
!2334 = !DIEnumerator(name: "ICON_BLANK116b", value: 233, isUnsigned: true)
!2335 = !DIEnumerator(name: "ICON_OUTLINER_OB_EMPTY", value: 234, isUnsigned: true)
!2336 = !DIEnumerator(name: "ICON_OUTLINER_OB_MESH", value: 235, isUnsigned: true)
!2337 = !DIEnumerator(name: "ICON_OUTLINER_OB_CURVE", value: 236, isUnsigned: true)
!2338 = !DIEnumerator(name: "ICON_OUTLINER_OB_LATTICE", value: 237, isUnsigned: true)
!2339 = !DIEnumerator(name: "ICON_OUTLINER_OB_META", value: 238, isUnsigned: true)
!2340 = !DIEnumerator(name: "ICON_OUTLINER_OB_LAMP", value: 239, isUnsigned: true)
!2341 = !DIEnumerator(name: "ICON_OUTLINER_OB_CAMERA", value: 240, isUnsigned: true)
!2342 = !DIEnumerator(name: "ICON_OUTLINER_OB_ARMATURE", value: 241, isUnsigned: true)
!2343 = !DIEnumerator(name: "ICON_OUTLINER_OB_FONT", value: 242, isUnsigned: true)
!2344 = !DIEnumerator(name: "ICON_OUTLINER_OB_SURFACE", value: 243, isUnsigned: true)
!2345 = !DIEnumerator(name: "ICON_OUTLINER_OB_SPEAKER", value: 244, isUnsigned: true)
!2346 = !DIEnumerator(name: "ICON_BLANK120", value: 245, isUnsigned: true)
!2347 = !DIEnumerator(name: "ICON_BLANK121", value: 246, isUnsigned: true)
!2348 = !DIEnumerator(name: "ICON_BLANK122", value: 247, isUnsigned: true)
!2349 = !DIEnumerator(name: "ICON_BLANK123", value: 248, isUnsigned: true)
!2350 = !DIEnumerator(name: "ICON_BLANK124", value: 249, isUnsigned: true)
!2351 = !DIEnumerator(name: "ICON_BLANK125", value: 250, isUnsigned: true)
!2352 = !DIEnumerator(name: "ICON_BLANK126", value: 251, isUnsigned: true)
!2353 = !DIEnumerator(name: "ICON_BLANK127", value: 252, isUnsigned: true)
!2354 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_OFF", value: 253, isUnsigned: true)
!2355 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_ON", value: 254, isUnsigned: true)
!2356 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_OFF", value: 255, isUnsigned: true)
!2357 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_ON", value: 256, isUnsigned: true)
!2358 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_OFF", value: 257, isUnsigned: true)
!2359 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_ON", value: 258, isUnsigned: true)
!2360 = !DIEnumerator(name: "ICON_BLANK127b", value: 259, isUnsigned: true)
!2361 = !DIEnumerator(name: "ICON_OUTLINER_DATA_EMPTY", value: 260, isUnsigned: true)
!2362 = !DIEnumerator(name: "ICON_OUTLINER_DATA_MESH", value: 261, isUnsigned: true)
!2363 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CURVE", value: 262, isUnsigned: true)
!2364 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LATTICE", value: 263, isUnsigned: true)
!2365 = !DIEnumerator(name: "ICON_OUTLINER_DATA_META", value: 264, isUnsigned: true)
!2366 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LAMP", value: 265, isUnsigned: true)
!2367 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CAMERA", value: 266, isUnsigned: true)
!2368 = !DIEnumerator(name: "ICON_OUTLINER_DATA_ARMATURE", value: 267, isUnsigned: true)
!2369 = !DIEnumerator(name: "ICON_OUTLINER_DATA_FONT", value: 268, isUnsigned: true)
!2370 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SURFACE", value: 269, isUnsigned: true)
!2371 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SPEAKER", value: 270, isUnsigned: true)
!2372 = !DIEnumerator(name: "ICON_OUTLINER_DATA_POSE", value: 271, isUnsigned: true)
!2373 = !DIEnumerator(name: "ICON_BLANK130", value: 272, isUnsigned: true)
!2374 = !DIEnumerator(name: "ICON_BLANK131", value: 273, isUnsigned: true)
!2375 = !DIEnumerator(name: "ICON_BLANK132", value: 274, isUnsigned: true)
!2376 = !DIEnumerator(name: "ICON_BLANK133", value: 275, isUnsigned: true)
!2377 = !DIEnumerator(name: "ICON_BLANK134", value: 276, isUnsigned: true)
!2378 = !DIEnumerator(name: "ICON_BLANK135", value: 277, isUnsigned: true)
!2379 = !DIEnumerator(name: "ICON_BLANK136", value: 278, isUnsigned: true)
!2380 = !DIEnumerator(name: "ICON_BLANK137", value: 279, isUnsigned: true)
!2381 = !DIEnumerator(name: "ICON_BLANK138", value: 280, isUnsigned: true)
!2382 = !DIEnumerator(name: "ICON_BLANK139", value: 281, isUnsigned: true)
!2383 = !DIEnumerator(name: "ICON_BLANK140", value: 282, isUnsigned: true)
!2384 = !DIEnumerator(name: "ICON_BLANK141", value: 283, isUnsigned: true)
!2385 = !DIEnumerator(name: "ICON_BLANK142", value: 284, isUnsigned: true)
!2386 = !DIEnumerator(name: "ICON_BLANK142b", value: 285, isUnsigned: true)
!2387 = !DIEnumerator(name: "ICON_MESH_PLANE", value: 286, isUnsigned: true)
!2388 = !DIEnumerator(name: "ICON_MESH_CUBE", value: 287, isUnsigned: true)
!2389 = !DIEnumerator(name: "ICON_MESH_CIRCLE", value: 288, isUnsigned: true)
!2390 = !DIEnumerator(name: "ICON_MESH_UVSPHERE", value: 289, isUnsigned: true)
!2391 = !DIEnumerator(name: "ICON_MESH_ICOSPHERE", value: 290, isUnsigned: true)
!2392 = !DIEnumerator(name: "ICON_MESH_GRID", value: 291, isUnsigned: true)
!2393 = !DIEnumerator(name: "ICON_MESH_MONKEY", value: 292, isUnsigned: true)
!2394 = !DIEnumerator(name: "ICON_MESH_CYLINDER", value: 293, isUnsigned: true)
!2395 = !DIEnumerator(name: "ICON_MESH_TORUS", value: 294, isUnsigned: true)
!2396 = !DIEnumerator(name: "ICON_MESH_CONE", value: 295, isUnsigned: true)
!2397 = !DIEnumerator(name: "ICON_BLANK610", value: 296, isUnsigned: true)
!2398 = !DIEnumerator(name: "ICON_BLANK611", value: 297, isUnsigned: true)
!2399 = !DIEnumerator(name: "ICON_LAMP_POINT", value: 298, isUnsigned: true)
!2400 = !DIEnumerator(name: "ICON_LAMP_SUN", value: 299, isUnsigned: true)
!2401 = !DIEnumerator(name: "ICON_LAMP_SPOT", value: 300, isUnsigned: true)
!2402 = !DIEnumerator(name: "ICON_LAMP_HEMI", value: 301, isUnsigned: true)
!2403 = !DIEnumerator(name: "ICON_LAMP_AREA", value: 302, isUnsigned: true)
!2404 = !DIEnumerator(name: "ICON_BLANK617", value: 303, isUnsigned: true)
!2405 = !DIEnumerator(name: "ICON_BLANK618", value: 304, isUnsigned: true)
!2406 = !DIEnumerator(name: "ICON_META_EMPTY", value: 305, isUnsigned: true)
!2407 = !DIEnumerator(name: "ICON_META_PLANE", value: 306, isUnsigned: true)
!2408 = !DIEnumerator(name: "ICON_META_CUBE", value: 307, isUnsigned: true)
!2409 = !DIEnumerator(name: "ICON_META_BALL", value: 308, isUnsigned: true)
!2410 = !DIEnumerator(name: "ICON_META_ELLIPSOID", value: 309, isUnsigned: true)
!2411 = !DIEnumerator(name: "ICON_META_CAPSULE", value: 310, isUnsigned: true)
!2412 = !DIEnumerator(name: "ICON_BLANK625", value: 311, isUnsigned: true)
!2413 = !DIEnumerator(name: "ICON_SURFACE_NCURVE", value: 312, isUnsigned: true)
!2414 = !DIEnumerator(name: "ICON_SURFACE_NCIRCLE", value: 313, isUnsigned: true)
!2415 = !DIEnumerator(name: "ICON_SURFACE_NSURFACE", value: 314, isUnsigned: true)
!2416 = !DIEnumerator(name: "ICON_SURFACE_NCYLINDER", value: 315, isUnsigned: true)
!2417 = !DIEnumerator(name: "ICON_SURFACE_NSPHERE", value: 316, isUnsigned: true)
!2418 = !DIEnumerator(name: "ICON_SURFACE_NTORUS", value: 317, isUnsigned: true)
!2419 = !DIEnumerator(name: "ICON_BLANK636", value: 318, isUnsigned: true)
!2420 = !DIEnumerator(name: "ICON_BLANK637", value: 319, isUnsigned: true)
!2421 = !DIEnumerator(name: "ICON_BLANK638", value: 320, isUnsigned: true)
!2422 = !DIEnumerator(name: "ICON_CURVE_BEZCURVE", value: 321, isUnsigned: true)
!2423 = !DIEnumerator(name: "ICON_CURVE_BEZCIRCLE", value: 322, isUnsigned: true)
!2424 = !DIEnumerator(name: "ICON_CURVE_NCURVE", value: 323, isUnsigned: true)
!2425 = !DIEnumerator(name: "ICON_CURVE_NCIRCLE", value: 324, isUnsigned: true)
!2426 = !DIEnumerator(name: "ICON_CURVE_PATH", value: 325, isUnsigned: true)
!2427 = !DIEnumerator(name: "ICON_BLANK644", value: 326, isUnsigned: true)
!2428 = !DIEnumerator(name: "ICON_BLANK645", value: 327, isUnsigned: true)
!2429 = !DIEnumerator(name: "ICON_BLANK646", value: 328, isUnsigned: true)
!2430 = !DIEnumerator(name: "ICON_BLANK647", value: 329, isUnsigned: true)
!2431 = !DIEnumerator(name: "ICON_BLANK648", value: 330, isUnsigned: true)
!2432 = !DIEnumerator(name: "ICON_COLOR_RED", value: 331, isUnsigned: true)
!2433 = !DIEnumerator(name: "ICON_COLOR_GREEN", value: 332, isUnsigned: true)
!2434 = !DIEnumerator(name: "ICON_COLOR_BLUE", value: 333, isUnsigned: true)
!2435 = !DIEnumerator(name: "ICON_TRIA_RIGHT_BAR", value: 334, isUnsigned: true)
!2436 = !DIEnumerator(name: "ICON_TRIA_DOWN_BAR", value: 335, isUnsigned: true)
!2437 = !DIEnumerator(name: "ICON_TRIA_LEFT_BAR", value: 336, isUnsigned: true)
!2438 = !DIEnumerator(name: "ICON_TRIA_UP_BAR", value: 337, isUnsigned: true)
!2439 = !DIEnumerator(name: "ICON_FORCE_FORCE", value: 338, isUnsigned: true)
!2440 = !DIEnumerator(name: "ICON_FORCE_WIND", value: 339, isUnsigned: true)
!2441 = !DIEnumerator(name: "ICON_FORCE_VORTEX", value: 340, isUnsigned: true)
!2442 = !DIEnumerator(name: "ICON_FORCE_MAGNETIC", value: 341, isUnsigned: true)
!2443 = !DIEnumerator(name: "ICON_FORCE_HARMONIC", value: 342, isUnsigned: true)
!2444 = !DIEnumerator(name: "ICON_FORCE_CHARGE", value: 343, isUnsigned: true)
!2445 = !DIEnumerator(name: "ICON_FORCE_LENNARDJONES", value: 344, isUnsigned: true)
!2446 = !DIEnumerator(name: "ICON_FORCE_TEXTURE", value: 345, isUnsigned: true)
!2447 = !DIEnumerator(name: "ICON_FORCE_CURVE", value: 346, isUnsigned: true)
!2448 = !DIEnumerator(name: "ICON_FORCE_BOID", value: 347, isUnsigned: true)
!2449 = !DIEnumerator(name: "ICON_FORCE_TURBULENCE", value: 348, isUnsigned: true)
!2450 = !DIEnumerator(name: "ICON_FORCE_DRAG", value: 349, isUnsigned: true)
!2451 = !DIEnumerator(name: "ICON_FORCE_SMOKEFLOW", value: 350, isUnsigned: true)
!2452 = !DIEnumerator(name: "ICON_BLANK673", value: 351, isUnsigned: true)
!2453 = !DIEnumerator(name: "ICON_BLANK674", value: 352, isUnsigned: true)
!2454 = !DIEnumerator(name: "ICON_BLANK675", value: 353, isUnsigned: true)
!2455 = !DIEnumerator(name: "ICON_BLANK676", value: 354, isUnsigned: true)
!2456 = !DIEnumerator(name: "ICON_BLANK677", value: 355, isUnsigned: true)
!2457 = !DIEnumerator(name: "ICON_BLANK678", value: 356, isUnsigned: true)
!2458 = !DIEnumerator(name: "ICON_BLANK679", value: 357, isUnsigned: true)
!2459 = !DIEnumerator(name: "ICON_BLANK680", value: 358, isUnsigned: true)
!2460 = !DIEnumerator(name: "ICON_BLANK681", value: 359, isUnsigned: true)
!2461 = !DIEnumerator(name: "ICON_BLANK682", value: 360, isUnsigned: true)
!2462 = !DIEnumerator(name: "ICON_BLANK683", value: 361, isUnsigned: true)
!2463 = !DIEnumerator(name: "ICON_BLANK684", value: 362, isUnsigned: true)
!2464 = !DIEnumerator(name: "ICON_BLANK685", value: 363, isUnsigned: true)
!2465 = !DIEnumerator(name: "ICON_BLANK690", value: 364, isUnsigned: true)
!2466 = !DIEnumerator(name: "ICON_BLANK691", value: 365, isUnsigned: true)
!2467 = !DIEnumerator(name: "ICON_BLANK692", value: 366, isUnsigned: true)
!2468 = !DIEnumerator(name: "ICON_BLANK693", value: 367, isUnsigned: true)
!2469 = !DIEnumerator(name: "ICON_BLANK694", value: 368, isUnsigned: true)
!2470 = !DIEnumerator(name: "ICON_BLANK695", value: 369, isUnsigned: true)
!2471 = !DIEnumerator(name: "ICON_BLANK696", value: 370, isUnsigned: true)
!2472 = !DIEnumerator(name: "ICON_BLANK697", value: 371, isUnsigned: true)
!2473 = !DIEnumerator(name: "ICON_BLANK698", value: 372, isUnsigned: true)
!2474 = !DIEnumerator(name: "ICON_BLANK699", value: 373, isUnsigned: true)
!2475 = !DIEnumerator(name: "ICON_BLANK700", value: 374, isUnsigned: true)
!2476 = !DIEnumerator(name: "ICON_BLANK701", value: 375, isUnsigned: true)
!2477 = !DIEnumerator(name: "ICON_BLANK702", value: 376, isUnsigned: true)
!2478 = !DIEnumerator(name: "ICON_BLANK703", value: 377, isUnsigned: true)
!2479 = !DIEnumerator(name: "ICON_BLANK704", value: 378, isUnsigned: true)
!2480 = !DIEnumerator(name: "ICON_BLANK705", value: 379, isUnsigned: true)
!2481 = !DIEnumerator(name: "ICON_BLANK706", value: 380, isUnsigned: true)
!2482 = !DIEnumerator(name: "ICON_BLANK707", value: 381, isUnsigned: true)
!2483 = !DIEnumerator(name: "ICON_BLANK708", value: 382, isUnsigned: true)
!2484 = !DIEnumerator(name: "ICON_BLANK709", value: 383, isUnsigned: true)
!2485 = !DIEnumerator(name: "ICON_BLANK710", value: 384, isUnsigned: true)
!2486 = !DIEnumerator(name: "ICON_BLANK711", value: 385, isUnsigned: true)
!2487 = !DIEnumerator(name: "ICON_BLANK712", value: 386, isUnsigned: true)
!2488 = !DIEnumerator(name: "ICON_BLANK713", value: 387, isUnsigned: true)
!2489 = !DIEnumerator(name: "ICON_BLANK714", value: 388, isUnsigned: true)
!2490 = !DIEnumerator(name: "ICON_BLANK715", value: 389, isUnsigned: true)
!2491 = !DIEnumerator(name: "ICON_BLANK720", value: 390, isUnsigned: true)
!2492 = !DIEnumerator(name: "ICON_BLANK721", value: 391, isUnsigned: true)
!2493 = !DIEnumerator(name: "ICON_BLANK722", value: 392, isUnsigned: true)
!2494 = !DIEnumerator(name: "ICON_BLANK733", value: 393, isUnsigned: true)
!2495 = !DIEnumerator(name: "ICON_BLANK734", value: 394, isUnsigned: true)
!2496 = !DIEnumerator(name: "ICON_BLANK735", value: 395, isUnsigned: true)
!2497 = !DIEnumerator(name: "ICON_BLANK736", value: 396, isUnsigned: true)
!2498 = !DIEnumerator(name: "ICON_BLANK737", value: 397, isUnsigned: true)
!2499 = !DIEnumerator(name: "ICON_BLANK738", value: 398, isUnsigned: true)
!2500 = !DIEnumerator(name: "ICON_BLANK739", value: 399, isUnsigned: true)
!2501 = !DIEnumerator(name: "ICON_BLANK740", value: 400, isUnsigned: true)
!2502 = !DIEnumerator(name: "ICON_BLANK741", value: 401, isUnsigned: true)
!2503 = !DIEnumerator(name: "ICON_BLANK742", value: 402, isUnsigned: true)
!2504 = !DIEnumerator(name: "ICON_BLANK743", value: 403, isUnsigned: true)
!2505 = !DIEnumerator(name: "ICON_BLANK744", value: 404, isUnsigned: true)
!2506 = !DIEnumerator(name: "ICON_BLANK745", value: 405, isUnsigned: true)
!2507 = !DIEnumerator(name: "ICON_BLANK746", value: 406, isUnsigned: true)
!2508 = !DIEnumerator(name: "ICON_BLANK747", value: 407, isUnsigned: true)
!2509 = !DIEnumerator(name: "ICON_BLANK748", value: 408, isUnsigned: true)
!2510 = !DIEnumerator(name: "ICON_BLANK749", value: 409, isUnsigned: true)
!2511 = !DIEnumerator(name: "ICON_BLANK750", value: 410, isUnsigned: true)
!2512 = !DIEnumerator(name: "ICON_BLANK751", value: 411, isUnsigned: true)
!2513 = !DIEnumerator(name: "ICON_BLANK752", value: 412, isUnsigned: true)
!2514 = !DIEnumerator(name: "ICON_BLANK753", value: 413, isUnsigned: true)
!2515 = !DIEnumerator(name: "ICON_BLANK754", value: 414, isUnsigned: true)
!2516 = !DIEnumerator(name: "ICON_BLANK755", value: 415, isUnsigned: true)
!2517 = !DIEnumerator(name: "ICON_BLANK760", value: 416, isUnsigned: true)
!2518 = !DIEnumerator(name: "ICON_BLANK761", value: 417, isUnsigned: true)
!2519 = !DIEnumerator(name: "ICON_BLANK762", value: 418, isUnsigned: true)
!2520 = !DIEnumerator(name: "ICON_BLANK763", value: 419, isUnsigned: true)
!2521 = !DIEnumerator(name: "ICON_BLANK764", value: 420, isUnsigned: true)
!2522 = !DIEnumerator(name: "ICON_BLANK765", value: 421, isUnsigned: true)
!2523 = !DIEnumerator(name: "ICON_BLANK766", value: 422, isUnsigned: true)
!2524 = !DIEnumerator(name: "ICON_BLANK767", value: 423, isUnsigned: true)
!2525 = !DIEnumerator(name: "ICON_BLANK768", value: 424, isUnsigned: true)
!2526 = !DIEnumerator(name: "ICON_BLANK769", value: 425, isUnsigned: true)
!2527 = !DIEnumerator(name: "ICON_BLANK770", value: 426, isUnsigned: true)
!2528 = !DIEnumerator(name: "ICON_BLANK771", value: 427, isUnsigned: true)
!2529 = !DIEnumerator(name: "ICON_BLANK772", value: 428, isUnsigned: true)
!2530 = !DIEnumerator(name: "ICON_BLANK773", value: 429, isUnsigned: true)
!2531 = !DIEnumerator(name: "ICON_BLANK774", value: 430, isUnsigned: true)
!2532 = !DIEnumerator(name: "ICON_BLANK775", value: 431, isUnsigned: true)
!2533 = !DIEnumerator(name: "ICON_BLANK776", value: 432, isUnsigned: true)
!2534 = !DIEnumerator(name: "ICON_BLANK777", value: 433, isUnsigned: true)
!2535 = !DIEnumerator(name: "ICON_BLANK778", value: 434, isUnsigned: true)
!2536 = !DIEnumerator(name: "ICON_BLANK779", value: 435, isUnsigned: true)
!2537 = !DIEnumerator(name: "ICON_BLANK780", value: 436, isUnsigned: true)
!2538 = !DIEnumerator(name: "ICON_BLANK781", value: 437, isUnsigned: true)
!2539 = !DIEnumerator(name: "ICON_BLANK782", value: 438, isUnsigned: true)
!2540 = !DIEnumerator(name: "ICON_BLANK783", value: 439, isUnsigned: true)
!2541 = !DIEnumerator(name: "ICON_BLANK784", value: 440, isUnsigned: true)
!2542 = !DIEnumerator(name: "ICON_BLANK785", value: 441, isUnsigned: true)
!2543 = !DIEnumerator(name: "ICON_MODIFIER", value: 442, isUnsigned: true)
!2544 = !DIEnumerator(name: "ICON_MOD_WAVE", value: 443, isUnsigned: true)
!2545 = !DIEnumerator(name: "ICON_MOD_BUILD", value: 444, isUnsigned: true)
!2546 = !DIEnumerator(name: "ICON_MOD_DECIM", value: 445, isUnsigned: true)
!2547 = !DIEnumerator(name: "ICON_MOD_MIRROR", value: 446, isUnsigned: true)
!2548 = !DIEnumerator(name: "ICON_MOD_SOFT", value: 447, isUnsigned: true)
!2549 = !DIEnumerator(name: "ICON_MOD_SUBSURF", value: 448, isUnsigned: true)
!2550 = !DIEnumerator(name: "ICON_HOOK", value: 449, isUnsigned: true)
!2551 = !DIEnumerator(name: "ICON_MOD_PHYSICS", value: 450, isUnsigned: true)
!2552 = !DIEnumerator(name: "ICON_MOD_PARTICLES", value: 451, isUnsigned: true)
!2553 = !DIEnumerator(name: "ICON_MOD_BOOLEAN", value: 452, isUnsigned: true)
!2554 = !DIEnumerator(name: "ICON_MOD_EDGESPLIT", value: 453, isUnsigned: true)
!2555 = !DIEnumerator(name: "ICON_MOD_ARRAY", value: 454, isUnsigned: true)
!2556 = !DIEnumerator(name: "ICON_MOD_UVPROJECT", value: 455, isUnsigned: true)
!2557 = !DIEnumerator(name: "ICON_MOD_DISPLACE", value: 456, isUnsigned: true)
!2558 = !DIEnumerator(name: "ICON_MOD_CURVE", value: 457, isUnsigned: true)
!2559 = !DIEnumerator(name: "ICON_MOD_LATTICE", value: 458, isUnsigned: true)
!2560 = !DIEnumerator(name: "ICON_CONSTRAINT_DATA", value: 459, isUnsigned: true)
!2561 = !DIEnumerator(name: "ICON_MOD_ARMATURE", value: 460, isUnsigned: true)
!2562 = !DIEnumerator(name: "ICON_MOD_SHRINKWRAP", value: 461, isUnsigned: true)
!2563 = !DIEnumerator(name: "ICON_MOD_CAST", value: 462, isUnsigned: true)
!2564 = !DIEnumerator(name: "ICON_MOD_MESHDEFORM", value: 463, isUnsigned: true)
!2565 = !DIEnumerator(name: "ICON_MOD_BEVEL", value: 464, isUnsigned: true)
!2566 = !DIEnumerator(name: "ICON_MOD_SMOOTH", value: 465, isUnsigned: true)
!2567 = !DIEnumerator(name: "ICON_MOD_SIMPLEDEFORM", value: 466, isUnsigned: true)
!2568 = !DIEnumerator(name: "ICON_MOD_MASK", value: 467, isUnsigned: true)
!2569 = !DIEnumerator(name: "ICON_MOD_CLOTH", value: 468, isUnsigned: true)
!2570 = !DIEnumerator(name: "ICON_MOD_EXPLODE", value: 469, isUnsigned: true)
!2571 = !DIEnumerator(name: "ICON_MOD_FLUIDSIM", value: 470, isUnsigned: true)
!2572 = !DIEnumerator(name: "ICON_MOD_MULTIRES", value: 471, isUnsigned: true)
!2573 = !DIEnumerator(name: "ICON_MOD_SMOKE", value: 472, isUnsigned: true)
!2574 = !DIEnumerator(name: "ICON_MOD_SOLIDIFY", value: 473, isUnsigned: true)
!2575 = !DIEnumerator(name: "ICON_MOD_SCREW", value: 474, isUnsigned: true)
!2576 = !DIEnumerator(name: "ICON_MOD_VERTEX_WEIGHT", value: 475, isUnsigned: true)
!2577 = !DIEnumerator(name: "ICON_MOD_DYNAMICPAINT", value: 476, isUnsigned: true)
!2578 = !DIEnumerator(name: "ICON_MOD_REMESH", value: 477, isUnsigned: true)
!2579 = !DIEnumerator(name: "ICON_MOD_OCEAN", value: 478, isUnsigned: true)
!2580 = !DIEnumerator(name: "ICON_MOD_WARP", value: 479, isUnsigned: true)
!2581 = !DIEnumerator(name: "ICON_MOD_SKIN", value: 480, isUnsigned: true)
!2582 = !DIEnumerator(name: "ICON_MOD_TRIANGULATE", value: 481, isUnsigned: true)
!2583 = !DIEnumerator(name: "ICON_MOD_WIREFRAME", value: 482, isUnsigned: true)
!2584 = !DIEnumerator(name: "ICON_BLANK167", value: 483, isUnsigned: true)
!2585 = !DIEnumerator(name: "ICON_BLANK168", value: 484, isUnsigned: true)
!2586 = !DIEnumerator(name: "ICON_BLANK169", value: 485, isUnsigned: true)
!2587 = !DIEnumerator(name: "ICON_BLANK170", value: 486, isUnsigned: true)
!2588 = !DIEnumerator(name: "ICON_BLANK171", value: 487, isUnsigned: true)
!2589 = !DIEnumerator(name: "ICON_BLANK172", value: 488, isUnsigned: true)
!2590 = !DIEnumerator(name: "ICON_BLANK173", value: 489, isUnsigned: true)
!2591 = !DIEnumerator(name: "ICON_BLANK174", value: 490, isUnsigned: true)
!2592 = !DIEnumerator(name: "ICON_BLANK175", value: 491, isUnsigned: true)
!2593 = !DIEnumerator(name: "ICON_BLANK176", value: 492, isUnsigned: true)
!2594 = !DIEnumerator(name: "ICON_BLANK177", value: 493, isUnsigned: true)
!2595 = !DIEnumerator(name: "ICON_REC", value: 494, isUnsigned: true)
!2596 = !DIEnumerator(name: "ICON_PLAY", value: 495, isUnsigned: true)
!2597 = !DIEnumerator(name: "ICON_FF", value: 496, isUnsigned: true)
!2598 = !DIEnumerator(name: "ICON_REW", value: 497, isUnsigned: true)
!2599 = !DIEnumerator(name: "ICON_PAUSE", value: 498, isUnsigned: true)
!2600 = !DIEnumerator(name: "ICON_PREV_KEYFRAME", value: 499, isUnsigned: true)
!2601 = !DIEnumerator(name: "ICON_NEXT_KEYFRAME", value: 500, isUnsigned: true)
!2602 = !DIEnumerator(name: "ICON_PLAY_AUDIO", value: 501, isUnsigned: true)
!2603 = !DIEnumerator(name: "ICON_PLAY_REVERSE", value: 502, isUnsigned: true)
!2604 = !DIEnumerator(name: "ICON_PREVIEW_RANGE", value: 503, isUnsigned: true)
!2605 = !DIEnumerator(name: "ICON_ACTION_TWEAK", value: 504, isUnsigned: true)
!2606 = !DIEnumerator(name: "ICON_PMARKER_ACT", value: 505, isUnsigned: true)
!2607 = !DIEnumerator(name: "ICON_PMARKER_SEL", value: 506, isUnsigned: true)
!2608 = !DIEnumerator(name: "ICON_PMARKER", value: 507, isUnsigned: true)
!2609 = !DIEnumerator(name: "ICON_MARKER_HLT", value: 508, isUnsigned: true)
!2610 = !DIEnumerator(name: "ICON_MARKER", value: 509, isUnsigned: true)
!2611 = !DIEnumerator(name: "ICON_SPACE2", value: 510, isUnsigned: true)
!2612 = !DIEnumerator(name: "ICON_SPACE3", value: 511, isUnsigned: true)
!2613 = !DIEnumerator(name: "ICON_KEYINGSET", value: 512, isUnsigned: true)
!2614 = !DIEnumerator(name: "ICON_KEY_DEHLT", value: 513, isUnsigned: true)
!2615 = !DIEnumerator(name: "ICON_KEY_HLT", value: 514, isUnsigned: true)
!2616 = !DIEnumerator(name: "ICON_MUTE_IPO_OFF", value: 515, isUnsigned: true)
!2617 = !DIEnumerator(name: "ICON_MUTE_IPO_ON", value: 516, isUnsigned: true)
!2618 = !DIEnumerator(name: "ICON_VISIBLE_IPO_OFF", value: 517, isUnsigned: true)
!2619 = !DIEnumerator(name: "ICON_VISIBLE_IPO_ON", value: 518, isUnsigned: true)
!2620 = !DIEnumerator(name: "ICON_DRIVER", value: 519, isUnsigned: true)
!2621 = !DIEnumerator(name: "ICON_SOLO_OFF", value: 520, isUnsigned: true)
!2622 = !DIEnumerator(name: "ICON_SOLO_ON", value: 521, isUnsigned: true)
!2623 = !DIEnumerator(name: "ICON_FRAME_PREV", value: 522, isUnsigned: true)
!2624 = !DIEnumerator(name: "ICON_FRAME_NEXT", value: 523, isUnsigned: true)
!2625 = !DIEnumerator(name: "ICON_NLA_PUSHDOWN", value: 524, isUnsigned: true)
!2626 = !DIEnumerator(name: "ICON_IPO_CONSTANT", value: 525, isUnsigned: true)
!2627 = !DIEnumerator(name: "ICON_IPO_LINEAR", value: 526, isUnsigned: true)
!2628 = !DIEnumerator(name: "ICON_IPO_BEZIER", value: 527, isUnsigned: true)
!2629 = !DIEnumerator(name: "ICON_IPO_SINE", value: 528, isUnsigned: true)
!2630 = !DIEnumerator(name: "ICON_IPO_QUAD", value: 529, isUnsigned: true)
!2631 = !DIEnumerator(name: "ICON_IPO_CUBIC", value: 530, isUnsigned: true)
!2632 = !DIEnumerator(name: "ICON_IPO_QUART", value: 531, isUnsigned: true)
!2633 = !DIEnumerator(name: "ICON_IPO_QUINT", value: 532, isUnsigned: true)
!2634 = !DIEnumerator(name: "ICON_IPO_EXPO", value: 533, isUnsigned: true)
!2635 = !DIEnumerator(name: "ICON_IPO_CIRC", value: 534, isUnsigned: true)
!2636 = !DIEnumerator(name: "ICON_IPO_BOUNCE", value: 535, isUnsigned: true)
!2637 = !DIEnumerator(name: "ICON_IPO_ELASTIC", value: 536, isUnsigned: true)
!2638 = !DIEnumerator(name: "ICON_IPO_BACK", value: 537, isUnsigned: true)
!2639 = !DIEnumerator(name: "ICON_IPO_EASE_IN", value: 538, isUnsigned: true)
!2640 = !DIEnumerator(name: "ICON_IPO_EASE_OUT", value: 539, isUnsigned: true)
!2641 = !DIEnumerator(name: "ICON_IPO_EASE_IN_OUT", value: 540, isUnsigned: true)
!2642 = !DIEnumerator(name: "ICON_BLANK203", value: 541, isUnsigned: true)
!2643 = !DIEnumerator(name: "ICON_BLANK204", value: 542, isUnsigned: true)
!2644 = !DIEnumerator(name: "ICON_BLANK205", value: 543, isUnsigned: true)
!2645 = !DIEnumerator(name: "ICON_BLANK206", value: 544, isUnsigned: true)
!2646 = !DIEnumerator(name: "ICON_BLANK207", value: 545, isUnsigned: true)
!2647 = !DIEnumerator(name: "ICON_VERTEXSEL", value: 546, isUnsigned: true)
!2648 = !DIEnumerator(name: "ICON_EDGESEL", value: 547, isUnsigned: true)
!2649 = !DIEnumerator(name: "ICON_FACESEL", value: 548, isUnsigned: true)
!2650 = !DIEnumerator(name: "ICON_LOOPSEL", value: 549, isUnsigned: true)
!2651 = !DIEnumerator(name: "ICON_BLANK210", value: 550, isUnsigned: true)
!2652 = !DIEnumerator(name: "ICON_ROTATE", value: 551, isUnsigned: true)
!2653 = !DIEnumerator(name: "ICON_CURSOR", value: 552, isUnsigned: true)
!2654 = !DIEnumerator(name: "ICON_ROTATECOLLECTION", value: 553, isUnsigned: true)
!2655 = !DIEnumerator(name: "ICON_ROTATECENTER", value: 554, isUnsigned: true)
!2656 = !DIEnumerator(name: "ICON_ROTACTIVE", value: 555, isUnsigned: true)
!2657 = !DIEnumerator(name: "ICON_ALIGN", value: 556, isUnsigned: true)
!2658 = !DIEnumerator(name: "ICON_BLANK211", value: 557, isUnsigned: true)
!2659 = !DIEnumerator(name: "ICON_SMOOTHCURVE", value: 558, isUnsigned: true)
!2660 = !DIEnumerator(name: "ICON_SPHERECURVE", value: 559, isUnsigned: true)
!2661 = !DIEnumerator(name: "ICON_ROOTCURVE", value: 560, isUnsigned: true)
!2662 = !DIEnumerator(name: "ICON_SHARPCURVE", value: 561, isUnsigned: true)
!2663 = !DIEnumerator(name: "ICON_LINCURVE", value: 562, isUnsigned: true)
!2664 = !DIEnumerator(name: "ICON_NOCURVE", value: 563, isUnsigned: true)
!2665 = !DIEnumerator(name: "ICON_RNDCURVE", value: 564, isUnsigned: true)
!2666 = !DIEnumerator(name: "ICON_PROP_OFF", value: 565, isUnsigned: true)
!2667 = !DIEnumerator(name: "ICON_PROP_ON", value: 566, isUnsigned: true)
!2668 = !DIEnumerator(name: "ICON_PROP_CON", value: 567, isUnsigned: true)
!2669 = !DIEnumerator(name: "ICON_SCULPT_DYNTOPO", value: 568, isUnsigned: true)
!2670 = !DIEnumerator(name: "ICON_PARTICLE_POINT", value: 569, isUnsigned: true)
!2671 = !DIEnumerator(name: "ICON_PARTICLE_TIP", value: 570, isUnsigned: true)
!2672 = !DIEnumerator(name: "ICON_PARTICLE_PATH", value: 571, isUnsigned: true)
!2673 = !DIEnumerator(name: "ICON_MAN_TRANS", value: 572, isUnsigned: true)
!2674 = !DIEnumerator(name: "ICON_MAN_ROT", value: 573, isUnsigned: true)
!2675 = !DIEnumerator(name: "ICON_MAN_SCALE", value: 574, isUnsigned: true)
!2676 = !DIEnumerator(name: "ICON_MANIPUL", value: 575, isUnsigned: true)
!2677 = !DIEnumerator(name: "ICON_SNAP_OFF", value: 576, isUnsigned: true)
!2678 = !DIEnumerator(name: "ICON_SNAP_ON", value: 577, isUnsigned: true)
!2679 = !DIEnumerator(name: "ICON_SNAP_NORMAL", value: 578, isUnsigned: true)
!2680 = !DIEnumerator(name: "ICON_SNAP_INCREMENT", value: 579, isUnsigned: true)
!2681 = !DIEnumerator(name: "ICON_SNAP_VERTEX", value: 580, isUnsigned: true)
!2682 = !DIEnumerator(name: "ICON_SNAP_EDGE", value: 581, isUnsigned: true)
!2683 = !DIEnumerator(name: "ICON_SNAP_FACE", value: 582, isUnsigned: true)
!2684 = !DIEnumerator(name: "ICON_SNAP_VOLUME", value: 583, isUnsigned: true)
!2685 = !DIEnumerator(name: "ICON_BLANK220", value: 584, isUnsigned: true)
!2686 = !DIEnumerator(name: "ICON_STICKY_UVS_LOC", value: 585, isUnsigned: true)
!2687 = !DIEnumerator(name: "ICON_STICKY_UVS_DISABLE", value: 586, isUnsigned: true)
!2688 = !DIEnumerator(name: "ICON_STICKY_UVS_VERT", value: 587, isUnsigned: true)
!2689 = !DIEnumerator(name: "ICON_CLIPUV_DEHLT", value: 588, isUnsigned: true)
!2690 = !DIEnumerator(name: "ICON_CLIPUV_HLT", value: 589, isUnsigned: true)
!2691 = !DIEnumerator(name: "ICON_SNAP_PEEL_OBJECT", value: 590, isUnsigned: true)
!2692 = !DIEnumerator(name: "ICON_GRID", value: 591, isUnsigned: true)
!2693 = !DIEnumerator(name: "ICON_BLANK221", value: 592, isUnsigned: true)
!2694 = !DIEnumerator(name: "ICON_BLANK222", value: 593, isUnsigned: true)
!2695 = !DIEnumerator(name: "ICON_BLANK224", value: 594, isUnsigned: true)
!2696 = !DIEnumerator(name: "ICON_BLANK225", value: 595, isUnsigned: true)
!2697 = !DIEnumerator(name: "ICON_BLANK226", value: 596, isUnsigned: true)
!2698 = !DIEnumerator(name: "ICON_BLANK226b", value: 597, isUnsigned: true)
!2699 = !DIEnumerator(name: "ICON_PASTEDOWN", value: 598, isUnsigned: true)
!2700 = !DIEnumerator(name: "ICON_COPYDOWN", value: 599, isUnsigned: true)
!2701 = !DIEnumerator(name: "ICON_PASTEFLIPUP", value: 600, isUnsigned: true)
!2702 = !DIEnumerator(name: "ICON_PASTEFLIPDOWN", value: 601, isUnsigned: true)
!2703 = !DIEnumerator(name: "ICON_BLANK227", value: 602, isUnsigned: true)
!2704 = !DIEnumerator(name: "ICON_BLANK228", value: 603, isUnsigned: true)
!2705 = !DIEnumerator(name: "ICON_BLANK229", value: 604, isUnsigned: true)
!2706 = !DIEnumerator(name: "ICON_BLANK230", value: 605, isUnsigned: true)
!2707 = !DIEnumerator(name: "ICON_SNAP_SURFACE", value: 606, isUnsigned: true)
!2708 = !DIEnumerator(name: "ICON_AUTOMERGE_ON", value: 607, isUnsigned: true)
!2709 = !DIEnumerator(name: "ICON_AUTOMERGE_OFF", value: 608, isUnsigned: true)
!2710 = !DIEnumerator(name: "ICON_RETOPO", value: 609, isUnsigned: true)
!2711 = !DIEnumerator(name: "ICON_UV_VERTEXSEL", value: 610, isUnsigned: true)
!2712 = !DIEnumerator(name: "ICON_UV_EDGESEL", value: 611, isUnsigned: true)
!2713 = !DIEnumerator(name: "ICON_UV_FACESEL", value: 612, isUnsigned: true)
!2714 = !DIEnumerator(name: "ICON_UV_ISLANDSEL", value: 613, isUnsigned: true)
!2715 = !DIEnumerator(name: "ICON_UV_SYNC_SELECT", value: 614, isUnsigned: true)
!2716 = !DIEnumerator(name: "ICON_BLANK240", value: 615, isUnsigned: true)
!2717 = !DIEnumerator(name: "ICON_BLANK241", value: 616, isUnsigned: true)
!2718 = !DIEnumerator(name: "ICON_BLANK242", value: 617, isUnsigned: true)
!2719 = !DIEnumerator(name: "ICON_BLANK243", value: 618, isUnsigned: true)
!2720 = !DIEnumerator(name: "ICON_BLANK244", value: 619, isUnsigned: true)
!2721 = !DIEnumerator(name: "ICON_BLANK245", value: 620, isUnsigned: true)
!2722 = !DIEnumerator(name: "ICON_BLANK246", value: 621, isUnsigned: true)
!2723 = !DIEnumerator(name: "ICON_BLANK247", value: 622, isUnsigned: true)
!2724 = !DIEnumerator(name: "ICON_BLANK247b", value: 623, isUnsigned: true)
!2725 = !DIEnumerator(name: "ICON_BBOX", value: 624, isUnsigned: true)
!2726 = !DIEnumerator(name: "ICON_WIRE", value: 625, isUnsigned: true)
!2727 = !DIEnumerator(name: "ICON_SOLID", value: 626, isUnsigned: true)
!2728 = !DIEnumerator(name: "ICON_SMOOTH", value: 627, isUnsigned: true)
!2729 = !DIEnumerator(name: "ICON_POTATO", value: 628, isUnsigned: true)
!2730 = !DIEnumerator(name: "ICON_BLANK248", value: 629, isUnsigned: true)
!2731 = !DIEnumerator(name: "ICON_ORTHO", value: 630, isUnsigned: true)
!2732 = !DIEnumerator(name: "ICON_BLANK249", value: 631, isUnsigned: true)
!2733 = !DIEnumerator(name: "ICON_BLANK250", value: 632, isUnsigned: true)
!2734 = !DIEnumerator(name: "ICON_LOCKVIEW_OFF", value: 633, isUnsigned: true)
!2735 = !DIEnumerator(name: "ICON_LOCKVIEW_ON", value: 634, isUnsigned: true)
!2736 = !DIEnumerator(name: "ICON_BLANK251", value: 635, isUnsigned: true)
!2737 = !DIEnumerator(name: "ICON_AXIS_SIDE", value: 636, isUnsigned: true)
!2738 = !DIEnumerator(name: "ICON_AXIS_FRONT", value: 637, isUnsigned: true)
!2739 = !DIEnumerator(name: "ICON_AXIS_TOP", value: 638, isUnsigned: true)
!2740 = !DIEnumerator(name: "ICON_NDOF_DOM", value: 639, isUnsigned: true)
!2741 = !DIEnumerator(name: "ICON_NDOF_TURN", value: 640, isUnsigned: true)
!2742 = !DIEnumerator(name: "ICON_NDOF_FLY", value: 641, isUnsigned: true)
!2743 = !DIEnumerator(name: "ICON_NDOF_TRANS", value: 642, isUnsigned: true)
!2744 = !DIEnumerator(name: "ICON_LAYER_USED", value: 643, isUnsigned: true)
!2745 = !DIEnumerator(name: "ICON_LAYER_ACTIVE", value: 644, isUnsigned: true)
!2746 = !DIEnumerator(name: "ICON_BLANK254", value: 645, isUnsigned: true)
!2747 = !DIEnumerator(name: "ICON_BLANK255", value: 646, isUnsigned: true)
!2748 = !DIEnumerator(name: "ICON_BLANK256", value: 647, isUnsigned: true)
!2749 = !DIEnumerator(name: "ICON_BLANK257", value: 648, isUnsigned: true)
!2750 = !DIEnumerator(name: "ICON_BLANK257b", value: 649, isUnsigned: true)
!2751 = !DIEnumerator(name: "ICON_BLANK258", value: 650, isUnsigned: true)
!2752 = !DIEnumerator(name: "ICON_BLANK259", value: 651, isUnsigned: true)
!2753 = !DIEnumerator(name: "ICON_BLANK260", value: 652, isUnsigned: true)
!2754 = !DIEnumerator(name: "ICON_BLANK261", value: 653, isUnsigned: true)
!2755 = !DIEnumerator(name: "ICON_BLANK262", value: 654, isUnsigned: true)
!2756 = !DIEnumerator(name: "ICON_BLANK263", value: 655, isUnsigned: true)
!2757 = !DIEnumerator(name: "ICON_BLANK264", value: 656, isUnsigned: true)
!2758 = !DIEnumerator(name: "ICON_BLANK265", value: 657, isUnsigned: true)
!2759 = !DIEnumerator(name: "ICON_BLANK266", value: 658, isUnsigned: true)
!2760 = !DIEnumerator(name: "ICON_BLANK267", value: 659, isUnsigned: true)
!2761 = !DIEnumerator(name: "ICON_BLANK268", value: 660, isUnsigned: true)
!2762 = !DIEnumerator(name: "ICON_BLANK269", value: 661, isUnsigned: true)
!2763 = !DIEnumerator(name: "ICON_BLANK270", value: 662, isUnsigned: true)
!2764 = !DIEnumerator(name: "ICON_BLANK271", value: 663, isUnsigned: true)
!2765 = !DIEnumerator(name: "ICON_BLANK272", value: 664, isUnsigned: true)
!2766 = !DIEnumerator(name: "ICON_BLANK273", value: 665, isUnsigned: true)
!2767 = !DIEnumerator(name: "ICON_BLANK274", value: 666, isUnsigned: true)
!2768 = !DIEnumerator(name: "ICON_BLANK275", value: 667, isUnsigned: true)
!2769 = !DIEnumerator(name: "ICON_BLANK276", value: 668, isUnsigned: true)
!2770 = !DIEnumerator(name: "ICON_BLANK277", value: 669, isUnsigned: true)
!2771 = !DIEnumerator(name: "ICON_BLANK278", value: 670, isUnsigned: true)
!2772 = !DIEnumerator(name: "ICON_BLANK279", value: 671, isUnsigned: true)
!2773 = !DIEnumerator(name: "ICON_BLANK280", value: 672, isUnsigned: true)
!2774 = !DIEnumerator(name: "ICON_BLANK281", value: 673, isUnsigned: true)
!2775 = !DIEnumerator(name: "ICON_BLANK282", value: 674, isUnsigned: true)
!2776 = !DIEnumerator(name: "ICON_BLANK282b", value: 675, isUnsigned: true)
!2777 = !DIEnumerator(name: "ICON_SORTALPHA", value: 676, isUnsigned: true)
!2778 = !DIEnumerator(name: "ICON_SORTBYEXT", value: 677, isUnsigned: true)
!2779 = !DIEnumerator(name: "ICON_SORTTIME", value: 678, isUnsigned: true)
!2780 = !DIEnumerator(name: "ICON_SORTSIZE", value: 679, isUnsigned: true)
!2781 = !DIEnumerator(name: "ICON_LONGDISPLAY", value: 680, isUnsigned: true)
!2782 = !DIEnumerator(name: "ICON_SHORTDISPLAY", value: 681, isUnsigned: true)
!2783 = !DIEnumerator(name: "ICON_GHOST", value: 682, isUnsigned: true)
!2784 = !DIEnumerator(name: "ICON_IMGDISPLAY", value: 683, isUnsigned: true)
!2785 = !DIEnumerator(name: "ICON_SAVE_AS", value: 684, isUnsigned: true)
!2786 = !DIEnumerator(name: "ICON_SAVE_COPY", value: 685, isUnsigned: true)
!2787 = !DIEnumerator(name: "ICON_BOOKMARKS", value: 686, isUnsigned: true)
!2788 = !DIEnumerator(name: "ICON_FONTPREVIEW", value: 687, isUnsigned: true)
!2789 = !DIEnumerator(name: "ICON_FILTER", value: 688, isUnsigned: true)
!2790 = !DIEnumerator(name: "ICON_NEWFOLDER", value: 689, isUnsigned: true)
!2791 = !DIEnumerator(name: "ICON_OPEN_RECENT", value: 690, isUnsigned: true)
!2792 = !DIEnumerator(name: "ICON_FILE_PARENT", value: 691, isUnsigned: true)
!2793 = !DIEnumerator(name: "ICON_FILE_REFRESH", value: 692, isUnsigned: true)
!2794 = !DIEnumerator(name: "ICON_FILE_FOLDER", value: 693, isUnsigned: true)
!2795 = !DIEnumerator(name: "ICON_FILE_BLANK", value: 694, isUnsigned: true)
!2796 = !DIEnumerator(name: "ICON_FILE_BLEND", value: 695, isUnsigned: true)
!2797 = !DIEnumerator(name: "ICON_FILE_IMAGE", value: 696, isUnsigned: true)
!2798 = !DIEnumerator(name: "ICON_FILE_MOVIE", value: 697, isUnsigned: true)
!2799 = !DIEnumerator(name: "ICON_FILE_SCRIPT", value: 698, isUnsigned: true)
!2800 = !DIEnumerator(name: "ICON_FILE_SOUND", value: 699, isUnsigned: true)
!2801 = !DIEnumerator(name: "ICON_FILE_FONT", value: 700, isUnsigned: true)
!2802 = !DIEnumerator(name: "ICON_FILE_TEXT", value: 701, isUnsigned: true)
!2803 = !DIEnumerator(name: "ICON_RECOVER_AUTO", value: 702, isUnsigned: true)
!2804 = !DIEnumerator(name: "ICON_SAVE_PREFS", value: 703, isUnsigned: true)
!2805 = !DIEnumerator(name: "ICON_LINK_BLEND", value: 704, isUnsigned: true)
!2806 = !DIEnumerator(name: "ICON_APPEND_BLEND", value: 705, isUnsigned: true)
!2807 = !DIEnumerator(name: "ICON_IMPORT", value: 706, isUnsigned: true)
!2808 = !DIEnumerator(name: "ICON_EXPORT", value: 707, isUnsigned: true)
!2809 = !DIEnumerator(name: "ICON_EXTERNAL_DATA", value: 708, isUnsigned: true)
!2810 = !DIEnumerator(name: "ICON_LOAD_FACTORY", value: 709, isUnsigned: true)
!2811 = !DIEnumerator(name: "ICON_BLANK300", value: 710, isUnsigned: true)
!2812 = !DIEnumerator(name: "ICON_BLANK301", value: 711, isUnsigned: true)
!2813 = !DIEnumerator(name: "ICON_BLANK302", value: 712, isUnsigned: true)
!2814 = !DIEnumerator(name: "ICON_BLANK303", value: 713, isUnsigned: true)
!2815 = !DIEnumerator(name: "ICON_BLANK304", value: 714, isUnsigned: true)
!2816 = !DIEnumerator(name: "ICON_LOOP_BACK", value: 715, isUnsigned: true)
!2817 = !DIEnumerator(name: "ICON_LOOP_FORWARDS", value: 716, isUnsigned: true)
!2818 = !DIEnumerator(name: "ICON_BACK", value: 717, isUnsigned: true)
!2819 = !DIEnumerator(name: "ICON_FORWARD", value: 718, isUnsigned: true)
!2820 = !DIEnumerator(name: "ICON_BLANK309", value: 719, isUnsigned: true)
!2821 = !DIEnumerator(name: "ICON_BLANK310", value: 720, isUnsigned: true)
!2822 = !DIEnumerator(name: "ICON_BLANK311", value: 721, isUnsigned: true)
!2823 = !DIEnumerator(name: "ICON_BLANK312", value: 722, isUnsigned: true)
!2824 = !DIEnumerator(name: "ICON_BLANK313", value: 723, isUnsigned: true)
!2825 = !DIEnumerator(name: "ICON_BLANK314", value: 724, isUnsigned: true)
!2826 = !DIEnumerator(name: "ICON_BLANK315", value: 725, isUnsigned: true)
!2827 = !DIEnumerator(name: "ICON_FILE_BACKUP", value: 726, isUnsigned: true)
!2828 = !DIEnumerator(name: "ICON_DISK_DRIVE", value: 727, isUnsigned: true)
!2829 = !DIEnumerator(name: "ICON_MATPLANE", value: 728, isUnsigned: true)
!2830 = !DIEnumerator(name: "ICON_MATSPHERE", value: 729, isUnsigned: true)
!2831 = !DIEnumerator(name: "ICON_MATCUBE", value: 730, isUnsigned: true)
!2832 = !DIEnumerator(name: "ICON_MONKEY", value: 731, isUnsigned: true)
!2833 = !DIEnumerator(name: "ICON_HAIR", value: 732, isUnsigned: true)
!2834 = !DIEnumerator(name: "ICON_ALIASED", value: 733, isUnsigned: true)
!2835 = !DIEnumerator(name: "ICON_ANTIALIASED", value: 734, isUnsigned: true)
!2836 = !DIEnumerator(name: "ICON_MAT_SPHERE_SKY", value: 735, isUnsigned: true)
!2837 = !DIEnumerator(name: "ICON_BLANK319", value: 736, isUnsigned: true)
!2838 = !DIEnumerator(name: "ICON_BLANK320", value: 737, isUnsigned: true)
!2839 = !DIEnumerator(name: "ICON_BLANK321", value: 738, isUnsigned: true)
!2840 = !DIEnumerator(name: "ICON_BLANK322", value: 739, isUnsigned: true)
!2841 = !DIEnumerator(name: "ICON_WORDWRAP_OFF", value: 740, isUnsigned: true)
!2842 = !DIEnumerator(name: "ICON_WORDWRAP_ON", value: 741, isUnsigned: true)
!2843 = !DIEnumerator(name: "ICON_SYNTAX_OFF", value: 742, isUnsigned: true)
!2844 = !DIEnumerator(name: "ICON_SYNTAX_ON", value: 743, isUnsigned: true)
!2845 = !DIEnumerator(name: "ICON_LINENUMBERS_OFF", value: 744, isUnsigned: true)
!2846 = !DIEnumerator(name: "ICON_LINENUMBERS_ON", value: 745, isUnsigned: true)
!2847 = !DIEnumerator(name: "ICON_SCRIPTPLUGINS", value: 746, isUnsigned: true)
!2848 = !DIEnumerator(name: "ICON_BLANK323", value: 747, isUnsigned: true)
!2849 = !DIEnumerator(name: "ICON_BLANK324", value: 748, isUnsigned: true)
!2850 = !DIEnumerator(name: "ICON_BLANK325", value: 749, isUnsigned: true)
!2851 = !DIEnumerator(name: "ICON_BLANK326", value: 750, isUnsigned: true)
!2852 = !DIEnumerator(name: "ICON_BLANK327", value: 751, isUnsigned: true)
!2853 = !DIEnumerator(name: "ICON_BLANK328", value: 752, isUnsigned: true)
!2854 = !DIEnumerator(name: "ICON_BLANK328b", value: 753, isUnsigned: true)
!2855 = !DIEnumerator(name: "ICON_SEQ_SEQUENCER", value: 754, isUnsigned: true)
!2856 = !DIEnumerator(name: "ICON_SEQ_PREVIEW", value: 755, isUnsigned: true)
!2857 = !DIEnumerator(name: "ICON_SEQ_LUMA_WAVEFORM", value: 756, isUnsigned: true)
!2858 = !DIEnumerator(name: "ICON_SEQ_CHROMA_SCOPE", value: 757, isUnsigned: true)
!2859 = !DIEnumerator(name: "ICON_SEQ_HISTOGRAM", value: 758, isUnsigned: true)
!2860 = !DIEnumerator(name: "ICON_SEQ_SPLITVIEW", value: 759, isUnsigned: true)
!2861 = !DIEnumerator(name: "ICON_BLANK331", value: 760, isUnsigned: true)
!2862 = !DIEnumerator(name: "ICON_BLANK332", value: 761, isUnsigned: true)
!2863 = !DIEnumerator(name: "ICON_BLANK333", value: 762, isUnsigned: true)
!2864 = !DIEnumerator(name: "ICON_IMAGE_RGB", value: 763, isUnsigned: true)
!2865 = !DIEnumerator(name: "ICON_IMAGE_RGB_ALPHA", value: 764, isUnsigned: true)
!2866 = !DIEnumerator(name: "ICON_IMAGE_ALPHA", value: 765, isUnsigned: true)
!2867 = !DIEnumerator(name: "ICON_IMAGE_ZDEPTH", value: 766, isUnsigned: true)
!2868 = !DIEnumerator(name: "ICON_IMAGEFILE", value: 767, isUnsigned: true)
!2869 = !DIEnumerator(name: "ICON_BLANK336", value: 768, isUnsigned: true)
!2870 = !DIEnumerator(name: "ICON_BLANK337", value: 769, isUnsigned: true)
!2871 = !DIEnumerator(name: "ICON_BLANK338", value: 770, isUnsigned: true)
!2872 = !DIEnumerator(name: "ICON_BLANK339", value: 771, isUnsigned: true)
!2873 = !DIEnumerator(name: "ICON_BLANK340", value: 772, isUnsigned: true)
!2874 = !DIEnumerator(name: "ICON_BLANK341", value: 773, isUnsigned: true)
!2875 = !DIEnumerator(name: "ICON_BLANK342", value: 774, isUnsigned: true)
!2876 = !DIEnumerator(name: "ICON_BLANK343", value: 775, isUnsigned: true)
!2877 = !DIEnumerator(name: "ICON_BLANK344", value: 776, isUnsigned: true)
!2878 = !DIEnumerator(name: "ICON_BLANK345", value: 777, isUnsigned: true)
!2879 = !DIEnumerator(name: "ICON_BLANK346", value: 778, isUnsigned: true)
!2880 = !DIEnumerator(name: "ICON_BLANK346b", value: 779, isUnsigned: true)
!2881 = !DIEnumerator(name: "ICON_BRUSH_ADD", value: 780, isUnsigned: true)
!2882 = !DIEnumerator(name: "ICON_BRUSH_BLOB", value: 781, isUnsigned: true)
!2883 = !DIEnumerator(name: "ICON_BRUSH_BLUR", value: 782, isUnsigned: true)
!2884 = !DIEnumerator(name: "ICON_BRUSH_CLAY", value: 783, isUnsigned: true)
!2885 = !DIEnumerator(name: "ICON_BRUSH_CLAY_STRIPS", value: 784, isUnsigned: true)
!2886 = !DIEnumerator(name: "ICON_BRUSH_CLONE", value: 785, isUnsigned: true)
!2887 = !DIEnumerator(name: "ICON_BRUSH_CREASE", value: 786, isUnsigned: true)
!2888 = !DIEnumerator(name: "ICON_BRUSH_DARKEN", value: 787, isUnsigned: true)
!2889 = !DIEnumerator(name: "ICON_BRUSH_FILL", value: 788, isUnsigned: true)
!2890 = !DIEnumerator(name: "ICON_BRUSH_FLATTEN", value: 789, isUnsigned: true)
!2891 = !DIEnumerator(name: "ICON_BRUSH_GRAB", value: 790, isUnsigned: true)
!2892 = !DIEnumerator(name: "ICON_BRUSH_INFLATE", value: 791, isUnsigned: true)
!2893 = !DIEnumerator(name: "ICON_BRUSH_LAYER", value: 792, isUnsigned: true)
!2894 = !DIEnumerator(name: "ICON_BRUSH_LIGHTEN", value: 793, isUnsigned: true)
!2895 = !DIEnumerator(name: "ICON_BRUSH_MASK", value: 794, isUnsigned: true)
!2896 = !DIEnumerator(name: "ICON_BRUSH_MIX", value: 795, isUnsigned: true)
!2897 = !DIEnumerator(name: "ICON_BRUSH_MULTIPLY", value: 796, isUnsigned: true)
!2898 = !DIEnumerator(name: "ICON_BRUSH_NUDGE", value: 797, isUnsigned: true)
!2899 = !DIEnumerator(name: "ICON_BRUSH_PINCH", value: 798, isUnsigned: true)
!2900 = !DIEnumerator(name: "ICON_BRUSH_SCRAPE", value: 799, isUnsigned: true)
!2901 = !DIEnumerator(name: "ICON_BRUSH_SCULPT_DRAW", value: 800, isUnsigned: true)
!2902 = !DIEnumerator(name: "ICON_BRUSH_SMEAR", value: 801, isUnsigned: true)
!2903 = !DIEnumerator(name: "ICON_BRUSH_SMOOTH", value: 802, isUnsigned: true)
!2904 = !DIEnumerator(name: "ICON_BRUSH_SNAKE_HOOK", value: 803, isUnsigned: true)
!2905 = !DIEnumerator(name: "ICON_BRUSH_SOFTEN", value: 804, isUnsigned: true)
!2906 = !DIEnumerator(name: "ICON_BRUSH_SUBTRACT", value: 805, isUnsigned: true)
!2907 = !DIEnumerator(name: "ICON_BRUSH_TEXDRAW", value: 806, isUnsigned: true)
!2908 = !DIEnumerator(name: "ICON_BRUSH_TEXFILL", value: 807, isUnsigned: true)
!2909 = !DIEnumerator(name: "ICON_BRUSH_TEXMASK", value: 808, isUnsigned: true)
!2910 = !DIEnumerator(name: "ICON_BRUSH_THUMB", value: 809, isUnsigned: true)
!2911 = !DIEnumerator(name: "ICON_BRUSH_ROTATE", value: 810, isUnsigned: true)
!2912 = !DIEnumerator(name: "ICON_BRUSH_VERTEXDRAW", value: 811, isUnsigned: true)
!2913 = !DIEnumerator(name: "ICON_MATCAP_01", value: 812, isUnsigned: true)
!2914 = !DIEnumerator(name: "ICON_MATCAP_02", value: 813, isUnsigned: true)
!2915 = !DIEnumerator(name: "ICON_MATCAP_03", value: 814, isUnsigned: true)
!2916 = !DIEnumerator(name: "ICON_MATCAP_04", value: 815, isUnsigned: true)
!2917 = !DIEnumerator(name: "ICON_MATCAP_05", value: 816, isUnsigned: true)
!2918 = !DIEnumerator(name: "ICON_MATCAP_06", value: 817, isUnsigned: true)
!2919 = !DIEnumerator(name: "ICON_MATCAP_07", value: 818, isUnsigned: true)
!2920 = !DIEnumerator(name: "ICON_MATCAP_08", value: 819, isUnsigned: true)
!2921 = !DIEnumerator(name: "ICON_MATCAP_09", value: 820, isUnsigned: true)
!2922 = !DIEnumerator(name: "ICON_MATCAP_10", value: 821, isUnsigned: true)
!2923 = !DIEnumerator(name: "ICON_MATCAP_11", value: 822, isUnsigned: true)
!2924 = !DIEnumerator(name: "ICON_MATCAP_12", value: 823, isUnsigned: true)
!2925 = !DIEnumerator(name: "ICON_MATCAP_13", value: 824, isUnsigned: true)
!2926 = !DIEnumerator(name: "ICON_MATCAP_14", value: 825, isUnsigned: true)
!2927 = !DIEnumerator(name: "ICON_MATCAP_15", value: 826, isUnsigned: true)
!2928 = !DIEnumerator(name: "ICON_MATCAP_16", value: 827, isUnsigned: true)
!2929 = !DIEnumerator(name: "ICON_MATCAP_17", value: 828, isUnsigned: true)
!2930 = !DIEnumerator(name: "ICON_MATCAP_18", value: 829, isUnsigned: true)
!2931 = !DIEnumerator(name: "ICON_MATCAP_19", value: 830, isUnsigned: true)
!2932 = !DIEnumerator(name: "ICON_MATCAP_20", value: 831, isUnsigned: true)
!2933 = !DIEnumerator(name: "ICON_MATCAP_21", value: 832, isUnsigned: true)
!2934 = !DIEnumerator(name: "ICON_MATCAP_22", value: 833, isUnsigned: true)
!2935 = !DIEnumerator(name: "ICON_MATCAP_23", value: 834, isUnsigned: true)
!2936 = !DIEnumerator(name: "ICON_MATCAP_24", value: 835, isUnsigned: true)
!2937 = !DIEnumerator(name: "VICO_VIEW3D_VEC", value: 836, isUnsigned: true)
!2938 = !DIEnumerator(name: "VICO_EDIT_VEC", value: 837, isUnsigned: true)
!2939 = !DIEnumerator(name: "VICO_EDITMODE_VEC_DEHLT", value: 838, isUnsigned: true)
!2940 = !DIEnumerator(name: "VICO_EDITMODE_VEC_HLT", value: 839, isUnsigned: true)
!2941 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_RIGHT_VEC", value: 840, isUnsigned: true)
!2942 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_DOWN_VEC", value: 841, isUnsigned: true)
!2943 = !DIEnumerator(name: "VICO_MOVE_UP_VEC", value: 842, isUnsigned: true)
!2944 = !DIEnumerator(name: "VICO_MOVE_DOWN_VEC", value: 843, isUnsigned: true)
!2945 = !DIEnumerator(name: "VICO_X_VEC", value: 844, isUnsigned: true)
!2946 = !DIEnumerator(name: "VICO_SMALL_TRI_RIGHT_VEC", value: 845, isUnsigned: true)
!2947 = !DIEnumerator(name: "BIFICONID_LAST", value: 846, isUnsigned: true)
!2948 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eCurveElem_Types", file: !3, line: 108, baseType: !278, size: 32, elements: !2949)
!2949 = !{!2950, !2951}
!2950 = !DIEnumerator(name: "CURVE_VERTEX", value: 0, isUnsigned: true)
!2951 = !DIEnumerator(name: "CURVE_SEGMENT", value: 1, isUnsigned: true)
!2952 = !{!56, !2953, !3093, !204, !3104, !3126, !3154, !343, !3155, !3163, !3191, !3194}
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2954, size: 64)
!2954 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curve", file: !458, line: 273, baseType: !2955)
!2955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Curve", file: !458, line: 193, size: 4224, elements: !2956)
!2956 = !{!2957, !2958, !2959, !2960, !2961, !2971, !2972, !2973, !2974, !2975, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3060, !3061, !3064, !3065, !3066, !3067, !3075, !3076, !3077, !3086, !3087, !3088, !3089, !3090, !3091, !3092}
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2955, file: !458, line: 194, baseType: !112, size: 960)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2955, file: !458, line: 195, baseType: !158, size: 64, offset: 960)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2955, file: !458, line: 197, baseType: !254, size: 64, offset: 1024)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "nurb", scope: !2955, file: !458, line: 199, baseType: !58, size: 128, offset: 1088)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "editnurb", scope: !2955, file: !458, line: 201, baseType: !2962, size: 64, offset: 1216)
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 64)
!2963 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditNurb", file: !458, line: 191, baseType: !2964)
!2964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditNurb", file: !458, line: 180, size: 256, elements: !2965)
!2965 = !{!2966, !2967, !2968, !2969}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "nurbs", scope: !2964, file: !458, line: 182, baseType: !58, size: 128)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "keyindex", scope: !2964, file: !458, line: 185, baseType: !273, size: 64, offset: 128)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !2964, file: !458, line: 188, baseType: !22, size: 32, offset: 192)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2964, file: !458, line: 190, baseType: !2970, size: 32, offset: 224)
!2970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 32, elements: !356)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "bevobj", scope: !2955, file: !458, line: 203, baseType: !229, size: 64, offset: 1280)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "taperobj", scope: !2955, file: !458, line: 203, baseType: !229, size: 64, offset: 1344)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "textoncurve", scope: !2955, file: !458, line: 203, baseType: !229, size: 64, offset: 1408)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2955, file: !458, line: 204, baseType: !250, size: 64, offset: 1472)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2955, file: !458, line: 205, baseType: !2976, size: 64, offset: 1536)
!2976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2977, size: 64)
!2977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !252, line: 73, size: 1792, elements: !2978)
!2978 = !{!2979, !2980, !2981, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2977, file: !252, line: 74, baseType: !112, size: 960)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2977, file: !252, line: 75, baseType: !158, size: 64, offset: 960)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "refkey", scope: !2977, file: !252, line: 80, baseType: !2982, size: 64, offset: 1024)
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 64)
!2983 = !DIDerivedType(tag: DW_TAG_typedef, name: "KeyBlock", file: !252, line: 70, baseType: !2984)
!2984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KeyBlock", file: !252, line: 45, size: 1472, elements: !2985)
!2985 = !{!2986, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2984, file: !252, line: 46, baseType: !2987, size: 64)
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2984, size: 64)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2984, file: !252, line: 46, baseType: !2987, size: 64, offset: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2984, file: !252, line: 48, baseType: !204, size: 32, offset: 128)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !2984, file: !252, line: 51, baseType: !204, size: 32, offset: 160)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2984, file: !252, line: 53, baseType: !48, size: 16, offset: 192)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2984, file: !252, line: 54, baseType: !48, size: 16, offset: 208)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "relative", scope: !2984, file: !252, line: 56, baseType: !48, size: 16, offset: 224)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2984, file: !252, line: 57, baseType: !48, size: 16, offset: 240)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "totelem", scope: !2984, file: !252, line: 59, baseType: !22, size: 32, offset: 256)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2984, file: !252, line: 60, baseType: !22, size: 32, offset: 288)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2984, file: !252, line: 62, baseType: !56, size: 64, offset: 320)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2984, file: !252, line: 63, baseType: !33, size: 512, offset: 384)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !2984, file: !252, line: 64, baseType: !33, size: 512, offset: 896)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "slidermin", scope: !2984, file: !252, line: 67, baseType: !204, size: 32, offset: 1408)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "slidermax", scope: !2984, file: !252, line: 68, baseType: !204, size: 32, offset: 1440)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "elemstr", scope: !2977, file: !252, line: 85, baseType: !1545, size: 256, offset: 1088)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !2977, file: !252, line: 86, baseType: !22, size: 32, offset: 1344)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2977, file: !252, line: 87, baseType: !22, size: 32, offset: 1376)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2977, file: !252, line: 89, baseType: !58, size: 128, offset: 1408)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2977, file: !252, line: 90, baseType: !250, size: 64, offset: 1536)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !2977, file: !252, line: 92, baseType: !125, size: 64, offset: 1600)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2977, file: !252, line: 94, baseType: !48, size: 16, offset: 1664)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !2977, file: !252, line: 95, baseType: !48, size: 16, offset: 1680)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "slurph", scope: !2977, file: !252, line: 96, baseType: !48, size: 16, offset: 1696)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2977, file: !252, line: 97, baseType: !48, size: 16, offset: 1712)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !2977, file: !252, line: 101, baseType: !204, size: 32, offset: 1728)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "uidgen", scope: !2977, file: !252, line: 104, baseType: !22, size: 32, offset: 1760)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2955, file: !458, line: 206, baseType: !339, size: 64, offset: 1600)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2955, file: !458, line: 209, baseType: !282, size: 96, offset: 1664)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2955, file: !458, line: 210, baseType: !282, size: 96, offset: 1760)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !2955, file: !458, line: 211, baseType: !282, size: 96, offset: 1856)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2955, file: !458, line: 213, baseType: !48, size: 16, offset: 1952)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !2955, file: !458, line: 215, baseType: !48, size: 16, offset: 1968)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !2955, file: !458, line: 216, baseType: !48, size: 16, offset: 1984)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "twist_mode", scope: !2955, file: !458, line: 216, baseType: !48, size: 16, offset: 2000)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "twist_smooth", scope: !2955, file: !458, line: 217, baseType: !204, size: 32, offset: 2016)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "smallcaps_scale", scope: !2955, file: !458, line: 217, baseType: !204, size: 32, offset: 2048)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "pathlen", scope: !2955, file: !458, line: 219, baseType: !22, size: 32, offset: 2080)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "bevresol", scope: !2955, file: !458, line: 220, baseType: !48, size: 16, offset: 2112)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !2955, file: !458, line: 220, baseType: !48, size: 16, offset: 2128)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2955, file: !458, line: 221, baseType: !22, size: 32, offset: 2144)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2955, file: !458, line: 222, baseType: !204, size: 32, offset: 2176)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "ext1", scope: !2955, file: !458, line: 222, baseType: !204, size: 32, offset: 2208)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "ext2", scope: !2955, file: !458, line: 222, baseType: !204, size: 32, offset: 2240)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !2955, file: !458, line: 225, baseType: !48, size: 16, offset: 2272)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !2955, file: !458, line: 225, baseType: !48, size: 16, offset: 2288)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "resolu_ren", scope: !2955, file: !458, line: 226, baseType: !48, size: 16, offset: 2304)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "resolv_ren", scope: !2955, file: !458, line: 226, baseType: !48, size: 16, offset: 2320)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "actnu", scope: !2955, file: !458, line: 229, baseType: !22, size: 32, offset: 2336)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "actvert", scope: !2955, file: !458, line: 231, baseType: !22, size: 32, offset: 2368)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2955, file: !458, line: 233, baseType: !2970, size: 32, offset: 2400)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !2955, file: !458, line: 236, baseType: !48, size: 16, offset: 2432)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "spacemode", scope: !2955, file: !458, line: 237, baseType: !14, size: 8, offset: 2448)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2955, file: !458, line: 237, baseType: !14, size: 8, offset: 2456)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !2955, file: !458, line: 238, baseType: !204, size: 32, offset: 2464)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "linedist", scope: !2955, file: !458, line: 238, baseType: !204, size: 32, offset: 2496)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "shear", scope: !2955, file: !458, line: 238, baseType: !204, size: 32, offset: 2528)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !2955, file: !458, line: 238, baseType: !204, size: 32, offset: 2560)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "wordspace", scope: !2955, file: !458, line: 238, baseType: !204, size: 32, offset: 2592)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "ulpos", scope: !2955, file: !458, line: 238, baseType: !204, size: 32, offset: 2624)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "ulheight", scope: !2955, file: !458, line: 238, baseType: !204, size: 32, offset: 2656)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !2955, file: !458, line: 239, baseType: !204, size: 32, offset: 2688)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !2955, file: !458, line: 239, baseType: !204, size: 32, offset: 2720)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "linewidth", scope: !2955, file: !458, line: 240, baseType: !204, size: 32, offset: 2752)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2955, file: !458, line: 244, baseType: !22, size: 32, offset: 2784)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "selstart", scope: !2955, file: !458, line: 245, baseType: !22, size: 32, offset: 2816)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !2955, file: !458, line: 245, baseType: !22, size: 32, offset: 2848)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "len_wchar", scope: !2955, file: !458, line: 248, baseType: !22, size: 32, offset: 2880)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2955, file: !458, line: 249, baseType: !22, size: 32, offset: 2912)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2955, file: !458, line: 250, baseType: !343, size: 64, offset: 2944)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "editfont", scope: !2955, file: !458, line: 251, baseType: !3058, size: 64, offset: 3008)
!3058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3059, size: 64)
!3059 = !DICompositeType(tag: DW_TAG_structure_type, name: "EditFont", file: !458, line: 50, flags: DIFlagFwdDecl)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2955, file: !458, line: 253, baseType: !33, size: 512, offset: 3072)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !2955, file: !458, line: 254, baseType: !3062, size: 64, offset: 3584)
!3062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3063, size: 64)
!3063 = !DICompositeType(tag: DW_TAG_structure_type, name: "VFont", file: !458, line: 47, flags: DIFlagFwdDecl)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "vfontb", scope: !2955, file: !458, line: 255, baseType: !3062, size: 64, offset: 3648)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "vfonti", scope: !2955, file: !458, line: 256, baseType: !3062, size: 64, offset: 3712)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "vfontbi", scope: !2955, file: !458, line: 257, baseType: !3062, size: 64, offset: 3776)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "tb", scope: !2955, file: !458, line: 259, baseType: !3068, size: 64, offset: 3840)
!3068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3069, size: 64)
!3069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextBox", file: !458, line: 176, size: 128, elements: !3070)
!3070 = !{!3071, !3072, !3073, !3074}
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3069, file: !458, line: 177, baseType: !204, size: 32)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3069, file: !458, line: 177, baseType: !204, size: 32, offset: 32)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !3069, file: !458, line: 177, baseType: !204, size: 32, offset: 64)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !3069, file: !458, line: 177, baseType: !204, size: 32, offset: 96)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "totbox", scope: !2955, file: !458, line: 260, baseType: !22, size: 32, offset: 3904)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "actbox", scope: !2955, file: !458, line: 260, baseType: !22, size: 32, offset: 3936)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "strinfo", scope: !2955, file: !458, line: 262, baseType: !3078, size: 64, offset: 3968)
!3078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3079, size: 64)
!3079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CharInfo", file: !458, line: 168, size: 64, elements: !3080)
!3080 = !{!3081, !3082, !3083, !3084, !3085}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "kern", scope: !3079, file: !458, line: 169, baseType: !48, size: 16)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3079, file: !458, line: 170, baseType: !48, size: 16, offset: 16)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3079, file: !458, line: 171, baseType: !14, size: 8, offset: 32)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3079, file: !458, line: 172, baseType: !14, size: 8, offset: 40)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3079, file: !458, line: 173, baseType: !48, size: 16, offset: 48)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "curinfo", scope: !2955, file: !458, line: 263, baseType: !3079, size: 64, offset: 4032)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !2955, file: !458, line: 267, baseType: !204, size: 32, offset: 4096)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1", scope: !2955, file: !458, line: 268, baseType: !204, size: 32, offset: 4128)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2", scope: !2955, file: !458, line: 268, baseType: !204, size: 32, offset: 4160)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1_mapping", scope: !2955, file: !458, line: 269, baseType: !14, size: 8, offset: 4192)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2_mapping", scope: !2955, file: !458, line: 269, baseType: !14, size: 8, offset: 4200)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2955, file: !458, line: 271, baseType: !1262, size: 16, offset: 4208)
!3093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3094, size: 64)
!3094 = !DIDerivedType(tag: DW_TAG_typedef, name: "BPoint", file: !458, line: 141, baseType: !3095)
!3095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BPoint", file: !458, line: 136, size: 288, elements: !3096)
!3096 = !{!3097, !3098, !3099, !3100, !3101, !3102, !3103}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3095, file: !458, line: 137, baseType: !355, size: 128)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !3095, file: !458, line: 138, baseType: !204, size: 32, offset: 128)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3095, file: !458, line: 138, baseType: !204, size: 32, offset: 160)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !3095, file: !458, line: 139, baseType: !48, size: 16, offset: 192)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !3095, file: !458, line: 139, baseType: !48, size: 16, offset: 208)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !3095, file: !458, line: 140, baseType: !204, size: 32, offset: 224)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3095, file: !458, line: 140, baseType: !204, size: 32, offset: 256)
!3104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3105, size: 64)
!3105 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !458, line: 133, baseType: !3106)
!3106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !458, line: 117, size: 576, elements: !3107)
!3107 = !{!3108, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125}
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3106, file: !458, line: 118, baseType: !3109, size: 288)
!3109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 288, elements: !3110)
!3110 = !{!261, !261}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !3106, file: !458, line: 119, baseType: !204, size: 32, offset: 288)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3106, file: !458, line: 119, baseType: !204, size: 32, offset: 320)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !3106, file: !458, line: 119, baseType: !204, size: 32, offset: 352)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3106, file: !458, line: 121, baseType: !14, size: 8, offset: 384)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !3106, file: !458, line: 123, baseType: !14, size: 8, offset: 392)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !3106, file: !458, line: 123, baseType: !14, size: 8, offset: 400)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !3106, file: !458, line: 124, baseType: !14, size: 8, offset: 408)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !3106, file: !458, line: 124, baseType: !14, size: 8, offset: 416)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !3106, file: !458, line: 124, baseType: !14, size: 8, offset: 424)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !3106, file: !458, line: 126, baseType: !14, size: 8, offset: 432)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !3106, file: !458, line: 128, baseType: !14, size: 8, offset: 440)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !3106, file: !458, line: 129, baseType: !204, size: 32, offset: 448)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !3106, file: !458, line: 130, baseType: !204, size: 32, offset: 480)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !3106, file: !458, line: 130, baseType: !204, size: 32, offset: 512)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3106, file: !458, line: 132, baseType: !2970, size: 32, offset: 544)
!3126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3127, size: 64)
!3127 = !DIDerivedType(tag: DW_TAG_typedef, name: "HookModifierData", file: !2003, line: 551, baseType: !3128)
!3128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HookModifierData", file: !2003, line: 537, size: 2752, elements: !3129)
!3129 = !{!3130, !3144, !3145, !3146, !3147, !3148, !3149, !3151, !3152, !3153}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !3128, file: !2003, line: 538, baseType: !3131, size: 896)
!3131 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierData", file: !2003, line: 110, baseType: !3132)
!3132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierData", file: !2003, line: 99, size: 896, elements: !3133)
!3133 = !{!3134, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3132, file: !2003, line: 100, baseType: !3135, size: 64)
!3135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3132, size: 64)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3132, file: !2003, line: 100, baseType: !3135, size: 64, offset: 64)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3132, file: !2003, line: 102, baseType: !22, size: 32, offset: 128)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3132, file: !2003, line: 102, baseType: !22, size: 32, offset: 160)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "stackindex", scope: !3132, file: !2003, line: 103, baseType: !22, size: 32, offset: 192)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3132, file: !2003, line: 103, baseType: !22, size: 32, offset: 224)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3132, file: !2003, line: 104, baseType: !33, size: 512, offset: 256)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3132, file: !2003, line: 107, baseType: !152, size: 64, offset: 768)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !3132, file: !2003, line: 109, baseType: !343, size: 64, offset: 832)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3128, file: !2003, line: 540, baseType: !229, size: 64, offset: 896)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !3128, file: !2003, line: 541, baseType: !33, size: 512, offset: 960)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !3128, file: !2003, line: 543, baseType: !364, size: 512, offset: 1472)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "cent", scope: !3128, file: !2003, line: 544, baseType: !282, size: 96, offset: 1984)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !3128, file: !2003, line: 545, baseType: !204, size: 32, offset: 2080)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "indexar", scope: !3128, file: !2003, line: 547, baseType: !3150, size: 64, offset: 2112)
!3150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "totindex", scope: !3128, file: !2003, line: 548, baseType: !22, size: 32, offset: 2176)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "force", scope: !3128, file: !2003, line: 549, baseType: !204, size: 32, offset: 2208)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3128, file: !2003, line: 550, baseType: !33, size: 512, offset: 2240)
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64)
!3155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3156, size: 64)
!3156 = !DIDerivedType(tag: DW_TAG_typedef, name: "NurbSort", file: !3, line: 4137, baseType: !3157)
!3157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NurbSort", file: !3, line: 4133, size: 320, elements: !3158)
!3158 = !{!3159, !3161, !3162, !3190}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3157, file: !3, line: 4134, baseType: !3160, size: 64)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3157, file: !3, line: 4134, baseType: !3160, size: 64, offset: 64)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "nu", scope: !3157, file: !3, line: 4135, baseType: !3163, size: 64, offset: 128)
!3163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3164, size: 64)
!3164 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nurb", file: !458, line: 166, baseType: !3165)
!3165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Nurb", file: !458, line: 147, size: 704, elements: !3166)
!3166 = !{!3167, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189}
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3165, file: !458, line: 148, baseType: !3168, size: 64)
!3168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3165, size: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3165, file: !458, line: 148, baseType: !3168, size: 64, offset: 64)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3165, file: !458, line: 149, baseType: !48, size: 16, offset: 128)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3165, file: !458, line: 150, baseType: !48, size: 16, offset: 144)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !3165, file: !458, line: 151, baseType: !48, size: 16, offset: 160)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3165, file: !458, line: 151, baseType: !48, size: 16, offset: 176)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "pntsu", scope: !3165, file: !458, line: 152, baseType: !22, size: 32, offset: 192)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "pntsv", scope: !3165, file: !458, line: 152, baseType: !22, size: 32, offset: 224)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3165, file: !458, line: 153, baseType: !957, size: 32, offset: 256)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !3165, file: !458, line: 154, baseType: !48, size: 16, offset: 288)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !3165, file: !458, line: 154, baseType: !48, size: 16, offset: 304)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "orderu", scope: !3165, file: !458, line: 155, baseType: !48, size: 16, offset: 320)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "orderv", scope: !3165, file: !458, line: 155, baseType: !48, size: 16, offset: 336)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "flagu", scope: !3165, file: !458, line: 156, baseType: !48, size: 16, offset: 352)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "flagv", scope: !3165, file: !458, line: 156, baseType: !48, size: 16, offset: 368)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "knotsu", scope: !3165, file: !458, line: 158, baseType: !3154, size: 64, offset: 384)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "knotsv", scope: !3165, file: !458, line: 158, baseType: !3154, size: 64, offset: 448)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !3165, file: !458, line: 159, baseType: !3093, size: 64, offset: 512)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !3165, file: !458, line: 160, baseType: !3104, size: 64, offset: 576)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "tilt_interp", scope: !3165, file: !458, line: 162, baseType: !48, size: 16, offset: 640)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "radius_interp", scope: !3165, file: !458, line: 163, baseType: !48, size: 16, offset: 656)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "charidx", scope: !3165, file: !458, line: 165, baseType: !22, size: 32, offset: 672)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3157, file: !3, line: 4136, baseType: !282, size: 96, offset: 192)
!3191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3192, size: 64)
!3192 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_bitmap", file: !3193, line: 33, baseType: !278)
!3193 = !DIFile(filename: "blender/source/blender/blenlib/BLI_bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3195, size: 64)
!3195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gh_Entry", file: !3196, line: 94, size: 192, elements: !3197)
!3196 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3197 = !{!3198, !3199, !3200}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3195, file: !3196, line: 94, baseType: !56, size: 64)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3195, file: !3196, line: 94, baseType: !56, size: 64, offset: 64)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3195, file: !3196, line: 94, baseType: !56, size: 64, offset: 128)
!3201 = !{!0, !3202, !3215, !3219, !3221, !3230, !3232}
!3202 = !DIGlobalVariableExpression(var: !3203, expr: !DIExpression())
!3203 = distinct !DIGlobalVariable(name: "editcurve_handle_type_items", scope: !3204, file: !3, line: 3987, type: !3206, isLocal: true, isDefinition: true)
!3204 = distinct !DISubprogram(name: "CURVE_OT_handle_type_set", scope: !3, file: !3, line: 3984, type: !4, scopeLine: 3985, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!3205 = !{}
!3206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3207, size: 1920, elements: !1298)
!3207 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !25, line: 308, baseType: !3208)
!3208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !25, line: 302, size: 320, elements: !3209)
!3209 = !{!3210, !3211, !3212, !3213, !3214}
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3208, file: !25, line: 303, baseType: !22, size: 32)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !3208, file: !25, line: 304, baseType: !12, size: 64, offset: 64)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !3208, file: !25, line: 305, baseType: !22, size: 32, offset: 128)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3208, file: !25, line: 306, baseType: !12, size: 64, offset: 192)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3208, file: !25, line: 307, baseType: !12, size: 64, offset: 256)
!3215 = !DIGlobalVariableExpression(var: !3216, expr: !DIExpression())
!3216 = distinct !DIGlobalVariable(name: "direction_items", scope: !3217, file: !3, line: 5400, type: !3218, isLocal: true, isDefinition: true)
!3217 = distinct !DISubprogram(name: "CURVE_OT_cyclic_toggle", scope: !3, file: !3, line: 5398, type: !4, scopeLine: 5399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!3218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3207, size: 960, elements: !283)
!3219 = !DIGlobalVariableExpression(var: !3220, expr: !DIExpression())
!3220 = distinct !DIGlobalVariable(name: "nsortbase", scope: !1881, file: !3, line: 4139, type: !58, isLocal: true, isDefinition: true)
!3221 = !DIGlobalVariableExpression(var: !3222, expr: !DIExpression())
!3222 = distinct !DIGlobalVariable(name: "last", scope: !3223, file: !3, line: 5567, type: !3093, isLocal: true, isDefinition: true)
!3223 = distinct !DISubprogram(name: "select_row_exec", scope: !3, file: !3, line: 5562, type: !3224, scopeLine: 5563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!3224 = !DISubroutineType(types: !3225)
!3225 = !{!22, !3226, !3228}
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 64)
!3227 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !1026, line: 69, baseType: !24)
!3228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3229, size: 64)
!3229 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !28, line: 348, baseType: !27)
!3230 = !DIGlobalVariableExpression(var: !3231, expr: !DIExpression())
!3231 = distinct !DIGlobalVariable(name: "direction", scope: !3223, file: !3, line: 5568, type: !22, isLocal: true, isDefinition: true)
!3232 = !DIGlobalVariableExpression(var: !3233, expr: !DIExpression())
!3233 = distinct !DIGlobalVariable(name: "curve_delete_type_items", scope: !1881, file: !3, line: 6597, type: !3218, isLocal: true, isDefinition: true)
!3234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3207, size: 1280, elements: !356)
!3235 = !{i32 7, !"Dwarf Version", i32 4}
!3236 = !{i32 2, !"Debug Info Version", i32 3}
!3237 = !{i32 1, !"wchar_size", i32 4}
!3238 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!3239 = distinct !DISubprogram(name: "object_editcurve_get", scope: !3, file: !3, line: 118, type: !3240, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!3240 = !DISubroutineType(types: !3241)
!3241 = !{!486, !3242}
!3242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3243, size: 64)
!3243 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !231, line: 295, baseType: !230)
!3244 = !DILocalVariable(name: "ob", arg: 1, scope: !3239, file: !3, line: 118, type: !3242)
!3245 = !DILocation(line: 118, column: 40, scope: !3239)
!3246 = !DILocation(line: 120, column: 6, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3239, file: !3, line: 120, column: 6)
!3248 = !DILocation(line: 120, column: 9, scope: !3247)
!3249 = !DILocation(line: 120, column: 12, scope: !3247)
!3250 = !DILocation(line: 120, column: 6, scope: !3239)
!3251 = !DILocalVariable(name: "cu", scope: !3252, file: !3, line: 121, type: !2953)
!3252 = distinct !DILexicalBlock(scope: !3247, file: !3, line: 120, column: 47)
!3253 = !DILocation(line: 121, column: 10, scope: !3252)
!3254 = !DILocation(line: 121, column: 15, scope: !3252)
!3255 = !DILocation(line: 121, column: 19, scope: !3252)
!3256 = !DILocation(line: 122, column: 11, scope: !3252)
!3257 = !DILocation(line: 122, column: 15, scope: !3252)
!3258 = !DILocation(line: 122, column: 25, scope: !3252)
!3259 = !DILocation(line: 122, column: 3, scope: !3252)
!3260 = !DILocation(line: 124, column: 2, scope: !3239)
!3261 = !DILocation(line: 125, column: 1, scope: !3239)
!3262 = distinct !DISubprogram(name: "isNurbsel", scope: !3, file: !3, line: 184, type: !3263, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!3263 = !DISubroutineType(types: !3264)
!3264 = !{!22, !3163}
!3265 = !DILocalVariable(name: "nu", arg: 1, scope: !3262, file: !3, line: 184, type: !3163)
!3266 = !DILocation(line: 184, column: 21, scope: !3262)
!3267 = !DILocalVariable(name: "bezt", scope: !3262, file: !3, line: 186, type: !3104)
!3268 = !DILocation(line: 186, column: 13, scope: !3262)
!3269 = !DILocalVariable(name: "bp", scope: !3262, file: !3, line: 187, type: !3093)
!3270 = !DILocation(line: 187, column: 10, scope: !3262)
!3271 = !DILocalVariable(name: "a", scope: !3262, file: !3, line: 188, type: !22)
!3272 = !DILocation(line: 188, column: 6, scope: !3262)
!3273 = !DILocation(line: 190, column: 6, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3262, file: !3, line: 190, column: 6)
!3275 = !DILocation(line: 190, column: 10, scope: !3274)
!3276 = !DILocation(line: 190, column: 15, scope: !3274)
!3277 = !DILocation(line: 190, column: 6, scope: !3262)
!3278 = !DILocation(line: 191, column: 10, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3274, file: !3, line: 190, column: 29)
!3280 = !DILocation(line: 191, column: 14, scope: !3279)
!3281 = !DILocation(line: 191, column: 8, scope: !3279)
!3282 = !DILocation(line: 192, column: 7, scope: !3279)
!3283 = !DILocation(line: 192, column: 11, scope: !3279)
!3284 = !DILocation(line: 192, column: 5, scope: !3279)
!3285 = !DILocation(line: 193, column: 3, scope: !3279)
!3286 = !DILocation(line: 193, column: 11, scope: !3279)
!3287 = !DILocation(line: 194, column: 10, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !3289, file: !3, line: 194, column: 9)
!3289 = distinct !DILexicalBlock(scope: !3279, file: !3, line: 193, column: 15)
!3290 = !DILocation(line: 194, column: 16, scope: !3288)
!3291 = !DILocation(line: 194, column: 19, scope: !3288)
!3292 = !DILocation(line: 194, column: 29, scope: !3288)
!3293 = !DILocation(line: 194, column: 33, scope: !3288)
!3294 = !DILocation(line: 194, column: 39, scope: !3288)
!3295 = !DILocation(line: 194, column: 42, scope: !3288)
!3296 = !DILocation(line: 194, column: 52, scope: !3288)
!3297 = !DILocation(line: 194, column: 56, scope: !3288)
!3298 = !DILocation(line: 194, column: 62, scope: !3288)
!3299 = !DILocation(line: 194, column: 65, scope: !3288)
!3300 = !DILocation(line: 194, column: 9, scope: !3289)
!3301 = !DILocation(line: 194, column: 77, scope: !3288)
!3302 = !DILocation(line: 195, column: 8, scope: !3289)
!3303 = distinct !{!3303, !3285, !3304}
!3304 = !DILocation(line: 196, column: 3, scope: !3279)
!3305 = !DILocation(line: 197, column: 2, scope: !3279)
!3306 = !DILocation(line: 199, column: 8, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3274, file: !3, line: 198, column: 7)
!3308 = !DILocation(line: 199, column: 12, scope: !3307)
!3309 = !DILocation(line: 199, column: 6, scope: !3307)
!3310 = !DILocation(line: 200, column: 7, scope: !3307)
!3311 = !DILocation(line: 200, column: 11, scope: !3307)
!3312 = !DILocation(line: 200, column: 19, scope: !3307)
!3313 = !DILocation(line: 200, column: 23, scope: !3307)
!3314 = !DILocation(line: 200, column: 17, scope: !3307)
!3315 = !DILocation(line: 200, column: 5, scope: !3307)
!3316 = !DILocation(line: 201, column: 3, scope: !3307)
!3317 = !DILocation(line: 201, column: 11, scope: !3307)
!3318 = !DILocation(line: 202, column: 8, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3320, file: !3, line: 202, column: 8)
!3320 = distinct !DILexicalBlock(scope: !3307, file: !3, line: 201, column: 15)
!3321 = !DILocation(line: 202, column: 12, scope: !3319)
!3322 = !DILocation(line: 202, column: 15, scope: !3319)
!3323 = !DILocation(line: 202, column: 8, scope: !3320)
!3324 = !DILocation(line: 202, column: 25, scope: !3319)
!3325 = !DILocation(line: 203, column: 6, scope: !3320)
!3326 = distinct !{!3326, !3316, !3327}
!3327 = !DILocation(line: 204, column: 3, scope: !3307)
!3328 = !DILocation(line: 206, column: 2, scope: !3262)
!3329 = !DILocation(line: 207, column: 1, scope: !3262)
!3330 = distinct !DISubprogram(name: "printknots", scope: !3, file: !3, line: 236, type: !3331, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!3331 = !DISubroutineType(types: !3332)
!3332 = !{null, !3242}
!3333 = !DILocalVariable(name: "obedit", arg: 1, scope: !3330, file: !3, line: 236, type: !3242)
!3334 = !DILocation(line: 236, column: 25, scope: !3330)
!3335 = !DILocalVariable(name: "editnurb", scope: !3330, file: !3, line: 238, type: !486)
!3336 = !DILocation(line: 238, column: 12, scope: !3330)
!3337 = !DILocation(line: 238, column: 44, scope: !3330)
!3338 = !DILocation(line: 238, column: 23, scope: !3330)
!3339 = !DILocalVariable(name: "nu", scope: !3330, file: !3, line: 239, type: !3163)
!3340 = !DILocation(line: 239, column: 8, scope: !3330)
!3341 = !DILocalVariable(name: "a", scope: !3330, file: !3, line: 240, type: !22)
!3342 = !DILocation(line: 240, column: 6, scope: !3330)
!3343 = !DILocalVariable(name: "num", scope: !3330, file: !3, line: 240, type: !22)
!3344 = !DILocation(line: 240, column: 9, scope: !3330)
!3345 = !DILocation(line: 242, column: 12, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3330, file: !3, line: 242, column: 2)
!3347 = !DILocation(line: 242, column: 22, scope: !3346)
!3348 = !DILocation(line: 242, column: 10, scope: !3346)
!3349 = !DILocation(line: 242, column: 7, scope: !3346)
!3350 = !DILocation(line: 242, column: 29, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3346, file: !3, line: 242, column: 2)
!3352 = !DILocation(line: 242, column: 2, scope: !3346)
!3353 = !DILocation(line: 243, column: 17, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3355, file: !3, line: 243, column: 7)
!3355 = distinct !DILexicalBlock(scope: !3351, file: !3, line: 242, column: 48)
!3356 = !DILocation(line: 243, column: 7, scope: !3354)
!3357 = !DILocation(line: 243, column: 21, scope: !3354)
!3358 = !DILocation(line: 243, column: 24, scope: !3354)
!3359 = !DILocation(line: 243, column: 28, scope: !3354)
!3360 = !DILocation(line: 243, column: 33, scope: !3354)
!3361 = !DILocation(line: 243, column: 7, scope: !3355)
!3362 = !DILocation(line: 244, column: 8, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3364, file: !3, line: 244, column: 8)
!3364 = distinct !DILexicalBlock(scope: !3354, file: !3, line: 243, column: 46)
!3365 = !DILocation(line: 244, column: 12, scope: !3363)
!3366 = !DILocation(line: 244, column: 8, scope: !3364)
!3367 = !DILocation(line: 245, column: 11, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3363, file: !3, line: 244, column: 20)
!3369 = !DILocation(line: 245, column: 9, scope: !3368)
!3370 = !DILocation(line: 246, column: 12, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3368, file: !3, line: 246, column: 5)
!3372 = !DILocation(line: 246, column: 10, scope: !3371)
!3373 = !DILocation(line: 246, column: 17, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 246, column: 5)
!3375 = !DILocation(line: 246, column: 21, scope: !3374)
!3376 = !DILocation(line: 246, column: 19, scope: !3374)
!3377 = !DILocation(line: 246, column: 5, scope: !3371)
!3378 = !DILocation(line: 246, column: 56, scope: !3374)
!3379 = !DILocation(line: 246, column: 59, scope: !3374)
!3380 = !DILocation(line: 246, column: 63, scope: !3374)
!3381 = !DILocation(line: 246, column: 70, scope: !3374)
!3382 = !DILocation(line: 246, column: 31, scope: !3374)
!3383 = !DILocation(line: 246, column: 27, scope: !3374)
!3384 = !DILocation(line: 246, column: 5, scope: !3374)
!3385 = distinct !{!3385, !3377, !3386}
!3386 = !DILocation(line: 246, column: 72, scope: !3371)
!3387 = !DILocation(line: 247, column: 4, scope: !3368)
!3388 = !DILocation(line: 248, column: 8, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3364, file: !3, line: 248, column: 8)
!3390 = !DILocation(line: 248, column: 12, scope: !3389)
!3391 = !DILocation(line: 248, column: 8, scope: !3364)
!3392 = !DILocation(line: 249, column: 11, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3389, file: !3, line: 248, column: 20)
!3394 = !DILocation(line: 249, column: 9, scope: !3393)
!3395 = !DILocation(line: 250, column: 12, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3393, file: !3, line: 250, column: 5)
!3397 = !DILocation(line: 250, column: 10, scope: !3396)
!3398 = !DILocation(line: 250, column: 17, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3396, file: !3, line: 250, column: 5)
!3400 = !DILocation(line: 250, column: 21, scope: !3399)
!3401 = !DILocation(line: 250, column: 19, scope: !3399)
!3402 = !DILocation(line: 250, column: 5, scope: !3396)
!3403 = !DILocation(line: 250, column: 56, scope: !3399)
!3404 = !DILocation(line: 250, column: 59, scope: !3399)
!3405 = !DILocation(line: 250, column: 63, scope: !3399)
!3406 = !DILocation(line: 250, column: 70, scope: !3399)
!3407 = !DILocation(line: 250, column: 31, scope: !3399)
!3408 = !DILocation(line: 250, column: 27, scope: !3399)
!3409 = !DILocation(line: 250, column: 5, scope: !3399)
!3410 = distinct !{!3410, !3402, !3411}
!3411 = !DILocation(line: 250, column: 72, scope: !3396)
!3412 = !DILocation(line: 251, column: 4, scope: !3393)
!3413 = !DILocation(line: 252, column: 3, scope: !3364)
!3414 = !DILocation(line: 253, column: 2, scope: !3355)
!3415 = !DILocation(line: 242, column: 38, scope: !3351)
!3416 = !DILocation(line: 242, column: 42, scope: !3351)
!3417 = !DILocation(line: 242, column: 36, scope: !3351)
!3418 = !DILocation(line: 242, column: 2, scope: !3351)
!3419 = distinct !{!3419, !3352, !3420}
!3420 = !DILocation(line: 253, column: 2, scope: !3346)
!3421 = !DILocation(line: 254, column: 1, scope: !3330)
!3422 = distinct !DISubprogram(name: "ED_curve_updateAnimPaths", scope: !3, file: !3, line: 1148, type: !3423, scopeLine: 1149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!3423 = !DISubroutineType(types: !3424)
!3424 = !{!22, !2953}
!3425 = !DILocalVariable(name: "cu", arg: 1, scope: !3422, file: !3, line: 1148, type: !2953)
!3426 = !DILocation(line: 1148, column: 37, scope: !3422)
!3427 = !DILocalVariable(name: "adt", scope: !3422, file: !3, line: 1150, type: !3428)
!3428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3429, size: 64)
!3429 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimData", file: !160, line: 869, baseType: !159)
!3430 = !DILocation(line: 1150, column: 12, scope: !3422)
!3431 = !DILocation(line: 1150, column: 40, scope: !3422)
!3432 = !DILocation(line: 1150, column: 44, scope: !3422)
!3433 = !DILocation(line: 1150, column: 18, scope: !3422)
!3434 = !DILocalVariable(name: "editnurb", scope: !3422, file: !3, line: 1151, type: !2962)
!3435 = !DILocation(line: 1151, column: 12, scope: !3422)
!3436 = !DILocation(line: 1151, column: 23, scope: !3422)
!3437 = !DILocation(line: 1151, column: 27, scope: !3422)
!3438 = !DILocation(line: 1153, column: 7, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3422, file: !3, line: 1153, column: 6)
!3440 = !DILocation(line: 1153, column: 17, scope: !3439)
!3441 = !DILocation(line: 1153, column: 6, scope: !3422)
!3442 = !DILocation(line: 1154, column: 3, scope: !3439)
!3443 = !DILocation(line: 1156, column: 25, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3422, file: !3, line: 1156, column: 6)
!3445 = !DILocation(line: 1156, column: 7, scope: !3444)
!3446 = !DILocation(line: 1156, column: 6, scope: !3422)
!3447 = !DILocation(line: 1156, column: 30, scope: !3444)
!3448 = !DILocation(line: 1158, column: 6, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3422, file: !3, line: 1158, column: 6)
!3450 = !DILocation(line: 1158, column: 11, scope: !3449)
!3451 = !DILocation(line: 1158, column: 6, scope: !3422)
!3452 = !DILocation(line: 1159, column: 24, scope: !3449)
!3453 = !DILocation(line: 1159, column: 29, scope: !3449)
!3454 = !DILocation(line: 1159, column: 34, scope: !3449)
!3455 = !DILocation(line: 1159, column: 42, scope: !3449)
!3456 = !DILocation(line: 1159, column: 3, scope: !3449)
!3457 = !DILocation(line: 1161, column: 23, scope: !3422)
!3458 = !DILocation(line: 1161, column: 28, scope: !3422)
!3459 = !DILocation(line: 1161, column: 33, scope: !3422)
!3460 = !DILocation(line: 1161, column: 2, scope: !3422)
!3461 = !DILocation(line: 1163, column: 2, scope: !3422)
!3462 = !DILocation(line: 1164, column: 1, scope: !3422)
!3463 = distinct !DISubprogram(name: "curve_is_animated", scope: !3, file: !3, line: 995, type: !3464, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!3464 = !DISubroutineType(types: !3465)
!3465 = !{!1081, !2953}
!3466 = !DILocalVariable(name: "cu", arg: 1, scope: !3463, file: !3, line: 995, type: !2953)
!3467 = !DILocation(line: 995, column: 38, scope: !3463)
!3468 = !DILocalVariable(name: "ad", scope: !3463, file: !3, line: 997, type: !3428)
!3469 = !DILocation(line: 997, column: 12, scope: !3463)
!3470 = !DILocation(line: 997, column: 39, scope: !3463)
!3471 = !DILocation(line: 997, column: 43, scope: !3463)
!3472 = !DILocation(line: 997, column: 17, scope: !3463)
!3473 = !DILocation(line: 999, column: 9, scope: !3463)
!3474 = !DILocation(line: 999, column: 12, scope: !3463)
!3475 = !DILocation(line: 999, column: 16, scope: !3463)
!3476 = !DILocation(line: 999, column: 20, scope: !3463)
!3477 = !DILocation(line: 999, column: 27, scope: !3463)
!3478 = !DILocation(line: 999, column: 30, scope: !3463)
!3479 = !DILocation(line: 999, column: 34, scope: !3463)
!3480 = !DILocation(line: 999, column: 42, scope: !3463)
!3481 = !DILocation(line: 0, scope: !3463)
!3482 = !DILocation(line: 999, column: 2, scope: !3463)
!3483 = distinct !DISubprogram(name: "curve_rename_fcurves", scope: !3, file: !3, line: 1041, type: !3484, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!3484 = !DISubroutineType(types: !3485)
!3485 = !{null, !2953, !486}
!3486 = !DILocalVariable(name: "cu", arg: 1, scope: !3483, file: !3, line: 1041, type: !2953)
!3487 = !DILocation(line: 1041, column: 41, scope: !3483)
!3488 = !DILocalVariable(name: "orig_curves", arg: 2, scope: !3483, file: !3, line: 1041, type: !486)
!3489 = !DILocation(line: 1041, column: 55, scope: !3483)
!3490 = !DILocalVariable(name: "nu_index", scope: !3483, file: !3, line: 1043, type: !22)
!3491 = !DILocation(line: 1043, column: 6, scope: !3483)
!3492 = !DILocalVariable(name: "a", scope: !3483, file: !3, line: 1043, type: !22)
!3493 = !DILocation(line: 1043, column: 20, scope: !3483)
!3494 = !DILocalVariable(name: "pt_index", scope: !3483, file: !3, line: 1043, type: !22)
!3495 = !DILocation(line: 1043, column: 23, scope: !3483)
!3496 = !DILocalVariable(name: "editnurb", scope: !3483, file: !3, line: 1044, type: !2962)
!3497 = !DILocation(line: 1044, column: 12, scope: !3483)
!3498 = !DILocation(line: 1044, column: 23, scope: !3483)
!3499 = !DILocation(line: 1044, column: 27, scope: !3483)
!3500 = !DILocalVariable(name: "nu", scope: !3483, file: !3, line: 1045, type: !3163)
!3501 = !DILocation(line: 1045, column: 8, scope: !3483)
!3502 = !DILocalVariable(name: "keyIndex", scope: !3483, file: !3, line: 1046, type: !3503)
!3503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3504, size: 64)
!3504 = !DIDerivedType(tag: DW_TAG_typedef, name: "CVKeyIndex", file: !3, line: 96, baseType: !3505)
!3505 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 91, size: 320, elements: !3506)
!3506 = !{!3507, !3508, !3509, !3510, !3511, !3512, !3513}
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "orig_cv", scope: !3505, file: !3, line: 92, baseType: !56, size: 64)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "key_index", scope: !3505, file: !3, line: 93, baseType: !22, size: 32, offset: 64)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "nu_index", scope: !3505, file: !3, line: 93, baseType: !22, size: 32, offset: 96)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "pt_index", scope: !3505, file: !3, line: 93, baseType: !22, size: 32, offset: 128)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "vertex_index", scope: !3505, file: !3, line: 93, baseType: !22, size: 32, offset: 160)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "switched", scope: !3505, file: !3, line: 94, baseType: !1081, size: 8, offset: 192)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "orig_nu", scope: !3505, file: !3, line: 95, baseType: !3163, size: 64, offset: 256)
!3514 = !DILocation(line: 1046, column: 14, scope: !3483)
!3515 = !DILocalVariable(name: "rna_path", scope: !3483, file: !3, line: 1047, type: !33)
!3516 = !DILocation(line: 1047, column: 7, scope: !3483)
!3517 = !DILocalVariable(name: "orig_rna_path", scope: !3483, file: !3, line: 1047, type: !33)
!3518 = !DILocation(line: 1047, column: 21, scope: !3483)
!3519 = !DILocalVariable(name: "adt", scope: !3483, file: !3, line: 1048, type: !3428)
!3520 = !DILocation(line: 1048, column: 12, scope: !3483)
!3521 = !DILocation(line: 1048, column: 40, scope: !3483)
!3522 = !DILocation(line: 1048, column: 44, scope: !3483)
!3523 = !DILocation(line: 1048, column: 18, scope: !3483)
!3524 = !DILocalVariable(name: "curves", scope: !3483, file: !3, line: 1049, type: !58)
!3525 = !DILocation(line: 1049, column: 11, scope: !3483)
!3526 = !DILocalVariable(name: "fcu", scope: !3483, file: !3, line: 1050, type: !3527)
!3527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3528, size: 64)
!3528 = !DIDerivedType(tag: DW_TAG_typedef, name: "FCurve", file: !160, line: 463, baseType: !3529)
!3529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FCurve", file: !160, line: 433, size: 896, elements: !3530)
!3530 = !{!3531, !3533, !3534, !3556, !3568, !3569, !3570, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586, !3587}
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3529, file: !160, line: 434, baseType: !3532, size: 64)
!3532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3529, size: 64)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3529, file: !160, line: 434, baseType: !3532, size: 64, offset: 64)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "grp", scope: !3529, file: !160, line: 437, baseType: !3535, size: 64, offset: 128)
!3535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3536, size: 64)
!3536 = !DIDerivedType(tag: DW_TAG_typedef, name: "bActionGroup", file: !165, line: 450, baseType: !3537)
!3537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bActionGroup", file: !165, line: 440, size: 960, elements: !3538)
!3538 = !{!3539, !3541, !3542, !3543, !3544, !3545, !3546}
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3537, file: !165, line: 441, baseType: !3540, size: 64)
!3540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3537, size: 64)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3537, file: !165, line: 441, baseType: !3540, size: 64, offset: 64)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !3537, file: !165, line: 443, baseType: !58, size: 128, offset: 128)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3537, file: !165, line: 445, baseType: !22, size: 32, offset: 256)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "customCol", scope: !3537, file: !165, line: 446, baseType: !22, size: 32, offset: 288)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3537, file: !165, line: 447, baseType: !33, size: 512, offset: 320)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !3537, file: !165, line: 449, baseType: !3547, size: 128, offset: 832)
!3547 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThemeWireColor", file: !3548, line: 347, baseType: !3549)
!3548 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThemeWireColor", file: !3548, line: 340, size: 128, elements: !3550)
!3550 = !{!3551, !3552, !3553, !3554, !3555}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "solid", scope: !3549, file: !3548, line: 341, baseType: !2970, size: 32)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3549, file: !3548, line: 342, baseType: !2970, size: 32, offset: 32)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3549, file: !3548, line: 343, baseType: !2970, size: 32, offset: 64)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3549, file: !3548, line: 345, baseType: !48, size: 16, offset: 96)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3549, file: !3548, line: 346, baseType: !48, size: 16, offset: 112)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3529, file: !160, line: 440, baseType: !3557, size: 64, offset: 192)
!3557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3558, size: 64)
!3558 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelDriver", file: !160, line: 386, baseType: !3559)
!3559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelDriver", file: !160, line: 371, size: 2368, elements: !3560)
!3560 = !{!3561, !3562, !3563, !3564, !3565, !3566, !3567}
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "variables", scope: !3559, file: !160, line: 372, baseType: !58, size: 128)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "expression", scope: !3559, file: !160, line: 377, baseType: !687, size: 2048, offset: 128)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "expr_comp", scope: !3559, file: !160, line: 378, baseType: !56, size: 64, offset: 2176)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !3559, file: !160, line: 380, baseType: !204, size: 32, offset: 2240)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !3559, file: !160, line: 381, baseType: !204, size: 32, offset: 2272)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3559, file: !160, line: 384, baseType: !22, size: 32, offset: 2304)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3559, file: !160, line: 385, baseType: !22, size: 32, offset: 2336)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !3529, file: !160, line: 442, baseType: !58, size: 128, offset: 256)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !3529, file: !160, line: 445, baseType: !3104, size: 64, offset: 384)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "fpt", scope: !3529, file: !160, line: 446, baseType: !3571, size: 64, offset: 448)
!3571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3572, size: 64)
!3572 = !DIDerivedType(tag: DW_TAG_typedef, name: "FPoint", file: !160, line: 430, baseType: !3573)
!3573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPoint", file: !160, line: 426, size: 128, elements: !3574)
!3574 = !{!3575, !3576, !3577}
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3573, file: !160, line: 427, baseType: !494, size: 64)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3573, file: !160, line: 428, baseType: !22, size: 32, offset: 64)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3573, file: !160, line: 429, baseType: !22, size: 32, offset: 96)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3529, file: !160, line: 447, baseType: !278, size: 32, offset: 512)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !3529, file: !160, line: 450, baseType: !204, size: 32, offset: 544)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3529, file: !160, line: 451, baseType: !48, size: 16, offset: 576)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !3529, file: !160, line: 452, baseType: !48, size: 16, offset: 592)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "array_index", scope: !3529, file: !160, line: 455, baseType: !22, size: 32, offset: 608)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "rna_path", scope: !3529, file: !160, line: 456, baseType: !343, size: 64, offset: 640)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !3529, file: !160, line: 459, baseType: !22, size: 32, offset: 704)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !3529, file: !160, line: 460, baseType: !282, size: 96, offset: 736)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "prev_norm_factor", scope: !3529, file: !160, line: 462, baseType: !204, size: 32, offset: 832)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3529, file: !160, line: 462, baseType: !204, size: 32, offset: 864)
!3588 = !DILocation(line: 1050, column: 10, scope: !3483)
!3589 = !DILocalVariable(name: "next", scope: !3483, file: !3, line: 1050, type: !3527)
!3590 = !DILocation(line: 1050, column: 16, scope: !3483)
!3591 = !DILocation(line: 1052, column: 12, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 1052, column: 2)
!3593 = !DILocation(line: 1052, column: 22, scope: !3592)
!3594 = !DILocation(line: 1052, column: 28, scope: !3592)
!3595 = !DILocation(line: 1052, column: 10, scope: !3592)
!3596 = !DILocation(line: 1052, column: 44, scope: !3592)
!3597 = !DILocation(line: 1052, column: 7, scope: !3592)
!3598 = !DILocation(line: 1052, column: 50, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3592, file: !3, line: 1052, column: 2)
!3600 = !DILocation(line: 1052, column: 53, scope: !3599)
!3601 = !DILocation(line: 1052, column: 2, scope: !3592)
!3602 = !DILocation(line: 1053, column: 7, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3604, file: !3, line: 1053, column: 7)
!3604 = distinct !DILexicalBlock(scope: !3599, file: !3, line: 1052, column: 90)
!3605 = !DILocation(line: 1053, column: 11, scope: !3603)
!3606 = !DILocation(line: 1053, column: 7, scope: !3604)
!3607 = !DILocalVariable(name: "bezt", scope: !3608, file: !3, line: 1054, type: !3104)
!3608 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 1053, column: 17)
!3609 = !DILocation(line: 1054, column: 15, scope: !3608)
!3610 = !DILocation(line: 1054, column: 22, scope: !3608)
!3611 = !DILocation(line: 1054, column: 26, scope: !3608)
!3612 = !DILocation(line: 1055, column: 8, scope: !3608)
!3613 = !DILocation(line: 1055, column: 12, scope: !3608)
!3614 = !DILocation(line: 1055, column: 6, scope: !3608)
!3615 = !DILocation(line: 1056, column: 13, scope: !3608)
!3616 = !DILocation(line: 1058, column: 4, scope: !3608)
!3617 = !DILocation(line: 1058, column: 12, scope: !3608)
!3618 = !DILocation(line: 1059, column: 30, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3608, file: !3, line: 1058, column: 16)
!3620 = !DILocation(line: 1059, column: 40, scope: !3619)
!3621 = !DILocation(line: 1059, column: 16, scope: !3619)
!3622 = !DILocation(line: 1059, column: 14, scope: !3619)
!3623 = !DILocation(line: 1060, column: 9, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3619, file: !3, line: 1060, column: 9)
!3625 = !DILocation(line: 1060, column: 9, scope: !3619)
!3626 = !DILocation(line: 1061, column: 19, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3624, file: !3, line: 1060, column: 19)
!3628 = !DILocation(line: 1061, column: 80, scope: !3627)
!3629 = !DILocation(line: 1061, column: 90, scope: !3627)
!3630 = !DILocation(line: 1061, column: 6, scope: !3627)
!3631 = !DILocation(line: 1062, column: 19, scope: !3627)
!3632 = !DILocation(line: 1062, column: 90, scope: !3627)
!3633 = !DILocation(line: 1062, column: 100, scope: !3627)
!3634 = !DILocation(line: 1062, column: 110, scope: !3627)
!3635 = !DILocation(line: 1062, column: 120, scope: !3627)
!3636 = !DILocation(line: 1062, column: 6, scope: !3627)
!3637 = !DILocation(line: 1064, column: 10, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 1064, column: 10)
!3639 = !DILocation(line: 1064, column: 20, scope: !3638)
!3640 = !DILocation(line: 1064, column: 10, scope: !3627)
!3641 = !DILocalVariable(name: "handle_path", scope: !3642, file: !3, line: 1065, type: !33)
!3642 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 1064, column: 30)
!3643 = !DILocation(line: 1065, column: 12, scope: !3642)
!3644 = !DILocalVariable(name: "orig_handle_path", scope: !3642, file: !3, line: 1065, type: !33)
!3645 = !DILocation(line: 1065, column: 29, scope: !3642)
!3646 = !DILocation(line: 1066, column: 20, scope: !3642)
!3647 = !DILocation(line: 1066, column: 79, scope: !3642)
!3648 = !DILocation(line: 1066, column: 7, scope: !3642)
!3649 = !DILocation(line: 1067, column: 20, scope: !3642)
!3650 = !DILocation(line: 1067, column: 70, scope: !3642)
!3651 = !DILocation(line: 1067, column: 7, scope: !3642)
!3652 = !DILocation(line: 1068, column: 26, scope: !3642)
!3653 = !DILocation(line: 1068, column: 31, scope: !3642)
!3654 = !DILocation(line: 1068, column: 49, scope: !3642)
!3655 = !DILocation(line: 1068, column: 62, scope: !3642)
!3656 = !DILocation(line: 1068, column: 7, scope: !3642)
!3657 = !DILocation(line: 1070, column: 20, scope: !3642)
!3658 = !DILocation(line: 1070, column: 80, scope: !3642)
!3659 = !DILocation(line: 1070, column: 7, scope: !3642)
!3660 = !DILocation(line: 1071, column: 20, scope: !3642)
!3661 = !DILocation(line: 1071, column: 69, scope: !3642)
!3662 = !DILocation(line: 1071, column: 7, scope: !3642)
!3663 = !DILocation(line: 1072, column: 26, scope: !3642)
!3664 = !DILocation(line: 1072, column: 31, scope: !3642)
!3665 = !DILocation(line: 1072, column: 49, scope: !3642)
!3666 = !DILocation(line: 1072, column: 62, scope: !3642)
!3667 = !DILocation(line: 1072, column: 7, scope: !3642)
!3668 = !DILocation(line: 1073, column: 6, scope: !3642)
!3669 = !DILocation(line: 1075, column: 25, scope: !3627)
!3670 = !DILocation(line: 1075, column: 30, scope: !3627)
!3671 = !DILocation(line: 1075, column: 45, scope: !3627)
!3672 = !DILocation(line: 1075, column: 55, scope: !3627)
!3673 = !DILocation(line: 1075, column: 6, scope: !3627)
!3674 = !DILocation(line: 1077, column: 27, scope: !3627)
!3675 = !DILocation(line: 1077, column: 6, scope: !3627)
!3676 = !DILocation(line: 1077, column: 16, scope: !3627)
!3677 = !DILocation(line: 1077, column: 25, scope: !3627)
!3678 = !DILocation(line: 1078, column: 27, scope: !3627)
!3679 = !DILocation(line: 1078, column: 6, scope: !3627)
!3680 = !DILocation(line: 1078, column: 16, scope: !3627)
!3681 = !DILocation(line: 1078, column: 25, scope: !3627)
!3682 = !DILocation(line: 1079, column: 5, scope: !3627)
!3683 = !DILocation(line: 1081, column: 9, scope: !3619)
!3684 = !DILocation(line: 1082, column: 13, scope: !3619)
!3685 = distinct !{!3685, !3616, !3686}
!3686 = !DILocation(line: 1083, column: 4, scope: !3608)
!3687 = !DILocation(line: 1084, column: 3, scope: !3608)
!3688 = !DILocalVariable(name: "bp", scope: !3689, file: !3, line: 1086, type: !3093)
!3689 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 1085, column: 8)
!3690 = !DILocation(line: 1086, column: 12, scope: !3689)
!3691 = !DILocation(line: 1086, column: 17, scope: !3689)
!3692 = !DILocation(line: 1086, column: 21, scope: !3689)
!3693 = !DILocation(line: 1087, column: 8, scope: !3689)
!3694 = !DILocation(line: 1087, column: 12, scope: !3689)
!3695 = !DILocation(line: 1087, column: 20, scope: !3689)
!3696 = !DILocation(line: 1087, column: 24, scope: !3689)
!3697 = !DILocation(line: 1087, column: 18, scope: !3689)
!3698 = !DILocation(line: 1087, column: 6, scope: !3689)
!3699 = !DILocation(line: 1088, column: 13, scope: !3689)
!3700 = !DILocation(line: 1090, column: 4, scope: !3689)
!3701 = !DILocation(line: 1090, column: 12, scope: !3689)
!3702 = !DILocation(line: 1091, column: 30, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3689, file: !3, line: 1090, column: 16)
!3704 = !DILocation(line: 1091, column: 40, scope: !3703)
!3705 = !DILocation(line: 1091, column: 16, scope: !3703)
!3706 = !DILocation(line: 1091, column: 14, scope: !3703)
!3707 = !DILocation(line: 1092, column: 9, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3703, file: !3, line: 1092, column: 9)
!3709 = !DILocation(line: 1092, column: 9, scope: !3703)
!3710 = !DILocation(line: 1093, column: 19, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 1092, column: 19)
!3712 = !DILocation(line: 1093, column: 73, scope: !3711)
!3713 = !DILocation(line: 1093, column: 83, scope: !3711)
!3714 = !DILocation(line: 1093, column: 6, scope: !3711)
!3715 = !DILocation(line: 1094, column: 19, scope: !3711)
!3716 = !DILocation(line: 1094, column: 83, scope: !3711)
!3717 = !DILocation(line: 1094, column: 93, scope: !3711)
!3718 = !DILocation(line: 1094, column: 103, scope: !3711)
!3719 = !DILocation(line: 1094, column: 113, scope: !3711)
!3720 = !DILocation(line: 1094, column: 6, scope: !3711)
!3721 = !DILocation(line: 1095, column: 25, scope: !3711)
!3722 = !DILocation(line: 1095, column: 30, scope: !3711)
!3723 = !DILocation(line: 1095, column: 45, scope: !3711)
!3724 = !DILocation(line: 1095, column: 55, scope: !3711)
!3725 = !DILocation(line: 1095, column: 6, scope: !3711)
!3726 = !DILocation(line: 1097, column: 27, scope: !3711)
!3727 = !DILocation(line: 1097, column: 6, scope: !3711)
!3728 = !DILocation(line: 1097, column: 16, scope: !3711)
!3729 = !DILocation(line: 1097, column: 25, scope: !3711)
!3730 = !DILocation(line: 1098, column: 27, scope: !3711)
!3731 = !DILocation(line: 1098, column: 6, scope: !3711)
!3732 = !DILocation(line: 1098, column: 16, scope: !3711)
!3733 = !DILocation(line: 1098, column: 25, scope: !3711)
!3734 = !DILocation(line: 1099, column: 5, scope: !3711)
!3735 = !DILocation(line: 1101, column: 7, scope: !3703)
!3736 = !DILocation(line: 1102, column: 13, scope: !3703)
!3737 = distinct !{!3737, !3700, !3738}
!3738 = !DILocation(line: 1103, column: 4, scope: !3689)
!3739 = !DILocation(line: 1105, column: 2, scope: !3604)
!3740 = !DILocation(line: 1052, column: 68, scope: !3599)
!3741 = !DILocation(line: 1052, column: 72, scope: !3599)
!3742 = !DILocation(line: 1052, column: 66, scope: !3599)
!3743 = !DILocation(line: 1052, column: 86, scope: !3599)
!3744 = !DILocation(line: 1052, column: 2, scope: !3599)
!3745 = distinct !{!3745, !3601, !3746}
!3746 = !DILocation(line: 1105, column: 2, scope: !3592)
!3747 = !DILocation(line: 1110, column: 13, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 1110, column: 2)
!3749 = !DILocation(line: 1110, column: 26, scope: !3748)
!3750 = !DILocation(line: 1110, column: 11, scope: !3748)
!3751 = !DILocation(line: 1110, column: 7, scope: !3748)
!3752 = !DILocation(line: 1110, column: 33, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3748, file: !3, line: 1110, column: 2)
!3754 = !DILocation(line: 1110, column: 2, scope: !3748)
!3755 = !DILocation(line: 1111, column: 10, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3753, file: !3, line: 1110, column: 50)
!3757 = !DILocation(line: 1111, column: 15, scope: !3756)
!3758 = !DILocation(line: 1111, column: 8, scope: !3756)
!3759 = !DILocation(line: 1113, column: 16, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3756, file: !3, line: 1113, column: 7)
!3761 = !DILocation(line: 1113, column: 21, scope: !3760)
!3762 = !DILocation(line: 1113, column: 8, scope: !3760)
!3763 = !DILocation(line: 1113, column: 7, scope: !3756)
!3764 = !DILocalVariable(name: "ch", scope: !3765, file: !3, line: 1114, type: !12)
!3765 = distinct !DILexicalBlock(scope: !3760, file: !3, line: 1113, column: 46)
!3766 = !DILocation(line: 1114, column: 16, scope: !3765)
!3767 = !DILocation(line: 1114, column: 28, scope: !3765)
!3768 = !DILocation(line: 1114, column: 33, scope: !3765)
!3769 = !DILocation(line: 1114, column: 21, scope: !3765)
!3770 = !DILocation(line: 1116, column: 8, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3765, file: !3, line: 1116, column: 8)
!3772 = !DILocation(line: 1116, column: 11, scope: !3771)
!3773 = !DILocation(line: 1116, column: 24, scope: !3771)
!3774 = !DILocation(line: 1116, column: 16, scope: !3771)
!3775 = !DILocation(line: 1116, column: 50, scope: !3771)
!3776 = !DILocation(line: 1116, column: 62, scope: !3771)
!3777 = !DILocation(line: 1116, column: 54, scope: !3771)
!3778 = !DILocation(line: 1116, column: 8, scope: !3765)
!3779 = !DILocation(line: 1117, column: 19, scope: !3771)
!3780 = !DILocation(line: 1117, column: 24, scope: !3771)
!3781 = !DILocation(line: 1117, column: 37, scope: !3771)
!3782 = !DILocation(line: 1117, column: 5, scope: !3771)
!3783 = !DILocation(line: 1118, column: 3, scope: !3765)
!3784 = !DILocation(line: 1119, column: 2, scope: !3756)
!3785 = !DILocation(line: 1110, column: 44, scope: !3753)
!3786 = !DILocation(line: 1110, column: 42, scope: !3753)
!3787 = !DILocation(line: 1110, column: 2, scope: !3753)
!3788 = distinct !{!3788, !3754, !3789}
!3789 = !DILocation(line: 1119, column: 2, scope: !3748)
!3790 = !DILocation(line: 1121, column: 12, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 1121, column: 2)
!3792 = !DILocation(line: 1121, column: 22, scope: !3791)
!3793 = !DILocation(line: 1121, column: 28, scope: !3791)
!3794 = !DILocation(line: 1121, column: 10, scope: !3791)
!3795 = !DILocation(line: 1121, column: 44, scope: !3791)
!3796 = !DILocation(line: 1121, column: 7, scope: !3791)
!3797 = !DILocation(line: 1121, column: 50, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3791, file: !3, line: 1121, column: 2)
!3799 = !DILocation(line: 1121, column: 53, scope: !3798)
!3800 = !DILocation(line: 1121, column: 2, scope: !3791)
!3801 = !DILocation(line: 1122, column: 12, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 1121, column: 90)
!3803 = !DILocation(line: 1123, column: 7, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3802, file: !3, line: 1123, column: 7)
!3805 = !DILocation(line: 1123, column: 11, scope: !3804)
!3806 = !DILocation(line: 1123, column: 7, scope: !3802)
!3807 = !DILocation(line: 1124, column: 8, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3809, file: !3, line: 1124, column: 8)
!3809 = distinct !DILexicalBlock(scope: !3804, file: !3, line: 1123, column: 18)
!3810 = !DILocation(line: 1124, column: 12, scope: !3808)
!3811 = !DILocation(line: 1124, column: 8, scope: !3809)
!3812 = !DILocation(line: 1124, column: 43, scope: !3808)
!3813 = !DILocation(line: 1124, column: 54, scope: !3808)
!3814 = !DILocation(line: 1124, column: 58, scope: !3808)
!3815 = !DILocation(line: 1124, column: 53, scope: !3808)
!3816 = !DILocation(line: 1124, column: 29, scope: !3808)
!3817 = !DILocation(line: 1124, column: 27, scope: !3808)
!3818 = !DILocation(line: 1124, column: 18, scope: !3808)
!3819 = !DILocation(line: 1125, column: 34, scope: !3808)
!3820 = !DILocation(line: 1125, column: 45, scope: !3808)
!3821 = !DILocation(line: 1125, column: 49, scope: !3808)
!3822 = !DILocation(line: 1125, column: 44, scope: !3808)
!3823 = !DILocation(line: 1125, column: 20, scope: !3808)
!3824 = !DILocation(line: 1125, column: 18, scope: !3808)
!3825 = !DILocation(line: 1126, column: 3, scope: !3809)
!3826 = !DILocation(line: 1128, column: 7, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3802, file: !3, line: 1128, column: 7)
!3828 = !DILocation(line: 1128, column: 7, scope: !3802)
!3829 = !DILocation(line: 1129, column: 17, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3827, file: !3, line: 1128, column: 17)
!3831 = !DILocation(line: 1129, column: 60, scope: !3830)
!3832 = !DILocation(line: 1129, column: 4, scope: !3830)
!3833 = !DILocation(line: 1130, column: 17, scope: !3830)
!3834 = !DILocation(line: 1130, column: 70, scope: !3830)
!3835 = !DILocation(line: 1130, column: 80, scope: !3830)
!3836 = !DILocation(line: 1130, column: 4, scope: !3830)
!3837 = !DILocation(line: 1131, column: 23, scope: !3830)
!3838 = !DILocation(line: 1131, column: 28, scope: !3830)
!3839 = !DILocation(line: 1131, column: 43, scope: !3830)
!3840 = !DILocation(line: 1131, column: 53, scope: !3830)
!3841 = !DILocation(line: 1131, column: 4, scope: !3830)
!3842 = !DILocation(line: 1132, column: 3, scope: !3830)
!3843 = !DILocation(line: 1133, column: 2, scope: !3802)
!3844 = !DILocation(line: 1121, column: 68, scope: !3798)
!3845 = !DILocation(line: 1121, column: 72, scope: !3798)
!3846 = !DILocation(line: 1121, column: 66, scope: !3798)
!3847 = !DILocation(line: 1121, column: 86, scope: !3798)
!3848 = !DILocation(line: 1121, column: 2, scope: !3798)
!3849 = distinct !{!3849, !3800, !3850}
!3850 = !DILocation(line: 1133, column: 2, scope: !3791)
!3851 = !DILocation(line: 1137, column: 13, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 1137, column: 2)
!3853 = !DILocation(line: 1137, column: 26, scope: !3852)
!3854 = !DILocation(line: 1137, column: 11, scope: !3852)
!3855 = !DILocation(line: 1137, column: 7, scope: !3852)
!3856 = !DILocation(line: 1137, column: 33, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3852, file: !3, line: 1137, column: 2)
!3858 = !DILocation(line: 1137, column: 2, scope: !3852)
!3859 = !DILocation(line: 1138, column: 10, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 1137, column: 50)
!3861 = !DILocation(line: 1138, column: 15, scope: !3860)
!3862 = !DILocation(line: 1138, column: 8, scope: !3860)
!3863 = !DILocation(line: 1140, column: 16, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3860, file: !3, line: 1140, column: 7)
!3865 = !DILocation(line: 1140, column: 21, scope: !3864)
!3866 = !DILocation(line: 1140, column: 8, scope: !3864)
!3867 = !DILocation(line: 1140, column: 7, scope: !3860)
!3868 = !DILocation(line: 1140, column: 60, scope: !3864)
!3869 = !DILocation(line: 1140, column: 65, scope: !3864)
!3870 = !DILocation(line: 1140, column: 78, scope: !3864)
!3871 = !DILocation(line: 1140, column: 46, scope: !3864)
!3872 = !DILocation(line: 1141, column: 29, scope: !3864)
!3873 = !DILocation(line: 1141, column: 8, scope: !3864)
!3874 = !DILocation(line: 1142, column: 2, scope: !3860)
!3875 = !DILocation(line: 1137, column: 44, scope: !3857)
!3876 = !DILocation(line: 1137, column: 42, scope: !3857)
!3877 = !DILocation(line: 1137, column: 2, scope: !3857)
!3878 = distinct !{!3878, !3858, !3879}
!3879 = !DILocation(line: 1142, column: 2, scope: !3852)
!3880 = !DILocation(line: 1144, column: 3, scope: !3483)
!3881 = !DILocation(line: 1144, column: 17, scope: !3483)
!3882 = !DILocation(line: 1145, column: 1, scope: !3483)
!3883 = distinct !DISubprogram(name: "load_editNurb", scope: !3, file: !3, line: 1316, type: !3331, scopeLine: 1317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!3884 = !DILocalVariable(name: "obedit", arg: 1, scope: !3883, file: !3, line: 1316, type: !3242)
!3885 = !DILocation(line: 1316, column: 28, scope: !3883)
!3886 = !DILocalVariable(name: "editnurb", scope: !3883, file: !3, line: 1318, type: !486)
!3887 = !DILocation(line: 1318, column: 12, scope: !3883)
!3888 = !DILocation(line: 1318, column: 44, scope: !3883)
!3889 = !DILocation(line: 1318, column: 23, scope: !3883)
!3890 = !DILocation(line: 1320, column: 6, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3883, file: !3, line: 1320, column: 6)
!3892 = !DILocation(line: 1320, column: 13, scope: !3891)
!3893 = !DILocation(line: 1320, column: 6, scope: !3883)
!3894 = !DILocation(line: 1320, column: 22, scope: !3891)
!3895 = !DILocation(line: 1322, column: 6, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3883, file: !3, line: 1322, column: 6)
!3897 = !DILocation(line: 1322, column: 6, scope: !3883)
!3898 = !DILocalVariable(name: "cu", scope: !3899, file: !3, line: 1323, type: !2953)
!3899 = distinct !DILexicalBlock(scope: !3896, file: !3, line: 1322, column: 45)
!3900 = !DILocation(line: 1323, column: 10, scope: !3899)
!3901 = !DILocation(line: 1323, column: 15, scope: !3899)
!3902 = !DILocation(line: 1323, column: 23, scope: !3899)
!3903 = !DILocalVariable(name: "nu", scope: !3899, file: !3, line: 1324, type: !3163)
!3904 = !DILocation(line: 1324, column: 9, scope: !3899)
!3905 = !DILocalVariable(name: "newnu", scope: !3899, file: !3, line: 1324, type: !3163)
!3906 = !DILocation(line: 1324, column: 14, scope: !3899)
!3907 = !DILocalVariable(name: "newnurb", scope: !3899, file: !3, line: 1325, type: !58)
!3908 = !DILocation(line: 1325, column: 12, scope: !3899)
!3909 = !DILocalVariable(name: "oldnurb", scope: !3899, file: !3, line: 1325, type: !58)
!3910 = !DILocation(line: 1325, column: 36, scope: !3899)
!3911 = !DILocation(line: 1325, column: 46, scope: !3899)
!3912 = !DILocation(line: 1325, column: 50, scope: !3899)
!3913 = !DILocation(line: 1327, column: 34, scope: !3899)
!3914 = !DILocation(line: 1327, column: 3, scope: !3899)
!3915 = !DILocation(line: 1329, column: 13, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3899, file: !3, line: 1329, column: 3)
!3917 = !DILocation(line: 1329, column: 23, scope: !3916)
!3918 = !DILocation(line: 1329, column: 11, scope: !3916)
!3919 = !DILocation(line: 1329, column: 8, scope: !3916)
!3920 = !DILocation(line: 1329, column: 30, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3916, file: !3, line: 1329, column: 3)
!3922 = !DILocation(line: 1329, column: 3, scope: !3916)
!3923 = !DILocation(line: 1330, column: 31, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3921, file: !3, line: 1329, column: 49)
!3925 = !DILocation(line: 1330, column: 12, scope: !3924)
!3926 = !DILocation(line: 1330, column: 10, scope: !3924)
!3927 = !DILocation(line: 1331, column: 26, scope: !3924)
!3928 = !DILocation(line: 1331, column: 4, scope: !3924)
!3929 = !DILocation(line: 1333, column: 8, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3924, file: !3, line: 1333, column: 8)
!3931 = !DILocation(line: 1333, column: 12, scope: !3930)
!3932 = !DILocation(line: 1333, column: 17, scope: !3930)
!3933 = !DILocation(line: 1333, column: 8, scope: !3924)
!3934 = !DILocation(line: 1334, column: 28, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 1333, column: 30)
!3936 = !DILocation(line: 1334, column: 5, scope: !3935)
!3937 = !DILocation(line: 1335, column: 4, scope: !3935)
!3938 = !DILocation(line: 1336, column: 3, scope: !3924)
!3939 = !DILocation(line: 1329, column: 39, scope: !3921)
!3940 = !DILocation(line: 1329, column: 43, scope: !3921)
!3941 = !DILocation(line: 1329, column: 37, scope: !3921)
!3942 = !DILocation(line: 1329, column: 3, scope: !3921)
!3943 = distinct !{!3943, !3922, !3944}
!3944 = !DILocation(line: 1336, column: 3, scope: !3916)
!3945 = !DILocation(line: 1338, column: 3, scope: !3899)
!3946 = !DILocation(line: 1338, column: 7, scope: !3899)
!3947 = !DILocation(line: 1338, column: 14, scope: !3899)
!3948 = !DILocation(line: 1340, column: 18, scope: !3899)
!3949 = !DILocation(line: 1340, column: 3, scope: !3899)
!3950 = !DILocation(line: 1341, column: 28, scope: !3899)
!3951 = !DILocation(line: 1341, column: 36, scope: !3899)
!3952 = !DILocation(line: 1341, column: 3, scope: !3899)
!3953 = !DILocation(line: 1343, column: 3, scope: !3899)
!3954 = !DILocation(line: 1344, column: 2, scope: !3899)
!3955 = !DILocation(line: 1345, column: 1, scope: !3883)
!3956 = distinct !DISubprogram(name: "remap_hooks_and_vertex_parents", scope: !3, file: !3, line: 1237, type: !3331, scopeLine: 1238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!3957 = !DILocalVariable(name: "obedit", arg: 1, scope: !3956, file: !3, line: 1237, type: !3242)
!3958 = !DILocation(line: 1237, column: 52, scope: !3956)
!3959 = !DILocalVariable(name: "object", scope: !3956, file: !3, line: 1239, type: !3242)
!3960 = !DILocation(line: 1239, column: 10, scope: !3956)
!3961 = !DILocalVariable(name: "curve", scope: !3956, file: !3, line: 1240, type: !2953)
!3962 = !DILocation(line: 1240, column: 9, scope: !3956)
!3963 = !DILocation(line: 1240, column: 27, scope: !3956)
!3964 = !DILocation(line: 1240, column: 35, scope: !3956)
!3965 = !DILocation(line: 1240, column: 17, scope: !3956)
!3966 = !DILocalVariable(name: "editnurb", scope: !3956, file: !3, line: 1241, type: !2962)
!3967 = !DILocation(line: 1241, column: 12, scope: !3956)
!3968 = !DILocation(line: 1241, column: 23, scope: !3956)
!3969 = !DILocation(line: 1241, column: 30, scope: !3956)
!3970 = !DILocalVariable(name: "old_to_new_map", scope: !3956, file: !3, line: 1242, type: !3150)
!3971 = !DILocation(line: 1242, column: 7, scope: !3956)
!3972 = !DILocalVariable(name: "old_totvert", scope: !3956, file: !3, line: 1243, type: !22)
!3973 = !DILocation(line: 1243, column: 6, scope: !3956)
!3974 = !DILocation(line: 1245, column: 6, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 1245, column: 6)
!3976 = !DILocation(line: 1245, column: 16, scope: !3975)
!3977 = !DILocation(line: 1245, column: 25, scope: !3975)
!3978 = !DILocation(line: 1245, column: 6, scope: !3956)
!3979 = !DILocation(line: 1250, column: 3, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3975, file: !3, line: 1245, column: 34)
!3981 = !DILocation(line: 1253, column: 18, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 1253, column: 2)
!3983 = !DILocation(line: 1253, column: 24, scope: !3982)
!3984 = !DILocation(line: 1253, column: 31, scope: !3982)
!3985 = !DILocation(line: 1253, column: 16, scope: !3982)
!3986 = !DILocation(line: 1253, column: 14, scope: !3982)
!3987 = !DILocation(line: 1253, column: 7, scope: !3982)
!3988 = !DILocation(line: 1253, column: 38, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3982, file: !3, line: 1253, column: 2)
!3990 = !DILocation(line: 1253, column: 2, scope: !3982)
!3991 = !DILocalVariable(name: "md", scope: !3992, file: !3, line: 1254, type: !3993)
!3992 = distinct !DILexicalBlock(scope: !3989, file: !3, line: 1253, column: 72)
!3993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3131, size: 64)
!3994 = !DILocation(line: 1254, column: 17, scope: !3992)
!3995 = !DILocalVariable(name: "index", scope: !3992, file: !3, line: 1255, type: !22)
!3996 = !DILocation(line: 1255, column: 7, scope: !3992)
!3997 = !DILocation(line: 1256, column: 8, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 1256, column: 7)
!3999 = !DILocation(line: 1256, column: 16, scope: !3998)
!4000 = !DILocation(line: 1256, column: 7, scope: !3998)
!4001 = !DILocation(line: 1256, column: 24, scope: !3998)
!4002 = !DILocation(line: 1257, column: 8, scope: !3998)
!4003 = !DILocation(line: 1257, column: 16, scope: !3998)
!4004 = !DILocation(line: 1257, column: 24, scope: !3998)
!4005 = !DILocation(line: 1257, column: 32, scope: !3998)
!4006 = !DILocation(line: 1257, column: 29, scope: !3998)
!4007 = !DILocation(line: 1257, column: 39, scope: !3998)
!4008 = !DILocation(line: 1258, column: 7, scope: !3998)
!4009 = !DILocation(line: 1256, column: 7, scope: !3992)
!4010 = !DILocation(line: 1260, column: 8, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !4012, file: !3, line: 1260, column: 8)
!4012 = distinct !DILexicalBlock(scope: !3998, file: !3, line: 1259, column: 3)
!4013 = !DILocation(line: 1260, column: 23, scope: !4011)
!4014 = !DILocation(line: 1260, column: 8, scope: !4012)
!4015 = !DILocation(line: 1261, column: 43, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4011, file: !3, line: 1260, column: 32)
!4017 = !DILocation(line: 1261, column: 22, scope: !4016)
!4018 = !DILocation(line: 1261, column: 20, scope: !4016)
!4019 = !DILocation(line: 1262, column: 4, scope: !4016)
!4020 = !DILocation(line: 1264, column: 8, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4012, file: !3, line: 1264, column: 8)
!4022 = !DILocation(line: 1264, column: 16, scope: !4021)
!4023 = !DILocation(line: 1264, column: 23, scope: !4021)
!4024 = !DILocation(line: 1264, column: 21, scope: !4021)
!4025 = !DILocation(line: 1264, column: 8, scope: !4012)
!4026 = !DILocation(line: 1265, column: 13, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4021, file: !3, line: 1264, column: 36)
!4028 = !DILocation(line: 1265, column: 28, scope: !4027)
!4029 = !DILocation(line: 1265, column: 36, scope: !4027)
!4030 = !DILocation(line: 1265, column: 11, scope: !4027)
!4031 = !DILocation(line: 1266, column: 9, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4027, file: !3, line: 1266, column: 9)
!4033 = !DILocation(line: 1266, column: 15, scope: !4032)
!4034 = !DILocation(line: 1266, column: 9, scope: !4027)
!4035 = !DILocation(line: 1267, column: 21, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4032, file: !3, line: 1266, column: 22)
!4037 = !DILocation(line: 1267, column: 6, scope: !4036)
!4038 = !DILocation(line: 1267, column: 14, scope: !4036)
!4039 = !DILocation(line: 1267, column: 19, scope: !4036)
!4040 = !DILocation(line: 1268, column: 5, scope: !4036)
!4041 = !DILocation(line: 1269, column: 4, scope: !4027)
!4042 = !DILocation(line: 1270, column: 8, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4012, file: !3, line: 1270, column: 8)
!4044 = !DILocation(line: 1270, column: 16, scope: !4043)
!4045 = !DILocation(line: 1270, column: 23, scope: !4043)
!4046 = !DILocation(line: 1270, column: 21, scope: !4043)
!4047 = !DILocation(line: 1270, column: 8, scope: !4012)
!4048 = !DILocation(line: 1271, column: 13, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 1270, column: 36)
!4050 = !DILocation(line: 1271, column: 28, scope: !4049)
!4051 = !DILocation(line: 1271, column: 36, scope: !4049)
!4052 = !DILocation(line: 1271, column: 11, scope: !4049)
!4053 = !DILocation(line: 1272, column: 9, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 1272, column: 9)
!4055 = !DILocation(line: 1272, column: 15, scope: !4054)
!4056 = !DILocation(line: 1272, column: 9, scope: !4049)
!4057 = !DILocation(line: 1273, column: 21, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !4054, file: !3, line: 1272, column: 22)
!4059 = !DILocation(line: 1273, column: 6, scope: !4058)
!4060 = !DILocation(line: 1273, column: 14, scope: !4058)
!4061 = !DILocation(line: 1273, column: 19, scope: !4058)
!4062 = !DILocation(line: 1274, column: 5, scope: !4058)
!4063 = !DILocation(line: 1275, column: 4, scope: !4049)
!4064 = !DILocation(line: 1276, column: 8, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4012, file: !3, line: 1276, column: 8)
!4066 = !DILocation(line: 1276, column: 16, scope: !4065)
!4067 = !DILocation(line: 1276, column: 23, scope: !4065)
!4068 = !DILocation(line: 1276, column: 21, scope: !4065)
!4069 = !DILocation(line: 1276, column: 8, scope: !4012)
!4070 = !DILocation(line: 1277, column: 13, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 1276, column: 36)
!4072 = !DILocation(line: 1277, column: 28, scope: !4071)
!4073 = !DILocation(line: 1277, column: 36, scope: !4071)
!4074 = !DILocation(line: 1277, column: 11, scope: !4071)
!4075 = !DILocation(line: 1278, column: 9, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4071, file: !3, line: 1278, column: 9)
!4077 = !DILocation(line: 1278, column: 15, scope: !4076)
!4078 = !DILocation(line: 1278, column: 9, scope: !4071)
!4079 = !DILocation(line: 1279, column: 21, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4076, file: !3, line: 1278, column: 22)
!4081 = !DILocation(line: 1279, column: 6, scope: !4080)
!4082 = !DILocation(line: 1279, column: 14, scope: !4080)
!4083 = !DILocation(line: 1279, column: 19, scope: !4080)
!4084 = !DILocation(line: 1280, column: 5, scope: !4080)
!4085 = !DILocation(line: 1281, column: 4, scope: !4071)
!4086 = !DILocation(line: 1282, column: 3, scope: !4012)
!4087 = !DILocation(line: 1283, column: 7, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 1283, column: 7)
!4089 = !DILocation(line: 1283, column: 15, scope: !4088)
!4090 = !DILocation(line: 1283, column: 23, scope: !4088)
!4091 = !DILocation(line: 1283, column: 20, scope: !4088)
!4092 = !DILocation(line: 1283, column: 7, scope: !3992)
!4093 = !DILocation(line: 1284, column: 14, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4095, file: !3, line: 1284, column: 4)
!4095 = distinct !DILexicalBlock(scope: !4088, file: !3, line: 1283, column: 30)
!4096 = !DILocation(line: 1284, column: 22, scope: !4094)
!4097 = !DILocation(line: 1284, column: 32, scope: !4094)
!4098 = !DILocation(line: 1284, column: 12, scope: !4094)
!4099 = !DILocation(line: 1284, column: 9, scope: !4094)
!4100 = !DILocation(line: 1284, column: 39, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4094, file: !3, line: 1284, column: 4)
!4102 = !DILocation(line: 1284, column: 4, scope: !4094)
!4103 = !DILocation(line: 1285, column: 9, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !3, line: 1285, column: 9)
!4105 = distinct !DILexicalBlock(scope: !4101, file: !3, line: 1284, column: 58)
!4106 = !DILocation(line: 1285, column: 13, scope: !4104)
!4107 = !DILocation(line: 1285, column: 18, scope: !4104)
!4108 = !DILocation(line: 1285, column: 9, scope: !4105)
!4109 = !DILocalVariable(name: "hmd", scope: !4110, file: !3, line: 1286, type: !3126)
!4110 = distinct !DILexicalBlock(scope: !4104, file: !3, line: 1285, column: 41)
!4111 = !DILocation(line: 1286, column: 24, scope: !4110)
!4112 = !DILocation(line: 1286, column: 51, scope: !4110)
!4113 = !DILocation(line: 1286, column: 30, scope: !4110)
!4114 = !DILocalVariable(name: "i", scope: !4110, file: !3, line: 1287, type: !22)
!4115 = !DILocation(line: 1287, column: 10, scope: !4110)
!4116 = !DILocalVariable(name: "j", scope: !4110, file: !3, line: 1287, type: !22)
!4117 = !DILocation(line: 1287, column: 13, scope: !4110)
!4118 = !DILocation(line: 1289, column: 10, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4110, file: !3, line: 1289, column: 10)
!4120 = !DILocation(line: 1289, column: 25, scope: !4119)
!4121 = !DILocation(line: 1289, column: 10, scope: !4110)
!4122 = !DILocation(line: 1290, column: 45, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4119, file: !3, line: 1289, column: 34)
!4124 = !DILocation(line: 1290, column: 24, scope: !4123)
!4125 = !DILocation(line: 1290, column: 22, scope: !4123)
!4126 = !DILocation(line: 1291, column: 6, scope: !4123)
!4127 = !DILocation(line: 1293, column: 17, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4110, file: !3, line: 1293, column: 6)
!4129 = !DILocation(line: 1293, column: 13, scope: !4128)
!4130 = !DILocation(line: 1293, column: 11, scope: !4128)
!4131 = !DILocation(line: 1293, column: 22, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4128, file: !3, line: 1293, column: 6)
!4133 = !DILocation(line: 1293, column: 26, scope: !4132)
!4134 = !DILocation(line: 1293, column: 31, scope: !4132)
!4135 = !DILocation(line: 1293, column: 24, scope: !4132)
!4136 = !DILocation(line: 1293, column: 6, scope: !4128)
!4137 = !DILocation(line: 1294, column: 11, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4139, file: !3, line: 1294, column: 11)
!4139 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 1293, column: 46)
!4140 = !DILocation(line: 1294, column: 16, scope: !4138)
!4141 = !DILocation(line: 1294, column: 24, scope: !4138)
!4142 = !DILocation(line: 1294, column: 29, scope: !4138)
!4143 = !DILocation(line: 1294, column: 27, scope: !4138)
!4144 = !DILocation(line: 1294, column: 11, scope: !4139)
!4145 = !DILocation(line: 1295, column: 16, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4138, file: !3, line: 1294, column: 42)
!4147 = !DILocation(line: 1295, column: 31, scope: !4146)
!4148 = !DILocation(line: 1295, column: 36, scope: !4146)
!4149 = !DILocation(line: 1295, column: 44, scope: !4146)
!4150 = !DILocation(line: 1295, column: 14, scope: !4146)
!4151 = !DILocation(line: 1296, column: 12, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4146, file: !3, line: 1296, column: 12)
!4153 = !DILocation(line: 1296, column: 18, scope: !4152)
!4154 = !DILocation(line: 1296, column: 12, scope: !4146)
!4155 = !DILocation(line: 1297, column: 29, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 1296, column: 25)
!4157 = !DILocation(line: 1297, column: 9, scope: !4156)
!4158 = !DILocation(line: 1297, column: 14, scope: !4156)
!4159 = !DILocation(line: 1297, column: 23, scope: !4156)
!4160 = !DILocation(line: 1297, column: 27, scope: !4156)
!4161 = !DILocation(line: 1298, column: 8, scope: !4156)
!4162 = !DILocation(line: 1299, column: 7, scope: !4146)
!4163 = !DILocation(line: 1301, column: 9, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4138, file: !3, line: 1300, column: 12)
!4165 = !DILocation(line: 1303, column: 6, scope: !4139)
!4166 = !DILocation(line: 1293, column: 42, scope: !4132)
!4167 = !DILocation(line: 1293, column: 6, scope: !4132)
!4168 = distinct !{!4168, !4136, !4169}
!4169 = !DILocation(line: 1303, column: 6, scope: !4128)
!4170 = !DILocation(line: 1305, column: 22, scope: !4110)
!4171 = !DILocation(line: 1305, column: 6, scope: !4110)
!4172 = !DILocation(line: 1305, column: 11, scope: !4110)
!4173 = !DILocation(line: 1305, column: 20, scope: !4110)
!4174 = !DILocation(line: 1306, column: 5, scope: !4110)
!4175 = !DILocation(line: 1307, column: 4, scope: !4105)
!4176 = !DILocation(line: 1284, column: 48, scope: !4101)
!4177 = !DILocation(line: 1284, column: 52, scope: !4101)
!4178 = !DILocation(line: 1284, column: 46, scope: !4101)
!4179 = !DILocation(line: 1284, column: 4, scope: !4101)
!4180 = distinct !{!4180, !4102, !4181}
!4181 = !DILocation(line: 1307, column: 4, scope: !4094)
!4182 = !DILocation(line: 1308, column: 3, scope: !4095)
!4183 = !DILocation(line: 1309, column: 2, scope: !3992)
!4184 = !DILocation(line: 1253, column: 55, scope: !3989)
!4185 = !DILocation(line: 1253, column: 63, scope: !3989)
!4186 = !DILocation(line: 1253, column: 66, scope: !3989)
!4187 = !DILocation(line: 1253, column: 53, scope: !3989)
!4188 = !DILocation(line: 1253, column: 2, scope: !3989)
!4189 = distinct !{!4189, !3990, !4190}
!4190 = !DILocation(line: 1309, column: 2, scope: !3982)
!4191 = !DILocation(line: 1310, column: 6, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 1310, column: 6)
!4193 = !DILocation(line: 1310, column: 21, scope: !4192)
!4194 = !DILocation(line: 1310, column: 6, scope: !3956)
!4195 = !DILocation(line: 1311, column: 3, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 1310, column: 30)
!4197 = !DILocation(line: 1311, column: 13, scope: !4196)
!4198 = !DILocation(line: 1312, column: 2, scope: !4196)
!4199 = !DILocation(line: 1313, column: 1, scope: !3956)
!4200 = distinct !DISubprogram(name: "calc_shapeKeys", scope: !3, file: !3, line: 749, type: !3331, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!4201 = !DILocalVariable(name: "obedit", arg: 1, scope: !4200, file: !3, line: 749, type: !3242)
!4202 = !DILocation(line: 749, column: 36, scope: !4200)
!4203 = !DILocalVariable(name: "cu", scope: !4200, file: !3, line: 751, type: !2953)
!4204 = !DILocation(line: 751, column: 9, scope: !4200)
!4205 = !DILocation(line: 751, column: 23, scope: !4200)
!4206 = !DILocation(line: 751, column: 31, scope: !4200)
!4207 = !DILocation(line: 751, column: 14, scope: !4200)
!4208 = !DILocation(line: 754, column: 6, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4200, file: !3, line: 754, column: 6)
!4210 = !DILocation(line: 754, column: 10, scope: !4209)
!4211 = !DILocation(line: 754, column: 6, scope: !4200)
!4212 = !DILocalVariable(name: "a", scope: !4213, file: !3, line: 755, type: !22)
!4213 = distinct !DILexicalBlock(scope: !4209, file: !3, line: 754, column: 15)
!4214 = !DILocation(line: 755, column: 7, scope: !4213)
!4215 = !DILocalVariable(name: "i", scope: !4213, file: !3, line: 755, type: !22)
!4216 = !DILocation(line: 755, column: 10, scope: !4213)
!4217 = !DILocalVariable(name: "editnurb", scope: !4213, file: !3, line: 756, type: !2962)
!4218 = !DILocation(line: 756, column: 13, scope: !4213)
!4219 = !DILocation(line: 756, column: 24, scope: !4213)
!4220 = !DILocation(line: 756, column: 28, scope: !4213)
!4221 = !DILocalVariable(name: "currkey", scope: !4213, file: !3, line: 757, type: !2982)
!4222 = !DILocation(line: 757, column: 13, scope: !4213)
!4223 = !DILocalVariable(name: "actkey", scope: !4213, file: !3, line: 758, type: !2982)
!4224 = !DILocation(line: 758, column: 13, scope: !4213)
!4225 = !DILocation(line: 758, column: 36, scope: !4213)
!4226 = !DILocation(line: 758, column: 40, scope: !4213)
!4227 = !DILocation(line: 758, column: 45, scope: !4213)
!4228 = !DILocation(line: 758, column: 52, scope: !4213)
!4229 = !DILocation(line: 758, column: 62, scope: !4213)
!4230 = !DILocation(line: 758, column: 70, scope: !4213)
!4231 = !DILocation(line: 758, column: 22, scope: !4213)
!4232 = !DILocalVariable(name: "bezt", scope: !4213, file: !3, line: 759, type: !3104)
!4233 = !DILocation(line: 759, column: 14, scope: !4213)
!4234 = !DILocalVariable(name: "oldbezt", scope: !4213, file: !3, line: 759, type: !3104)
!4235 = !DILocation(line: 759, column: 21, scope: !4213)
!4236 = !DILocalVariable(name: "bp", scope: !4213, file: !3, line: 760, type: !3093)
!4237 = !DILocation(line: 760, column: 11, scope: !4213)
!4238 = !DILocalVariable(name: "oldbp", scope: !4213, file: !3, line: 760, type: !3093)
!4239 = !DILocation(line: 760, column: 16, scope: !4213)
!4240 = !DILocalVariable(name: "nu", scope: !4213, file: !3, line: 761, type: !3163)
!4241 = !DILocation(line: 761, column: 9, scope: !4213)
!4242 = !DILocalVariable(name: "totvert", scope: !4213, file: !3, line: 762, type: !22)
!4243 = !DILocation(line: 762, column: 7, scope: !4213)
!4244 = !DILocation(line: 762, column: 43, scope: !4213)
!4245 = !DILocation(line: 762, column: 53, scope: !4213)
!4246 = !DILocation(line: 762, column: 17, scope: !4213)
!4247 = !DILocalVariable(name: "ofs", scope: !4213, file: !3, line: 764, type: !4248)
!4248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!4249 = !DILocation(line: 764, column: 11, scope: !4213)
!4250 = !DILocalVariable(name: "oldkey", scope: !4213, file: !3, line: 765, type: !3154)
!4251 = !DILocation(line: 765, column: 10, scope: !4213)
!4252 = !DILocalVariable(name: "newkey", scope: !4213, file: !3, line: 765, type: !3154)
!4253 = !DILocation(line: 765, column: 19, scope: !4213)
!4254 = !DILocalVariable(name: "ofp", scope: !4213, file: !3, line: 765, type: !3154)
!4255 = !DILocation(line: 765, column: 28, scope: !4213)
!4256 = !DILocation(line: 768, column: 7, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4213, file: !3, line: 768, column: 7)
!4258 = !DILocation(line: 768, column: 11, scope: !4257)
!4259 = !DILocation(line: 768, column: 16, scope: !4257)
!4260 = !DILocation(line: 768, column: 21, scope: !4257)
!4261 = !DILocation(line: 768, column: 7, scope: !4213)
!4262 = !DILocalVariable(name: "act_is_basis", scope: !4263, file: !3, line: 769, type: !22)
!4263 = distinct !DILexicalBlock(scope: !4257, file: !3, line: 768, column: 38)
!4264 = !DILocation(line: 769, column: 8, scope: !4263)
!4265 = !DILocation(line: 771, column: 19, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 771, column: 4)
!4267 = !DILocation(line: 771, column: 23, scope: !4266)
!4268 = !DILocation(line: 771, column: 28, scope: !4266)
!4269 = !DILocation(line: 771, column: 34, scope: !4266)
!4270 = !DILocation(line: 771, column: 17, scope: !4266)
!4271 = !DILocation(line: 771, column: 9, scope: !4266)
!4272 = !DILocation(line: 771, column: 41, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4266, file: !3, line: 771, column: 4)
!4274 = !DILocation(line: 771, column: 4, scope: !4266)
!4275 = !DILocation(line: 772, column: 9, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 772, column: 9)
!4277 = distinct !DILexicalBlock(scope: !4273, file: !3, line: 771, column: 75)
!4278 = !DILocation(line: 772, column: 19, scope: !4276)
!4279 = !DILocation(line: 772, column: 27, scope: !4276)
!4280 = !DILocation(line: 772, column: 34, scope: !4276)
!4281 = !DILocation(line: 772, column: 43, scope: !4276)
!4282 = !DILocation(line: 772, column: 31, scope: !4276)
!4283 = !DILocation(line: 772, column: 9, scope: !4277)
!4284 = !DILocation(line: 773, column: 19, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4276, file: !3, line: 772, column: 53)
!4286 = !DILocation(line: 774, column: 6, scope: !4285)
!4287 = !DILocation(line: 776, column: 4, scope: !4277)
!4288 = !DILocation(line: 771, column: 60, scope: !4273)
!4289 = !DILocation(line: 771, column: 69, scope: !4273)
!4290 = !DILocation(line: 771, column: 58, scope: !4273)
!4291 = !DILocation(line: 771, column: 4, scope: !4273)
!4292 = distinct !{!4292, !4274, !4293}
!4293 = !DILocation(line: 776, column: 4, scope: !4266)
!4294 = !DILocation(line: 778, column: 8, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 778, column: 8)
!4296 = !DILocation(line: 778, column: 8, scope: !4263)
!4297 = !DILocalVariable(name: "totvec", scope: !4298, file: !3, line: 779, type: !22)
!4298 = distinct !DILexicalBlock(scope: !4295, file: !3, line: 778, column: 22)
!4299 = !DILocation(line: 779, column: 9, scope: !4298)
!4300 = !DILocation(line: 782, column: 10, scope: !4298)
!4301 = !DILocation(line: 782, column: 20, scope: !4298)
!4302 = !DILocation(line: 782, column: 26, scope: !4298)
!4303 = !DILocation(line: 782, column: 8, scope: !4298)
!4304 = !DILocation(line: 783, column: 5, scope: !4298)
!4305 = !DILocation(line: 783, column: 12, scope: !4298)
!4306 = !DILocation(line: 784, column: 10, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 784, column: 10)
!4308 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 783, column: 16)
!4309 = !DILocation(line: 784, column: 14, scope: !4307)
!4310 = !DILocation(line: 784, column: 10, scope: !4308)
!4311 = !DILocation(line: 786, column: 17, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4307, file: !3, line: 784, column: 20)
!4313 = !DILocation(line: 786, column: 21, scope: !4312)
!4314 = !DILocation(line: 786, column: 27, scope: !4312)
!4315 = !DILocation(line: 786, column: 14, scope: !4312)
!4316 = !DILocation(line: 787, column: 6, scope: !4312)
!4317 = !DILocation(line: 789, column: 21, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4307, file: !3, line: 788, column: 11)
!4319 = !DILocation(line: 789, column: 25, scope: !4318)
!4320 = !DILocation(line: 789, column: 19, scope: !4318)
!4321 = !DILocation(line: 789, column: 33, scope: !4318)
!4322 = !DILocation(line: 789, column: 37, scope: !4318)
!4323 = !DILocation(line: 789, column: 31, scope: !4318)
!4324 = !DILocation(line: 789, column: 14, scope: !4318)
!4325 = !DILocation(line: 792, column: 11, scope: !4308)
!4326 = !DILocation(line: 792, column: 15, scope: !4308)
!4327 = !DILocation(line: 792, column: 9, scope: !4308)
!4328 = distinct !{!4328, !4304, !4329}
!4329 = !DILocation(line: 793, column: 5, scope: !4298)
!4330 = !DILocation(line: 795, column: 11, scope: !4298)
!4331 = !DILocation(line: 795, column: 43, scope: !4298)
!4332 = !DILocation(line: 795, column: 41, scope: !4298)
!4333 = !DILocation(line: 795, column: 9, scope: !4298)
!4334 = !DILocation(line: 796, column: 10, scope: !4298)
!4335 = !DILocation(line: 796, column: 20, scope: !4298)
!4336 = !DILocation(line: 796, column: 26, scope: !4298)
!4337 = !DILocation(line: 796, column: 8, scope: !4298)
!4338 = !DILocation(line: 797, column: 7, scope: !4298)
!4339 = !DILocation(line: 798, column: 5, scope: !4298)
!4340 = !DILocation(line: 798, column: 12, scope: !4298)
!4341 = !DILocation(line: 799, column: 10, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 799, column: 10)
!4343 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 798, column: 16)
!4344 = !DILocation(line: 799, column: 14, scope: !4342)
!4345 = !DILocation(line: 799, column: 10, scope: !4343)
!4346 = !DILocation(line: 800, column: 14, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4342, file: !3, line: 799, column: 20)
!4348 = !DILocation(line: 800, column: 18, scope: !4347)
!4349 = !DILocation(line: 800, column: 12, scope: !4347)
!4350 = !DILocation(line: 801, column: 11, scope: !4347)
!4351 = !DILocation(line: 801, column: 15, scope: !4347)
!4352 = !DILocation(line: 801, column: 9, scope: !4347)
!4353 = !DILocation(line: 802, column: 7, scope: !4347)
!4354 = !DILocation(line: 802, column: 15, scope: !4347)
!4355 = !DILocation(line: 803, column: 39, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4347, file: !3, line: 802, column: 19)
!4357 = !DILocation(line: 803, column: 49, scope: !4356)
!4358 = !DILocation(line: 803, column: 18, scope: !4356)
!4359 = !DILocation(line: 803, column: 16, scope: !4356)
!4360 = !DILocation(line: 805, column: 12, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 805, column: 12)
!4362 = !DILocation(line: 805, column: 12, scope: !4356)
!4363 = !DILocalVariable(name: "j", scope: !4364, file: !3, line: 806, type: !22)
!4364 = distinct !DILexicalBlock(scope: !4361, file: !3, line: 805, column: 21)
!4365 = !DILocation(line: 806, column: 13, scope: !4364)
!4366 = !DILocation(line: 807, column: 16, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4364, file: !3, line: 807, column: 9)
!4368 = !DILocation(line: 807, column: 14, scope: !4367)
!4369 = !DILocation(line: 807, column: 21, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4367, file: !3, line: 807, column: 9)
!4371 = !DILocation(line: 807, column: 23, scope: !4370)
!4372 = !DILocation(line: 807, column: 9, scope: !4367)
!4373 = !DILocation(line: 808, column: 22, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 807, column: 33)
!4375 = !DILocation(line: 808, column: 26, scope: !4374)
!4376 = !DILocation(line: 808, column: 30, scope: !4374)
!4377 = !DILocation(line: 808, column: 36, scope: !4374)
!4378 = !DILocation(line: 808, column: 40, scope: !4374)
!4379 = !DILocation(line: 808, column: 44, scope: !4374)
!4380 = !DILocation(line: 808, column: 53, scope: !4374)
!4381 = !DILocation(line: 808, column: 57, scope: !4374)
!4382 = !DILocation(line: 808, column: 10, scope: !4374)
!4383 = !DILocation(line: 809, column: 11, scope: !4374)
!4384 = !DILocation(line: 810, column: 9, scope: !4374)
!4385 = !DILocation(line: 807, column: 28, scope: !4370)
!4386 = !DILocation(line: 807, column: 9, scope: !4370)
!4387 = distinct !{!4387, !4372, !4388}
!4388 = !DILocation(line: 810, column: 9, scope: !4367)
!4389 = !DILocation(line: 811, column: 23, scope: !4364)
!4390 = !DILocation(line: 811, column: 29, scope: !4364)
!4391 = !DILocation(line: 811, column: 36, scope: !4364)
!4392 = !DILocation(line: 811, column: 45, scope: !4364)
!4393 = !DILocation(line: 811, column: 34, scope: !4364)
!4394 = !DILocation(line: 811, column: 9, scope: !4364)
!4395 = !DILocation(line: 811, column: 14, scope: !4364)
!4396 = !DILocation(line: 811, column: 21, scope: !4364)
!4397 = !DILocation(line: 812, column: 8, scope: !4364)
!4398 = !DILocation(line: 814, column: 11, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4361, file: !3, line: 813, column: 13)
!4400 = !DILocation(line: 816, column: 12, scope: !4356)
!4401 = distinct !{!4401, !4353, !4402}
!4402 = !DILocation(line: 817, column: 7, scope: !4347)
!4403 = !DILocation(line: 818, column: 6, scope: !4347)
!4404 = !DILocation(line: 820, column: 12, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4342, file: !3, line: 819, column: 11)
!4406 = !DILocation(line: 820, column: 16, scope: !4405)
!4407 = !DILocation(line: 820, column: 10, scope: !4405)
!4408 = !DILocation(line: 821, column: 11, scope: !4405)
!4409 = !DILocation(line: 821, column: 15, scope: !4405)
!4410 = !DILocation(line: 821, column: 23, scope: !4405)
!4411 = !DILocation(line: 821, column: 27, scope: !4405)
!4412 = !DILocation(line: 821, column: 21, scope: !4405)
!4413 = !DILocation(line: 821, column: 9, scope: !4405)
!4414 = !DILocation(line: 822, column: 7, scope: !4405)
!4415 = !DILocation(line: 822, column: 15, scope: !4405)
!4416 = !DILocation(line: 823, column: 35, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4405, file: !3, line: 822, column: 19)
!4418 = !DILocation(line: 823, column: 45, scope: !4417)
!4419 = !DILocation(line: 823, column: 16, scope: !4417)
!4420 = !DILocation(line: 823, column: 14, scope: !4417)
!4421 = !DILocation(line: 824, column: 12, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 824, column: 12)
!4423 = !DILocation(line: 824, column: 12, scope: !4417)
!4424 = !DILocation(line: 825, column: 21, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4422, file: !3, line: 824, column: 19)
!4426 = !DILocation(line: 825, column: 25, scope: !4425)
!4427 = !DILocation(line: 825, column: 29, scope: !4425)
!4428 = !DILocation(line: 825, column: 33, scope: !4425)
!4429 = !DILocation(line: 825, column: 38, scope: !4425)
!4430 = !DILocation(line: 825, column: 45, scope: !4425)
!4431 = !DILocation(line: 825, column: 9, scope: !4425)
!4432 = !DILocation(line: 826, column: 25, scope: !4425)
!4433 = !DILocation(line: 826, column: 29, scope: !4425)
!4434 = !DILocation(line: 826, column: 36, scope: !4425)
!4435 = !DILocation(line: 826, column: 43, scope: !4425)
!4436 = !DILocation(line: 826, column: 34, scope: !4425)
!4437 = !DILocation(line: 826, column: 9, scope: !4425)
!4438 = !DILocation(line: 826, column: 13, scope: !4425)
!4439 = !DILocation(line: 826, column: 15, scope: !4425)
!4440 = !DILocation(line: 826, column: 23, scope: !4425)
!4441 = !DILocation(line: 827, column: 8, scope: !4425)
!4442 = !DILocation(line: 828, column: 10, scope: !4417)
!4443 = !DILocation(line: 829, column: 10, scope: !4417)
!4444 = distinct !{!4444, !4414, !4445}
!4445 = !DILocation(line: 830, column: 7, scope: !4405)
!4446 = !DILocation(line: 833, column: 11, scope: !4343)
!4447 = !DILocation(line: 833, column: 15, scope: !4343)
!4448 = !DILocation(line: 833, column: 9, scope: !4343)
!4449 = distinct !{!4449, !4339, !4450}
!4450 = !DILocation(line: 834, column: 5, scope: !4298)
!4451 = !DILocation(line: 835, column: 4, scope: !4298)
!4452 = !DILocation(line: 836, column: 3, scope: !4263)
!4453 = !DILocation(line: 838, column: 13, scope: !4213)
!4454 = !DILocation(line: 838, column: 17, scope: !4213)
!4455 = !DILocation(line: 838, column: 22, scope: !4213)
!4456 = !DILocation(line: 838, column: 28, scope: !4213)
!4457 = !DILocation(line: 838, column: 11, scope: !4213)
!4458 = !DILocation(line: 839, column: 3, scope: !4213)
!4459 = !DILocation(line: 839, column: 10, scope: !4213)
!4460 = !DILocalVariable(name: "apply_offset", scope: !4461, file: !3, line: 840, type: !22)
!4461 = distinct !DILexicalBlock(scope: !4213, file: !3, line: 839, column: 19)
!4462 = !DILocation(line: 840, column: 8, scope: !4461)
!4463 = !DILocation(line: 840, column: 24, scope: !4461)
!4464 = !DILocation(line: 840, column: 28, scope: !4461)
!4465 = !DILocation(line: 840, column: 32, scope: !4461)
!4466 = !DILocation(line: 840, column: 43, scope: !4461)
!4467 = !DILocation(line: 840, column: 40, scope: !4461)
!4468 = !DILocation(line: 840, column: 51, scope: !4461)
!4469 = !DILocation(line: 840, column: 55, scope: !4461)
!4470 = !DILocation(line: 840, column: 65, scope: !4461)
!4471 = !DILocation(line: 840, column: 73, scope: !4461)
!4472 = !DILocation(line: 840, column: 80, scope: !4461)
!4473 = !DILocation(line: 840, column: 89, scope: !4461)
!4474 = !DILocation(line: 840, column: 77, scope: !4461)
!4475 = !DILocation(line: 0, scope: !4461)
!4476 = !DILocalVariable(name: "fp", scope: !4461, file: !3, line: 842, type: !3154)
!4477 = !DILocation(line: 842, column: 11, scope: !4461)
!4478 = !DILocation(line: 842, column: 25, scope: !4461)
!4479 = !DILocation(line: 842, column: 37, scope: !4461)
!4480 = !DILocation(line: 842, column: 41, scope: !4461)
!4481 = !DILocation(line: 842, column: 46, scope: !4461)
!4482 = !DILocation(line: 842, column: 57, scope: !4461)
!4483 = !DILocation(line: 842, column: 55, scope: !4461)
!4484 = !DILocation(line: 842, column: 23, scope: !4461)
!4485 = !DILocation(line: 843, column: 19, scope: !4461)
!4486 = !DILocation(line: 843, column: 28, scope: !4461)
!4487 = !DILocation(line: 843, column: 17, scope: !4461)
!4488 = !DILocation(line: 843, column: 8, scope: !4461)
!4489 = !DILocation(line: 845, column: 9, scope: !4461)
!4490 = !DILocation(line: 845, column: 19, scope: !4461)
!4491 = !DILocation(line: 845, column: 25, scope: !4461)
!4492 = !DILocation(line: 845, column: 7, scope: !4461)
!4493 = !DILocation(line: 846, column: 6, scope: !4461)
!4494 = !DILocation(line: 847, column: 4, scope: !4461)
!4495 = !DILocation(line: 847, column: 11, scope: !4461)
!4496 = !DILocation(line: 848, column: 9, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4498, file: !3, line: 848, column: 9)
!4498 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 847, column: 15)
!4499 = !DILocation(line: 848, column: 20, scope: !4497)
!4500 = !DILocation(line: 848, column: 17, scope: !4497)
!4501 = !DILocation(line: 848, column: 9, scope: !4498)
!4502 = !DILocalVariable(name: "restore", scope: !4503, file: !3, line: 849, type: !22)
!4503 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 848, column: 28)
!4504 = !DILocation(line: 849, column: 10, scope: !4503)
!4505 = !DILocation(line: 849, column: 20, scope: !4503)
!4506 = !DILocation(line: 849, column: 30, scope: !4503)
!4507 = !DILocation(line: 849, column: 34, scope: !4503)
!4508 = !DILocation(line: 849, column: 39, scope: !4503)
!4509 = !DILocation(line: 849, column: 27, scope: !4503)
!4510 = !DILocation(line: 851, column: 10, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4503, file: !3, line: 851, column: 10)
!4512 = !DILocation(line: 851, column: 14, scope: !4511)
!4513 = !DILocation(line: 851, column: 10, scope: !4503)
!4514 = !DILocation(line: 852, column: 14, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4511, file: !3, line: 851, column: 20)
!4516 = !DILocation(line: 852, column: 18, scope: !4515)
!4517 = !DILocation(line: 852, column: 12, scope: !4515)
!4518 = !DILocation(line: 853, column: 11, scope: !4515)
!4519 = !DILocation(line: 853, column: 15, scope: !4515)
!4520 = !DILocation(line: 853, column: 9, scope: !4515)
!4521 = !DILocation(line: 854, column: 7, scope: !4515)
!4522 = !DILocation(line: 854, column: 15, scope: !4515)
!4523 = !DILocalVariable(name: "j", scope: !4524, file: !3, line: 855, type: !22)
!4524 = distinct !DILexicalBlock(scope: !4515, file: !3, line: 854, column: 19)
!4525 = !DILocation(line: 855, column: 12, scope: !4524)
!4526 = !DILocation(line: 856, column: 39, scope: !4524)
!4527 = !DILocation(line: 856, column: 49, scope: !4524)
!4528 = !DILocation(line: 856, column: 18, scope: !4524)
!4529 = !DILocation(line: 856, column: 16, scope: !4524)
!4530 = !DILocation(line: 858, column: 15, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4524, file: !3, line: 858, column: 8)
!4532 = !DILocation(line: 858, column: 13, scope: !4531)
!4533 = !DILocation(line: 858, column: 20, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 858, column: 8)
!4535 = !DILocation(line: 858, column: 22, scope: !4534)
!4536 = !DILocation(line: 858, column: 8, scope: !4531)
!4537 = !DILocation(line: 859, column: 20, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 858, column: 37)
!4539 = !DILocation(line: 859, column: 24, scope: !4538)
!4540 = !DILocation(line: 859, column: 30, scope: !4538)
!4541 = !DILocation(line: 859, column: 34, scope: !4538)
!4542 = !DILocation(line: 859, column: 9, scope: !4538)
!4543 = !DILocation(line: 861, column: 13, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 861, column: 13)
!4545 = !DILocation(line: 861, column: 21, scope: !4544)
!4546 = !DILocation(line: 861, column: 24, scope: !4544)
!4547 = !DILocation(line: 861, column: 13, scope: !4538)
!4548 = !DILocation(line: 862, column: 21, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4544, file: !3, line: 861, column: 33)
!4550 = !DILocation(line: 862, column: 27, scope: !4549)
!4551 = !DILocation(line: 862, column: 31, scope: !4549)
!4552 = !DILocation(line: 862, column: 35, scope: !4549)
!4553 = !DILocation(line: 862, column: 44, scope: !4549)
!4554 = !DILocation(line: 862, column: 48, scope: !4549)
!4555 = !DILocation(line: 862, column: 10, scope: !4549)
!4556 = !DILocation(line: 863, column: 9, scope: !4549)
!4557 = !DILocation(line: 865, column: 12, scope: !4538)
!4558 = !DILocation(line: 866, column: 8, scope: !4538)
!4559 = !DILocation(line: 858, column: 27, scope: !4534)
!4560 = !DILocation(line: 858, column: 32, scope: !4534)
!4561 = !DILocation(line: 858, column: 8, scope: !4534)
!4562 = distinct !{!4562, !4536, !4563}
!4563 = !DILocation(line: 866, column: 8, scope: !4531)
!4564 = !DILocation(line: 867, column: 16, scope: !4524)
!4565 = !DILocation(line: 867, column: 22, scope: !4524)
!4566 = !DILocation(line: 867, column: 8, scope: !4524)
!4567 = !DILocation(line: 867, column: 14, scope: !4524)
!4568 = !DILocation(line: 869, column: 12, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4524, file: !3, line: 869, column: 12)
!4570 = !DILocation(line: 869, column: 20, scope: !4569)
!4571 = !DILocation(line: 869, column: 23, scope: !4569)
!4572 = !DILocation(line: 869, column: 12, scope: !4524)
!4573 = !DILocation(line: 870, column: 22, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4569, file: !3, line: 869, column: 32)
!4575 = !DILocation(line: 870, column: 31, scope: !4574)
!4576 = !DILocation(line: 870, column: 9, scope: !4574)
!4577 = !DILocation(line: 870, column: 15, scope: !4574)
!4578 = !DILocation(line: 870, column: 20, scope: !4574)
!4579 = !DILocation(line: 871, column: 8, scope: !4574)
!4580 = !DILocation(line: 873, column: 11, scope: !4524)
!4581 = !DILocation(line: 873, column: 17, scope: !4524)
!4582 = !DILocation(line: 874, column: 12, scope: !4524)
!4583 = distinct !{!4583, !4521, !4584}
!4584 = !DILocation(line: 875, column: 7, scope: !4515)
!4585 = !DILocation(line: 876, column: 6, scope: !4515)
!4586 = !DILocation(line: 878, column: 12, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4511, file: !3, line: 877, column: 11)
!4588 = !DILocation(line: 878, column: 16, scope: !4587)
!4589 = !DILocation(line: 878, column: 10, scope: !4587)
!4590 = !DILocation(line: 879, column: 11, scope: !4587)
!4591 = !DILocation(line: 879, column: 15, scope: !4587)
!4592 = !DILocation(line: 879, column: 23, scope: !4587)
!4593 = !DILocation(line: 879, column: 27, scope: !4587)
!4594 = !DILocation(line: 879, column: 21, scope: !4587)
!4595 = !DILocation(line: 879, column: 9, scope: !4587)
!4596 = !DILocation(line: 880, column: 7, scope: !4587)
!4597 = !DILocation(line: 880, column: 15, scope: !4587)
!4598 = !DILocation(line: 881, column: 35, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4587, file: !3, line: 880, column: 19)
!4600 = !DILocation(line: 881, column: 45, scope: !4599)
!4601 = !DILocation(line: 881, column: 16, scope: !4599)
!4602 = !DILocation(line: 881, column: 14, scope: !4599)
!4603 = !DILocation(line: 883, column: 19, scope: !4599)
!4604 = !DILocation(line: 883, column: 23, scope: !4599)
!4605 = !DILocation(line: 883, column: 27, scope: !4599)
!4606 = !DILocation(line: 883, column: 8, scope: !4599)
!4607 = !DILocation(line: 885, column: 16, scope: !4599)
!4608 = !DILocation(line: 885, column: 20, scope: !4599)
!4609 = !DILocation(line: 885, column: 8, scope: !4599)
!4610 = !DILocation(line: 885, column: 14, scope: !4599)
!4611 = !DILocation(line: 887, column: 12, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 887, column: 12)
!4613 = !DILocation(line: 887, column: 20, scope: !4612)
!4614 = !DILocation(line: 887, column: 23, scope: !4612)
!4615 = !DILocation(line: 887, column: 12, scope: !4599)
!4616 = !DILocation(line: 888, column: 20, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4612, file: !3, line: 887, column: 30)
!4618 = !DILocation(line: 888, column: 24, scope: !4617)
!4619 = !DILocation(line: 888, column: 29, scope: !4617)
!4620 = !DILocation(line: 888, column: 36, scope: !4617)
!4621 = !DILocation(line: 888, column: 9, scope: !4617)
!4622 = !DILocation(line: 889, column: 20, scope: !4617)
!4623 = !DILocation(line: 889, column: 27, scope: !4617)
!4624 = !DILocation(line: 889, column: 9, scope: !4617)
!4625 = !DILocation(line: 889, column: 13, scope: !4617)
!4626 = !DILocation(line: 889, column: 18, scope: !4617)
!4627 = !DILocation(line: 890, column: 8, scope: !4617)
!4628 = !DILocation(line: 892, column: 11, scope: !4599)
!4629 = !DILocation(line: 893, column: 10, scope: !4599)
!4630 = !DILocation(line: 894, column: 10, scope: !4599)
!4631 = distinct !{!4631, !4596, !4632}
!4632 = !DILocation(line: 895, column: 7, scope: !4587)
!4633 = !DILocation(line: 897, column: 5, scope: !4503)
!4634 = !DILocalVariable(name: "index", scope: !4635, file: !3, line: 899, type: !22)
!4635 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 898, column: 10)
!4636 = !DILocation(line: 899, column: 10, scope: !4635)
!4637 = !DILocalVariable(name: "curofp", scope: !4635, file: !3, line: 900, type: !4638)
!4638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4639, size: 64)
!4639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !204)
!4640 = !DILocation(line: 900, column: 19, scope: !4635)
!4641 = !DILocation(line: 902, column: 10, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4635, file: !3, line: 902, column: 10)
!4643 = !DILocation(line: 902, column: 10, scope: !4635)
!4644 = !DILocation(line: 903, column: 11, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 903, column: 11)
!4646 = distinct !DILexicalBlock(scope: !4642, file: !3, line: 902, column: 18)
!4647 = !DILocation(line: 903, column: 15, scope: !4645)
!4648 = !DILocation(line: 903, column: 11, scope: !4646)
!4649 = !DILocation(line: 904, column: 15, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 903, column: 21)
!4651 = !DILocation(line: 904, column: 19, scope: !4650)
!4652 = !DILocation(line: 904, column: 13, scope: !4650)
!4653 = !DILocation(line: 905, column: 12, scope: !4650)
!4654 = !DILocation(line: 905, column: 16, scope: !4650)
!4655 = !DILocation(line: 905, column: 10, scope: !4650)
!4656 = !DILocation(line: 907, column: 8, scope: !4650)
!4657 = !DILocation(line: 907, column: 16, scope: !4650)
!4658 = !DILocation(line: 908, column: 42, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4650, file: !3, line: 907, column: 20)
!4660 = !DILocation(line: 908, column: 52, scope: !4659)
!4661 = !DILocation(line: 908, column: 17, scope: !4659)
!4662 = !DILocation(line: 908, column: 15, scope: !4659)
!4663 = !DILocation(line: 909, column: 13, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4659, file: !3, line: 909, column: 13)
!4665 = !DILocation(line: 909, column: 19, scope: !4664)
!4666 = !DILocation(line: 909, column: 13, scope: !4659)
!4667 = !DILocalVariable(name: "j", scope: !4668, file: !3, line: 910, type: !22)
!4668 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 909, column: 25)
!4669 = !DILocation(line: 910, column: 14, scope: !4668)
!4670 = !DILocation(line: 911, column: 19, scope: !4668)
!4671 = !DILocation(line: 911, column: 25, scope: !4668)
!4672 = !DILocation(line: 911, column: 23, scope: !4668)
!4673 = !DILocation(line: 911, column: 17, scope: !4668)
!4674 = !DILocation(line: 913, column: 17, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4668, file: !3, line: 913, column: 10)
!4676 = !DILocation(line: 913, column: 15, scope: !4675)
!4677 = !DILocation(line: 913, column: 22, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 913, column: 10)
!4679 = !DILocation(line: 913, column: 24, scope: !4678)
!4680 = !DILocation(line: 913, column: 10, scope: !4675)
!4681 = !DILocation(line: 914, column: 22, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4678, file: !3, line: 913, column: 39)
!4683 = !DILocation(line: 914, column: 26, scope: !4682)
!4684 = !DILocation(line: 914, column: 11, scope: !4682)
!4685 = !DILocation(line: 916, column: 15, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4682, file: !3, line: 916, column: 15)
!4687 = !DILocation(line: 916, column: 15, scope: !4682)
!4688 = !DILocation(line: 917, column: 22, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4686, file: !3, line: 916, column: 29)
!4690 = !DILocation(line: 917, column: 26, scope: !4689)
!4691 = !DILocation(line: 917, column: 30, scope: !4689)
!4692 = !DILocation(line: 917, column: 12, scope: !4689)
!4693 = !DILocation(line: 918, column: 11, scope: !4689)
!4694 = !DILocation(line: 920, column: 14, scope: !4682)
!4695 = !DILocation(line: 920, column: 27, scope: !4682)
!4696 = !DILocation(line: 921, column: 10, scope: !4682)
!4697 = !DILocation(line: 913, column: 29, scope: !4678)
!4698 = !DILocation(line: 913, column: 34, scope: !4678)
!4699 = !DILocation(line: 913, column: 10, scope: !4678)
!4700 = distinct !{!4700, !4680, !4701}
!4701 = !DILocation(line: 921, column: 10, scope: !4675)
!4702 = !DILocation(line: 922, column: 18, scope: !4668)
!4703 = !DILocation(line: 922, column: 10, scope: !4668)
!4704 = !DILocation(line: 922, column: 16, scope: !4668)
!4705 = !DILocation(line: 924, column: 14, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4668, file: !3, line: 924, column: 14)
!4707 = !DILocation(line: 924, column: 14, scope: !4668)
!4708 = !DILocation(line: 926, column: 21, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 924, column: 28)
!4710 = !DILocation(line: 926, column: 25, scope: !4709)
!4711 = !DILocation(line: 926, column: 29, scope: !4709)
!4712 = !DILocation(line: 926, column: 11, scope: !4709)
!4713 = !DILocation(line: 927, column: 12, scope: !4709)
!4714 = !DILocation(line: 928, column: 10, scope: !4709)
!4715 = !DILocation(line: 930, column: 13, scope: !4668)
!4716 = !DILocation(line: 931, column: 9, scope: !4668)
!4717 = !DILocalVariable(name: "j", scope: !4718, file: !3, line: 933, type: !22)
!4718 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 932, column: 14)
!4719 = !DILocation(line: 933, column: 14, scope: !4718)
!4720 = !DILocation(line: 934, column: 17, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 934, column: 10)
!4722 = !DILocation(line: 934, column: 15, scope: !4721)
!4723 = !DILocation(line: 934, column: 22, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4721, file: !3, line: 934, column: 10)
!4725 = !DILocation(line: 934, column: 24, scope: !4724)
!4726 = !DILocation(line: 934, column: 10, scope: !4721)
!4727 = !DILocation(line: 935, column: 22, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4724, file: !3, line: 934, column: 39)
!4729 = !DILocation(line: 935, column: 26, scope: !4728)
!4730 = !DILocation(line: 935, column: 32, scope: !4728)
!4731 = !DILocation(line: 935, column: 36, scope: !4728)
!4732 = !DILocation(line: 935, column: 11, scope: !4728)
!4733 = !DILocation(line: 936, column: 14, scope: !4728)
!4734 = !DILocation(line: 937, column: 10, scope: !4728)
!4735 = !DILocation(line: 934, column: 29, scope: !4724)
!4736 = !DILocation(line: 934, column: 34, scope: !4724)
!4737 = !DILocation(line: 934, column: 10, scope: !4724)
!4738 = distinct !{!4738, !4726, !4739}
!4739 = !DILocation(line: 937, column: 10, scope: !4721)
!4740 = !DILocation(line: 938, column: 18, scope: !4718)
!4741 = !DILocation(line: 938, column: 24, scope: !4718)
!4742 = !DILocation(line: 938, column: 10, scope: !4718)
!4743 = !DILocation(line: 938, column: 16, scope: !4718)
!4744 = !DILocation(line: 940, column: 13, scope: !4718)
!4745 = !DILocation(line: 942, column: 13, scope: !4659)
!4746 = distinct !{!4746, !4656, !4747}
!4747 = !DILocation(line: 943, column: 8, scope: !4650)
!4748 = !DILocation(line: 944, column: 7, scope: !4650)
!4749 = !DILocation(line: 946, column: 13, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 945, column: 12)
!4751 = !DILocation(line: 946, column: 17, scope: !4750)
!4752 = !DILocation(line: 946, column: 11, scope: !4750)
!4753 = !DILocation(line: 947, column: 12, scope: !4750)
!4754 = !DILocation(line: 947, column: 16, scope: !4750)
!4755 = !DILocation(line: 947, column: 24, scope: !4750)
!4756 = !DILocation(line: 947, column: 28, scope: !4750)
!4757 = !DILocation(line: 947, column: 22, scope: !4750)
!4758 = !DILocation(line: 947, column: 10, scope: !4750)
!4759 = !DILocation(line: 948, column: 8, scope: !4750)
!4760 = !DILocation(line: 948, column: 16, scope: !4750)
!4761 = !DILocation(line: 949, column: 42, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4750, file: !3, line: 948, column: 20)
!4763 = !DILocation(line: 949, column: 52, scope: !4762)
!4764 = !DILocation(line: 949, column: 17, scope: !4762)
!4765 = !DILocation(line: 949, column: 15, scope: !4762)
!4766 = !DILocation(line: 951, column: 13, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 951, column: 13)
!4768 = !DILocation(line: 951, column: 19, scope: !4767)
!4769 = !DILocation(line: 951, column: 13, scope: !4762)
!4770 = !DILocation(line: 952, column: 19, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 951, column: 25)
!4772 = !DILocation(line: 952, column: 25, scope: !4771)
!4773 = !DILocation(line: 952, column: 23, scope: !4771)
!4774 = !DILocation(line: 952, column: 17, scope: !4771)
!4775 = !DILocation(line: 953, column: 21, scope: !4771)
!4776 = !DILocation(line: 953, column: 25, scope: !4771)
!4777 = !DILocation(line: 953, column: 10, scope: !4771)
!4778 = !DILocation(line: 954, column: 18, scope: !4771)
!4779 = !DILocation(line: 954, column: 10, scope: !4771)
!4780 = !DILocation(line: 954, column: 16, scope: !4771)
!4781 = !DILocation(line: 956, column: 14, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4771, file: !3, line: 956, column: 14)
!4783 = !DILocation(line: 956, column: 14, scope: !4771)
!4784 = !DILocation(line: 957, column: 21, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4782, file: !3, line: 956, column: 28)
!4786 = !DILocation(line: 957, column: 25, scope: !4785)
!4787 = !DILocation(line: 957, column: 29, scope: !4785)
!4788 = !DILocation(line: 957, column: 11, scope: !4785)
!4789 = !DILocation(line: 958, column: 20, scope: !4785)
!4790 = !DILocation(line: 958, column: 24, scope: !4785)
!4791 = !DILocation(line: 958, column: 26, scope: !4785)
!4792 = !DILocation(line: 958, column: 11, scope: !4785)
!4793 = !DILocation(line: 958, column: 17, scope: !4785)
!4794 = !DILocation(line: 959, column: 10, scope: !4785)
!4795 = !DILocation(line: 960, column: 9, scope: !4771)
!4796 = !DILocation(line: 962, column: 21, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 961, column: 14)
!4798 = !DILocation(line: 962, column: 25, scope: !4797)
!4799 = !DILocation(line: 962, column: 29, scope: !4797)
!4800 = !DILocation(line: 962, column: 10, scope: !4797)
!4801 = !DILocation(line: 963, column: 18, scope: !4797)
!4802 = !DILocation(line: 963, column: 22, scope: !4797)
!4803 = !DILocation(line: 963, column: 10, scope: !4797)
!4804 = !DILocation(line: 963, column: 16, scope: !4797)
!4805 = !DILocation(line: 966, column: 12, scope: !4762)
!4806 = !DILocation(line: 967, column: 11, scope: !4762)
!4807 = !DILocation(line: 968, column: 11, scope: !4762)
!4808 = distinct !{!4808, !4759, !4809}
!4809 = !DILocation(line: 969, column: 8, scope: !4750)
!4810 = !DILocation(line: 971, column: 6, scope: !4646)
!4811 = !DILocation(line: 974, column: 10, scope: !4498)
!4812 = !DILocation(line: 974, column: 14, scope: !4498)
!4813 = !DILocation(line: 974, column: 8, scope: !4498)
!4814 = distinct !{!4814, !4494, !4815}
!4815 = !DILocation(line: 975, column: 4, scope: !4461)
!4816 = !DILocation(line: 977, column: 8, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 977, column: 8)
!4818 = !DILocation(line: 977, column: 8, scope: !4461)
!4819 = !DILocation(line: 979, column: 22, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 977, column: 22)
!4821 = !DILocation(line: 979, column: 32, scope: !4820)
!4822 = !DILocation(line: 979, column: 39, scope: !4820)
!4823 = !DILocation(line: 979, column: 5, scope: !4820)
!4824 = !DILocation(line: 980, column: 4, scope: !4820)
!4825 = !DILocation(line: 982, column: 23, scope: !4461)
!4826 = !DILocation(line: 982, column: 4, scope: !4461)
!4827 = !DILocation(line: 982, column: 13, scope: !4461)
!4828 = !DILocation(line: 982, column: 21, scope: !4461)
!4829 = !DILocation(line: 983, column: 8, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 983, column: 8)
!4831 = !DILocation(line: 983, column: 17, scope: !4830)
!4832 = !DILocation(line: 983, column: 8, scope: !4461)
!4833 = !DILocation(line: 983, column: 23, scope: !4830)
!4834 = !DILocation(line: 983, column: 33, scope: !4830)
!4835 = !DILocation(line: 983, column: 42, scope: !4830)
!4836 = !DILocation(line: 984, column: 20, scope: !4461)
!4837 = !DILocation(line: 984, column: 4, scope: !4461)
!4838 = !DILocation(line: 984, column: 13, scope: !4461)
!4839 = !DILocation(line: 984, column: 18, scope: !4461)
!4840 = !DILocation(line: 986, column: 14, scope: !4461)
!4841 = !DILocation(line: 986, column: 23, scope: !4461)
!4842 = !DILocation(line: 986, column: 12, scope: !4461)
!4843 = distinct !{!4843, !4458, !4844}
!4844 = !DILocation(line: 987, column: 3, scope: !4213)
!4845 = !DILocation(line: 989, column: 7, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4213, file: !3, line: 989, column: 7)
!4847 = !DILocation(line: 989, column: 7, scope: !4213)
!4848 = !DILocation(line: 989, column: 12, scope: !4846)
!4849 = !DILocation(line: 989, column: 22, scope: !4846)
!4850 = !DILocation(line: 990, column: 2, scope: !4213)
!4851 = !DILocation(line: 991, column: 1, scope: !4200)
!4852 = distinct !DISubprogram(name: "make_editNurb", scope: !3, file: !3, line: 1348, type: !3331, scopeLine: 1349, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!4853 = !DILocalVariable(name: "obedit", arg: 1, scope: !4852, file: !3, line: 1348, type: !3242)
!4854 = !DILocation(line: 1348, column: 28, scope: !4852)
!4855 = !DILocalVariable(name: "cu", scope: !4852, file: !3, line: 1350, type: !2953)
!4856 = !DILocation(line: 1350, column: 9, scope: !4852)
!4857 = !DILocation(line: 1350, column: 23, scope: !4852)
!4858 = !DILocation(line: 1350, column: 31, scope: !4852)
!4859 = !DILocation(line: 1350, column: 14, scope: !4852)
!4860 = !DILocalVariable(name: "editnurb", scope: !4852, file: !3, line: 1351, type: !2962)
!4861 = !DILocation(line: 1351, column: 12, scope: !4852)
!4862 = !DILocation(line: 1351, column: 23, scope: !4852)
!4863 = !DILocation(line: 1351, column: 27, scope: !4852)
!4864 = !DILocalVariable(name: "nu", scope: !4852, file: !3, line: 1352, type: !3163)
!4865 = !DILocation(line: 1352, column: 8, scope: !4852)
!4866 = !DILocalVariable(name: "newnu", scope: !4852, file: !3, line: 1352, type: !3163)
!4867 = !DILocation(line: 1352, column: 13, scope: !4852)
!4868 = !DILocalVariable(name: "actkey", scope: !4852, file: !3, line: 1353, type: !2982)
!4869 = !DILocation(line: 1353, column: 12, scope: !4852)
!4870 = !DILocation(line: 1355, column: 6, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4852, file: !3, line: 1355, column: 6)
!4872 = !DILocation(line: 1355, column: 6, scope: !4852)
!4873 = !DILocation(line: 1356, column: 37, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4871, file: !3, line: 1355, column: 45)
!4875 = !DILocation(line: 1356, column: 12, scope: !4874)
!4876 = !DILocation(line: 1356, column: 10, scope: !4874)
!4877 = !DILocation(line: 1358, column: 7, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 1358, column: 7)
!4879 = !DILocation(line: 1358, column: 7, scope: !4874)
!4880 = !DILocation(line: 1360, column: 4, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 1358, column: 15)
!4882 = !DILocation(line: 1361, column: 29, scope: !4881)
!4883 = !DILocation(line: 1361, column: 37, scope: !4881)
!4884 = !DILocation(line: 1361, column: 42, scope: !4881)
!4885 = !DILocation(line: 1361, column: 46, scope: !4881)
!4886 = !DILocation(line: 1361, column: 4, scope: !4881)
!4887 = !DILocation(line: 1362, column: 3, scope: !4881)
!4888 = !DILocation(line: 1364, column: 7, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 1364, column: 7)
!4890 = !DILocation(line: 1364, column: 7, scope: !4874)
!4891 = !DILocation(line: 1365, column: 23, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 1364, column: 17)
!4893 = !DILocation(line: 1365, column: 33, scope: !4892)
!4894 = !DILocation(line: 1365, column: 4, scope: !4892)
!4895 = !DILocation(line: 1366, column: 37, scope: !4892)
!4896 = !DILocation(line: 1366, column: 4, scope: !4892)
!4897 = !DILocation(line: 1367, column: 4, scope: !4892)
!4898 = !DILocation(line: 1367, column: 14, scope: !4892)
!4899 = !DILocation(line: 1367, column: 23, scope: !4892)
!4900 = !DILocation(line: 1368, column: 3, scope: !4892)
!4901 = !DILocation(line: 1370, column: 15, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 1369, column: 8)
!4903 = !DILocation(line: 1370, column: 13, scope: !4902)
!4904 = !DILocation(line: 1371, column: 19, scope: !4902)
!4905 = !DILocation(line: 1371, column: 4, scope: !4902)
!4906 = !DILocation(line: 1371, column: 8, scope: !4902)
!4907 = !DILocation(line: 1371, column: 17, scope: !4902)
!4908 = !DILocation(line: 1374, column: 8, scope: !4874)
!4909 = !DILocation(line: 1374, column: 12, scope: !4874)
!4910 = !DILocation(line: 1374, column: 17, scope: !4874)
!4911 = !DILocation(line: 1374, column: 6, scope: !4874)
!4912 = !DILocation(line: 1375, column: 3, scope: !4874)
!4913 = !DILocation(line: 1375, column: 10, scope: !4874)
!4914 = !DILocation(line: 1376, column: 31, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 1375, column: 14)
!4916 = !DILocation(line: 1376, column: 12, scope: !4915)
!4917 = !DILocation(line: 1376, column: 10, scope: !4915)
!4918 = !DILocation(line: 1377, column: 20, scope: !4915)
!4919 = !DILocation(line: 1377, column: 4, scope: !4915)
!4920 = !DILocation(line: 1378, column: 17, scope: !4915)
!4921 = !DILocation(line: 1378, column: 27, scope: !4915)
!4922 = !DILocation(line: 1378, column: 34, scope: !4915)
!4923 = !DILocation(line: 1378, column: 4, scope: !4915)
!4924 = !DILocation(line: 1379, column: 9, scope: !4915)
!4925 = !DILocation(line: 1379, column: 13, scope: !4915)
!4926 = !DILocation(line: 1379, column: 7, scope: !4915)
!4927 = distinct !{!4927, !4912, !4928}
!4928 = !DILocation(line: 1380, column: 3, scope: !4874)
!4929 = !DILocation(line: 1382, column: 7, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 1382, column: 7)
!4931 = !DILocation(line: 1382, column: 7, scope: !4874)
!4932 = !DILocation(line: 1383, column: 24, scope: !4930)
!4933 = !DILocation(line: 1383, column: 32, scope: !4930)
!4934 = !DILocation(line: 1383, column: 4, scope: !4930)
!4935 = !DILocation(line: 1383, column: 14, scope: !4930)
!4936 = !DILocation(line: 1383, column: 22, scope: !4930)
!4937 = !DILocation(line: 1387, column: 26, scope: !4874)
!4938 = !DILocation(line: 1387, column: 37, scope: !4874)
!4939 = !DILocation(line: 1387, column: 41, scope: !4874)
!4940 = !DILocation(line: 1387, column: 3, scope: !4874)
!4941 = !DILocation(line: 1388, column: 2, scope: !4874)
!4942 = !DILocation(line: 1389, column: 1, scope: !4852)
!4943 = distinct !DISubprogram(name: "init_editNurb_keyIndex", scope: !3, file: !3, line: 273, type: !4944, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!4944 = !DISubroutineType(types: !4945)
!4945 = !{null, !2962, !486}
!4946 = !DILocalVariable(name: "editnurb", arg: 1, scope: !4943, file: !3, line: 273, type: !2962)
!4947 = !DILocation(line: 273, column: 46, scope: !4943)
!4948 = !DILocalVariable(name: "origBase", arg: 2, scope: !4943, file: !3, line: 273, type: !486)
!4949 = !DILocation(line: 273, column: 66, scope: !4943)
!4950 = !DILocalVariable(name: "nu", scope: !4943, file: !3, line: 275, type: !3163)
!4951 = !DILocation(line: 275, column: 8, scope: !4943)
!4952 = !DILocation(line: 275, column: 13, scope: !4943)
!4953 = !DILocation(line: 275, column: 23, scope: !4943)
!4954 = !DILocation(line: 275, column: 29, scope: !4943)
!4955 = !DILocalVariable(name: "orignu", scope: !4943, file: !3, line: 276, type: !3163)
!4956 = !DILocation(line: 276, column: 8, scope: !4943)
!4957 = !DILocation(line: 276, column: 17, scope: !4943)
!4958 = !DILocation(line: 276, column: 27, scope: !4943)
!4959 = !DILocalVariable(name: "gh", scope: !4943, file: !3, line: 277, type: !4960)
!4960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4961, size: 64)
!4961 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !3196, line: 48, baseType: !274)
!4962 = !DILocation(line: 277, column: 9, scope: !4943)
!4963 = !DILocalVariable(name: "bezt", scope: !4943, file: !3, line: 278, type: !3104)
!4964 = !DILocation(line: 278, column: 13, scope: !4943)
!4965 = !DILocalVariable(name: "origbezt", scope: !4943, file: !3, line: 278, type: !3104)
!4966 = !DILocation(line: 278, column: 20, scope: !4943)
!4967 = !DILocalVariable(name: "bp", scope: !4943, file: !3, line: 279, type: !3093)
!4968 = !DILocation(line: 279, column: 10, scope: !4943)
!4969 = !DILocalVariable(name: "origbp", scope: !4943, file: !3, line: 279, type: !3093)
!4970 = !DILocation(line: 279, column: 15, scope: !4943)
!4971 = !DILocalVariable(name: "keyIndex", scope: !4943, file: !3, line: 280, type: !3503)
!4972 = !DILocation(line: 280, column: 14, scope: !4943)
!4973 = !DILocalVariable(name: "a", scope: !4943, file: !3, line: 281, type: !22)
!4974 = !DILocation(line: 281, column: 6, scope: !4943)
!4975 = !DILocalVariable(name: "key_index", scope: !4943, file: !3, line: 281, type: !22)
!4976 = !DILocation(line: 281, column: 9, scope: !4943)
!4977 = !DILocalVariable(name: "nu_index", scope: !4943, file: !3, line: 281, type: !22)
!4978 = !DILocation(line: 281, column: 24, scope: !4943)
!4979 = !DILocalVariable(name: "pt_index", scope: !4943, file: !3, line: 281, type: !22)
!4980 = !DILocation(line: 281, column: 38, scope: !4943)
!4981 = !DILocalVariable(name: "vertex_index", scope: !4943, file: !3, line: 281, type: !22)
!4982 = !DILocation(line: 281, column: 52, scope: !4943)
!4983 = !DILocation(line: 283, column: 6, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4943, file: !3, line: 283, column: 6)
!4985 = !DILocation(line: 283, column: 16, scope: !4984)
!4986 = !DILocation(line: 283, column: 6, scope: !4943)
!4987 = !DILocation(line: 283, column: 26, scope: !4984)
!4988 = !DILocation(line: 285, column: 7, scope: !4943)
!4989 = !DILocation(line: 285, column: 5, scope: !4943)
!4990 = !DILocation(line: 287, column: 2, scope: !4943)
!4991 = !DILocation(line: 287, column: 9, scope: !4943)
!4992 = !DILocation(line: 288, column: 7, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 288, column: 7)
!4994 = distinct !DILexicalBlock(scope: !4943, file: !3, line: 287, column: 17)
!4995 = !DILocation(line: 288, column: 15, scope: !4993)
!4996 = !DILocation(line: 288, column: 7, scope: !4994)
!4997 = !DILocation(line: 289, column: 8, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 288, column: 21)
!4999 = !DILocation(line: 289, column: 16, scope: !4998)
!5000 = !DILocation(line: 289, column: 6, scope: !4998)
!5001 = !DILocation(line: 290, column: 11, scope: !4998)
!5002 = !DILocation(line: 290, column: 15, scope: !4998)
!5003 = !DILocation(line: 290, column: 9, scope: !4998)
!5004 = !DILocation(line: 291, column: 15, scope: !4998)
!5005 = !DILocation(line: 291, column: 23, scope: !4998)
!5006 = !DILocation(line: 291, column: 13, scope: !4998)
!5007 = !DILocation(line: 292, column: 13, scope: !4998)
!5008 = !DILocation(line: 293, column: 4, scope: !4998)
!5009 = !DILocation(line: 293, column: 12, scope: !4998)
!5010 = !DILocation(line: 294, column: 32, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !4998, file: !3, line: 293, column: 16)
!5012 = !DILocation(line: 294, column: 42, scope: !5011)
!5013 = !DILocation(line: 294, column: 53, scope: !5011)
!5014 = !DILocation(line: 294, column: 63, scope: !5011)
!5015 = !DILocation(line: 294, column: 73, scope: !5011)
!5016 = !DILocation(line: 294, column: 87, scope: !5011)
!5017 = !DILocation(line: 294, column: 16, scope: !5011)
!5018 = !DILocation(line: 294, column: 14, scope: !5011)
!5019 = !DILocation(line: 295, column: 22, scope: !5011)
!5020 = !DILocation(line: 295, column: 26, scope: !5011)
!5021 = !DILocation(line: 295, column: 32, scope: !5011)
!5022 = !DILocation(line: 295, column: 5, scope: !5011)
!5023 = !DILocation(line: 296, column: 15, scope: !5011)
!5024 = !DILocation(line: 297, column: 18, scope: !5011)
!5025 = !DILocation(line: 298, column: 9, scope: !5011)
!5026 = !DILocation(line: 299, column: 13, scope: !5011)
!5027 = !DILocation(line: 300, column: 13, scope: !5011)
!5028 = distinct !{!5028, !5008, !5029}
!5029 = !DILocation(line: 301, column: 4, scope: !4998)
!5030 = !DILocation(line: 302, column: 3, scope: !4998)
!5031 = !DILocation(line: 304, column: 8, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 303, column: 8)
!5033 = !DILocation(line: 304, column: 16, scope: !5032)
!5034 = !DILocation(line: 304, column: 24, scope: !5032)
!5035 = !DILocation(line: 304, column: 32, scope: !5032)
!5036 = !DILocation(line: 304, column: 22, scope: !5032)
!5037 = !DILocation(line: 304, column: 6, scope: !5032)
!5038 = !DILocation(line: 305, column: 9, scope: !5032)
!5039 = !DILocation(line: 305, column: 13, scope: !5032)
!5040 = !DILocation(line: 305, column: 7, scope: !5032)
!5041 = !DILocation(line: 306, column: 13, scope: !5032)
!5042 = !DILocation(line: 306, column: 21, scope: !5032)
!5043 = !DILocation(line: 306, column: 11, scope: !5032)
!5044 = !DILocation(line: 307, column: 13, scope: !5032)
!5045 = !DILocation(line: 308, column: 4, scope: !5032)
!5046 = !DILocation(line: 308, column: 12, scope: !5032)
!5047 = !DILocation(line: 309, column: 32, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5032, file: !3, line: 308, column: 16)
!5049 = !DILocation(line: 309, column: 40, scope: !5048)
!5050 = !DILocation(line: 309, column: 51, scope: !5048)
!5051 = !DILocation(line: 309, column: 61, scope: !5048)
!5052 = !DILocation(line: 309, column: 71, scope: !5048)
!5053 = !DILocation(line: 309, column: 85, scope: !5048)
!5054 = !DILocation(line: 309, column: 16, scope: !5048)
!5055 = !DILocation(line: 309, column: 14, scope: !5048)
!5056 = !DILocation(line: 310, column: 22, scope: !5048)
!5057 = !DILocation(line: 310, column: 26, scope: !5048)
!5058 = !DILocation(line: 310, column: 30, scope: !5048)
!5059 = !DILocation(line: 310, column: 5, scope: !5048)
!5060 = !DILocation(line: 311, column: 15, scope: !5048)
!5061 = !DILocation(line: 312, column: 7, scope: !5048)
!5062 = !DILocation(line: 313, column: 11, scope: !5048)
!5063 = !DILocation(line: 314, column: 13, scope: !5048)
!5064 = !DILocation(line: 315, column: 17, scope: !5048)
!5065 = distinct !{!5065, !5045, !5066}
!5066 = !DILocation(line: 316, column: 4, scope: !5032)
!5067 = !DILocation(line: 319, column: 8, scope: !4994)
!5068 = !DILocation(line: 319, column: 12, scope: !4994)
!5069 = !DILocation(line: 319, column: 6, scope: !4994)
!5070 = !DILocation(line: 320, column: 12, scope: !4994)
!5071 = !DILocation(line: 320, column: 20, scope: !4994)
!5072 = !DILocation(line: 320, column: 10, scope: !4994)
!5073 = !DILocation(line: 321, column: 11, scope: !4994)
!5074 = distinct !{!5074, !4990, !5075}
!5075 = !DILocation(line: 322, column: 2, scope: !4943)
!5076 = !DILocation(line: 324, column: 23, scope: !4943)
!5077 = !DILocation(line: 324, column: 2, scope: !4943)
!5078 = !DILocation(line: 324, column: 12, scope: !4943)
!5079 = !DILocation(line: 324, column: 21, scope: !4943)
!5080 = !DILocation(line: 325, column: 1, scope: !4943)
!5081 = distinct !DISubprogram(name: "free_editNurb", scope: !3, file: !3, line: 1391, type: !3331, scopeLine: 1392, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!5082 = !DILocalVariable(name: "obedit", arg: 1, scope: !5081, file: !3, line: 1391, type: !3242)
!5083 = !DILocation(line: 1391, column: 28, scope: !5081)
!5084 = !DILocalVariable(name: "cu", scope: !5081, file: !3, line: 1393, type: !2953)
!5085 = !DILocation(line: 1393, column: 9, scope: !5081)
!5086 = !DILocation(line: 1393, column: 14, scope: !5081)
!5087 = !DILocation(line: 1393, column: 22, scope: !5081)
!5088 = !DILocation(line: 1395, column: 26, scope: !5081)
!5089 = !DILocation(line: 1395, column: 2, scope: !5081)
!5090 = !DILocation(line: 1396, column: 1, scope: !5081)
!5091 = distinct !DISubprogram(name: "ED_curve_deselect_all", scope: !3, file: !3, line: 1398, type: !5092, scopeLine: 1399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!5092 = !DISubroutineType(types: !5093)
!5093 = !{null, !2962}
!5094 = !DILocalVariable(name: "editnurb", arg: 1, scope: !5091, file: !3, line: 1398, type: !2962)
!5095 = !DILocation(line: 1398, column: 38, scope: !5091)
!5096 = !DILocalVariable(name: "nu", scope: !5091, file: !3, line: 1400, type: !3163)
!5097 = !DILocation(line: 1400, column: 8, scope: !5091)
!5098 = !DILocalVariable(name: "a", scope: !5091, file: !3, line: 1401, type: !22)
!5099 = !DILocation(line: 1401, column: 6, scope: !5091)
!5100 = !DILocation(line: 1403, column: 12, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5091, file: !3, line: 1403, column: 2)
!5102 = !DILocation(line: 1403, column: 22, scope: !5101)
!5103 = !DILocation(line: 1403, column: 28, scope: !5101)
!5104 = !DILocation(line: 1403, column: 10, scope: !5101)
!5105 = !DILocation(line: 1403, column: 7, scope: !5101)
!5106 = !DILocation(line: 1403, column: 35, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 1403, column: 2)
!5108 = !DILocation(line: 1403, column: 2, scope: !5101)
!5109 = !DILocation(line: 1404, column: 7, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 1404, column: 7)
!5111 = distinct !DILexicalBlock(scope: !5107, file: !3, line: 1403, column: 54)
!5112 = !DILocation(line: 1404, column: 11, scope: !5110)
!5113 = !DILocation(line: 1404, column: 7, scope: !5111)
!5114 = !DILocalVariable(name: "bezt", scope: !5115, file: !3, line: 1405, type: !3104)
!5115 = distinct !DILexicalBlock(scope: !5110, file: !3, line: 1404, column: 17)
!5116 = !DILocation(line: 1405, column: 15, scope: !5115)
!5117 = !DILocation(line: 1406, column: 16, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5115, file: !3, line: 1406, column: 4)
!5119 = !DILocation(line: 1406, column: 20, scope: !5118)
!5120 = !DILocation(line: 1406, column: 14, scope: !5118)
!5121 = !DILocation(line: 1406, column: 28, scope: !5118)
!5122 = !DILocation(line: 1406, column: 9, scope: !5118)
!5123 = !DILocation(line: 1406, column: 33, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5118, file: !3, line: 1406, column: 4)
!5125 = !DILocation(line: 1406, column: 37, scope: !5124)
!5126 = !DILocation(line: 1406, column: 41, scope: !5124)
!5127 = !DILocation(line: 1406, column: 35, scope: !5124)
!5128 = !DILocation(line: 1406, column: 4, scope: !5118)
!5129 = !DILocation(line: 1407, column: 5, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5124, file: !3, line: 1406, column: 61)
!5131 = !DILocation(line: 1407, column: 11, scope: !5130)
!5132 = !DILocation(line: 1407, column: 14, scope: !5130)
!5133 = !DILocation(line: 1408, column: 5, scope: !5130)
!5134 = !DILocation(line: 1408, column: 11, scope: !5130)
!5135 = !DILocation(line: 1408, column: 14, scope: !5130)
!5136 = !DILocation(line: 1409, column: 5, scope: !5130)
!5137 = !DILocation(line: 1409, column: 11, scope: !5130)
!5138 = !DILocation(line: 1409, column: 14, scope: !5130)
!5139 = !DILocation(line: 1410, column: 4, scope: !5130)
!5140 = !DILocation(line: 1406, column: 49, scope: !5124)
!5141 = !DILocation(line: 1406, column: 57, scope: !5124)
!5142 = !DILocation(line: 1406, column: 4, scope: !5124)
!5143 = distinct !{!5143, !5128, !5144}
!5144 = !DILocation(line: 1410, column: 4, scope: !5118)
!5145 = !DILocation(line: 1411, column: 3, scope: !5115)
!5146 = !DILocation(line: 1412, column: 12, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5110, file: !3, line: 1412, column: 12)
!5148 = !DILocation(line: 1412, column: 16, scope: !5147)
!5149 = !DILocation(line: 1412, column: 12, scope: !5110)
!5150 = !DILocalVariable(name: "bp", scope: !5151, file: !3, line: 1413, type: !3093)
!5151 = distinct !DILexicalBlock(scope: !5147, file: !3, line: 1412, column: 20)
!5152 = !DILocation(line: 1413, column: 12, scope: !5151)
!5153 = !DILocation(line: 1414, column: 14, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5151, file: !3, line: 1414, column: 4)
!5155 = !DILocation(line: 1414, column: 18, scope: !5154)
!5156 = !DILocation(line: 1414, column: 12, scope: !5154)
!5157 = !DILocation(line: 1414, column: 24, scope: !5154)
!5158 = !DILocation(line: 1414, column: 9, scope: !5154)
!5159 = !DILocation(line: 1414, column: 29, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 1414, column: 4)
!5161 = !DILocation(line: 1414, column: 33, scope: !5160)
!5162 = !DILocation(line: 1414, column: 37, scope: !5160)
!5163 = !DILocation(line: 1414, column: 45, scope: !5160)
!5164 = !DILocation(line: 1414, column: 49, scope: !5160)
!5165 = !DILocation(line: 1414, column: 43, scope: !5160)
!5166 = !DILocation(line: 1414, column: 31, scope: !5160)
!5167 = !DILocation(line: 1414, column: 4, scope: !5154)
!5168 = !DILocation(line: 1415, column: 5, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5160, file: !3, line: 1414, column: 67)
!5170 = !DILocation(line: 1415, column: 9, scope: !5169)
!5171 = !DILocation(line: 1415, column: 12, scope: !5169)
!5172 = !DILocation(line: 1416, column: 4, scope: !5169)
!5173 = !DILocation(line: 1414, column: 57, scope: !5160)
!5174 = !DILocation(line: 1414, column: 63, scope: !5160)
!5175 = !DILocation(line: 1414, column: 4, scope: !5160)
!5176 = distinct !{!5176, !5167, !5177}
!5177 = !DILocation(line: 1416, column: 4, scope: !5154)
!5178 = !DILocation(line: 1417, column: 3, scope: !5151)
!5179 = !DILocation(line: 1418, column: 2, scope: !5111)
!5180 = !DILocation(line: 1403, column: 44, scope: !5107)
!5181 = !DILocation(line: 1403, column: 48, scope: !5107)
!5182 = !DILocation(line: 1403, column: 42, scope: !5107)
!5183 = !DILocation(line: 1403, column: 2, scope: !5107)
!5184 = distinct !{!5184, !5108, !5185}
!5185 = !DILocation(line: 1418, column: 2, scope: !5101)
!5186 = !DILocation(line: 1419, column: 1, scope: !5091)
!5187 = distinct !DISubprogram(name: "ED_curve_select_all", scope: !3, file: !3, line: 1421, type: !5092, scopeLine: 1422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!5188 = !DILocalVariable(name: "editnurb", arg: 1, scope: !5187, file: !3, line: 1421, type: !2962)
!5189 = !DILocation(line: 1421, column: 36, scope: !5187)
!5190 = !DILocalVariable(name: "nu", scope: !5187, file: !3, line: 1423, type: !3163)
!5191 = !DILocation(line: 1423, column: 8, scope: !5187)
!5192 = !DILocalVariable(name: "a", scope: !5187, file: !3, line: 1424, type: !22)
!5193 = !DILocation(line: 1424, column: 6, scope: !5187)
!5194 = !DILocation(line: 1425, column: 12, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 1425, column: 2)
!5196 = !DILocation(line: 1425, column: 22, scope: !5195)
!5197 = !DILocation(line: 1425, column: 28, scope: !5195)
!5198 = !DILocation(line: 1425, column: 10, scope: !5195)
!5199 = !DILocation(line: 1425, column: 7, scope: !5195)
!5200 = !DILocation(line: 1425, column: 35, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5195, file: !3, line: 1425, column: 2)
!5202 = !DILocation(line: 1425, column: 2, scope: !5195)
!5203 = !DILocation(line: 1426, column: 7, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5205, file: !3, line: 1426, column: 7)
!5205 = distinct !DILexicalBlock(scope: !5201, file: !3, line: 1425, column: 54)
!5206 = !DILocation(line: 1426, column: 11, scope: !5204)
!5207 = !DILocation(line: 1426, column: 7, scope: !5205)
!5208 = !DILocalVariable(name: "bezt", scope: !5209, file: !3, line: 1427, type: !3104)
!5209 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 1426, column: 17)
!5210 = !DILocation(line: 1427, column: 15, scope: !5209)
!5211 = !DILocation(line: 1428, column: 16, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 1428, column: 4)
!5213 = !DILocation(line: 1428, column: 20, scope: !5212)
!5214 = !DILocation(line: 1428, column: 14, scope: !5212)
!5215 = !DILocation(line: 1428, column: 28, scope: !5212)
!5216 = !DILocation(line: 1428, column: 9, scope: !5212)
!5217 = !DILocation(line: 1428, column: 33, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5212, file: !3, line: 1428, column: 4)
!5219 = !DILocation(line: 1428, column: 37, scope: !5218)
!5220 = !DILocation(line: 1428, column: 41, scope: !5218)
!5221 = !DILocation(line: 1428, column: 35, scope: !5218)
!5222 = !DILocation(line: 1428, column: 4, scope: !5212)
!5223 = !DILocation(line: 1429, column: 9, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 1429, column: 9)
!5225 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 1428, column: 61)
!5226 = !DILocation(line: 1429, column: 15, scope: !5224)
!5227 = !DILocation(line: 1429, column: 20, scope: !5224)
!5228 = !DILocation(line: 1429, column: 9, scope: !5225)
!5229 = !DILocation(line: 1430, column: 6, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5224, file: !3, line: 1429, column: 26)
!5231 = !DILocation(line: 1430, column: 12, scope: !5230)
!5232 = !DILocation(line: 1430, column: 15, scope: !5230)
!5233 = !DILocation(line: 1431, column: 6, scope: !5230)
!5234 = !DILocation(line: 1431, column: 12, scope: !5230)
!5235 = !DILocation(line: 1431, column: 15, scope: !5230)
!5236 = !DILocation(line: 1432, column: 6, scope: !5230)
!5237 = !DILocation(line: 1432, column: 12, scope: !5230)
!5238 = !DILocation(line: 1432, column: 15, scope: !5230)
!5239 = !DILocation(line: 1433, column: 5, scope: !5230)
!5240 = !DILocation(line: 1434, column: 4, scope: !5225)
!5241 = !DILocation(line: 1428, column: 49, scope: !5218)
!5242 = !DILocation(line: 1428, column: 57, scope: !5218)
!5243 = !DILocation(line: 1428, column: 4, scope: !5218)
!5244 = distinct !{!5244, !5222, !5245}
!5245 = !DILocation(line: 1434, column: 4, scope: !5212)
!5246 = !DILocation(line: 1435, column: 3, scope: !5209)
!5247 = !DILocation(line: 1436, column: 12, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 1436, column: 12)
!5249 = !DILocation(line: 1436, column: 16, scope: !5248)
!5250 = !DILocation(line: 1436, column: 12, scope: !5204)
!5251 = !DILocalVariable(name: "bp", scope: !5252, file: !3, line: 1437, type: !3093)
!5252 = distinct !DILexicalBlock(scope: !5248, file: !3, line: 1436, column: 20)
!5253 = !DILocation(line: 1437, column: 12, scope: !5252)
!5254 = !DILocation(line: 1438, column: 14, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5252, file: !3, line: 1438, column: 4)
!5256 = !DILocation(line: 1438, column: 18, scope: !5255)
!5257 = !DILocation(line: 1438, column: 12, scope: !5255)
!5258 = !DILocation(line: 1438, column: 24, scope: !5255)
!5259 = !DILocation(line: 1438, column: 9, scope: !5255)
!5260 = !DILocation(line: 1438, column: 29, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5255, file: !3, line: 1438, column: 4)
!5262 = !DILocation(line: 1438, column: 33, scope: !5261)
!5263 = !DILocation(line: 1438, column: 37, scope: !5261)
!5264 = !DILocation(line: 1438, column: 45, scope: !5261)
!5265 = !DILocation(line: 1438, column: 49, scope: !5261)
!5266 = !DILocation(line: 1438, column: 43, scope: !5261)
!5267 = !DILocation(line: 1438, column: 31, scope: !5261)
!5268 = !DILocation(line: 1438, column: 4, scope: !5255)
!5269 = !DILocation(line: 1439, column: 9, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5271, file: !3, line: 1439, column: 9)
!5271 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 1438, column: 67)
!5272 = !DILocation(line: 1439, column: 13, scope: !5270)
!5273 = !DILocation(line: 1439, column: 18, scope: !5270)
!5274 = !DILocation(line: 1439, column: 9, scope: !5271)
!5275 = !DILocation(line: 1440, column: 6, scope: !5270)
!5276 = !DILocation(line: 1440, column: 10, scope: !5270)
!5277 = !DILocation(line: 1440, column: 13, scope: !5270)
!5278 = !DILocation(line: 1441, column: 4, scope: !5271)
!5279 = !DILocation(line: 1438, column: 57, scope: !5261)
!5280 = !DILocation(line: 1438, column: 63, scope: !5261)
!5281 = !DILocation(line: 1438, column: 4, scope: !5261)
!5282 = distinct !{!5282, !5268, !5283}
!5283 = !DILocation(line: 1441, column: 4, scope: !5255)
!5284 = !DILocation(line: 1442, column: 3, scope: !5252)
!5285 = !DILocation(line: 1443, column: 2, scope: !5205)
!5286 = !DILocation(line: 1425, column: 44, scope: !5201)
!5287 = !DILocation(line: 1425, column: 48, scope: !5201)
!5288 = !DILocation(line: 1425, column: 42, scope: !5201)
!5289 = !DILocation(line: 1425, column: 2, scope: !5201)
!5290 = distinct !{!5290, !5202, !5291}
!5291 = !DILocation(line: 1443, column: 2, scope: !5195)
!5292 = !DILocation(line: 1444, column: 1, scope: !5187)
!5293 = distinct !DISubprogram(name: "ED_curve_select_swap", scope: !3, file: !3, line: 1446, type: !5294, scopeLine: 1447, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!5294 = !DISubroutineType(types: !5295)
!5295 = !{null, !2962, !1081}
!5296 = !DILocalVariable(name: "editnurb", arg: 1, scope: !5293, file: !3, line: 1446, type: !2962)
!5297 = !DILocation(line: 1446, column: 37, scope: !5293)
!5298 = !DILocalVariable(name: "hide_handles", arg: 2, scope: !5293, file: !3, line: 1446, type: !1081)
!5299 = !DILocation(line: 1446, column: 52, scope: !5293)
!5300 = !DILocalVariable(name: "nu", scope: !5293, file: !3, line: 1448, type: !3163)
!5301 = !DILocation(line: 1448, column: 8, scope: !5293)
!5302 = !DILocalVariable(name: "bp", scope: !5293, file: !3, line: 1449, type: !3093)
!5303 = !DILocation(line: 1449, column: 10, scope: !5293)
!5304 = !DILocalVariable(name: "bezt", scope: !5293, file: !3, line: 1450, type: !3104)
!5305 = !DILocation(line: 1450, column: 13, scope: !5293)
!5306 = !DILocalVariable(name: "a", scope: !5293, file: !3, line: 1451, type: !22)
!5307 = !DILocation(line: 1451, column: 6, scope: !5293)
!5308 = !DILocation(line: 1453, column: 12, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 1453, column: 2)
!5310 = !DILocation(line: 1453, column: 22, scope: !5309)
!5311 = !DILocation(line: 1453, column: 28, scope: !5309)
!5312 = !DILocation(line: 1453, column: 10, scope: !5309)
!5313 = !DILocation(line: 1453, column: 7, scope: !5309)
!5314 = !DILocation(line: 1453, column: 35, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5309, file: !3, line: 1453, column: 2)
!5316 = !DILocation(line: 1453, column: 2, scope: !5309)
!5317 = !DILocation(line: 1454, column: 7, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5319, file: !3, line: 1454, column: 7)
!5319 = distinct !DILexicalBlock(scope: !5315, file: !3, line: 1453, column: 54)
!5320 = !DILocation(line: 1454, column: 11, scope: !5318)
!5321 = !DILocation(line: 1454, column: 16, scope: !5318)
!5322 = !DILocation(line: 1454, column: 7, scope: !5319)
!5323 = !DILocation(line: 1455, column: 11, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5318, file: !3, line: 1454, column: 30)
!5325 = !DILocation(line: 1455, column: 15, scope: !5324)
!5326 = !DILocation(line: 1455, column: 9, scope: !5324)
!5327 = !DILocation(line: 1456, column: 8, scope: !5324)
!5328 = !DILocation(line: 1456, column: 12, scope: !5324)
!5329 = !DILocation(line: 1456, column: 6, scope: !5324)
!5330 = !DILocation(line: 1457, column: 4, scope: !5324)
!5331 = !DILocation(line: 1457, column: 12, scope: !5324)
!5332 = !DILocation(line: 1458, column: 9, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5334, file: !3, line: 1458, column: 9)
!5334 = distinct !DILexicalBlock(scope: !5324, file: !3, line: 1457, column: 16)
!5335 = !DILocation(line: 1458, column: 15, scope: !5333)
!5336 = !DILocation(line: 1458, column: 20, scope: !5333)
!5337 = !DILocation(line: 1458, column: 9, scope: !5334)
!5338 = !DILocation(line: 1459, column: 6, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5333, file: !3, line: 1458, column: 26)
!5340 = !DILocation(line: 1459, column: 12, scope: !5339)
!5341 = !DILocation(line: 1459, column: 15, scope: !5339)
!5342 = !DILocation(line: 1460, column: 11, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 1460, column: 10)
!5344 = !DILocation(line: 1460, column: 10, scope: !5339)
!5345 = !DILocation(line: 1461, column: 7, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5343, file: !3, line: 1460, column: 25)
!5347 = !DILocation(line: 1461, column: 13, scope: !5346)
!5348 = !DILocation(line: 1461, column: 16, scope: !5346)
!5349 = !DILocation(line: 1462, column: 7, scope: !5346)
!5350 = !DILocation(line: 1462, column: 13, scope: !5346)
!5351 = !DILocation(line: 1462, column: 16, scope: !5346)
!5352 = !DILocation(line: 1463, column: 6, scope: !5346)
!5353 = !DILocation(line: 1464, column: 5, scope: !5339)
!5354 = !DILocation(line: 1465, column: 9, scope: !5334)
!5355 = distinct !{!5355, !5330, !5356}
!5356 = !DILocation(line: 1466, column: 4, scope: !5324)
!5357 = !DILocation(line: 1467, column: 3, scope: !5324)
!5358 = !DILocation(line: 1469, column: 9, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5318, file: !3, line: 1468, column: 8)
!5360 = !DILocation(line: 1469, column: 13, scope: !5359)
!5361 = !DILocation(line: 1469, column: 7, scope: !5359)
!5362 = !DILocation(line: 1470, column: 8, scope: !5359)
!5363 = !DILocation(line: 1470, column: 12, scope: !5359)
!5364 = !DILocation(line: 1470, column: 20, scope: !5359)
!5365 = !DILocation(line: 1470, column: 24, scope: !5359)
!5366 = !DILocation(line: 1470, column: 18, scope: !5359)
!5367 = !DILocation(line: 1470, column: 6, scope: !5359)
!5368 = !DILocation(line: 1471, column: 4, scope: !5359)
!5369 = !DILocation(line: 1471, column: 12, scope: !5359)
!5370 = !DILocation(line: 1472, column: 27, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5359, file: !3, line: 1471, column: 16)
!5372 = !DILocation(line: 1472, column: 5, scope: !5371)
!5373 = !DILocation(line: 1473, column: 7, scope: !5371)
!5374 = distinct !{!5374, !5368, !5375}
!5375 = !DILocation(line: 1474, column: 4, scope: !5359)
!5376 = !DILocation(line: 1476, column: 2, scope: !5319)
!5377 = !DILocation(line: 1453, column: 44, scope: !5315)
!5378 = !DILocation(line: 1453, column: 48, scope: !5315)
!5379 = !DILocation(line: 1453, column: 42, scope: !5315)
!5380 = !DILocation(line: 1453, column: 2, scope: !5315)
!5381 = distinct !{!5381, !5316, !5382}
!5382 = !DILocation(line: 1476, column: 2, scope: !5309)
!5383 = !DILocation(line: 1477, column: 1, scope: !5293)
!5384 = distinct !DISubprogram(name: "swap_selection_bpoint", scope: !3, file: !3, line: 176, type: !5385, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!5385 = !DISubroutineType(types: !5386)
!5386 = !{!1081, !3093}
!5387 = !DILocalVariable(name: "bp", arg: 1, scope: !5384, file: !3, line: 176, type: !3093)
!5388 = !DILocation(line: 176, column: 43, scope: !5384)
!5389 = !DILocation(line: 178, column: 6, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 178, column: 6)
!5391 = !DILocation(line: 178, column: 10, scope: !5390)
!5392 = !DILocation(line: 178, column: 13, scope: !5390)
!5393 = !DILocation(line: 178, column: 6, scope: !5384)
!5394 = !DILocation(line: 179, column: 24, scope: !5390)
!5395 = !DILocation(line: 179, column: 10, scope: !5390)
!5396 = !DILocation(line: 179, column: 3, scope: !5390)
!5397 = !DILocation(line: 181, column: 24, scope: !5390)
!5398 = !DILocation(line: 181, column: 10, scope: !5390)
!5399 = !DILocation(line: 181, column: 3, scope: !5390)
!5400 = !DILocation(line: 182, column: 1, scope: !5384)
!5401 = distinct !DISubprogram(name: "CURVE_OT_separate", scope: !3, file: !3, line: 1544, type: !4, scopeLine: 1545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!5402 = !DILocalVariable(name: "ot", arg: 1, scope: !5401, file: !3, line: 1544, type: !6)
!5403 = !DILocation(line: 1544, column: 40, scope: !5401)
!5404 = !DILocation(line: 1547, column: 2, scope: !5401)
!5405 = !DILocation(line: 1547, column: 6, scope: !5401)
!5406 = !DILocation(line: 1547, column: 11, scope: !5401)
!5407 = !DILocation(line: 1548, column: 2, scope: !5401)
!5408 = !DILocation(line: 1548, column: 6, scope: !5401)
!5409 = !DILocation(line: 1548, column: 13, scope: !5401)
!5410 = !DILocation(line: 1549, column: 2, scope: !5401)
!5411 = !DILocation(line: 1549, column: 6, scope: !5401)
!5412 = !DILocation(line: 1549, column: 18, scope: !5401)
!5413 = !DILocation(line: 1552, column: 2, scope: !5401)
!5414 = !DILocation(line: 1552, column: 6, scope: !5401)
!5415 = !DILocation(line: 1552, column: 11, scope: !5401)
!5416 = !DILocation(line: 1553, column: 2, scope: !5401)
!5417 = !DILocation(line: 1553, column: 6, scope: !5401)
!5418 = !DILocation(line: 1553, column: 11, scope: !5401)
!5419 = !DILocation(line: 1556, column: 2, scope: !5401)
!5420 = !DILocation(line: 1556, column: 6, scope: !5401)
!5421 = !DILocation(line: 1556, column: 11, scope: !5401)
!5422 = !DILocation(line: 1557, column: 1, scope: !5401)
!5423 = distinct !DISubprogram(name: "separate_exec", scope: !3, file: !3, line: 1481, type: !3224, scopeLine: 1482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!5424 = !DILocalVariable(name: "C", arg: 1, scope: !5423, file: !3, line: 1481, type: !3226)
!5425 = !DILocation(line: 1481, column: 36, scope: !5423)
!5426 = !DILocalVariable(name: "op", arg: 2, scope: !5423, file: !3, line: 1481, type: !3228)
!5427 = !DILocation(line: 1481, column: 51, scope: !5423)
!5428 = !DILocalVariable(name: "bmain", scope: !5423, file: !3, line: 1483, type: !5429)
!5429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5430, size: 64)
!5430 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !5431, line: 104, baseType: !5432)
!5431 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !5431, line: 53, size: 15232, elements: !5433)
!5433 = !{!5434, !5436, !5437, !5438, !5439, !5440, !5441, !5442, !5443, !5447, !5448, !5449, !5450, !5451, !5452, !5453, !5454, !5455, !5456, !5457, !5458, !5459, !5460, !5461, !5462, !5463, !5464, !5465, !5466, !5467, !5468, !5469, !5470, !5471, !5472, !5473, !5474, !5475, !5476, !5477, !5478, !5479, !5480, !5481, !5482, !5483, !5484, !5490}
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5432, file: !5431, line: 54, baseType: !5435, size: 64)
!5435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5432, size: 64)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5432, file: !5431, line: 54, baseType: !5435, size: 64, offset: 64)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5432, file: !5431, line: 55, baseType: !130, size: 8192, offset: 128)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !5432, file: !5431, line: 56, baseType: !48, size: 16, offset: 8320)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !5432, file: !5431, line: 56, baseType: !48, size: 16, offset: 8336)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !5432, file: !5431, line: 57, baseType: !48, size: 16, offset: 8352)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !5432, file: !5431, line: 57, baseType: !48, size: 16, offset: 8368)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !5432, file: !5431, line: 58, baseType: !475, size: 64, offset: 8384)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !5432, file: !5431, line: 59, baseType: !5444, size: 128, offset: 8448)
!5444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 128, elements: !5445)
!5445 = !{!5446}
!5446 = !DISubrange(count: 16)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !5432, file: !5431, line: 60, baseType: !48, size: 16, offset: 8576)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !5432, file: !5431, line: 62, baseType: !120, size: 64, offset: 8640)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !5432, file: !5431, line: 63, baseType: !58, size: 128, offset: 8704)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !5432, file: !5431, line: 64, baseType: !58, size: 128, offset: 8832)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !5432, file: !5431, line: 65, baseType: !58, size: 128, offset: 8960)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !5432, file: !5431, line: 66, baseType: !58, size: 128, offset: 9088)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !5432, file: !5431, line: 67, baseType: !58, size: 128, offset: 9216)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !5432, file: !5431, line: 68, baseType: !58, size: 128, offset: 9344)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !5432, file: !5431, line: 69, baseType: !58, size: 128, offset: 9472)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !5432, file: !5431, line: 70, baseType: !58, size: 128, offset: 9600)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !5432, file: !5431, line: 71, baseType: !58, size: 128, offset: 9728)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !5432, file: !5431, line: 72, baseType: !58, size: 128, offset: 9856)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !5432, file: !5431, line: 73, baseType: !58, size: 128, offset: 9984)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !5432, file: !5431, line: 74, baseType: !58, size: 128, offset: 10112)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !5432, file: !5431, line: 75, baseType: !58, size: 128, offset: 10240)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5432, file: !5431, line: 76, baseType: !58, size: 128, offset: 10368)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !5432, file: !5431, line: 77, baseType: !58, size: 128, offset: 10496)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !5432, file: !5431, line: 78, baseType: !58, size: 128, offset: 10624)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !5432, file: !5431, line: 79, baseType: !58, size: 128, offset: 10752)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !5432, file: !5431, line: 80, baseType: !58, size: 128, offset: 10880)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !5432, file: !5431, line: 81, baseType: !58, size: 128, offset: 11008)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !5432, file: !5431, line: 82, baseType: !58, size: 128, offset: 11136)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !5432, file: !5431, line: 83, baseType: !58, size: 128, offset: 11264)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !5432, file: !5431, line: 84, baseType: !58, size: 128, offset: 11392)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !5432, file: !5431, line: 85, baseType: !58, size: 128, offset: 11520)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !5432, file: !5431, line: 86, baseType: !58, size: 128, offset: 11648)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !5432, file: !5431, line: 87, baseType: !58, size: 128, offset: 11776)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !5432, file: !5431, line: 88, baseType: !58, size: 128, offset: 11904)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !5432, file: !5431, line: 89, baseType: !58, size: 128, offset: 12032)
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !5432, file: !5431, line: 90, baseType: !58, size: 128, offset: 12160)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !5432, file: !5431, line: 91, baseType: !58, size: 128, offset: 12288)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !5432, file: !5431, line: 92, baseType: !58, size: 128, offset: 12416)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !5432, file: !5431, line: 93, baseType: !58, size: 128, offset: 12544)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !5432, file: !5431, line: 94, baseType: !58, size: 128, offset: 12672)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !5432, file: !5431, line: 95, baseType: !58, size: 128, offset: 12800)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !5432, file: !5431, line: 96, baseType: !58, size: 128, offset: 12928)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !5432, file: !5431, line: 98, baseType: !687, size: 2048, offset: 13056)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !5432, file: !5431, line: 101, baseType: !5485, size: 64, offset: 15104)
!5485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5486, size: 64)
!5486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !5487, line: 58, size: 32, elements: !5488)
!5487 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5488 = !{!5489}
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5486, file: !5487, line: 59, baseType: !22, size: 32)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5432, file: !5431, line: 103, baseType: !5491, size: 64, offset: 15168)
!5491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5492, size: 64)
!5492 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !5431, line: 51, flags: DIFlagFwdDecl)
!5493 = !DILocation(line: 1483, column: 8, scope: !5423)
!5494 = !DILocation(line: 1483, column: 30, scope: !5423)
!5495 = !DILocation(line: 1483, column: 16, scope: !5423)
!5496 = !DILocalVariable(name: "scene", scope: !5423, file: !3, line: 1484, type: !5497)
!5497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5498, size: 64)
!5498 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !154, line: 1299, baseType: !153)
!5499 = !DILocation(line: 1484, column: 9, scope: !5423)
!5500 = !DILocation(line: 1484, column: 32, scope: !5423)
!5501 = !DILocation(line: 1484, column: 17, scope: !5423)
!5502 = !DILocalVariable(name: "oldob", scope: !5423, file: !3, line: 1485, type: !3242)
!5503 = !DILocation(line: 1485, column: 10, scope: !5423)
!5504 = !DILocalVariable(name: "newob", scope: !5423, file: !3, line: 1485, type: !3242)
!5505 = !DILocation(line: 1485, column: 18, scope: !5423)
!5506 = !DILocalVariable(name: "oldbase", scope: !5423, file: !3, line: 1486, type: !5507)
!5507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5508, size: 64)
!5508 = !DIDerivedType(tag: DW_TAG_typedef, name: "Base", file: !154, line: 75, baseType: !536)
!5509 = !DILocation(line: 1486, column: 8, scope: !5423)
!5510 = !DILocalVariable(name: "newbase", scope: !5423, file: !3, line: 1486, type: !5507)
!5511 = !DILocation(line: 1486, column: 18, scope: !5423)
!5512 = !DILocalVariable(name: "oldcu", scope: !5423, file: !3, line: 1487, type: !2953)
!5513 = !DILocation(line: 1487, column: 9, scope: !5423)
!5514 = !DILocalVariable(name: "newcu", scope: !5423, file: !3, line: 1487, type: !2953)
!5515 = !DILocation(line: 1487, column: 17, scope: !5423)
!5516 = !DILocalVariable(name: "newedit", scope: !5423, file: !3, line: 1488, type: !2962)
!5517 = !DILocation(line: 1488, column: 12, scope: !5423)
!5518 = !DILocalVariable(name: "newnurb", scope: !5423, file: !3, line: 1489, type: !58)
!5519 = !DILocation(line: 1489, column: 11, scope: !5423)
!5520 = !DILocation(line: 1491, column: 33, scope: !5423)
!5521 = !DILocation(line: 1491, column: 12, scope: !5423)
!5522 = !DILocation(line: 1491, column: 10, scope: !5423)
!5523 = !DILocation(line: 1492, column: 10, scope: !5423)
!5524 = !DILocation(line: 1492, column: 19, scope: !5423)
!5525 = !DILocation(line: 1492, column: 8, scope: !5423)
!5526 = !DILocation(line: 1493, column: 10, scope: !5423)
!5527 = !DILocation(line: 1493, column: 17, scope: !5423)
!5528 = !DILocation(line: 1493, column: 8, scope: !5423)
!5529 = !DILocation(line: 1495, column: 6, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 1495, column: 6)
!5531 = !DILocation(line: 1495, column: 13, scope: !5530)
!5532 = !DILocation(line: 1495, column: 6, scope: !5423)
!5533 = !DILocation(line: 1496, column: 14, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5530, file: !3, line: 1495, column: 18)
!5535 = !DILocation(line: 1496, column: 18, scope: !5534)
!5536 = !DILocation(line: 1496, column: 3, scope: !5534)
!5537 = !DILocation(line: 1497, column: 3, scope: !5534)
!5538 = !DILocation(line: 1500, column: 2, scope: !5423)
!5539 = !DILocation(line: 1503, column: 22, scope: !5423)
!5540 = !DILocation(line: 1503, column: 2, scope: !5423)
!5541 = !DILocation(line: 1505, column: 6, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 1505, column: 6)
!5543 = !DILocation(line: 1505, column: 6, scope: !5423)
!5544 = !DILocation(line: 1506, column: 3, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5542, file: !3, line: 1505, column: 39)
!5546 = !DILocation(line: 1507, column: 14, scope: !5545)
!5547 = !DILocation(line: 1507, column: 18, scope: !5545)
!5548 = !DILocation(line: 1507, column: 3, scope: !5545)
!5549 = !DILocation(line: 1508, column: 3, scope: !5545)
!5550 = !DILocation(line: 1512, column: 36, scope: !5423)
!5551 = !DILocation(line: 1512, column: 43, scope: !5423)
!5552 = !DILocation(line: 1512, column: 50, scope: !5423)
!5553 = !DILocation(line: 1512, column: 12, scope: !5423)
!5554 = !DILocation(line: 1512, column: 10, scope: !5423)
!5555 = !DILocation(line: 1513, column: 27, scope: !5423)
!5556 = !DILocation(line: 1513, column: 2, scope: !5423)
!5557 = !DILocation(line: 1515, column: 10, scope: !5423)
!5558 = !DILocation(line: 1515, column: 19, scope: !5423)
!5559 = !DILocation(line: 1515, column: 8, scope: !5423)
!5560 = !DILocation(line: 1516, column: 39, scope: !5423)
!5561 = !DILocation(line: 1516, column: 24, scope: !5423)
!5562 = !DILocation(line: 1516, column: 10, scope: !5423)
!5563 = !DILocation(line: 1516, column: 17, scope: !5423)
!5564 = !DILocation(line: 1516, column: 22, scope: !5423)
!5565 = !DILocation(line: 1516, column: 8, scope: !5423)
!5566 = !DILocation(line: 1517, column: 2, scope: !5423)
!5567 = !DILocation(line: 1517, column: 9, scope: !5423)
!5568 = !DILocation(line: 1517, column: 18, scope: !5423)
!5569 = !DILocation(line: 1518, column: 2, scope: !5423)
!5570 = !DILocation(line: 1518, column: 9, scope: !5423)
!5571 = !DILocation(line: 1518, column: 12, scope: !5423)
!5572 = !DILocation(line: 1518, column: 14, scope: !5423)
!5573 = !DILocation(line: 1521, column: 16, scope: !5423)
!5574 = !DILocation(line: 1521, column: 2, scope: !5423)
!5575 = !DILocation(line: 1522, column: 12, scope: !5423)
!5576 = !DILocation(line: 1522, column: 19, scope: !5423)
!5577 = !DILocation(line: 1522, column: 10, scope: !5423)
!5578 = !DILocation(line: 1523, column: 21, scope: !5423)
!5579 = !DILocation(line: 1523, column: 30, scope: !5423)
!5580 = !DILocation(line: 1523, column: 2, scope: !5423)
!5581 = !DILocation(line: 1524, column: 35, scope: !5423)
!5582 = !DILocation(line: 1524, column: 2, scope: !5423)
!5583 = !DILocation(line: 1525, column: 2, scope: !5423)
!5584 = !DILocation(line: 1525, column: 11, scope: !5423)
!5585 = !DILocation(line: 1525, column: 20, scope: !5423)
!5586 = !DILocation(line: 1526, column: 22, scope: !5423)
!5587 = !DILocation(line: 1526, column: 31, scope: !5423)
!5588 = !DILocation(line: 1526, column: 2, scope: !5423)
!5589 = !DILocation(line: 1529, column: 16, scope: !5423)
!5590 = !DILocation(line: 1529, column: 2, scope: !5423)
!5591 = !DILocation(line: 1530, column: 16, scope: !5423)
!5592 = !DILocation(line: 1530, column: 2, scope: !5423)
!5593 = !DILocation(line: 1531, column: 24, scope: !5423)
!5594 = !DILocation(line: 1531, column: 2, scope: !5423)
!5595 = !DILocation(line: 1533, column: 21, scope: !5423)
!5596 = !DILocation(line: 1533, column: 28, scope: !5423)
!5597 = !DILocation(line: 1533, column: 2, scope: !5423)
!5598 = !DILocation(line: 1534, column: 21, scope: !5423)
!5599 = !DILocation(line: 1534, column: 28, scope: !5423)
!5600 = !DILocation(line: 1534, column: 2, scope: !5423)
!5601 = !DILocation(line: 1536, column: 24, scope: !5423)
!5602 = !DILocation(line: 1536, column: 46, scope: !5423)
!5603 = !DILocation(line: 1536, column: 53, scope: !5423)
!5604 = !DILocation(line: 1536, column: 2, scope: !5423)
!5605 = !DILocation(line: 1537, column: 24, scope: !5423)
!5606 = !DILocation(line: 1537, column: 48, scope: !5423)
!5607 = !DILocation(line: 1537, column: 2, scope: !5423)
!5608 = !DILocation(line: 1539, column: 2, scope: !5423)
!5609 = !DILocation(line: 1541, column: 2, scope: !5423)
!5610 = !DILocation(line: 1542, column: 1, scope: !5423)
!5611 = distinct !DISubprogram(name: "CURVE_OT_split", scope: !3, file: !3, line: 1587, type: !4, scopeLine: 1588, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!5612 = !DILocalVariable(name: "ot", arg: 1, scope: !5611, file: !3, line: 1587, type: !6)
!5613 = !DILocation(line: 1587, column: 37, scope: !5611)
!5614 = !DILocation(line: 1590, column: 2, scope: !5611)
!5615 = !DILocation(line: 1590, column: 6, scope: !5611)
!5616 = !DILocation(line: 1590, column: 11, scope: !5611)
!5617 = !DILocation(line: 1591, column: 2, scope: !5611)
!5618 = !DILocation(line: 1591, column: 6, scope: !5611)
!5619 = !DILocation(line: 1591, column: 13, scope: !5611)
!5620 = !DILocation(line: 1592, column: 2, scope: !5611)
!5621 = !DILocation(line: 1592, column: 6, scope: !5611)
!5622 = !DILocation(line: 1592, column: 18, scope: !5611)
!5623 = !DILocation(line: 1595, column: 2, scope: !5611)
!5624 = !DILocation(line: 1595, column: 6, scope: !5611)
!5625 = !DILocation(line: 1595, column: 11, scope: !5611)
!5626 = !DILocation(line: 1596, column: 2, scope: !5611)
!5627 = !DILocation(line: 1596, column: 6, scope: !5611)
!5628 = !DILocation(line: 1596, column: 11, scope: !5611)
!5629 = !DILocation(line: 1599, column: 2, scope: !5611)
!5630 = !DILocation(line: 1599, column: 6, scope: !5611)
!5631 = !DILocation(line: 1599, column: 11, scope: !5611)
!5632 = !DILocation(line: 1600, column: 1, scope: !5611)
!5633 = distinct !DISubprogram(name: "curve_split_exec", scope: !3, file: !3, line: 1561, type: !3224, scopeLine: 1562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!5634 = !DILocalVariable(name: "C", arg: 1, scope: !5633, file: !3, line: 1561, type: !3226)
!5635 = !DILocation(line: 1561, column: 39, scope: !5633)
!5636 = !DILocalVariable(name: "op", arg: 2, scope: !5633, file: !3, line: 1561, type: !3228)
!5637 = !DILocation(line: 1561, column: 54, scope: !5633)
!5638 = !DILocalVariable(name: "obedit", scope: !5633, file: !3, line: 1563, type: !3242)
!5639 = !DILocation(line: 1563, column: 10, scope: !5633)
!5640 = !DILocation(line: 1563, column: 40, scope: !5633)
!5641 = !DILocation(line: 1563, column: 19, scope: !5633)
!5642 = !DILocalVariable(name: "editnurb", scope: !5633, file: !3, line: 1564, type: !486)
!5643 = !DILocation(line: 1564, column: 12, scope: !5633)
!5644 = !DILocation(line: 1564, column: 44, scope: !5633)
!5645 = !DILocation(line: 1564, column: 23, scope: !5633)
!5646 = !DILocalVariable(name: "newnurb", scope: !5633, file: !3, line: 1565, type: !58)
!5647 = !DILocation(line: 1565, column: 11, scope: !5633)
!5648 = !DILocation(line: 1567, column: 22, scope: !5633)
!5649 = !DILocation(line: 1567, column: 2, scope: !5633)
!5650 = !DILocation(line: 1569, column: 6, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 1569, column: 6)
!5652 = !DILocation(line: 1569, column: 38, scope: !5651)
!5653 = !DILocation(line: 1569, column: 6, scope: !5633)
!5654 = !DILocation(line: 1570, column: 25, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 1569, column: 48)
!5656 = !DILocation(line: 1570, column: 3, scope: !5655)
!5657 = !DILocation(line: 1571, column: 22, scope: !5655)
!5658 = !DILocation(line: 1571, column: 3, scope: !5655)
!5659 = !DILocation(line: 1573, column: 32, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 1573, column: 7)
!5661 = !DILocation(line: 1573, column: 40, scope: !5660)
!5662 = !DILocation(line: 1573, column: 7, scope: !5660)
!5663 = !DILocation(line: 1573, column: 7, scope: !5655)
!5664 = !DILocation(line: 1574, column: 26, scope: !5660)
!5665 = !DILocation(line: 1574, column: 50, scope: !5660)
!5666 = !DILocation(line: 1574, column: 4, scope: !5660)
!5667 = !DILocation(line: 1576, column: 25, scope: !5655)
!5668 = !DILocation(line: 1576, column: 47, scope: !5655)
!5669 = !DILocation(line: 1576, column: 55, scope: !5655)
!5670 = !DILocation(line: 1576, column: 3, scope: !5655)
!5671 = !DILocation(line: 1577, column: 21, scope: !5655)
!5672 = !DILocation(line: 1577, column: 29, scope: !5655)
!5673 = !DILocation(line: 1577, column: 3, scope: !5655)
!5674 = !DILocation(line: 1578, column: 2, scope: !5655)
!5675 = !DILocation(line: 1580, column: 14, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 1579, column: 7)
!5677 = !DILocation(line: 1580, column: 18, scope: !5676)
!5678 = !DILocation(line: 1580, column: 3, scope: !5676)
!5679 = !DILocation(line: 1581, column: 3, scope: !5676)
!5680 = !DILocation(line: 1584, column: 2, scope: !5633)
!5681 = !DILocation(line: 1585, column: 1, scope: !5633)
!5682 = distinct !DISubprogram(name: "ed_editnurb_translate_flag", scope: !3, file: !3, line: 1724, type: !5683, scopeLine: 1725, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!5683 = !DISubroutineType(types: !5684)
!5684 = !{null, !486, !48, !4638}
!5685 = !DILocalVariable(name: "editnurb", arg: 1, scope: !5682, file: !3, line: 1724, type: !486)
!5686 = !DILocation(line: 1724, column: 43, scope: !5682)
!5687 = !DILocalVariable(name: "flag", arg: 2, scope: !5682, file: !3, line: 1724, type: !48)
!5688 = !DILocation(line: 1724, column: 59, scope: !5682)
!5689 = !DILocalVariable(name: "vec", arg: 3, scope: !5682, file: !3, line: 1724, type: !4638)
!5690 = !DILocation(line: 1724, column: 77, scope: !5682)
!5691 = !DILocalVariable(name: "nu", scope: !5682, file: !3, line: 1727, type: !3163)
!5692 = !DILocation(line: 1727, column: 8, scope: !5682)
!5693 = !DILocalVariable(name: "bezt", scope: !5682, file: !3, line: 1728, type: !3104)
!5694 = !DILocation(line: 1728, column: 13, scope: !5682)
!5695 = !DILocalVariable(name: "bp", scope: !5682, file: !3, line: 1729, type: !3093)
!5696 = !DILocation(line: 1729, column: 10, scope: !5682)
!5697 = !DILocalVariable(name: "a", scope: !5682, file: !3, line: 1730, type: !22)
!5698 = !DILocation(line: 1730, column: 6, scope: !5682)
!5699 = !DILocation(line: 1732, column: 12, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5682, file: !3, line: 1732, column: 2)
!5701 = !DILocation(line: 1732, column: 22, scope: !5700)
!5702 = !DILocation(line: 1732, column: 10, scope: !5700)
!5703 = !DILocation(line: 1732, column: 7, scope: !5700)
!5704 = !DILocation(line: 1732, column: 29, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5700, file: !3, line: 1732, column: 2)
!5706 = !DILocation(line: 1732, column: 2, scope: !5700)
!5707 = !DILocation(line: 1733, column: 7, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 1733, column: 7)
!5709 = distinct !DILexicalBlock(scope: !5705, file: !3, line: 1732, column: 48)
!5710 = !DILocation(line: 1733, column: 11, scope: !5708)
!5711 = !DILocation(line: 1733, column: 16, scope: !5708)
!5712 = !DILocation(line: 1733, column: 7, scope: !5709)
!5713 = !DILocation(line: 1734, column: 8, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5708, file: !3, line: 1733, column: 30)
!5715 = !DILocation(line: 1734, column: 12, scope: !5714)
!5716 = !DILocation(line: 1734, column: 6, scope: !5714)
!5717 = !DILocation(line: 1735, column: 11, scope: !5714)
!5718 = !DILocation(line: 1735, column: 15, scope: !5714)
!5719 = !DILocation(line: 1735, column: 9, scope: !5714)
!5720 = !DILocation(line: 1736, column: 4, scope: !5714)
!5721 = !DILocation(line: 1736, column: 12, scope: !5714)
!5722 = !DILocation(line: 1737, column: 9, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5724, file: !3, line: 1737, column: 9)
!5724 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 1736, column: 16)
!5725 = !DILocation(line: 1737, column: 15, scope: !5723)
!5726 = !DILocation(line: 1737, column: 20, scope: !5723)
!5727 = !DILocation(line: 1737, column: 18, scope: !5723)
!5728 = !DILocation(line: 1737, column: 9, scope: !5724)
!5729 = !DILocation(line: 1737, column: 36, scope: !5723)
!5730 = !DILocation(line: 1737, column: 42, scope: !5723)
!5731 = !DILocation(line: 1737, column: 50, scope: !5723)
!5732 = !DILocation(line: 1737, column: 26, scope: !5723)
!5733 = !DILocation(line: 1738, column: 9, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5724, file: !3, line: 1738, column: 9)
!5735 = !DILocation(line: 1738, column: 15, scope: !5734)
!5736 = !DILocation(line: 1738, column: 20, scope: !5734)
!5737 = !DILocation(line: 1738, column: 18, scope: !5734)
!5738 = !DILocation(line: 1738, column: 9, scope: !5724)
!5739 = !DILocation(line: 1738, column: 36, scope: !5734)
!5740 = !DILocation(line: 1738, column: 42, scope: !5734)
!5741 = !DILocation(line: 1738, column: 50, scope: !5734)
!5742 = !DILocation(line: 1738, column: 26, scope: !5734)
!5743 = !DILocation(line: 1739, column: 9, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5724, file: !3, line: 1739, column: 9)
!5745 = !DILocation(line: 1739, column: 15, scope: !5744)
!5746 = !DILocation(line: 1739, column: 20, scope: !5744)
!5747 = !DILocation(line: 1739, column: 18, scope: !5744)
!5748 = !DILocation(line: 1739, column: 9, scope: !5724)
!5749 = !DILocation(line: 1739, column: 36, scope: !5744)
!5750 = !DILocation(line: 1739, column: 42, scope: !5744)
!5751 = !DILocation(line: 1739, column: 50, scope: !5744)
!5752 = !DILocation(line: 1739, column: 26, scope: !5744)
!5753 = !DILocation(line: 1740, column: 9, scope: !5724)
!5754 = distinct !{!5754, !5720, !5755}
!5755 = !DILocation(line: 1741, column: 4, scope: !5714)
!5756 = !DILocation(line: 1742, column: 3, scope: !5714)
!5757 = !DILocation(line: 1744, column: 8, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5708, file: !3, line: 1743, column: 8)
!5759 = !DILocation(line: 1744, column: 12, scope: !5758)
!5760 = !DILocation(line: 1744, column: 20, scope: !5758)
!5761 = !DILocation(line: 1744, column: 24, scope: !5758)
!5762 = !DILocation(line: 1744, column: 18, scope: !5758)
!5763 = !DILocation(line: 1744, column: 6, scope: !5758)
!5764 = !DILocation(line: 1745, column: 9, scope: !5758)
!5765 = !DILocation(line: 1745, column: 13, scope: !5758)
!5766 = !DILocation(line: 1745, column: 7, scope: !5758)
!5767 = !DILocation(line: 1746, column: 4, scope: !5758)
!5768 = !DILocation(line: 1746, column: 12, scope: !5758)
!5769 = !DILocation(line: 1747, column: 9, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5771, file: !3, line: 1747, column: 9)
!5771 = distinct !DILexicalBlock(scope: !5758, file: !3, line: 1746, column: 16)
!5772 = !DILocation(line: 1747, column: 13, scope: !5770)
!5773 = !DILocation(line: 1747, column: 18, scope: !5770)
!5774 = !DILocation(line: 1747, column: 16, scope: !5770)
!5775 = !DILocation(line: 1747, column: 9, scope: !5771)
!5776 = !DILocation(line: 1747, column: 34, scope: !5770)
!5777 = !DILocation(line: 1747, column: 38, scope: !5770)
!5778 = !DILocation(line: 1747, column: 43, scope: !5770)
!5779 = !DILocation(line: 1747, column: 24, scope: !5770)
!5780 = !DILocation(line: 1748, column: 7, scope: !5771)
!5781 = distinct !{!5781, !5767, !5782}
!5782 = !DILocation(line: 1749, column: 4, scope: !5758)
!5783 = !DILocation(line: 1752, column: 19, scope: !5709)
!5784 = !DILocation(line: 1752, column: 3, scope: !5709)
!5785 = !DILocation(line: 1753, column: 2, scope: !5709)
!5786 = !DILocation(line: 1732, column: 38, scope: !5705)
!5787 = !DILocation(line: 1732, column: 42, scope: !5705)
!5788 = !DILocation(line: 1732, column: 36, scope: !5705)
!5789 = !DILocation(line: 1732, column: 2, scope: !5705)
!5790 = distinct !{!5790, !5706, !5791}
!5791 = !DILocation(line: 1753, column: 2, scope: !5700)
!5792 = !DILocation(line: 1754, column: 1, scope: !5682)
!5793 = distinct !DISubprogram(name: "add_v3_v3", scope: !5794, file: !5794, line: 302, type: !5795, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!5794 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5795 = !DISubroutineType(types: !5796)
!5796 = !{null, !3154, !4638}
!5797 = !DILocalVariable(name: "r", arg: 1, scope: !5793, file: !5794, line: 302, type: !3154)
!5798 = !DILocation(line: 302, column: 30, scope: !5793)
!5799 = !DILocalVariable(name: "a", arg: 2, scope: !5793, file: !5794, line: 302, type: !4638)
!5800 = !DILocation(line: 302, column: 48, scope: !5793)
!5801 = !DILocation(line: 304, column: 10, scope: !5793)
!5802 = !DILocation(line: 304, column: 2, scope: !5793)
!5803 = !DILocation(line: 304, column: 7, scope: !5793)
!5804 = !DILocation(line: 305, column: 10, scope: !5793)
!5805 = !DILocation(line: 305, column: 2, scope: !5793)
!5806 = !DILocation(line: 305, column: 7, scope: !5793)
!5807 = !DILocation(line: 306, column: 10, scope: !5793)
!5808 = !DILocation(line: 306, column: 2, scope: !5793)
!5809 = !DILocation(line: 306, column: 7, scope: !5793)
!5810 = !DILocation(line: 307, column: 1, scope: !5793)
!5811 = distinct !DISubprogram(name: "ed_editnurb_extrude_flag", scope: !3, file: !3, line: 2018, type: !5812, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!5812 = !DISubroutineType(types: !5813)
!5813 = !{!1081, !2962, !48}
!5814 = !DILocalVariable(name: "editnurb", arg: 1, scope: !5811, file: !3, line: 2018, type: !2962)
!5815 = !DILocation(line: 2018, column: 41, scope: !5811)
!5816 = !DILocalVariable(name: "flag", arg: 2, scope: !5811, file: !3, line: 2018, type: !48)
!5817 = !DILocation(line: 2018, column: 57, scope: !5811)
!5818 = !DILocalVariable(name: "nu", scope: !5811, file: !3, line: 2020, type: !3163)
!5819 = !DILocation(line: 2020, column: 8, scope: !5811)
!5820 = !DILocalVariable(name: "bp", scope: !5811, file: !3, line: 2021, type: !3093)
!5821 = !DILocation(line: 2021, column: 10, scope: !5811)
!5822 = !DILocalVariable(name: "bpn", scope: !5811, file: !3, line: 2021, type: !3093)
!5823 = !DILocation(line: 2021, column: 15, scope: !5811)
!5824 = !DILocalVariable(name: "newbp", scope: !5811, file: !3, line: 2021, type: !3093)
!5825 = !DILocation(line: 2021, column: 21, scope: !5811)
!5826 = !DILocalVariable(name: "a", scope: !5811, file: !3, line: 2022, type: !22)
!5827 = !DILocation(line: 2022, column: 6, scope: !5811)
!5828 = !DILocalVariable(name: "u", scope: !5811, file: !3, line: 2022, type: !22)
!5829 = !DILocation(line: 2022, column: 9, scope: !5811)
!5830 = !DILocalVariable(name: "v", scope: !5811, file: !3, line: 2022, type: !22)
!5831 = !DILocation(line: 2022, column: 12, scope: !5811)
!5832 = !DILocalVariable(name: "len", scope: !5811, file: !3, line: 2022, type: !22)
!5833 = !DILocation(line: 2022, column: 15, scope: !5811)
!5834 = !DILocalVariable(name: "ok", scope: !5811, file: !3, line: 2023, type: !1081)
!5835 = !DILocation(line: 2023, column: 7, scope: !5811)
!5836 = !DILocation(line: 2025, column: 7, scope: !5811)
!5837 = !DILocation(line: 2025, column: 17, scope: !5811)
!5838 = !DILocation(line: 2025, column: 23, scope: !5811)
!5839 = !DILocation(line: 2025, column: 5, scope: !5811)
!5840 = !DILocation(line: 2026, column: 2, scope: !5811)
!5841 = !DILocation(line: 2026, column: 9, scope: !5811)
!5842 = !DILocation(line: 2028, column: 7, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 2028, column: 7)
!5844 = distinct !DILexicalBlock(scope: !5811, file: !3, line: 2026, column: 13)
!5845 = !DILocation(line: 2028, column: 11, scope: !5843)
!5846 = !DILocation(line: 2028, column: 17, scope: !5843)
!5847 = !DILocation(line: 2028, column: 7, scope: !5844)
!5848 = !DILocation(line: 2029, column: 9, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 2028, column: 23)
!5850 = !DILocation(line: 2029, column: 13, scope: !5849)
!5851 = !DILocation(line: 2029, column: 7, scope: !5849)
!5852 = !DILocation(line: 2030, column: 8, scope: !5849)
!5853 = !DILocation(line: 2030, column: 12, scope: !5849)
!5854 = !DILocation(line: 2030, column: 6, scope: !5849)
!5855 = !DILocation(line: 2031, column: 4, scope: !5849)
!5856 = !DILocation(line: 2031, column: 11, scope: !5849)
!5857 = !DILocation(line: 2032, column: 9, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5859, file: !3, line: 2032, column: 9)
!5859 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 2031, column: 14)
!5860 = !DILocation(line: 2032, column: 13, scope: !5858)
!5861 = !DILocation(line: 2032, column: 18, scope: !5858)
!5862 = !DILocation(line: 2032, column: 16, scope: !5858)
!5863 = !DILocation(line: 2032, column: 9, scope: !5859)
!5864 = !DILocation(line: 2034, column: 5, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 2032, column: 24)
!5866 = !DILocation(line: 2036, column: 6, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 2035, column: 10)
!5868 = !DILocation(line: 2038, column: 7, scope: !5859)
!5869 = !DILocation(line: 2039, column: 6, scope: !5859)
!5870 = distinct !{!5870, !5855, !5871}
!5871 = !DILocation(line: 2040, column: 4, scope: !5849)
!5872 = !DILocation(line: 2041, column: 8, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 2041, column: 8)
!5874 = !DILocation(line: 2041, column: 10, scope: !5873)
!5875 = !DILocation(line: 2041, column: 8, scope: !5849)
!5876 = !DILocation(line: 2042, column: 8, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5873, file: !3, line: 2041, column: 16)
!5878 = !DILocation(line: 2043, column: 23, scope: !5877)
!5879 = !DILocation(line: 2043, column: 39, scope: !5877)
!5880 = !DILocation(line: 2043, column: 43, scope: !5877)
!5881 = !DILocation(line: 2043, column: 37, scope: !5877)
!5882 = !DILocation(line: 2043, column: 35, scope: !5877)
!5883 = !DILocation(line: 2043, column: 49, scope: !5877)
!5884 = !DILocation(line: 2043, column: 13, scope: !5877)
!5885 = !DILocation(line: 2043, column: 11, scope: !5877)
!5886 = !DILocation(line: 2044, column: 20, scope: !5877)
!5887 = !DILocation(line: 2044, column: 30, scope: !5877)
!5888 = !DILocation(line: 2044, column: 37, scope: !5877)
!5889 = !DILocation(line: 2044, column: 41, scope: !5877)
!5890 = !DILocation(line: 2044, column: 45, scope: !5877)
!5891 = !DILocation(line: 2044, column: 49, scope: !5877)
!5892 = !DILocation(line: 2044, column: 5, scope: !5877)
!5893 = !DILocation(line: 2045, column: 10, scope: !5877)
!5894 = !DILocation(line: 2045, column: 18, scope: !5877)
!5895 = !DILocation(line: 2045, column: 22, scope: !5877)
!5896 = !DILocation(line: 2045, column: 16, scope: !5877)
!5897 = !DILocation(line: 2045, column: 8, scope: !5877)
!5898 = !DILocation(line: 2046, column: 20, scope: !5877)
!5899 = !DILocation(line: 2046, column: 30, scope: !5877)
!5900 = !DILocation(line: 2046, column: 34, scope: !5877)
!5901 = !DILocation(line: 2046, column: 38, scope: !5877)
!5902 = !DILocation(line: 2046, column: 42, scope: !5877)
!5903 = !DILocation(line: 2046, column: 46, scope: !5877)
!5904 = !DILocation(line: 2046, column: 5, scope: !5877)
!5905 = !DILocation(line: 2047, column: 5, scope: !5877)
!5906 = !DILocation(line: 2047, column: 15, scope: !5877)
!5907 = !DILocation(line: 2047, column: 19, scope: !5877)
!5908 = !DILocation(line: 2048, column: 14, scope: !5877)
!5909 = !DILocation(line: 2048, column: 5, scope: !5877)
!5910 = !DILocation(line: 2048, column: 9, scope: !5877)
!5911 = !DILocation(line: 2048, column: 12, scope: !5877)
!5912 = !DILocation(line: 2049, column: 9, scope: !5877)
!5913 = !DILocation(line: 2049, column: 13, scope: !5877)
!5914 = !DILocation(line: 2049, column: 7, scope: !5877)
!5915 = !DILocation(line: 2050, column: 5, scope: !5877)
!5916 = !DILocation(line: 2050, column: 13, scope: !5877)
!5917 = !DILocation(line: 2051, column: 20, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 2050, column: 17)
!5919 = !DILocation(line: 2051, column: 32, scope: !5918)
!5920 = !DILocation(line: 2051, column: 6, scope: !5918)
!5921 = !DILocation(line: 2052, column: 20, scope: !5918)
!5922 = !DILocation(line: 2052, column: 37, scope: !5918)
!5923 = !DILocation(line: 2052, column: 6, scope: !5918)
!5924 = !DILocation(line: 2053, column: 8, scope: !5918)
!5925 = !DILocation(line: 2054, column: 11, scope: !5918)
!5926 = distinct !{!5926, !5915, !5927}
!5927 = !DILocation(line: 2055, column: 5, scope: !5877)
!5928 = !DILocation(line: 2057, column: 5, scope: !5877)
!5929 = !DILocation(line: 2057, column: 9, scope: !5877)
!5930 = !DILocation(line: 2057, column: 15, scope: !5877)
!5931 = !DILocation(line: 2058, column: 5, scope: !5877)
!5932 = !DILocation(line: 2058, column: 9, scope: !5877)
!5933 = !DILocation(line: 2058, column: 16, scope: !5877)
!5934 = !DILocation(line: 2059, column: 26, scope: !5877)
!5935 = !DILocation(line: 2059, column: 5, scope: !5877)
!5936 = !DILocation(line: 2060, column: 4, scope: !5877)
!5937 = !DILocation(line: 2061, column: 3, scope: !5849)
!5938 = !DILocation(line: 2065, column: 20, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 2065, column: 8)
!5940 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 2062, column: 8)
!5941 = !DILocation(line: 2065, column: 32, scope: !5939)
!5942 = !DILocation(line: 2065, column: 8, scope: !5939)
!5943 = !DILocation(line: 2065, column: 8, scope: !5940)
!5944 = !DILocation(line: 2068, column: 10, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5939, file: !3, line: 2065, column: 39)
!5946 = !DILocation(line: 2068, column: 14, scope: !5945)
!5947 = !DILocation(line: 2068, column: 8, scope: !5945)
!5948 = !DILocation(line: 2069, column: 9, scope: !5945)
!5949 = !DILocation(line: 2069, column: 13, scope: !5945)
!5950 = !DILocation(line: 2069, column: 21, scope: !5945)
!5951 = !DILocation(line: 2069, column: 25, scope: !5945)
!5952 = !DILocation(line: 2069, column: 19, scope: !5945)
!5953 = !DILocation(line: 2069, column: 7, scope: !5945)
!5954 = !DILocation(line: 2070, column: 5, scope: !5945)
!5955 = !DILocation(line: 2070, column: 13, scope: !5945)
!5956 = !DILocation(line: 2071, column: 20, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 2070, column: 17)
!5958 = !DILocation(line: 2071, column: 34, scope: !5957)
!5959 = !DILocation(line: 2071, column: 6, scope: !5957)
!5960 = !DILocation(line: 2072, column: 8, scope: !5957)
!5961 = distinct !{!5961, !5954, !5962}
!5962 = !DILocation(line: 2073, column: 5, scope: !5945)
!5963 = !DILocation(line: 2075, column: 9, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 2075, column: 9)
!5965 = !DILocation(line: 2075, column: 11, scope: !5964)
!5966 = !DILocation(line: 2075, column: 16, scope: !5964)
!5967 = !DILocation(line: 2075, column: 19, scope: !5964)
!5968 = !DILocation(line: 2075, column: 24, scope: !5964)
!5969 = !DILocation(line: 2075, column: 28, scope: !5964)
!5970 = !DILocation(line: 2075, column: 34, scope: !5964)
!5971 = !DILocation(line: 2075, column: 21, scope: !5964)
!5972 = !DILocation(line: 2075, column: 9, scope: !5945)
!5973 = !DILocation(line: 2076, column: 9, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 2075, column: 39)
!5975 = !DILocation(line: 2077, column: 24, scope: !5974)
!5976 = !DILocation(line: 2077, column: 36, scope: !5974)
!5977 = !DILocation(line: 2077, column: 40, scope: !5974)
!5978 = !DILocation(line: 2077, column: 49, scope: !5974)
!5979 = !DILocation(line: 2077, column: 53, scope: !5974)
!5980 = !DILocation(line: 2077, column: 59, scope: !5974)
!5981 = !DILocation(line: 2077, column: 46, scope: !5974)
!5982 = !DILocation(line: 2077, column: 64, scope: !5974)
!5983 = !DILocation(line: 2077, column: 14, scope: !5974)
!5984 = !DILocation(line: 2077, column: 12, scope: !5974)
!5985 = !DILocation(line: 2079, column: 10, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 2079, column: 10)
!5987 = !DILocation(line: 2079, column: 12, scope: !5986)
!5988 = !DILocation(line: 2079, column: 10, scope: !5974)
!5989 = !DILocation(line: 2080, column: 13, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 2079, column: 18)
!5991 = !DILocation(line: 2080, column: 17, scope: !5990)
!5992 = !DILocation(line: 2080, column: 25, scope: !5990)
!5993 = !DILocation(line: 2080, column: 29, scope: !5990)
!5994 = !DILocation(line: 2080, column: 23, scope: !5990)
!5995 = !DILocation(line: 2080, column: 11, scope: !5990)
!5996 = !DILocation(line: 2081, column: 22, scope: !5990)
!5997 = !DILocation(line: 2081, column: 32, scope: !5990)
!5998 = !DILocation(line: 2081, column: 40, scope: !5990)
!5999 = !DILocation(line: 2081, column: 44, scope: !5990)
!6000 = !DILocation(line: 2081, column: 38, scope: !5990)
!6001 = !DILocation(line: 2081, column: 51, scope: !5990)
!6002 = !DILocation(line: 2081, column: 55, scope: !5990)
!6003 = !DILocation(line: 2081, column: 59, scope: !5990)
!6004 = !DILocation(line: 2081, column: 7, scope: !5990)
!6005 = !DILocation(line: 2082, column: 22, scope: !5990)
!6006 = !DILocation(line: 2082, column: 32, scope: !5990)
!6007 = !DILocation(line: 2082, column: 39, scope: !5990)
!6008 = !DILocation(line: 2082, column: 43, scope: !5990)
!6009 = !DILocation(line: 2082, column: 47, scope: !5990)
!6010 = !DILocation(line: 2082, column: 51, scope: !5990)
!6011 = !DILocation(line: 2082, column: 7, scope: !5990)
!6012 = !DILocation(line: 2083, column: 12, scope: !5990)
!6013 = !DILocation(line: 2083, column: 10, scope: !5990)
!6014 = !DILocation(line: 2084, column: 6, scope: !5990)
!6015 = !DILocation(line: 2086, column: 13, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 2085, column: 11)
!6017 = !DILocation(line: 2086, column: 17, scope: !6016)
!6018 = !DILocation(line: 2086, column: 25, scope: !6016)
!6019 = !DILocation(line: 2086, column: 29, scope: !6016)
!6020 = !DILocation(line: 2086, column: 23, scope: !6016)
!6021 = !DILocation(line: 2086, column: 11, scope: !6016)
!6022 = !DILocation(line: 2087, column: 22, scope: !6016)
!6023 = !DILocation(line: 2087, column: 32, scope: !6016)
!6024 = !DILocation(line: 2087, column: 39, scope: !6016)
!6025 = !DILocation(line: 2087, column: 43, scope: !6016)
!6026 = !DILocation(line: 2087, column: 47, scope: !6016)
!6027 = !DILocation(line: 2087, column: 7, scope: !6016)
!6028 = !DILocation(line: 2088, column: 22, scope: !6016)
!6029 = !DILocation(line: 2088, column: 32, scope: !6016)
!6030 = !DILocation(line: 2088, column: 40, scope: !6016)
!6031 = !DILocation(line: 2088, column: 38, scope: !6016)
!6032 = !DILocation(line: 2088, column: 46, scope: !6016)
!6033 = !DILocation(line: 2088, column: 50, scope: !6016)
!6034 = !DILocation(line: 2088, column: 53, scope: !6016)
!6035 = !DILocation(line: 2088, column: 59, scope: !6016)
!6036 = !DILocation(line: 2088, column: 63, scope: !6016)
!6037 = !DILocation(line: 2088, column: 57, scope: !6016)
!6038 = !DILocation(line: 2088, column: 71, scope: !6016)
!6039 = !DILocation(line: 2088, column: 75, scope: !6016)
!6040 = !DILocation(line: 2088, column: 7, scope: !6016)
!6041 = !DILocation(line: 2089, column: 12, scope: !6016)
!6042 = !DILocation(line: 2089, column: 20, scope: !6016)
!6043 = !DILocation(line: 2089, column: 18, scope: !6016)
!6044 = !DILocation(line: 2089, column: 10, scope: !6016)
!6045 = !DILocation(line: 2092, column: 10, scope: !5974)
!6046 = !DILocation(line: 2092, column: 14, scope: !5974)
!6047 = !DILocation(line: 2092, column: 8, scope: !5974)
!6048 = !DILocation(line: 2093, column: 6, scope: !5974)
!6049 = !DILocation(line: 2093, column: 14, scope: !5974)
!6050 = !DILocation(line: 2094, column: 21, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 2093, column: 18)
!6052 = !DILocation(line: 2094, column: 33, scope: !6051)
!6053 = !DILocation(line: 2094, column: 7, scope: !6051)
!6054 = !DILocation(line: 2095, column: 9, scope: !6051)
!6055 = distinct !{!6055, !6048, !6056}
!6056 = !DILocation(line: 2096, column: 6, scope: !5974)
!6057 = !DILocation(line: 2098, column: 6, scope: !5974)
!6058 = !DILocation(line: 2098, column: 16, scope: !5974)
!6059 = !DILocation(line: 2098, column: 20, scope: !5974)
!6060 = !DILocation(line: 2099, column: 15, scope: !5974)
!6061 = !DILocation(line: 2099, column: 6, scope: !5974)
!6062 = !DILocation(line: 2099, column: 10, scope: !5974)
!6063 = !DILocation(line: 2099, column: 13, scope: !5974)
!6064 = !DILocation(line: 2100, column: 6, scope: !5974)
!6065 = !DILocation(line: 2100, column: 10, scope: !5974)
!6066 = !DILocation(line: 2100, column: 15, scope: !5974)
!6067 = !DILocation(line: 2101, column: 27, scope: !5974)
!6068 = !DILocation(line: 2101, column: 6, scope: !5974)
!6069 = !DILocation(line: 2102, column: 5, scope: !5974)
!6070 = !DILocation(line: 2103, column: 14, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 2103, column: 14)
!6072 = !DILocation(line: 2103, column: 16, scope: !6071)
!6073 = !DILocation(line: 2103, column: 21, scope: !6071)
!6074 = !DILocation(line: 2103, column: 24, scope: !6071)
!6075 = !DILocation(line: 2103, column: 29, scope: !6071)
!6076 = !DILocation(line: 2103, column: 33, scope: !6071)
!6077 = !DILocation(line: 2103, column: 39, scope: !6071)
!6078 = !DILocation(line: 2103, column: 26, scope: !6071)
!6079 = !DILocation(line: 2103, column: 14, scope: !5964)
!6080 = !DILocation(line: 2104, column: 9, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 2103, column: 44)
!6082 = !DILocation(line: 2105, column: 30, scope: !6081)
!6083 = !DILocation(line: 2105, column: 43, scope: !6081)
!6084 = !DILocation(line: 2105, column: 47, scope: !6081)
!6085 = !DILocation(line: 2105, column: 53, scope: !6081)
!6086 = !DILocation(line: 2105, column: 60, scope: !6081)
!6087 = !DILocation(line: 2105, column: 64, scope: !6081)
!6088 = !DILocation(line: 2105, column: 58, scope: !6081)
!6089 = !DILocation(line: 2105, column: 42, scope: !6081)
!6090 = !DILocation(line: 2105, column: 70, scope: !6081)
!6091 = !DILocation(line: 2105, column: 20, scope: !6081)
!6092 = !DILocation(line: 2105, column: 18, scope: !6081)
!6093 = !DILocation(line: 2105, column: 10, scope: !6081)
!6094 = !DILocation(line: 2106, column: 11, scope: !6081)
!6095 = !DILocation(line: 2106, column: 15, scope: !6081)
!6096 = !DILocation(line: 2106, column: 9, scope: !6081)
!6097 = !DILocation(line: 2108, column: 13, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6081, file: !3, line: 2108, column: 6)
!6099 = !DILocation(line: 2108, column: 11, scope: !6098)
!6100 = !DILocation(line: 2108, column: 18, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6098, file: !3, line: 2108, column: 6)
!6102 = !DILocation(line: 2108, column: 22, scope: !6101)
!6103 = !DILocation(line: 2108, column: 26, scope: !6101)
!6104 = !DILocation(line: 2108, column: 20, scope: !6101)
!6105 = !DILocation(line: 2108, column: 6, scope: !6098)
!6106 = !DILocation(line: 2109, column: 11, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6108, file: !3, line: 2109, column: 11)
!6108 = distinct !DILexicalBlock(scope: !6101, file: !3, line: 2108, column: 38)
!6109 = !DILocation(line: 2109, column: 13, scope: !6107)
!6110 = !DILocation(line: 2109, column: 11, scope: !6108)
!6111 = !DILocation(line: 2110, column: 9, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6107, file: !3, line: 2109, column: 19)
!6113 = !DILocation(line: 2110, column: 16, scope: !6112)
!6114 = !DILocation(line: 2110, column: 15, scope: !6112)
!6115 = !DILocation(line: 2111, column: 19, scope: !6112)
!6116 = !DILocation(line: 2111, column: 8, scope: !6112)
!6117 = !DILocation(line: 2111, column: 13, scope: !6112)
!6118 = !DILocation(line: 2111, column: 16, scope: !6112)
!6119 = !DILocation(line: 2112, column: 11, scope: !6112)
!6120 = !DILocation(line: 2113, column: 7, scope: !6112)
!6121 = !DILocation(line: 2114, column: 22, scope: !6108)
!6122 = !DILocation(line: 2114, column: 32, scope: !6108)
!6123 = !DILocation(line: 2114, column: 37, scope: !6108)
!6124 = !DILocation(line: 2114, column: 41, scope: !6108)
!6125 = !DILocation(line: 2114, column: 45, scope: !6108)
!6126 = !DILocation(line: 2114, column: 7, scope: !6108)
!6127 = !DILocation(line: 2115, column: 13, scope: !6108)
!6128 = !DILocation(line: 2115, column: 17, scope: !6108)
!6129 = !DILocation(line: 2115, column: 10, scope: !6108)
!6130 = !DILocation(line: 2116, column: 14, scope: !6108)
!6131 = !DILocation(line: 2116, column: 18, scope: !6108)
!6132 = !DILocation(line: 2116, column: 11, scope: !6108)
!6133 = !DILocation(line: 2117, column: 11, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6108, file: !3, line: 2117, column: 11)
!6135 = !DILocation(line: 2117, column: 16, scope: !6134)
!6136 = !DILocation(line: 2117, column: 20, scope: !6134)
!6137 = !DILocation(line: 2117, column: 26, scope: !6134)
!6138 = !DILocation(line: 2117, column: 13, scope: !6134)
!6139 = !DILocation(line: 2117, column: 11, scope: !6108)
!6140 = !DILocation(line: 2118, column: 9, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6134, file: !3, line: 2117, column: 31)
!6142 = !DILocation(line: 2118, column: 17, scope: !6141)
!6143 = !DILocation(line: 2118, column: 20, scope: !6141)
!6144 = !DILocation(line: 2118, column: 15, scope: !6141)
!6145 = !DILocation(line: 2119, column: 19, scope: !6141)
!6146 = !DILocation(line: 2119, column: 8, scope: !6141)
!6147 = !DILocation(line: 2119, column: 13, scope: !6141)
!6148 = !DILocation(line: 2119, column: 16, scope: !6141)
!6149 = !DILocation(line: 2120, column: 11, scope: !6141)
!6150 = !DILocation(line: 2121, column: 7, scope: !6141)
!6151 = !DILocation(line: 2122, column: 6, scope: !6108)
!6152 = !DILocation(line: 2108, column: 34, scope: !6101)
!6153 = !DILocation(line: 2108, column: 6, scope: !6101)
!6154 = distinct !{!6154, !6105, !6155}
!6155 = !DILocation(line: 2122, column: 6, scope: !6098)
!6156 = !DILocation(line: 2124, column: 6, scope: !6081)
!6157 = !DILocation(line: 2124, column: 16, scope: !6081)
!6158 = !DILocation(line: 2124, column: 20, scope: !6081)
!6159 = !DILocation(line: 2125, column: 15, scope: !6081)
!6160 = !DILocation(line: 2125, column: 6, scope: !6081)
!6161 = !DILocation(line: 2125, column: 10, scope: !6081)
!6162 = !DILocation(line: 2125, column: 13, scope: !6081)
!6163 = !DILocation(line: 2126, column: 6, scope: !6081)
!6164 = !DILocation(line: 2126, column: 10, scope: !6081)
!6165 = !DILocation(line: 2126, column: 15, scope: !6081)
!6166 = !DILocation(line: 2127, column: 27, scope: !6081)
!6167 = !DILocation(line: 2127, column: 6, scope: !6081)
!6168 = !DILocation(line: 2128, column: 5, scope: !6081)
!6169 = !DILocation(line: 2129, column: 4, scope: !5945)
!6170 = !DILocation(line: 2131, column: 8, scope: !5844)
!6171 = !DILocation(line: 2131, column: 12, scope: !5844)
!6172 = !DILocation(line: 2131, column: 6, scope: !5844)
!6173 = distinct !{!6173, !5840, !6174}
!6174 = !DILocation(line: 2132, column: 2, scope: !5811)
!6175 = !DILocation(line: 2134, column: 9, scope: !5811)
!6176 = !DILocation(line: 2134, column: 2, scope: !5811)
!6177 = distinct !DISubprogram(name: "ED_curve_bpcpy", scope: !3, file: !3, line: 6968, type: !6178, scopeLine: 6969, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!6178 = !DISubroutineType(types: !6179)
!6179 = !{null, !2962, !3093, !3093, !22}
!6180 = !DILocalVariable(name: "editnurb", arg: 1, scope: !6177, file: !3, line: 6968, type: !2962)
!6181 = !DILocation(line: 6968, column: 31, scope: !6177)
!6182 = !DILocalVariable(name: "dst", arg: 2, scope: !6177, file: !3, line: 6968, type: !3093)
!6183 = !DILocation(line: 6968, column: 49, scope: !6177)
!6184 = !DILocalVariable(name: "src", arg: 3, scope: !6177, file: !3, line: 6968, type: !3093)
!6185 = !DILocation(line: 6968, column: 62, scope: !6177)
!6186 = !DILocalVariable(name: "count", arg: 4, scope: !6177, file: !3, line: 6968, type: !22)
!6187 = !DILocation(line: 6968, column: 71, scope: !6177)
!6188 = !DILocation(line: 6970, column: 9, scope: !6177)
!6189 = !DILocation(line: 6970, column: 2, scope: !6177)
!6190 = !DILocation(line: 6970, column: 14, scope: !6177)
!6191 = !DILocation(line: 6970, column: 19, scope: !6177)
!6192 = !DILocation(line: 6970, column: 25, scope: !6177)
!6193 = !DILocation(line: 6971, column: 20, scope: !6177)
!6194 = !DILocation(line: 6971, column: 30, scope: !6177)
!6195 = !DILocation(line: 6971, column: 35, scope: !6177)
!6196 = !DILocation(line: 6971, column: 40, scope: !6177)
!6197 = !DILocation(line: 6971, column: 2, scope: !6177)
!6198 = !DILocation(line: 6972, column: 1, scope: !6177)
!6199 = distinct !DISubprogram(name: "select_bpoint", scope: !3, file: !3, line: 152, type: !6200, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!6200 = !DISubroutineType(types: !6201)
!6201 = !{!1081, !3093, !1081, !48, !1081}
!6202 = !DILocalVariable(name: "bp", arg: 1, scope: !6199, file: !3, line: 152, type: !3093)
!6203 = !DILocation(line: 152, column: 35, scope: !6199)
!6204 = !DILocalVariable(name: "selstatus", arg: 2, scope: !6199, file: !3, line: 152, type: !1081)
!6205 = !DILocation(line: 152, column: 44, scope: !6199)
!6206 = !DILocalVariable(name: "flag", arg: 3, scope: !6199, file: !3, line: 152, type: !48)
!6207 = !DILocation(line: 152, column: 61, scope: !6199)
!6208 = !DILocalVariable(name: "hidden", arg: 4, scope: !6199, file: !3, line: 152, type: !1081)
!6209 = !DILocation(line: 152, column: 72, scope: !6199)
!6210 = !DILocation(line: 154, column: 7, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 154, column: 6)
!6212 = !DILocation(line: 154, column: 11, scope: !6211)
!6213 = !DILocation(line: 154, column: 16, scope: !6211)
!6214 = !DILocation(line: 154, column: 22, scope: !6211)
!6215 = !DILocation(line: 154, column: 26, scope: !6211)
!6216 = !DILocation(line: 154, column: 33, scope: !6211)
!6217 = !DILocation(line: 154, column: 6, scope: !6199)
!6218 = !DILocation(line: 155, column: 7, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 155, column: 7)
!6220 = distinct !DILexicalBlock(scope: !6211, file: !3, line: 154, column: 40)
!6221 = !DILocation(line: 155, column: 17, scope: !6219)
!6222 = !DILocation(line: 155, column: 7, scope: !6220)
!6223 = !DILocation(line: 156, column: 14, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 155, column: 28)
!6225 = !DILocation(line: 156, column: 4, scope: !6224)
!6226 = !DILocation(line: 156, column: 8, scope: !6224)
!6227 = !DILocation(line: 156, column: 11, scope: !6224)
!6228 = !DILocation(line: 157, column: 4, scope: !6224)
!6229 = !DILocation(line: 160, column: 15, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 159, column: 8)
!6231 = !DILocation(line: 160, column: 14, scope: !6230)
!6232 = !DILocation(line: 160, column: 4, scope: !6230)
!6233 = !DILocation(line: 160, column: 8, scope: !6230)
!6234 = !DILocation(line: 160, column: 11, scope: !6230)
!6235 = !DILocation(line: 161, column: 4, scope: !6230)
!6236 = !DILocation(line: 165, column: 2, scope: !6199)
!6237 = !DILocation(line: 166, column: 1, scope: !6199)
!6238 = distinct !DISubprogram(name: "isNurbselUV", scope: !3, file: !3, line: 1604, type: !6239, scopeLine: 1605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!6239 = !DISubroutineType(types: !6240)
!6240 = !{!48, !3163, !3150, !3150, !22}
!6241 = !DILocalVariable(name: "nu", arg: 1, scope: !6238, file: !3, line: 1604, type: !3163)
!6242 = !DILocation(line: 1604, column: 32, scope: !6238)
!6243 = !DILocalVariable(name: "u", arg: 2, scope: !6238, file: !3, line: 1604, type: !3150)
!6244 = !DILocation(line: 1604, column: 41, scope: !6238)
!6245 = !DILocalVariable(name: "v", arg: 3, scope: !6238, file: !3, line: 1604, type: !3150)
!6246 = !DILocation(line: 1604, column: 49, scope: !6238)
!6247 = !DILocalVariable(name: "flag", arg: 4, scope: !6238, file: !3, line: 1604, type: !22)
!6248 = !DILocation(line: 1604, column: 56, scope: !6238)
!6249 = !DILocalVariable(name: "bp", scope: !6238, file: !3, line: 1609, type: !3093)
!6250 = !DILocation(line: 1609, column: 10, scope: !6238)
!6251 = !DILocalVariable(name: "a", scope: !6238, file: !3, line: 1610, type: !22)
!6252 = !DILocation(line: 1610, column: 6, scope: !6238)
!6253 = !DILocalVariable(name: "b", scope: !6238, file: !3, line: 1610, type: !22)
!6254 = !DILocation(line: 1610, column: 9, scope: !6238)
!6255 = !DILocalVariable(name: "sel", scope: !6238, file: !3, line: 1610, type: !22)
!6256 = !DILocation(line: 1610, column: 12, scope: !6238)
!6257 = !DILocation(line: 1612, column: 8, scope: !6238)
!6258 = !DILocation(line: 1612, column: 10, scope: !6238)
!6259 = !DILocation(line: 1612, column: 3, scope: !6238)
!6260 = !DILocation(line: 1612, column: 5, scope: !6238)
!6261 = !DILocation(line: 1614, column: 7, scope: !6238)
!6262 = !DILocation(line: 1614, column: 11, scope: !6238)
!6263 = !DILocation(line: 1614, column: 5, scope: !6238)
!6264 = !DILocation(line: 1615, column: 9, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 1615, column: 2)
!6266 = !DILocation(line: 1615, column: 7, scope: !6265)
!6267 = !DILocation(line: 1615, column: 14, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6265, file: !3, line: 1615, column: 2)
!6269 = !DILocation(line: 1615, column: 18, scope: !6268)
!6270 = !DILocation(line: 1615, column: 22, scope: !6268)
!6271 = !DILocation(line: 1615, column: 16, scope: !6268)
!6272 = !DILocation(line: 1615, column: 2, scope: !6265)
!6273 = !DILocation(line: 1616, column: 7, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6268, file: !3, line: 1615, column: 34)
!6275 = !DILocation(line: 1617, column: 10, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6274, file: !3, line: 1617, column: 3)
!6277 = !DILocation(line: 1617, column: 8, scope: !6276)
!6278 = !DILocation(line: 1617, column: 15, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 1617, column: 3)
!6280 = !DILocation(line: 1617, column: 19, scope: !6279)
!6281 = !DILocation(line: 1617, column: 23, scope: !6279)
!6282 = !DILocation(line: 1617, column: 17, scope: !6279)
!6283 = !DILocation(line: 1617, column: 3, scope: !6276)
!6284 = !DILocation(line: 1618, column: 8, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6286, file: !3, line: 1618, column: 8)
!6286 = distinct !DILexicalBlock(scope: !6279, file: !3, line: 1617, column: 41)
!6287 = !DILocation(line: 1618, column: 12, scope: !6285)
!6288 = !DILocation(line: 1618, column: 17, scope: !6285)
!6289 = !DILocation(line: 1618, column: 15, scope: !6285)
!6290 = !DILocation(line: 1618, column: 8, scope: !6286)
!6291 = !DILocation(line: 1618, column: 26, scope: !6285)
!6292 = !DILocation(line: 1618, column: 23, scope: !6285)
!6293 = !DILocation(line: 1619, column: 3, scope: !6286)
!6294 = !DILocation(line: 1617, column: 31, scope: !6279)
!6295 = !DILocation(line: 1617, column: 37, scope: !6279)
!6296 = !DILocation(line: 1617, column: 3, scope: !6279)
!6297 = distinct !{!6297, !6283, !6298}
!6298 = !DILocation(line: 1619, column: 3, scope: !6276)
!6299 = !DILocation(line: 1620, column: 7, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6274, file: !3, line: 1620, column: 7)
!6301 = !DILocation(line: 1620, column: 14, scope: !6300)
!6302 = !DILocation(line: 1620, column: 18, scope: !6300)
!6303 = !DILocation(line: 1620, column: 11, scope: !6300)
!6304 = !DILocation(line: 1620, column: 7, scope: !6274)
!6305 = !DILocation(line: 1621, column: 9, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6307, file: !3, line: 1621, column: 8)
!6307 = distinct !DILexicalBlock(scope: !6300, file: !3, line: 1620, column: 25)
!6308 = !DILocation(line: 1621, column: 8, scope: !6306)
!6309 = !DILocation(line: 1621, column: 11, scope: !6306)
!6310 = !DILocation(line: 1621, column: 8, scope: !6307)
!6311 = !DILocation(line: 1621, column: 23, scope: !6306)
!6312 = !DILocation(line: 1621, column: 19, scope: !6306)
!6313 = !DILocation(line: 1621, column: 21, scope: !6306)
!6314 = !DILocation(line: 1621, column: 18, scope: !6306)
!6315 = !DILocation(line: 1622, column: 9, scope: !6306)
!6316 = !DILocation(line: 1623, column: 3, scope: !6307)
!6317 = !DILocation(line: 1624, column: 12, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6300, file: !3, line: 1624, column: 12)
!6319 = !DILocation(line: 1624, column: 16, scope: !6318)
!6320 = !DILocation(line: 1624, column: 12, scope: !6300)
!6321 = !DILocation(line: 1625, column: 4, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6318, file: !3, line: 1624, column: 21)
!6323 = !DILocation(line: 1627, column: 2, scope: !6274)
!6324 = !DILocation(line: 1615, column: 30, scope: !6268)
!6325 = !DILocation(line: 1615, column: 2, scope: !6268)
!6326 = distinct !{!6326, !6272, !6327}
!6327 = !DILocation(line: 1627, column: 2, scope: !6265)
!6328 = !DILocation(line: 1629, column: 9, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 1629, column: 2)
!6330 = !DILocation(line: 1629, column: 7, scope: !6329)
!6331 = !DILocation(line: 1629, column: 14, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 1629, column: 2)
!6333 = !DILocation(line: 1629, column: 18, scope: !6332)
!6334 = !DILocation(line: 1629, column: 22, scope: !6332)
!6335 = !DILocation(line: 1629, column: 16, scope: !6332)
!6336 = !DILocation(line: 1629, column: 2, scope: !6329)
!6337 = !DILocation(line: 1630, column: 7, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 1629, column: 34)
!6339 = !DILocation(line: 1631, column: 9, scope: !6338)
!6340 = !DILocation(line: 1631, column: 13, scope: !6338)
!6341 = !DILocation(line: 1631, column: 16, scope: !6338)
!6342 = !DILocation(line: 1631, column: 6, scope: !6338)
!6343 = !DILocation(line: 1632, column: 10, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 1632, column: 3)
!6345 = !DILocation(line: 1632, column: 8, scope: !6344)
!6346 = !DILocation(line: 1632, column: 15, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 1632, column: 3)
!6348 = !DILocation(line: 1632, column: 19, scope: !6347)
!6349 = !DILocation(line: 1632, column: 23, scope: !6347)
!6350 = !DILocation(line: 1632, column: 17, scope: !6347)
!6351 = !DILocation(line: 1632, column: 3, scope: !6344)
!6352 = !DILocation(line: 1633, column: 8, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6354, file: !3, line: 1633, column: 8)
!6354 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 1632, column: 52)
!6355 = !DILocation(line: 1633, column: 12, scope: !6353)
!6356 = !DILocation(line: 1633, column: 17, scope: !6353)
!6357 = !DILocation(line: 1633, column: 15, scope: !6353)
!6358 = !DILocation(line: 1633, column: 8, scope: !6354)
!6359 = !DILocation(line: 1633, column: 26, scope: !6353)
!6360 = !DILocation(line: 1633, column: 23, scope: !6353)
!6361 = !DILocation(line: 1634, column: 3, scope: !6354)
!6362 = !DILocation(line: 1632, column: 31, scope: !6347)
!6363 = !DILocation(line: 1632, column: 41, scope: !6347)
!6364 = !DILocation(line: 1632, column: 45, scope: !6347)
!6365 = !DILocation(line: 1632, column: 38, scope: !6347)
!6366 = !DILocation(line: 1632, column: 3, scope: !6347)
!6367 = distinct !{!6367, !6351, !6368}
!6368 = !DILocation(line: 1634, column: 3, scope: !6344)
!6369 = !DILocation(line: 1635, column: 7, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 1635, column: 7)
!6371 = !DILocation(line: 1635, column: 14, scope: !6370)
!6372 = !DILocation(line: 1635, column: 18, scope: !6370)
!6373 = !DILocation(line: 1635, column: 11, scope: !6370)
!6374 = !DILocation(line: 1635, column: 7, scope: !6338)
!6375 = !DILocation(line: 1636, column: 9, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6377, file: !3, line: 1636, column: 8)
!6377 = distinct !DILexicalBlock(scope: !6370, file: !3, line: 1635, column: 25)
!6378 = !DILocation(line: 1636, column: 8, scope: !6376)
!6379 = !DILocation(line: 1636, column: 11, scope: !6376)
!6380 = !DILocation(line: 1636, column: 8, scope: !6377)
!6381 = !DILocation(line: 1636, column: 23, scope: !6376)
!6382 = !DILocation(line: 1636, column: 19, scope: !6376)
!6383 = !DILocation(line: 1636, column: 21, scope: !6376)
!6384 = !DILocation(line: 1636, column: 18, scope: !6376)
!6385 = !DILocation(line: 1637, column: 9, scope: !6376)
!6386 = !DILocation(line: 1638, column: 3, scope: !6377)
!6387 = !DILocation(line: 1639, column: 12, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6370, file: !3, line: 1639, column: 12)
!6389 = !DILocation(line: 1639, column: 16, scope: !6388)
!6390 = !DILocation(line: 1639, column: 12, scope: !6370)
!6391 = !DILocation(line: 1640, column: 4, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 1639, column: 21)
!6393 = !DILocation(line: 1642, column: 2, scope: !6338)
!6394 = !DILocation(line: 1629, column: 30, scope: !6332)
!6395 = !DILocation(line: 1629, column: 2, scope: !6332)
!6396 = distinct !{!6396, !6336, !6397}
!6397 = !DILocation(line: 1642, column: 2, scope: !6329)
!6398 = !DILocation(line: 1644, column: 7, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 1644, column: 6)
!6400 = !DILocation(line: 1644, column: 6, scope: !6399)
!6401 = !DILocation(line: 1644, column: 9, scope: !6399)
!6402 = !DILocation(line: 1644, column: 15, scope: !6399)
!6403 = !DILocation(line: 1644, column: 19, scope: !6399)
!6404 = !DILocation(line: 1644, column: 18, scope: !6399)
!6405 = !DILocation(line: 1644, column: 21, scope: !6399)
!6406 = !DILocation(line: 1644, column: 6, scope: !6238)
!6407 = !DILocation(line: 1644, column: 27, scope: !6399)
!6408 = !DILocation(line: 1645, column: 7, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 1645, column: 6)
!6410 = !DILocation(line: 1645, column: 6, scope: !6409)
!6411 = !DILocation(line: 1645, column: 9, scope: !6409)
!6412 = !DILocation(line: 1645, column: 15, scope: !6409)
!6413 = !DILocation(line: 1645, column: 19, scope: !6409)
!6414 = !DILocation(line: 1645, column: 18, scope: !6409)
!6415 = !DILocation(line: 1645, column: 21, scope: !6409)
!6416 = !DILocation(line: 1645, column: 6, scope: !6238)
!6417 = !DILocation(line: 1645, column: 27, scope: !6409)
!6418 = !DILocation(line: 1646, column: 2, scope: !6238)
!6419 = !DILocation(line: 1647, column: 1, scope: !6238)
!6420 = distinct !DISubprogram(name: "CURVE_OT_switch_direction", scope: !3, file: !3, line: 2425, type: !4, scopeLine: 2426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!6421 = !DILocalVariable(name: "ot", arg: 1, scope: !6420, file: !3, line: 2425, type: !6)
!6422 = !DILocation(line: 2425, column: 48, scope: !6420)
!6423 = !DILocation(line: 2428, column: 2, scope: !6420)
!6424 = !DILocation(line: 2428, column: 6, scope: !6420)
!6425 = !DILocation(line: 2428, column: 11, scope: !6420)
!6426 = !DILocation(line: 2429, column: 2, scope: !6420)
!6427 = !DILocation(line: 2429, column: 6, scope: !6420)
!6428 = !DILocation(line: 2429, column: 18, scope: !6420)
!6429 = !DILocation(line: 2430, column: 2, scope: !6420)
!6430 = !DILocation(line: 2430, column: 6, scope: !6420)
!6431 = !DILocation(line: 2430, column: 13, scope: !6420)
!6432 = !DILocation(line: 2433, column: 2, scope: !6420)
!6433 = !DILocation(line: 2433, column: 6, scope: !6420)
!6434 = !DILocation(line: 2433, column: 11, scope: !6420)
!6435 = !DILocation(line: 2434, column: 2, scope: !6420)
!6436 = !DILocation(line: 2434, column: 6, scope: !6420)
!6437 = !DILocation(line: 2434, column: 11, scope: !6420)
!6438 = !DILocation(line: 2437, column: 2, scope: !6420)
!6439 = !DILocation(line: 2437, column: 6, scope: !6420)
!6440 = !DILocation(line: 2437, column: 11, scope: !6420)
!6441 = !DILocation(line: 2438, column: 1, scope: !6420)
!6442 = distinct !DISubprogram(name: "switch_direction_exec", scope: !3, file: !3, line: 2398, type: !3224, scopeLine: 2399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!6443 = !DILocalVariable(name: "C", arg: 1, scope: !6442, file: !3, line: 2398, type: !3226)
!6444 = !DILocation(line: 2398, column: 44, scope: !6442)
!6445 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !6442, file: !3, line: 2398, type: !3228)
!6446 = !DILocation(line: 2398, column: 59, scope: !6442)
!6447 = !DILocalVariable(name: "obedit", scope: !6442, file: !3, line: 2400, type: !3242)
!6448 = !DILocation(line: 2400, column: 10, scope: !6442)
!6449 = !DILocation(line: 2400, column: 40, scope: !6442)
!6450 = !DILocation(line: 2400, column: 19, scope: !6442)
!6451 = !DILocalVariable(name: "cu", scope: !6442, file: !3, line: 2401, type: !2953)
!6452 = !DILocation(line: 2401, column: 9, scope: !6442)
!6453 = !DILocation(line: 2401, column: 23, scope: !6442)
!6454 = !DILocation(line: 2401, column: 31, scope: !6442)
!6455 = !DILocation(line: 2401, column: 14, scope: !6442)
!6456 = !DILocalVariable(name: "editnurb", scope: !6442, file: !3, line: 2402, type: !2962)
!6457 = !DILocation(line: 2402, column: 12, scope: !6442)
!6458 = !DILocation(line: 2402, column: 23, scope: !6442)
!6459 = !DILocation(line: 2402, column: 27, scope: !6442)
!6460 = !DILocalVariable(name: "nu", scope: !6442, file: !3, line: 2403, type: !3163)
!6461 = !DILocation(line: 2403, column: 8, scope: !6442)
!6462 = !DILocalVariable(name: "i", scope: !6442, file: !3, line: 2404, type: !22)
!6463 = !DILocation(line: 2404, column: 6, scope: !6442)
!6464 = !DILocation(line: 2406, column: 12, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !6442, file: !3, line: 2406, column: 2)
!6466 = !DILocation(line: 2406, column: 22, scope: !6465)
!6467 = !DILocation(line: 2406, column: 28, scope: !6465)
!6468 = !DILocation(line: 2406, column: 10, scope: !6465)
!6469 = !DILocation(line: 2406, column: 37, scope: !6465)
!6470 = !DILocation(line: 2406, column: 7, scope: !6465)
!6471 = !DILocation(line: 2406, column: 42, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 2406, column: 2)
!6473 = !DILocation(line: 2406, column: 2, scope: !6465)
!6474 = !DILocation(line: 2407, column: 17, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 2407, column: 7)
!6476 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 2406, column: 66)
!6477 = !DILocation(line: 2407, column: 7, scope: !6475)
!6478 = !DILocation(line: 2407, column: 7, scope: !6476)
!6479 = !DILocation(line: 2408, column: 30, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6475, file: !3, line: 2407, column: 22)
!6481 = !DILocation(line: 2408, column: 4, scope: !6480)
!6482 = !DILocation(line: 2409, column: 32, scope: !6480)
!6483 = !DILocation(line: 2409, column: 36, scope: !6480)
!6484 = !DILocation(line: 2409, column: 4, scope: !6480)
!6485 = !DILocation(line: 2410, column: 9, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6480, file: !3, line: 2410, column: 8)
!6487 = !DILocation(line: 2410, column: 14, scope: !6486)
!6488 = !DILocation(line: 2410, column: 18, scope: !6486)
!6489 = !DILocation(line: 2410, column: 11, scope: !6486)
!6490 = !DILocation(line: 2410, column: 25, scope: !6486)
!6491 = !DILocation(line: 2410, column: 29, scope: !6486)
!6492 = !DILocation(line: 2410, column: 33, scope: !6486)
!6493 = !DILocation(line: 2410, column: 41, scope: !6486)
!6494 = !DILocation(line: 2410, column: 8, scope: !6480)
!6495 = !DILocation(line: 2411, column: 20, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6486, file: !3, line: 2410, column: 58)
!6497 = !DILocation(line: 2411, column: 24, scope: !6496)
!6498 = !DILocation(line: 2411, column: 30, scope: !6496)
!6499 = !DILocation(line: 2411, column: 37, scope: !6496)
!6500 = !DILocation(line: 2411, column: 41, scope: !6496)
!6501 = !DILocation(line: 2411, column: 35, scope: !6496)
!6502 = !DILocation(line: 2411, column: 5, scope: !6496)
!6503 = !DILocation(line: 2411, column: 9, scope: !6496)
!6504 = !DILocation(line: 2411, column: 17, scope: !6496)
!6505 = !DILocation(line: 2412, column: 4, scope: !6496)
!6506 = !DILocation(line: 2413, column: 3, scope: !6480)
!6507 = !DILocation(line: 2414, column: 2, scope: !6476)
!6508 = !DILocation(line: 2406, column: 51, scope: !6472)
!6509 = !DILocation(line: 2406, column: 55, scope: !6472)
!6510 = !DILocation(line: 2406, column: 49, scope: !6472)
!6511 = !DILocation(line: 2406, column: 62, scope: !6472)
!6512 = !DILocation(line: 2406, column: 2, scope: !6472)
!6513 = distinct !{!6513, !6473, !6514}
!6514 = !DILocation(line: 2414, column: 2, scope: !6465)
!6515 = !DILocation(line: 2416, column: 31, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6442, file: !3, line: 2416, column: 6)
!6517 = !DILocation(line: 2416, column: 39, scope: !6516)
!6518 = !DILocation(line: 2416, column: 6, scope: !6516)
!6519 = !DILocation(line: 2416, column: 6, scope: !6442)
!6520 = !DILocation(line: 2417, column: 25, scope: !6516)
!6521 = !DILocation(line: 2417, column: 49, scope: !6516)
!6522 = !DILocation(line: 2417, column: 3, scope: !6516)
!6523 = !DILocation(line: 2419, column: 20, scope: !6442)
!6524 = !DILocation(line: 2419, column: 28, scope: !6442)
!6525 = !DILocation(line: 2419, column: 2, scope: !6442)
!6526 = !DILocation(line: 2420, column: 24, scope: !6442)
!6527 = !DILocation(line: 2420, column: 46, scope: !6442)
!6528 = !DILocation(line: 2420, column: 54, scope: !6442)
!6529 = !DILocation(line: 2420, column: 2, scope: !6442)
!6530 = !DILocation(line: 2422, column: 2, scope: !6442)
!6531 = distinct !DISubprogram(name: "CURVE_OT_spline_weight_set", scope: !3, file: !3, line: 2473, type: !4, scopeLine: 2474, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!6532 = !DILocalVariable(name: "ot", arg: 1, scope: !6531, file: !3, line: 2473, type: !6)
!6533 = !DILocation(line: 2473, column: 49, scope: !6531)
!6534 = !DILocation(line: 2476, column: 2, scope: !6531)
!6535 = !DILocation(line: 2476, column: 6, scope: !6531)
!6536 = !DILocation(line: 2476, column: 11, scope: !6531)
!6537 = !DILocation(line: 2477, column: 2, scope: !6531)
!6538 = !DILocation(line: 2477, column: 6, scope: !6531)
!6539 = !DILocation(line: 2477, column: 18, scope: !6531)
!6540 = !DILocation(line: 2478, column: 2, scope: !6531)
!6541 = !DILocation(line: 2478, column: 6, scope: !6531)
!6542 = !DILocation(line: 2478, column: 13, scope: !6531)
!6543 = !DILocation(line: 2481, column: 2, scope: !6531)
!6544 = !DILocation(line: 2481, column: 6, scope: !6531)
!6545 = !DILocation(line: 2481, column: 11, scope: !6531)
!6546 = !DILocation(line: 2482, column: 2, scope: !6531)
!6547 = !DILocation(line: 2482, column: 6, scope: !6531)
!6548 = !DILocation(line: 2482, column: 13, scope: !6531)
!6549 = !DILocation(line: 2483, column: 2, scope: !6531)
!6550 = !DILocation(line: 2483, column: 6, scope: !6531)
!6551 = !DILocation(line: 2483, column: 11, scope: !6531)
!6552 = !DILocation(line: 2486, column: 2, scope: !6531)
!6553 = !DILocation(line: 2486, column: 6, scope: !6531)
!6554 = !DILocation(line: 2486, column: 11, scope: !6531)
!6555 = !DILocation(line: 2489, column: 23, scope: !6531)
!6556 = !DILocation(line: 2489, column: 27, scope: !6531)
!6557 = !DILocation(line: 2489, column: 2, scope: !6531)
!6558 = !DILocation(line: 2490, column: 1, scope: !6531)
!6559 = distinct !DISubprogram(name: "set_goal_weight_exec", scope: !3, file: !3, line: 2442, type: !3224, scopeLine: 2443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!6560 = !DILocalVariable(name: "C", arg: 1, scope: !6559, file: !3, line: 2442, type: !3226)
!6561 = !DILocation(line: 2442, column: 43, scope: !6559)
!6562 = !DILocalVariable(name: "op", arg: 2, scope: !6559, file: !3, line: 2442, type: !3228)
!6563 = !DILocation(line: 2442, column: 58, scope: !6559)
!6564 = !DILocalVariable(name: "obedit", scope: !6559, file: !3, line: 2444, type: !3242)
!6565 = !DILocation(line: 2444, column: 10, scope: !6559)
!6566 = !DILocation(line: 2444, column: 40, scope: !6559)
!6567 = !DILocation(line: 2444, column: 19, scope: !6559)
!6568 = !DILocalVariable(name: "editnurb", scope: !6559, file: !3, line: 2445, type: !486)
!6569 = !DILocation(line: 2445, column: 12, scope: !6559)
!6570 = !DILocation(line: 2445, column: 44, scope: !6559)
!6571 = !DILocation(line: 2445, column: 23, scope: !6559)
!6572 = !DILocalVariable(name: "nu", scope: !6559, file: !3, line: 2446, type: !3163)
!6573 = !DILocation(line: 2446, column: 8, scope: !6559)
!6574 = !DILocalVariable(name: "bezt", scope: !6559, file: !3, line: 2447, type: !3104)
!6575 = !DILocation(line: 2447, column: 13, scope: !6559)
!6576 = !DILocalVariable(name: "bp", scope: !6559, file: !3, line: 2448, type: !3093)
!6577 = !DILocation(line: 2448, column: 10, scope: !6559)
!6578 = !DILocalVariable(name: "weight", scope: !6559, file: !3, line: 2449, type: !204)
!6579 = !DILocation(line: 2449, column: 8, scope: !6559)
!6580 = !DILocation(line: 2449, column: 31, scope: !6559)
!6581 = !DILocation(line: 2449, column: 35, scope: !6559)
!6582 = !DILocation(line: 2449, column: 17, scope: !6559)
!6583 = !DILocalVariable(name: "a", scope: !6559, file: !3, line: 2450, type: !22)
!6584 = !DILocation(line: 2450, column: 6, scope: !6559)
!6585 = !DILocation(line: 2452, column: 12, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 2452, column: 2)
!6587 = !DILocation(line: 2452, column: 22, scope: !6586)
!6588 = !DILocation(line: 2452, column: 10, scope: !6586)
!6589 = !DILocation(line: 2452, column: 7, scope: !6586)
!6590 = !DILocation(line: 2452, column: 29, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 2452, column: 2)
!6592 = !DILocation(line: 2452, column: 2, scope: !6586)
!6593 = !DILocation(line: 2453, column: 7, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6595, file: !3, line: 2453, column: 7)
!6595 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 2452, column: 48)
!6596 = !DILocation(line: 2453, column: 11, scope: !6594)
!6597 = !DILocation(line: 2453, column: 7, scope: !6595)
!6598 = !DILocation(line: 2454, column: 16, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6600, file: !3, line: 2454, column: 4)
!6600 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 2453, column: 17)
!6601 = !DILocation(line: 2454, column: 20, scope: !6599)
!6602 = !DILocation(line: 2454, column: 14, scope: !6599)
!6603 = !DILocation(line: 2454, column: 28, scope: !6599)
!6604 = !DILocation(line: 2454, column: 9, scope: !6599)
!6605 = !DILocation(line: 2454, column: 33, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 2454, column: 4)
!6607 = !DILocation(line: 2454, column: 37, scope: !6606)
!6608 = !DILocation(line: 2454, column: 41, scope: !6606)
!6609 = !DILocation(line: 2454, column: 35, scope: !6606)
!6610 = !DILocation(line: 2454, column: 4, scope: !6599)
!6611 = !DILocation(line: 2455, column: 9, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 2455, column: 9)
!6613 = distinct !DILexicalBlock(scope: !6606, file: !3, line: 2454, column: 61)
!6614 = !DILocation(line: 2455, column: 15, scope: !6612)
!6615 = !DILocation(line: 2455, column: 18, scope: !6612)
!6616 = !DILocation(line: 2455, column: 9, scope: !6613)
!6617 = !DILocation(line: 2456, column: 21, scope: !6612)
!6618 = !DILocation(line: 2456, column: 6, scope: !6612)
!6619 = !DILocation(line: 2456, column: 12, scope: !6612)
!6620 = !DILocation(line: 2456, column: 19, scope: !6612)
!6621 = !DILocation(line: 2457, column: 4, scope: !6613)
!6622 = !DILocation(line: 2454, column: 49, scope: !6606)
!6623 = !DILocation(line: 2454, column: 57, scope: !6606)
!6624 = !DILocation(line: 2454, column: 4, scope: !6606)
!6625 = distinct !{!6625, !6610, !6626}
!6626 = !DILocation(line: 2457, column: 4, scope: !6599)
!6627 = !DILocation(line: 2458, column: 3, scope: !6600)
!6628 = !DILocation(line: 2459, column: 12, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 2459, column: 12)
!6630 = !DILocation(line: 2459, column: 16, scope: !6629)
!6631 = !DILocation(line: 2459, column: 12, scope: !6594)
!6632 = !DILocation(line: 2460, column: 14, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2460, column: 4)
!6634 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 2459, column: 20)
!6635 = !DILocation(line: 2460, column: 18, scope: !6633)
!6636 = !DILocation(line: 2460, column: 12, scope: !6633)
!6637 = !DILocation(line: 2460, column: 24, scope: !6633)
!6638 = !DILocation(line: 2460, column: 9, scope: !6633)
!6639 = !DILocation(line: 2460, column: 29, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6633, file: !3, line: 2460, column: 4)
!6641 = !DILocation(line: 2460, column: 33, scope: !6640)
!6642 = !DILocation(line: 2460, column: 37, scope: !6640)
!6643 = !DILocation(line: 2460, column: 45, scope: !6640)
!6644 = !DILocation(line: 2460, column: 49, scope: !6640)
!6645 = !DILocation(line: 2460, column: 43, scope: !6640)
!6646 = !DILocation(line: 2460, column: 31, scope: !6640)
!6647 = !DILocation(line: 2460, column: 4, scope: !6633)
!6648 = !DILocation(line: 2461, column: 9, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 2461, column: 9)
!6650 = distinct !DILexicalBlock(scope: !6640, file: !3, line: 2460, column: 67)
!6651 = !DILocation(line: 2461, column: 13, scope: !6649)
!6652 = !DILocation(line: 2461, column: 16, scope: !6649)
!6653 = !DILocation(line: 2461, column: 9, scope: !6650)
!6654 = !DILocation(line: 2462, column: 19, scope: !6649)
!6655 = !DILocation(line: 2462, column: 6, scope: !6649)
!6656 = !DILocation(line: 2462, column: 10, scope: !6649)
!6657 = !DILocation(line: 2462, column: 17, scope: !6649)
!6658 = !DILocation(line: 2463, column: 4, scope: !6650)
!6659 = !DILocation(line: 2460, column: 57, scope: !6640)
!6660 = !DILocation(line: 2460, column: 63, scope: !6640)
!6661 = !DILocation(line: 2460, column: 4, scope: !6640)
!6662 = distinct !{!6662, !6647, !6663}
!6663 = !DILocation(line: 2463, column: 4, scope: !6633)
!6664 = !DILocation(line: 2464, column: 3, scope: !6634)
!6665 = !DILocation(line: 2465, column: 2, scope: !6595)
!6666 = !DILocation(line: 2452, column: 38, scope: !6591)
!6667 = !DILocation(line: 2452, column: 42, scope: !6591)
!6668 = !DILocation(line: 2452, column: 36, scope: !6591)
!6669 = !DILocation(line: 2452, column: 2, scope: !6591)
!6670 = distinct !{!6670, !6592, !6671}
!6671 = !DILocation(line: 2465, column: 2, scope: !6586)
!6672 = !DILocation(line: 2467, column: 20, scope: !6559)
!6673 = !DILocation(line: 2467, column: 28, scope: !6559)
!6674 = !DILocation(line: 2467, column: 2, scope: !6559)
!6675 = !DILocation(line: 2468, column: 24, scope: !6559)
!6676 = !DILocation(line: 2468, column: 46, scope: !6559)
!6677 = !DILocation(line: 2468, column: 54, scope: !6559)
!6678 = !DILocation(line: 2468, column: 2, scope: !6559)
!6679 = !DILocation(line: 2470, column: 2, scope: !6559)
!6680 = distinct !DISubprogram(name: "CURVE_OT_radius_set", scope: !3, file: !3, line: 2525, type: !4, scopeLine: 2526, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!6681 = !DILocalVariable(name: "ot", arg: 1, scope: !6680, file: !3, line: 2525, type: !6)
!6682 = !DILocation(line: 2525, column: 42, scope: !6680)
!6683 = !DILocation(line: 2528, column: 2, scope: !6680)
!6684 = !DILocation(line: 2528, column: 6, scope: !6680)
!6685 = !DILocation(line: 2528, column: 11, scope: !6680)
!6686 = !DILocation(line: 2529, column: 2, scope: !6680)
!6687 = !DILocation(line: 2529, column: 6, scope: !6680)
!6688 = !DILocation(line: 2529, column: 18, scope: !6680)
!6689 = !DILocation(line: 2530, column: 2, scope: !6680)
!6690 = !DILocation(line: 2530, column: 6, scope: !6680)
!6691 = !DILocation(line: 2530, column: 13, scope: !6680)
!6692 = !DILocation(line: 2533, column: 2, scope: !6680)
!6693 = !DILocation(line: 2533, column: 6, scope: !6680)
!6694 = !DILocation(line: 2533, column: 11, scope: !6680)
!6695 = !DILocation(line: 2534, column: 2, scope: !6680)
!6696 = !DILocation(line: 2534, column: 6, scope: !6680)
!6697 = !DILocation(line: 2534, column: 13, scope: !6680)
!6698 = !DILocation(line: 2535, column: 2, scope: !6680)
!6699 = !DILocation(line: 2535, column: 6, scope: !6680)
!6700 = !DILocation(line: 2535, column: 11, scope: !6680)
!6701 = !DILocation(line: 2538, column: 2, scope: !6680)
!6702 = !DILocation(line: 2538, column: 6, scope: !6680)
!6703 = !DILocation(line: 2538, column: 11, scope: !6680)
!6704 = !DILocation(line: 2541, column: 16, scope: !6680)
!6705 = !DILocation(line: 2541, column: 20, scope: !6680)
!6706 = !DILocation(line: 2541, column: 2, scope: !6680)
!6707 = !DILocation(line: 2542, column: 1, scope: !6680)
!6708 = distinct !DISubprogram(name: "set_radius_exec", scope: !3, file: !3, line: 2494, type: !3224, scopeLine: 2495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!6709 = !DILocalVariable(name: "C", arg: 1, scope: !6708, file: !3, line: 2494, type: !3226)
!6710 = !DILocation(line: 2494, column: 38, scope: !6708)
!6711 = !DILocalVariable(name: "op", arg: 2, scope: !6708, file: !3, line: 2494, type: !3228)
!6712 = !DILocation(line: 2494, column: 53, scope: !6708)
!6713 = !DILocalVariable(name: "obedit", scope: !6708, file: !3, line: 2496, type: !3242)
!6714 = !DILocation(line: 2496, column: 10, scope: !6708)
!6715 = !DILocation(line: 2496, column: 40, scope: !6708)
!6716 = !DILocation(line: 2496, column: 19, scope: !6708)
!6717 = !DILocalVariable(name: "editnurb", scope: !6708, file: !3, line: 2497, type: !486)
!6718 = !DILocation(line: 2497, column: 12, scope: !6708)
!6719 = !DILocation(line: 2497, column: 44, scope: !6708)
!6720 = !DILocation(line: 2497, column: 23, scope: !6708)
!6721 = !DILocalVariable(name: "nu", scope: !6708, file: !3, line: 2498, type: !3163)
!6722 = !DILocation(line: 2498, column: 8, scope: !6708)
!6723 = !DILocalVariable(name: "bezt", scope: !6708, file: !3, line: 2499, type: !3104)
!6724 = !DILocation(line: 2499, column: 13, scope: !6708)
!6725 = !DILocalVariable(name: "bp", scope: !6708, file: !3, line: 2500, type: !3093)
!6726 = !DILocation(line: 2500, column: 10, scope: !6708)
!6727 = !DILocalVariable(name: "radius", scope: !6708, file: !3, line: 2501, type: !204)
!6728 = !DILocation(line: 2501, column: 8, scope: !6708)
!6729 = !DILocation(line: 2501, column: 31, scope: !6708)
!6730 = !DILocation(line: 2501, column: 35, scope: !6708)
!6731 = !DILocation(line: 2501, column: 17, scope: !6708)
!6732 = !DILocalVariable(name: "a", scope: !6708, file: !3, line: 2502, type: !22)
!6733 = !DILocation(line: 2502, column: 6, scope: !6708)
!6734 = !DILocation(line: 2504, column: 12, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6708, file: !3, line: 2504, column: 2)
!6736 = !DILocation(line: 2504, column: 22, scope: !6735)
!6737 = !DILocation(line: 2504, column: 10, scope: !6735)
!6738 = !DILocation(line: 2504, column: 7, scope: !6735)
!6739 = !DILocation(line: 2504, column: 29, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6735, file: !3, line: 2504, column: 2)
!6741 = !DILocation(line: 2504, column: 2, scope: !6735)
!6742 = !DILocation(line: 2505, column: 7, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6744, file: !3, line: 2505, column: 7)
!6744 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 2504, column: 48)
!6745 = !DILocation(line: 2505, column: 11, scope: !6743)
!6746 = !DILocation(line: 2505, column: 7, scope: !6744)
!6747 = !DILocation(line: 2506, column: 16, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6749, file: !3, line: 2506, column: 4)
!6749 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 2505, column: 17)
!6750 = !DILocation(line: 2506, column: 20, scope: !6748)
!6751 = !DILocation(line: 2506, column: 14, scope: !6748)
!6752 = !DILocation(line: 2506, column: 28, scope: !6748)
!6753 = !DILocation(line: 2506, column: 9, scope: !6748)
!6754 = !DILocation(line: 2506, column: 33, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6748, file: !3, line: 2506, column: 4)
!6756 = !DILocation(line: 2506, column: 37, scope: !6755)
!6757 = !DILocation(line: 2506, column: 41, scope: !6755)
!6758 = !DILocation(line: 2506, column: 35, scope: !6755)
!6759 = !DILocation(line: 2506, column: 4, scope: !6748)
!6760 = !DILocation(line: 2507, column: 9, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6762, file: !3, line: 2507, column: 9)
!6762 = distinct !DILexicalBlock(scope: !6755, file: !3, line: 2506, column: 61)
!6763 = !DILocation(line: 2507, column: 15, scope: !6761)
!6764 = !DILocation(line: 2507, column: 18, scope: !6761)
!6765 = !DILocation(line: 2507, column: 9, scope: !6762)
!6766 = !DILocation(line: 2508, column: 21, scope: !6761)
!6767 = !DILocation(line: 2508, column: 6, scope: !6761)
!6768 = !DILocation(line: 2508, column: 12, scope: !6761)
!6769 = !DILocation(line: 2508, column: 19, scope: !6761)
!6770 = !DILocation(line: 2509, column: 4, scope: !6762)
!6771 = !DILocation(line: 2506, column: 49, scope: !6755)
!6772 = !DILocation(line: 2506, column: 57, scope: !6755)
!6773 = !DILocation(line: 2506, column: 4, scope: !6755)
!6774 = distinct !{!6774, !6759, !6775}
!6775 = !DILocation(line: 2509, column: 4, scope: !6748)
!6776 = !DILocation(line: 2510, column: 3, scope: !6749)
!6777 = !DILocation(line: 2511, column: 12, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 2511, column: 12)
!6779 = !DILocation(line: 2511, column: 16, scope: !6778)
!6780 = !DILocation(line: 2511, column: 12, scope: !6743)
!6781 = !DILocation(line: 2512, column: 14, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 2512, column: 4)
!6783 = distinct !DILexicalBlock(scope: !6778, file: !3, line: 2511, column: 20)
!6784 = !DILocation(line: 2512, column: 18, scope: !6782)
!6785 = !DILocation(line: 2512, column: 12, scope: !6782)
!6786 = !DILocation(line: 2512, column: 24, scope: !6782)
!6787 = !DILocation(line: 2512, column: 9, scope: !6782)
!6788 = !DILocation(line: 2512, column: 29, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6782, file: !3, line: 2512, column: 4)
!6790 = !DILocation(line: 2512, column: 33, scope: !6789)
!6791 = !DILocation(line: 2512, column: 37, scope: !6789)
!6792 = !DILocation(line: 2512, column: 45, scope: !6789)
!6793 = !DILocation(line: 2512, column: 49, scope: !6789)
!6794 = !DILocation(line: 2512, column: 43, scope: !6789)
!6795 = !DILocation(line: 2512, column: 31, scope: !6789)
!6796 = !DILocation(line: 2512, column: 4, scope: !6782)
!6797 = !DILocation(line: 2513, column: 9, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 2513, column: 9)
!6799 = distinct !DILexicalBlock(scope: !6789, file: !3, line: 2512, column: 67)
!6800 = !DILocation(line: 2513, column: 13, scope: !6798)
!6801 = !DILocation(line: 2513, column: 16, scope: !6798)
!6802 = !DILocation(line: 2513, column: 9, scope: !6799)
!6803 = !DILocation(line: 2514, column: 19, scope: !6798)
!6804 = !DILocation(line: 2514, column: 6, scope: !6798)
!6805 = !DILocation(line: 2514, column: 10, scope: !6798)
!6806 = !DILocation(line: 2514, column: 17, scope: !6798)
!6807 = !DILocation(line: 2515, column: 4, scope: !6799)
!6808 = !DILocation(line: 2512, column: 57, scope: !6789)
!6809 = !DILocation(line: 2512, column: 63, scope: !6789)
!6810 = !DILocation(line: 2512, column: 4, scope: !6789)
!6811 = distinct !{!6811, !6796, !6812}
!6812 = !DILocation(line: 2515, column: 4, scope: !6782)
!6813 = !DILocation(line: 2516, column: 3, scope: !6783)
!6814 = !DILocation(line: 2517, column: 2, scope: !6744)
!6815 = !DILocation(line: 2504, column: 38, scope: !6740)
!6816 = !DILocation(line: 2504, column: 42, scope: !6740)
!6817 = !DILocation(line: 2504, column: 36, scope: !6740)
!6818 = !DILocation(line: 2504, column: 2, scope: !6740)
!6819 = distinct !{!6819, !6741, !6820}
!6820 = !DILocation(line: 2517, column: 2, scope: !6735)
!6821 = !DILocation(line: 2519, column: 24, scope: !6708)
!6822 = !DILocation(line: 2519, column: 46, scope: !6708)
!6823 = !DILocation(line: 2519, column: 54, scope: !6708)
!6824 = !DILocation(line: 2519, column: 2, scope: !6708)
!6825 = !DILocation(line: 2520, column: 20, scope: !6708)
!6826 = !DILocation(line: 2520, column: 28, scope: !6708)
!6827 = !DILocation(line: 2520, column: 2, scope: !6708)
!6828 = !DILocation(line: 2522, column: 2, scope: !6708)
!6829 = distinct !DISubprogram(name: "CURVE_OT_smooth", scope: !3, file: !3, line: 2677, type: !4, scopeLine: 2678, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!6830 = !DILocalVariable(name: "ot", arg: 1, scope: !6829, file: !3, line: 2677, type: !6)
!6831 = !DILocation(line: 2677, column: 38, scope: !6829)
!6832 = !DILocation(line: 2680, column: 2, scope: !6829)
!6833 = !DILocation(line: 2680, column: 6, scope: !6829)
!6834 = !DILocation(line: 2680, column: 11, scope: !6829)
!6835 = !DILocation(line: 2681, column: 2, scope: !6829)
!6836 = !DILocation(line: 2681, column: 6, scope: !6829)
!6837 = !DILocation(line: 2681, column: 18, scope: !6829)
!6838 = !DILocation(line: 2682, column: 2, scope: !6829)
!6839 = !DILocation(line: 2682, column: 6, scope: !6829)
!6840 = !DILocation(line: 2682, column: 13, scope: !6829)
!6841 = !DILocation(line: 2685, column: 2, scope: !6829)
!6842 = !DILocation(line: 2685, column: 6, scope: !6829)
!6843 = !DILocation(line: 2685, column: 11, scope: !6829)
!6844 = !DILocation(line: 2686, column: 2, scope: !6829)
!6845 = !DILocation(line: 2686, column: 6, scope: !6829)
!6846 = !DILocation(line: 2686, column: 11, scope: !6829)
!6847 = !DILocation(line: 2689, column: 2, scope: !6829)
!6848 = !DILocation(line: 2689, column: 6, scope: !6829)
!6849 = !DILocation(line: 2689, column: 11, scope: !6829)
!6850 = !DILocation(line: 2690, column: 1, scope: !6829)
!6851 = distinct !DISubprogram(name: "smooth_exec", scope: !3, file: !3, line: 2595, type: !3224, scopeLine: 2596, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!6852 = !DILocalVariable(name: "C", arg: 1, scope: !6851, file: !3, line: 2595, type: !3226)
!6853 = !DILocation(line: 2595, column: 34, scope: !6851)
!6854 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !6851, file: !3, line: 2595, type: !3228)
!6855 = !DILocation(line: 2595, column: 49, scope: !6851)
!6856 = !DILocalVariable(name: "factor", scope: !6851, file: !3, line: 2597, type: !4639)
!6857 = !DILocation(line: 2597, column: 14, scope: !6851)
!6858 = !DILocalVariable(name: "obedit", scope: !6851, file: !3, line: 2598, type: !3242)
!6859 = !DILocation(line: 2598, column: 10, scope: !6851)
!6860 = !DILocation(line: 2598, column: 40, scope: !6851)
!6861 = !DILocation(line: 2598, column: 19, scope: !6851)
!6862 = !DILocalVariable(name: "editnurb", scope: !6851, file: !3, line: 2599, type: !486)
!6863 = !DILocation(line: 2599, column: 12, scope: !6851)
!6864 = !DILocation(line: 2599, column: 44, scope: !6851)
!6865 = !DILocation(line: 2599, column: 23, scope: !6851)
!6866 = !DILocalVariable(name: "nu", scope: !6851, file: !3, line: 2600, type: !3163)
!6867 = !DILocation(line: 2600, column: 8, scope: !6851)
!6868 = !DILocalVariable(name: "a", scope: !6851, file: !3, line: 2602, type: !22)
!6869 = !DILocation(line: 2602, column: 6, scope: !6851)
!6870 = !DILocalVariable(name: "a_end", scope: !6851, file: !3, line: 2602, type: !22)
!6871 = !DILocation(line: 2602, column: 9, scope: !6851)
!6872 = !DILocalVariable(name: "changed", scope: !6851, file: !3, line: 2603, type: !1081)
!6873 = !DILocation(line: 2603, column: 7, scope: !6851)
!6874 = !DILocation(line: 2605, column: 12, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 2605, column: 2)
!6876 = !DILocation(line: 2605, column: 22, scope: !6875)
!6877 = !DILocation(line: 2605, column: 10, scope: !6875)
!6878 = !DILocation(line: 2605, column: 7, scope: !6875)
!6879 = !DILocation(line: 2605, column: 29, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 2605, column: 2)
!6881 = !DILocation(line: 2605, column: 2, scope: !6875)
!6882 = !DILocation(line: 2606, column: 7, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 2606, column: 7)
!6884 = distinct !DILexicalBlock(scope: !6880, file: !3, line: 2605, column: 48)
!6885 = !DILocation(line: 2606, column: 11, scope: !6883)
!6886 = !DILocation(line: 2606, column: 7, scope: !6884)
!6887 = !DILocalVariable(name: "bezt_orig", scope: !6888, file: !3, line: 2608, type: !6889)
!6888 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 2606, column: 17)
!6889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6890, size: 64)
!6890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3105)
!6891 = !DILocation(line: 2608, column: 21, scope: !6888)
!6892 = !DILocation(line: 2608, column: 33, scope: !6888)
!6893 = !DILocation(line: 2608, column: 47, scope: !6888)
!6894 = !DILocation(line: 2608, column: 51, scope: !6888)
!6895 = !DILocalVariable(name: "bezt", scope: !6888, file: !3, line: 2609, type: !3104)
!6896 = !DILocation(line: 2609, column: 15, scope: !6888)
!6897 = !DILocation(line: 2610, column: 12, scope: !6888)
!6898 = !DILocation(line: 2613, column: 8, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 2613, column: 8)
!6900 = !DILocation(line: 2613, column: 12, scope: !6899)
!6901 = !DILocation(line: 2613, column: 18, scope: !6899)
!6902 = !DILocation(line: 2613, column: 8, scope: !6888)
!6903 = !DILocation(line: 2614, column: 7, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6899, file: !3, line: 2613, column: 36)
!6905 = !DILocation(line: 2615, column: 13, scope: !6904)
!6906 = !DILocation(line: 2615, column: 17, scope: !6904)
!6907 = !DILocation(line: 2615, column: 11, scope: !6904)
!6908 = !DILocation(line: 2616, column: 4, scope: !6904)
!6909 = !DILocation(line: 2618, column: 7, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6899, file: !3, line: 2617, column: 9)
!6911 = !DILocation(line: 2619, column: 13, scope: !6910)
!6912 = !DILocation(line: 2619, column: 17, scope: !6910)
!6913 = !DILocation(line: 2619, column: 23, scope: !6910)
!6914 = !DILocation(line: 2619, column: 11, scope: !6910)
!6915 = !DILocation(line: 2623, column: 4, scope: !6888)
!6916 = !DILocation(line: 2623, column: 11, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6918, file: !3, line: 2623, column: 4)
!6918 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 2623, column: 4)
!6919 = !DILocation(line: 2623, column: 15, scope: !6917)
!6920 = !DILocation(line: 2623, column: 13, scope: !6917)
!6921 = !DILocation(line: 2623, column: 4, scope: !6918)
!6922 = !DILocation(line: 2625, column: 13, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6917, file: !3, line: 2623, column: 27)
!6924 = !DILocation(line: 2625, column: 17, scope: !6923)
!6925 = !DILocation(line: 2625, column: 22, scope: !6923)
!6926 = !DILocation(line: 2625, column: 10, scope: !6923)
!6927 = !DILocation(line: 2626, column: 9, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6923, file: !3, line: 2626, column: 9)
!6929 = !DILocation(line: 2626, column: 15, scope: !6928)
!6930 = !DILocation(line: 2626, column: 18, scope: !6928)
!6931 = !DILocation(line: 2626, column: 9, scope: !6923)
!6932 = !DILocalVariable(name: "bezt_orig_prev", scope: !6933, file: !3, line: 2627, type: !6889)
!6933 = distinct !DILexicalBlock(scope: !6928, file: !3, line: 2626, column: 28)
!6934 = !DILocation(line: 2627, column: 23, scope: !6933)
!6935 = !DILocalVariable(name: "bezt_orig_next", scope: !6933, file: !3, line: 2627, type: !6889)
!6936 = !DILocation(line: 2627, column: 40, scope: !6933)
!6937 = !DILocation(line: 2629, column: 24, scope: !6933)
!6938 = !DILocation(line: 2629, column: 40, scope: !6933)
!6939 = !DILocation(line: 2629, column: 42, scope: !6933)
!6940 = !DILocation(line: 2629, column: 47, scope: !6933)
!6941 = !DILocation(line: 2629, column: 51, scope: !6933)
!6942 = !DILocation(line: 2629, column: 34, scope: !6933)
!6943 = !DILocation(line: 2629, column: 21, scope: !6933)
!6944 = !DILocation(line: 2630, column: 24, scope: !6933)
!6945 = !DILocation(line: 2630, column: 40, scope: !6933)
!6946 = !DILocation(line: 2630, column: 42, scope: !6933)
!6947 = !DILocation(line: 2630, column: 47, scope: !6933)
!6948 = !DILocation(line: 2630, column: 51, scope: !6933)
!6949 = !DILocation(line: 2630, column: 34, scope: !6933)
!6950 = !DILocation(line: 2630, column: 21, scope: !6933)
!6951 = !DILocation(line: 2632, column: 25, scope: !6933)
!6952 = !DILocation(line: 2632, column: 31, scope: !6933)
!6953 = !DILocation(line: 2632, column: 47, scope: !6933)
!6954 = !DILocation(line: 2632, column: 6, scope: !6933)
!6955 = !DILocation(line: 2634, column: 14, scope: !6933)
!6956 = !DILocation(line: 2635, column: 5, scope: !6933)
!6957 = !DILocation(line: 2636, column: 4, scope: !6923)
!6958 = !DILocation(line: 2623, column: 23, scope: !6917)
!6959 = !DILocation(line: 2623, column: 4, scope: !6917)
!6960 = distinct !{!6960, !6921, !6961}
!6961 = !DILocation(line: 2636, column: 4, scope: !6918)
!6962 = !DILocation(line: 2637, column: 4, scope: !6888)
!6963 = !DILocation(line: 2637, column: 22, scope: !6888)
!6964 = !DILocation(line: 2637, column: 14, scope: !6888)
!6965 = !DILocation(line: 2638, column: 8, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 2638, column: 8)
!6967 = !DILocation(line: 2638, column: 8, scope: !6888)
!6968 = !DILocation(line: 2639, column: 27, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6966, file: !3, line: 2638, column: 17)
!6970 = !DILocation(line: 2639, column: 5, scope: !6969)
!6971 = !DILocation(line: 2640, column: 4, scope: !6969)
!6972 = !DILocation(line: 2641, column: 3, scope: !6888)
!6973 = !DILocation(line: 2642, column: 12, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 2642, column: 12)
!6975 = !DILocation(line: 2642, column: 16, scope: !6974)
!6976 = !DILocation(line: 2642, column: 12, scope: !6883)
!6977 = !DILocalVariable(name: "bp_orig", scope: !6978, file: !3, line: 2644, type: !6979)
!6978 = distinct !DILexicalBlock(scope: !6974, file: !3, line: 2642, column: 20)
!6979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6980, size: 64)
!6980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3094)
!6981 = !DILocation(line: 2644, column: 18, scope: !6978)
!6982 = !DILocation(line: 2644, column: 28, scope: !6978)
!6983 = !DILocation(line: 2644, column: 42, scope: !6978)
!6984 = !DILocation(line: 2644, column: 46, scope: !6978)
!6985 = !DILocalVariable(name: "bp", scope: !6978, file: !3, line: 2645, type: !3093)
!6986 = !DILocation(line: 2645, column: 12, scope: !6978)
!6987 = !DILocation(line: 2647, column: 8, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 2647, column: 8)
!6989 = !DILocation(line: 2647, column: 12, scope: !6988)
!6990 = !DILocation(line: 2647, column: 18, scope: !6988)
!6991 = !DILocation(line: 2647, column: 8, scope: !6978)
!6992 = !DILocation(line: 2648, column: 7, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 2647, column: 36)
!6994 = !DILocation(line: 2649, column: 13, scope: !6993)
!6995 = !DILocation(line: 2649, column: 17, scope: !6993)
!6996 = !DILocation(line: 2649, column: 11, scope: !6993)
!6997 = !DILocation(line: 2650, column: 4, scope: !6993)
!6998 = !DILocation(line: 2652, column: 7, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 2651, column: 9)
!7000 = !DILocation(line: 2653, column: 13, scope: !6999)
!7001 = !DILocation(line: 2653, column: 17, scope: !6999)
!7002 = !DILocation(line: 2653, column: 23, scope: !6999)
!7003 = !DILocation(line: 2653, column: 11, scope: !6999)
!7004 = !DILocation(line: 2656, column: 4, scope: !6978)
!7005 = !DILocation(line: 2656, column: 11, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !7007, file: !3, line: 2656, column: 4)
!7007 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 2656, column: 4)
!7008 = !DILocation(line: 2656, column: 15, scope: !7006)
!7009 = !DILocation(line: 2656, column: 13, scope: !7006)
!7010 = !DILocation(line: 2656, column: 4, scope: !7007)
!7011 = !DILocation(line: 2657, column: 11, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 2656, column: 27)
!7013 = !DILocation(line: 2657, column: 15, scope: !7012)
!7014 = !DILocation(line: 2657, column: 18, scope: !7012)
!7015 = !DILocation(line: 2657, column: 8, scope: !7012)
!7016 = !DILocation(line: 2658, column: 9, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7012, file: !3, line: 2658, column: 9)
!7018 = !DILocation(line: 2658, column: 13, scope: !7017)
!7019 = !DILocation(line: 2658, column: 16, scope: !7017)
!7020 = !DILocation(line: 2658, column: 9, scope: !7012)
!7021 = !DILocalVariable(name: "bp_orig_prev", scope: !7022, file: !3, line: 2659, type: !6979)
!7022 = distinct !DILexicalBlock(scope: !7017, file: !3, line: 2658, column: 26)
!7023 = !DILocation(line: 2659, column: 20, scope: !7022)
!7024 = !DILocalVariable(name: "bp_orig_next", scope: !7022, file: !3, line: 2659, type: !6979)
!7025 = !DILocation(line: 2659, column: 35, scope: !7022)
!7026 = !DILocation(line: 2661, column: 22, scope: !7022)
!7027 = !DILocation(line: 2661, column: 36, scope: !7022)
!7028 = !DILocation(line: 2661, column: 38, scope: !7022)
!7029 = !DILocation(line: 2661, column: 43, scope: !7022)
!7030 = !DILocation(line: 2661, column: 47, scope: !7022)
!7031 = !DILocation(line: 2661, column: 30, scope: !7022)
!7032 = !DILocation(line: 2661, column: 19, scope: !7022)
!7033 = !DILocation(line: 2662, column: 22, scope: !7022)
!7034 = !DILocation(line: 2662, column: 36, scope: !7022)
!7035 = !DILocation(line: 2662, column: 38, scope: !7022)
!7036 = !DILocation(line: 2662, column: 43, scope: !7022)
!7037 = !DILocation(line: 2662, column: 47, scope: !7022)
!7038 = !DILocation(line: 2662, column: 30, scope: !7022)
!7039 = !DILocation(line: 2662, column: 19, scope: !7022)
!7040 = !DILocation(line: 2664, column: 23, scope: !7022)
!7041 = !DILocation(line: 2664, column: 27, scope: !7022)
!7042 = !DILocation(line: 2664, column: 41, scope: !7022)
!7043 = !DILocation(line: 2664, column: 6, scope: !7022)
!7044 = !DILocation(line: 2665, column: 5, scope: !7022)
!7045 = !DILocation(line: 2666, column: 4, scope: !7012)
!7046 = !DILocation(line: 2656, column: 23, scope: !7006)
!7047 = !DILocation(line: 2656, column: 4, scope: !7006)
!7048 = distinct !{!7048, !7010, !7049}
!7049 = !DILocation(line: 2666, column: 4, scope: !7007)
!7050 = !DILocation(line: 2667, column: 4, scope: !6978)
!7051 = !DILocation(line: 2667, column: 22, scope: !6978)
!7052 = !DILocation(line: 2667, column: 14, scope: !6978)
!7053 = !DILocation(line: 2668, column: 3, scope: !6978)
!7054 = !DILocation(line: 2669, column: 2, scope: !6884)
!7055 = !DILocation(line: 2605, column: 38, scope: !6880)
!7056 = !DILocation(line: 2605, column: 42, scope: !6880)
!7057 = !DILocation(line: 2605, column: 36, scope: !6880)
!7058 = !DILocation(line: 2605, column: 2, scope: !6880)
!7059 = distinct !{!7059, !6881, !7060}
!7060 = !DILocation(line: 2669, column: 2, scope: !6875)
!7061 = !DILocation(line: 2671, column: 24, scope: !6851)
!7062 = !DILocation(line: 2671, column: 46, scope: !6851)
!7063 = !DILocation(line: 2671, column: 54, scope: !6851)
!7064 = !DILocation(line: 2671, column: 2, scope: !6851)
!7065 = !DILocation(line: 2672, column: 20, scope: !6851)
!7066 = !DILocation(line: 2672, column: 28, scope: !6851)
!7067 = !DILocation(line: 2672, column: 2, scope: !6851)
!7068 = !DILocation(line: 2674, column: 2, scope: !6851)
!7069 = distinct !DISubprogram(name: "CURVE_OT_smooth_weight", scope: !3, file: !3, line: 2868, type: !4, scopeLine: 2869, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!7070 = !DILocalVariable(name: "ot", arg: 1, scope: !7069, file: !3, line: 2868, type: !6)
!7071 = !DILocation(line: 2868, column: 45, scope: !7069)
!7072 = !DILocation(line: 2871, column: 2, scope: !7069)
!7073 = !DILocation(line: 2871, column: 6, scope: !7069)
!7074 = !DILocation(line: 2871, column: 11, scope: !7069)
!7075 = !DILocation(line: 2872, column: 2, scope: !7069)
!7076 = !DILocation(line: 2872, column: 6, scope: !7069)
!7077 = !DILocation(line: 2872, column: 18, scope: !7069)
!7078 = !DILocation(line: 2873, column: 2, scope: !7069)
!7079 = !DILocation(line: 2873, column: 6, scope: !7069)
!7080 = !DILocation(line: 2873, column: 13, scope: !7069)
!7081 = !DILocation(line: 2876, column: 2, scope: !7069)
!7082 = !DILocation(line: 2876, column: 6, scope: !7069)
!7083 = !DILocation(line: 2876, column: 11, scope: !7069)
!7084 = !DILocation(line: 2877, column: 2, scope: !7069)
!7085 = !DILocation(line: 2877, column: 6, scope: !7069)
!7086 = !DILocation(line: 2877, column: 11, scope: !7069)
!7087 = !DILocation(line: 2880, column: 2, scope: !7069)
!7088 = !DILocation(line: 2880, column: 6, scope: !7069)
!7089 = !DILocation(line: 2880, column: 11, scope: !7069)
!7090 = !DILocation(line: 2881, column: 1, scope: !7069)
!7091 = distinct !DISubprogram(name: "curve_smooth_weight_exec", scope: !3, file: !3, line: 2855, type: !3224, scopeLine: 2856, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!7092 = !DILocalVariable(name: "C", arg: 1, scope: !7091, file: !3, line: 2855, type: !3226)
!7093 = !DILocation(line: 2855, column: 47, scope: !7091)
!7094 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !7091, file: !3, line: 2855, type: !3228)
!7095 = !DILocation(line: 2855, column: 62, scope: !7091)
!7096 = !DILocalVariable(name: "obedit", scope: !7091, file: !3, line: 2857, type: !3242)
!7097 = !DILocation(line: 2857, column: 10, scope: !7091)
!7098 = !DILocation(line: 2857, column: 40, scope: !7091)
!7099 = !DILocation(line: 2857, column: 19, scope: !7091)
!7100 = !DILocalVariable(name: "editnurb", scope: !7091, file: !3, line: 2858, type: !486)
!7101 = !DILocation(line: 2858, column: 12, scope: !7091)
!7102 = !DILocation(line: 2858, column: 44, scope: !7091)
!7103 = !DILocation(line: 2858, column: 23, scope: !7091)
!7104 = !DILocation(line: 2860, column: 21, scope: !7091)
!7105 = !DILocation(line: 2860, column: 2, scope: !7091)
!7106 = !DILocation(line: 2862, column: 24, scope: !7091)
!7107 = !DILocation(line: 2862, column: 46, scope: !7091)
!7108 = !DILocation(line: 2862, column: 54, scope: !7091)
!7109 = !DILocation(line: 2862, column: 2, scope: !7091)
!7110 = !DILocation(line: 2863, column: 20, scope: !7091)
!7111 = !DILocation(line: 2863, column: 28, scope: !7091)
!7112 = !DILocation(line: 2863, column: 2, scope: !7091)
!7113 = !DILocation(line: 2865, column: 2, scope: !7091)
!7114 = distinct !DISubprogram(name: "CURVE_OT_smooth_radius", scope: !3, file: !3, line: 2896, type: !4, scopeLine: 2897, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!7115 = !DILocalVariable(name: "ot", arg: 1, scope: !7114, file: !3, line: 2896, type: !6)
!7116 = !DILocation(line: 2896, column: 45, scope: !7114)
!7117 = !DILocation(line: 2899, column: 2, scope: !7114)
!7118 = !DILocation(line: 2899, column: 6, scope: !7114)
!7119 = !DILocation(line: 2899, column: 11, scope: !7114)
!7120 = !DILocation(line: 2900, column: 2, scope: !7114)
!7121 = !DILocation(line: 2900, column: 6, scope: !7114)
!7122 = !DILocation(line: 2900, column: 18, scope: !7114)
!7123 = !DILocation(line: 2901, column: 2, scope: !7114)
!7124 = !DILocation(line: 2901, column: 6, scope: !7114)
!7125 = !DILocation(line: 2901, column: 13, scope: !7114)
!7126 = !DILocation(line: 2904, column: 2, scope: !7114)
!7127 = !DILocation(line: 2904, column: 6, scope: !7114)
!7128 = !DILocation(line: 2904, column: 11, scope: !7114)
!7129 = !DILocation(line: 2905, column: 2, scope: !7114)
!7130 = !DILocation(line: 2905, column: 6, scope: !7114)
!7131 = !DILocation(line: 2905, column: 11, scope: !7114)
!7132 = !DILocation(line: 2908, column: 2, scope: !7114)
!7133 = !DILocation(line: 2908, column: 6, scope: !7114)
!7134 = !DILocation(line: 2908, column: 11, scope: !7114)
!7135 = !DILocation(line: 2909, column: 1, scope: !7114)
!7136 = distinct !DISubprogram(name: "curve_smooth_radius_exec", scope: !3, file: !3, line: 2883, type: !3224, scopeLine: 2884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!7137 = !DILocalVariable(name: "C", arg: 1, scope: !7136, file: !3, line: 2883, type: !3226)
!7138 = !DILocation(line: 2883, column: 47, scope: !7136)
!7139 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !7136, file: !3, line: 2883, type: !3228)
!7140 = !DILocation(line: 2883, column: 62, scope: !7136)
!7141 = !DILocalVariable(name: "obedit", scope: !7136, file: !3, line: 2885, type: !3242)
!7142 = !DILocation(line: 2885, column: 10, scope: !7136)
!7143 = !DILocation(line: 2885, column: 40, scope: !7136)
!7144 = !DILocation(line: 2885, column: 19, scope: !7136)
!7145 = !DILocalVariable(name: "editnurb", scope: !7136, file: !3, line: 2886, type: !486)
!7146 = !DILocation(line: 2886, column: 12, scope: !7136)
!7147 = !DILocation(line: 2886, column: 44, scope: !7136)
!7148 = !DILocation(line: 2886, column: 23, scope: !7136)
!7149 = !DILocation(line: 2888, column: 21, scope: !7136)
!7150 = !DILocation(line: 2888, column: 2, scope: !7136)
!7151 = !DILocation(line: 2890, column: 24, scope: !7136)
!7152 = !DILocation(line: 2890, column: 46, scope: !7136)
!7153 = !DILocation(line: 2890, column: 54, scope: !7136)
!7154 = !DILocation(line: 2890, column: 2, scope: !7136)
!7155 = !DILocation(line: 2891, column: 20, scope: !7136)
!7156 = !DILocation(line: 2891, column: 28, scope: !7136)
!7157 = !DILocation(line: 2891, column: 2, scope: !7136)
!7158 = !DILocation(line: 2893, column: 2, scope: !7136)
!7159 = distinct !DISubprogram(name: "CURVE_OT_smooth_tilt", scope: !3, file: !3, line: 2924, type: !4, scopeLine: 2925, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!7160 = !DILocalVariable(name: "ot", arg: 1, scope: !7159, file: !3, line: 2924, type: !6)
!7161 = !DILocation(line: 2924, column: 43, scope: !7159)
!7162 = !DILocation(line: 2927, column: 2, scope: !7159)
!7163 = !DILocation(line: 2927, column: 6, scope: !7159)
!7164 = !DILocation(line: 2927, column: 11, scope: !7159)
!7165 = !DILocation(line: 2928, column: 2, scope: !7159)
!7166 = !DILocation(line: 2928, column: 6, scope: !7159)
!7167 = !DILocation(line: 2928, column: 18, scope: !7159)
!7168 = !DILocation(line: 2929, column: 2, scope: !7159)
!7169 = !DILocation(line: 2929, column: 6, scope: !7159)
!7170 = !DILocation(line: 2929, column: 13, scope: !7159)
!7171 = !DILocation(line: 2932, column: 2, scope: !7159)
!7172 = !DILocation(line: 2932, column: 6, scope: !7159)
!7173 = !DILocation(line: 2932, column: 11, scope: !7159)
!7174 = !DILocation(line: 2933, column: 2, scope: !7159)
!7175 = !DILocation(line: 2933, column: 6, scope: !7159)
!7176 = !DILocation(line: 2933, column: 11, scope: !7159)
!7177 = !DILocation(line: 2936, column: 2, scope: !7159)
!7178 = !DILocation(line: 2936, column: 6, scope: !7159)
!7179 = !DILocation(line: 2936, column: 11, scope: !7159)
!7180 = !DILocation(line: 2937, column: 1, scope: !7159)
!7181 = distinct !DISubprogram(name: "curve_smooth_tilt_exec", scope: !3, file: !3, line: 2911, type: !3224, scopeLine: 2912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!7182 = !DILocalVariable(name: "C", arg: 1, scope: !7181, file: !3, line: 2911, type: !3226)
!7183 = !DILocation(line: 2911, column: 45, scope: !7181)
!7184 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !7181, file: !3, line: 2911, type: !3228)
!7185 = !DILocation(line: 2911, column: 60, scope: !7181)
!7186 = !DILocalVariable(name: "obedit", scope: !7181, file: !3, line: 2913, type: !3242)
!7187 = !DILocation(line: 2913, column: 10, scope: !7181)
!7188 = !DILocation(line: 2913, column: 40, scope: !7181)
!7189 = !DILocation(line: 2913, column: 19, scope: !7181)
!7190 = !DILocalVariable(name: "editnurb", scope: !7181, file: !3, line: 2914, type: !486)
!7191 = !DILocation(line: 2914, column: 12, scope: !7181)
!7192 = !DILocation(line: 2914, column: 44, scope: !7181)
!7193 = !DILocation(line: 2914, column: 23, scope: !7181)
!7194 = !DILocation(line: 2916, column: 21, scope: !7181)
!7195 = !DILocation(line: 2916, column: 2, scope: !7181)
!7196 = !DILocation(line: 2918, column: 24, scope: !7181)
!7197 = !DILocation(line: 2918, column: 46, scope: !7181)
!7198 = !DILocation(line: 2918, column: 54, scope: !7181)
!7199 = !DILocation(line: 2918, column: 2, scope: !7181)
!7200 = !DILocation(line: 2919, column: 20, scope: !7181)
!7201 = !DILocation(line: 2919, column: 28, scope: !7181)
!7202 = !DILocation(line: 2919, column: 2, scope: !7181)
!7203 = !DILocation(line: 2921, column: 2, scope: !7181)
!7204 = distinct !DISubprogram(name: "selectend_nurb", scope: !3, file: !3, line: 3010, type: !7205, scopeLine: 3011, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!7205 = !DISubroutineType(types: !7206)
!7206 = !{null, !3242, !7207, !1081, !1081}
!7207 = !DIDerivedType(tag: DW_TAG_typedef, name: "eEndPoint_Types", file: !3, line: 106, baseType: !1900)
!7208 = !DILocalVariable(name: "obedit", arg: 1, scope: !7204, file: !3, line: 3010, type: !3242)
!7209 = !DILocation(line: 3010, column: 29, scope: !7204)
!7210 = !DILocalVariable(name: "selfirst", arg: 2, scope: !7204, file: !3, line: 3010, type: !7207)
!7211 = !DILocation(line: 3010, column: 53, scope: !7204)
!7212 = !DILocalVariable(name: "doswap", arg: 3, scope: !7204, file: !3, line: 3010, type: !1081)
!7213 = !DILocation(line: 3010, column: 68, scope: !7204)
!7214 = !DILocalVariable(name: "selstatus", arg: 4, scope: !7204, file: !3, line: 3010, type: !1081)
!7215 = !DILocation(line: 3010, column: 81, scope: !7204)
!7216 = !DILocalVariable(name: "editnurb", scope: !7204, file: !3, line: 3012, type: !486)
!7217 = !DILocation(line: 3012, column: 12, scope: !7204)
!7218 = !DILocation(line: 3012, column: 44, scope: !7204)
!7219 = !DILocation(line: 3012, column: 23, scope: !7204)
!7220 = !DILocalVariable(name: "nu", scope: !7204, file: !3, line: 3013, type: !3163)
!7221 = !DILocation(line: 3013, column: 8, scope: !7204)
!7222 = !DILocalVariable(name: "bp", scope: !7204, file: !3, line: 3014, type: !3093)
!7223 = !DILocation(line: 3014, column: 10, scope: !7204)
!7224 = !DILocalVariable(name: "bezt", scope: !7204, file: !3, line: 3015, type: !3104)
!7225 = !DILocation(line: 3015, column: 13, scope: !7204)
!7226 = !DILocalVariable(name: "cu", scope: !7204, file: !3, line: 3016, type: !2953)
!7227 = !DILocation(line: 3016, column: 9, scope: !7204)
!7228 = !DILocalVariable(name: "a", scope: !7204, file: !3, line: 3017, type: !22)
!7229 = !DILocation(line: 3017, column: 6, scope: !7204)
!7230 = !DILocation(line: 3019, column: 6, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7204, file: !3, line: 3019, column: 6)
!7232 = !DILocation(line: 3019, column: 13, scope: !7231)
!7233 = !DILocation(line: 3019, column: 6, scope: !7204)
!7234 = !DILocation(line: 3019, column: 22, scope: !7231)
!7235 = !DILocation(line: 3021, column: 16, scope: !7204)
!7236 = !DILocation(line: 3021, column: 24, scope: !7204)
!7237 = !DILocation(line: 3021, column: 7, scope: !7204)
!7238 = !DILocation(line: 3021, column: 5, scope: !7204)
!7239 = !DILocation(line: 3022, column: 2, scope: !7204)
!7240 = !DILocation(line: 3022, column: 6, scope: !7204)
!7241 = !DILocation(line: 3022, column: 14, scope: !7204)
!7242 = !DILocation(line: 3024, column: 12, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7204, file: !3, line: 3024, column: 2)
!7244 = !DILocation(line: 3024, column: 22, scope: !7243)
!7245 = !DILocation(line: 3024, column: 10, scope: !7243)
!7246 = !DILocation(line: 3024, column: 7, scope: !7243)
!7247 = !DILocation(line: 3024, column: 29, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7243, file: !3, line: 3024, column: 2)
!7249 = !DILocation(line: 3024, column: 2, scope: !7243)
!7250 = !DILocation(line: 3025, column: 7, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 3025, column: 7)
!7252 = distinct !DILexicalBlock(scope: !7248, file: !3, line: 3024, column: 48)
!7253 = !DILocation(line: 3025, column: 11, scope: !7251)
!7254 = !DILocation(line: 3025, column: 16, scope: !7251)
!7255 = !DILocation(line: 3025, column: 7, scope: !7252)
!7256 = !DILocation(line: 3026, column: 8, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7251, file: !3, line: 3025, column: 30)
!7258 = !DILocation(line: 3026, column: 12, scope: !7257)
!7259 = !DILocation(line: 3026, column: 6, scope: !7257)
!7260 = !DILocation(line: 3029, column: 8, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 3029, column: 8)
!7262 = !DILocation(line: 3029, column: 17, scope: !7261)
!7263 = !DILocation(line: 3029, column: 8, scope: !7257)
!7264 = !DILocation(line: 3030, column: 13, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7261, file: !3, line: 3029, column: 26)
!7266 = !DILocation(line: 3030, column: 17, scope: !7265)
!7267 = !DILocation(line: 3030, column: 22, scope: !7265)
!7268 = !DILocation(line: 3030, column: 24, scope: !7265)
!7269 = !DILocation(line: 3030, column: 10, scope: !7265)
!7270 = !DILocation(line: 3031, column: 4, scope: !7265)
!7271 = !DILocation(line: 3033, column: 12, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7261, file: !3, line: 3032, column: 9)
!7273 = !DILocation(line: 3033, column: 16, scope: !7272)
!7274 = !DILocation(line: 3033, column: 10, scope: !7272)
!7275 = !DILocation(line: 3036, column: 4, scope: !7257)
!7276 = !DILocation(line: 3036, column: 12, scope: !7257)
!7277 = !DILocalVariable(name: "sel", scope: !7278, file: !3, line: 3037, type: !1081)
!7278 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 3036, column: 16)
!7279 = !DILocation(line: 3037, column: 10, scope: !7278)
!7280 = !DILocation(line: 3038, column: 9, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7278, file: !3, line: 3038, column: 9)
!7282 = !DILocation(line: 3038, column: 9, scope: !7278)
!7283 = !DILocation(line: 3038, column: 48, scope: !7281)
!7284 = !DILocation(line: 3038, column: 23, scope: !7281)
!7285 = !DILocation(line: 3038, column: 21, scope: !7281)
!7286 = !DILocation(line: 3038, column: 17, scope: !7281)
!7287 = !DILocation(line: 3039, column: 33, scope: !7281)
!7288 = !DILocation(line: 3039, column: 39, scope: !7281)
!7289 = !DILocation(line: 3039, column: 16, scope: !7281)
!7290 = !DILocation(line: 3039, column: 14, scope: !7281)
!7291 = !DILocation(line: 3041, column: 9, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7278, file: !3, line: 3041, column: 9)
!7293 = !DILocation(line: 3041, column: 13, scope: !7292)
!7294 = !DILocation(line: 3041, column: 9, scope: !7278)
!7295 = !DILocation(line: 3041, column: 22, scope: !7292)
!7296 = distinct !{!7296, !7275, !7297}
!7297 = !DILocation(line: 3042, column: 4, scope: !7257)
!7298 = !DILocation(line: 3043, column: 3, scope: !7257)
!7299 = !DILocation(line: 3045, column: 8, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7251, file: !3, line: 3044, column: 8)
!7301 = !DILocation(line: 3045, column: 12, scope: !7300)
!7302 = !DILocation(line: 3045, column: 20, scope: !7300)
!7303 = !DILocation(line: 3045, column: 24, scope: !7300)
!7304 = !DILocation(line: 3045, column: 18, scope: !7300)
!7305 = !DILocation(line: 3045, column: 6, scope: !7300)
!7306 = !DILocation(line: 3048, column: 8, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7300, file: !3, line: 3048, column: 8)
!7308 = !DILocation(line: 3048, column: 17, scope: !7307)
!7309 = !DILocation(line: 3048, column: 8, scope: !7300)
!7310 = !DILocation(line: 3049, column: 11, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 3048, column: 26)
!7312 = !DILocation(line: 3049, column: 15, scope: !7311)
!7313 = !DILocation(line: 3049, column: 18, scope: !7311)
!7314 = !DILocation(line: 3049, column: 20, scope: !7311)
!7315 = !DILocation(line: 3049, column: 8, scope: !7311)
!7316 = !DILocation(line: 3050, column: 4, scope: !7311)
!7317 = !DILocation(line: 3052, column: 10, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 3051, column: 9)
!7319 = !DILocation(line: 3052, column: 14, scope: !7318)
!7320 = !DILocation(line: 3052, column: 8, scope: !7318)
!7321 = !DILocation(line: 3055, column: 4, scope: !7300)
!7322 = !DILocation(line: 3055, column: 12, scope: !7300)
!7323 = !DILocation(line: 3056, column: 9, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7325, file: !3, line: 3056, column: 9)
!7325 = distinct !DILexicalBlock(scope: !7300, file: !3, line: 3055, column: 16)
!7326 = !DILocation(line: 3056, column: 13, scope: !7324)
!7327 = !DILocation(line: 3056, column: 18, scope: !7324)
!7328 = !DILocation(line: 3056, column: 9, scope: !7325)
!7329 = !DILocalVariable(name: "sel", scope: !7330, file: !3, line: 3057, type: !1081)
!7330 = distinct !DILexicalBlock(scope: !7324, file: !3, line: 3056, column: 24)
!7331 = !DILocation(line: 3057, column: 11, scope: !7330)
!7332 = !DILocation(line: 3058, column: 10, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 3058, column: 10)
!7334 = !DILocation(line: 3058, column: 10, scope: !7330)
!7335 = !DILocation(line: 3058, column: 46, scope: !7333)
!7336 = !DILocation(line: 3058, column: 24, scope: !7333)
!7337 = !DILocation(line: 3058, column: 22, scope: !7333)
!7338 = !DILocation(line: 3058, column: 18, scope: !7333)
!7339 = !DILocation(line: 3059, column: 31, scope: !7333)
!7340 = !DILocation(line: 3059, column: 35, scope: !7333)
!7341 = !DILocation(line: 3059, column: 17, scope: !7333)
!7342 = !DILocation(line: 3059, column: 15, scope: !7333)
!7343 = !DILocation(line: 3061, column: 10, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 3061, column: 10)
!7345 = !DILocation(line: 3061, column: 14, scope: !7344)
!7346 = !DILocation(line: 3061, column: 10, scope: !7330)
!7347 = !DILocation(line: 3061, column: 23, scope: !7344)
!7348 = !DILocation(line: 3062, column: 5, scope: !7330)
!7349 = distinct !{!7349, !7321, !7350}
!7350 = !DILocation(line: 3063, column: 4, scope: !7300)
!7351 = !DILocation(line: 3065, column: 2, scope: !7252)
!7352 = !DILocation(line: 3024, column: 38, scope: !7248)
!7353 = !DILocation(line: 3024, column: 42, scope: !7248)
!7354 = !DILocation(line: 3024, column: 36, scope: !7248)
!7355 = !DILocation(line: 3024, column: 2, scope: !7248)
!7356 = distinct !{!7356, !7249, !7357}
!7357 = !DILocation(line: 3065, column: 2, scope: !7243)
!7358 = !DILocation(line: 3066, column: 1, scope: !7204)
!7359 = distinct !DISubprogram(name: "swap_selection_beztriple", scope: !3, file: !3, line: 168, type: !7360, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!7360 = !DISubroutineType(types: !7361)
!7361 = !{!1081, !3104}
!7362 = !DILocalVariable(name: "bezt", arg: 1, scope: !7359, file: !3, line: 168, type: !3104)
!7363 = !DILocation(line: 168, column: 49, scope: !7359)
!7364 = !DILocation(line: 170, column: 6, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7359, file: !3, line: 170, column: 6)
!7366 = !DILocation(line: 170, column: 12, scope: !7365)
!7367 = !DILocation(line: 170, column: 15, scope: !7365)
!7368 = !DILocation(line: 170, column: 6, scope: !7359)
!7369 = !DILocation(line: 171, column: 27, scope: !7365)
!7370 = !DILocation(line: 171, column: 10, scope: !7365)
!7371 = !DILocation(line: 171, column: 3, scope: !7365)
!7372 = !DILocation(line: 173, column: 27, scope: !7365)
!7373 = !DILocation(line: 173, column: 10, scope: !7365)
!7374 = !DILocation(line: 173, column: 3, scope: !7365)
!7375 = !DILocation(line: 174, column: 1, scope: !7359)
!7376 = distinct !DISubprogram(name: "select_beztriple", scope: !3, file: !3, line: 131, type: !7377, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!7377 = !DISubroutineType(types: !7378)
!7378 = !{!1081, !3104, !1081, !48, !7379}
!7379 = !DIDerivedType(tag: DW_TAG_typedef, name: "eVisible_Types", file: !3, line: 101, baseType: !1896)
!7380 = !DILocalVariable(name: "bezt", arg: 1, scope: !7376, file: !3, line: 131, type: !3104)
!7381 = !DILocation(line: 131, column: 41, scope: !7376)
!7382 = !DILocalVariable(name: "selstatus", arg: 2, scope: !7376, file: !3, line: 131, type: !1081)
!7383 = !DILocation(line: 131, column: 52, scope: !7376)
!7384 = !DILocalVariable(name: "flag", arg: 3, scope: !7376, file: !3, line: 131, type: !48)
!7385 = !DILocation(line: 131, column: 69, scope: !7376)
!7386 = !DILocalVariable(name: "hidden", arg: 4, scope: !7376, file: !3, line: 131, type: !7379)
!7387 = !DILocation(line: 131, column: 90, scope: !7376)
!7388 = !DILocation(line: 133, column: 7, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7376, file: !3, line: 133, column: 6)
!7390 = !DILocation(line: 133, column: 13, scope: !7389)
!7391 = !DILocation(line: 133, column: 18, scope: !7389)
!7392 = !DILocation(line: 133, column: 24, scope: !7389)
!7393 = !DILocation(line: 133, column: 28, scope: !7389)
!7394 = !DILocation(line: 133, column: 35, scope: !7389)
!7395 = !DILocation(line: 133, column: 6, scope: !7376)
!7396 = !DILocation(line: 134, column: 7, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7398, file: !3, line: 134, column: 7)
!7398 = distinct !DILexicalBlock(scope: !7389, file: !3, line: 133, column: 47)
!7399 = !DILocation(line: 134, column: 17, scope: !7397)
!7400 = !DILocation(line: 134, column: 7, scope: !7398)
!7401 = !DILocation(line: 135, column: 16, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7397, file: !3, line: 134, column: 28)
!7403 = !DILocation(line: 135, column: 4, scope: !7402)
!7404 = !DILocation(line: 135, column: 10, scope: !7402)
!7405 = !DILocation(line: 135, column: 13, scope: !7402)
!7406 = !DILocation(line: 136, column: 16, scope: !7402)
!7407 = !DILocation(line: 136, column: 4, scope: !7402)
!7408 = !DILocation(line: 136, column: 10, scope: !7402)
!7409 = !DILocation(line: 136, column: 13, scope: !7402)
!7410 = !DILocation(line: 137, column: 16, scope: !7402)
!7411 = !DILocation(line: 137, column: 4, scope: !7402)
!7412 = !DILocation(line: 137, column: 10, scope: !7402)
!7413 = !DILocation(line: 137, column: 13, scope: !7402)
!7414 = !DILocation(line: 138, column: 4, scope: !7402)
!7415 = !DILocation(line: 141, column: 17, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7397, file: !3, line: 140, column: 8)
!7417 = !DILocation(line: 141, column: 16, scope: !7416)
!7418 = !DILocation(line: 141, column: 4, scope: !7416)
!7419 = !DILocation(line: 141, column: 10, scope: !7416)
!7420 = !DILocation(line: 141, column: 13, scope: !7416)
!7421 = !DILocation(line: 142, column: 17, scope: !7416)
!7422 = !DILocation(line: 142, column: 16, scope: !7416)
!7423 = !DILocation(line: 142, column: 4, scope: !7416)
!7424 = !DILocation(line: 142, column: 10, scope: !7416)
!7425 = !DILocation(line: 142, column: 13, scope: !7416)
!7426 = !DILocation(line: 143, column: 17, scope: !7416)
!7427 = !DILocation(line: 143, column: 16, scope: !7416)
!7428 = !DILocation(line: 143, column: 4, scope: !7416)
!7429 = !DILocation(line: 143, column: 10, scope: !7416)
!7430 = !DILocation(line: 143, column: 13, scope: !7416)
!7431 = !DILocation(line: 144, column: 4, scope: !7416)
!7432 = !DILocation(line: 148, column: 2, scope: !7376)
!7433 = !DILocation(line: 149, column: 1, scope: !7376)
!7434 = distinct !DISubprogram(name: "CURVE_OT_de_select_first", scope: !3, file: !3, line: 3079, type: !4, scopeLine: 3080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!7435 = !DILocalVariable(name: "ot", arg: 1, scope: !7434, file: !3, line: 3079, type: !6)
!7436 = !DILocation(line: 3079, column: 47, scope: !7434)
!7437 = !DILocation(line: 3082, column: 2, scope: !7434)
!7438 = !DILocation(line: 3082, column: 6, scope: !7434)
!7439 = !DILocation(line: 3082, column: 11, scope: !7434)
!7440 = !DILocation(line: 3083, column: 2, scope: !7434)
!7441 = !DILocation(line: 3083, column: 6, scope: !7434)
!7442 = !DILocation(line: 3083, column: 13, scope: !7434)
!7443 = !DILocation(line: 3084, column: 2, scope: !7434)
!7444 = !DILocation(line: 3084, column: 6, scope: !7434)
!7445 = !DILocation(line: 3084, column: 18, scope: !7434)
!7446 = !DILocation(line: 3087, column: 2, scope: !7434)
!7447 = !DILocation(line: 3087, column: 6, scope: !7434)
!7448 = !DILocation(line: 3087, column: 11, scope: !7434)
!7449 = !DILocation(line: 3088, column: 2, scope: !7434)
!7450 = !DILocation(line: 3088, column: 6, scope: !7434)
!7451 = !DILocation(line: 3088, column: 11, scope: !7434)
!7452 = !DILocation(line: 3091, column: 2, scope: !7434)
!7453 = !DILocation(line: 3091, column: 6, scope: !7434)
!7454 = !DILocation(line: 3091, column: 11, scope: !7434)
!7455 = !DILocation(line: 3092, column: 1, scope: !7434)
!7456 = distinct !DISubprogram(name: "de_select_first_exec", scope: !3, file: !3, line: 3068, type: !3224, scopeLine: 3069, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!7457 = !DILocalVariable(name: "C", arg: 1, scope: !7456, file: !3, line: 3068, type: !3226)
!7458 = !DILocation(line: 3068, column: 43, scope: !7456)
!7459 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !7456, file: !3, line: 3068, type: !3228)
!7460 = !DILocation(line: 3068, column: 58, scope: !7456)
!7461 = !DILocalVariable(name: "obedit", scope: !7456, file: !3, line: 3070, type: !3242)
!7462 = !DILocation(line: 3070, column: 10, scope: !7456)
!7463 = !DILocation(line: 3070, column: 40, scope: !7456)
!7464 = !DILocation(line: 3070, column: 19, scope: !7456)
!7465 = !DILocation(line: 3072, column: 17, scope: !7456)
!7466 = !DILocation(line: 3072, column: 2, scope: !7456)
!7467 = !DILocation(line: 3073, column: 24, scope: !7456)
!7468 = !DILocation(line: 3073, column: 48, scope: !7456)
!7469 = !DILocation(line: 3073, column: 56, scope: !7456)
!7470 = !DILocation(line: 3073, column: 2, scope: !7456)
!7471 = !DILocation(line: 3074, column: 38, scope: !7456)
!7472 = !DILocation(line: 3074, column: 46, scope: !7456)
!7473 = !DILocation(line: 3074, column: 2, scope: !7456)
!7474 = !DILocation(line: 3076, column: 2, scope: !7456)
!7475 = distinct !DISubprogram(name: "CURVE_OT_de_select_last", scope: !3, file: !3, line: 3105, type: !4, scopeLine: 3106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!7476 = !DILocalVariable(name: "ot", arg: 1, scope: !7475, file: !3, line: 3105, type: !6)
!7477 = !DILocation(line: 3105, column: 46, scope: !7475)
!7478 = !DILocation(line: 3108, column: 2, scope: !7475)
!7479 = !DILocation(line: 3108, column: 6, scope: !7475)
!7480 = !DILocation(line: 3108, column: 11, scope: !7475)
!7481 = !DILocation(line: 3109, column: 2, scope: !7475)
!7482 = !DILocation(line: 3109, column: 6, scope: !7475)
!7483 = !DILocation(line: 3109, column: 13, scope: !7475)
!7484 = !DILocation(line: 3110, column: 2, scope: !7475)
!7485 = !DILocation(line: 3110, column: 6, scope: !7475)
!7486 = !DILocation(line: 3110, column: 18, scope: !7475)
!7487 = !DILocation(line: 3113, column: 2, scope: !7475)
!7488 = !DILocation(line: 3113, column: 6, scope: !7475)
!7489 = !DILocation(line: 3113, column: 11, scope: !7475)
!7490 = !DILocation(line: 3114, column: 2, scope: !7475)
!7491 = !DILocation(line: 3114, column: 6, scope: !7475)
!7492 = !DILocation(line: 3114, column: 11, scope: !7475)
!7493 = !DILocation(line: 3117, column: 2, scope: !7475)
!7494 = !DILocation(line: 3117, column: 6, scope: !7475)
!7495 = !DILocation(line: 3117, column: 11, scope: !7475)
!7496 = !DILocation(line: 3118, column: 1, scope: !7475)
!7497 = distinct !DISubprogram(name: "de_select_last_exec", scope: !3, file: !3, line: 3094, type: !3224, scopeLine: 3095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!7498 = !DILocalVariable(name: "C", arg: 1, scope: !7497, file: !3, line: 3094, type: !3226)
!7499 = !DILocation(line: 3094, column: 42, scope: !7497)
!7500 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !7497, file: !3, line: 3094, type: !3228)
!7501 = !DILocation(line: 3094, column: 57, scope: !7497)
!7502 = !DILocalVariable(name: "obedit", scope: !7497, file: !3, line: 3096, type: !3242)
!7503 = !DILocation(line: 3096, column: 10, scope: !7497)
!7504 = !DILocation(line: 3096, column: 40, scope: !7497)
!7505 = !DILocation(line: 3096, column: 19, scope: !7497)
!7506 = !DILocation(line: 3098, column: 17, scope: !7497)
!7507 = !DILocation(line: 3098, column: 2, scope: !7497)
!7508 = !DILocation(line: 3099, column: 24, scope: !7497)
!7509 = !DILocation(line: 3099, column: 48, scope: !7497)
!7510 = !DILocation(line: 3099, column: 56, scope: !7497)
!7511 = !DILocation(line: 3099, column: 2, scope: !7497)
!7512 = !DILocation(line: 3100, column: 38, scope: !7497)
!7513 = !DILocation(line: 3100, column: 46, scope: !7497)
!7514 = !DILocation(line: 3100, column: 2, scope: !7497)
!7515 = !DILocation(line: 3102, column: 2, scope: !7497)
!7516 = distinct !DISubprogram(name: "CURVE_OT_select_all", scope: !3, file: !3, line: 3189, type: !4, scopeLine: 3190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!7517 = !DILocalVariable(name: "ot", arg: 1, scope: !7516, file: !3, line: 3189, type: !6)
!7518 = !DILocation(line: 3189, column: 42, scope: !7516)
!7519 = !DILocation(line: 3192, column: 2, scope: !7516)
!7520 = !DILocation(line: 3192, column: 6, scope: !7516)
!7521 = !DILocation(line: 3192, column: 11, scope: !7516)
!7522 = !DILocation(line: 3193, column: 2, scope: !7516)
!7523 = !DILocation(line: 3193, column: 6, scope: !7516)
!7524 = !DILocation(line: 3193, column: 13, scope: !7516)
!7525 = !DILocation(line: 3194, column: 2, scope: !7516)
!7526 = !DILocation(line: 3194, column: 6, scope: !7516)
!7527 = !DILocation(line: 3194, column: 18, scope: !7516)
!7528 = !DILocation(line: 3197, column: 2, scope: !7516)
!7529 = !DILocation(line: 3197, column: 6, scope: !7516)
!7530 = !DILocation(line: 3197, column: 11, scope: !7516)
!7531 = !DILocation(line: 3198, column: 2, scope: !7516)
!7532 = !DILocation(line: 3198, column: 6, scope: !7516)
!7533 = !DILocation(line: 3198, column: 11, scope: !7516)
!7534 = !DILocation(line: 3201, column: 2, scope: !7516)
!7535 = !DILocation(line: 3201, column: 6, scope: !7516)
!7536 = !DILocation(line: 3201, column: 11, scope: !7516)
!7537 = !DILocation(line: 3204, column: 36, scope: !7516)
!7538 = !DILocation(line: 3204, column: 2, scope: !7516)
!7539 = !DILocation(line: 3205, column: 1, scope: !7516)
!7540 = distinct !DISubprogram(name: "de_select_all_exec", scope: !3, file: !3, line: 3158, type: !3224, scopeLine: 3159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!7541 = !DILocalVariable(name: "C", arg: 1, scope: !7540, file: !3, line: 3158, type: !3226)
!7542 = !DILocation(line: 3158, column: 41, scope: !7540)
!7543 = !DILocalVariable(name: "op", arg: 2, scope: !7540, file: !3, line: 3158, type: !3228)
!7544 = !DILocation(line: 3158, column: 56, scope: !7540)
!7545 = !DILocalVariable(name: "obedit", scope: !7540, file: !3, line: 3160, type: !3242)
!7546 = !DILocation(line: 3160, column: 10, scope: !7540)
!7547 = !DILocation(line: 3160, column: 40, scope: !7540)
!7548 = !DILocation(line: 3160, column: 19, scope: !7540)
!7549 = !DILocalVariable(name: "cu", scope: !7540, file: !3, line: 3161, type: !2953)
!7550 = !DILocation(line: 3161, column: 9, scope: !7540)
!7551 = !DILocation(line: 3161, column: 14, scope: !7540)
!7552 = !DILocation(line: 3161, column: 22, scope: !7540)
!7553 = !DILocalVariable(name: "editnurb", scope: !7540, file: !3, line: 3162, type: !486)
!7554 = !DILocation(line: 3162, column: 12, scope: !7540)
!7555 = !DILocation(line: 3162, column: 44, scope: !7540)
!7556 = !DILocation(line: 3162, column: 23, scope: !7540)
!7557 = !DILocalVariable(name: "action", scope: !7540, file: !3, line: 3163, type: !22)
!7558 = !DILocation(line: 3163, column: 6, scope: !7540)
!7559 = !DILocation(line: 3163, column: 28, scope: !7540)
!7560 = !DILocation(line: 3163, column: 32, scope: !7540)
!7561 = !DILocation(line: 3163, column: 15, scope: !7540)
!7562 = !DILocation(line: 3165, column: 6, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 3165, column: 6)
!7564 = !DILocation(line: 3165, column: 13, scope: !7563)
!7565 = !DILocation(line: 3165, column: 6, scope: !7540)
!7566 = !DILocation(line: 3166, column: 10, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7563, file: !3, line: 3165, column: 28)
!7568 = !DILocation(line: 3167, column: 29, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 3167, column: 7)
!7570 = !DILocation(line: 3167, column: 7, scope: !7569)
!7571 = !DILocation(line: 3167, column: 7, scope: !7567)
!7572 = !DILocation(line: 3168, column: 11, scope: !7569)
!7573 = !DILocation(line: 3168, column: 4, scope: !7569)
!7574 = !DILocation(line: 3169, column: 2, scope: !7567)
!7575 = !DILocation(line: 3171, column: 10, scope: !7540)
!7576 = !DILocation(line: 3171, column: 2, scope: !7540)
!7577 = !DILocation(line: 3173, column: 24, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 3171, column: 18)
!7579 = !DILocation(line: 3173, column: 28, scope: !7578)
!7580 = !DILocation(line: 3173, column: 4, scope: !7578)
!7581 = !DILocation(line: 3174, column: 4, scope: !7578)
!7582 = !DILocation(line: 3176, column: 26, scope: !7578)
!7583 = !DILocation(line: 3176, column: 30, scope: !7578)
!7584 = !DILocation(line: 3176, column: 4, scope: !7578)
!7585 = !DILocation(line: 3177, column: 4, scope: !7578)
!7586 = !DILocation(line: 3179, column: 25, scope: !7578)
!7587 = !DILocation(line: 3179, column: 29, scope: !7578)
!7588 = !DILocation(line: 3179, column: 40, scope: !7578)
!7589 = !DILocation(line: 3179, column: 44, scope: !7578)
!7590 = !DILocation(line: 3179, column: 53, scope: !7578)
!7591 = !DILocation(line: 3179, column: 72, scope: !7578)
!7592 = !DILocation(line: 3179, column: 39, scope: !7578)
!7593 = !DILocation(line: 3179, column: 4, scope: !7578)
!7594 = !DILocation(line: 3180, column: 4, scope: !7578)
!7595 = !DILocation(line: 3183, column: 24, scope: !7540)
!7596 = !DILocation(line: 3183, column: 48, scope: !7540)
!7597 = !DILocation(line: 3183, column: 56, scope: !7540)
!7598 = !DILocation(line: 3183, column: 2, scope: !7540)
!7599 = !DILocation(line: 3184, column: 38, scope: !7540)
!7600 = !DILocation(line: 3184, column: 2, scope: !7540)
!7601 = !DILocation(line: 3186, column: 2, scope: !7540)
!7602 = distinct !DISubprogram(name: "CURVE_OT_hide", scope: !3, file: !3, line: 3266, type: !4, scopeLine: 3267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!7603 = !DILocalVariable(name: "ot", arg: 1, scope: !7602, file: !3, line: 3266, type: !6)
!7604 = !DILocation(line: 3266, column: 36, scope: !7602)
!7605 = !DILocation(line: 3269, column: 2, scope: !7602)
!7606 = !DILocation(line: 3269, column: 6, scope: !7602)
!7607 = !DILocation(line: 3269, column: 11, scope: !7602)
!7608 = !DILocation(line: 3270, column: 2, scope: !7602)
!7609 = !DILocation(line: 3270, column: 6, scope: !7602)
!7610 = !DILocation(line: 3270, column: 13, scope: !7602)
!7611 = !DILocation(line: 3271, column: 2, scope: !7602)
!7612 = !DILocation(line: 3271, column: 6, scope: !7602)
!7613 = !DILocation(line: 3271, column: 18, scope: !7602)
!7614 = !DILocation(line: 3274, column: 2, scope: !7602)
!7615 = !DILocation(line: 3274, column: 6, scope: !7602)
!7616 = !DILocation(line: 3274, column: 11, scope: !7602)
!7617 = !DILocation(line: 3275, column: 2, scope: !7602)
!7618 = !DILocation(line: 3275, column: 6, scope: !7602)
!7619 = !DILocation(line: 3275, column: 11, scope: !7602)
!7620 = !DILocation(line: 3278, column: 2, scope: !7602)
!7621 = !DILocation(line: 3278, column: 6, scope: !7602)
!7622 = !DILocation(line: 3278, column: 11, scope: !7602)
!7623 = !DILocation(line: 3281, column: 18, scope: !7602)
!7624 = !DILocation(line: 3281, column: 22, scope: !7602)
!7625 = !DILocation(line: 3281, column: 2, scope: !7602)
!7626 = !DILocation(line: 3282, column: 1, scope: !7602)
!7627 = distinct !DISubprogram(name: "hide_exec", scope: !3, file: !3, line: 3209, type: !3224, scopeLine: 3210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!7628 = !DILocalVariable(name: "C", arg: 1, scope: !7627, file: !3, line: 3209, type: !3226)
!7629 = !DILocation(line: 3209, column: 32, scope: !7627)
!7630 = !DILocalVariable(name: "op", arg: 2, scope: !7627, file: !3, line: 3209, type: !3228)
!7631 = !DILocation(line: 3209, column: 47, scope: !7627)
!7632 = !DILocalVariable(name: "obedit", scope: !7627, file: !3, line: 3211, type: !3242)
!7633 = !DILocation(line: 3211, column: 10, scope: !7627)
!7634 = !DILocation(line: 3211, column: 40, scope: !7627)
!7635 = !DILocation(line: 3211, column: 19, scope: !7627)
!7636 = !DILocalVariable(name: "cu", scope: !7627, file: !3, line: 3212, type: !2953)
!7637 = !DILocation(line: 3212, column: 9, scope: !7627)
!7638 = !DILocation(line: 3212, column: 14, scope: !7627)
!7639 = !DILocation(line: 3212, column: 22, scope: !7627)
!7640 = !DILocalVariable(name: "editnurb", scope: !7627, file: !3, line: 3213, type: !486)
!7641 = !DILocation(line: 3213, column: 12, scope: !7627)
!7642 = !DILocation(line: 3213, column: 44, scope: !7627)
!7643 = !DILocation(line: 3213, column: 23, scope: !7627)
!7644 = !DILocalVariable(name: "nu", scope: !7627, file: !3, line: 3214, type: !3163)
!7645 = !DILocation(line: 3214, column: 8, scope: !7627)
!7646 = !DILocalVariable(name: "bp", scope: !7627, file: !3, line: 3215, type: !3093)
!7647 = !DILocation(line: 3215, column: 10, scope: !7627)
!7648 = !DILocalVariable(name: "bezt", scope: !7627, file: !3, line: 3216, type: !3104)
!7649 = !DILocation(line: 3216, column: 13, scope: !7627)
!7650 = !DILocalVariable(name: "a", scope: !7627, file: !3, line: 3217, type: !22)
!7651 = !DILocation(line: 3217, column: 6, scope: !7627)
!7652 = !DILocalVariable(name: "sel", scope: !7627, file: !3, line: 3217, type: !22)
!7653 = !DILocation(line: 3217, column: 9, scope: !7627)
!7654 = !DILocalVariable(name: "invert", scope: !7627, file: !3, line: 3218, type: !7655)
!7655 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1081)
!7656 = !DILocation(line: 3218, column: 13, scope: !7627)
!7657 = !DILocation(line: 3218, column: 38, scope: !7627)
!7658 = !DILocation(line: 3218, column: 42, scope: !7627)
!7659 = !DILocation(line: 3218, column: 22, scope: !7627)
!7660 = !DILocation(line: 3220, column: 12, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7627, file: !3, line: 3220, column: 2)
!7662 = !DILocation(line: 3220, column: 22, scope: !7661)
!7663 = !DILocation(line: 3220, column: 10, scope: !7661)
!7664 = !DILocation(line: 3220, column: 7, scope: !7661)
!7665 = !DILocation(line: 3220, column: 29, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 3220, column: 2)
!7667 = !DILocation(line: 3220, column: 2, scope: !7661)
!7668 = !DILocation(line: 3221, column: 7, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7670, file: !3, line: 3221, column: 7)
!7670 = distinct !DILexicalBlock(scope: !7666, file: !3, line: 3220, column: 48)
!7671 = !DILocation(line: 3221, column: 11, scope: !7669)
!7672 = !DILocation(line: 3221, column: 16, scope: !7669)
!7673 = !DILocation(line: 3221, column: 7, scope: !7670)
!7674 = !DILocation(line: 3222, column: 11, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7669, file: !3, line: 3221, column: 30)
!7676 = !DILocation(line: 3222, column: 15, scope: !7675)
!7677 = !DILocation(line: 3222, column: 9, scope: !7675)
!7678 = !DILocation(line: 3223, column: 8, scope: !7675)
!7679 = !DILocation(line: 3223, column: 12, scope: !7675)
!7680 = !DILocation(line: 3223, column: 6, scope: !7675)
!7681 = !DILocation(line: 3224, column: 8, scope: !7675)
!7682 = !DILocation(line: 3225, column: 4, scope: !7675)
!7683 = !DILocation(line: 3225, column: 12, scope: !7675)
!7684 = !DILocation(line: 3226, column: 9, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7686, file: !3, line: 3226, column: 9)
!7686 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 3225, column: 16)
!7687 = !DILocation(line: 3226, column: 16, scope: !7685)
!7688 = !DILocation(line: 3226, column: 21, scope: !7685)
!7689 = !DILocation(line: 3226, column: 24, scope: !7685)
!7690 = !DILocation(line: 3226, column: 9, scope: !7686)
!7691 = !DILocation(line: 3227, column: 23, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7685, file: !3, line: 3226, column: 61)
!7693 = !DILocation(line: 3227, column: 6, scope: !7692)
!7694 = !DILocation(line: 3228, column: 6, scope: !7692)
!7695 = !DILocation(line: 3228, column: 12, scope: !7692)
!7696 = !DILocation(line: 3228, column: 17, scope: !7692)
!7697 = !DILocation(line: 3229, column: 5, scope: !7692)
!7698 = !DILocation(line: 3230, column: 14, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7685, file: !3, line: 3230, column: 14)
!7700 = !DILocation(line: 3230, column: 21, scope: !7699)
!7701 = !DILocation(line: 3230, column: 25, scope: !7699)
!7702 = !DILocation(line: 3230, column: 14, scope: !7685)
!7703 = !DILocation(line: 3231, column: 23, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7699, file: !3, line: 3230, column: 62)
!7705 = !DILocation(line: 3231, column: 6, scope: !7704)
!7706 = !DILocation(line: 3232, column: 6, scope: !7704)
!7707 = !DILocation(line: 3232, column: 12, scope: !7704)
!7708 = !DILocation(line: 3232, column: 17, scope: !7704)
!7709 = !DILocation(line: 3233, column: 5, scope: !7704)
!7710 = !DILocation(line: 3234, column: 9, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7686, file: !3, line: 3234, column: 9)
!7712 = !DILocation(line: 3234, column: 15, scope: !7711)
!7713 = !DILocation(line: 3234, column: 9, scope: !7686)
!7714 = !DILocation(line: 3234, column: 24, scope: !7711)
!7715 = !DILocation(line: 3234, column: 21, scope: !7711)
!7716 = !DILocation(line: 3235, column: 9, scope: !7686)
!7717 = distinct !{!7717, !7682, !7718}
!7718 = !DILocation(line: 3236, column: 4, scope: !7675)
!7719 = !DILocation(line: 3237, column: 8, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 3237, column: 8)
!7721 = !DILocation(line: 3237, column: 15, scope: !7720)
!7722 = !DILocation(line: 3237, column: 19, scope: !7720)
!7723 = !DILocation(line: 3237, column: 12, scope: !7720)
!7724 = !DILocation(line: 3237, column: 8, scope: !7675)
!7725 = !DILocation(line: 3237, column: 26, scope: !7720)
!7726 = !DILocation(line: 3237, column: 30, scope: !7720)
!7727 = !DILocation(line: 3237, column: 35, scope: !7720)
!7728 = !DILocation(line: 3238, column: 3, scope: !7675)
!7729 = !DILocation(line: 3240, column: 9, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7669, file: !3, line: 3239, column: 8)
!7731 = !DILocation(line: 3240, column: 13, scope: !7730)
!7732 = !DILocation(line: 3240, column: 7, scope: !7730)
!7733 = !DILocation(line: 3241, column: 8, scope: !7730)
!7734 = !DILocation(line: 3241, column: 12, scope: !7730)
!7735 = !DILocation(line: 3241, column: 20, scope: !7730)
!7736 = !DILocation(line: 3241, column: 24, scope: !7730)
!7737 = !DILocation(line: 3241, column: 18, scope: !7730)
!7738 = !DILocation(line: 3241, column: 6, scope: !7730)
!7739 = !DILocation(line: 3242, column: 8, scope: !7730)
!7740 = !DILocation(line: 3243, column: 4, scope: !7730)
!7741 = !DILocation(line: 3243, column: 12, scope: !7730)
!7742 = !DILocation(line: 3244, column: 9, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7744, file: !3, line: 3244, column: 9)
!7744 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 3243, column: 16)
!7745 = !DILocation(line: 3244, column: 16, scope: !7743)
!7746 = !DILocation(line: 3244, column: 21, scope: !7743)
!7747 = !DILocation(line: 3244, column: 25, scope: !7743)
!7748 = !DILocation(line: 3244, column: 29, scope: !7743)
!7749 = !DILocation(line: 3244, column: 32, scope: !7743)
!7750 = !DILocation(line: 3244, column: 9, scope: !7744)
!7751 = !DILocation(line: 3245, column: 20, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7743, file: !3, line: 3244, column: 43)
!7753 = !DILocation(line: 3245, column: 6, scope: !7752)
!7754 = !DILocation(line: 3246, column: 6, scope: !7752)
!7755 = !DILocation(line: 3246, column: 10, scope: !7752)
!7756 = !DILocation(line: 3246, column: 15, scope: !7752)
!7757 = !DILocation(line: 3247, column: 5, scope: !7752)
!7758 = !DILocation(line: 3248, column: 14, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7743, file: !3, line: 3248, column: 14)
!7760 = !DILocation(line: 3248, column: 21, scope: !7759)
!7761 = !DILocation(line: 3248, column: 25, scope: !7759)
!7762 = !DILocation(line: 3248, column: 29, scope: !7759)
!7763 = !DILocation(line: 3248, column: 32, scope: !7759)
!7764 = !DILocation(line: 3248, column: 42, scope: !7759)
!7765 = !DILocation(line: 3248, column: 14, scope: !7743)
!7766 = !DILocation(line: 3249, column: 20, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 3248, column: 48)
!7768 = !DILocation(line: 3249, column: 6, scope: !7767)
!7769 = !DILocation(line: 3250, column: 6, scope: !7767)
!7770 = !DILocation(line: 3250, column: 10, scope: !7767)
!7771 = !DILocation(line: 3250, column: 15, scope: !7767)
!7772 = !DILocation(line: 3251, column: 5, scope: !7767)
!7773 = !DILocation(line: 3252, column: 9, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7744, file: !3, line: 3252, column: 9)
!7775 = !DILocation(line: 3252, column: 13, scope: !7774)
!7776 = !DILocation(line: 3252, column: 9, scope: !7744)
!7777 = !DILocation(line: 3252, column: 22, scope: !7774)
!7778 = !DILocation(line: 3252, column: 19, scope: !7774)
!7779 = !DILocation(line: 3253, column: 7, scope: !7744)
!7780 = distinct !{!7780, !7740, !7781}
!7781 = !DILocation(line: 3254, column: 4, scope: !7730)
!7782 = !DILocation(line: 3255, column: 8, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 3255, column: 8)
!7784 = !DILocation(line: 3255, column: 15, scope: !7783)
!7785 = !DILocation(line: 3255, column: 19, scope: !7783)
!7786 = !DILocation(line: 3255, column: 27, scope: !7783)
!7787 = !DILocation(line: 3255, column: 31, scope: !7783)
!7788 = !DILocation(line: 3255, column: 25, scope: !7783)
!7789 = !DILocation(line: 3255, column: 12, scope: !7783)
!7790 = !DILocation(line: 3255, column: 8, scope: !7730)
!7791 = !DILocation(line: 3255, column: 38, scope: !7783)
!7792 = !DILocation(line: 3255, column: 42, scope: !7783)
!7793 = !DILocation(line: 3255, column: 47, scope: !7783)
!7794 = !DILocation(line: 3257, column: 2, scope: !7670)
!7795 = !DILocation(line: 3220, column: 38, scope: !7666)
!7796 = !DILocation(line: 3220, column: 42, scope: !7666)
!7797 = !DILocation(line: 3220, column: 36, scope: !7666)
!7798 = !DILocation(line: 3220, column: 2, scope: !7666)
!7799 = distinct !{!7799, !7667, !7800}
!7800 = !DILocation(line: 3257, column: 2, scope: !7661)
!7801 = !DILocation(line: 3259, column: 20, scope: !7627)
!7802 = !DILocation(line: 3259, column: 28, scope: !7627)
!7803 = !DILocation(line: 3259, column: 2, scope: !7627)
!7804 = !DILocation(line: 3260, column: 24, scope: !7627)
!7805 = !DILocation(line: 3260, column: 48, scope: !7627)
!7806 = !DILocation(line: 3260, column: 56, scope: !7627)
!7807 = !DILocation(line: 3260, column: 2, scope: !7627)
!7808 = !DILocation(line: 3261, column: 38, scope: !7627)
!7809 = !DILocation(line: 3261, column: 46, scope: !7627)
!7810 = !DILocation(line: 3261, column: 2, scope: !7627)
!7811 = !DILocation(line: 3263, column: 2, scope: !7627)
!7812 = distinct !DISubprogram(name: "CURVE_OT_reveal", scope: !3, file: !3, line: 3327, type: !4, scopeLine: 3328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!7813 = !DILocalVariable(name: "ot", arg: 1, scope: !7812, file: !3, line: 3327, type: !6)
!7814 = !DILocation(line: 3327, column: 38, scope: !7812)
!7815 = !DILocation(line: 3330, column: 2, scope: !7812)
!7816 = !DILocation(line: 3330, column: 6, scope: !7812)
!7817 = !DILocation(line: 3330, column: 11, scope: !7812)
!7818 = !DILocation(line: 3331, column: 2, scope: !7812)
!7819 = !DILocation(line: 3331, column: 6, scope: !7812)
!7820 = !DILocation(line: 3331, column: 13, scope: !7812)
!7821 = !DILocation(line: 3332, column: 2, scope: !7812)
!7822 = !DILocation(line: 3332, column: 6, scope: !7812)
!7823 = !DILocation(line: 3332, column: 18, scope: !7812)
!7824 = !DILocation(line: 3335, column: 2, scope: !7812)
!7825 = !DILocation(line: 3335, column: 6, scope: !7812)
!7826 = !DILocation(line: 3335, column: 11, scope: !7812)
!7827 = !DILocation(line: 3336, column: 2, scope: !7812)
!7828 = !DILocation(line: 3336, column: 6, scope: !7812)
!7829 = !DILocation(line: 3336, column: 11, scope: !7812)
!7830 = !DILocation(line: 3339, column: 2, scope: !7812)
!7831 = !DILocation(line: 3339, column: 6, scope: !7812)
!7832 = !DILocation(line: 3339, column: 11, scope: !7812)
!7833 = !DILocation(line: 3340, column: 1, scope: !7812)
!7834 = distinct !DISubprogram(name: "reveal_exec", scope: !3, file: !3, line: 3286, type: !3224, scopeLine: 3287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!7835 = !DILocalVariable(name: "C", arg: 1, scope: !7834, file: !3, line: 3286, type: !3226)
!7836 = !DILocation(line: 3286, column: 34, scope: !7834)
!7837 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !7834, file: !3, line: 3286, type: !3228)
!7838 = !DILocation(line: 3286, column: 49, scope: !7834)
!7839 = !DILocalVariable(name: "obedit", scope: !7834, file: !3, line: 3288, type: !3242)
!7840 = !DILocation(line: 3288, column: 10, scope: !7834)
!7841 = !DILocation(line: 3288, column: 40, scope: !7834)
!7842 = !DILocation(line: 3288, column: 19, scope: !7834)
!7843 = !DILocalVariable(name: "editnurb", scope: !7834, file: !3, line: 3289, type: !486)
!7844 = !DILocation(line: 3289, column: 12, scope: !7834)
!7845 = !DILocation(line: 3289, column: 44, scope: !7834)
!7846 = !DILocation(line: 3289, column: 23, scope: !7834)
!7847 = !DILocalVariable(name: "nu", scope: !7834, file: !3, line: 3290, type: !3163)
!7848 = !DILocation(line: 3290, column: 8, scope: !7834)
!7849 = !DILocalVariable(name: "bp", scope: !7834, file: !3, line: 3291, type: !3093)
!7850 = !DILocation(line: 3291, column: 10, scope: !7834)
!7851 = !DILocalVariable(name: "bezt", scope: !7834, file: !3, line: 3292, type: !3104)
!7852 = !DILocation(line: 3292, column: 13, scope: !7834)
!7853 = !DILocalVariable(name: "a", scope: !7834, file: !3, line: 3293, type: !22)
!7854 = !DILocation(line: 3293, column: 6, scope: !7834)
!7855 = !DILocation(line: 3295, column: 12, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7834, file: !3, line: 3295, column: 2)
!7857 = !DILocation(line: 3295, column: 22, scope: !7856)
!7858 = !DILocation(line: 3295, column: 10, scope: !7856)
!7859 = !DILocation(line: 3295, column: 7, scope: !7856)
!7860 = !DILocation(line: 3295, column: 29, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 3295, column: 2)
!7862 = !DILocation(line: 3295, column: 2, scope: !7856)
!7863 = !DILocation(line: 3296, column: 3, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7861, file: !3, line: 3295, column: 48)
!7865 = !DILocation(line: 3296, column: 7, scope: !7864)
!7866 = !DILocation(line: 3296, column: 12, scope: !7864)
!7867 = !DILocation(line: 3297, column: 7, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 3297, column: 7)
!7869 = !DILocation(line: 3297, column: 11, scope: !7868)
!7870 = !DILocation(line: 3297, column: 16, scope: !7868)
!7871 = !DILocation(line: 3297, column: 7, scope: !7864)
!7872 = !DILocation(line: 3298, column: 11, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 3297, column: 30)
!7874 = !DILocation(line: 3298, column: 15, scope: !7873)
!7875 = !DILocation(line: 3298, column: 9, scope: !7873)
!7876 = !DILocation(line: 3299, column: 8, scope: !7873)
!7877 = !DILocation(line: 3299, column: 12, scope: !7873)
!7878 = !DILocation(line: 3299, column: 6, scope: !7873)
!7879 = !DILocation(line: 3300, column: 4, scope: !7873)
!7880 = !DILocation(line: 3300, column: 12, scope: !7873)
!7881 = !DILocation(line: 3301, column: 9, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7883, file: !3, line: 3301, column: 9)
!7883 = distinct !DILexicalBlock(scope: !7873, file: !3, line: 3300, column: 16)
!7884 = !DILocation(line: 3301, column: 15, scope: !7882)
!7885 = !DILocation(line: 3301, column: 9, scope: !7883)
!7886 = !DILocation(line: 3302, column: 23, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 3301, column: 21)
!7888 = !DILocation(line: 3302, column: 6, scope: !7887)
!7889 = !DILocation(line: 3303, column: 6, scope: !7887)
!7890 = !DILocation(line: 3303, column: 12, scope: !7887)
!7891 = !DILocation(line: 3303, column: 17, scope: !7887)
!7892 = !DILocation(line: 3304, column: 5, scope: !7887)
!7893 = !DILocation(line: 3305, column: 9, scope: !7883)
!7894 = distinct !{!7894, !7879, !7895}
!7895 = !DILocation(line: 3306, column: 4, scope: !7873)
!7896 = !DILocation(line: 3307, column: 3, scope: !7873)
!7897 = !DILocation(line: 3309, column: 9, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 3308, column: 8)
!7899 = !DILocation(line: 3309, column: 13, scope: !7898)
!7900 = !DILocation(line: 3309, column: 7, scope: !7898)
!7901 = !DILocation(line: 3310, column: 8, scope: !7898)
!7902 = !DILocation(line: 3310, column: 12, scope: !7898)
!7903 = !DILocation(line: 3310, column: 20, scope: !7898)
!7904 = !DILocation(line: 3310, column: 24, scope: !7898)
!7905 = !DILocation(line: 3310, column: 18, scope: !7898)
!7906 = !DILocation(line: 3310, column: 6, scope: !7898)
!7907 = !DILocation(line: 3311, column: 4, scope: !7898)
!7908 = !DILocation(line: 3311, column: 12, scope: !7898)
!7909 = !DILocation(line: 3312, column: 9, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 3312, column: 9)
!7911 = distinct !DILexicalBlock(scope: !7898, file: !3, line: 3311, column: 16)
!7912 = !DILocation(line: 3312, column: 13, scope: !7910)
!7913 = !DILocation(line: 3312, column: 9, scope: !7911)
!7914 = !DILocation(line: 3313, column: 20, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7910, file: !3, line: 3312, column: 19)
!7916 = !DILocation(line: 3313, column: 6, scope: !7915)
!7917 = !DILocation(line: 3314, column: 6, scope: !7915)
!7918 = !DILocation(line: 3314, column: 10, scope: !7915)
!7919 = !DILocation(line: 3314, column: 15, scope: !7915)
!7920 = !DILocation(line: 3315, column: 5, scope: !7915)
!7921 = !DILocation(line: 3316, column: 7, scope: !7911)
!7922 = distinct !{!7922, !7907, !7923}
!7923 = !DILocation(line: 3317, column: 4, scope: !7898)
!7924 = !DILocation(line: 3319, column: 2, scope: !7864)
!7925 = !DILocation(line: 3295, column: 38, scope: !7861)
!7926 = !DILocation(line: 3295, column: 42, scope: !7861)
!7927 = !DILocation(line: 3295, column: 36, scope: !7861)
!7928 = !DILocation(line: 3295, column: 2, scope: !7861)
!7929 = distinct !{!7929, !7862, !7930}
!7930 = !DILocation(line: 3319, column: 2, scope: !7856)
!7931 = !DILocation(line: 3321, column: 20, scope: !7834)
!7932 = !DILocation(line: 3321, column: 28, scope: !7834)
!7933 = !DILocation(line: 3321, column: 2, scope: !7834)
!7934 = !DILocation(line: 3322, column: 24, scope: !7834)
!7935 = !DILocation(line: 3322, column: 48, scope: !7834)
!7936 = !DILocation(line: 3322, column: 56, scope: !7834)
!7937 = !DILocation(line: 3322, column: 2, scope: !7834)
!7938 = !DILocation(line: 3324, column: 2, scope: !7834)
!7939 = distinct !DISubprogram(name: "CURVE_OT_subdivide", scope: !3, file: !3, line: 3745, type: !4, scopeLine: 3746, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!7940 = !DILocalVariable(name: "ot", arg: 1, scope: !7939, file: !3, line: 3745, type: !6)
!7941 = !DILocation(line: 3745, column: 41, scope: !7939)
!7942 = !DILocalVariable(name: "prop", scope: !7939, file: !3, line: 3747, type: !1830)
!7943 = !DILocation(line: 3747, column: 15, scope: !7939)
!7944 = !DILocation(line: 3750, column: 2, scope: !7939)
!7945 = !DILocation(line: 3750, column: 6, scope: !7939)
!7946 = !DILocation(line: 3750, column: 11, scope: !7939)
!7947 = !DILocation(line: 3751, column: 2, scope: !7939)
!7948 = !DILocation(line: 3751, column: 6, scope: !7939)
!7949 = !DILocation(line: 3751, column: 18, scope: !7939)
!7950 = !DILocation(line: 3752, column: 2, scope: !7939)
!7951 = !DILocation(line: 3752, column: 6, scope: !7939)
!7952 = !DILocation(line: 3752, column: 13, scope: !7939)
!7953 = !DILocation(line: 3755, column: 2, scope: !7939)
!7954 = !DILocation(line: 3755, column: 6, scope: !7939)
!7955 = !DILocation(line: 3755, column: 11, scope: !7939)
!7956 = !DILocation(line: 3756, column: 2, scope: !7939)
!7957 = !DILocation(line: 3756, column: 6, scope: !7939)
!7958 = !DILocation(line: 3756, column: 11, scope: !7939)
!7959 = !DILocation(line: 3759, column: 2, scope: !7939)
!7960 = !DILocation(line: 3759, column: 6, scope: !7939)
!7961 = !DILocation(line: 3759, column: 11, scope: !7939)
!7962 = !DILocation(line: 3761, column: 21, scope: !7939)
!7963 = !DILocation(line: 3761, column: 25, scope: !7939)
!7964 = !DILocation(line: 3761, column: 9, scope: !7939)
!7965 = !DILocation(line: 3761, column: 7, scope: !7939)
!7966 = !DILocation(line: 3763, column: 24, scope: !7939)
!7967 = !DILocation(line: 3763, column: 2, scope: !7939)
!7968 = !DILocation(line: 3764, column: 1, scope: !7939)
!7969 = distinct !DISubprogram(name: "subdivide_exec", scope: !3, file: !3, line: 3729, type: !3224, scopeLine: 3730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!7970 = !DILocalVariable(name: "C", arg: 1, scope: !7969, file: !3, line: 3729, type: !3226)
!7971 = !DILocation(line: 3729, column: 37, scope: !7969)
!7972 = !DILocalVariable(name: "op", arg: 2, scope: !7969, file: !3, line: 3729, type: !3228)
!7973 = !DILocation(line: 3729, column: 52, scope: !7969)
!7974 = !DILocalVariable(name: "obedit", scope: !7969, file: !3, line: 3731, type: !3242)
!7975 = !DILocation(line: 3731, column: 10, scope: !7969)
!7976 = !DILocation(line: 3731, column: 40, scope: !7969)
!7977 = !DILocation(line: 3731, column: 19, scope: !7969)
!7978 = !DILocalVariable(name: "number_cuts", scope: !7969, file: !3, line: 3732, type: !22)
!7979 = !DILocation(line: 3732, column: 6, scope: !7969)
!7980 = !DILocation(line: 3732, column: 32, scope: !7969)
!7981 = !DILocation(line: 3732, column: 36, scope: !7969)
!7982 = !DILocation(line: 3732, column: 20, scope: !7969)
!7983 = !DILocation(line: 3734, column: 16, scope: !7969)
!7984 = !DILocation(line: 3734, column: 24, scope: !7969)
!7985 = !DILocation(line: 3734, column: 2, scope: !7969)
!7986 = !DILocation(line: 3736, column: 31, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 3736, column: 6)
!7988 = !DILocation(line: 3736, column: 39, scope: !7987)
!7989 = !DILocation(line: 3736, column: 6, scope: !7987)
!7990 = !DILocation(line: 3736, column: 6, scope: !7969)
!7991 = !DILocation(line: 3737, column: 25, scope: !7987)
!7992 = !DILocation(line: 3737, column: 49, scope: !7987)
!7993 = !DILocation(line: 3737, column: 3, scope: !7987)
!7994 = !DILocation(line: 3739, column: 24, scope: !7969)
!7995 = !DILocation(line: 3739, column: 46, scope: !7969)
!7996 = !DILocation(line: 3739, column: 54, scope: !7969)
!7997 = !DILocation(line: 3739, column: 2, scope: !7969)
!7998 = !DILocation(line: 3740, column: 20, scope: !7969)
!7999 = !DILocation(line: 3740, column: 28, scope: !7969)
!8000 = !DILocation(line: 3740, column: 2, scope: !7969)
!8001 = !DILocation(line: 3742, column: 2, scope: !7969)
!8002 = !DILocalVariable(name: "ot", arg: 1, scope: !2, file: !3, line: 3940, type: !6)
!8003 = !DILocation(line: 3940, column: 47, scope: !2)
!8004 = !DILocation(line: 3952, column: 2, scope: !2)
!8005 = !DILocation(line: 3952, column: 6, scope: !2)
!8006 = !DILocation(line: 3952, column: 11, scope: !2)
!8007 = !DILocation(line: 3953, column: 2, scope: !2)
!8008 = !DILocation(line: 3953, column: 6, scope: !2)
!8009 = !DILocation(line: 3953, column: 18, scope: !2)
!8010 = !DILocation(line: 3954, column: 2, scope: !2)
!8011 = !DILocation(line: 3954, column: 6, scope: !2)
!8012 = !DILocation(line: 3954, column: 13, scope: !2)
!8013 = !DILocation(line: 3957, column: 2, scope: !2)
!8014 = !DILocation(line: 3957, column: 6, scope: !2)
!8015 = !DILocation(line: 3957, column: 11, scope: !2)
!8016 = !DILocation(line: 3958, column: 2, scope: !2)
!8017 = !DILocation(line: 3958, column: 6, scope: !2)
!8018 = !DILocation(line: 3958, column: 13, scope: !2)
!8019 = !DILocation(line: 3959, column: 2, scope: !2)
!8020 = !DILocation(line: 3959, column: 6, scope: !2)
!8021 = !DILocation(line: 3959, column: 11, scope: !2)
!8022 = !DILocation(line: 3962, column: 2, scope: !2)
!8023 = !DILocation(line: 3962, column: 6, scope: !2)
!8024 = !DILocation(line: 3962, column: 11, scope: !2)
!8025 = !DILocation(line: 3965, column: 26, scope: !2)
!8026 = !DILocation(line: 3965, column: 30, scope: !2)
!8027 = !DILocation(line: 3965, column: 13, scope: !2)
!8028 = !DILocation(line: 3965, column: 2, scope: !2)
!8029 = !DILocation(line: 3965, column: 6, scope: !2)
!8030 = !DILocation(line: 3965, column: 11, scope: !2)
!8031 = !DILocation(line: 3966, column: 18, scope: !2)
!8032 = !DILocation(line: 3966, column: 22, scope: !2)
!8033 = !DILocation(line: 3966, column: 2, scope: !2)
!8034 = !DILocation(line: 3967, column: 1, scope: !2)
!8035 = distinct !DISubprogram(name: "set_spline_type_exec", scope: !3, file: !3, line: 3891, type: !3224, scopeLine: 3892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!8036 = !DILocalVariable(name: "C", arg: 1, scope: !8035, file: !3, line: 3891, type: !3226)
!8037 = !DILocation(line: 3891, column: 43, scope: !8035)
!8038 = !DILocalVariable(name: "op", arg: 2, scope: !8035, file: !3, line: 3891, type: !3228)
!8039 = !DILocation(line: 3891, column: 58, scope: !8035)
!8040 = !DILocalVariable(name: "obedit", scope: !8035, file: !3, line: 3893, type: !3242)
!8041 = !DILocation(line: 3893, column: 10, scope: !8035)
!8042 = !DILocation(line: 3893, column: 40, scope: !8035)
!8043 = !DILocation(line: 3893, column: 19, scope: !8035)
!8044 = !DILocalVariable(name: "editnurb", scope: !8035, file: !3, line: 3894, type: !486)
!8045 = !DILocation(line: 3894, column: 12, scope: !8035)
!8046 = !DILocation(line: 3894, column: 44, scope: !8035)
!8047 = !DILocation(line: 3894, column: 23, scope: !8035)
!8048 = !DILocalVariable(name: "nu", scope: !8035, file: !3, line: 3895, type: !3163)
!8049 = !DILocation(line: 3895, column: 8, scope: !8035)
!8050 = !DILocalVariable(name: "changed", scope: !8035, file: !3, line: 3896, type: !1081)
!8051 = !DILocation(line: 3896, column: 7, scope: !8035)
!8052 = !DILocalVariable(name: "changed_size", scope: !8035, file: !3, line: 3897, type: !1081)
!8053 = !DILocation(line: 3897, column: 7, scope: !8035)
!8054 = !DILocalVariable(name: "use_handles", scope: !8035, file: !3, line: 3898, type: !7655)
!8055 = !DILocation(line: 3898, column: 13, scope: !8035)
!8056 = !DILocation(line: 3898, column: 43, scope: !8035)
!8057 = !DILocation(line: 3898, column: 47, scope: !8035)
!8058 = !DILocation(line: 3898, column: 27, scope: !8035)
!8059 = !DILocalVariable(name: "type", scope: !8035, file: !3, line: 3899, type: !8060)
!8060 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !22)
!8061 = !DILocation(line: 3899, column: 12, scope: !8035)
!8062 = !DILocation(line: 3899, column: 32, scope: !8035)
!8063 = !DILocation(line: 3899, column: 36, scope: !8035)
!8064 = !DILocation(line: 3899, column: 19, scope: !8035)
!8065 = !DILocation(line: 3901, column: 6, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8035, file: !3, line: 3901, column: 6)
!8067 = !DILocation(line: 3901, column: 11, scope: !8066)
!8068 = !DILocation(line: 3901, column: 26, scope: !8066)
!8069 = !DILocation(line: 3901, column: 29, scope: !8066)
!8070 = !DILocation(line: 3901, column: 34, scope: !8066)
!8071 = !DILocation(line: 3901, column: 6, scope: !8035)
!8072 = !DILocation(line: 3902, column: 14, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 3901, column: 49)
!8074 = !DILocation(line: 3902, column: 18, scope: !8073)
!8075 = !DILocation(line: 3902, column: 3, scope: !8073)
!8076 = !DILocation(line: 3903, column: 3, scope: !8073)
!8077 = !DILocation(line: 3906, column: 12, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8035, file: !3, line: 3906, column: 2)
!8079 = !DILocation(line: 3906, column: 22, scope: !8078)
!8080 = !DILocation(line: 3906, column: 10, scope: !8078)
!8081 = !DILocation(line: 3906, column: 7, scope: !8078)
!8082 = !DILocation(line: 3906, column: 29, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8078, file: !3, line: 3906, column: 2)
!8084 = !DILocation(line: 3906, column: 2, scope: !8078)
!8085 = !DILocation(line: 3907, column: 17, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8087, file: !3, line: 3907, column: 7)
!8087 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 3906, column: 48)
!8088 = !DILocation(line: 3907, column: 7, scope: !8086)
!8089 = !DILocation(line: 3907, column: 7, scope: !8087)
!8090 = !DILocalVariable(name: "pntsu_prev", scope: !8091, file: !3, line: 3908, type: !8060)
!8091 = distinct !DILexicalBlock(scope: !8086, file: !3, line: 3907, column: 22)
!8092 = !DILocation(line: 3908, column: 14, scope: !8091)
!8093 = !DILocation(line: 3908, column: 27, scope: !8091)
!8094 = !DILocation(line: 3908, column: 31, scope: !8091)
!8095 = !DILocation(line: 3909, column: 30, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8091, file: !3, line: 3909, column: 8)
!8097 = !DILocation(line: 3909, column: 34, scope: !8096)
!8098 = !DILocation(line: 3909, column: 40, scope: !8096)
!8099 = !DILocation(line: 3909, column: 8, scope: !8096)
!8100 = !DILocation(line: 3909, column: 8, scope: !8091)
!8101 = !DILocation(line: 3910, column: 13, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 3909, column: 54)
!8103 = !DILocation(line: 3911, column: 9, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8102, file: !3, line: 3911, column: 9)
!8105 = !DILocation(line: 3911, column: 23, scope: !8104)
!8106 = !DILocation(line: 3911, column: 27, scope: !8104)
!8107 = !DILocation(line: 3911, column: 20, scope: !8104)
!8108 = !DILocation(line: 3911, column: 9, scope: !8102)
!8109 = !DILocation(line: 3912, column: 19, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8104, file: !3, line: 3911, column: 34)
!8111 = !DILocation(line: 3913, column: 5, scope: !8110)
!8112 = !DILocation(line: 3914, column: 4, scope: !8102)
!8113 = !DILocation(line: 3916, column: 16, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 3915, column: 9)
!8115 = !DILocation(line: 3916, column: 20, scope: !8114)
!8116 = !DILocation(line: 3916, column: 5, scope: !8114)
!8117 = !DILocation(line: 3918, column: 3, scope: !8091)
!8118 = !DILocation(line: 3919, column: 2, scope: !8087)
!8119 = !DILocation(line: 3906, column: 38, scope: !8083)
!8120 = !DILocation(line: 3906, column: 42, scope: !8083)
!8121 = !DILocation(line: 3906, column: 36, scope: !8083)
!8122 = !DILocation(line: 3906, column: 2, scope: !8083)
!8123 = distinct !{!8123, !8084, !8124}
!8124 = !DILocation(line: 3919, column: 2, scope: !8078)
!8125 = !DILocation(line: 3921, column: 6, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8035, file: !3, line: 3921, column: 6)
!8127 = !DILocation(line: 3921, column: 6, scope: !8035)
!8128 = !DILocation(line: 3922, column: 32, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8130, file: !3, line: 3922, column: 7)
!8130 = distinct !DILexicalBlock(scope: !8126, file: !3, line: 3921, column: 15)
!8131 = !DILocation(line: 3922, column: 40, scope: !8129)
!8132 = !DILocation(line: 3922, column: 7, scope: !8129)
!8133 = !DILocation(line: 3922, column: 7, scope: !8130)
!8134 = !DILocation(line: 3923, column: 26, scope: !8129)
!8135 = !DILocation(line: 3923, column: 50, scope: !8129)
!8136 = !DILocation(line: 3923, column: 4, scope: !8129)
!8137 = !DILocation(line: 3925, column: 21, scope: !8130)
!8138 = !DILocation(line: 3925, column: 29, scope: !8130)
!8139 = !DILocation(line: 3925, column: 3, scope: !8130)
!8140 = !DILocation(line: 3926, column: 25, scope: !8130)
!8141 = !DILocation(line: 3926, column: 47, scope: !8130)
!8142 = !DILocation(line: 3926, column: 55, scope: !8130)
!8143 = !DILocation(line: 3926, column: 3, scope: !8130)
!8144 = !DILocation(line: 3928, column: 7, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8130, file: !3, line: 3928, column: 7)
!8146 = !DILocation(line: 3928, column: 7, scope: !8130)
!8147 = !DILocalVariable(name: "cu", scope: !8148, file: !3, line: 3929, type: !2953)
!8148 = distinct !DILexicalBlock(scope: !8145, file: !3, line: 3928, column: 21)
!8149 = !DILocation(line: 3929, column: 11, scope: !8148)
!8150 = !DILocation(line: 3929, column: 16, scope: !8148)
!8151 = !DILocation(line: 3929, column: 24, scope: !8148)
!8152 = !DILocation(line: 3930, column: 4, scope: !8148)
!8153 = !DILocation(line: 3930, column: 8, scope: !8148)
!8154 = !DILocation(line: 3930, column: 16, scope: !8148)
!8155 = !DILocation(line: 3931, column: 3, scope: !8148)
!8156 = !DILocation(line: 3933, column: 3, scope: !8130)
!8157 = !DILocation(line: 3936, column: 3, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8126, file: !3, line: 3935, column: 7)
!8159 = !DILocation(line: 3938, column: 1, scope: !8035)
!8160 = !DILocalVariable(name: "ot", arg: 1, scope: !3204, file: !3, line: 3984, type: !6)
!8161 = !DILocation(line: 3984, column: 47, scope: !3204)
!8162 = !DILocation(line: 3997, column: 2, scope: !3204)
!8163 = !DILocation(line: 3997, column: 6, scope: !3204)
!8164 = !DILocation(line: 3997, column: 11, scope: !3204)
!8165 = !DILocation(line: 3998, column: 2, scope: !3204)
!8166 = !DILocation(line: 3998, column: 6, scope: !3204)
!8167 = !DILocation(line: 3998, column: 18, scope: !3204)
!8168 = !DILocation(line: 3999, column: 2, scope: !3204)
!8169 = !DILocation(line: 3999, column: 6, scope: !3204)
!8170 = !DILocation(line: 3999, column: 13, scope: !3204)
!8171 = !DILocation(line: 4002, column: 2, scope: !3204)
!8172 = !DILocation(line: 4002, column: 6, scope: !3204)
!8173 = !DILocation(line: 4002, column: 13, scope: !3204)
!8174 = !DILocation(line: 4003, column: 2, scope: !3204)
!8175 = !DILocation(line: 4003, column: 6, scope: !3204)
!8176 = !DILocation(line: 4003, column: 11, scope: !3204)
!8177 = !DILocation(line: 4004, column: 2, scope: !3204)
!8178 = !DILocation(line: 4004, column: 6, scope: !3204)
!8179 = !DILocation(line: 4004, column: 11, scope: !3204)
!8180 = !DILocation(line: 4007, column: 2, scope: !3204)
!8181 = !DILocation(line: 4007, column: 6, scope: !3204)
!8182 = !DILocation(line: 4007, column: 11, scope: !3204)
!8183 = !DILocation(line: 4010, column: 26, scope: !3204)
!8184 = !DILocation(line: 4010, column: 30, scope: !3204)
!8185 = !DILocation(line: 4010, column: 13, scope: !3204)
!8186 = !DILocation(line: 4010, column: 2, scope: !3204)
!8187 = !DILocation(line: 4010, column: 6, scope: !3204)
!8188 = !DILocation(line: 4010, column: 11, scope: !3204)
!8189 = !DILocation(line: 4011, column: 1, scope: !3204)
!8190 = distinct !DISubprogram(name: "set_handle_type_exec", scope: !3, file: !3, line: 3971, type: !3224, scopeLine: 3972, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!8191 = !DILocalVariable(name: "C", arg: 1, scope: !8190, file: !3, line: 3971, type: !3226)
!8192 = !DILocation(line: 3971, column: 43, scope: !8190)
!8193 = !DILocalVariable(name: "op", arg: 2, scope: !8190, file: !3, line: 3971, type: !3228)
!8194 = !DILocation(line: 3971, column: 58, scope: !8190)
!8195 = !DILocalVariable(name: "obedit", scope: !8190, file: !3, line: 3973, type: !3242)
!8196 = !DILocation(line: 3973, column: 10, scope: !8190)
!8197 = !DILocation(line: 3973, column: 40, scope: !8190)
!8198 = !DILocation(line: 3973, column: 19, scope: !8190)
!8199 = !DILocalVariable(name: "editnurb", scope: !8190, file: !3, line: 3974, type: !486)
!8200 = !DILocation(line: 3974, column: 12, scope: !8190)
!8201 = !DILocation(line: 3974, column: 44, scope: !8190)
!8202 = !DILocation(line: 3974, column: 23, scope: !8190)
!8203 = !DILocation(line: 3976, column: 27, scope: !8190)
!8204 = !DILocation(line: 3976, column: 50, scope: !8190)
!8205 = !DILocation(line: 3976, column: 54, scope: !8190)
!8206 = !DILocation(line: 3976, column: 37, scope: !8190)
!8207 = !DILocation(line: 3976, column: 2, scope: !8190)
!8208 = !DILocation(line: 3978, column: 24, scope: !8190)
!8209 = !DILocation(line: 3978, column: 46, scope: !8190)
!8210 = !DILocation(line: 3978, column: 54, scope: !8190)
!8211 = !DILocation(line: 3978, column: 2, scope: !8190)
!8212 = !DILocation(line: 3979, column: 20, scope: !8190)
!8213 = !DILocation(line: 3979, column: 28, scope: !8190)
!8214 = !DILocation(line: 3979, column: 2, scope: !8190)
!8215 = !DILocation(line: 3981, column: 2, scope: !8190)
!8216 = distinct !DISubprogram(name: "CURVE_OT_normals_make_consistent", scope: !3, file: !3, line: 4029, type: !4, scopeLine: 4030, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!8217 = !DILocalVariable(name: "ot", arg: 1, scope: !8216, file: !3, line: 4029, type: !6)
!8218 = !DILocation(line: 4029, column: 55, scope: !8216)
!8219 = !DILocation(line: 4032, column: 2, scope: !8216)
!8220 = !DILocation(line: 4032, column: 6, scope: !8216)
!8221 = !DILocation(line: 4032, column: 11, scope: !8216)
!8222 = !DILocation(line: 4033, column: 2, scope: !8216)
!8223 = !DILocation(line: 4033, column: 6, scope: !8216)
!8224 = !DILocation(line: 4033, column: 18, scope: !8216)
!8225 = !DILocation(line: 4034, column: 2, scope: !8216)
!8226 = !DILocation(line: 4034, column: 6, scope: !8216)
!8227 = !DILocation(line: 4034, column: 13, scope: !8216)
!8228 = !DILocation(line: 4037, column: 2, scope: !8216)
!8229 = !DILocation(line: 4037, column: 6, scope: !8216)
!8230 = !DILocation(line: 4037, column: 11, scope: !8216)
!8231 = !DILocation(line: 4038, column: 2, scope: !8216)
!8232 = !DILocation(line: 4038, column: 6, scope: !8216)
!8233 = !DILocation(line: 4038, column: 11, scope: !8216)
!8234 = !DILocation(line: 4041, column: 2, scope: !8216)
!8235 = !DILocation(line: 4041, column: 6, scope: !8216)
!8236 = !DILocation(line: 4041, column: 11, scope: !8216)
!8237 = !DILocation(line: 4044, column: 18, scope: !8216)
!8238 = !DILocation(line: 4044, column: 22, scope: !8216)
!8239 = !DILocation(line: 4044, column: 2, scope: !8216)
!8240 = !DILocation(line: 4045, column: 1, scope: !8216)
!8241 = distinct !DISubprogram(name: "curve_normals_make_consistent_exec", scope: !3, file: !3, line: 4015, type: !3224, scopeLine: 4016, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!8242 = !DILocalVariable(name: "C", arg: 1, scope: !8241, file: !3, line: 4015, type: !3226)
!8243 = !DILocation(line: 4015, column: 57, scope: !8241)
!8244 = !DILocalVariable(name: "op", arg: 2, scope: !8241, file: !3, line: 4015, type: !3228)
!8245 = !DILocation(line: 4015, column: 72, scope: !8241)
!8246 = !DILocalVariable(name: "obedit", scope: !8241, file: !3, line: 4017, type: !3242)
!8247 = !DILocation(line: 4017, column: 10, scope: !8241)
!8248 = !DILocation(line: 4017, column: 40, scope: !8241)
!8249 = !DILocation(line: 4017, column: 19, scope: !8241)
!8250 = !DILocalVariable(name: "editnurb", scope: !8241, file: !3, line: 4018, type: !486)
!8251 = !DILocation(line: 4018, column: 12, scope: !8241)
!8252 = !DILocation(line: 4018, column: 44, scope: !8241)
!8253 = !DILocation(line: 4018, column: 23, scope: !8241)
!8254 = !DILocalVariable(name: "calc_length", scope: !8241, file: !3, line: 4019, type: !7655)
!8255 = !DILocation(line: 4019, column: 13, scope: !8241)
!8256 = !DILocation(line: 4019, column: 43, scope: !8241)
!8257 = !DILocation(line: 4019, column: 47, scope: !8241)
!8258 = !DILocation(line: 4019, column: 27, scope: !8241)
!8259 = !DILocation(line: 4021, column: 35, scope: !8241)
!8260 = !DILocation(line: 4021, column: 45, scope: !8241)
!8261 = !DILocation(line: 4021, column: 2, scope: !8241)
!8262 = !DILocation(line: 4023, column: 24, scope: !8241)
!8263 = !DILocation(line: 4023, column: 46, scope: !8241)
!8264 = !DILocation(line: 4023, column: 54, scope: !8241)
!8265 = !DILocation(line: 4023, column: 2, scope: !8241)
!8266 = !DILocation(line: 4024, column: 20, scope: !8241)
!8267 = !DILocation(line: 4024, column: 28, scope: !8241)
!8268 = !DILocation(line: 4024, column: 2, scope: !8241)
!8269 = !DILocation(line: 4026, column: 2, scope: !8241)
!8270 = distinct !DISubprogram(name: "CURVE_OT_make_segment", scope: !3, file: !3, line: 4616, type: !4, scopeLine: 4617, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!8271 = !DILocalVariable(name: "ot", arg: 1, scope: !8270, file: !3, line: 4616, type: !6)
!8272 = !DILocation(line: 4616, column: 44, scope: !8270)
!8273 = !DILocation(line: 4619, column: 2, scope: !8270)
!8274 = !DILocation(line: 4619, column: 6, scope: !8270)
!8275 = !DILocation(line: 4619, column: 11, scope: !8270)
!8276 = !DILocation(line: 4620, column: 2, scope: !8270)
!8277 = !DILocation(line: 4620, column: 6, scope: !8270)
!8278 = !DILocation(line: 4620, column: 13, scope: !8270)
!8279 = !DILocation(line: 4621, column: 2, scope: !8270)
!8280 = !DILocation(line: 4621, column: 6, scope: !8270)
!8281 = !DILocation(line: 4621, column: 18, scope: !8270)
!8282 = !DILocation(line: 4624, column: 2, scope: !8270)
!8283 = !DILocation(line: 4624, column: 6, scope: !8270)
!8284 = !DILocation(line: 4624, column: 11, scope: !8270)
!8285 = !DILocation(line: 4625, column: 2, scope: !8270)
!8286 = !DILocation(line: 4625, column: 6, scope: !8270)
!8287 = !DILocation(line: 4625, column: 11, scope: !8270)
!8288 = !DILocation(line: 4628, column: 2, scope: !8270)
!8289 = !DILocation(line: 4628, column: 6, scope: !8270)
!8290 = !DILocation(line: 4628, column: 11, scope: !8270)
!8291 = !DILocation(line: 4629, column: 1, scope: !8270)
!8292 = distinct !DISubprogram(name: "make_segment_exec", scope: !3, file: !3, line: 4415, type: !3224, scopeLine: 4416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!8293 = !DILocalVariable(name: "C", arg: 1, scope: !8292, file: !3, line: 4415, type: !3226)
!8294 = !DILocation(line: 4415, column: 40, scope: !8292)
!8295 = !DILocalVariable(name: "op", arg: 2, scope: !8292, file: !3, line: 4415, type: !3228)
!8296 = !DILocation(line: 4415, column: 55, scope: !8292)
!8297 = !DILocalVariable(name: "obedit", scope: !8292, file: !3, line: 4418, type: !3242)
!8298 = !DILocation(line: 4418, column: 10, scope: !8292)
!8299 = !DILocation(line: 4418, column: 40, scope: !8292)
!8300 = !DILocation(line: 4418, column: 19, scope: !8292)
!8301 = !DILocalVariable(name: "cu", scope: !8292, file: !3, line: 4419, type: !2953)
!8302 = !DILocation(line: 4419, column: 9, scope: !8292)
!8303 = !DILocation(line: 4419, column: 14, scope: !8292)
!8304 = !DILocation(line: 4419, column: 22, scope: !8292)
!8305 = !DILocalVariable(name: "nubase", scope: !8292, file: !3, line: 4420, type: !486)
!8306 = !DILocation(line: 4420, column: 12, scope: !8292)
!8307 = !DILocation(line: 4420, column: 42, scope: !8292)
!8308 = !DILocation(line: 4420, column: 21, scope: !8292)
!8309 = !DILocalVariable(name: "nu", scope: !8292, file: !3, line: 4421, type: !3163)
!8310 = !DILocation(line: 4421, column: 8, scope: !8292)
!8311 = !DILocalVariable(name: "nu1", scope: !8292, file: !3, line: 4421, type: !3163)
!8312 = !DILocation(line: 4421, column: 13, scope: !8292)
!8313 = !DILocalVariable(name: "nu2", scope: !8292, file: !3, line: 4421, type: !3163)
!8314 = !DILocation(line: 4421, column: 26, scope: !8292)
!8315 = !DILocalVariable(name: "bp", scope: !8292, file: !3, line: 4422, type: !3093)
!8316 = !DILocation(line: 4422, column: 10, scope: !8292)
!8317 = !DILocalVariable(name: "ok", scope: !8292, file: !3, line: 4423, type: !1081)
!8318 = !DILocation(line: 4423, column: 7, scope: !8292)
!8319 = !DILocation(line: 4427, column: 6, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 4427, column: 6)
!8321 = !DILocation(line: 4427, column: 14, scope: !8320)
!8322 = !DILocation(line: 4427, column: 19, scope: !8320)
!8323 = !DILocation(line: 4427, column: 6, scope: !8292)
!8324 = !DILocation(line: 4427, column: 36, scope: !8320)
!8325 = !DILocation(line: 4427, column: 44, scope: !8320)
!8326 = !DILocation(line: 4427, column: 34, scope: !8320)
!8327 = !DILocation(line: 4427, column: 31, scope: !8320)
!8328 = !DILocation(line: 4428, column: 10, scope: !8320)
!8329 = !DILocation(line: 4430, column: 2, scope: !8292)
!8330 = !DILocation(line: 4430, column: 9, scope: !8292)
!8331 = !DILocation(line: 4431, column: 17, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8333, file: !3, line: 4431, column: 7)
!8333 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 4430, column: 13)
!8334 = !DILocation(line: 4431, column: 7, scope: !8332)
!8335 = !DILocation(line: 4431, column: 7, scope: !8333)
!8336 = !DILocation(line: 4433, column: 8, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 4433, column: 8)
!8338 = distinct !DILexicalBlock(scope: !8332, file: !3, line: 4431, column: 22)
!8339 = !DILocation(line: 4433, column: 12, scope: !8337)
!8340 = !DILocation(line: 4433, column: 18, scope: !8337)
!8341 = !DILocation(line: 4433, column: 22, scope: !8337)
!8342 = !DILocation(line: 4433, column: 25, scope: !8337)
!8343 = !DILocation(line: 4433, column: 29, scope: !8337)
!8344 = !DILocation(line: 4433, column: 35, scope: !8337)
!8345 = !DILocation(line: 4433, column: 8, scope: !8338)
!8346 = !DILocation(line: 4433, column: 40, scope: !8337)
!8347 = !DILocation(line: 4434, column: 24, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 4434, column: 8)
!8349 = !DILocation(line: 4434, column: 28, scope: !8348)
!8350 = !DILocation(line: 4434, column: 8, scope: !8348)
!8351 = !DILocation(line: 4434, column: 32, scope: !8348)
!8352 = !DILocation(line: 4434, column: 8, scope: !8338)
!8353 = !DILocation(line: 4434, column: 37, scope: !8348)
!8354 = !DILocation(line: 4435, column: 24, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 4435, column: 8)
!8356 = !DILocation(line: 4435, column: 28, scope: !8355)
!8357 = !DILocation(line: 4435, column: 8, scope: !8355)
!8358 = !DILocation(line: 4435, column: 32, scope: !8355)
!8359 = !DILocation(line: 4435, column: 8, scope: !8338)
!8360 = !DILocation(line: 4437, column: 9, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8362, file: !3, line: 4437, column: 9)
!8362 = distinct !DILexicalBlock(scope: !8355, file: !3, line: 4435, column: 38)
!8363 = !DILocation(line: 4437, column: 13, scope: !8361)
!8364 = !DILocation(line: 4437, column: 19, scope: !8361)
!8365 = !DILocation(line: 4437, column: 9, scope: !8362)
!8366 = !DILocation(line: 4438, column: 11, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8368, file: !3, line: 4438, column: 10)
!8368 = distinct !DILexicalBlock(scope: !8361, file: !3, line: 4437, column: 25)
!8369 = !DILocation(line: 4438, column: 15, scope: !8367)
!8370 = !DILocation(line: 4438, column: 19, scope: !8367)
!8371 = !DILocation(line: 4438, column: 22, scope: !8367)
!8372 = !DILocation(line: 4438, column: 32, scope: !8367)
!8373 = !DILocation(line: 4438, column: 36, scope: !8367)
!8374 = !DILocation(line: 4438, column: 40, scope: !8367)
!8375 = !DILocation(line: 4438, column: 43, scope: !8367)
!8376 = !DILocation(line: 4438, column: 47, scope: !8367)
!8377 = !DILocation(line: 4438, column: 53, scope: !8367)
!8378 = !DILocation(line: 4438, column: 58, scope: !8367)
!8379 = !DILocation(line: 4438, column: 61, scope: !8367)
!8380 = !DILocation(line: 4438, column: 10, scope: !8368)
!8381 = !DILocation(line: 4440, column: 6, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8367, file: !3, line: 4438, column: 72)
!8383 = !DILocation(line: 4442, column: 7, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8367, file: !3, line: 4441, column: 11)
!8385 = !DILocation(line: 4444, column: 5, scope: !8368)
!8386 = !DILocation(line: 4445, column: 4, scope: !8362)
!8387 = !DILocation(line: 4446, column: 3, scope: !8338)
!8388 = !DILocation(line: 4447, column: 8, scope: !8333)
!8389 = !DILocation(line: 4447, column: 12, scope: !8333)
!8390 = !DILocation(line: 4447, column: 6, scope: !8333)
!8391 = distinct !{!8391, !8329, !8392}
!8392 = !DILocation(line: 4448, column: 2, scope: !8292)
!8393 = !DILocation(line: 4450, column: 6, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 4450, column: 6)
!8395 = !DILocation(line: 4450, column: 6, scope: !8292)
!8396 = !DILocation(line: 4451, column: 21, scope: !8394)
!8397 = !DILocation(line: 4451, column: 24, scope: !8394)
!8398 = !DILocation(line: 4451, column: 10, scope: !8394)
!8399 = !DILocation(line: 4451, column: 3, scope: !8394)
!8400 = !DILocation(line: 4454, column: 12, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 4454, column: 2)
!8402 = !DILocation(line: 4454, column: 20, scope: !8401)
!8403 = !DILocation(line: 4454, column: 10, scope: !8401)
!8404 = !DILocation(line: 4454, column: 7, scope: !8401)
!8405 = !DILocation(line: 4454, column: 27, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8401, file: !3, line: 4454, column: 2)
!8407 = !DILocation(line: 4454, column: 2, scope: !8401)
!8408 = !DILocation(line: 4455, column: 7, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 4455, column: 7)
!8410 = distinct !DILexicalBlock(scope: !8406, file: !3, line: 4454, column: 46)
!8411 = !DILocation(line: 4455, column: 11, scope: !8409)
!8412 = !DILocation(line: 4455, column: 17, scope: !8409)
!8413 = !DILocation(line: 4455, column: 7, scope: !8410)
!8414 = !DILocation(line: 4456, column: 4, scope: !8409)
!8415 = !DILocation(line: 4456, column: 8, scope: !8409)
!8416 = !DILocation(line: 4456, column: 14, scope: !8409)
!8417 = !DILocation(line: 4458, column: 8, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 4458, column: 7)
!8419 = !DILocation(line: 4458, column: 12, scope: !8418)
!8420 = !DILocation(line: 4458, column: 18, scope: !8418)
!8421 = !DILocation(line: 4458, column: 36, scope: !8418)
!8422 = !DILocation(line: 4458, column: 7, scope: !8410)
!8423 = !DILocation(line: 4459, column: 8, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8425, file: !3, line: 4459, column: 8)
!8425 = distinct !DILexicalBlock(scope: !8418, file: !3, line: 4458, column: 42)
!8426 = !DILocation(line: 4459, column: 12, scope: !8424)
!8427 = !DILocation(line: 4459, column: 17, scope: !8424)
!8428 = !DILocation(line: 4459, column: 8, scope: !8425)
!8429 = !DILocation(line: 4460, column: 9, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8431, file: !3, line: 4460, column: 9)
!8431 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 4459, column: 31)
!8432 = !DILocation(line: 4460, column: 9, scope: !8431)
!8433 = !DILocation(line: 4462, column: 10, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8435, file: !3, line: 4462, column: 10)
!8435 = distinct !DILexicalBlock(scope: !8430, file: !3, line: 4460, column: 68)
!8436 = !DILocation(line: 4462, column: 14, scope: !8434)
!8437 = !DILocation(line: 4462, column: 10, scope: !8435)
!8438 = !DILocation(line: 4463, column: 13, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8434, file: !3, line: 4462, column: 23)
!8440 = !DILocation(line: 4463, column: 11, scope: !8439)
!8441 = !DILocation(line: 4464, column: 6, scope: !8439)
!8442 = !DILocation(line: 4465, column: 15, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8434, file: !3, line: 4465, column: 15)
!8444 = !DILocation(line: 4465, column: 19, scope: !8443)
!8445 = !DILocation(line: 4465, column: 15, scope: !8434)
!8446 = !DILocation(line: 4466, column: 13, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8443, file: !3, line: 4465, column: 28)
!8448 = !DILocation(line: 4466, column: 11, scope: !8447)
!8449 = !DILocation(line: 4471, column: 12, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8447, file: !3, line: 4471, column: 11)
!8451 = !DILocation(line: 4471, column: 11, scope: !8447)
!8452 = !DILocation(line: 4472, column: 34, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8450, file: !3, line: 4471, column: 54)
!8454 = !DILocation(line: 4472, column: 8, scope: !8453)
!8455 = !DILocation(line: 4473, column: 36, scope: !8453)
!8456 = !DILocation(line: 4473, column: 40, scope: !8453)
!8457 = !DILocation(line: 4473, column: 8, scope: !8453)
!8458 = !DILocation(line: 4474, column: 7, scope: !8453)
!8459 = !DILocation(line: 4475, column: 6, scope: !8447)
!8460 = !DILocation(line: 4476, column: 5, scope: !8435)
!8461 = !DILocation(line: 4477, column: 14, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8430, file: !3, line: 4477, column: 14)
!8463 = !DILocation(line: 4477, column: 14, scope: !8430)
!8464 = !DILocation(line: 4479, column: 10, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8466, file: !3, line: 4479, column: 10)
!8466 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 4477, column: 55)
!8467 = !DILocation(line: 4479, column: 14, scope: !8465)
!8468 = !DILocation(line: 4479, column: 10, scope: !8466)
!8469 = !DILocation(line: 4480, column: 13, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 4479, column: 23)
!8471 = !DILocation(line: 4480, column: 11, scope: !8470)
!8472 = !DILocation(line: 4481, column: 6, scope: !8470)
!8473 = !DILocation(line: 4482, column: 15, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 4482, column: 15)
!8475 = !DILocation(line: 4482, column: 19, scope: !8474)
!8476 = !DILocation(line: 4482, column: 15, scope: !8465)
!8477 = !DILocation(line: 4483, column: 13, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8474, file: !3, line: 4482, column: 28)
!8479 = !DILocation(line: 4483, column: 11, scope: !8478)
!8480 = !DILocation(line: 4488, column: 12, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 4488, column: 11)
!8482 = !DILocation(line: 4488, column: 11, scope: !8478)
!8483 = !DILocation(line: 4489, column: 34, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8481, file: !3, line: 4488, column: 72)
!8485 = !DILocation(line: 4489, column: 8, scope: !8484)
!8486 = !DILocation(line: 4490, column: 36, scope: !8484)
!8487 = !DILocation(line: 4490, column: 40, scope: !8484)
!8488 = !DILocation(line: 4490, column: 8, scope: !8484)
!8489 = !DILocation(line: 4491, column: 7, scope: !8484)
!8490 = !DILocation(line: 4492, column: 6, scope: !8478)
!8491 = !DILocation(line: 4493, column: 5, scope: !8466)
!8492 = !DILocation(line: 4494, column: 4, scope: !8431)
!8493 = !DILocation(line: 4495, column: 13, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 4495, column: 13)
!8495 = !DILocation(line: 4495, column: 17, scope: !8494)
!8496 = !DILocation(line: 4495, column: 23, scope: !8494)
!8497 = !DILocation(line: 4495, column: 13, scope: !8424)
!8498 = !DILocation(line: 4501, column: 10, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8494, file: !3, line: 4495, column: 29)
!8500 = !DILocation(line: 4501, column: 14, scope: !8499)
!8501 = !DILocation(line: 4501, column: 8, scope: !8499)
!8502 = !DILocation(line: 4502, column: 9, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8499, file: !3, line: 4502, column: 9)
!8504 = !DILocation(line: 4502, column: 12, scope: !8503)
!8505 = !DILocation(line: 4502, column: 16, scope: !8503)
!8506 = !DILocation(line: 4502, column: 22, scope: !8503)
!8507 = !DILocation(line: 4502, column: 27, scope: !8503)
!8508 = !DILocation(line: 4502, column: 30, scope: !8503)
!8509 = !DILocation(line: 4502, column: 9, scope: !8499)
!8510 = !DILocation(line: 4503, column: 10, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8512, file: !3, line: 4503, column: 10)
!8512 = distinct !DILexicalBlock(scope: !8503, file: !3, line: 4502, column: 41)
!8513 = !DILocation(line: 4503, column: 14, scope: !8511)
!8514 = !DILocation(line: 4503, column: 10, scope: !8512)
!8515 = !DILocation(line: 4504, column: 13, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8511, file: !3, line: 4503, column: 23)
!8517 = !DILocation(line: 4504, column: 11, scope: !8516)
!8518 = !DILocation(line: 4505, column: 6, scope: !8516)
!8519 = !DILocation(line: 4506, column: 15, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8511, file: !3, line: 4506, column: 15)
!8521 = !DILocation(line: 4506, column: 19, scope: !8520)
!8522 = !DILocation(line: 4506, column: 15, scope: !8511)
!8523 = !DILocation(line: 4507, column: 13, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8520, file: !3, line: 4506, column: 28)
!8525 = !DILocation(line: 4507, column: 11, scope: !8524)
!8526 = !DILocation(line: 4509, column: 12, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 4509, column: 11)
!8528 = !DILocation(line: 4509, column: 16, scope: !8527)
!8529 = !DILocation(line: 4509, column: 19, scope: !8527)
!8530 = !DILocation(line: 4509, column: 29, scope: !8527)
!8531 = !DILocation(line: 4509, column: 11, scope: !8524)
!8532 = !DILocation(line: 4510, column: 34, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8527, file: !3, line: 4509, column: 35)
!8534 = !DILocation(line: 4510, column: 8, scope: !8533)
!8535 = !DILocation(line: 4511, column: 36, scope: !8533)
!8536 = !DILocation(line: 4511, column: 40, scope: !8533)
!8537 = !DILocation(line: 4511, column: 8, scope: !8533)
!8538 = !DILocation(line: 4512, column: 7, scope: !8533)
!8539 = !DILocation(line: 4513, column: 6, scope: !8524)
!8540 = !DILocation(line: 4514, column: 5, scope: !8512)
!8541 = !DILocation(line: 4515, column: 14, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8503, file: !3, line: 4515, column: 14)
!8543 = !DILocation(line: 4515, column: 18, scope: !8542)
!8544 = !DILocation(line: 4515, column: 21, scope: !8542)
!8545 = !DILocation(line: 4515, column: 14, scope: !8503)
!8546 = !DILocation(line: 4516, column: 10, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8548, file: !3, line: 4516, column: 10)
!8548 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 4515, column: 31)
!8549 = !DILocation(line: 4516, column: 14, scope: !8547)
!8550 = !DILocation(line: 4516, column: 10, scope: !8548)
!8551 = !DILocation(line: 4517, column: 13, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8547, file: !3, line: 4516, column: 23)
!8553 = !DILocation(line: 4517, column: 11, scope: !8552)
!8554 = !DILocation(line: 4518, column: 6, scope: !8552)
!8555 = !DILocation(line: 4519, column: 15, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8547, file: !3, line: 4519, column: 15)
!8557 = !DILocation(line: 4519, column: 19, scope: !8556)
!8558 = !DILocation(line: 4519, column: 15, scope: !8547)
!8559 = !DILocation(line: 4520, column: 13, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8556, file: !3, line: 4519, column: 28)
!8561 = !DILocation(line: 4520, column: 11, scope: !8560)
!8562 = !DILocation(line: 4522, column: 12, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8560, file: !3, line: 4522, column: 11)
!8564 = !DILocation(line: 4522, column: 15, scope: !8563)
!8565 = !DILocation(line: 4522, column: 19, scope: !8563)
!8566 = !DILocation(line: 4522, column: 25, scope: !8563)
!8567 = !DILocation(line: 4522, column: 30, scope: !8563)
!8568 = !DILocation(line: 4522, column: 33, scope: !8563)
!8569 = !DILocation(line: 4522, column: 43, scope: !8563)
!8570 = !DILocation(line: 4522, column: 11, scope: !8560)
!8571 = !DILocation(line: 4523, column: 34, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8563, file: !3, line: 4522, column: 49)
!8573 = !DILocation(line: 4523, column: 8, scope: !8572)
!8574 = !DILocation(line: 4524, column: 36, scope: !8572)
!8575 = !DILocation(line: 4524, column: 40, scope: !8572)
!8576 = !DILocation(line: 4524, column: 8, scope: !8572)
!8577 = !DILocation(line: 4525, column: 7, scope: !8572)
!8578 = !DILocation(line: 4526, column: 6, scope: !8560)
!8579 = !DILocation(line: 4527, column: 5, scope: !8548)
!8580 = !DILocation(line: 4528, column: 4, scope: !8499)
!8581 = !DILocation(line: 4529, column: 3, scope: !8425)
!8582 = !DILocation(line: 4531, column: 7, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 4531, column: 7)
!8584 = !DILocation(line: 4531, column: 11, scope: !8583)
!8585 = !DILocation(line: 4531, column: 14, scope: !8583)
!8586 = !DILocation(line: 4531, column: 7, scope: !8410)
!8587 = !DILocation(line: 4533, column: 4, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 4531, column: 19)
!8589 = !DILocation(line: 4535, column: 2, scope: !8410)
!8590 = !DILocation(line: 4454, column: 36, scope: !8406)
!8591 = !DILocation(line: 4454, column: 40, scope: !8406)
!8592 = !DILocation(line: 4454, column: 34, scope: !8406)
!8593 = !DILocation(line: 4454, column: 2, scope: !8406)
!8594 = distinct !{!8594, !8407, !8595}
!8595 = !DILocation(line: 4535, column: 2, scope: !8401)
!8596 = !DILocation(line: 4537, column: 7, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 4537, column: 6)
!8598 = !DILocation(line: 4537, column: 11, scope: !8597)
!8599 = !DILocation(line: 4537, column: 14, scope: !8597)
!8600 = !DILocation(line: 4537, column: 19, scope: !8597)
!8601 = !DILocation(line: 4537, column: 23, scope: !8597)
!8602 = !DILocation(line: 4537, column: 30, scope: !8597)
!8603 = !DILocation(line: 4537, column: 27, scope: !8597)
!8604 = !DILocation(line: 4537, column: 6, scope: !8292)
!8605 = !DILocation(line: 4538, column: 7, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 4538, column: 7)
!8607 = distinct !DILexicalBlock(scope: !8597, file: !3, line: 4537, column: 36)
!8608 = !DILocation(line: 4538, column: 12, scope: !8606)
!8609 = !DILocation(line: 4538, column: 20, scope: !8606)
!8610 = !DILocation(line: 4538, column: 25, scope: !8606)
!8611 = !DILocation(line: 4538, column: 17, scope: !8606)
!8612 = !DILocation(line: 4538, column: 7, scope: !8607)
!8613 = !DILocation(line: 4539, column: 8, scope: !8614)
!8614 = distinct !DILexicalBlock(scope: !8615, file: !3, line: 4539, column: 8)
!8615 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 4538, column: 31)
!8616 = !DILocation(line: 4539, column: 13, scope: !8614)
!8617 = !DILocation(line: 4539, column: 18, scope: !8614)
!8618 = !DILocation(line: 4539, column: 8, scope: !8615)
!8619 = !DILocalVariable(name: "bezt", scope: !8620, file: !3, line: 4540, type: !3104)
!8620 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 4539, column: 32)
!8621 = !DILocation(line: 4540, column: 16, scope: !8620)
!8622 = !DILocation(line: 4540, column: 36, scope: !8620)
!8623 = !DILocation(line: 4540, column: 49, scope: !8620)
!8624 = !DILocation(line: 4540, column: 54, scope: !8620)
!8625 = !DILocation(line: 4540, column: 62, scope: !8620)
!8626 = !DILocation(line: 4540, column: 67, scope: !8620)
!8627 = !DILocation(line: 4540, column: 60, scope: !8620)
!8628 = !DILocation(line: 4540, column: 48, scope: !8620)
!8629 = !DILocation(line: 4540, column: 74, scope: !8620)
!8630 = !DILocation(line: 4540, column: 23, scope: !8620)
!8631 = !DILocation(line: 4541, column: 22, scope: !8620)
!8632 = !DILocation(line: 4541, column: 26, scope: !8620)
!8633 = !DILocation(line: 4541, column: 36, scope: !8620)
!8634 = !DILocation(line: 4541, column: 42, scope: !8620)
!8635 = !DILocation(line: 4541, column: 47, scope: !8620)
!8636 = !DILocation(line: 4541, column: 53, scope: !8620)
!8637 = !DILocation(line: 4541, column: 58, scope: !8620)
!8638 = !DILocation(line: 4541, column: 5, scope: !8620)
!8639 = !DILocation(line: 4542, column: 22, scope: !8620)
!8640 = !DILocation(line: 4542, column: 26, scope: !8620)
!8641 = !DILocation(line: 4542, column: 36, scope: !8620)
!8642 = !DILocation(line: 4542, column: 43, scope: !8620)
!8643 = !DILocation(line: 4542, column: 48, scope: !8620)
!8644 = !DILocation(line: 4542, column: 41, scope: !8620)
!8645 = !DILocation(line: 4542, column: 55, scope: !8620)
!8646 = !DILocation(line: 4542, column: 60, scope: !8620)
!8647 = !DILocation(line: 4542, column: 66, scope: !8620)
!8648 = !DILocation(line: 4542, column: 71, scope: !8620)
!8649 = !DILocation(line: 4542, column: 5, scope: !8620)
!8650 = !DILocation(line: 4544, column: 5, scope: !8620)
!8651 = !DILocation(line: 4544, column: 15, scope: !8620)
!8652 = !DILocation(line: 4544, column: 20, scope: !8620)
!8653 = !DILocation(line: 4545, column: 17, scope: !8620)
!8654 = !DILocation(line: 4545, column: 5, scope: !8620)
!8655 = !DILocation(line: 4545, column: 10, scope: !8620)
!8656 = !DILocation(line: 4545, column: 15, scope: !8620)
!8657 = !DILocation(line: 4546, column: 19, scope: !8620)
!8658 = !DILocation(line: 4546, column: 24, scope: !8620)
!8659 = !DILocation(line: 4546, column: 5, scope: !8620)
!8660 = !DILocation(line: 4546, column: 10, scope: !8620)
!8661 = !DILocation(line: 4546, column: 16, scope: !8620)
!8662 = !DILocation(line: 4547, column: 17, scope: !8620)
!8663 = !DILocation(line: 4547, column: 25, scope: !8620)
!8664 = !DILocation(line: 4547, column: 5, scope: !8620)
!8665 = !DILocation(line: 4548, column: 22, scope: !8620)
!8666 = !DILocation(line: 4548, column: 26, scope: !8620)
!8667 = !DILocation(line: 4548, column: 36, scope: !8620)
!8668 = !DILocation(line: 4548, column: 5, scope: !8620)
!8669 = !DILocation(line: 4549, column: 19, scope: !8620)
!8670 = !DILocation(line: 4549, column: 5, scope: !8620)
!8671 = !DILocation(line: 4549, column: 29, scope: !8620)
!8672 = !DILocation(line: 4550, column: 27, scope: !8620)
!8673 = !DILocation(line: 4550, column: 5, scope: !8620)
!8674 = !DILocation(line: 4551, column: 4, scope: !8620)
!8675 = !DILocation(line: 4553, column: 20, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 4552, column: 9)
!8677 = !DILocation(line: 4553, column: 33, scope: !8676)
!8678 = !DILocation(line: 4553, column: 38, scope: !8676)
!8679 = !DILocation(line: 4553, column: 46, scope: !8676)
!8680 = !DILocation(line: 4553, column: 51, scope: !8676)
!8681 = !DILocation(line: 4553, column: 44, scope: !8676)
!8682 = !DILocation(line: 4553, column: 32, scope: !8676)
!8683 = !DILocation(line: 4553, column: 58, scope: !8676)
!8684 = !DILocation(line: 4553, column: 10, scope: !8676)
!8685 = !DILocation(line: 4553, column: 8, scope: !8676)
!8686 = !DILocation(line: 4554, column: 20, scope: !8676)
!8687 = !DILocation(line: 4554, column: 24, scope: !8676)
!8688 = !DILocation(line: 4554, column: 34, scope: !8676)
!8689 = !DILocation(line: 4554, column: 38, scope: !8676)
!8690 = !DILocation(line: 4554, column: 43, scope: !8676)
!8691 = !DILocation(line: 4554, column: 47, scope: !8676)
!8692 = !DILocation(line: 4554, column: 52, scope: !8676)
!8693 = !DILocation(line: 4554, column: 5, scope: !8676)
!8694 = !DILocation(line: 4555, column: 20, scope: !8676)
!8695 = !DILocation(line: 4555, column: 24, scope: !8676)
!8696 = !DILocation(line: 4555, column: 34, scope: !8676)
!8697 = !DILocation(line: 4555, column: 39, scope: !8676)
!8698 = !DILocation(line: 4555, column: 44, scope: !8676)
!8699 = !DILocation(line: 4555, column: 37, scope: !8676)
!8700 = !DILocation(line: 4555, column: 51, scope: !8676)
!8701 = !DILocation(line: 4555, column: 56, scope: !8676)
!8702 = !DILocation(line: 4555, column: 60, scope: !8676)
!8703 = !DILocation(line: 4555, column: 65, scope: !8676)
!8704 = !DILocation(line: 4555, column: 5, scope: !8676)
!8705 = !DILocation(line: 4556, column: 5, scope: !8676)
!8706 = !DILocation(line: 4556, column: 15, scope: !8676)
!8707 = !DILocation(line: 4556, column: 20, scope: !8676)
!8708 = !DILocation(line: 4557, column: 15, scope: !8676)
!8709 = !DILocation(line: 4557, column: 5, scope: !8676)
!8710 = !DILocation(line: 4557, column: 10, scope: !8676)
!8711 = !DILocation(line: 4557, column: 13, scope: !8676)
!8712 = !DILocation(line: 4561, column: 19, scope: !8676)
!8713 = !DILocation(line: 4561, column: 24, scope: !8676)
!8714 = !DILocation(line: 4561, column: 5, scope: !8676)
!8715 = !DILocation(line: 4561, column: 10, scope: !8676)
!8716 = !DILocation(line: 4561, column: 16, scope: !8676)
!8717 = !DILocation(line: 4562, column: 17, scope: !8676)
!8718 = !DILocation(line: 4562, column: 25, scope: !8676)
!8719 = !DILocation(line: 4562, column: 5, scope: !8676)
!8720 = !DILocation(line: 4565, column: 9, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8676, file: !3, line: 4565, column: 9)
!8722 = !DILocation(line: 4565, column: 14, scope: !8721)
!8723 = !DILocation(line: 4565, column: 19, scope: !8721)
!8724 = !DILocation(line: 4565, column: 9, scope: !8676)
!8725 = !DILocation(line: 4566, column: 10, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8727, file: !3, line: 4566, column: 10)
!8727 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 4565, column: 32)
!8728 = !DILocation(line: 4566, column: 15, scope: !8726)
!8729 = !DILocation(line: 4566, column: 22, scope: !8726)
!8730 = !DILocation(line: 4566, column: 10, scope: !8727)
!8731 = !DILocation(line: 4567, column: 7, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8726, file: !3, line: 4566, column: 31)
!8733 = !DILocation(line: 4567, column: 17, scope: !8732)
!8734 = !DILocation(line: 4567, column: 22, scope: !8732)
!8735 = !DILocation(line: 4568, column: 7, scope: !8732)
!8736 = !DILocation(line: 4568, column: 12, scope: !8732)
!8737 = !DILocation(line: 4568, column: 19, scope: !8732)
!8738 = !DILocation(line: 4569, column: 6, scope: !8732)
!8739 = !DILocation(line: 4571, column: 27, scope: !8727)
!8740 = !DILocation(line: 4571, column: 6, scope: !8727)
!8741 = !DILocation(line: 4572, column: 5, scope: !8727)
!8742 = !DILocation(line: 4573, column: 22, scope: !8676)
!8743 = !DILocation(line: 4573, column: 26, scope: !8676)
!8744 = !DILocation(line: 4573, column: 36, scope: !8676)
!8745 = !DILocation(line: 4573, column: 5, scope: !8676)
!8746 = !DILocation(line: 4574, column: 19, scope: !8676)
!8747 = !DILocation(line: 4574, column: 5, scope: !8676)
!8748 = !DILocation(line: 4574, column: 29, scope: !8676)
!8749 = !DILocation(line: 4577, column: 30, scope: !8615)
!8750 = !DILocation(line: 4577, column: 34, scope: !8615)
!8751 = !DILocation(line: 4577, column: 4, scope: !8615)
!8752 = !DILocation(line: 4578, column: 7, scope: !8615)
!8753 = !DILocation(line: 4579, column: 3, scope: !8615)
!8754 = !DILocation(line: 4580, column: 2, scope: !8607)
!8755 = !DILocation(line: 4581, column: 12, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8597, file: !3, line: 4581, column: 11)
!8757 = !DILocation(line: 4581, column: 16, scope: !8756)
!8758 = !DILocation(line: 4581, column: 20, scope: !8756)
!8759 = !DILocation(line: 4581, column: 25, scope: !8756)
!8760 = !DILocation(line: 4581, column: 30, scope: !8756)
!8761 = !DILocation(line: 4581, column: 34, scope: !8756)
!8762 = !DILocation(line: 4581, column: 37, scope: !8756)
!8763 = !DILocation(line: 4581, column: 11, scope: !8597)
!8764 = !DILocation(line: 4582, column: 7, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8766, file: !3, line: 4582, column: 7)
!8766 = distinct !DILexicalBlock(scope: !8756, file: !3, line: 4581, column: 43)
!8767 = !DILocation(line: 4582, column: 7, scope: !8766)
!8768 = !DILocalVariable(name: "sw_ap", scope: !8769, file: !3, line: 4583, type: !3163)
!8769 = distinct !DILexicalBlock(scope: !8770, file: !3, line: 4583, column: 4)
!8770 = distinct !DILexicalBlock(scope: !8765, file: !3, line: 4582, column: 12)
!8771 = !DILocation(line: 4583, column: 4, scope: !8769)
!8772 = !DILocation(line: 4584, column: 3, scope: !8770)
!8773 = !DILocation(line: 4586, column: 9, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8766, file: !3, line: 4586, column: 7)
!8775 = !DILocation(line: 4586, column: 14, scope: !8774)
!8776 = !DILocation(line: 4586, column: 20, scope: !8774)
!8777 = !DILocation(line: 4586, column: 38, scope: !8774)
!8778 = !DILocation(line: 4586, column: 41, scope: !8774)
!8779 = !DILocation(line: 4586, column: 46, scope: !8774)
!8780 = !DILocation(line: 4586, column: 52, scope: !8774)
!8781 = !DILocation(line: 4586, column: 7, scope: !8766)
!8782 = !DILocation(line: 4587, column: 8, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8784, file: !3, line: 4587, column: 8)
!8784 = distinct !DILexicalBlock(scope: !8774, file: !3, line: 4586, column: 57)
!8785 = !DILocation(line: 4587, column: 13, scope: !8783)
!8786 = !DILocation(line: 4587, column: 18, scope: !8783)
!8787 = !DILocation(line: 4587, column: 31, scope: !8783)
!8788 = !DILocation(line: 4587, column: 34, scope: !8783)
!8789 = !DILocation(line: 4587, column: 75, scope: !8783)
!8790 = !DILocation(line: 4588, column: 8, scope: !8783)
!8791 = !DILocation(line: 4587, column: 8, scope: !8784)
!8792 = !DILocation(line: 4590, column: 5, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8783, file: !3, line: 4589, column: 4)
!8794 = !DILocation(line: 4590, column: 10, scope: !8793)
!8795 = !DILocation(line: 4590, column: 16, scope: !8793)
!8796 = !DILocation(line: 4591, column: 27, scope: !8793)
!8797 = !DILocation(line: 4591, column: 5, scope: !8793)
!8798 = !DILocation(line: 4592, column: 8, scope: !8793)
!8799 = !DILocation(line: 4593, column: 4, scope: !8793)
!8800 = !DILocation(line: 4594, column: 13, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8783, file: !3, line: 4594, column: 13)
!8802 = !DILocation(line: 4594, column: 18, scope: !8801)
!8803 = !DILocation(line: 4594, column: 23, scope: !8801)
!8804 = !DILocation(line: 4594, column: 35, scope: !8801)
!8805 = !DILocation(line: 4594, column: 38, scope: !8801)
!8806 = !DILocation(line: 4594, column: 43, scope: !8801)
!8807 = !DILocation(line: 4594, column: 47, scope: !8801)
!8808 = !DILocation(line: 4594, column: 50, scope: !8801)
!8809 = !DILocation(line: 4594, column: 59, scope: !8801)
!8810 = !DILocation(line: 4594, column: 63, scope: !8801)
!8811 = !DILocation(line: 4594, column: 68, scope: !8801)
!8812 = !DILocation(line: 4594, column: 71, scope: !8801)
!8813 = !DILocation(line: 4594, column: 76, scope: !8801)
!8814 = !DILocation(line: 4594, column: 82, scope: !8801)
!8815 = !DILocation(line: 4594, column: 87, scope: !8801)
!8816 = !DILocation(line: 4594, column: 90, scope: !8801)
!8817 = !DILocation(line: 4594, column: 13, scope: !8783)
!8818 = !DILocation(line: 4595, column: 5, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 4594, column: 101)
!8820 = !DILocation(line: 4595, column: 10, scope: !8819)
!8821 = !DILocation(line: 4595, column: 16, scope: !8819)
!8822 = !DILocation(line: 4596, column: 26, scope: !8819)
!8823 = !DILocation(line: 4596, column: 5, scope: !8819)
!8824 = !DILocation(line: 4597, column: 8, scope: !8819)
!8825 = !DILocation(line: 4598, column: 4, scope: !8819)
!8826 = !DILocation(line: 4599, column: 3, scope: !8784)
!8827 = !DILocation(line: 4600, column: 2, scope: !8766)
!8828 = !DILocation(line: 4602, column: 7, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 4602, column: 6)
!8830 = !DILocation(line: 4602, column: 6, scope: !8292)
!8831 = !DILocation(line: 4603, column: 14, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 4602, column: 11)
!8833 = !DILocation(line: 4603, column: 18, scope: !8832)
!8834 = !DILocation(line: 4603, column: 3, scope: !8832)
!8835 = !DILocation(line: 4604, column: 3, scope: !8832)
!8836 = !DILocation(line: 4607, column: 31, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 4607, column: 6)
!8838 = !DILocation(line: 4607, column: 39, scope: !8837)
!8839 = !DILocation(line: 4607, column: 6, scope: !8837)
!8840 = !DILocation(line: 4607, column: 6, scope: !8292)
!8841 = !DILocation(line: 4608, column: 25, scope: !8837)
!8842 = !DILocation(line: 4608, column: 49, scope: !8837)
!8843 = !DILocation(line: 4608, column: 3, scope: !8837)
!8844 = !DILocation(line: 4610, column: 24, scope: !8292)
!8845 = !DILocation(line: 4610, column: 46, scope: !8292)
!8846 = !DILocation(line: 4610, column: 54, scope: !8292)
!8847 = !DILocation(line: 4610, column: 2, scope: !8292)
!8848 = !DILocation(line: 4611, column: 20, scope: !8292)
!8849 = !DILocation(line: 4611, column: 28, scope: !8292)
!8850 = !DILocation(line: 4611, column: 2, scope: !8292)
!8851 = !DILocation(line: 4613, column: 2, scope: !8292)
!8852 = !DILocation(line: 4614, column: 1, scope: !8292)
!8853 = distinct !DISubprogram(name: "mouse_nurb", scope: !3, file: !3, line: 4633, type: !8854, scopeLine: 4634, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!8854 = !DISubroutineType(types: !8855)
!8855 = !{!1081, !3226, !8856, !1081, !1081, !1081}
!8856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8060, size: 64)
!8857 = !DILocalVariable(name: "C", arg: 1, scope: !8853, file: !3, line: 4633, type: !3226)
!8858 = !DILocation(line: 4633, column: 27, scope: !8853)
!8859 = !DILocalVariable(name: "mval", arg: 2, scope: !8853, file: !3, line: 4633, type: !8856)
!8860 = !DILocation(line: 4633, column: 40, scope: !8853)
!8861 = !DILocalVariable(name: "extend", arg: 3, scope: !8853, file: !3, line: 4633, type: !1081)
!8862 = !DILocation(line: 4633, column: 54, scope: !8853)
!8863 = !DILocalVariable(name: "deselect", arg: 4, scope: !8853, file: !3, line: 4633, type: !1081)
!8864 = !DILocation(line: 4633, column: 67, scope: !8853)
!8865 = !DILocalVariable(name: "toggle", arg: 5, scope: !8853, file: !3, line: 4633, type: !1081)
!8866 = !DILocation(line: 4633, column: 82, scope: !8853)
!8867 = !DILocalVariable(name: "obedit", scope: !8853, file: !3, line: 4635, type: !3242)
!8868 = !DILocation(line: 4635, column: 10, scope: !8853)
!8869 = !DILocation(line: 4635, column: 40, scope: !8853)
!8870 = !DILocation(line: 4635, column: 19, scope: !8853)
!8871 = !DILocalVariable(name: "cu", scope: !8853, file: !3, line: 4636, type: !2953)
!8872 = !DILocation(line: 4636, column: 9, scope: !8853)
!8873 = !DILocation(line: 4636, column: 14, scope: !8853)
!8874 = !DILocation(line: 4636, column: 22, scope: !8853)
!8875 = !DILocalVariable(name: "editnurb", scope: !8853, file: !3, line: 4637, type: !486)
!8876 = !DILocation(line: 4637, column: 12, scope: !8853)
!8877 = !DILocation(line: 4637, column: 44, scope: !8853)
!8878 = !DILocation(line: 4637, column: 23, scope: !8853)
!8879 = !DILocalVariable(name: "vc", scope: !8853, file: !3, line: 4638, type: !8880)
!8880 = !DIDerivedType(tag: DW_TAG_typedef, name: "ViewContext", file: !2078, line: 75, baseType: !8881)
!8881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ViewContext", file: !2078, line: 66, size: 512, elements: !8882)
!8882 = !{!8883, !8884, !8885, !8886, !8955, !9047, !9108, !9112}
!8883 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !8881, file: !2078, line: 67, baseType: !152, size: 64)
!8884 = !DIDerivedType(tag: DW_TAG_member, name: "obact", scope: !8881, file: !2078, line: 68, baseType: !229, size: 64, offset: 64)
!8885 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !8881, file: !2078, line: 69, baseType: !229, size: 64, offset: 128)
!8886 = !DIDerivedType(tag: DW_TAG_member, name: "ar", scope: !8881, file: !2078, line: 70, baseType: !8887, size: 64, offset: 192)
!8887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8888, size: 64)
!8888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !109, line: 230, size: 3072, elements: !8889)
!8889 = !{!8890, !8891, !8892, !8925, !8926, !8927, !8928, !8929, !8930, !8931, !8932, !8933, !8934, !8935, !8936, !8937, !8938, !8939, !8940, !8941, !8942, !8945, !8946, !8947, !8948, !8949, !8950, !8951, !8952, !8953, !8954}
!8890 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8888, file: !109, line: 231, baseType: !8887, size: 64)
!8891 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8888, file: !109, line: 231, baseType: !8887, size: 64, offset: 64)
!8892 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !8888, file: !109, line: 233, baseType: !8893, size: 1280, offset: 128)
!8893 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !8894, line: 71, baseType: !8895)
!8894 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !8894, line: 40, size: 1280, elements: !8896)
!8896 = !{!8897, !8898, !8899, !8900, !8901, !8902, !8903, !8904, !8905, !8906, !8907, !8908, !8909, !8910, !8911, !8912, !8913, !8914, !8915, !8916, !8917, !8918, !8919, !8920, !8921, !8924}
!8897 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !8895, file: !8894, line: 41, baseType: !589, size: 128)
!8898 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !8895, file: !8894, line: 41, baseType: !589, size: 128, offset: 128)
!8899 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !8895, file: !8894, line: 42, baseType: !1479, size: 128, offset: 256)
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !8895, file: !8894, line: 42, baseType: !1479, size: 128, offset: 384)
!8901 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !8895, file: !8894, line: 43, baseType: !1479, size: 128, offset: 512)
!8902 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !8895, file: !8894, line: 45, baseType: !494, size: 64, offset: 640)
!8903 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !8895, file: !8894, line: 45, baseType: !494, size: 64, offset: 704)
!8904 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !8895, file: !8894, line: 46, baseType: !204, size: 32, offset: 768)
!8905 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !8895, file: !8894, line: 46, baseType: !204, size: 32, offset: 800)
!8906 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !8895, file: !8894, line: 48, baseType: !48, size: 16, offset: 832)
!8907 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !8895, file: !8894, line: 49, baseType: !48, size: 16, offset: 848)
!8908 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !8895, file: !8894, line: 51, baseType: !48, size: 16, offset: 864)
!8909 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !8895, file: !8894, line: 52, baseType: !48, size: 16, offset: 880)
!8910 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !8895, file: !8894, line: 53, baseType: !48, size: 16, offset: 896)
!8911 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8895, file: !8894, line: 55, baseType: !48, size: 16, offset: 912)
!8912 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !8895, file: !8894, line: 56, baseType: !48, size: 16, offset: 928)
!8913 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !8895, file: !8894, line: 58, baseType: !48, size: 16, offset: 944)
!8914 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !8895, file: !8894, line: 58, baseType: !48, size: 16, offset: 960)
!8915 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !8895, file: !8894, line: 59, baseType: !48, size: 16, offset: 976)
!8916 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !8895, file: !8894, line: 59, baseType: !48, size: 16, offset: 992)
!8917 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !8895, file: !8894, line: 61, baseType: !48, size: 16, offset: 1008)
!8918 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !8895, file: !8894, line: 63, baseType: !3154, size: 64, offset: 1024)
!8919 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !8895, file: !8894, line: 64, baseType: !22, size: 32, offset: 1088)
!8920 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !8895, file: !8894, line: 65, baseType: !22, size: 32, offset: 1120)
!8921 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !8895, file: !8894, line: 68, baseType: !8922, size: 64, offset: 1152)
!8922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8923, size: 64)
!8923 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !8894, line: 68, flags: DIFlagFwdDecl)
!8924 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !8895, file: !8894, line: 69, baseType: !94, size: 64, offset: 1216)
!8925 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !8888, file: !109, line: 234, baseType: !1479, size: 128, offset: 1408)
!8926 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !8888, file: !109, line: 235, baseType: !1479, size: 128, offset: 1536)
!8927 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !8888, file: !109, line: 236, baseType: !48, size: 16, offset: 1664)
!8928 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !8888, file: !109, line: 236, baseType: !48, size: 16, offset: 1680)
!8929 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !8888, file: !109, line: 238, baseType: !48, size: 16, offset: 1696)
!8930 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !8888, file: !109, line: 239, baseType: !48, size: 16, offset: 1712)
!8931 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !8888, file: !109, line: 240, baseType: !48, size: 16, offset: 1728)
!8932 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8888, file: !109, line: 241, baseType: !48, size: 16, offset: 1744)
!8933 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !8888, file: !109, line: 243, baseType: !204, size: 32, offset: 1760)
!8934 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !8888, file: !109, line: 244, baseType: !48, size: 16, offset: 1792)
!8935 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !8888, file: !109, line: 244, baseType: !48, size: 16, offset: 1808)
!8936 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !8888, file: !109, line: 246, baseType: !48, size: 16, offset: 1824)
!8937 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !8888, file: !109, line: 247, baseType: !48, size: 16, offset: 1840)
!8938 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !8888, file: !109, line: 248, baseType: !48, size: 16, offset: 1856)
!8939 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !8888, file: !109, line: 249, baseType: !48, size: 16, offset: 1872)
!8940 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !8888, file: !109, line: 250, baseType: !48, size: 16, offset: 1888)
!8941 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8888, file: !109, line: 251, baseType: !48, size: 16, offset: 1904)
!8942 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8888, file: !109, line: 253, baseType: !8943, size: 64, offset: 1920)
!8943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8944, size: 64)
!8944 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !109, line: 42, flags: DIFlagFwdDecl)
!8945 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !8888, file: !109, line: 255, baseType: !58, size: 128, offset: 1984)
!8946 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !8888, file: !109, line: 256, baseType: !58, size: 128, offset: 2112)
!8947 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !8888, file: !109, line: 257, baseType: !58, size: 128, offset: 2240)
!8948 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !8888, file: !109, line: 258, baseType: !58, size: 128, offset: 2368)
!8949 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !8888, file: !109, line: 259, baseType: !58, size: 128, offset: 2496)
!8950 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !8888, file: !109, line: 260, baseType: !58, size: 128, offset: 2624)
!8951 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !8888, file: !109, line: 261, baseType: !58, size: 128, offset: 2752)
!8952 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !8888, file: !109, line: 263, baseType: !94, size: 64, offset: 2880)
!8953 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !8888, file: !109, line: 265, baseType: !343, size: 64, offset: 2944)
!8954 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !8888, file: !109, line: 266, baseType: !56, size: 64, offset: 3008)
!8955 = !DIDerivedType(tag: DW_TAG_member, name: "v3d", scope: !8881, file: !2078, line: 71, baseType: !8956, size: 64, offset: 256)
!8956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8957, size: 64)
!8957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View3D", file: !8958, line: 151, size: 3008, elements: !8959)
!8958 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view3d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8959 = !{!8960, !8972, !8973, !8974, !8975, !8976, !8977, !8978, !8979, !8980, !8981, !8982, !8983, !8984, !8985, !8986, !8987, !8988, !8989, !8990, !9013, !9014, !9015, !9016, !9017, !9018, !9019, !9020, !9021, !9022, !9023, !9024, !9025, !9026, !9027, !9028, !9029, !9030, !9031, !9032, !9033, !9034, !9035, !9036, !9037, !9038, !9039, !9040, !9041, !9042, !9043, !9044, !9045, !9046}
!8960 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8957, file: !8958, line: 152, baseType: !8961, size: 64)
!8961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8962, size: 64)
!8962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !8963, line: 85, size: 448, elements: !8964)
!8963 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8964 = !{!8965, !8966, !8967, !8968, !8969, !8970}
!8965 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8962, file: !8963, line: 86, baseType: !8961, size: 64)
!8966 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8962, file: !8963, line: 86, baseType: !8961, size: 64, offset: 64)
!8967 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !8962, file: !8963, line: 87, baseType: !58, size: 128, offset: 128)
!8968 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !8962, file: !8963, line: 88, baseType: !22, size: 32, offset: 256)
!8969 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !8962, file: !8963, line: 89, baseType: !204, size: 32, offset: 288)
!8970 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !8962, file: !8963, line: 90, baseType: !8971, size: 128, offset: 320)
!8971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 128, elements: !931)
!8972 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8957, file: !8958, line: 152, baseType: !8961, size: 64, offset: 64)
!8973 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !8957, file: !8958, line: 153, baseType: !58, size: 128, offset: 128)
!8974 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !8957, file: !8958, line: 154, baseType: !22, size: 32, offset: 256)
!8975 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !8957, file: !8958, line: 155, baseType: !204, size: 32, offset: 288)
!8976 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !8957, file: !8958, line: 156, baseType: !8971, size: 128, offset: 320)
!8977 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !8957, file: !8958, line: 158, baseType: !355, size: 128, offset: 448)
!8978 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !8957, file: !8958, line: 159, baseType: !204, size: 32, offset: 576)
!8979 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_size", scope: !8957, file: !8958, line: 161, baseType: !204, size: 32, offset: 608)
!8980 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_drawtype", scope: !8957, file: !8958, line: 162, baseType: !14, size: 8, offset: 640)
!8981 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8957, file: !8958, line: 163, baseType: !1050, size: 24, offset: 648)
!8982 = !DIDerivedType(tag: DW_TAG_member, name: "lay_prev", scope: !8957, file: !8958, line: 165, baseType: !278, size: 32, offset: 672)
!8983 = !DIDerivedType(tag: DW_TAG_member, name: "lay_used", scope: !8957, file: !8958, line: 166, baseType: !278, size: 32, offset: 704)
!8984 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !8957, file: !8958, line: 168, baseType: !48, size: 16, offset: 736)
!8985 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !8957, file: !8958, line: 169, baseType: !48, size: 16, offset: 752)
!8986 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !8957, file: !8958, line: 171, baseType: !229, size: 64, offset: 768)
!8987 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre", scope: !8957, file: !8958, line: 171, baseType: !229, size: 64, offset: 832)
!8988 = !DIDerivedType(tag: DW_TAG_member, name: "render_border", scope: !8957, file: !8958, line: 172, baseType: !589, size: 128, offset: 896)
!8989 = !DIDerivedType(tag: DW_TAG_member, name: "bgpicbase", scope: !8957, file: !8958, line: 174, baseType: !60, size: 128, offset: 1024)
!8990 = !DIDerivedType(tag: DW_TAG_member, name: "bgpic", scope: !8957, file: !8958, line: 175, baseType: !8991, size: 64, offset: 1152)
!8991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8992, size: 64)
!8992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BGpic", file: !8958, line: 70, size: 832, elements: !8993)
!8993 = !{!8994, !8995, !8996, !8997, !8998, !8999, !9005, !9006, !9007, !9008, !9009, !9010, !9011, !9012}
!8994 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8992, file: !8958, line: 71, baseType: !8991, size: 64)
!8995 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8992, file: !8958, line: 71, baseType: !8991, size: 64, offset: 64)
!8996 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !8992, file: !8958, line: 73, baseType: !914, size: 64, offset: 128)
!8997 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !8992, file: !8958, line: 74, baseType: !501, size: 320, offset: 192)
!8998 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !8992, file: !8958, line: 75, baseType: !746, size: 64, offset: 512)
!8999 = !DIDerivedType(tag: DW_TAG_member, name: "cuser", scope: !8992, file: !8958, line: 76, baseType: !9000, size: 64, offset: 576)
!9000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipUser", file: !748, line: 50, size: 64, elements: !9001)
!9001 = !{!9002, !9003, !9004}
!9002 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !9000, file: !748, line: 51, baseType: !22, size: 32)
!9003 = !DIDerivedType(tag: DW_TAG_member, name: "render_size", scope: !9000, file: !748, line: 52, baseType: !48, size: 16, offset: 32)
!9004 = !DIDerivedType(tag: DW_TAG_member, name: "render_flag", scope: !9000, file: !748, line: 52, baseType: !48, size: 16, offset: 48)
!9005 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !8992, file: !8958, line: 77, baseType: !204, size: 32, offset: 640)
!9006 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !8992, file: !8958, line: 77, baseType: !204, size: 32, offset: 672)
!9007 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8992, file: !8958, line: 77, baseType: !204, size: 32, offset: 704)
!9008 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !8992, file: !8958, line: 77, baseType: !204, size: 32, offset: 736)
!9009 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !8992, file: !8958, line: 78, baseType: !48, size: 16, offset: 768)
!9010 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8992, file: !8958, line: 79, baseType: !48, size: 16, offset: 784)
!9011 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !8992, file: !8958, line: 80, baseType: !48, size: 16, offset: 800)
!9012 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8992, file: !8958, line: 80, baseType: !48, size: 16, offset: 816)
!9013 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !8957, file: !8958, line: 177, baseType: !8956, size: 64, offset: 1216)
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_bone", scope: !8957, file: !8958, line: 179, baseType: !33, size: 512, offset: 1280)
!9015 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !8957, file: !8958, line: 181, baseType: !278, size: 32, offset: 1792)
!9016 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !8957, file: !8958, line: 182, baseType: !22, size: 32, offset: 1824)
!9017 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !8957, file: !8958, line: 187, baseType: !48, size: 16, offset: 1856)
!9018 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_cursor", scope: !8957, file: !8958, line: 188, baseType: !48, size: 16, offset: 1872)
!9019 = !DIDerivedType(tag: DW_TAG_member, name: "scenelock", scope: !8957, file: !8958, line: 189, baseType: !48, size: 16, offset: 1888)
!9020 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !8957, file: !8958, line: 189, baseType: !48, size: 16, offset: 1904)
!9021 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8957, file: !8958, line: 190, baseType: !48, size: 16, offset: 1920)
!9022 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !8957, file: !8958, line: 190, baseType: !48, size: 16, offset: 1936)
!9023 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !8957, file: !8958, line: 192, baseType: !204, size: 32, offset: 1952)
!9024 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !8957, file: !8958, line: 192, baseType: !204, size: 32, offset: 1984)
!9025 = !DIDerivedType(tag: DW_TAG_member, name: "near", scope: !8957, file: !8958, line: 193, baseType: !204, size: 32, offset: 2016)
!9026 = !DIDerivedType(tag: DW_TAG_member, name: "far", scope: !8957, file: !8958, line: 193, baseType: !204, size: 32, offset: 2048)
!9027 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !8957, file: !8958, line: 194, baseType: !282, size: 96, offset: 2080)
!9028 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !8957, file: !8958, line: 195, baseType: !282, size: 96, offset: 2176)
!9029 = !DIDerivedType(tag: DW_TAG_member, name: "matcap_icon", scope: !8957, file: !8958, line: 197, baseType: !48, size: 16, offset: 2272)
!9030 = !DIDerivedType(tag: DW_TAG_member, name: "gridlines", scope: !8957, file: !8958, line: 199, baseType: !48, size: 16, offset: 2288)
!9031 = !DIDerivedType(tag: DW_TAG_member, name: "gridsubdiv", scope: !8957, file: !8958, line: 200, baseType: !48, size: 16, offset: 2304)
!9032 = !DIDerivedType(tag: DW_TAG_member, name: "gridflag", scope: !8957, file: !8958, line: 201, baseType: !14, size: 8, offset: 2320)
!9033 = !DIDerivedType(tag: DW_TAG_member, name: "twtype", scope: !8957, file: !8958, line: 204, baseType: !14, size: 8, offset: 2328)
!9034 = !DIDerivedType(tag: DW_TAG_member, name: "twmode", scope: !8957, file: !8958, line: 204, baseType: !14, size: 8, offset: 2336)
!9035 = !DIDerivedType(tag: DW_TAG_member, name: "twflag", scope: !8957, file: !8958, line: 204, baseType: !14, size: 8, offset: 2344)
!9036 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !8957, file: !8958, line: 204, baseType: !1262, size: 16, offset: 2352)
!9037 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_transp", scope: !8957, file: !8958, line: 207, baseType: !60, size: 128, offset: 2368)
!9038 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xray", scope: !8957, file: !8958, line: 208, baseType: !60, size: 128, offset: 2496)
!9039 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xraytransp", scope: !8957, file: !8958, line: 209, baseType: !60, size: 128, offset: 2624)
!9040 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !8957, file: !8958, line: 212, baseType: !14, size: 8, offset: 2752)
!9041 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !8957, file: !8958, line: 212, baseType: !14, size: 8, offset: 2760)
!9042 = !DIDerivedType(tag: DW_TAG_member, name: "xray", scope: !8957, file: !8958, line: 212, baseType: !14, size: 8, offset: 2768)
!9043 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !8957, file: !8958, line: 213, baseType: !1128, size: 40, offset: 2776)
!9044 = !DIDerivedType(tag: DW_TAG_member, name: "properties_storage", scope: !8957, file: !8958, line: 215, baseType: !56, size: 64, offset: 2816)
!9045 = !DIDerivedType(tag: DW_TAG_member, name: "defmaterial", scope: !8957, file: !8958, line: 216, baseType: !340, size: 64, offset: 2880)
!9046 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !8957, file: !8958, line: 219, baseType: !313, size: 64, offset: 2944)
!9047 = !DIDerivedType(tag: DW_TAG_member, name: "rv3d", scope: !8881, file: !2078, line: 72, baseType: !9048, size: 64, offset: 320)
!9048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9049, size: 64)
!9049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RegionView3D", file: !8958, line: 85, size: 7040, elements: !9050)
!9050 = !{!9051, !9052, !9053, !9054, !9055, !9056, !9057, !9058, !9061, !9062, !9063, !9064, !9067, !9079, !9080, !9083, !9084, !9085, !9086, !9087, !9088, !9089, !9090, !9091, !9092, !9093, !9094, !9095, !9096, !9097, !9098, !9099, !9100, !9101, !9102, !9103, !9104, !9105, !9106, !9107}
!9051 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !9049, file: !8958, line: 87, baseType: !364, size: 512)
!9052 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !9049, file: !8958, line: 88, baseType: !364, size: 512, offset: 512)
!9053 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !9049, file: !8958, line: 89, baseType: !364, size: 512, offset: 1024)
!9054 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !9049, file: !8958, line: 90, baseType: !364, size: 512, offset: 1536)
!9055 = !DIDerivedType(tag: DW_TAG_member, name: "persinv", scope: !9049, file: !8958, line: 91, baseType: !364, size: 512, offset: 2048)
!9056 = !DIDerivedType(tag: DW_TAG_member, name: "viewmatob", scope: !9049, file: !8958, line: 94, baseType: !364, size: 512, offset: 2560)
!9057 = !DIDerivedType(tag: DW_TAG_member, name: "persmatob", scope: !9049, file: !8958, line: 95, baseType: !364, size: 512, offset: 3072)
!9058 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !9049, file: !8958, line: 99, baseType: !9059, size: 768, offset: 3584)
!9059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 768, elements: !9060)
!9060 = !{!1299, !357}
!9061 = !DIDerivedType(tag: DW_TAG_member, name: "clip_local", scope: !9049, file: !8958, line: 100, baseType: !9059, size: 768, offset: 4352)
!9062 = !DIDerivedType(tag: DW_TAG_member, name: "clipbb", scope: !9049, file: !8958, line: 101, baseType: !254, size: 64, offset: 5120)
!9063 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !9049, file: !8958, line: 103, baseType: !9048, size: 64, offset: 5184)
!9064 = !DIDerivedType(tag: DW_TAG_member, name: "render_engine", scope: !9049, file: !8958, line: 104, baseType: !9065, size: 64, offset: 5248)
!9065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9066, size: 64)
!9066 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !8958, line: 44, flags: DIFlagFwdDecl)
!9067 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !9049, file: !8958, line: 105, baseType: !9068, size: 64, offset: 5312)
!9068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9069, size: 64)
!9069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ViewDepths", file: !2078, line: 77, size: 320, elements: !9070)
!9070 = !{!9071, !9072, !9073, !9074, !9075, !9076, !9078}
!9071 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !9069, file: !2078, line: 78, baseType: !400, size: 16)
!9072 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !9069, file: !2078, line: 78, baseType: !400, size: 16, offset: 16)
!9073 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !9069, file: !2078, line: 79, baseType: !48, size: 16, offset: 32)
!9074 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !9069, file: !2078, line: 79, baseType: !48, size: 16, offset: 48)
!9075 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !9069, file: !2078, line: 80, baseType: !3154, size: 64, offset: 64)
!9076 = !DIDerivedType(tag: DW_TAG_member, name: "depth_range", scope: !9069, file: !2078, line: 81, baseType: !9077, size: 128, offset: 128)
!9077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1744, size: 128, elements: !495)
!9078 = !DIDerivedType(tag: DW_TAG_member, name: "damaged", scope: !9069, file: !2078, line: 83, baseType: !1081, size: 8, offset: 256)
!9079 = !DIDerivedType(tag: DW_TAG_member, name: "gpuoffscreen", scope: !9049, file: !8958, line: 106, baseType: !56, size: 64, offset: 5376)
!9080 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !9049, file: !8958, line: 109, baseType: !9081, size: 64, offset: 5440)
!9081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9082, size: 64)
!9082 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView3DStore", file: !8958, line: 46, flags: DIFlagFwdDecl)
!9083 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !9049, file: !8958, line: 110, baseType: !94, size: 64, offset: 5504)
!9084 = !DIDerivedType(tag: DW_TAG_member, name: "twmat", scope: !9049, file: !8958, line: 114, baseType: !364, size: 512, offset: 5568)
!9085 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !9049, file: !8958, line: 116, baseType: !355, size: 128, offset: 6080)
!9086 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !9049, file: !8958, line: 117, baseType: !204, size: 32, offset: 6208)
!9087 = !DIDerivedType(tag: DW_TAG_member, name: "camdx", scope: !9049, file: !8958, line: 118, baseType: !204, size: 32, offset: 6240)
!9088 = !DIDerivedType(tag: DW_TAG_member, name: "camdy", scope: !9049, file: !8958, line: 118, baseType: !204, size: 32, offset: 6272)
!9089 = !DIDerivedType(tag: DW_TAG_member, name: "pixsize", scope: !9049, file: !8958, line: 119, baseType: !204, size: 32, offset: 6304)
!9090 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !9049, file: !8958, line: 120, baseType: !282, size: 96, offset: 6336)
!9091 = !DIDerivedType(tag: DW_TAG_member, name: "camzoom", scope: !9049, file: !8958, line: 122, baseType: !204, size: 32, offset: 6432)
!9092 = !DIDerivedType(tag: DW_TAG_member, name: "is_persp", scope: !9049, file: !8958, line: 123, baseType: !14, size: 8, offset: 6464)
!9093 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !9049, file: !8958, line: 125, baseType: !14, size: 8, offset: 6472)
!9094 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !9049, file: !8958, line: 126, baseType: !14, size: 8, offset: 6480)
!9095 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock", scope: !9049, file: !8958, line: 127, baseType: !14, size: 8, offset: 6488)
!9096 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock_quad", scope: !9049, file: !8958, line: 128, baseType: !14, size: 8, offset: 6496)
!9097 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9049, file: !8958, line: 129, baseType: !1050, size: 24, offset: 6504)
!9098 = !DIDerivedType(tag: DW_TAG_member, name: "ofs_lock", scope: !9049, file: !8958, line: 130, baseType: !494, size: 64, offset: 6528)
!9099 = !DIDerivedType(tag: DW_TAG_member, name: "twdrawflag", scope: !9049, file: !8958, line: 132, baseType: !48, size: 16, offset: 6592)
!9100 = !DIDerivedType(tag: DW_TAG_member, name: "rflag", scope: !9049, file: !8958, line: 133, baseType: !48, size: 16, offset: 6608)
!9101 = !DIDerivedType(tag: DW_TAG_member, name: "lviewquat", scope: !9049, file: !8958, line: 137, baseType: !355, size: 128, offset: 6624)
!9102 = !DIDerivedType(tag: DW_TAG_member, name: "lpersp", scope: !9049, file: !8958, line: 138, baseType: !48, size: 16, offset: 6752)
!9103 = !DIDerivedType(tag: DW_TAG_member, name: "lview", scope: !9049, file: !8958, line: 138, baseType: !48, size: 16, offset: 6768)
!9104 = !DIDerivedType(tag: DW_TAG_member, name: "gridview", scope: !9049, file: !8958, line: 140, baseType: !204, size: 32, offset: 6784)
!9105 = !DIDerivedType(tag: DW_TAG_member, name: "tw_idot", scope: !9049, file: !8958, line: 141, baseType: !282, size: 96, offset: 6816)
!9106 = !DIDerivedType(tag: DW_TAG_member, name: "rot_angle", scope: !9049, file: !8958, line: 145, baseType: !204, size: 32, offset: 6912)
!9107 = !DIDerivedType(tag: DW_TAG_member, name: "rot_axis", scope: !9049, file: !8958, line: 146, baseType: !282, size: 96, offset: 6944)
!9108 = !DIDerivedType(tag: DW_TAG_member, name: "em", scope: !8881, file: !2078, line: 73, baseType: !9109, size: 64, offset: 384)
!9109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9110, size: 64)
!9110 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !9111, line: 45, flags: DIFlagFwdDecl)
!9111 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_modifier.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9112 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !8881, file: !2078, line: 74, baseType: !756, size: 64, offset: 448)
!9113 = !DILocation(line: 4638, column: 14, scope: !8853)
!9114 = !DILocalVariable(name: "nu", scope: !8853, file: !3, line: 4639, type: !3163)
!9115 = !DILocation(line: 4639, column: 8, scope: !8853)
!9116 = !DILocalVariable(name: "bezt", scope: !8853, file: !3, line: 4640, type: !3104)
!9117 = !DILocation(line: 4640, column: 13, scope: !8853)
!9118 = !DILocalVariable(name: "bp", scope: !8853, file: !3, line: 4641, type: !3093)
!9119 = !DILocation(line: 4641, column: 10, scope: !8853)
!9120 = !DILocalVariable(name: "vert", scope: !8853, file: !3, line: 4642, type: !9121)
!9121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9122, size: 64)
!9122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!9123 = !DILocation(line: 4642, column: 14, scope: !8853)
!9124 = !DILocation(line: 4642, column: 47, scope: !8853)
!9125 = !DILocation(line: 4642, column: 21, scope: !8853)
!9126 = !DILocalVariable(name: "location", scope: !8853, file: !3, line: 4643, type: !756)
!9127 = !DILocation(line: 4643, column: 6, scope: !8853)
!9128 = !DILocalVariable(name: "hand", scope: !8853, file: !3, line: 4644, type: !48)
!9129 = !DILocation(line: 4644, column: 8, scope: !8853)
!9130 = !DILocation(line: 4646, column: 31, scope: !8853)
!9131 = !DILocation(line: 4646, column: 2, scope: !8853)
!9132 = !DILocation(line: 4647, column: 25, scope: !8853)
!9133 = !DILocation(line: 4647, column: 2, scope: !8853)
!9134 = !DILocation(line: 4649, column: 16, scope: !8853)
!9135 = !DILocation(line: 4649, column: 2, scope: !8853)
!9136 = !DILocation(line: 4649, column: 14, scope: !8853)
!9137 = !DILocation(line: 4650, column: 16, scope: !8853)
!9138 = !DILocation(line: 4650, column: 2, scope: !8853)
!9139 = !DILocation(line: 4650, column: 14, scope: !8853)
!9140 = !DILocation(line: 4651, column: 37, scope: !8853)
!9141 = !DILocation(line: 4651, column: 9, scope: !8853)
!9142 = !DILocation(line: 4651, column: 7, scope: !8853)
!9143 = !DILocation(line: 4653, column: 6, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !8853, file: !3, line: 4653, column: 6)
!9145 = !DILocation(line: 4653, column: 11, scope: !9144)
!9146 = !DILocation(line: 4653, column: 14, scope: !9144)
!9147 = !DILocation(line: 4653, column: 6, scope: !8853)
!9148 = !DILocation(line: 4654, column: 7, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9150, file: !3, line: 4654, column: 7)
!9150 = distinct !DILexicalBlock(scope: !9144, file: !3, line: 4653, column: 18)
!9151 = !DILocation(line: 4654, column: 7, scope: !9150)
!9152 = !DILocation(line: 4655, column: 8, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !9154, file: !3, line: 4655, column: 8)
!9154 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4654, column: 15)
!9155 = !DILocation(line: 4655, column: 8, scope: !9154)
!9156 = !DILocation(line: 4656, column: 9, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9158, file: !3, line: 4656, column: 9)
!9158 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 4655, column: 14)
!9159 = !DILocation(line: 4656, column: 14, scope: !9157)
!9160 = !DILocation(line: 4656, column: 9, scope: !9158)
!9161 = !DILocation(line: 4657, column: 23, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9157, file: !3, line: 4656, column: 20)
!9163 = !DILocation(line: 4657, column: 6, scope: !9162)
!9164 = !DILocation(line: 4658, column: 37, scope: !9162)
!9165 = !DILocation(line: 4658, column: 41, scope: !9162)
!9166 = !DILocation(line: 4658, column: 45, scope: !9162)
!9167 = !DILocation(line: 4658, column: 6, scope: !9162)
!9168 = !DILocation(line: 4659, column: 5, scope: !9162)
!9169 = !DILocation(line: 4661, column: 10, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9171, file: !3, line: 4661, column: 10)
!9171 = distinct !DILexicalBlock(scope: !9157, file: !3, line: 4660, column: 10)
!9172 = !DILocation(line: 4661, column: 15, scope: !9170)
!9173 = !DILocation(line: 4661, column: 10, scope: !9171)
!9174 = !DILocation(line: 4661, column: 21, scope: !9170)
!9175 = !DILocation(line: 4661, column: 27, scope: !9170)
!9176 = !DILocation(line: 4661, column: 30, scope: !9170)
!9177 = !DILocation(line: 4662, column: 11, scope: !9170)
!9178 = !DILocation(line: 4662, column: 17, scope: !9170)
!9179 = !DILocation(line: 4662, column: 20, scope: !9170)
!9180 = !DILocation(line: 4664, column: 6, scope: !9171)
!9181 = !DILocation(line: 4664, column: 10, scope: !9171)
!9182 = !DILocation(line: 4664, column: 18, scope: !9171)
!9183 = !DILocation(line: 4666, column: 4, scope: !9158)
!9184 = !DILocation(line: 4668, column: 36, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 4667, column: 9)
!9186 = !DILocation(line: 4668, column: 40, scope: !9185)
!9187 = !DILocation(line: 4668, column: 44, scope: !9185)
!9188 = !DILocation(line: 4668, column: 5, scope: !9185)
!9189 = !DILocation(line: 4669, column: 19, scope: !9185)
!9190 = !DILocation(line: 4669, column: 5, scope: !9185)
!9191 = !DILocation(line: 4671, column: 3, scope: !9154)
!9192 = !DILocation(line: 4672, column: 12, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 4672, column: 12)
!9194 = !DILocation(line: 4672, column: 12, scope: !9149)
!9195 = !DILocation(line: 4673, column: 8, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9197, file: !3, line: 4673, column: 8)
!9197 = distinct !DILexicalBlock(scope: !9193, file: !3, line: 4672, column: 22)
!9198 = !DILocation(line: 4673, column: 8, scope: !9197)
!9199 = !DILocation(line: 4674, column: 9, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9201, file: !3, line: 4674, column: 9)
!9201 = distinct !DILexicalBlock(scope: !9196, file: !3, line: 4673, column: 14)
!9202 = !DILocation(line: 4674, column: 14, scope: !9200)
!9203 = !DILocation(line: 4674, column: 9, scope: !9201)
!9204 = !DILocation(line: 4675, column: 23, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 4674, column: 20)
!9206 = !DILocation(line: 4675, column: 6, scope: !9205)
!9207 = !DILocation(line: 4676, column: 10, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9205, file: !3, line: 4676, column: 10)
!9209 = !DILocation(line: 4676, column: 18, scope: !9208)
!9210 = !DILocation(line: 4676, column: 15, scope: !9208)
!9211 = !DILocation(line: 4676, column: 10, scope: !9205)
!9212 = !DILocation(line: 4676, column: 24, scope: !9208)
!9213 = !DILocation(line: 4676, column: 28, scope: !9208)
!9214 = !DILocation(line: 4676, column: 36, scope: !9208)
!9215 = !DILocation(line: 4677, column: 5, scope: !9205)
!9216 = !DILocation(line: 4678, column: 14, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 4678, column: 14)
!9218 = !DILocation(line: 4678, column: 19, scope: !9217)
!9219 = !DILocation(line: 4678, column: 14, scope: !9200)
!9220 = !DILocation(line: 4679, column: 6, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !9217, file: !3, line: 4678, column: 25)
!9222 = !DILocation(line: 4679, column: 12, scope: !9221)
!9223 = !DILocation(line: 4679, column: 15, scope: !9221)
!9224 = !DILocation(line: 4680, column: 5, scope: !9221)
!9225 = !DILocation(line: 4682, column: 6, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9217, file: !3, line: 4681, column: 10)
!9227 = !DILocation(line: 4682, column: 12, scope: !9226)
!9228 = !DILocation(line: 4682, column: 15, scope: !9226)
!9229 = !DILocation(line: 4684, column: 4, scope: !9201)
!9230 = !DILocation(line: 4686, column: 19, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9196, file: !3, line: 4685, column: 9)
!9232 = !DILocation(line: 4686, column: 5, scope: !9231)
!9233 = !DILocation(line: 4687, column: 9, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9231, file: !3, line: 4687, column: 9)
!9235 = !DILocation(line: 4687, column: 15, scope: !9234)
!9236 = !DILocation(line: 4687, column: 12, scope: !9234)
!9237 = !DILocation(line: 4687, column: 9, scope: !9231)
!9238 = !DILocation(line: 4687, column: 21, scope: !9234)
!9239 = !DILocation(line: 4687, column: 25, scope: !9234)
!9240 = !DILocation(line: 4687, column: 33, scope: !9234)
!9241 = !DILocation(line: 4689, column: 3, scope: !9197)
!9242 = !DILocation(line: 4690, column: 12, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9193, file: !3, line: 4690, column: 12)
!9244 = !DILocation(line: 4690, column: 12, scope: !9193)
!9245 = !DILocation(line: 4691, column: 8, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9247, file: !3, line: 4691, column: 8)
!9247 = distinct !DILexicalBlock(scope: !9243, file: !3, line: 4690, column: 20)
!9248 = !DILocation(line: 4691, column: 8, scope: !9247)
!9249 = !DILocation(line: 4692, column: 9, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9251, file: !3, line: 4692, column: 9)
!9251 = distinct !DILexicalBlock(scope: !9246, file: !3, line: 4691, column: 14)
!9252 = !DILocation(line: 4692, column: 14, scope: !9250)
!9253 = !DILocation(line: 4692, column: 9, scope: !9251)
!9254 = !DILocation(line: 4693, column: 10, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9256, file: !3, line: 4693, column: 10)
!9256 = distinct !DILexicalBlock(scope: !9250, file: !3, line: 4692, column: 20)
!9257 = !DILocation(line: 4693, column: 16, scope: !9255)
!9258 = !DILocation(line: 4693, column: 19, scope: !9255)
!9259 = !DILocation(line: 4693, column: 10, scope: !9256)
!9260 = !DILocation(line: 4694, column: 24, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9255, file: !3, line: 4693, column: 29)
!9262 = !DILocation(line: 4694, column: 7, scope: !9261)
!9263 = !DILocation(line: 4695, column: 11, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9261, file: !3, line: 4695, column: 11)
!9265 = !DILocation(line: 4695, column: 19, scope: !9264)
!9266 = !DILocation(line: 4695, column: 16, scope: !9264)
!9267 = !DILocation(line: 4695, column: 11, scope: !9261)
!9268 = !DILocation(line: 4695, column: 25, scope: !9264)
!9269 = !DILocation(line: 4695, column: 29, scope: !9264)
!9270 = !DILocation(line: 4695, column: 37, scope: !9264)
!9271 = !DILocation(line: 4696, column: 6, scope: !9261)
!9272 = !DILocation(line: 4698, column: 24, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9255, file: !3, line: 4697, column: 11)
!9274 = !DILocation(line: 4698, column: 7, scope: !9273)
!9275 = !DILocation(line: 4699, column: 38, scope: !9273)
!9276 = !DILocation(line: 4699, column: 42, scope: !9273)
!9277 = !DILocation(line: 4699, column: 46, scope: !9273)
!9278 = !DILocation(line: 4699, column: 7, scope: !9273)
!9279 = !DILocation(line: 4701, column: 5, scope: !9256)
!9280 = !DILocation(line: 4702, column: 14, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9250, file: !3, line: 4702, column: 14)
!9282 = !DILocation(line: 4702, column: 19, scope: !9281)
!9283 = !DILocation(line: 4702, column: 14, scope: !9250)
!9284 = !DILocation(line: 4703, column: 6, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9281, file: !3, line: 4702, column: 25)
!9286 = !DILocation(line: 4703, column: 12, scope: !9285)
!9287 = !DILocation(line: 4703, column: 15, scope: !9285)
!9288 = !DILocation(line: 4704, column: 5, scope: !9285)
!9289 = !DILocation(line: 4706, column: 6, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9281, file: !3, line: 4705, column: 10)
!9291 = !DILocation(line: 4706, column: 12, scope: !9290)
!9292 = !DILocation(line: 4706, column: 15, scope: !9290)
!9293 = !DILocation(line: 4708, column: 4, scope: !9251)
!9294 = !DILocation(line: 4710, column: 9, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9296, file: !3, line: 4710, column: 9)
!9296 = distinct !DILexicalBlock(scope: !9246, file: !3, line: 4709, column: 9)
!9297 = !DILocation(line: 4710, column: 13, scope: !9295)
!9298 = !DILocation(line: 4710, column: 16, scope: !9295)
!9299 = !DILocation(line: 4710, column: 9, scope: !9296)
!9300 = !DILocation(line: 4711, column: 20, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9295, file: !3, line: 4710, column: 26)
!9302 = !DILocation(line: 4711, column: 6, scope: !9301)
!9303 = !DILocation(line: 4712, column: 10, scope: !9304)
!9304 = distinct !DILexicalBlock(scope: !9301, file: !3, line: 4712, column: 10)
!9305 = !DILocation(line: 4712, column: 16, scope: !9304)
!9306 = !DILocation(line: 4712, column: 13, scope: !9304)
!9307 = !DILocation(line: 4712, column: 10, scope: !9301)
!9308 = !DILocation(line: 4712, column: 22, scope: !9304)
!9309 = !DILocation(line: 4712, column: 26, scope: !9304)
!9310 = !DILocation(line: 4712, column: 34, scope: !9304)
!9311 = !DILocation(line: 4713, column: 5, scope: !9301)
!9312 = !DILocation(line: 4715, column: 20, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9295, file: !3, line: 4714, column: 10)
!9314 = !DILocation(line: 4715, column: 6, scope: !9313)
!9315 = !DILocation(line: 4716, column: 37, scope: !9313)
!9316 = !DILocation(line: 4716, column: 41, scope: !9313)
!9317 = !DILocation(line: 4716, column: 45, scope: !9313)
!9318 = !DILocation(line: 4716, column: 6, scope: !9313)
!9319 = !DILocation(line: 4719, column: 3, scope: !9247)
!9320 = !DILocation(line: 4721, column: 26, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9243, file: !3, line: 4720, column: 8)
!9322 = !DILocation(line: 4721, column: 4, scope: !9321)
!9323 = !DILocation(line: 4723, column: 8, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9321, file: !3, line: 4723, column: 8)
!9325 = !DILocation(line: 4723, column: 8, scope: !9321)
!9326 = !DILocation(line: 4725, column: 9, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9328, file: !3, line: 4725, column: 9)
!9328 = distinct !DILexicalBlock(scope: !9324, file: !3, line: 4723, column: 14)
!9329 = !DILocation(line: 4725, column: 14, scope: !9327)
!9330 = !DILocation(line: 4725, column: 9, scope: !9328)
!9331 = !DILocation(line: 4726, column: 23, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9327, file: !3, line: 4725, column: 20)
!9333 = !DILocation(line: 4726, column: 6, scope: !9332)
!9334 = !DILocation(line: 4727, column: 37, scope: !9332)
!9335 = !DILocation(line: 4727, column: 41, scope: !9332)
!9336 = !DILocation(line: 4727, column: 45, scope: !9332)
!9337 = !DILocation(line: 4727, column: 6, scope: !9332)
!9338 = !DILocation(line: 4728, column: 5, scope: !9332)
!9339 = !DILocation(line: 4730, column: 10, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9341, file: !3, line: 4730, column: 10)
!9341 = distinct !DILexicalBlock(scope: !9327, file: !3, line: 4729, column: 10)
!9342 = !DILocation(line: 4730, column: 15, scope: !9340)
!9343 = !DILocation(line: 4730, column: 10, scope: !9341)
!9344 = !DILocation(line: 4730, column: 21, scope: !9340)
!9345 = !DILocation(line: 4730, column: 27, scope: !9340)
!9346 = !DILocation(line: 4730, column: 30, scope: !9340)
!9347 = !DILocation(line: 4731, column: 11, scope: !9340)
!9348 = !DILocation(line: 4731, column: 17, scope: !9340)
!9349 = !DILocation(line: 4731, column: 20, scope: !9340)
!9350 = !DILocation(line: 4733, column: 6, scope: !9341)
!9351 = !DILocation(line: 4733, column: 10, scope: !9341)
!9352 = !DILocation(line: 4733, column: 18, scope: !9341)
!9353 = !DILocation(line: 4735, column: 4, scope: !9328)
!9354 = !DILocation(line: 4737, column: 36, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9324, file: !3, line: 4736, column: 9)
!9356 = !DILocation(line: 4737, column: 40, scope: !9355)
!9357 = !DILocation(line: 4737, column: 44, scope: !9355)
!9358 = !DILocation(line: 4737, column: 5, scope: !9355)
!9359 = !DILocation(line: 4738, column: 19, scope: !9355)
!9360 = !DILocation(line: 4738, column: 5, scope: !9355)
!9361 = !DILocation(line: 4742, column: 7, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9150, file: !3, line: 4742, column: 7)
!9363 = !DILocation(line: 4742, column: 39, scope: !9362)
!9364 = !DILocation(line: 4742, column: 13, scope: !9362)
!9365 = !DILocation(line: 4742, column: 10, scope: !9362)
!9366 = !DILocation(line: 4742, column: 7, scope: !9150)
!9367 = !DILocation(line: 4743, column: 4, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 4742, column: 44)
!9369 = !DILocation(line: 4743, column: 8, scope: !9368)
!9370 = !DILocation(line: 4743, column: 16, scope: !9368)
!9371 = !DILocation(line: 4744, column: 30, scope: !9368)
!9372 = !DILocation(line: 4744, column: 34, scope: !9368)
!9373 = !DILocation(line: 4744, column: 4, scope: !9368)
!9374 = !DILocation(line: 4745, column: 3, scope: !9368)
!9375 = !DILocation(line: 4747, column: 25, scope: !9150)
!9376 = !DILocation(line: 4747, column: 49, scope: !9150)
!9377 = !DILocation(line: 4747, column: 57, scope: !9150)
!9378 = !DILocation(line: 4747, column: 3, scope: !9150)
!9379 = !DILocation(line: 4749, column: 3, scope: !9150)
!9380 = !DILocation(line: 4752, column: 2, scope: !8853)
!9381 = !DILocation(line: 4753, column: 1, scope: !8853)
!9382 = distinct !DISubprogram(name: "findnearestNurbvert", scope: !3, file: !3, line: 3804, type: !9383, scopeLine: 3805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!9383 = !DISubroutineType(types: !9384)
!9384 = !{!48, !9385, !48, !8856, !9386, !9387, !9388}
!9385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8880, size: 64)
!9386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 64)
!9387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3104, size: 64)
!9388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3093, size: 64)
!9389 = !DILocalVariable(name: "vc", arg: 1, scope: !9382, file: !3, line: 3804, type: !9385)
!9390 = !DILocation(line: 3804, column: 47, scope: !9382)
!9391 = !DILocalVariable(name: "sel", arg: 2, scope: !9382, file: !3, line: 3804, type: !48)
!9392 = !DILocation(line: 3804, column: 57, scope: !9382)
!9393 = !DILocalVariable(name: "mval", arg: 3, scope: !9382, file: !3, line: 3804, type: !8856)
!9394 = !DILocation(line: 3804, column: 72, scope: !9382)
!9395 = !DILocalVariable(name: "nurb", arg: 4, scope: !9382, file: !3, line: 3804, type: !9386)
!9396 = !DILocation(line: 3804, column: 88, scope: !9382)
!9397 = !DILocalVariable(name: "bezt", arg: 5, scope: !9382, file: !3, line: 3804, type: !9387)
!9398 = !DILocation(line: 3804, column: 106, scope: !9382)
!9399 = !DILocalVariable(name: "bp", arg: 6, scope: !9382, file: !3, line: 3804, type: !9388)
!9400 = !DILocation(line: 3804, column: 121, scope: !9382)
!9401 = !DILocalVariable(name: "data", scope: !9382, file: !3, line: 3809, type: !9402)
!9402 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9382, file: !3, line: 3809, size: 384, elements: !9403)
!9403 = !{!9404, !9405, !9406, !9407, !9408, !9409, !9410}
!9404 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !9402, file: !3, line: 3809, baseType: !3093, size: 64)
!9405 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !9402, file: !3, line: 3809, baseType: !3104, size: 64, offset: 64)
!9406 = !DIDerivedType(tag: DW_TAG_member, name: "nurb", scope: !9402, file: !3, line: 3809, baseType: !3163, size: 64, offset: 128)
!9407 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !9402, file: !3, line: 3809, baseType: !204, size: 32, offset: 192)
!9408 = !DIDerivedType(tag: DW_TAG_member, name: "hpoint", scope: !9402, file: !3, line: 3809, baseType: !22, size: 32, offset: 224)
!9409 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !9402, file: !3, line: 3809, baseType: !22, size: 32, offset: 256)
!9410 = !DIDerivedType(tag: DW_TAG_member, name: "mval_fl", scope: !9402, file: !3, line: 3809, baseType: !494, size: 64, offset: 288)
!9411 = !DILocation(line: 3809, column: 104, scope: !9382)
!9412 = !DILocation(line: 3811, column: 14, scope: !9382)
!9413 = !DILocation(line: 3811, column: 7, scope: !9382)
!9414 = !DILocation(line: 3811, column: 12, scope: !9382)
!9415 = !DILocation(line: 3812, column: 7, scope: !9382)
!9416 = !DILocation(line: 3812, column: 14, scope: !9382)
!9417 = !DILocation(line: 3813, column: 16, scope: !9382)
!9418 = !DILocation(line: 3813, column: 7, scope: !9382)
!9419 = !DILocation(line: 3813, column: 14, scope: !9382)
!9420 = !DILocation(line: 3814, column: 20, scope: !9382)
!9421 = !DILocation(line: 3814, column: 7, scope: !9382)
!9422 = !DILocation(line: 3814, column: 2, scope: !9382)
!9423 = !DILocation(line: 3814, column: 18, scope: !9382)
!9424 = !DILocation(line: 3815, column: 20, scope: !9382)
!9425 = !DILocation(line: 3815, column: 7, scope: !9382)
!9426 = !DILocation(line: 3815, column: 2, scope: !9382)
!9427 = !DILocation(line: 3815, column: 18, scope: !9382)
!9428 = !DILocation(line: 3817, column: 27, scope: !9382)
!9429 = !DILocation(line: 3817, column: 31, scope: !9382)
!9430 = !DILocation(line: 3817, column: 39, scope: !9382)
!9431 = !DILocation(line: 3817, column: 43, scope: !9382)
!9432 = !DILocation(line: 3817, column: 2, scope: !9382)
!9433 = !DILocation(line: 3818, column: 26, scope: !9382)
!9434 = !DILocation(line: 3818, column: 62, scope: !9382)
!9435 = !DILocation(line: 3818, column: 2, scope: !9382)
!9436 = !DILocation(line: 3820, column: 15, scope: !9382)
!9437 = !DILocation(line: 3820, column: 3, scope: !9382)
!9438 = !DILocation(line: 3820, column: 8, scope: !9382)
!9439 = !DILocation(line: 3821, column: 15, scope: !9382)
!9440 = !DILocation(line: 3821, column: 3, scope: !9382)
!9441 = !DILocation(line: 3821, column: 8, scope: !9382)
!9442 = !DILocation(line: 3822, column: 13, scope: !9382)
!9443 = !DILocation(line: 3822, column: 3, scope: !9382)
!9444 = !DILocation(line: 3822, column: 6, scope: !9382)
!9445 = !DILocation(line: 3824, column: 14, scope: !9382)
!9446 = !DILocation(line: 3824, column: 9, scope: !9382)
!9447 = !DILocation(line: 3824, column: 2, scope: !9382)
!9448 = distinct !DISubprogram(name: "ed_editnurb_spin", scope: !3, file: !3, line: 4759, type: !9449, scopeLine: 4760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!9449 = !DISubroutineType(types: !9450)
!9450 = !{!1081, !9451, !3242, !4638, !4638}
!9451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!9452 = !DILocalVariable(name: "viewmat", arg: 1, scope: !9448, file: !3, line: 4759, type: !9451)
!9453 = !DILocation(line: 4759, column: 29, scope: !9448)
!9454 = !DILocalVariable(name: "obedit", arg: 2, scope: !9448, file: !3, line: 4759, type: !3242)
!9455 = !DILocation(line: 4759, column: 52, scope: !9448)
!9456 = !DILocalVariable(name: "axis", arg: 3, scope: !9448, file: !3, line: 4759, type: !4638)
!9457 = !DILocation(line: 4759, column: 72, scope: !9448)
!9458 = !DILocalVariable(name: "cent", arg: 4, scope: !9448, file: !3, line: 4759, type: !4638)
!9459 = !DILocation(line: 4759, column: 93, scope: !9448)
!9460 = !DILocalVariable(name: "cu", scope: !9448, file: !3, line: 4761, type: !2953)
!9461 = !DILocation(line: 4761, column: 9, scope: !9448)
!9462 = !DILocation(line: 4761, column: 23, scope: !9448)
!9463 = !DILocation(line: 4761, column: 31, scope: !9448)
!9464 = !DILocation(line: 4761, column: 14, scope: !9448)
!9465 = !DILocalVariable(name: "editnurb", scope: !9448, file: !3, line: 4762, type: !486)
!9466 = !DILocation(line: 4762, column: 12, scope: !9448)
!9467 = !DILocation(line: 4762, column: 44, scope: !9448)
!9468 = !DILocation(line: 4762, column: 23, scope: !9448)
!9469 = !DILocalVariable(name: "nu", scope: !9448, file: !3, line: 4763, type: !3163)
!9470 = !DILocation(line: 4763, column: 8, scope: !9448)
!9471 = !DILocalVariable(name: "cmat", scope: !9448, file: !3, line: 4764, type: !3109)
!9472 = !DILocation(line: 4764, column: 8, scope: !9448)
!9473 = !DILocalVariable(name: "tmat", scope: !9448, file: !3, line: 4764, type: !3109)
!9474 = !DILocation(line: 4764, column: 20, scope: !9448)
!9475 = !DILocalVariable(name: "imat", scope: !9448, file: !3, line: 4764, type: !3109)
!9476 = !DILocation(line: 4764, column: 32, scope: !9448)
!9477 = !DILocalVariable(name: "bmat", scope: !9448, file: !3, line: 4765, type: !3109)
!9478 = !DILocation(line: 4765, column: 8, scope: !9448)
!9479 = !DILocalVariable(name: "rotmat", scope: !9448, file: !3, line: 4765, type: !3109)
!9480 = !DILocation(line: 4765, column: 20, scope: !9448)
!9481 = !DILocalVariable(name: "scalemat1", scope: !9448, file: !3, line: 4765, type: !3109)
!9482 = !DILocation(line: 4765, column: 34, scope: !9448)
!9483 = !DILocalVariable(name: "scalemat2", scope: !9448, file: !3, line: 4765, type: !3109)
!9484 = !DILocation(line: 4765, column: 51, scope: !9448)
!9485 = !DILocalVariable(name: "persmat", scope: !9448, file: !3, line: 4766, type: !3109)
!9486 = !DILocation(line: 4766, column: 8, scope: !9448)
!9487 = !DILocalVariable(name: "persinv", scope: !9448, file: !3, line: 4766, type: !3109)
!9488 = !DILocation(line: 4766, column: 23, scope: !9448)
!9489 = !DILocalVariable(name: "ok", scope: !9448, file: !3, line: 4767, type: !1081)
!9490 = !DILocation(line: 4767, column: 7, scope: !9448)
!9491 = !DILocalVariable(name: "changed", scope: !9448, file: !3, line: 4767, type: !1081)
!9492 = !DILocation(line: 4767, column: 11, scope: !9448)
!9493 = !DILocalVariable(name: "a", scope: !9448, file: !3, line: 4768, type: !22)
!9494 = !DILocation(line: 4768, column: 6, scope: !9448)
!9495 = !DILocation(line: 4770, column: 13, scope: !9448)
!9496 = !DILocation(line: 4770, column: 22, scope: !9448)
!9497 = !DILocation(line: 4770, column: 2, scope: !9448)
!9498 = !DILocation(line: 4771, column: 15, scope: !9448)
!9499 = !DILocation(line: 4771, column: 24, scope: !9448)
!9500 = !DILocation(line: 4771, column: 2, scope: !9448)
!9501 = !DILocation(line: 4774, column: 13, scope: !9448)
!9502 = !DILocation(line: 4774, column: 19, scope: !9448)
!9503 = !DILocation(line: 4774, column: 27, scope: !9448)
!9504 = !DILocation(line: 4774, column: 2, scope: !9448)
!9505 = !DILocation(line: 4775, column: 15, scope: !9448)
!9506 = !DILocation(line: 4775, column: 21, scope: !9448)
!9507 = !DILocation(line: 4775, column: 2, scope: !9448)
!9508 = !DILocation(line: 4777, column: 21, scope: !9448)
!9509 = !DILocation(line: 4777, column: 27, scope: !9448)
!9510 = !DILocation(line: 4777, column: 2, scope: !9448)
!9511 = !DILocation(line: 4778, column: 14, scope: !9448)
!9512 = !DILocation(line: 4778, column: 20, scope: !9448)
!9513 = !DILocation(line: 4778, column: 26, scope: !9448)
!9514 = !DILocation(line: 4778, column: 2, scope: !9448)
!9515 = !DILocation(line: 4779, column: 14, scope: !9448)
!9516 = !DILocation(line: 4779, column: 22, scope: !9448)
!9517 = !DILocation(line: 4779, column: 28, scope: !9448)
!9518 = !DILocation(line: 4779, column: 2, scope: !9448)
!9519 = !DILocation(line: 4781, column: 10, scope: !9448)
!9520 = !DILocation(line: 4781, column: 2, scope: !9448)
!9521 = !DILocation(line: 4782, column: 2, scope: !9448)
!9522 = !DILocation(line: 4782, column: 18, scope: !9448)
!9523 = !DILocation(line: 4783, column: 2, scope: !9448)
!9524 = !DILocation(line: 4783, column: 18, scope: !9448)
!9525 = !DILocation(line: 4785, column: 14, scope: !9448)
!9526 = !DILocation(line: 4785, column: 20, scope: !9448)
!9527 = !DILocation(line: 4785, column: 29, scope: !9448)
!9528 = !DILocation(line: 4785, column: 2, scope: !9448)
!9529 = !DILocation(line: 4786, column: 14, scope: !9448)
!9530 = !DILocation(line: 4786, column: 20, scope: !9448)
!9531 = !DILocation(line: 4786, column: 31, scope: !9448)
!9532 = !DILocation(line: 4786, column: 2, scope: !9448)
!9533 = !DILocation(line: 4787, column: 14, scope: !9448)
!9534 = !DILocation(line: 4787, column: 20, scope: !9448)
!9535 = !DILocation(line: 4787, column: 29, scope: !9448)
!9536 = !DILocation(line: 4787, column: 2, scope: !9448)
!9537 = !DILocation(line: 4788, column: 14, scope: !9448)
!9538 = !DILocation(line: 4788, column: 25, scope: !9448)
!9539 = !DILocation(line: 4788, column: 31, scope: !9448)
!9540 = !DILocation(line: 4788, column: 2, scope: !9448)
!9541 = !DILocation(line: 4790, column: 10, scope: !9448)
!9542 = !DILocation(line: 4790, column: 2, scope: !9448)
!9543 = !DILocation(line: 4791, column: 2, scope: !9448)
!9544 = !DILocation(line: 4791, column: 18, scope: !9448)
!9545 = !DILocation(line: 4792, column: 2, scope: !9448)
!9546 = !DILocation(line: 4792, column: 18, scope: !9448)
!9547 = !DILocation(line: 4794, column: 14, scope: !9448)
!9548 = !DILocation(line: 4794, column: 20, scope: !9448)
!9549 = !DILocation(line: 4794, column: 29, scope: !9448)
!9550 = !DILocation(line: 4794, column: 2, scope: !9448)
!9551 = !DILocation(line: 4795, column: 14, scope: !9448)
!9552 = !DILocation(line: 4795, column: 20, scope: !9448)
!9553 = !DILocation(line: 4795, column: 31, scope: !9448)
!9554 = !DILocation(line: 4795, column: 2, scope: !9448)
!9555 = !DILocation(line: 4796, column: 14, scope: !9448)
!9556 = !DILocation(line: 4796, column: 20, scope: !9448)
!9557 = !DILocation(line: 4796, column: 29, scope: !9448)
!9558 = !DILocation(line: 4796, column: 2, scope: !9448)
!9559 = !DILocation(line: 4797, column: 14, scope: !9448)
!9560 = !DILocation(line: 4797, column: 25, scope: !9448)
!9561 = !DILocation(line: 4797, column: 31, scope: !9448)
!9562 = !DILocation(line: 4797, column: 2, scope: !9448)
!9563 = !DILocation(line: 4799, column: 5, scope: !9448)
!9564 = !DILocation(line: 4801, column: 9, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9448, file: !3, line: 4801, column: 2)
!9566 = !DILocation(line: 4801, column: 7, scope: !9565)
!9567 = !DILocation(line: 4801, column: 14, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9565, file: !3, line: 4801, column: 2)
!9569 = !DILocation(line: 4801, column: 16, scope: !9568)
!9570 = !DILocation(line: 4801, column: 2, scope: !9565)
!9571 = !DILocation(line: 4802, column: 33, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 4801, column: 26)
!9573 = !DILocation(line: 4802, column: 37, scope: !9572)
!9574 = !DILocation(line: 4802, column: 8, scope: !9572)
!9575 = !DILocation(line: 4802, column: 6, scope: !9572)
!9576 = !DILocation(line: 4804, column: 7, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 4804, column: 7)
!9578 = !DILocation(line: 4804, column: 10, scope: !9577)
!9579 = !DILocation(line: 4804, column: 7, scope: !9572)
!9580 = !DILocation(line: 4805, column: 11, scope: !9577)
!9581 = !DILocation(line: 4805, column: 4, scope: !9577)
!9582 = !DILocation(line: 4807, column: 11, scope: !9572)
!9583 = !DILocation(line: 4809, column: 18, scope: !9572)
!9584 = !DILocation(line: 4809, column: 36, scope: !9572)
!9585 = !DILocation(line: 4809, column: 42, scope: !9572)
!9586 = !DILocation(line: 4809, column: 3, scope: !9572)
!9587 = !DILocation(line: 4811, column: 8, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 4811, column: 7)
!9589 = !DILocation(line: 4811, column: 10, scope: !9588)
!9590 = !DILocation(line: 4811, column: 15, scope: !9588)
!9591 = !DILocation(line: 4811, column: 7, scope: !9572)
!9592 = !DILocation(line: 4812, column: 19, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9588, file: !3, line: 4811, column: 21)
!9594 = !DILocation(line: 4812, column: 37, scope: !9593)
!9595 = !DILocation(line: 4812, column: 43, scope: !9593)
!9596 = !DILocation(line: 4812, column: 4, scope: !9593)
!9597 = !DILocation(line: 4813, column: 19, scope: !9593)
!9598 = !DILocation(line: 4813, column: 4, scope: !9593)
!9599 = !DILocation(line: 4814, column: 3, scope: !9593)
!9600 = !DILocation(line: 4816, column: 19, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9588, file: !3, line: 4815, column: 8)
!9602 = !DILocation(line: 4816, column: 37, scope: !9601)
!9603 = !DILocation(line: 4816, column: 43, scope: !9601)
!9604 = !DILocation(line: 4816, column: 4, scope: !9601)
!9605 = !DILocation(line: 4817, column: 19, scope: !9601)
!9606 = !DILocation(line: 4817, column: 4, scope: !9601)
!9607 = !DILocation(line: 4819, column: 2, scope: !9572)
!9608 = !DILocation(line: 4801, column: 22, scope: !9568)
!9609 = !DILocation(line: 4801, column: 2, scope: !9568)
!9610 = distinct !{!9610, !9570, !9611}
!9611 = !DILocation(line: 4819, column: 2, scope: !9565)
!9612 = !DILocation(line: 4821, column: 6, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9448, file: !3, line: 4821, column: 6)
!9614 = !DILocation(line: 4821, column: 6, scope: !9448)
!9615 = !DILocation(line: 4822, column: 13, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9617, file: !3, line: 4822, column: 3)
!9617 = distinct !DILexicalBlock(scope: !9613, file: !3, line: 4821, column: 10)
!9618 = !DILocation(line: 4822, column: 23, scope: !9616)
!9619 = !DILocation(line: 4822, column: 11, scope: !9616)
!9620 = !DILocation(line: 4822, column: 8, scope: !9616)
!9621 = !DILocation(line: 4822, column: 30, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 4822, column: 3)
!9623 = !DILocation(line: 4822, column: 3, scope: !9616)
!9624 = !DILocation(line: 4823, column: 18, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9626, file: !3, line: 4823, column: 8)
!9626 = distinct !DILexicalBlock(scope: !9622, file: !3, line: 4822, column: 49)
!9627 = !DILocation(line: 4823, column: 8, scope: !9625)
!9628 = !DILocation(line: 4823, column: 8, scope: !9626)
!9629 = !DILocation(line: 4824, column: 5, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9625, file: !3, line: 4823, column: 23)
!9631 = !DILocation(line: 4824, column: 9, scope: !9630)
!9632 = !DILocation(line: 4824, column: 16, scope: !9630)
!9633 = !DILocation(line: 4825, column: 5, scope: !9630)
!9634 = !DILocation(line: 4825, column: 9, scope: !9630)
!9635 = !DILocation(line: 4825, column: 15, scope: !9630)
!9636 = !DILocation(line: 4826, column: 26, scope: !9630)
!9637 = !DILocation(line: 4826, column: 5, scope: !9630)
!9638 = !DILocation(line: 4827, column: 4, scope: !9630)
!9639 = !DILocation(line: 4828, column: 3, scope: !9626)
!9640 = !DILocation(line: 4822, column: 39, scope: !9622)
!9641 = !DILocation(line: 4822, column: 43, scope: !9622)
!9642 = !DILocation(line: 4822, column: 37, scope: !9622)
!9643 = !DILocation(line: 4822, column: 3, scope: !9622)
!9644 = distinct !{!9644, !9623, !9645}
!9645 = !DILocation(line: 4828, column: 3, scope: !9616)
!9646 = !DILocation(line: 4829, column: 2, scope: !9617)
!9647 = !DILocation(line: 4831, column: 9, scope: !9448)
!9648 = !DILocation(line: 4831, column: 2, scope: !9448)
!9649 = !DILocation(line: 4832, column: 1, scope: !9448)
!9650 = distinct !DISubprogram(name: "rotateflagNurb", scope: !3, file: !3, line: 1700, type: !9651, scopeLine: 1701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!9651 = !DISubroutineType(types: !9652)
!9652 = !{null, !486, !48, !4638, !4248}
!9653 = !DILocalVariable(name: "editnurb", arg: 1, scope: !9650, file: !3, line: 1700, type: !486)
!9654 = !DILocation(line: 1700, column: 38, scope: !9650)
!9655 = !DILocalVariable(name: "flag", arg: 2, scope: !9650, file: !3, line: 1700, type: !48)
!9656 = !DILocation(line: 1700, column: 54, scope: !9650)
!9657 = !DILocalVariable(name: "cent", arg: 3, scope: !9650, file: !3, line: 1700, type: !4638)
!9658 = !DILocation(line: 1700, column: 72, scope: !9650)
!9659 = !DILocalVariable(name: "rotmat", arg: 4, scope: !9650, file: !3, line: 1700, type: !4248)
!9660 = !DILocation(line: 1700, column: 87, scope: !9650)
!9661 = !DILocalVariable(name: "nu", scope: !9650, file: !3, line: 1703, type: !3163)
!9662 = !DILocation(line: 1703, column: 8, scope: !9650)
!9663 = !DILocalVariable(name: "bp", scope: !9650, file: !3, line: 1704, type: !3093)
!9664 = !DILocation(line: 1704, column: 10, scope: !9650)
!9665 = !DILocalVariable(name: "a", scope: !9650, file: !3, line: 1705, type: !22)
!9666 = !DILocation(line: 1705, column: 6, scope: !9650)
!9667 = !DILocation(line: 1707, column: 12, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9650, file: !3, line: 1707, column: 2)
!9669 = !DILocation(line: 1707, column: 22, scope: !9668)
!9670 = !DILocation(line: 1707, column: 10, scope: !9668)
!9671 = !DILocation(line: 1707, column: 7, scope: !9668)
!9672 = !DILocation(line: 1707, column: 29, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9668, file: !3, line: 1707, column: 2)
!9674 = !DILocation(line: 1707, column: 2, scope: !9668)
!9675 = !DILocation(line: 1708, column: 7, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9677, file: !3, line: 1708, column: 7)
!9677 = distinct !DILexicalBlock(scope: !9673, file: !3, line: 1707, column: 48)
!9678 = !DILocation(line: 1708, column: 11, scope: !9676)
!9679 = !DILocation(line: 1708, column: 16, scope: !9676)
!9680 = !DILocation(line: 1708, column: 7, scope: !9677)
!9681 = !DILocation(line: 1709, column: 9, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9676, file: !3, line: 1708, column: 29)
!9683 = !DILocation(line: 1709, column: 13, scope: !9682)
!9684 = !DILocation(line: 1709, column: 7, scope: !9682)
!9685 = !DILocation(line: 1710, column: 8, scope: !9682)
!9686 = !DILocation(line: 1710, column: 12, scope: !9682)
!9687 = !DILocation(line: 1710, column: 20, scope: !9682)
!9688 = !DILocation(line: 1710, column: 24, scope: !9682)
!9689 = !DILocation(line: 1710, column: 18, scope: !9682)
!9690 = !DILocation(line: 1710, column: 6, scope: !9682)
!9691 = !DILocation(line: 1712, column: 4, scope: !9682)
!9692 = !DILocation(line: 1712, column: 12, scope: !9682)
!9693 = !DILocation(line: 1713, column: 9, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 1713, column: 9)
!9695 = distinct !DILexicalBlock(scope: !9682, file: !3, line: 1712, column: 16)
!9696 = !DILocation(line: 1713, column: 13, scope: !9694)
!9697 = !DILocation(line: 1713, column: 18, scope: !9694)
!9698 = !DILocation(line: 1713, column: 16, scope: !9694)
!9699 = !DILocation(line: 1713, column: 9, scope: !9695)
!9700 = !DILocation(line: 1714, column: 16, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9694, file: !3, line: 1713, column: 24)
!9702 = !DILocation(line: 1714, column: 20, scope: !9701)
!9703 = !DILocation(line: 1714, column: 25, scope: !9701)
!9704 = !DILocation(line: 1714, column: 6, scope: !9701)
!9705 = !DILocation(line: 1715, column: 16, scope: !9701)
!9706 = !DILocation(line: 1715, column: 24, scope: !9701)
!9707 = !DILocation(line: 1715, column: 28, scope: !9701)
!9708 = !DILocation(line: 1715, column: 6, scope: !9701)
!9709 = !DILocation(line: 1716, column: 16, scope: !9701)
!9710 = !DILocation(line: 1716, column: 20, scope: !9701)
!9711 = !DILocation(line: 1716, column: 25, scope: !9701)
!9712 = !DILocation(line: 1716, column: 6, scope: !9701)
!9713 = !DILocation(line: 1717, column: 5, scope: !9701)
!9714 = !DILocation(line: 1718, column: 7, scope: !9695)
!9715 = distinct !{!9715, !9691, !9716}
!9716 = !DILocation(line: 1719, column: 4, scope: !9682)
!9717 = !DILocation(line: 1720, column: 3, scope: !9682)
!9718 = !DILocation(line: 1721, column: 2, scope: !9677)
!9719 = !DILocation(line: 1707, column: 38, scope: !9673)
!9720 = !DILocation(line: 1707, column: 42, scope: !9673)
!9721 = !DILocation(line: 1707, column: 36, scope: !9673)
!9722 = !DILocation(line: 1707, column: 2, scope: !9673)
!9723 = distinct !{!9723, !9674, !9724}
!9724 = !DILocation(line: 1721, column: 2, scope: !9668)
!9725 = !DILocation(line: 1722, column: 1, scope: !9650)
!9726 = distinct !DISubprogram(name: "weightflagNurb", scope: !3, file: !3, line: 1756, type: !9727, scopeLine: 1757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!9727 = !DISubroutineType(types: !9728)
!9728 = !{null, !486, !48, !204}
!9729 = !DILocalVariable(name: "editnurb", arg: 1, scope: !9726, file: !3, line: 1756, type: !486)
!9730 = !DILocation(line: 1756, column: 38, scope: !9726)
!9731 = !DILocalVariable(name: "flag", arg: 2, scope: !9726, file: !3, line: 1756, type: !48)
!9732 = !DILocation(line: 1756, column: 54, scope: !9726)
!9733 = !DILocalVariable(name: "w", arg: 3, scope: !9726, file: !3, line: 1756, type: !204)
!9734 = !DILocation(line: 1756, column: 66, scope: !9726)
!9735 = !DILocalVariable(name: "nu", scope: !9726, file: !3, line: 1758, type: !3163)
!9736 = !DILocation(line: 1758, column: 8, scope: !9726)
!9737 = !DILocalVariable(name: "bp", scope: !9726, file: !3, line: 1759, type: !3093)
!9738 = !DILocation(line: 1759, column: 10, scope: !9726)
!9739 = !DILocalVariable(name: "a", scope: !9726, file: !3, line: 1760, type: !22)
!9740 = !DILocation(line: 1760, column: 6, scope: !9726)
!9741 = !DILocation(line: 1762, column: 12, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9726, file: !3, line: 1762, column: 2)
!9743 = !DILocation(line: 1762, column: 22, scope: !9742)
!9744 = !DILocation(line: 1762, column: 10, scope: !9742)
!9745 = !DILocation(line: 1762, column: 7, scope: !9742)
!9746 = !DILocation(line: 1762, column: 29, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9742, file: !3, line: 1762, column: 2)
!9748 = !DILocation(line: 1762, column: 2, scope: !9742)
!9749 = !DILocation(line: 1763, column: 7, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !9751, file: !3, line: 1763, column: 7)
!9751 = distinct !DILexicalBlock(scope: !9747, file: !3, line: 1762, column: 48)
!9752 = !DILocation(line: 1763, column: 11, scope: !9750)
!9753 = !DILocation(line: 1763, column: 16, scope: !9750)
!9754 = !DILocation(line: 1763, column: 7, scope: !9751)
!9755 = !DILocation(line: 1764, column: 8, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9750, file: !3, line: 1763, column: 29)
!9757 = !DILocation(line: 1764, column: 12, scope: !9756)
!9758 = !DILocation(line: 1764, column: 20, scope: !9756)
!9759 = !DILocation(line: 1764, column: 24, scope: !9756)
!9760 = !DILocation(line: 1764, column: 18, scope: !9756)
!9761 = !DILocation(line: 1764, column: 6, scope: !9756)
!9762 = !DILocation(line: 1765, column: 9, scope: !9756)
!9763 = !DILocation(line: 1765, column: 13, scope: !9756)
!9764 = !DILocation(line: 1765, column: 7, scope: !9756)
!9765 = !DILocation(line: 1766, column: 4, scope: !9756)
!9766 = !DILocation(line: 1766, column: 12, scope: !9756)
!9767 = !DILocation(line: 1767, column: 9, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9769, file: !3, line: 1767, column: 9)
!9769 = distinct !DILexicalBlock(scope: !9756, file: !3, line: 1766, column: 16)
!9770 = !DILocation(line: 1767, column: 13, scope: !9768)
!9771 = !DILocation(line: 1767, column: 18, scope: !9768)
!9772 = !DILocation(line: 1767, column: 16, scope: !9768)
!9773 = !DILocation(line: 1767, column: 9, scope: !9769)
!9774 = !DILocation(line: 1769, column: 20, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !9768, file: !3, line: 1767, column: 24)
!9776 = !DILocation(line: 1769, column: 6, scope: !9775)
!9777 = !DILocation(line: 1769, column: 10, scope: !9775)
!9778 = !DILocation(line: 1769, column: 17, scope: !9775)
!9779 = !DILocation(line: 1770, column: 5, scope: !9775)
!9780 = !DILocation(line: 1771, column: 7, scope: !9769)
!9781 = distinct !{!9781, !9765, !9782}
!9782 = !DILocation(line: 1772, column: 4, scope: !9756)
!9783 = !DILocation(line: 1773, column: 3, scope: !9756)
!9784 = !DILocation(line: 1774, column: 2, scope: !9751)
!9785 = !DILocation(line: 1762, column: 38, scope: !9747)
!9786 = !DILocation(line: 1762, column: 42, scope: !9747)
!9787 = !DILocation(line: 1762, column: 36, scope: !9747)
!9788 = !DILocation(line: 1762, column: 2, scope: !9747)
!9789 = distinct !{!9789, !9748, !9790}
!9790 = !DILocation(line: 1774, column: 2, scope: !9742)
!9791 = !DILocation(line: 1775, column: 1, scope: !9726)
!9792 = distinct !DISubprogram(name: "CURVE_OT_spin", scope: !3, file: !3, line: 4881, type: !4, scopeLine: 4882, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!9793 = !DILocalVariable(name: "ot", arg: 1, scope: !9792, file: !3, line: 4881, type: !6)
!9794 = !DILocation(line: 4881, column: 36, scope: !9792)
!9795 = !DILocation(line: 4884, column: 2, scope: !9792)
!9796 = !DILocation(line: 4884, column: 6, scope: !9792)
!9797 = !DILocation(line: 4884, column: 11, scope: !9792)
!9798 = !DILocation(line: 4885, column: 2, scope: !9792)
!9799 = !DILocation(line: 4885, column: 6, scope: !9792)
!9800 = !DILocation(line: 4885, column: 13, scope: !9792)
!9801 = !DILocation(line: 4886, column: 2, scope: !9792)
!9802 = !DILocation(line: 4886, column: 6, scope: !9792)
!9803 = !DILocation(line: 4886, column: 18, scope: !9792)
!9804 = !DILocation(line: 4889, column: 2, scope: !9792)
!9805 = !DILocation(line: 4889, column: 6, scope: !9792)
!9806 = !DILocation(line: 4889, column: 11, scope: !9792)
!9807 = !DILocation(line: 4890, column: 2, scope: !9792)
!9808 = !DILocation(line: 4890, column: 6, scope: !9792)
!9809 = !DILocation(line: 4890, column: 13, scope: !9792)
!9810 = !DILocation(line: 4891, column: 2, scope: !9792)
!9811 = !DILocation(line: 4891, column: 6, scope: !9792)
!9812 = !DILocation(line: 4891, column: 11, scope: !9792)
!9813 = !DILocation(line: 4894, column: 2, scope: !9792)
!9814 = !DILocation(line: 4894, column: 6, scope: !9792)
!9815 = !DILocation(line: 4894, column: 11, scope: !9792)
!9816 = !DILocation(line: 4896, column: 27, scope: !9792)
!9817 = !DILocation(line: 4896, column: 31, scope: !9792)
!9818 = !DILocation(line: 4896, column: 2, scope: !9792)
!9819 = !DILocation(line: 4897, column: 23, scope: !9792)
!9820 = !DILocation(line: 4897, column: 27, scope: !9792)
!9821 = !DILocation(line: 4897, column: 2, scope: !9792)
!9822 = !DILocation(line: 4898, column: 1, scope: !9792)
!9823 = distinct !DISubprogram(name: "spin_exec", scope: !3, file: !3, line: 4834, type: !3224, scopeLine: 4835, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!9824 = !DILocalVariable(name: "C", arg: 1, scope: !9823, file: !3, line: 4834, type: !3226)
!9825 = !DILocation(line: 4834, column: 32, scope: !9823)
!9826 = !DILocalVariable(name: "op", arg: 2, scope: !9823, file: !3, line: 4834, type: !3228)
!9827 = !DILocation(line: 4834, column: 47, scope: !9823)
!9828 = !DILocalVariable(name: "obedit", scope: !9823, file: !3, line: 4836, type: !3242)
!9829 = !DILocation(line: 4836, column: 10, scope: !9823)
!9830 = !DILocation(line: 4836, column: 40, scope: !9823)
!9831 = !DILocation(line: 4836, column: 19, scope: !9823)
!9832 = !DILocalVariable(name: "rv3d", scope: !9823, file: !3, line: 4837, type: !9833)
!9833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9834, size: 64)
!9834 = !DIDerivedType(tag: DW_TAG_typedef, name: "RegionView3D", file: !8958, line: 148, baseType: !9049)
!9835 = !DILocation(line: 4837, column: 16, scope: !9823)
!9836 = !DILocation(line: 4837, column: 46, scope: !9823)
!9837 = !DILocation(line: 4837, column: 23, scope: !9823)
!9838 = !DILocalVariable(name: "cent", scope: !9823, file: !3, line: 4838, type: !282)
!9839 = !DILocation(line: 4838, column: 8, scope: !9823)
!9840 = !DILocalVariable(name: "axis", scope: !9823, file: !3, line: 4838, type: !282)
!9841 = !DILocation(line: 4838, column: 17, scope: !9823)
!9842 = !DILocalVariable(name: "viewmat", scope: !9823, file: !3, line: 4838, type: !364)
!9843 = !DILocation(line: 4838, column: 26, scope: !9823)
!9844 = !DILocation(line: 4840, column: 22, scope: !9823)
!9845 = !DILocation(line: 4840, column: 26, scope: !9823)
!9846 = !DILocation(line: 4840, column: 41, scope: !9823)
!9847 = !DILocation(line: 4840, column: 2, scope: !9823)
!9848 = !DILocation(line: 4841, column: 22, scope: !9823)
!9849 = !DILocation(line: 4841, column: 26, scope: !9823)
!9850 = !DILocation(line: 4841, column: 39, scope: !9823)
!9851 = !DILocation(line: 4841, column: 2, scope: !9823)
!9852 = !DILocation(line: 4843, column: 15, scope: !9823)
!9853 = !DILocation(line: 4843, column: 23, scope: !9823)
!9854 = !DILocation(line: 4843, column: 29, scope: !9823)
!9855 = !DILocation(line: 4843, column: 37, scope: !9823)
!9856 = !DILocation(line: 4843, column: 2, scope: !9823)
!9857 = !DILocation(line: 4844, column: 12, scope: !9823)
!9858 = !DILocation(line: 4844, column: 20, scope: !9823)
!9859 = !DILocation(line: 4844, column: 26, scope: !9823)
!9860 = !DILocation(line: 4844, column: 2, scope: !9823)
!9861 = !DILocation(line: 4846, column: 6, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 4846, column: 6)
!9863 = !DILocation(line: 4846, column: 6, scope: !9823)
!9864 = !DILocation(line: 4847, column: 14, scope: !9862)
!9865 = !DILocation(line: 4847, column: 23, scope: !9862)
!9866 = !DILocation(line: 4847, column: 29, scope: !9862)
!9867 = !DILocation(line: 4847, column: 3, scope: !9862)
!9868 = !DILocation(line: 4849, column: 11, scope: !9862)
!9869 = !DILocation(line: 4849, column: 3, scope: !9862)
!9870 = !DILocation(line: 4851, column: 24, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 4851, column: 6)
!9872 = !DILocation(line: 4851, column: 33, scope: !9871)
!9873 = !DILocation(line: 4851, column: 41, scope: !9871)
!9874 = !DILocation(line: 4851, column: 47, scope: !9871)
!9875 = !DILocation(line: 4851, column: 7, scope: !9871)
!9876 = !DILocation(line: 4851, column: 6, scope: !9823)
!9877 = !DILocation(line: 4852, column: 14, scope: !9878)
!9878 = distinct !DILexicalBlock(scope: !9871, file: !3, line: 4851, column: 54)
!9879 = !DILocation(line: 4852, column: 18, scope: !9878)
!9880 = !DILocation(line: 4852, column: 3, scope: !9878)
!9881 = !DILocation(line: 4853, column: 3, scope: !9878)
!9882 = !DILocation(line: 4856, column: 31, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 4856, column: 6)
!9884 = !DILocation(line: 4856, column: 39, scope: !9883)
!9885 = !DILocation(line: 4856, column: 6, scope: !9883)
!9886 = !DILocation(line: 4856, column: 6, scope: !9823)
!9887 = !DILocation(line: 4857, column: 25, scope: !9883)
!9888 = !DILocation(line: 4857, column: 49, scope: !9883)
!9889 = !DILocation(line: 4857, column: 3, scope: !9883)
!9890 = !DILocation(line: 4859, column: 24, scope: !9823)
!9891 = !DILocation(line: 4859, column: 46, scope: !9823)
!9892 = !DILocation(line: 4859, column: 54, scope: !9823)
!9893 = !DILocation(line: 4859, column: 2, scope: !9823)
!9894 = !DILocation(line: 4860, column: 20, scope: !9823)
!9895 = !DILocation(line: 4860, column: 28, scope: !9823)
!9896 = !DILocation(line: 4860, column: 2, scope: !9823)
!9897 = !DILocation(line: 4862, column: 2, scope: !9823)
!9898 = !DILocation(line: 4863, column: 1, scope: !9823)
!9899 = distinct !DISubprogram(name: "spin_invoke", scope: !3, file: !3, line: 4865, type: !9900, scopeLine: 4866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!9900 = !DISubroutineType(types: !9901)
!9901 = !{!22, !3226, !3228, !9902}
!9902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9903, size: 64)
!9903 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9904)
!9904 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !8, line: 460, baseType: !1727)
!9905 = !DILocalVariable(name: "C", arg: 1, scope: !9899, file: !3, line: 4865, type: !3226)
!9906 = !DILocation(line: 4865, column: 34, scope: !9899)
!9907 = !DILocalVariable(name: "op", arg: 2, scope: !9899, file: !3, line: 4865, type: !3228)
!9908 = !DILocation(line: 4865, column: 49, scope: !9899)
!9909 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !9899, file: !3, line: 4865, type: !9902)
!9910 = !DILocation(line: 4865, column: 68, scope: !9899)
!9911 = !DILocalVariable(name: "scene", scope: !9899, file: !3, line: 4867, type: !5497)
!9912 = !DILocation(line: 4867, column: 9, scope: !9899)
!9913 = !DILocation(line: 4867, column: 32, scope: !9899)
!9914 = !DILocation(line: 4867, column: 17, scope: !9899)
!9915 = !DILocalVariable(name: "v3d", scope: !9899, file: !3, line: 4868, type: !9916)
!9916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9917, size: 64)
!9917 = !DIDerivedType(tag: DW_TAG_typedef, name: "View3D", file: !8958, line: 221, baseType: !8957)
!9918 = !DILocation(line: 4868, column: 10, scope: !9899)
!9919 = !DILocation(line: 4868, column: 30, scope: !9899)
!9920 = !DILocation(line: 4868, column: 16, scope: !9899)
!9921 = !DILocalVariable(name: "rv3d", scope: !9899, file: !3, line: 4869, type: !9833)
!9922 = !DILocation(line: 4869, column: 16, scope: !9899)
!9923 = !DILocation(line: 4869, column: 46, scope: !9899)
!9924 = !DILocation(line: 4869, column: 23, scope: !9899)
!9925 = !DILocalVariable(name: "axis", scope: !9899, file: !3, line: 4870, type: !282)
!9926 = !DILocation(line: 4870, column: 8, scope: !9899)
!9927 = !DILocation(line: 4872, column: 6, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9899, file: !3, line: 4872, column: 6)
!9929 = !DILocation(line: 4872, column: 6, scope: !9899)
!9930 = !DILocation(line: 4873, column: 14, scope: !9928)
!9931 = !DILocation(line: 4873, column: 20, scope: !9928)
!9932 = !DILocation(line: 4873, column: 26, scope: !9928)
!9933 = !DILocation(line: 4873, column: 3, scope: !9928)
!9934 = !DILocation(line: 4875, column: 22, scope: !9899)
!9935 = !DILocation(line: 4875, column: 26, scope: !9899)
!9936 = !DILocation(line: 4875, column: 64, scope: !9899)
!9937 = !DILocation(line: 4875, column: 71, scope: !9899)
!9938 = !DILocation(line: 4875, column: 41, scope: !9899)
!9939 = !DILocation(line: 4875, column: 2, scope: !9899)
!9940 = !DILocation(line: 4876, column: 22, scope: !9899)
!9941 = !DILocation(line: 4876, column: 26, scope: !9899)
!9942 = !DILocation(line: 4876, column: 39, scope: !9899)
!9943 = !DILocation(line: 4876, column: 2, scope: !9899)
!9944 = !DILocation(line: 4878, column: 19, scope: !9899)
!9945 = !DILocation(line: 4878, column: 22, scope: !9899)
!9946 = !DILocation(line: 4878, column: 9, scope: !9899)
!9947 = !DILocation(line: 4878, column: 2, scope: !9899)
!9948 = distinct !DISubprogram(name: "CURVE_OT_vertex_add", scope: !3, file: !3, line: 5226, type: !4, scopeLine: 5227, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!9949 = !DILocalVariable(name: "ot", arg: 1, scope: !9948, file: !3, line: 5226, type: !6)
!9950 = !DILocation(line: 5226, column: 42, scope: !9948)
!9951 = !DILocation(line: 5229, column: 2, scope: !9948)
!9952 = !DILocation(line: 5229, column: 6, scope: !9948)
!9953 = !DILocation(line: 5229, column: 11, scope: !9948)
!9954 = !DILocation(line: 5230, column: 2, scope: !9948)
!9955 = !DILocation(line: 5230, column: 6, scope: !9948)
!9956 = !DILocation(line: 5230, column: 13, scope: !9948)
!9957 = !DILocation(line: 5231, column: 2, scope: !9948)
!9958 = !DILocation(line: 5231, column: 6, scope: !9948)
!9959 = !DILocation(line: 5231, column: 18, scope: !9948)
!9960 = !DILocation(line: 5234, column: 2, scope: !9948)
!9961 = !DILocation(line: 5234, column: 6, scope: !9948)
!9962 = !DILocation(line: 5234, column: 11, scope: !9948)
!9963 = !DILocation(line: 5235, column: 2, scope: !9948)
!9964 = !DILocation(line: 5235, column: 6, scope: !9948)
!9965 = !DILocation(line: 5235, column: 13, scope: !9948)
!9966 = !DILocation(line: 5236, column: 2, scope: !9948)
!9967 = !DILocation(line: 5236, column: 6, scope: !9948)
!9968 = !DILocation(line: 5236, column: 11, scope: !9948)
!9969 = !DILocation(line: 5239, column: 2, scope: !9948)
!9970 = !DILocation(line: 5239, column: 6, scope: !9948)
!9971 = !DILocation(line: 5239, column: 11, scope: !9948)
!9972 = !DILocation(line: 5242, column: 27, scope: !9948)
!9973 = !DILocation(line: 5242, column: 31, scope: !9948)
!9974 = !DILocation(line: 5242, column: 2, scope: !9948)
!9975 = !DILocation(line: 5243, column: 1, scope: !9948)
!9976 = distinct !DISubprogram(name: "add_vertex_exec", scope: !3, file: !3, line: 5173, type: !3224, scopeLine: 5174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!9977 = !DILocalVariable(name: "C", arg: 1, scope: !9976, file: !3, line: 5173, type: !3226)
!9978 = !DILocation(line: 5173, column: 38, scope: !9976)
!9979 = !DILocalVariable(name: "op", arg: 2, scope: !9976, file: !3, line: 5173, type: !3228)
!9980 = !DILocation(line: 5173, column: 53, scope: !9976)
!9981 = !DILocalVariable(name: "location", scope: !9976, file: !3, line: 5175, type: !282)
!9982 = !DILocation(line: 5175, column: 8, scope: !9976)
!9983 = !DILocation(line: 5177, column: 22, scope: !9976)
!9984 = !DILocation(line: 5177, column: 26, scope: !9976)
!9985 = !DILocation(line: 5177, column: 43, scope: !9976)
!9986 = !DILocation(line: 5177, column: 2, scope: !9976)
!9987 = !DILocation(line: 5178, column: 22, scope: !9976)
!9988 = !DILocation(line: 5178, column: 28, scope: !9976)
!9989 = !DILocation(line: 5178, column: 9, scope: !9976)
!9990 = !DILocation(line: 5178, column: 2, scope: !9976)
!9991 = distinct !DISubprogram(name: "add_vertex_invoke", scope: !3, file: !3, line: 5181, type: !9900, scopeLine: 5182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!9992 = !DILocalVariable(name: "C", arg: 1, scope: !9991, file: !3, line: 5181, type: !3226)
!9993 = !DILocation(line: 5181, column: 40, scope: !9991)
!9994 = !DILocalVariable(name: "op", arg: 2, scope: !9991, file: !3, line: 5181, type: !3228)
!9995 = !DILocation(line: 5181, column: 55, scope: !9991)
!9996 = !DILocalVariable(name: "event", arg: 3, scope: !9991, file: !3, line: 5181, type: !9902)
!9997 = !DILocation(line: 5181, column: 74, scope: !9991)
!9998 = !DILocalVariable(name: "vc", scope: !9991, file: !3, line: 5183, type: !8880)
!9999 = !DILocation(line: 5183, column: 14, scope: !9991)
!10000 = !DILocation(line: 5185, column: 25, scope: !9991)
!10001 = !DILocation(line: 5185, column: 2, scope: !9991)
!10002 = !DILocation(line: 5187, column: 9, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9991, file: !3, line: 5187, column: 6)
!10004 = !DILocation(line: 5187, column: 6, scope: !10003)
!10005 = !DILocation(line: 5187, column: 14, scope: !10003)
!10006 = !DILocation(line: 5187, column: 45, scope: !10003)
!10007 = !DILocation(line: 5187, column: 49, scope: !10003)
!10008 = !DILocation(line: 5187, column: 18, scope: !10003)
!10009 = !DILocation(line: 5187, column: 6, scope: !9991)
!10010 = !DILocalVariable(name: "cu", scope: !10011, file: !3, line: 5188, type: !2953)
!10011 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 5187, column: 67)
!10012 = !DILocation(line: 5188, column: 10, scope: !10011)
!10013 = !DILocalVariable(name: "location", scope: !10011, file: !3, line: 5189, type: !282)
!10014 = !DILocation(line: 5189, column: 9, scope: !10011)
!10015 = !DILocalVariable(name: "use_proj", scope: !10011, file: !3, line: 5190, type: !7655)
!10016 = !DILocation(line: 5190, column: 14, scope: !10011)
!10017 = !DILocation(line: 5190, column: 30, scope: !10011)
!10018 = !DILocation(line: 5190, column: 37, scope: !10011)
!10019 = !DILocation(line: 5190, column: 51, scope: !10011)
!10020 = !DILocation(line: 5190, column: 27, scope: !10011)
!10021 = !DILocation(line: 5190, column: 61, scope: !10011)
!10022 = !DILocation(line: 5190, column: 73, scope: !10011)
!10023 = !DILocation(line: 5191, column: 30, scope: !10011)
!10024 = !DILocation(line: 5191, column: 37, scope: !10011)
!10025 = !DILocation(line: 5191, column: 51, scope: !10011)
!10026 = !DILocation(line: 5191, column: 27, scope: !10011)
!10027 = !DILocation(line: 5191, column: 61, scope: !10011)
!10028 = !DILocation(line: 0, scope: !10011)
!10029 = !DILocation(line: 5190, column: 25, scope: !10011)
!10030 = !DILocalVariable(name: "nu", scope: !10011, file: !3, line: 5193, type: !3163)
!10031 = !DILocation(line: 5193, column: 9, scope: !10011)
!10032 = !DILocalVariable(name: "bezt", scope: !10011, file: !3, line: 5194, type: !3104)
!10033 = !DILocation(line: 5194, column: 14, scope: !10011)
!10034 = !DILocalVariable(name: "bp", scope: !10011, file: !3, line: 5195, type: !3093)
!10035 = !DILocation(line: 5195, column: 11, scope: !10011)
!10036 = !DILocation(line: 5197, column: 11, scope: !10011)
!10037 = !DILocation(line: 5197, column: 19, scope: !10011)
!10038 = !DILocation(line: 5197, column: 8, scope: !10011)
!10039 = !DILocation(line: 5197, column: 6, scope: !10011)
!10040 = !DILocation(line: 5199, column: 25, scope: !10011)
!10041 = !DILocation(line: 5199, column: 29, scope: !10011)
!10042 = !DILocation(line: 5199, column: 39, scope: !10011)
!10043 = !DILocation(line: 5199, column: 3, scope: !10011)
!10044 = !DILocation(line: 5201, column: 7, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10011, file: !3, line: 5201, column: 7)
!10046 = !DILocation(line: 5201, column: 7, scope: !10011)
!10047 = !DILocation(line: 5202, column: 16, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10045, file: !3, line: 5201, column: 13)
!10049 = !DILocation(line: 5202, column: 29, scope: !10048)
!10050 = !DILocation(line: 5202, column: 37, scope: !10048)
!10051 = !DILocation(line: 5202, column: 26, scope: !10048)
!10052 = !DILocation(line: 5202, column: 44, scope: !10048)
!10053 = !DILocation(line: 5202, column: 50, scope: !10048)
!10054 = !DILocation(line: 5202, column: 4, scope: !10048)
!10055 = !DILocation(line: 5203, column: 3, scope: !10048)
!10056 = !DILocation(line: 5204, column: 12, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10045, file: !3, line: 5204, column: 12)
!10058 = !DILocation(line: 5204, column: 12, scope: !10045)
!10059 = !DILocation(line: 5205, column: 16, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10057, file: !3, line: 5204, column: 16)
!10061 = !DILocation(line: 5205, column: 29, scope: !10060)
!10062 = !DILocation(line: 5205, column: 37, scope: !10060)
!10063 = !DILocation(line: 5205, column: 26, scope: !10060)
!10064 = !DILocation(line: 5205, column: 44, scope: !10060)
!10065 = !DILocation(line: 5205, column: 48, scope: !10060)
!10066 = !DILocation(line: 5205, column: 4, scope: !10060)
!10067 = !DILocation(line: 5206, column: 3, scope: !10060)
!10068 = !DILocation(line: 5208, column: 15, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10057, file: !3, line: 5207, column: 8)
!10070 = !DILocation(line: 5208, column: 51, scope: !10069)
!10071 = !DILocation(line: 5208, column: 61, scope: !10069)
!10072 = !DILocation(line: 5208, column: 25, scope: !10069)
!10073 = !DILocation(line: 5208, column: 4, scope: !10069)
!10074 = !DILocation(line: 5211, column: 30, scope: !10011)
!10075 = !DILocation(line: 5211, column: 34, scope: !10011)
!10076 = !DILocation(line: 5211, column: 44, scope: !10011)
!10077 = !DILocation(line: 5211, column: 51, scope: !10011)
!10078 = !DILocation(line: 5211, column: 57, scope: !10011)
!10079 = !DILocation(line: 5211, column: 3, scope: !10011)
!10080 = !DILocation(line: 5213, column: 7, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10011, file: !3, line: 5213, column: 7)
!10082 = !DILocation(line: 5213, column: 7, scope: !10011)
!10083 = !DILocalVariable(name: "mval", scope: !10084, file: !3, line: 5214, type: !10085)
!10084 = distinct !DILexicalBlock(scope: !10081, file: !3, line: 5213, column: 17)
!10085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4639, size: 64, elements: !495)
!10086 = !DILocation(line: 5214, column: 16, scope: !10084)
!10087 = !DILocation(line: 5214, column: 26, scope: !10084)
!10088 = !DILocation(line: 5214, column: 27, scope: !10084)
!10089 = !DILocalVariable(name: "no_dummy", scope: !10084, file: !3, line: 5215, type: !282)
!10090 = !DILocation(line: 5215, column: 10, scope: !10084)
!10091 = !DILocalVariable(name: "dist_px_dummy", scope: !10084, file: !3, line: 5216, type: !204)
!10092 = !DILocation(line: 5216, column: 10, scope: !10084)
!10093 = !DILocation(line: 5217, column: 23, scope: !10084)
!10094 = !DILocation(line: 5217, column: 26, scope: !10084)
!10095 = !DILocation(line: 5217, column: 48, scope: !10084)
!10096 = !DILocation(line: 5217, column: 58, scope: !10084)
!10097 = !DILocation(line: 5217, column: 4, scope: !10084)
!10098 = !DILocation(line: 5218, column: 3, scope: !10084)
!10099 = !DILocation(line: 5220, column: 23, scope: !10011)
!10100 = !DILocation(line: 5220, column: 27, scope: !10011)
!10101 = !DILocation(line: 5220, column: 44, scope: !10011)
!10102 = !DILocation(line: 5220, column: 3, scope: !10011)
!10103 = !DILocation(line: 5221, column: 2, scope: !10011)
!10104 = !DILocation(line: 5223, column: 25, scope: !9991)
!10105 = !DILocation(line: 5223, column: 28, scope: !9991)
!10106 = !DILocation(line: 5223, column: 9, scope: !9991)
!10107 = !DILocation(line: 5223, column: 2, scope: !9991)
!10108 = distinct !DISubprogram(name: "CURVE_OT_extrude", scope: !3, file: !3, line: 5275, type: !4, scopeLine: 5276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!10109 = !DILocalVariable(name: "ot", arg: 1, scope: !10108, file: !3, line: 5275, type: !6)
!10110 = !DILocation(line: 5275, column: 39, scope: !10108)
!10111 = !DILocation(line: 5278, column: 2, scope: !10108)
!10112 = !DILocation(line: 5278, column: 6, scope: !10108)
!10113 = !DILocation(line: 5278, column: 11, scope: !10108)
!10114 = !DILocation(line: 5279, column: 2, scope: !10108)
!10115 = !DILocation(line: 5279, column: 6, scope: !10108)
!10116 = !DILocation(line: 5279, column: 18, scope: !10108)
!10117 = !DILocation(line: 5280, column: 2, scope: !10108)
!10118 = !DILocation(line: 5280, column: 6, scope: !10108)
!10119 = !DILocation(line: 5280, column: 13, scope: !10108)
!10120 = !DILocation(line: 5283, column: 2, scope: !10108)
!10121 = !DILocation(line: 5283, column: 6, scope: !10108)
!10122 = !DILocation(line: 5283, column: 11, scope: !10108)
!10123 = !DILocation(line: 5284, column: 2, scope: !10108)
!10124 = !DILocation(line: 5284, column: 6, scope: !10108)
!10125 = !DILocation(line: 5284, column: 11, scope: !10108)
!10126 = !DILocation(line: 5287, column: 2, scope: !10108)
!10127 = !DILocation(line: 5287, column: 6, scope: !10108)
!10128 = !DILocation(line: 5287, column: 11, scope: !10108)
!10129 = !DILocation(line: 5290, column: 15, scope: !10108)
!10130 = !DILocation(line: 5290, column: 19, scope: !10108)
!10131 = !DILocation(line: 5290, column: 2, scope: !10108)
!10132 = !DILocation(line: 5291, column: 1, scope: !10108)
!10133 = distinct !DISubprogram(name: "extrude_exec", scope: !3, file: !3, line: 5247, type: !3224, scopeLine: 5248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!10134 = !DILocalVariable(name: "C", arg: 1, scope: !10133, file: !3, line: 5247, type: !3226)
!10135 = !DILocation(line: 5247, column: 35, scope: !10133)
!10136 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !10133, file: !3, line: 5247, type: !3228)
!10137 = !DILocation(line: 5247, column: 50, scope: !10133)
!10138 = !DILocalVariable(name: "obedit", scope: !10133, file: !3, line: 5249, type: !3242)
!10139 = !DILocation(line: 5249, column: 10, scope: !10133)
!10140 = !DILocation(line: 5249, column: 40, scope: !10133)
!10141 = !DILocation(line: 5249, column: 19, scope: !10133)
!10142 = !DILocalVariable(name: "cu", scope: !10133, file: !3, line: 5250, type: !2953)
!10143 = !DILocation(line: 5250, column: 9, scope: !10133)
!10144 = !DILocation(line: 5250, column: 14, scope: !10133)
!10145 = !DILocation(line: 5250, column: 22, scope: !10133)
!10146 = !DILocalVariable(name: "editnurb", scope: !10133, file: !3, line: 5251, type: !2962)
!10147 = !DILocation(line: 5251, column: 12, scope: !10133)
!10148 = !DILocation(line: 5251, column: 23, scope: !10133)
!10149 = !DILocation(line: 5251, column: 27, scope: !10133)
!10150 = !DILocalVariable(name: "nu", scope: !10133, file: !3, line: 5252, type: !3163)
!10151 = !DILocation(line: 5252, column: 8, scope: !10133)
!10152 = !DILocation(line: 5255, column: 12, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10133, file: !3, line: 5255, column: 2)
!10154 = !DILocation(line: 5255, column: 22, scope: !10153)
!10155 = !DILocation(line: 5255, column: 28, scope: !10153)
!10156 = !DILocation(line: 5255, column: 10, scope: !10153)
!10157 = !DILocation(line: 5255, column: 7, scope: !10153)
!10158 = !DILocation(line: 5255, column: 35, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10153, file: !3, line: 5255, column: 2)
!10160 = !DILocation(line: 5255, column: 2, scope: !10153)
!10161 = !DILocation(line: 5256, column: 7, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10159, file: !3, line: 5256, column: 7)
!10163 = !DILocation(line: 5256, column: 11, scope: !10162)
!10164 = !DILocation(line: 5256, column: 17, scope: !10162)
!10165 = !DILocation(line: 5256, column: 22, scope: !10162)
!10166 = !DILocation(line: 5256, column: 41, scope: !10162)
!10167 = !DILocation(line: 5256, column: 45, scope: !10162)
!10168 = !DILocation(line: 5256, column: 25, scope: !10162)
!10169 = !DILocation(line: 5256, column: 49, scope: !10162)
!10170 = !DILocation(line: 5256, column: 7, scope: !10159)
!10171 = !DILocation(line: 5257, column: 4, scope: !10162)
!10172 = !DILocation(line: 5256, column: 52, scope: !10162)
!10173 = !DILocation(line: 5255, column: 44, scope: !10159)
!10174 = !DILocation(line: 5255, column: 48, scope: !10159)
!10175 = !DILocation(line: 5255, column: 42, scope: !10159)
!10176 = !DILocation(line: 5255, column: 2, scope: !10159)
!10177 = distinct !{!10177, !10160, !10178}
!10178 = !DILocation(line: 5257, column: 4, scope: !10153)
!10179 = !DILocation(line: 5259, column: 6, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10133, file: !3, line: 5259, column: 6)
!10181 = !DILocation(line: 5259, column: 14, scope: !10180)
!10182 = !DILocation(line: 5259, column: 19, scope: !10180)
!10183 = !DILocation(line: 5259, column: 31, scope: !10180)
!10184 = !DILocation(line: 5259, column: 34, scope: !10180)
!10185 = !DILocation(line: 5259, column: 6, scope: !10133)
!10186 = !DILocation(line: 5260, column: 16, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10180, file: !3, line: 5259, column: 38)
!10188 = !DILocation(line: 5260, column: 3, scope: !10187)
!10189 = !DILocation(line: 5261, column: 2, scope: !10187)
!10190 = !DILocation(line: 5263, column: 32, scope: !10191)
!10191 = distinct !DILexicalBlock(scope: !10192, file: !3, line: 5263, column: 7)
!10192 = distinct !DILexicalBlock(scope: !10180, file: !3, line: 5262, column: 7)
!10193 = !DILocation(line: 5263, column: 7, scope: !10191)
!10194 = !DILocation(line: 5263, column: 7, scope: !10192)
!10195 = !DILocation(line: 5264, column: 33, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !10197, file: !3, line: 5264, column: 8)
!10197 = distinct !DILexicalBlock(scope: !10191, file: !3, line: 5263, column: 51)
!10198 = !DILocation(line: 5264, column: 41, scope: !10196)
!10199 = !DILocation(line: 5264, column: 8, scope: !10196)
!10200 = !DILocation(line: 5264, column: 8, scope: !10197)
!10201 = !DILocation(line: 5265, column: 27, scope: !10196)
!10202 = !DILocation(line: 5265, column: 51, scope: !10196)
!10203 = !DILocation(line: 5265, column: 5, scope: !10196)
!10204 = !DILocation(line: 5267, column: 26, scope: !10197)
!10205 = !DILocation(line: 5267, column: 48, scope: !10197)
!10206 = !DILocation(line: 5267, column: 56, scope: !10197)
!10207 = !DILocation(line: 5267, column: 4, scope: !10197)
!10208 = !DILocation(line: 5268, column: 22, scope: !10197)
!10209 = !DILocation(line: 5268, column: 30, scope: !10197)
!10210 = !DILocation(line: 5268, column: 4, scope: !10197)
!10211 = !DILocation(line: 5269, column: 3, scope: !10197)
!10212 = !DILocation(line: 5272, column: 2, scope: !10133)
!10213 = !DILocalVariable(name: "ot", arg: 1, scope: !3217, file: !3, line: 5398, type: !6)
!10214 = !DILocation(line: 5398, column: 45, scope: !3217)
!10215 = !DILocation(line: 5407, column: 2, scope: !3217)
!10216 = !DILocation(line: 5407, column: 6, scope: !3217)
!10217 = !DILocation(line: 5407, column: 11, scope: !3217)
!10218 = !DILocation(line: 5408, column: 2, scope: !3217)
!10219 = !DILocation(line: 5408, column: 6, scope: !3217)
!10220 = !DILocation(line: 5408, column: 18, scope: !3217)
!10221 = !DILocation(line: 5409, column: 2, scope: !3217)
!10222 = !DILocation(line: 5409, column: 6, scope: !3217)
!10223 = !DILocation(line: 5409, column: 13, scope: !3217)
!10224 = !DILocation(line: 5412, column: 2, scope: !3217)
!10225 = !DILocation(line: 5412, column: 6, scope: !3217)
!10226 = !DILocation(line: 5412, column: 11, scope: !3217)
!10227 = !DILocation(line: 5413, column: 2, scope: !3217)
!10228 = !DILocation(line: 5413, column: 6, scope: !3217)
!10229 = !DILocation(line: 5413, column: 13, scope: !3217)
!10230 = !DILocation(line: 5414, column: 2, scope: !3217)
!10231 = !DILocation(line: 5414, column: 6, scope: !3217)
!10232 = !DILocation(line: 5414, column: 11, scope: !3217)
!10233 = !DILocation(line: 5417, column: 2, scope: !3217)
!10234 = !DILocation(line: 5417, column: 6, scope: !3217)
!10235 = !DILocation(line: 5417, column: 11, scope: !3217)
!10236 = !DILocation(line: 5420, column: 15, scope: !3217)
!10237 = !DILocation(line: 5420, column: 19, scope: !3217)
!10238 = !DILocation(line: 5420, column: 2, scope: !3217)
!10239 = !DILocation(line: 5421, column: 1, scope: !3217)
!10240 = distinct !DISubprogram(name: "toggle_cyclic_exec", scope: !3, file: !3, line: 5295, type: !3224, scopeLine: 5296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!10241 = !DILocalVariable(name: "C", arg: 1, scope: !10240, file: !3, line: 5295, type: !3226)
!10242 = !DILocation(line: 5295, column: 41, scope: !10240)
!10243 = !DILocalVariable(name: "op", arg: 2, scope: !10240, file: !3, line: 5295, type: !3228)
!10244 = !DILocation(line: 5295, column: 56, scope: !10240)
!10245 = !DILocalVariable(name: "obedit", scope: !10240, file: !3, line: 5297, type: !3242)
!10246 = !DILocation(line: 5297, column: 10, scope: !10240)
!10247 = !DILocation(line: 5297, column: 40, scope: !10240)
!10248 = !DILocation(line: 5297, column: 19, scope: !10240)
!10249 = !DILocalVariable(name: "cu", scope: !10240, file: !3, line: 5298, type: !2953)
!10250 = !DILocation(line: 5298, column: 9, scope: !10240)
!10251 = !DILocation(line: 5298, column: 14, scope: !10240)
!10252 = !DILocation(line: 5298, column: 22, scope: !10240)
!10253 = !DILocalVariable(name: "editnurb", scope: !10240, file: !3, line: 5299, type: !486)
!10254 = !DILocation(line: 5299, column: 12, scope: !10240)
!10255 = !DILocation(line: 5299, column: 44, scope: !10240)
!10256 = !DILocation(line: 5299, column: 23, scope: !10240)
!10257 = !DILocalVariable(name: "nu", scope: !10240, file: !3, line: 5300, type: !3163)
!10258 = !DILocation(line: 5300, column: 8, scope: !10240)
!10259 = !DILocalVariable(name: "bezt", scope: !10240, file: !3, line: 5301, type: !3104)
!10260 = !DILocation(line: 5301, column: 13, scope: !10240)
!10261 = !DILocalVariable(name: "bp", scope: !10240, file: !3, line: 5302, type: !3093)
!10262 = !DILocation(line: 5302, column: 10, scope: !10240)
!10263 = !DILocalVariable(name: "a", scope: !10240, file: !3, line: 5303, type: !22)
!10264 = !DILocation(line: 5303, column: 6, scope: !10240)
!10265 = !DILocalVariable(name: "direction", scope: !10240, file: !3, line: 5303, type: !22)
!10266 = !DILocation(line: 5303, column: 9, scope: !10240)
!10267 = !DILocation(line: 5303, column: 34, scope: !10240)
!10268 = !DILocation(line: 5303, column: 38, scope: !10240)
!10269 = !DILocation(line: 5303, column: 21, scope: !10240)
!10270 = !DILocation(line: 5305, column: 12, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10240, file: !3, line: 5305, column: 2)
!10272 = !DILocation(line: 5305, column: 22, scope: !10271)
!10273 = !DILocation(line: 5305, column: 10, scope: !10271)
!10274 = !DILocation(line: 5305, column: 7, scope: !10271)
!10275 = !DILocation(line: 5305, column: 29, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 5305, column: 2)
!10277 = !DILocation(line: 5305, column: 2, scope: !10271)
!10278 = !DILocation(line: 5306, column: 7, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10280, file: !3, line: 5306, column: 7)
!10280 = distinct !DILexicalBlock(scope: !10276, file: !3, line: 5305, column: 48)
!10281 = !DILocation(line: 5306, column: 11, scope: !10279)
!10282 = !DILocation(line: 5306, column: 17, scope: !10279)
!10283 = !DILocation(line: 5306, column: 21, scope: !10279)
!10284 = !DILocation(line: 5306, column: 24, scope: !10279)
!10285 = !DILocation(line: 5306, column: 28, scope: !10279)
!10286 = !DILocation(line: 5306, column: 34, scope: !10279)
!10287 = !DILocation(line: 5306, column: 7, scope: !10280)
!10288 = !DILocation(line: 5307, column: 8, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10290, file: !3, line: 5307, column: 8)
!10290 = distinct !DILexicalBlock(scope: !10279, file: !3, line: 5306, column: 39)
!10291 = !DILocation(line: 5307, column: 12, scope: !10289)
!10292 = !DILocation(line: 5307, column: 17, scope: !10289)
!10293 = !DILocation(line: 5307, column: 8, scope: !10290)
!10294 = !DILocation(line: 5308, column: 9, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10289, file: !3, line: 5307, column: 29)
!10296 = !DILocation(line: 5308, column: 13, scope: !10295)
!10297 = !DILocation(line: 5308, column: 7, scope: !10295)
!10298 = !DILocation(line: 5309, column: 10, scope: !10295)
!10299 = !DILocation(line: 5309, column: 14, scope: !10295)
!10300 = !DILocation(line: 5309, column: 8, scope: !10295)
!10301 = !DILocation(line: 5310, column: 5, scope: !10295)
!10302 = !DILocation(line: 5310, column: 13, scope: !10295)
!10303 = !DILocation(line: 5311, column: 10, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10305, file: !3, line: 5311, column: 10)
!10305 = distinct !DILexicalBlock(scope: !10295, file: !3, line: 5310, column: 17)
!10306 = !DILocation(line: 5311, column: 14, scope: !10304)
!10307 = !DILocation(line: 5311, column: 17, scope: !10304)
!10308 = !DILocation(line: 5311, column: 10, scope: !10305)
!10309 = !DILocation(line: 5312, column: 7, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 5311, column: 27)
!10311 = !DILocation(line: 5312, column: 11, scope: !10310)
!10312 = !DILocation(line: 5312, column: 17, scope: !10310)
!10313 = !DILocation(line: 5313, column: 7, scope: !10310)
!10314 = !DILocation(line: 5315, column: 8, scope: !10305)
!10315 = distinct !{!10315, !10301, !10316}
!10316 = !DILocation(line: 5316, column: 5, scope: !10295)
!10317 = !DILocation(line: 5317, column: 4, scope: !10295)
!10318 = !DILocation(line: 5318, column: 13, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10289, file: !3, line: 5318, column: 13)
!10320 = !DILocation(line: 5318, column: 17, scope: !10319)
!10321 = !DILocation(line: 5318, column: 22, scope: !10319)
!10322 = !DILocation(line: 5318, column: 13, scope: !10289)
!10323 = !DILocation(line: 5319, column: 9, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10319, file: !3, line: 5318, column: 36)
!10325 = !DILocation(line: 5319, column: 13, scope: !10324)
!10326 = !DILocation(line: 5319, column: 7, scope: !10324)
!10327 = !DILocation(line: 5320, column: 12, scope: !10324)
!10328 = !DILocation(line: 5320, column: 16, scope: !10324)
!10329 = !DILocation(line: 5320, column: 10, scope: !10324)
!10330 = !DILocation(line: 5321, column: 5, scope: !10324)
!10331 = !DILocation(line: 5321, column: 13, scope: !10324)
!10332 = !DILocation(line: 5322, column: 10, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !10334, file: !3, line: 5322, column: 10)
!10334 = distinct !DILexicalBlock(scope: !10324, file: !3, line: 5321, column: 17)
!10335 = !DILocation(line: 5322, column: 10, scope: !10334)
!10336 = !DILocation(line: 5323, column: 7, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10333, file: !3, line: 5322, column: 47)
!10338 = !DILocation(line: 5323, column: 11, scope: !10337)
!10339 = !DILocation(line: 5323, column: 17, scope: !10337)
!10340 = !DILocation(line: 5324, column: 7, scope: !10337)
!10341 = !DILocation(line: 5326, column: 10, scope: !10334)
!10342 = distinct !{!10342, !10330, !10343}
!10343 = !DILocation(line: 5327, column: 5, scope: !10324)
!10344 = !DILocation(line: 5328, column: 27, scope: !10324)
!10345 = !DILocation(line: 5328, column: 5, scope: !10324)
!10346 = !DILocation(line: 5329, column: 4, scope: !10324)
!10347 = !DILocation(line: 5330, column: 13, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10319, file: !3, line: 5330, column: 13)
!10349 = !DILocation(line: 5330, column: 17, scope: !10348)
!10350 = !DILocation(line: 5330, column: 23, scope: !10348)
!10351 = !DILocation(line: 5330, column: 28, scope: !10348)
!10352 = !DILocation(line: 5330, column: 31, scope: !10348)
!10353 = !DILocation(line: 5330, column: 35, scope: !10348)
!10354 = !DILocation(line: 5330, column: 40, scope: !10348)
!10355 = !DILocation(line: 5330, column: 13, scope: !10319)
!10356 = !DILocation(line: 5331, column: 9, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10358, file: !3, line: 5331, column: 9)
!10358 = distinct !DILexicalBlock(scope: !10348, file: !3, line: 5330, column: 53)
!10359 = !DILocation(line: 5331, column: 13, scope: !10357)
!10360 = !DILocation(line: 5331, column: 9, scope: !10358)
!10361 = !DILocation(line: 5332, column: 10, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10357, file: !3, line: 5331, column: 21)
!10363 = !DILocation(line: 5332, column: 14, scope: !10362)
!10364 = !DILocation(line: 5332, column: 8, scope: !10362)
!10365 = !DILocation(line: 5333, column: 11, scope: !10362)
!10366 = !DILocation(line: 5333, column: 15, scope: !10362)
!10367 = !DILocation(line: 5333, column: 9, scope: !10362)
!10368 = !DILocation(line: 5334, column: 6, scope: !10362)
!10369 = !DILocation(line: 5334, column: 14, scope: !10362)
!10370 = !DILocation(line: 5335, column: 11, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10372, file: !3, line: 5335, column: 11)
!10372 = distinct !DILexicalBlock(scope: !10362, file: !3, line: 5334, column: 18)
!10373 = !DILocation(line: 5335, column: 15, scope: !10371)
!10374 = !DILocation(line: 5335, column: 18, scope: !10371)
!10375 = !DILocation(line: 5335, column: 11, scope: !10372)
!10376 = !DILocation(line: 5336, column: 8, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 5335, column: 28)
!10378 = !DILocation(line: 5336, column: 12, scope: !10377)
!10379 = !DILocation(line: 5336, column: 18, scope: !10377)
!10380 = !DILocation(line: 5337, column: 29, scope: !10377)
!10381 = !DILocation(line: 5337, column: 8, scope: !10377)
!10382 = !DILocation(line: 5338, column: 8, scope: !10377)
!10383 = !DILocation(line: 5340, column: 9, scope: !10372)
!10384 = distinct !{!10384, !10368, !10385}
!10385 = !DILocation(line: 5341, column: 6, scope: !10362)
!10386 = !DILocation(line: 5342, column: 5, scope: !10362)
!10387 = !DILocation(line: 5343, column: 4, scope: !10358)
!10388 = !DILocation(line: 5344, column: 13, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !10348, file: !3, line: 5344, column: 13)
!10390 = !DILocation(line: 5344, column: 17, scope: !10389)
!10391 = !DILocation(line: 5344, column: 22, scope: !10389)
!10392 = !DILocation(line: 5344, column: 13, scope: !10348)
!10393 = !DILocation(line: 5345, column: 9, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10389, file: !3, line: 5344, column: 35)
!10395 = !DILocation(line: 5345, column: 13, scope: !10394)
!10396 = !DILocation(line: 5345, column: 21, scope: !10394)
!10397 = !DILocation(line: 5345, column: 25, scope: !10394)
!10398 = !DILocation(line: 5345, column: 19, scope: !10394)
!10399 = !DILocation(line: 5345, column: 7, scope: !10394)
!10400 = !DILocation(line: 5346, column: 10, scope: !10394)
!10401 = !DILocation(line: 5346, column: 14, scope: !10394)
!10402 = !DILocation(line: 5346, column: 8, scope: !10394)
!10403 = !DILocation(line: 5347, column: 5, scope: !10394)
!10404 = !DILocation(line: 5347, column: 13, scope: !10394)
!10405 = !DILocation(line: 5349, column: 10, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10407, file: !3, line: 5349, column: 10)
!10407 = distinct !DILexicalBlock(scope: !10394, file: !3, line: 5347, column: 17)
!10408 = !DILocation(line: 5349, column: 14, scope: !10406)
!10409 = !DILocation(line: 5349, column: 17, scope: !10406)
!10410 = !DILocation(line: 5349, column: 10, scope: !10407)
!10411 = !DILocation(line: 5350, column: 11, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 5350, column: 11)
!10413 = distinct !DILexicalBlock(scope: !10406, file: !3, line: 5349, column: 27)
!10414 = !DILocation(line: 5350, column: 21, scope: !10412)
!10415 = !DILocation(line: 5350, column: 26, scope: !10412)
!10416 = !DILocation(line: 5350, column: 29, scope: !10412)
!10417 = !DILocation(line: 5350, column: 33, scope: !10412)
!10418 = !DILocation(line: 5350, column: 39, scope: !10412)
!10419 = !DILocation(line: 5350, column: 11, scope: !10413)
!10420 = !DILocation(line: 5351, column: 8, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10412, file: !3, line: 5350, column: 44)
!10422 = !DILocation(line: 5351, column: 12, scope: !10421)
!10423 = !DILocation(line: 5351, column: 18, scope: !10421)
!10424 = !DILocation(line: 5352, column: 29, scope: !10421)
!10425 = !DILocation(line: 5352, column: 8, scope: !10421)
!10426 = !DILocation(line: 5353, column: 7, scope: !10421)
!10427 = !DILocation(line: 5354, column: 11, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 5354, column: 11)
!10429 = !DILocation(line: 5354, column: 21, scope: !10428)
!10430 = !DILocation(line: 5354, column: 26, scope: !10428)
!10431 = !DILocation(line: 5354, column: 29, scope: !10428)
!10432 = !DILocation(line: 5354, column: 33, scope: !10428)
!10433 = !DILocation(line: 5354, column: 39, scope: !10428)
!10434 = !DILocation(line: 5354, column: 11, scope: !10413)
!10435 = !DILocation(line: 5355, column: 8, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10428, file: !3, line: 5354, column: 44)
!10437 = !DILocation(line: 5355, column: 12, scope: !10436)
!10438 = !DILocation(line: 5355, column: 18, scope: !10436)
!10439 = !DILocation(line: 5356, column: 29, scope: !10436)
!10440 = !DILocation(line: 5356, column: 8, scope: !10436)
!10441 = !DILocation(line: 5357, column: 7, scope: !10436)
!10442 = !DILocation(line: 5358, column: 7, scope: !10413)
!10443 = !DILocation(line: 5360, column: 8, scope: !10407)
!10444 = distinct !{!10444, !10403, !10445}
!10445 = !DILocation(line: 5361, column: 5, scope: !10394)
!10446 = !DILocation(line: 5363, column: 4, scope: !10394)
!10447 = !DILocation(line: 5364, column: 3, scope: !10290)
!10448 = !DILocation(line: 5365, column: 2, scope: !10280)
!10449 = !DILocation(line: 5305, column: 38, scope: !10276)
!10450 = !DILocation(line: 5305, column: 42, scope: !10276)
!10451 = !DILocation(line: 5305, column: 36, scope: !10276)
!10452 = !DILocation(line: 5305, column: 2, scope: !10276)
!10453 = distinct !{!10453, !10277, !10454}
!10454 = !DILocation(line: 5365, column: 2, scope: !10271)
!10455 = !DILocation(line: 5367, column: 24, scope: !10240)
!10456 = !DILocation(line: 5367, column: 46, scope: !10240)
!10457 = !DILocation(line: 5367, column: 54, scope: !10240)
!10458 = !DILocation(line: 5367, column: 2, scope: !10240)
!10459 = !DILocation(line: 5368, column: 20, scope: !10240)
!10460 = !DILocation(line: 5368, column: 28, scope: !10240)
!10461 = !DILocation(line: 5368, column: 2, scope: !10240)
!10462 = !DILocation(line: 5370, column: 2, scope: !10240)
!10463 = distinct !DISubprogram(name: "toggle_cyclic_invoke", scope: !3, file: !3, line: 5373, type: !9900, scopeLine: 5374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!10464 = !DILocalVariable(name: "C", arg: 1, scope: !10463, file: !3, line: 5373, type: !3226)
!10465 = !DILocation(line: 5373, column: 43, scope: !10463)
!10466 = !DILocalVariable(name: "op", arg: 2, scope: !10463, file: !3, line: 5373, type: !3228)
!10467 = !DILocation(line: 5373, column: 58, scope: !10463)
!10468 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !10463, file: !3, line: 5373, type: !9902)
!10469 = !DILocation(line: 5373, column: 77, scope: !10463)
!10470 = !DILocalVariable(name: "obedit", scope: !10463, file: !3, line: 5375, type: !3242)
!10471 = !DILocation(line: 5375, column: 10, scope: !10463)
!10472 = !DILocation(line: 5375, column: 40, scope: !10463)
!10473 = !DILocation(line: 5375, column: 19, scope: !10463)
!10474 = !DILocalVariable(name: "editnurb", scope: !10463, file: !3, line: 5376, type: !486)
!10475 = !DILocation(line: 5376, column: 12, scope: !10463)
!10476 = !DILocation(line: 5376, column: 44, scope: !10463)
!10477 = !DILocation(line: 5376, column: 23, scope: !10463)
!10478 = !DILocalVariable(name: "pup", scope: !10463, file: !3, line: 5377, type: !10479)
!10479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10480, size: 64)
!10480 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiPopupMenu", file: !10481, line: 355, baseType: !10482)
!10481 = !DIFile(filename: "blender/source/blender/editors/include/UI_interface.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10482 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiPopupMenu", file: !10481, line: 355, flags: DIFlagFwdDecl)
!10483 = !DILocation(line: 5377, column: 15, scope: !10463)
!10484 = !DILocalVariable(name: "layout", scope: !10463, file: !3, line: 5378, type: !10485)
!10485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10486, size: 64)
!10486 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiLayout", file: !10481, line: 85, baseType: !1804)
!10487 = !DILocation(line: 5378, column: 12, scope: !10463)
!10488 = !DILocalVariable(name: "nu", scope: !10463, file: !3, line: 5379, type: !3163)
!10489 = !DILocation(line: 5379, column: 8, scope: !10463)
!10490 = !DILocation(line: 5381, column: 6, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !10463, file: !3, line: 5381, column: 6)
!10492 = !DILocation(line: 5381, column: 14, scope: !10491)
!10493 = !DILocation(line: 5381, column: 19, scope: !10491)
!10494 = !DILocation(line: 5381, column: 6, scope: !10463)
!10495 = !DILocation(line: 5382, column: 13, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10497, file: !3, line: 5382, column: 3)
!10497 = distinct !DILexicalBlock(scope: !10491, file: !3, line: 5381, column: 31)
!10498 = !DILocation(line: 5382, column: 23, scope: !10496)
!10499 = !DILocation(line: 5382, column: 11, scope: !10496)
!10500 = !DILocation(line: 5382, column: 8, scope: !10496)
!10501 = !DILocation(line: 5382, column: 30, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 5382, column: 3)
!10503 = !DILocation(line: 5382, column: 3, scope: !10496)
!10504 = !DILocation(line: 5383, column: 8, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10506, file: !3, line: 5383, column: 8)
!10506 = distinct !DILexicalBlock(scope: !10502, file: !3, line: 5382, column: 49)
!10507 = !DILocation(line: 5383, column: 12, scope: !10505)
!10508 = !DILocation(line: 5383, column: 18, scope: !10505)
!10509 = !DILocation(line: 5383, column: 22, scope: !10505)
!10510 = !DILocation(line: 5383, column: 25, scope: !10505)
!10511 = !DILocation(line: 5383, column: 29, scope: !10505)
!10512 = !DILocation(line: 5383, column: 35, scope: !10505)
!10513 = !DILocation(line: 5383, column: 8, scope: !10506)
!10514 = !DILocation(line: 5384, column: 9, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10516, file: !3, line: 5384, column: 9)
!10516 = distinct !DILexicalBlock(scope: !10505, file: !3, line: 5383, column: 40)
!10517 = !DILocation(line: 5384, column: 13, scope: !10515)
!10518 = !DILocation(line: 5384, column: 18, scope: !10515)
!10519 = !DILocation(line: 5384, column: 9, scope: !10516)
!10520 = !DILocation(line: 5385, column: 27, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10515, file: !3, line: 5384, column: 31)
!10522 = !DILocation(line: 5385, column: 12, scope: !10521)
!10523 = !DILocation(line: 5385, column: 10, scope: !10521)
!10524 = !DILocation(line: 5386, column: 31, scope: !10521)
!10525 = !DILocation(line: 5386, column: 15, scope: !10521)
!10526 = !DILocation(line: 5386, column: 13, scope: !10521)
!10527 = !DILocation(line: 5387, column: 19, scope: !10521)
!10528 = !DILocation(line: 5387, column: 27, scope: !10521)
!10529 = !DILocation(line: 5387, column: 31, scope: !10521)
!10530 = !DILocation(line: 5387, column: 37, scope: !10521)
!10531 = !DILocation(line: 5387, column: 6, scope: !10521)
!10532 = !DILocation(line: 5388, column: 19, scope: !10521)
!10533 = !DILocation(line: 5388, column: 22, scope: !10521)
!10534 = !DILocation(line: 5388, column: 6, scope: !10521)
!10535 = !DILocation(line: 5389, column: 6, scope: !10521)
!10536 = !DILocation(line: 5391, column: 4, scope: !10516)
!10537 = !DILocation(line: 5392, column: 3, scope: !10506)
!10538 = !DILocation(line: 5382, column: 39, scope: !10502)
!10539 = !DILocation(line: 5382, column: 43, scope: !10502)
!10540 = !DILocation(line: 5382, column: 37, scope: !10502)
!10541 = !DILocation(line: 5382, column: 3, scope: !10502)
!10542 = distinct !{!10542, !10503, !10543}
!10543 = !DILocation(line: 5392, column: 3, scope: !10496)
!10544 = !DILocation(line: 5393, column: 2, scope: !10497)
!10545 = !DILocation(line: 5395, column: 28, scope: !10463)
!10546 = !DILocation(line: 5395, column: 31, scope: !10463)
!10547 = !DILocation(line: 5395, column: 9, scope: !10463)
!10548 = !DILocation(line: 5395, column: 2, scope: !10463)
!10549 = !DILocation(line: 5396, column: 1, scope: !10463)
!10550 = distinct !DISubprogram(name: "CURVE_OT_select_linked", scope: !3, file: !3, line: 5481, type: !4, scopeLine: 5482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!10551 = !DILocalVariable(name: "ot", arg: 1, scope: !10550, file: !3, line: 5481, type: !6)
!10552 = !DILocation(line: 5481, column: 45, scope: !10550)
!10553 = !DILocation(line: 5484, column: 2, scope: !10550)
!10554 = !DILocation(line: 5484, column: 6, scope: !10550)
!10555 = !DILocation(line: 5484, column: 11, scope: !10550)
!10556 = !DILocation(line: 5485, column: 2, scope: !10550)
!10557 = !DILocation(line: 5485, column: 6, scope: !10550)
!10558 = !DILocation(line: 5485, column: 13, scope: !10550)
!10559 = !DILocation(line: 5486, column: 2, scope: !10550)
!10560 = !DILocation(line: 5486, column: 6, scope: !10550)
!10561 = !DILocation(line: 5486, column: 18, scope: !10550)
!10562 = !DILocation(line: 5489, column: 2, scope: !10550)
!10563 = !DILocation(line: 5489, column: 6, scope: !10550)
!10564 = !DILocation(line: 5489, column: 11, scope: !10550)
!10565 = !DILocation(line: 5490, column: 2, scope: !10550)
!10566 = !DILocation(line: 5490, column: 6, scope: !10550)
!10567 = !DILocation(line: 5490, column: 13, scope: !10550)
!10568 = !DILocation(line: 5491, column: 2, scope: !10550)
!10569 = !DILocation(line: 5491, column: 6, scope: !10550)
!10570 = !DILocation(line: 5491, column: 11, scope: !10550)
!10571 = !DILocation(line: 5494, column: 2, scope: !10550)
!10572 = !DILocation(line: 5494, column: 6, scope: !10550)
!10573 = !DILocation(line: 5494, column: 11, scope: !10550)
!10574 = !DILocation(line: 5497, column: 1, scope: !10550)
!10575 = distinct !DISubprogram(name: "select_linked_exec", scope: !3, file: !3, line: 5425, type: !3224, scopeLine: 5426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!10576 = !DILocalVariable(name: "C", arg: 1, scope: !10575, file: !3, line: 5425, type: !3226)
!10577 = !DILocation(line: 5425, column: 41, scope: !10575)
!10578 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !10575, file: !3, line: 5425, type: !3228)
!10579 = !DILocation(line: 5425, column: 56, scope: !10575)
!10580 = !DILocalVariable(name: "obedit", scope: !10575, file: !3, line: 5427, type: !3242)
!10581 = !DILocation(line: 5427, column: 10, scope: !10575)
!10582 = !DILocation(line: 5427, column: 40, scope: !10575)
!10583 = !DILocation(line: 5427, column: 19, scope: !10575)
!10584 = !DILocalVariable(name: "cu", scope: !10575, file: !3, line: 5428, type: !2953)
!10585 = !DILocation(line: 5428, column: 9, scope: !10575)
!10586 = !DILocation(line: 5428, column: 23, scope: !10575)
!10587 = !DILocation(line: 5428, column: 31, scope: !10575)
!10588 = !DILocation(line: 5428, column: 14, scope: !10575)
!10589 = !DILocalVariable(name: "editnurb", scope: !10575, file: !3, line: 5429, type: !2962)
!10590 = !DILocation(line: 5429, column: 12, scope: !10575)
!10591 = !DILocation(line: 5429, column: 23, scope: !10575)
!10592 = !DILocation(line: 5429, column: 27, scope: !10575)
!10593 = !DILocalVariable(name: "nurbs", scope: !10575, file: !3, line: 5430, type: !486)
!10594 = !DILocation(line: 5430, column: 12, scope: !10575)
!10595 = !DILocation(line: 5430, column: 21, scope: !10575)
!10596 = !DILocation(line: 5430, column: 31, scope: !10575)
!10597 = !DILocalVariable(name: "nu", scope: !10575, file: !3, line: 5431, type: !3163)
!10598 = !DILocation(line: 5431, column: 8, scope: !10575)
!10599 = !DILocalVariable(name: "bezt", scope: !10575, file: !3, line: 5432, type: !3104)
!10600 = !DILocation(line: 5432, column: 13, scope: !10575)
!10601 = !DILocalVariable(name: "bp", scope: !10575, file: !3, line: 5433, type: !3093)
!10602 = !DILocation(line: 5433, column: 10, scope: !10575)
!10603 = !DILocalVariable(name: "a", scope: !10575, file: !3, line: 5434, type: !22)
!10604 = !DILocation(line: 5434, column: 6, scope: !10575)
!10605 = !DILocation(line: 5436, column: 12, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 5436, column: 2)
!10607 = !DILocation(line: 5436, column: 19, scope: !10606)
!10608 = !DILocation(line: 5436, column: 10, scope: !10606)
!10609 = !DILocation(line: 5436, column: 7, scope: !10606)
!10610 = !DILocation(line: 5436, column: 26, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10606, file: !3, line: 5436, column: 2)
!10612 = !DILocation(line: 5436, column: 2, scope: !10606)
!10613 = !DILocation(line: 5437, column: 7, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10615, file: !3, line: 5437, column: 7)
!10615 = distinct !DILexicalBlock(scope: !10611, file: !3, line: 5436, column: 45)
!10616 = !DILocation(line: 5437, column: 11, scope: !10614)
!10617 = !DILocation(line: 5437, column: 16, scope: !10614)
!10618 = !DILocation(line: 5437, column: 7, scope: !10615)
!10619 = !DILocation(line: 5438, column: 11, scope: !10620)
!10620 = distinct !DILexicalBlock(scope: !10614, file: !3, line: 5437, column: 30)
!10621 = !DILocation(line: 5438, column: 15, scope: !10620)
!10622 = !DILocation(line: 5438, column: 9, scope: !10620)
!10623 = !DILocation(line: 5439, column: 8, scope: !10620)
!10624 = !DILocation(line: 5439, column: 12, scope: !10620)
!10625 = !DILocation(line: 5439, column: 6, scope: !10620)
!10626 = !DILocation(line: 5440, column: 4, scope: !10620)
!10627 = !DILocation(line: 5440, column: 12, scope: !10620)
!10628 = !DILocation(line: 5441, column: 10, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10630, file: !3, line: 5441, column: 9)
!10630 = distinct !DILexicalBlock(scope: !10620, file: !3, line: 5440, column: 16)
!10631 = !DILocation(line: 5441, column: 16, scope: !10629)
!10632 = !DILocation(line: 5441, column: 19, scope: !10629)
!10633 = !DILocation(line: 5441, column: 29, scope: !10629)
!10634 = !DILocation(line: 5441, column: 33, scope: !10629)
!10635 = !DILocation(line: 5441, column: 39, scope: !10629)
!10636 = !DILocation(line: 5441, column: 42, scope: !10629)
!10637 = !DILocation(line: 5441, column: 52, scope: !10629)
!10638 = !DILocation(line: 5441, column: 56, scope: !10629)
!10639 = !DILocation(line: 5441, column: 62, scope: !10629)
!10640 = !DILocation(line: 5441, column: 65, scope: !10629)
!10641 = !DILocation(line: 5441, column: 9, scope: !10630)
!10642 = !DILocation(line: 5442, column: 10, scope: !10643)
!10643 = distinct !DILexicalBlock(scope: !10629, file: !3, line: 5441, column: 76)
!10644 = !DILocation(line: 5442, column: 14, scope: !10643)
!10645 = !DILocation(line: 5442, column: 8, scope: !10643)
!10646 = !DILocation(line: 5443, column: 13, scope: !10643)
!10647 = !DILocation(line: 5443, column: 17, scope: !10643)
!10648 = !DILocation(line: 5443, column: 11, scope: !10643)
!10649 = !DILocation(line: 5444, column: 6, scope: !10643)
!10650 = !DILocation(line: 5444, column: 14, scope: !10643)
!10651 = !DILocation(line: 5445, column: 24, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10643, file: !3, line: 5444, column: 18)
!10653 = !DILocation(line: 5445, column: 7, scope: !10652)
!10654 = !DILocation(line: 5446, column: 11, scope: !10652)
!10655 = distinct !{!10655, !10649, !10656}
!10656 = !DILocation(line: 5447, column: 6, scope: !10643)
!10657 = !DILocation(line: 5448, column: 6, scope: !10643)
!10658 = !DILocation(line: 5450, column: 9, scope: !10630)
!10659 = distinct !{!10659, !10626, !10660}
!10660 = !DILocation(line: 5451, column: 4, scope: !10620)
!10661 = !DILocation(line: 5452, column: 3, scope: !10620)
!10662 = !DILocation(line: 5454, column: 9, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10614, file: !3, line: 5453, column: 8)
!10664 = !DILocation(line: 5454, column: 13, scope: !10663)
!10665 = !DILocation(line: 5454, column: 7, scope: !10663)
!10666 = !DILocation(line: 5455, column: 8, scope: !10663)
!10667 = !DILocation(line: 5455, column: 12, scope: !10663)
!10668 = !DILocation(line: 5455, column: 20, scope: !10663)
!10669 = !DILocation(line: 5455, column: 24, scope: !10663)
!10670 = !DILocation(line: 5455, column: 18, scope: !10663)
!10671 = !DILocation(line: 5455, column: 6, scope: !10663)
!10672 = !DILocation(line: 5456, column: 4, scope: !10663)
!10673 = !DILocation(line: 5456, column: 12, scope: !10663)
!10674 = !DILocation(line: 5457, column: 9, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !10676, file: !3, line: 5457, column: 9)
!10676 = distinct !DILexicalBlock(scope: !10663, file: !3, line: 5456, column: 16)
!10677 = !DILocation(line: 5457, column: 13, scope: !10675)
!10678 = !DILocation(line: 5457, column: 16, scope: !10675)
!10679 = !DILocation(line: 5457, column: 9, scope: !10676)
!10680 = !DILocation(line: 5458, column: 10, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10675, file: !3, line: 5457, column: 26)
!10682 = !DILocation(line: 5458, column: 14, scope: !10681)
!10683 = !DILocation(line: 5458, column: 22, scope: !10681)
!10684 = !DILocation(line: 5458, column: 26, scope: !10681)
!10685 = !DILocation(line: 5458, column: 20, scope: !10681)
!10686 = !DILocation(line: 5458, column: 8, scope: !10681)
!10687 = !DILocation(line: 5459, column: 11, scope: !10681)
!10688 = !DILocation(line: 5459, column: 15, scope: !10681)
!10689 = !DILocation(line: 5459, column: 9, scope: !10681)
!10690 = !DILocation(line: 5460, column: 6, scope: !10681)
!10691 = !DILocation(line: 5460, column: 14, scope: !10681)
!10692 = !DILocation(line: 5461, column: 21, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 5460, column: 18)
!10694 = !DILocation(line: 5461, column: 7, scope: !10693)
!10695 = !DILocation(line: 5462, column: 9, scope: !10693)
!10696 = distinct !{!10696, !10690, !10697}
!10697 = !DILocation(line: 5463, column: 6, scope: !10681)
!10698 = !DILocation(line: 5464, column: 6, scope: !10681)
!10699 = !DILocation(line: 5466, column: 7, scope: !10676)
!10700 = distinct !{!10700, !10672, !10701}
!10701 = !DILocation(line: 5467, column: 4, scope: !10663)
!10702 = !DILocation(line: 5469, column: 2, scope: !10615)
!10703 = !DILocation(line: 5436, column: 35, scope: !10611)
!10704 = !DILocation(line: 5436, column: 39, scope: !10611)
!10705 = !DILocation(line: 5436, column: 33, scope: !10611)
!10706 = !DILocation(line: 5436, column: 2, scope: !10611)
!10707 = distinct !{!10707, !10612, !10708}
!10708 = !DILocation(line: 5469, column: 2, scope: !10606)
!10709 = !DILocation(line: 5471, column: 24, scope: !10575)
!10710 = !DILocation(line: 5471, column: 48, scope: !10575)
!10711 = !DILocation(line: 5471, column: 56, scope: !10575)
!10712 = !DILocation(line: 5471, column: 2, scope: !10575)
!10713 = !DILocation(line: 5473, column: 2, scope: !10575)
!10714 = distinct !DISubprogram(name: "select_linked_invoke", scope: !3, file: !3, line: 5476, type: !9900, scopeLine: 5477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!10715 = !DILocalVariable(name: "C", arg: 1, scope: !10714, file: !3, line: 5476, type: !3226)
!10716 = !DILocation(line: 5476, column: 43, scope: !10714)
!10717 = !DILocalVariable(name: "op", arg: 2, scope: !10714, file: !3, line: 5476, type: !3228)
!10718 = !DILocation(line: 5476, column: 58, scope: !10714)
!10719 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !10714, file: !3, line: 5476, type: !9902)
!10720 = !DILocation(line: 5476, column: 77, scope: !10714)
!10721 = !DILocation(line: 5478, column: 28, scope: !10714)
!10722 = !DILocation(line: 5478, column: 31, scope: !10714)
!10723 = !DILocation(line: 5478, column: 9, scope: !10714)
!10724 = !DILocation(line: 5478, column: 2, scope: !10714)
!10725 = distinct !DISubprogram(name: "CURVE_OT_select_linked_pick", scope: !3, file: !3, line: 5542, type: !4, scopeLine: 5543, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!10726 = !DILocalVariable(name: "ot", arg: 1, scope: !10725, file: !3, line: 5542, type: !6)
!10727 = !DILocation(line: 5542, column: 50, scope: !10725)
!10728 = !DILocation(line: 5545, column: 2, scope: !10725)
!10729 = !DILocation(line: 5545, column: 6, scope: !10725)
!10730 = !DILocation(line: 5545, column: 11, scope: !10725)
!10731 = !DILocation(line: 5546, column: 2, scope: !10725)
!10732 = !DILocation(line: 5546, column: 6, scope: !10725)
!10733 = !DILocation(line: 5546, column: 13, scope: !10725)
!10734 = !DILocation(line: 5547, column: 2, scope: !10725)
!10735 = !DILocation(line: 5547, column: 6, scope: !10725)
!10736 = !DILocation(line: 5547, column: 18, scope: !10725)
!10737 = !DILocation(line: 5550, column: 2, scope: !10725)
!10738 = !DILocation(line: 5550, column: 6, scope: !10725)
!10739 = !DILocation(line: 5550, column: 13, scope: !10725)
!10740 = !DILocation(line: 5551, column: 2, scope: !10725)
!10741 = !DILocation(line: 5551, column: 6, scope: !10725)
!10742 = !DILocation(line: 5551, column: 11, scope: !10725)
!10743 = !DILocation(line: 5554, column: 2, scope: !10725)
!10744 = !DILocation(line: 5554, column: 6, scope: !10725)
!10745 = !DILocation(line: 5554, column: 11, scope: !10725)
!10746 = !DILocation(line: 5557, column: 18, scope: !10725)
!10747 = !DILocation(line: 5557, column: 22, scope: !10725)
!10748 = !DILocation(line: 5557, column: 2, scope: !10725)
!10749 = !DILocation(line: 5558, column: 1, scope: !10725)
!10750 = distinct !DISubprogram(name: "select_linked_pick_invoke", scope: !3, file: !3, line: 5502, type: !9900, scopeLine: 5503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!10751 = !DILocalVariable(name: "C", arg: 1, scope: !10750, file: !3, line: 5502, type: !3226)
!10752 = !DILocation(line: 5502, column: 48, scope: !10750)
!10753 = !DILocalVariable(name: "op", arg: 2, scope: !10750, file: !3, line: 5502, type: !3228)
!10754 = !DILocation(line: 5502, column: 63, scope: !10750)
!10755 = !DILocalVariable(name: "event", arg: 3, scope: !10750, file: !3, line: 5502, type: !9902)
!10756 = !DILocation(line: 5502, column: 82, scope: !10750)
!10757 = !DILocalVariable(name: "obedit", scope: !10750, file: !3, line: 5504, type: !3242)
!10758 = !DILocation(line: 5504, column: 10, scope: !10750)
!10759 = !DILocation(line: 5504, column: 40, scope: !10750)
!10760 = !DILocation(line: 5504, column: 19, scope: !10750)
!10761 = !DILocalVariable(name: "vc", scope: !10750, file: !3, line: 5505, type: !8880)
!10762 = !DILocation(line: 5505, column: 14, scope: !10750)
!10763 = !DILocalVariable(name: "nu", scope: !10750, file: !3, line: 5506, type: !3163)
!10764 = !DILocation(line: 5506, column: 8, scope: !10750)
!10765 = !DILocalVariable(name: "bezt", scope: !10750, file: !3, line: 5507, type: !3104)
!10766 = !DILocation(line: 5507, column: 13, scope: !10750)
!10767 = !DILocalVariable(name: "bp", scope: !10750, file: !3, line: 5508, type: !3093)
!10768 = !DILocation(line: 5508, column: 10, scope: !10750)
!10769 = !DILocalVariable(name: "a", scope: !10750, file: !3, line: 5509, type: !22)
!10770 = !DILocation(line: 5509, column: 6, scope: !10750)
!10771 = !DILocalVariable(name: "select", scope: !10750, file: !3, line: 5510, type: !7655)
!10772 = !DILocation(line: 5510, column: 13, scope: !10750)
!10773 = !DILocation(line: 5510, column: 39, scope: !10750)
!10774 = !DILocation(line: 5510, column: 43, scope: !10750)
!10775 = !DILocation(line: 5510, column: 23, scope: !10750)
!10776 = !DILocation(line: 5510, column: 22, scope: !10750)
!10777 = !DILocation(line: 5512, column: 31, scope: !10750)
!10778 = !DILocation(line: 5512, column: 2, scope: !10750)
!10779 = !DILocation(line: 5513, column: 25, scope: !10750)
!10780 = !DILocation(line: 5513, column: 2, scope: !10750)
!10781 = !DILocation(line: 5515, column: 30, scope: !10750)
!10782 = !DILocation(line: 5515, column: 37, scope: !10750)
!10783 = !DILocation(line: 5515, column: 2, scope: !10750)
!10784 = !DILocation(line: 5517, column: 6, scope: !10785)
!10785 = distinct !DILexicalBlock(scope: !10750, file: !3, line: 5517, column: 6)
!10786 = !DILocation(line: 5517, column: 6, scope: !10750)
!10787 = !DILocation(line: 5518, column: 7, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10785, file: !3, line: 5517, column: 12)
!10789 = !DILocation(line: 5518, column: 11, scope: !10788)
!10790 = !DILocation(line: 5518, column: 5, scope: !10788)
!10791 = !DILocation(line: 5519, column: 10, scope: !10788)
!10792 = !DILocation(line: 5519, column: 14, scope: !10788)
!10793 = !DILocation(line: 5519, column: 8, scope: !10788)
!10794 = !DILocation(line: 5520, column: 3, scope: !10788)
!10795 = !DILocation(line: 5520, column: 11, scope: !10788)
!10796 = !DILocation(line: 5521, column: 21, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10788, file: !3, line: 5520, column: 15)
!10798 = !DILocation(line: 5521, column: 27, scope: !10797)
!10799 = !DILocation(line: 5521, column: 4, scope: !10797)
!10800 = !DILocation(line: 5522, column: 8, scope: !10797)
!10801 = distinct !{!10801, !10794, !10802}
!10802 = !DILocation(line: 5523, column: 3, scope: !10788)
!10803 = !DILocation(line: 5524, column: 2, scope: !10788)
!10804 = !DILocation(line: 5525, column: 11, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10785, file: !3, line: 5525, column: 11)
!10806 = !DILocation(line: 5525, column: 11, scope: !10785)
!10807 = !DILocation(line: 5526, column: 7, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10805, file: !3, line: 5525, column: 15)
!10809 = !DILocation(line: 5526, column: 11, scope: !10808)
!10810 = !DILocation(line: 5526, column: 19, scope: !10808)
!10811 = !DILocation(line: 5526, column: 23, scope: !10808)
!10812 = !DILocation(line: 5526, column: 17, scope: !10808)
!10813 = !DILocation(line: 5526, column: 5, scope: !10808)
!10814 = !DILocation(line: 5527, column: 8, scope: !10808)
!10815 = !DILocation(line: 5527, column: 12, scope: !10808)
!10816 = !DILocation(line: 5527, column: 6, scope: !10808)
!10817 = !DILocation(line: 5528, column: 3, scope: !10808)
!10818 = !DILocation(line: 5528, column: 11, scope: !10808)
!10819 = !DILocation(line: 5529, column: 18, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10808, file: !3, line: 5528, column: 15)
!10821 = !DILocation(line: 5529, column: 22, scope: !10820)
!10822 = !DILocation(line: 5529, column: 4, scope: !10820)
!10823 = !DILocation(line: 5530, column: 6, scope: !10820)
!10824 = distinct !{!10824, !10817, !10825}
!10825 = !DILocation(line: 5531, column: 3, scope: !10808)
!10826 = !DILocation(line: 5532, column: 2, scope: !10808)
!10827 = !DILocation(line: 5534, column: 24, scope: !10750)
!10828 = !DILocation(line: 5534, column: 48, scope: !10750)
!10829 = !DILocation(line: 5534, column: 56, scope: !10750)
!10830 = !DILocation(line: 5534, column: 2, scope: !10750)
!10831 = !DILocation(line: 5535, column: 7, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10750, file: !3, line: 5535, column: 6)
!10833 = !DILocation(line: 5535, column: 6, scope: !10750)
!10834 = !DILocation(line: 5536, column: 39, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10832, file: !3, line: 5535, column: 15)
!10836 = !DILocation(line: 5536, column: 47, scope: !10835)
!10837 = !DILocation(line: 5536, column: 3, scope: !10835)
!10838 = !DILocation(line: 5537, column: 2, scope: !10835)
!10839 = !DILocation(line: 5539, column: 2, scope: !10750)
!10840 = distinct !DISubprogram(name: "CURVE_OT_select_row", scope: !3, file: !3, line: 5601, type: !4, scopeLine: 5602, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!10841 = !DILocalVariable(name: "ot", arg: 1, scope: !10840, file: !3, line: 5601, type: !6)
!10842 = !DILocation(line: 5601, column: 42, scope: !10840)
!10843 = !DILocation(line: 5604, column: 2, scope: !10840)
!10844 = !DILocation(line: 5604, column: 6, scope: !10840)
!10845 = !DILocation(line: 5604, column: 11, scope: !10840)
!10846 = !DILocation(line: 5605, column: 2, scope: !10840)
!10847 = !DILocation(line: 5605, column: 6, scope: !10840)
!10848 = !DILocation(line: 5605, column: 13, scope: !10840)
!10849 = !DILocation(line: 5606, column: 2, scope: !10840)
!10850 = !DILocation(line: 5606, column: 6, scope: !10840)
!10851 = !DILocation(line: 5606, column: 18, scope: !10840)
!10852 = !DILocation(line: 5609, column: 2, scope: !10840)
!10853 = !DILocation(line: 5609, column: 6, scope: !10840)
!10854 = !DILocation(line: 5609, column: 11, scope: !10840)
!10855 = !DILocation(line: 5610, column: 2, scope: !10840)
!10856 = !DILocation(line: 5610, column: 6, scope: !10840)
!10857 = !DILocation(line: 5610, column: 11, scope: !10840)
!10858 = !DILocation(line: 5613, column: 2, scope: !10840)
!10859 = !DILocation(line: 5613, column: 6, scope: !10840)
!10860 = !DILocation(line: 5613, column: 11, scope: !10840)
!10861 = !DILocation(line: 5614, column: 1, scope: !10840)
!10862 = !DILocalVariable(name: "C", arg: 1, scope: !3223, file: !3, line: 5562, type: !3226)
!10863 = !DILocation(line: 5562, column: 38, scope: !3223)
!10864 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !3223, file: !3, line: 5562, type: !3228)
!10865 = !DILocation(line: 5562, column: 53, scope: !3223)
!10866 = !DILocalVariable(name: "obedit", scope: !3223, file: !3, line: 5564, type: !3242)
!10867 = !DILocation(line: 5564, column: 10, scope: !3223)
!10868 = !DILocation(line: 5564, column: 40, scope: !3223)
!10869 = !DILocation(line: 5564, column: 19, scope: !3223)
!10870 = !DILocalVariable(name: "cu", scope: !3223, file: !3, line: 5565, type: !2953)
!10871 = !DILocation(line: 5565, column: 9, scope: !3223)
!10872 = !DILocation(line: 5565, column: 14, scope: !3223)
!10873 = !DILocation(line: 5565, column: 22, scope: !3223)
!10874 = !DILocalVariable(name: "editnurb", scope: !3223, file: !3, line: 5566, type: !486)
!10875 = !DILocation(line: 5566, column: 12, scope: !3223)
!10876 = !DILocation(line: 5566, column: 44, scope: !3223)
!10877 = !DILocation(line: 5566, column: 23, scope: !3223)
!10878 = !DILocalVariable(name: "nu", scope: !3223, file: !3, line: 5569, type: !3163)
!10879 = !DILocation(line: 5569, column: 8, scope: !3223)
!10880 = !DILocalVariable(name: "bp", scope: !3223, file: !3, line: 5570, type: !3093)
!10881 = !DILocation(line: 5570, column: 10, scope: !3223)
!10882 = !DILocalVariable(name: "u", scope: !3223, file: !3, line: 5571, type: !22)
!10883 = !DILocation(line: 5571, column: 6, scope: !3223)
!10884 = !DILocalVariable(name: "v", scope: !3223, file: !3, line: 5571, type: !22)
!10885 = !DILocation(line: 5571, column: 13, scope: !3223)
!10886 = !DILocalVariable(name: "a", scope: !3223, file: !3, line: 5571, type: !22)
!10887 = !DILocation(line: 5571, column: 20, scope: !3223)
!10888 = !DILocalVariable(name: "b", scope: !3223, file: !3, line: 5571, type: !22)
!10889 = !DILocation(line: 5571, column: 23, scope: !3223)
!10890 = !DILocation(line: 5573, column: 38, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !3223, file: !3, line: 5573, column: 6)
!10892 = !DILocation(line: 5573, column: 47, scope: !10891)
!10893 = !DILocation(line: 5573, column: 7, scope: !10891)
!10894 = !DILocation(line: 5573, column: 6, scope: !3223)
!10895 = !DILocation(line: 5574, column: 3, scope: !10891)
!10896 = !DILocation(line: 5576, column: 6, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !3223, file: !3, line: 5576, column: 6)
!10898 = !DILocation(line: 5576, column: 14, scope: !10897)
!10899 = !DILocation(line: 5576, column: 11, scope: !10897)
!10900 = !DILocation(line: 5576, column: 6, scope: !3223)
!10901 = !DILocation(line: 5577, column: 19, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10897, file: !3, line: 5576, column: 18)
!10903 = !DILocation(line: 5577, column: 17, scope: !10902)
!10904 = !DILocation(line: 5577, column: 13, scope: !10902)
!10905 = !DILocation(line: 5578, column: 25, scope: !10902)
!10906 = !DILocation(line: 5578, column: 3, scope: !10902)
!10907 = !DILocation(line: 5579, column: 2, scope: !10902)
!10908 = !DILocation(line: 5580, column: 9, scope: !3223)
!10909 = !DILocation(line: 5580, column: 7, scope: !3223)
!10910 = !DILocation(line: 5582, column: 6, scope: !3223)
!10911 = !DILocation(line: 5582, column: 10, scope: !3223)
!10912 = !DILocation(line: 5582, column: 20, scope: !3223)
!10913 = !DILocation(line: 5582, column: 24, scope: !3223)
!10914 = !DILocation(line: 5582, column: 18, scope: !3223)
!10915 = !DILocation(line: 5582, column: 4, scope: !3223)
!10916 = !DILocation(line: 5583, column: 6, scope: !3223)
!10917 = !DILocation(line: 5583, column: 10, scope: !3223)
!10918 = !DILocation(line: 5583, column: 20, scope: !3223)
!10919 = !DILocation(line: 5583, column: 24, scope: !3223)
!10920 = !DILocation(line: 5583, column: 18, scope: !3223)
!10921 = !DILocation(line: 5583, column: 4, scope: !3223)
!10922 = !DILocation(line: 5584, column: 7, scope: !3223)
!10923 = !DILocation(line: 5584, column: 11, scope: !3223)
!10924 = !DILocation(line: 5584, column: 5, scope: !3223)
!10925 = !DILocation(line: 5585, column: 9, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !3223, file: !3, line: 5585, column: 2)
!10927 = !DILocation(line: 5585, column: 7, scope: !10926)
!10928 = !DILocation(line: 5585, column: 14, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10926, file: !3, line: 5585, column: 2)
!10930 = !DILocation(line: 5585, column: 18, scope: !10929)
!10931 = !DILocation(line: 5585, column: 22, scope: !10929)
!10932 = !DILocation(line: 5585, column: 16, scope: !10929)
!10933 = !DILocation(line: 5585, column: 2, scope: !10926)
!10934 = !DILocation(line: 5586, column: 10, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10936, file: !3, line: 5586, column: 3)
!10936 = distinct !DILexicalBlock(scope: !10929, file: !3, line: 5585, column: 34)
!10937 = !DILocation(line: 5586, column: 8, scope: !10935)
!10938 = !DILocation(line: 5586, column: 15, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 5586, column: 3)
!10940 = !DILocation(line: 5586, column: 19, scope: !10939)
!10941 = !DILocation(line: 5586, column: 23, scope: !10939)
!10942 = !DILocation(line: 5586, column: 17, scope: !10939)
!10943 = !DILocation(line: 5586, column: 3, scope: !10935)
!10944 = !DILocation(line: 5587, column: 8, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10946, file: !3, line: 5587, column: 8)
!10946 = distinct !DILexicalBlock(scope: !10939, file: !3, line: 5586, column: 41)
!10947 = !DILocation(line: 5587, column: 8, scope: !10946)
!10948 = !DILocation(line: 5588, column: 9, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10950, file: !3, line: 5588, column: 9)
!10950 = distinct !DILexicalBlock(scope: !10945, file: !3, line: 5587, column: 19)
!10951 = !DILocation(line: 5588, column: 14, scope: !10949)
!10952 = !DILocation(line: 5588, column: 11, scope: !10949)
!10953 = !DILocation(line: 5588, column: 9, scope: !10950)
!10954 = !DILocation(line: 5588, column: 31, scope: !10949)
!10955 = !DILocation(line: 5588, column: 17, scope: !10949)
!10956 = !DILocation(line: 5589, column: 4, scope: !10950)
!10957 = !DILocation(line: 5591, column: 9, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10959, file: !3, line: 5591, column: 9)
!10959 = distinct !DILexicalBlock(scope: !10945, file: !3, line: 5590, column: 9)
!10960 = !DILocation(line: 5591, column: 14, scope: !10958)
!10961 = !DILocation(line: 5591, column: 11, scope: !10958)
!10962 = !DILocation(line: 5591, column: 9, scope: !10959)
!10963 = !DILocation(line: 5591, column: 31, scope: !10958)
!10964 = !DILocation(line: 5591, column: 17, scope: !10958)
!10965 = !DILocation(line: 5593, column: 3, scope: !10946)
!10966 = !DILocation(line: 5586, column: 31, scope: !10939)
!10967 = !DILocation(line: 5586, column: 37, scope: !10939)
!10968 = !DILocation(line: 5586, column: 3, scope: !10939)
!10969 = distinct !{!10969, !10943, !10970}
!10970 = !DILocation(line: 5593, column: 3, scope: !10935)
!10971 = !DILocation(line: 5594, column: 2, scope: !10936)
!10972 = !DILocation(line: 5585, column: 30, scope: !10929)
!10973 = !DILocation(line: 5585, column: 2, scope: !10929)
!10974 = distinct !{!10974, !10933, !10975}
!10975 = !DILocation(line: 5594, column: 2, scope: !10926)
!10976 = !DILocation(line: 5596, column: 24, scope: !3223)
!10977 = !DILocation(line: 5596, column: 48, scope: !3223)
!10978 = !DILocation(line: 5596, column: 56, scope: !3223)
!10979 = !DILocation(line: 5596, column: 2, scope: !3223)
!10980 = !DILocation(line: 5598, column: 2, scope: !3223)
!10981 = !DILocation(line: 5599, column: 1, scope: !3223)
!10982 = distinct !DISubprogram(name: "CURVE_OT_select_next", scope: !3, file: !3, line: 5629, type: !4, scopeLine: 5630, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!10983 = !DILocalVariable(name: "ot", arg: 1, scope: !10982, file: !3, line: 5629, type: !6)
!10984 = !DILocation(line: 5629, column: 43, scope: !10982)
!10985 = !DILocation(line: 5632, column: 2, scope: !10982)
!10986 = !DILocation(line: 5632, column: 6, scope: !10982)
!10987 = !DILocation(line: 5632, column: 11, scope: !10982)
!10988 = !DILocation(line: 5633, column: 2, scope: !10982)
!10989 = !DILocation(line: 5633, column: 6, scope: !10982)
!10990 = !DILocation(line: 5633, column: 13, scope: !10982)
!10991 = !DILocation(line: 5634, column: 2, scope: !10982)
!10992 = !DILocation(line: 5634, column: 6, scope: !10982)
!10993 = !DILocation(line: 5634, column: 18, scope: !10982)
!10994 = !DILocation(line: 5637, column: 2, scope: !10982)
!10995 = !DILocation(line: 5637, column: 6, scope: !10982)
!10996 = !DILocation(line: 5637, column: 11, scope: !10982)
!10997 = !DILocation(line: 5638, column: 2, scope: !10982)
!10998 = !DILocation(line: 5638, column: 6, scope: !10982)
!10999 = !DILocation(line: 5638, column: 11, scope: !10982)
!11000 = !DILocation(line: 5641, column: 2, scope: !10982)
!11001 = !DILocation(line: 5641, column: 6, scope: !10982)
!11002 = !DILocation(line: 5641, column: 11, scope: !10982)
!11003 = !DILocation(line: 5642, column: 1, scope: !10982)
!11004 = distinct !DISubprogram(name: "select_next_exec", scope: !3, file: !3, line: 5618, type: !3224, scopeLine: 5619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!11005 = !DILocalVariable(name: "C", arg: 1, scope: !11004, file: !3, line: 5618, type: !3226)
!11006 = !DILocation(line: 5618, column: 39, scope: !11004)
!11007 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !11004, file: !3, line: 5618, type: !3228)
!11008 = !DILocation(line: 5618, column: 54, scope: !11004)
!11009 = !DILocalVariable(name: "obedit", scope: !11004, file: !3, line: 5620, type: !3242)
!11010 = !DILocation(line: 5620, column: 10, scope: !11004)
!11011 = !DILocation(line: 5620, column: 40, scope: !11004)
!11012 = !DILocation(line: 5620, column: 19, scope: !11004)
!11013 = !DILocalVariable(name: "editnurb", scope: !11004, file: !3, line: 5621, type: !486)
!11014 = !DILocation(line: 5621, column: 12, scope: !11004)
!11015 = !DILocation(line: 5621, column: 44, scope: !11004)
!11016 = !DILocation(line: 5621, column: 23, scope: !11004)
!11017 = !DILocation(line: 5623, column: 21, scope: !11004)
!11018 = !DILocation(line: 5623, column: 2, scope: !11004)
!11019 = !DILocation(line: 5624, column: 24, scope: !11004)
!11020 = !DILocation(line: 5624, column: 48, scope: !11004)
!11021 = !DILocation(line: 5624, column: 56, scope: !11004)
!11022 = !DILocation(line: 5624, column: 2, scope: !11004)
!11023 = !DILocation(line: 5626, column: 2, scope: !11004)
!11024 = distinct !DISubprogram(name: "CURVE_OT_select_previous", scope: !3, file: !3, line: 5657, type: !4, scopeLine: 5658, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!11025 = !DILocalVariable(name: "ot", arg: 1, scope: !11024, file: !3, line: 5657, type: !6)
!11026 = !DILocation(line: 5657, column: 47, scope: !11024)
!11027 = !DILocation(line: 5660, column: 2, scope: !11024)
!11028 = !DILocation(line: 5660, column: 6, scope: !11024)
!11029 = !DILocation(line: 5660, column: 11, scope: !11024)
!11030 = !DILocation(line: 5661, column: 2, scope: !11024)
!11031 = !DILocation(line: 5661, column: 6, scope: !11024)
!11032 = !DILocation(line: 5661, column: 13, scope: !11024)
!11033 = !DILocation(line: 5662, column: 2, scope: !11024)
!11034 = !DILocation(line: 5662, column: 6, scope: !11024)
!11035 = !DILocation(line: 5662, column: 18, scope: !11024)
!11036 = !DILocation(line: 5665, column: 2, scope: !11024)
!11037 = !DILocation(line: 5665, column: 6, scope: !11024)
!11038 = !DILocation(line: 5665, column: 11, scope: !11024)
!11039 = !DILocation(line: 5666, column: 2, scope: !11024)
!11040 = !DILocation(line: 5666, column: 6, scope: !11024)
!11041 = !DILocation(line: 5666, column: 11, scope: !11024)
!11042 = !DILocation(line: 5669, column: 2, scope: !11024)
!11043 = !DILocation(line: 5669, column: 6, scope: !11024)
!11044 = !DILocation(line: 5669, column: 11, scope: !11024)
!11045 = !DILocation(line: 5670, column: 1, scope: !11024)
!11046 = distinct !DISubprogram(name: "select_previous_exec", scope: !3, file: !3, line: 5646, type: !3224, scopeLine: 5647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!11047 = !DILocalVariable(name: "C", arg: 1, scope: !11046, file: !3, line: 5646, type: !3226)
!11048 = !DILocation(line: 5646, column: 43, scope: !11046)
!11049 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !11046, file: !3, line: 5646, type: !3228)
!11050 = !DILocation(line: 5646, column: 58, scope: !11046)
!11051 = !DILocalVariable(name: "obedit", scope: !11046, file: !3, line: 5648, type: !3242)
!11052 = !DILocation(line: 5648, column: 10, scope: !11046)
!11053 = !DILocation(line: 5648, column: 40, scope: !11046)
!11054 = !DILocation(line: 5648, column: 19, scope: !11046)
!11055 = !DILocalVariable(name: "editnurb", scope: !11046, file: !3, line: 5649, type: !486)
!11056 = !DILocation(line: 5649, column: 12, scope: !11046)
!11057 = !DILocation(line: 5649, column: 44, scope: !11046)
!11058 = !DILocation(line: 5649, column: 23, scope: !11046)
!11059 = !DILocation(line: 5651, column: 21, scope: !11046)
!11060 = !DILocation(line: 5651, column: 2, scope: !11046)
!11061 = !DILocation(line: 5652, column: 24, scope: !11046)
!11062 = !DILocation(line: 5652, column: 48, scope: !11046)
!11063 = !DILocation(line: 5652, column: 56, scope: !11046)
!11064 = !DILocation(line: 5652, column: 2, scope: !11046)
!11065 = !DILocation(line: 5654, column: 2, scope: !11046)
!11066 = distinct !DISubprogram(name: "CURVE_OT_select_more", scope: !3, file: !3, line: 5745, type: !4, scopeLine: 5746, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!11067 = !DILocalVariable(name: "ot", arg: 1, scope: !11066, file: !3, line: 5745, type: !6)
!11068 = !DILocation(line: 5745, column: 43, scope: !11066)
!11069 = !DILocation(line: 5748, column: 2, scope: !11066)
!11070 = !DILocation(line: 5748, column: 6, scope: !11066)
!11071 = !DILocation(line: 5748, column: 11, scope: !11066)
!11072 = !DILocation(line: 5749, column: 2, scope: !11066)
!11073 = !DILocation(line: 5749, column: 6, scope: !11066)
!11074 = !DILocation(line: 5749, column: 13, scope: !11066)
!11075 = !DILocation(line: 5750, column: 2, scope: !11066)
!11076 = !DILocation(line: 5750, column: 6, scope: !11066)
!11077 = !DILocation(line: 5750, column: 18, scope: !11066)
!11078 = !DILocation(line: 5753, column: 2, scope: !11066)
!11079 = !DILocation(line: 5753, column: 6, scope: !11066)
!11080 = !DILocation(line: 5753, column: 11, scope: !11066)
!11081 = !DILocation(line: 5754, column: 2, scope: !11066)
!11082 = !DILocation(line: 5754, column: 6, scope: !11066)
!11083 = !DILocation(line: 5754, column: 11, scope: !11066)
!11084 = !DILocation(line: 5757, column: 2, scope: !11066)
!11085 = !DILocation(line: 5757, column: 6, scope: !11066)
!11086 = !DILocation(line: 5757, column: 11, scope: !11066)
!11087 = !DILocation(line: 5758, column: 1, scope: !11066)
!11088 = distinct !DISubprogram(name: "select_more_exec", scope: !3, file: !3, line: 5674, type: !3224, scopeLine: 5675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!11089 = !DILocalVariable(name: "C", arg: 1, scope: !11088, file: !3, line: 5674, type: !3226)
!11090 = !DILocation(line: 5674, column: 39, scope: !11088)
!11091 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !11088, file: !3, line: 5674, type: !3228)
!11092 = !DILocation(line: 5674, column: 54, scope: !11088)
!11093 = !DILocalVariable(name: "obedit", scope: !11088, file: !3, line: 5676, type: !3242)
!11094 = !DILocation(line: 5676, column: 10, scope: !11088)
!11095 = !DILocation(line: 5676, column: 40, scope: !11088)
!11096 = !DILocation(line: 5676, column: 19, scope: !11088)
!11097 = !DILocalVariable(name: "editnurb", scope: !11088, file: !3, line: 5677, type: !486)
!11098 = !DILocation(line: 5677, column: 12, scope: !11088)
!11099 = !DILocation(line: 5677, column: 44, scope: !11088)
!11100 = !DILocation(line: 5677, column: 23, scope: !11088)
!11101 = !DILocalVariable(name: "nu", scope: !11088, file: !3, line: 5678, type: !3163)
!11102 = !DILocation(line: 5678, column: 8, scope: !11088)
!11103 = !DILocalVariable(name: "bp", scope: !11088, file: !3, line: 5679, type: !3093)
!11104 = !DILocation(line: 5679, column: 10, scope: !11088)
!11105 = !DILocalVariable(name: "tempbp", scope: !11088, file: !3, line: 5679, type: !3093)
!11106 = !DILocation(line: 5679, column: 15, scope: !11088)
!11107 = !DILocalVariable(name: "a", scope: !11088, file: !3, line: 5680, type: !22)
!11108 = !DILocation(line: 5680, column: 6, scope: !11088)
!11109 = !DILocalVariable(name: "sel", scope: !11088, file: !3, line: 5681, type: !48)
!11110 = !DILocation(line: 5681, column: 8, scope: !11088)
!11111 = !DILocation(line: 5687, column: 6, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11088, file: !3, line: 5687, column: 6)
!11113 = !DILocation(line: 5687, column: 14, scope: !11112)
!11114 = !DILocation(line: 5687, column: 19, scope: !11112)
!11115 = !DILocation(line: 5687, column: 6, scope: !11088)
!11116 = !DILocation(line: 5688, column: 13, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11118, file: !3, line: 5688, column: 3)
!11118 = distinct !DILexicalBlock(scope: !11112, file: !3, line: 5687, column: 31)
!11119 = !DILocation(line: 5688, column: 23, scope: !11117)
!11120 = !DILocation(line: 5688, column: 11, scope: !11117)
!11121 = !DILocation(line: 5688, column: 8, scope: !11117)
!11122 = !DILocation(line: 5688, column: 30, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11117, file: !3, line: 5688, column: 3)
!11124 = !DILocation(line: 5688, column: 3, scope: !11117)
!11125 = !DILocalVariable(name: "selbpoints", scope: !11126, file: !3, line: 5689, type: !3191)
!11126 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 5688, column: 49)
!11127 = !DILocation(line: 5689, column: 16, scope: !11126)
!11128 = !DILocation(line: 5690, column: 8, scope: !11126)
!11129 = !DILocation(line: 5690, column: 12, scope: !11126)
!11130 = !DILocation(line: 5690, column: 20, scope: !11126)
!11131 = !DILocation(line: 5690, column: 24, scope: !11126)
!11132 = !DILocation(line: 5690, column: 18, scope: !11126)
!11133 = !DILocation(line: 5690, column: 6, scope: !11126)
!11134 = !DILocation(line: 5691, column: 9, scope: !11126)
!11135 = !DILocation(line: 5691, column: 13, scope: !11126)
!11136 = !DILocation(line: 5691, column: 7, scope: !11126)
!11137 = !DILocation(line: 5692, column: 17, scope: !11126)
!11138 = !DILocation(line: 5692, column: 15, scope: !11126)
!11139 = !DILocation(line: 5693, column: 4, scope: !11126)
!11140 = !DILocation(line: 5693, column: 11, scope: !11126)
!11141 = !DILocation(line: 5693, column: 13, scope: !11126)
!11142 = !DILocation(line: 5694, column: 11, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11144, file: !3, line: 5694, column: 9)
!11144 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 5693, column: 18)
!11145 = !DILocation(line: 5694, column: 43, scope: !11143)
!11146 = !DILocation(line: 5694, column: 47, scope: !11143)
!11147 = !DILocation(line: 5694, column: 51, scope: !11143)
!11148 = !DILocation(line: 5694, column: 56, scope: !11143)
!11149 = !DILocation(line: 5694, column: 62, scope: !11143)
!11150 = !DILocation(line: 5694, column: 66, scope: !11143)
!11151 = !DILocation(line: 5694, column: 70, scope: !11143)
!11152 = !DILocation(line: 5694, column: 73, scope: !11143)
!11153 = !DILocation(line: 5694, column: 9, scope: !11144)
!11154 = !DILocation(line: 5696, column: 10, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !11156, file: !3, line: 5696, column: 10)
!11156 = distinct !DILexicalBlock(scope: !11143, file: !3, line: 5694, column: 84)
!11157 = !DILocation(line: 5696, column: 14, scope: !11155)
!11158 = !DILocation(line: 5696, column: 18, scope: !11155)
!11159 = !DILocation(line: 5696, column: 12, scope: !11155)
!11160 = !DILocation(line: 5696, column: 24, scope: !11155)
!11161 = !DILocation(line: 5696, column: 10, scope: !11156)
!11162 = !DILocation(line: 5697, column: 16, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11155, file: !3, line: 5696, column: 30)
!11164 = !DILocation(line: 5697, column: 19, scope: !11163)
!11165 = !DILocation(line: 5697, column: 14, scope: !11163)
!11166 = !DILocation(line: 5698, column: 13, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11163, file: !3, line: 5698, column: 11)
!11168 = !DILocation(line: 5698, column: 21, scope: !11167)
!11169 = !DILocation(line: 5698, column: 24, scope: !11167)
!11170 = !DILocation(line: 5698, column: 11, scope: !11163)
!11171 = !DILocation(line: 5698, column: 49, scope: !11167)
!11172 = !DILocation(line: 5698, column: 35, scope: !11167)
!11173 = !DILocation(line: 5699, column: 6, scope: !11163)
!11174 = !DILocation(line: 5702, column: 10, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11156, file: !3, line: 5702, column: 10)
!11176 = !DILocation(line: 5702, column: 14, scope: !11175)
!11177 = !DILocation(line: 5702, column: 18, scope: !11175)
!11178 = !DILocation(line: 5702, column: 12, scope: !11175)
!11179 = !DILocation(line: 5702, column: 24, scope: !11175)
!11180 = !DILocation(line: 5702, column: 10, scope: !11156)
!11181 = !DILocation(line: 5703, column: 11, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11175, file: !3, line: 5702, column: 29)
!11183 = !DILocation(line: 5704, column: 16, scope: !11182)
!11184 = !DILocation(line: 5704, column: 21, scope: !11182)
!11185 = !DILocation(line: 5704, column: 25, scope: !11182)
!11186 = !DILocation(line: 5704, column: 19, scope: !11182)
!11187 = !DILocation(line: 5704, column: 14, scope: !11182)
!11188 = !DILocation(line: 5705, column: 13, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 5705, column: 11)
!11190 = !DILocation(line: 5705, column: 21, scope: !11189)
!11191 = !DILocation(line: 5705, column: 24, scope: !11189)
!11192 = !DILocation(line: 5705, column: 11, scope: !11182)
!11193 = !DILocation(line: 5705, column: 55, scope: !11189)
!11194 = !DILocation(line: 5705, column: 41, scope: !11189)
!11195 = !DILocation(line: 5705, column: 39, scope: !11189)
!11196 = !DILocation(line: 5705, column: 35, scope: !11189)
!11197 = !DILocation(line: 5707, column: 11, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 5707, column: 11)
!11199 = !DILocation(line: 5707, column: 15, scope: !11198)
!11200 = !DILocation(line: 5707, column: 11, scope: !11182)
!11201 = !DILocation(line: 5707, column: 21, scope: !11198)
!11202 = !DILocation(line: 5708, column: 6, scope: !11182)
!11203 = !DILocation(line: 5711, column: 10, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11156, file: !3, line: 5711, column: 10)
!11205 = !DILocation(line: 5711, column: 14, scope: !11204)
!11206 = !DILocation(line: 5711, column: 18, scope: !11204)
!11207 = !DILocation(line: 5711, column: 12, scope: !11204)
!11208 = !DILocation(line: 5711, column: 26, scope: !11204)
!11209 = !DILocation(line: 5711, column: 30, scope: !11204)
!11210 = !DILocation(line: 5711, column: 38, scope: !11204)
!11211 = !DILocation(line: 5711, column: 42, scope: !11204)
!11212 = !DILocation(line: 5711, column: 36, scope: !11204)
!11213 = !DILocation(line: 5711, column: 24, scope: !11204)
!11214 = !DILocation(line: 5711, column: 10, scope: !11156)
!11215 = !DILocation(line: 5712, column: 16, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11204, file: !3, line: 5711, column: 49)
!11217 = !DILocation(line: 5712, column: 21, scope: !11216)
!11218 = !DILocation(line: 5712, column: 25, scope: !11216)
!11219 = !DILocation(line: 5712, column: 19, scope: !11216)
!11220 = !DILocation(line: 5712, column: 14, scope: !11216)
!11221 = !DILocation(line: 5713, column: 13, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !11216, file: !3, line: 5713, column: 11)
!11223 = !DILocation(line: 5713, column: 21, scope: !11222)
!11224 = !DILocation(line: 5713, column: 24, scope: !11222)
!11225 = !DILocation(line: 5713, column: 11, scope: !11216)
!11226 = !DILocation(line: 5713, column: 49, scope: !11222)
!11227 = !DILocation(line: 5713, column: 35, scope: !11222)
!11228 = !DILocation(line: 5714, column: 6, scope: !11216)
!11229 = !DILocation(line: 5717, column: 10, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11156, file: !3, line: 5717, column: 10)
!11231 = !DILocation(line: 5717, column: 14, scope: !11230)
!11232 = !DILocation(line: 5717, column: 18, scope: !11230)
!11233 = !DILocation(line: 5717, column: 12, scope: !11230)
!11234 = !DILocation(line: 5717, column: 24, scope: !11230)
!11235 = !DILocation(line: 5717, column: 10, scope: !11156)
!11236 = !DILocation(line: 5718, column: 11, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11230, file: !3, line: 5717, column: 30)
!11238 = !DILocation(line: 5719, column: 16, scope: !11237)
!11239 = !DILocation(line: 5719, column: 19, scope: !11237)
!11240 = !DILocation(line: 5719, column: 14, scope: !11237)
!11241 = !DILocation(line: 5720, column: 13, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11237, file: !3, line: 5720, column: 11)
!11243 = !DILocation(line: 5720, column: 21, scope: !11242)
!11244 = !DILocation(line: 5720, column: 24, scope: !11242)
!11245 = !DILocation(line: 5720, column: 11, scope: !11237)
!11246 = !DILocation(line: 5720, column: 55, scope: !11242)
!11247 = !DILocation(line: 5720, column: 41, scope: !11242)
!11248 = !DILocation(line: 5720, column: 39, scope: !11242)
!11249 = !DILocation(line: 5720, column: 35, scope: !11242)
!11250 = !DILocation(line: 5721, column: 11, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11237, file: !3, line: 5721, column: 11)
!11252 = !DILocation(line: 5721, column: 11, scope: !11237)
!11253 = !DILocation(line: 5722, column: 10, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 5721, column: 16)
!11255 = !DILocation(line: 5723, column: 9, scope: !11254)
!11256 = !DILocation(line: 5724, column: 7, scope: !11254)
!11257 = !DILocation(line: 5725, column: 6, scope: !11237)
!11258 = !DILocation(line: 5726, column: 5, scope: !11156)
!11259 = !DILocation(line: 5728, column: 7, scope: !11144)
!11260 = !DILocation(line: 5729, column: 6, scope: !11144)
!11261 = distinct !{!11261, !11139, !11262}
!11262 = !DILocation(line: 5730, column: 4, scope: !11126)
!11263 = !DILocation(line: 5732, column: 4, scope: !11126)
!11264 = !DILocation(line: 5732, column: 14, scope: !11126)
!11265 = !DILocation(line: 5733, column: 3, scope: !11126)
!11266 = !DILocation(line: 5688, column: 39, scope: !11123)
!11267 = !DILocation(line: 5688, column: 43, scope: !11123)
!11268 = !DILocation(line: 5688, column: 37, scope: !11123)
!11269 = !DILocation(line: 5688, column: 3, scope: !11123)
!11270 = distinct !{!11270, !11124, !11271}
!11271 = !DILocation(line: 5733, column: 3, scope: !11117)
!11272 = !DILocation(line: 5734, column: 2, scope: !11118)
!11273 = !DILocation(line: 5736, column: 22, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11112, file: !3, line: 5735, column: 7)
!11275 = !DILocation(line: 5736, column: 3, scope: !11274)
!11276 = !DILocation(line: 5737, column: 22, scope: !11274)
!11277 = !DILocation(line: 5737, column: 3, scope: !11274)
!11278 = !DILocation(line: 5740, column: 24, scope: !11088)
!11279 = !DILocation(line: 5740, column: 48, scope: !11088)
!11280 = !DILocation(line: 5740, column: 56, scope: !11088)
!11281 = !DILocation(line: 5740, column: 2, scope: !11088)
!11282 = !DILocation(line: 5742, column: 2, scope: !11088)
!11283 = distinct !DISubprogram(name: "CURVE_OT_select_less", scope: !3, file: !3, line: 5934, type: !4, scopeLine: 5935, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!11284 = !DILocalVariable(name: "ot", arg: 1, scope: !11283, file: !3, line: 5934, type: !6)
!11285 = !DILocation(line: 5934, column: 43, scope: !11283)
!11286 = !DILocation(line: 5937, column: 2, scope: !11283)
!11287 = !DILocation(line: 5937, column: 6, scope: !11283)
!11288 = !DILocation(line: 5937, column: 11, scope: !11283)
!11289 = !DILocation(line: 5938, column: 2, scope: !11283)
!11290 = !DILocation(line: 5938, column: 6, scope: !11283)
!11291 = !DILocation(line: 5938, column: 13, scope: !11283)
!11292 = !DILocation(line: 5939, column: 2, scope: !11283)
!11293 = !DILocation(line: 5939, column: 6, scope: !11283)
!11294 = !DILocation(line: 5939, column: 18, scope: !11283)
!11295 = !DILocation(line: 5942, column: 2, scope: !11283)
!11296 = !DILocation(line: 5942, column: 6, scope: !11283)
!11297 = !DILocation(line: 5942, column: 11, scope: !11283)
!11298 = !DILocation(line: 5943, column: 2, scope: !11283)
!11299 = !DILocation(line: 5943, column: 6, scope: !11283)
!11300 = !DILocation(line: 5943, column: 11, scope: !11283)
!11301 = !DILocation(line: 5946, column: 2, scope: !11283)
!11302 = !DILocation(line: 5946, column: 6, scope: !11283)
!11303 = !DILocation(line: 5946, column: 11, scope: !11283)
!11304 = !DILocation(line: 5947, column: 1, scope: !11283)
!11305 = distinct !DISubprogram(name: "select_less_exec", scope: !3, file: !3, line: 5763, type: !3224, scopeLine: 5764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!11306 = !DILocalVariable(name: "C", arg: 1, scope: !11305, file: !3, line: 5763, type: !3226)
!11307 = !DILocation(line: 5763, column: 39, scope: !11305)
!11308 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !11305, file: !3, line: 5763, type: !3228)
!11309 = !DILocation(line: 5763, column: 54, scope: !11305)
!11310 = !DILocalVariable(name: "obedit", scope: !11305, file: !3, line: 5765, type: !3242)
!11311 = !DILocation(line: 5765, column: 10, scope: !11305)
!11312 = !DILocation(line: 5765, column: 40, scope: !11305)
!11313 = !DILocation(line: 5765, column: 19, scope: !11305)
!11314 = !DILocalVariable(name: "editnurb", scope: !11305, file: !3, line: 5766, type: !486)
!11315 = !DILocation(line: 5766, column: 12, scope: !11305)
!11316 = !DILocation(line: 5766, column: 44, scope: !11305)
!11317 = !DILocation(line: 5766, column: 23, scope: !11305)
!11318 = !DILocalVariable(name: "nu", scope: !11305, file: !3, line: 5767, type: !3163)
!11319 = !DILocation(line: 5767, column: 8, scope: !11305)
!11320 = !DILocalVariable(name: "bp", scope: !11305, file: !3, line: 5768, type: !3093)
!11321 = !DILocation(line: 5768, column: 10, scope: !11305)
!11322 = !DILocalVariable(name: "bezt", scope: !11305, file: !3, line: 5769, type: !3104)
!11323 = !DILocation(line: 5769, column: 13, scope: !11305)
!11324 = !DILocalVariable(name: "a", scope: !11305, file: !3, line: 5770, type: !22)
!11325 = !DILocation(line: 5770, column: 6, scope: !11305)
!11326 = !DILocalVariable(name: "sel", scope: !11305, file: !3, line: 5771, type: !22)
!11327 = !DILocation(line: 5771, column: 6, scope: !11305)
!11328 = !DILocalVariable(name: "lastsel", scope: !11305, file: !3, line: 5772, type: !48)
!11329 = !DILocation(line: 5772, column: 8, scope: !11305)
!11330 = !DILocation(line: 5774, column: 6, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11305, file: !3, line: 5774, column: 6)
!11332 = !DILocation(line: 5774, column: 14, scope: !11331)
!11333 = !DILocation(line: 5774, column: 19, scope: !11331)
!11334 = !DILocation(line: 5774, column: 6, scope: !11305)
!11335 = !DILocation(line: 5775, column: 13, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11337, file: !3, line: 5775, column: 3)
!11337 = distinct !DILexicalBlock(scope: !11331, file: !3, line: 5774, column: 31)
!11338 = !DILocation(line: 5775, column: 23, scope: !11336)
!11339 = !DILocation(line: 5775, column: 11, scope: !11336)
!11340 = !DILocation(line: 5775, column: 8, scope: !11336)
!11341 = !DILocation(line: 5775, column: 30, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11336, file: !3, line: 5775, column: 3)
!11343 = !DILocation(line: 5775, column: 3, scope: !11336)
!11344 = !DILocalVariable(name: "selbpoints", scope: !11345, file: !3, line: 5776, type: !3191)
!11345 = distinct !DILexicalBlock(scope: !11342, file: !3, line: 5775, column: 49)
!11346 = !DILocation(line: 5776, column: 16, scope: !11345)
!11347 = !DILocation(line: 5777, column: 8, scope: !11345)
!11348 = !DILocation(line: 5777, column: 12, scope: !11345)
!11349 = !DILocation(line: 5777, column: 20, scope: !11345)
!11350 = !DILocation(line: 5777, column: 24, scope: !11345)
!11351 = !DILocation(line: 5777, column: 18, scope: !11345)
!11352 = !DILocation(line: 5777, column: 6, scope: !11345)
!11353 = !DILocation(line: 5778, column: 9, scope: !11345)
!11354 = !DILocation(line: 5778, column: 13, scope: !11345)
!11355 = !DILocation(line: 5778, column: 7, scope: !11345)
!11356 = !DILocation(line: 5779, column: 17, scope: !11345)
!11357 = !DILocation(line: 5779, column: 15, scope: !11345)
!11358 = !DILocation(line: 5780, column: 4, scope: !11345)
!11359 = !DILocation(line: 5780, column: 12, scope: !11345)
!11360 = !DILocation(line: 5781, column: 10, scope: !11361)
!11361 = distinct !DILexicalBlock(scope: !11362, file: !3, line: 5781, column: 9)
!11362 = distinct !DILexicalBlock(scope: !11345, file: !3, line: 5780, column: 16)
!11363 = !DILocation(line: 5781, column: 14, scope: !11361)
!11364 = !DILocation(line: 5781, column: 19, scope: !11361)
!11365 = !DILocation(line: 5781, column: 25, scope: !11361)
!11366 = !DILocation(line: 5781, column: 29, scope: !11361)
!11367 = !DILocation(line: 5781, column: 33, scope: !11361)
!11368 = !DILocation(line: 5781, column: 36, scope: !11361)
!11369 = !DILocation(line: 5781, column: 9, scope: !11362)
!11370 = !DILocation(line: 5782, column: 10, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11361, file: !3, line: 5781, column: 47)
!11372 = !DILocation(line: 5786, column: 11, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11371, file: !3, line: 5786, column: 10)
!11374 = !DILocation(line: 5786, column: 13, scope: !11373)
!11375 = !DILocation(line: 5786, column: 20, scope: !11373)
!11376 = !DILocation(line: 5786, column: 24, scope: !11373)
!11377 = !DILocation(line: 5786, column: 18, scope: !11373)
!11378 = !DILocation(line: 5786, column: 30, scope: !11373)
!11379 = !DILocation(line: 5786, column: 10, scope: !11371)
!11380 = !DILocation(line: 5787, column: 10, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11373, file: !3, line: 5786, column: 36)
!11382 = !DILocation(line: 5788, column: 6, scope: !11381)
!11383 = !DILocation(line: 5790, column: 9, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11373, file: !3, line: 5789, column: 11)
!11385 = !DILocation(line: 5791, column: 11, scope: !11386)
!11386 = distinct !DILexicalBlock(scope: !11384, file: !3, line: 5791, column: 11)
!11387 = !DILocation(line: 5791, column: 46, scope: !11386)
!11388 = !DILocation(line: 5791, column: 51, scope: !11386)
!11389 = !DILocation(line: 5791, column: 55, scope: !11386)
!11390 = !DILocation(line: 5791, column: 60, scope: !11386)
!11391 = !DILocation(line: 5791, column: 66, scope: !11386)
!11392 = !DILocation(line: 5791, column: 70, scope: !11386)
!11393 = !DILocation(line: 5791, column: 74, scope: !11386)
!11394 = !DILocation(line: 5791, column: 77, scope: !11386)
!11395 = !DILocation(line: 5791, column: 11, scope: !11384)
!11396 = !DILocation(line: 5791, column: 92, scope: !11386)
!11397 = !DILocation(line: 5791, column: 89, scope: !11386)
!11398 = !DILocation(line: 5792, column: 9, scope: !11384)
!11399 = !DILocation(line: 5795, column: 11, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11371, file: !3, line: 5795, column: 10)
!11401 = !DILocation(line: 5795, column: 13, scope: !11400)
!11402 = !DILocation(line: 5795, column: 20, scope: !11400)
!11403 = !DILocation(line: 5795, column: 24, scope: !11400)
!11404 = !DILocation(line: 5795, column: 18, scope: !11400)
!11405 = !DILocation(line: 5795, column: 30, scope: !11400)
!11406 = !DILocation(line: 5795, column: 10, scope: !11371)
!11407 = !DILocation(line: 5796, column: 10, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 5795, column: 36)
!11409 = !DILocation(line: 5797, column: 6, scope: !11408)
!11410 = !DILocation(line: 5799, column: 9, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 5798, column: 11)
!11412 = !DILocation(line: 5800, column: 12, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11411, file: !3, line: 5800, column: 11)
!11414 = !DILocation(line: 5800, column: 16, scope: !11413)
!11415 = !DILocation(line: 5800, column: 21, scope: !11413)
!11416 = !DILocation(line: 5800, column: 27, scope: !11413)
!11417 = !DILocation(line: 5800, column: 31, scope: !11413)
!11418 = !DILocation(line: 5800, column: 35, scope: !11413)
!11419 = !DILocation(line: 5800, column: 38, scope: !11413)
!11420 = !DILocation(line: 5800, column: 11, scope: !11411)
!11421 = !DILocation(line: 5800, column: 52, scope: !11413)
!11422 = !DILocation(line: 5800, column: 49, scope: !11413)
!11423 = !DILocation(line: 5801, column: 9, scope: !11411)
!11424 = !DILocation(line: 5804, column: 10, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11371, file: !3, line: 5804, column: 10)
!11426 = !DILocation(line: 5804, column: 12, scope: !11425)
!11427 = !DILocation(line: 5804, column: 18, scope: !11425)
!11428 = !DILocation(line: 5804, column: 22, scope: !11425)
!11429 = !DILocation(line: 5804, column: 30, scope: !11425)
!11430 = !DILocation(line: 5804, column: 34, scope: !11425)
!11431 = !DILocation(line: 5804, column: 28, scope: !11425)
!11432 = !DILocation(line: 5804, column: 42, scope: !11425)
!11433 = !DILocation(line: 5804, column: 46, scope: !11425)
!11434 = !DILocation(line: 5804, column: 40, scope: !11425)
!11435 = !DILocation(line: 5804, column: 16, scope: !11425)
!11436 = !DILocation(line: 5804, column: 10, scope: !11371)
!11437 = !DILocation(line: 5805, column: 10, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 5804, column: 53)
!11439 = !DILocation(line: 5806, column: 6, scope: !11438)
!11440 = !DILocation(line: 5808, column: 13, scope: !11441)
!11441 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 5807, column: 11)
!11442 = !DILocation(line: 5808, column: 17, scope: !11441)
!11443 = !DILocation(line: 5808, column: 10, scope: !11441)
!11444 = !DILocation(line: 5809, column: 11, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11441, file: !3, line: 5809, column: 11)
!11446 = !DILocation(line: 5809, column: 54, scope: !11445)
!11447 = !DILocation(line: 5809, column: 59, scope: !11445)
!11448 = !DILocation(line: 5809, column: 63, scope: !11445)
!11449 = !DILocation(line: 5809, column: 68, scope: !11445)
!11450 = !DILocation(line: 5809, column: 74, scope: !11445)
!11451 = !DILocation(line: 5809, column: 78, scope: !11445)
!11452 = !DILocation(line: 5809, column: 82, scope: !11445)
!11453 = !DILocation(line: 5809, column: 85, scope: !11445)
!11454 = !DILocation(line: 5809, column: 11, scope: !11441)
!11455 = !DILocation(line: 5809, column: 100, scope: !11445)
!11456 = !DILocation(line: 5809, column: 97, scope: !11445)
!11457 = !DILocation(line: 5810, column: 13, scope: !11441)
!11458 = !DILocation(line: 5810, column: 17, scope: !11441)
!11459 = !DILocation(line: 5810, column: 10, scope: !11441)
!11460 = !DILocation(line: 5813, column: 10, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11371, file: !3, line: 5813, column: 10)
!11462 = !DILocation(line: 5813, column: 14, scope: !11461)
!11463 = !DILocation(line: 5813, column: 18, scope: !11461)
!11464 = !DILocation(line: 5813, column: 12, scope: !11461)
!11465 = !DILocation(line: 5813, column: 10, scope: !11371)
!11466 = !DILocation(line: 5814, column: 10, scope: !11467)
!11467 = distinct !DILexicalBlock(scope: !11461, file: !3, line: 5813, column: 25)
!11468 = !DILocation(line: 5815, column: 6, scope: !11467)
!11469 = !DILocation(line: 5817, column: 13, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11461, file: !3, line: 5816, column: 11)
!11471 = !DILocation(line: 5817, column: 17, scope: !11470)
!11472 = !DILocation(line: 5817, column: 10, scope: !11470)
!11473 = !DILocation(line: 5818, column: 12, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11470, file: !3, line: 5818, column: 11)
!11475 = !DILocation(line: 5818, column: 16, scope: !11474)
!11476 = !DILocation(line: 5818, column: 21, scope: !11474)
!11477 = !DILocation(line: 5818, column: 27, scope: !11474)
!11478 = !DILocation(line: 5818, column: 31, scope: !11474)
!11479 = !DILocation(line: 5818, column: 35, scope: !11474)
!11480 = !DILocation(line: 5818, column: 38, scope: !11474)
!11481 = !DILocation(line: 5818, column: 11, scope: !11470)
!11482 = !DILocation(line: 5818, column: 52, scope: !11474)
!11483 = !DILocation(line: 5818, column: 49, scope: !11474)
!11484 = !DILocation(line: 5819, column: 13, scope: !11470)
!11485 = !DILocation(line: 5819, column: 17, scope: !11470)
!11486 = !DILocation(line: 5819, column: 10, scope: !11470)
!11487 = !DILocation(line: 5822, column: 10, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11371, file: !3, line: 5822, column: 10)
!11489 = !DILocation(line: 5822, column: 14, scope: !11488)
!11490 = !DILocation(line: 5822, column: 10, scope: !11371)
!11491 = !DILocation(line: 5823, column: 21, scope: !11492)
!11492 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 5822, column: 20)
!11493 = !DILocation(line: 5823, column: 7, scope: !11492)
!11494 = !DILocation(line: 5824, column: 7, scope: !11492)
!11495 = !DILocation(line: 5825, column: 6, scope: !11492)
!11496 = !DILocation(line: 5826, column: 5, scope: !11371)
!11497 = !DILocation(line: 5828, column: 14, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11361, file: !3, line: 5827, column: 10)
!11499 = !DILocation(line: 5831, column: 7, scope: !11362)
!11500 = distinct !{!11500, !11358, !11501}
!11501 = !DILocation(line: 5832, column: 4, scope: !11345)
!11502 = !DILocation(line: 5834, column: 4, scope: !11345)
!11503 = !DILocation(line: 5834, column: 14, scope: !11345)
!11504 = !DILocation(line: 5835, column: 3, scope: !11345)
!11505 = !DILocation(line: 5775, column: 39, scope: !11342)
!11506 = !DILocation(line: 5775, column: 43, scope: !11342)
!11507 = !DILocation(line: 5775, column: 37, scope: !11342)
!11508 = !DILocation(line: 5775, column: 3, scope: !11342)
!11509 = distinct !{!11509, !11343, !11510}
!11510 = !DILocation(line: 5835, column: 3, scope: !11336)
!11511 = !DILocation(line: 5836, column: 2, scope: !11337)
!11512 = !DILocation(line: 5838, column: 13, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11514, file: !3, line: 5838, column: 3)
!11514 = distinct !DILexicalBlock(scope: !11331, file: !3, line: 5837, column: 7)
!11515 = !DILocation(line: 5838, column: 23, scope: !11513)
!11516 = !DILocation(line: 5838, column: 11, scope: !11513)
!11517 = !DILocation(line: 5838, column: 8, scope: !11513)
!11518 = !DILocation(line: 5838, column: 30, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11513, file: !3, line: 5838, column: 3)
!11520 = !DILocation(line: 5838, column: 3, scope: !11513)
!11521 = !DILocation(line: 5839, column: 12, scope: !11522)
!11522 = distinct !DILexicalBlock(scope: !11519, file: !3, line: 5838, column: 49)
!11523 = !DILocation(line: 5841, column: 8, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11522, file: !3, line: 5841, column: 8)
!11525 = !DILocation(line: 5841, column: 12, scope: !11524)
!11526 = !DILocation(line: 5841, column: 17, scope: !11524)
!11527 = !DILocation(line: 5841, column: 8, scope: !11522)
!11528 = !DILocation(line: 5842, column: 9, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11524, file: !3, line: 5841, column: 31)
!11530 = !DILocation(line: 5842, column: 13, scope: !11529)
!11531 = !DILocation(line: 5842, column: 7, scope: !11529)
!11532 = !DILocation(line: 5843, column: 12, scope: !11529)
!11533 = !DILocation(line: 5843, column: 16, scope: !11529)
!11534 = !DILocation(line: 5843, column: 10, scope: !11529)
!11535 = !DILocation(line: 5844, column: 5, scope: !11529)
!11536 = !DILocation(line: 5844, column: 13, scope: !11529)
!11537 = !DILocation(line: 5845, column: 11, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11539, file: !3, line: 5845, column: 10)
!11539 = distinct !DILexicalBlock(scope: !11529, file: !3, line: 5844, column: 17)
!11540 = !DILocation(line: 5845, column: 17, scope: !11538)
!11541 = !DILocation(line: 5845, column: 22, scope: !11538)
!11542 = !DILocation(line: 5845, column: 28, scope: !11538)
!11543 = !DILocation(line: 5845, column: 32, scope: !11538)
!11544 = !DILocation(line: 5845, column: 38, scope: !11538)
!11545 = !DILocation(line: 5845, column: 41, scope: !11538)
!11546 = !DILocation(line: 5845, column: 10, scope: !11539)
!11547 = !DILocation(line: 5846, column: 14, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11538, file: !3, line: 5845, column: 52)
!11549 = !DILocation(line: 5846, column: 22, scope: !11548)
!11550 = !DILocation(line: 5846, column: 11, scope: !11548)
!11551 = !DILocation(line: 5850, column: 11, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11548, file: !3, line: 5850, column: 11)
!11553 = !DILocation(line: 5850, column: 16, scope: !11552)
!11554 = !DILocation(line: 5850, column: 20, scope: !11552)
!11555 = !DILocation(line: 5850, column: 26, scope: !11552)
!11556 = !DILocation(line: 5850, column: 13, scope: !11552)
!11557 = !DILocation(line: 5850, column: 11, scope: !11548)
!11558 = !DILocation(line: 5851, column: 11, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11552, file: !3, line: 5850, column: 31)
!11560 = !DILocation(line: 5852, column: 7, scope: !11559)
!11561 = !DILocation(line: 5854, column: 12, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11552, file: !3, line: 5853, column: 12)
!11563 = !DILocation(line: 5855, column: 13, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11562, file: !3, line: 5855, column: 12)
!11565 = !DILocation(line: 5855, column: 19, scope: !11564)
!11566 = !DILocation(line: 5855, column: 24, scope: !11564)
!11567 = !DILocation(line: 5855, column: 30, scope: !11564)
!11568 = !DILocation(line: 5855, column: 34, scope: !11564)
!11569 = !DILocation(line: 5855, column: 40, scope: !11564)
!11570 = !DILocation(line: 5855, column: 43, scope: !11564)
!11571 = !DILocation(line: 5855, column: 12, scope: !11562)
!11572 = !DILocation(line: 5855, column: 57, scope: !11564)
!11573 = !DILocation(line: 5855, column: 54, scope: !11564)
!11574 = !DILocation(line: 5856, column: 12, scope: !11562)
!11575 = !DILocation(line: 5859, column: 11, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11548, file: !3, line: 5859, column: 11)
!11577 = !DILocation(line: 5859, column: 13, scope: !11576)
!11578 = !DILocation(line: 5859, column: 11, scope: !11548)
!11579 = !DILocation(line: 5860, column: 11, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11576, file: !3, line: 5859, column: 19)
!11581 = !DILocation(line: 5861, column: 7, scope: !11580)
!11582 = !DILocation(line: 5863, column: 12, scope: !11583)
!11583 = distinct !DILexicalBlock(scope: !11576, file: !3, line: 5862, column: 12)
!11584 = !DILocation(line: 5864, column: 13, scope: !11585)
!11585 = distinct !DILexicalBlock(scope: !11583, file: !3, line: 5864, column: 12)
!11586 = !DILocation(line: 5864, column: 19, scope: !11585)
!11587 = !DILocation(line: 5864, column: 24, scope: !11585)
!11588 = !DILocation(line: 5864, column: 30, scope: !11585)
!11589 = !DILocation(line: 5864, column: 34, scope: !11585)
!11590 = !DILocation(line: 5864, column: 40, scope: !11585)
!11591 = !DILocation(line: 5864, column: 43, scope: !11585)
!11592 = !DILocation(line: 5864, column: 12, scope: !11583)
!11593 = !DILocation(line: 5864, column: 57, scope: !11585)
!11594 = !DILocation(line: 5864, column: 54, scope: !11585)
!11595 = !DILocation(line: 5865, column: 12, scope: !11583)
!11596 = !DILocation(line: 5868, column: 11, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11548, file: !3, line: 5868, column: 11)
!11598 = !DILocation(line: 5868, column: 15, scope: !11597)
!11599 = !DILocation(line: 5868, column: 11, scope: !11548)
!11600 = !DILocation(line: 5869, column: 25, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11597, file: !3, line: 5868, column: 21)
!11602 = !DILocation(line: 5869, column: 8, scope: !11601)
!11603 = !DILocation(line: 5870, column: 16, scope: !11601)
!11604 = !DILocation(line: 5871, column: 7, scope: !11601)
!11605 = !DILocation(line: 5873, column: 16, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11597, file: !3, line: 5872, column: 12)
!11607 = !DILocation(line: 5875, column: 6, scope: !11548)
!11608 = !DILocation(line: 5877, column: 15, scope: !11609)
!11609 = distinct !DILexicalBlock(scope: !11538, file: !3, line: 5876, column: 11)
!11610 = !DILocation(line: 5880, column: 10, scope: !11539)
!11611 = distinct !{!11611, !11535, !11612}
!11612 = !DILocation(line: 5881, column: 5, scope: !11529)
!11613 = !DILocation(line: 5882, column: 4, scope: !11529)
!11614 = !DILocation(line: 5884, column: 9, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11524, file: !3, line: 5883, column: 9)
!11616 = !DILocation(line: 5884, column: 13, scope: !11615)
!11617 = !DILocation(line: 5884, column: 21, scope: !11615)
!11618 = !DILocation(line: 5884, column: 25, scope: !11615)
!11619 = !DILocation(line: 5884, column: 19, scope: !11615)
!11620 = !DILocation(line: 5884, column: 7, scope: !11615)
!11621 = !DILocation(line: 5885, column: 10, scope: !11615)
!11622 = !DILocation(line: 5885, column: 14, scope: !11615)
!11623 = !DILocation(line: 5885, column: 8, scope: !11615)
!11624 = !DILocation(line: 5886, column: 5, scope: !11615)
!11625 = !DILocation(line: 5886, column: 13, scope: !11615)
!11626 = !DILocation(line: 5887, column: 11, scope: !11627)
!11627 = distinct !DILexicalBlock(scope: !11628, file: !3, line: 5887, column: 10)
!11628 = distinct !DILexicalBlock(scope: !11615, file: !3, line: 5886, column: 17)
!11629 = !DILocation(line: 5887, column: 19, scope: !11627)
!11630 = !DILocation(line: 5887, column: 25, scope: !11627)
!11631 = !DILocation(line: 5887, column: 29, scope: !11627)
!11632 = !DILocation(line: 5887, column: 33, scope: !11627)
!11633 = !DILocation(line: 5887, column: 38, scope: !11627)
!11634 = !DILocation(line: 5887, column: 44, scope: !11627)
!11635 = !DILocation(line: 5887, column: 48, scope: !11627)
!11636 = !DILocation(line: 5887, column: 52, scope: !11627)
!11637 = !DILocation(line: 5887, column: 55, scope: !11627)
!11638 = !DILocation(line: 5887, column: 10, scope: !11628)
!11639 = !DILocation(line: 5888, column: 11, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 5888, column: 11)
!11641 = distinct !DILexicalBlock(scope: !11627, file: !3, line: 5887, column: 66)
!11642 = !DILocation(line: 5888, column: 19, scope: !11640)
!11643 = !DILocation(line: 5888, column: 11, scope: !11641)
!11644 = !DILocation(line: 5888, column: 29, scope: !11640)
!11645 = !DILocation(line: 5888, column: 25, scope: !11640)
!11646 = !DILocation(line: 5889, column: 16, scope: !11640)
!11647 = !DILocation(line: 5892, column: 11, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 5892, column: 11)
!11649 = !DILocation(line: 5892, column: 16, scope: !11648)
!11650 = !DILocation(line: 5892, column: 20, scope: !11648)
!11651 = !DILocation(line: 5892, column: 28, scope: !11648)
!11652 = !DILocation(line: 5892, column: 32, scope: !11648)
!11653 = !DILocation(line: 5892, column: 26, scope: !11648)
!11654 = !DILocation(line: 5892, column: 38, scope: !11648)
!11655 = !DILocation(line: 5892, column: 13, scope: !11648)
!11656 = !DILocation(line: 5892, column: 11, scope: !11641)
!11657 = !DILocation(line: 5893, column: 11, scope: !11658)
!11658 = distinct !DILexicalBlock(scope: !11648, file: !3, line: 5892, column: 43)
!11659 = !DILocation(line: 5894, column: 7, scope: !11658)
!11660 = !DILocation(line: 5896, column: 10, scope: !11661)
!11661 = distinct !DILexicalBlock(scope: !11648, file: !3, line: 5895, column: 12)
!11662 = !DILocation(line: 5897, column: 13, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11661, file: !3, line: 5897, column: 12)
!11664 = !DILocation(line: 5897, column: 17, scope: !11663)
!11665 = !DILocation(line: 5897, column: 22, scope: !11663)
!11666 = !DILocation(line: 5897, column: 28, scope: !11663)
!11667 = !DILocation(line: 5897, column: 32, scope: !11663)
!11668 = !DILocation(line: 5897, column: 36, scope: !11663)
!11669 = !DILocation(line: 5897, column: 39, scope: !11663)
!11670 = !DILocation(line: 5897, column: 12, scope: !11661)
!11671 = !DILocation(line: 5897, column: 53, scope: !11663)
!11672 = !DILocation(line: 5897, column: 50, scope: !11663)
!11673 = !DILocation(line: 5898, column: 10, scope: !11661)
!11674 = !DILocation(line: 5901, column: 11, scope: !11675)
!11675 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 5901, column: 11)
!11676 = !DILocation(line: 5901, column: 13, scope: !11675)
!11677 = !DILocation(line: 5901, column: 11, scope: !11641)
!11678 = !DILocation(line: 5902, column: 11, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11675, file: !3, line: 5901, column: 19)
!11680 = !DILocation(line: 5903, column: 7, scope: !11679)
!11681 = !DILocation(line: 5905, column: 10, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11675, file: !3, line: 5904, column: 12)
!11683 = !DILocation(line: 5906, column: 13, scope: !11684)
!11684 = distinct !DILexicalBlock(scope: !11682, file: !3, line: 5906, column: 12)
!11685 = !DILocation(line: 5906, column: 17, scope: !11684)
!11686 = !DILocation(line: 5906, column: 22, scope: !11684)
!11687 = !DILocation(line: 5906, column: 28, scope: !11684)
!11688 = !DILocation(line: 5906, column: 32, scope: !11684)
!11689 = !DILocation(line: 5906, column: 36, scope: !11684)
!11690 = !DILocation(line: 5906, column: 39, scope: !11684)
!11691 = !DILocation(line: 5906, column: 12, scope: !11682)
!11692 = !DILocation(line: 5906, column: 53, scope: !11684)
!11693 = !DILocation(line: 5906, column: 50, scope: !11684)
!11694 = !DILocation(line: 5907, column: 10, scope: !11682)
!11695 = !DILocation(line: 5910, column: 11, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 5910, column: 11)
!11697 = !DILocation(line: 5910, column: 15, scope: !11696)
!11698 = !DILocation(line: 5910, column: 11, scope: !11641)
!11699 = !DILocation(line: 5911, column: 22, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11696, file: !3, line: 5910, column: 21)
!11701 = !DILocation(line: 5911, column: 8, scope: !11700)
!11702 = !DILocation(line: 5912, column: 16, scope: !11700)
!11703 = !DILocation(line: 5913, column: 7, scope: !11700)
!11704 = !DILocation(line: 5915, column: 16, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11696, file: !3, line: 5914, column: 12)
!11706 = !DILocation(line: 5917, column: 6, scope: !11641)
!11707 = !DILocation(line: 5919, column: 15, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11627, file: !3, line: 5918, column: 11)
!11709 = !DILocation(line: 5922, column: 8, scope: !11628)
!11710 = distinct !{!11710, !11624, !11711}
!11711 = !DILocation(line: 5923, column: 5, scope: !11615)
!11712 = !DILocation(line: 5925, column: 3, scope: !11522)
!11713 = !DILocation(line: 5838, column: 39, scope: !11519)
!11714 = !DILocation(line: 5838, column: 43, scope: !11519)
!11715 = !DILocation(line: 5838, column: 37, scope: !11519)
!11716 = !DILocation(line: 5838, column: 3, scope: !11519)
!11717 = distinct !{!11717, !11520, !11718}
!11718 = !DILocation(line: 5925, column: 3, scope: !11513)
!11719 = !DILocation(line: 5928, column: 24, scope: !11305)
!11720 = !DILocation(line: 5928, column: 48, scope: !11305)
!11721 = !DILocation(line: 5928, column: 56, scope: !11305)
!11722 = !DILocation(line: 5928, column: 2, scope: !11305)
!11723 = !DILocation(line: 5929, column: 38, scope: !11305)
!11724 = !DILocation(line: 5929, column: 46, scope: !11305)
!11725 = !DILocation(line: 5929, column: 2, scope: !11305)
!11726 = !DILocation(line: 5931, column: 2, scope: !11305)
!11727 = distinct !DISubprogram(name: "CURVE_OT_select_random", scope: !3, file: !3, line: 6002, type: !4, scopeLine: 6003, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!11728 = !DILocalVariable(name: "ot", arg: 1, scope: !11727, file: !3, line: 6002, type: !6)
!11729 = !DILocation(line: 6002, column: 45, scope: !11727)
!11730 = !DILocation(line: 6005, column: 2, scope: !11727)
!11731 = !DILocation(line: 6005, column: 6, scope: !11727)
!11732 = !DILocation(line: 6005, column: 11, scope: !11727)
!11733 = !DILocation(line: 6006, column: 2, scope: !11727)
!11734 = !DILocation(line: 6006, column: 6, scope: !11727)
!11735 = !DILocation(line: 6006, column: 13, scope: !11727)
!11736 = !DILocation(line: 6007, column: 2, scope: !11727)
!11737 = !DILocation(line: 6007, column: 6, scope: !11727)
!11738 = !DILocation(line: 6007, column: 18, scope: !11727)
!11739 = !DILocation(line: 6010, column: 2, scope: !11727)
!11740 = !DILocation(line: 6010, column: 6, scope: !11727)
!11741 = !DILocation(line: 6010, column: 11, scope: !11727)
!11742 = !DILocation(line: 6011, column: 2, scope: !11727)
!11743 = !DILocation(line: 6011, column: 6, scope: !11727)
!11744 = !DILocation(line: 6011, column: 11, scope: !11727)
!11745 = !DILocation(line: 6014, column: 2, scope: !11727)
!11746 = !DILocation(line: 6014, column: 6, scope: !11727)
!11747 = !DILocation(line: 6014, column: 11, scope: !11727)
!11748 = !DILocation(line: 6017, column: 27, scope: !11727)
!11749 = !DILocation(line: 6017, column: 31, scope: !11727)
!11750 = !DILocation(line: 6017, column: 2, scope: !11727)
!11751 = !DILocation(line: 6018, column: 46, scope: !11727)
!11752 = !DILocation(line: 6018, column: 2, scope: !11727)
!11753 = !DILocation(line: 6019, column: 1, scope: !11727)
!11754 = distinct !DISubprogram(name: "curve_select_random_exec", scope: !3, file: !3, line: 5987, type: !3224, scopeLine: 5988, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!11755 = !DILocalVariable(name: "C", arg: 1, scope: !11754, file: !3, line: 5987, type: !3226)
!11756 = !DILocation(line: 5987, column: 47, scope: !11754)
!11757 = !DILocalVariable(name: "op", arg: 2, scope: !11754, file: !3, line: 5987, type: !3228)
!11758 = !DILocation(line: 5987, column: 62, scope: !11754)
!11759 = !DILocalVariable(name: "obedit", scope: !11754, file: !3, line: 5989, type: !3242)
!11760 = !DILocation(line: 5989, column: 10, scope: !11754)
!11761 = !DILocation(line: 5989, column: 40, scope: !11754)
!11762 = !DILocation(line: 5989, column: 19, scope: !11754)
!11763 = !DILocalVariable(name: "editnurb", scope: !11754, file: !3, line: 5990, type: !486)
!11764 = !DILocation(line: 5990, column: 12, scope: !11754)
!11765 = !DILocation(line: 5990, column: 44, scope: !11754)
!11766 = !DILocation(line: 5990, column: 23, scope: !11754)
!11767 = !DILocalVariable(name: "select", scope: !11754, file: !3, line: 5991, type: !7655)
!11768 = !DILocation(line: 5991, column: 13, scope: !11754)
!11769 = !DILocation(line: 5991, column: 36, scope: !11754)
!11770 = !DILocation(line: 5991, column: 40, scope: !11754)
!11771 = !DILocation(line: 5991, column: 23, scope: !11754)
!11772 = !DILocation(line: 5991, column: 55, scope: !11754)
!11773 = !DILocation(line: 5991, column: 22, scope: !11754)
!11774 = !DILocalVariable(name: "randfac", scope: !11754, file: !3, line: 5992, type: !4639)
!11775 = !DILocation(line: 5992, column: 14, scope: !11754)
!11776 = !DILocation(line: 5992, column: 38, scope: !11754)
!11777 = !DILocation(line: 5992, column: 42, scope: !11754)
!11778 = !DILocation(line: 5992, column: 24, scope: !11754)
!11779 = !DILocation(line: 5992, column: 58, scope: !11754)
!11780 = !DILocation(line: 5994, column: 22, scope: !11754)
!11781 = !DILocation(line: 5994, column: 32, scope: !11754)
!11782 = !DILocation(line: 5994, column: 41, scope: !11754)
!11783 = !DILocation(line: 5994, column: 2, scope: !11754)
!11784 = !DILocation(line: 5995, column: 38, scope: !11754)
!11785 = !DILocation(line: 5995, column: 46, scope: !11754)
!11786 = !DILocation(line: 5995, column: 2, scope: !11754)
!11787 = !DILocation(line: 5997, column: 24, scope: !11754)
!11788 = !DILocation(line: 5997, column: 48, scope: !11754)
!11789 = !DILocation(line: 5997, column: 56, scope: !11754)
!11790 = !DILocation(line: 5997, column: 2, scope: !11754)
!11791 = !DILocation(line: 5999, column: 2, scope: !11754)
!11792 = distinct !DISubprogram(name: "ED_curve_select_nth", scope: !3, file: !3, line: 6069, type: !11793, scopeLine: 6070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!11793 = !DISubroutineType(types: !11794)
!11794 = !{!1081, !2953, !22}
!11795 = !DILocalVariable(name: "cu", arg: 1, scope: !11792, file: !3, line: 6069, type: !2953)
!11796 = !DILocation(line: 6069, column: 33, scope: !11792)
!11797 = !DILocalVariable(name: "nth", arg: 2, scope: !11792, file: !3, line: 6069, type: !22)
!11798 = !DILocation(line: 6069, column: 41, scope: !11792)
!11799 = !DILocalVariable(name: "nu", scope: !11792, file: !3, line: 6071, type: !3163)
!11800 = !DILocation(line: 6071, column: 8, scope: !11792)
!11801 = !DILocalVariable(name: "vert", scope: !11792, file: !3, line: 6072, type: !56)
!11802 = !DILocation(line: 6072, column: 8, scope: !11792)
!11803 = !DILocation(line: 6074, column: 38, scope: !11804)
!11804 = distinct !DILexicalBlock(scope: !11792, file: !3, line: 6074, column: 6)
!11805 = !DILocation(line: 6074, column: 7, scope: !11804)
!11806 = !DILocation(line: 6074, column: 6, scope: !11792)
!11807 = !DILocation(line: 6075, column: 3, scope: !11804)
!11808 = !DILocation(line: 6077, column: 6, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11792, file: !3, line: 6077, column: 6)
!11810 = !DILocation(line: 6077, column: 10, scope: !11809)
!11811 = !DILocation(line: 6077, column: 6, scope: !11792)
!11812 = !DILocation(line: 6078, column: 19, scope: !11813)
!11813 = distinct !DILexicalBlock(scope: !11809, file: !3, line: 6077, column: 16)
!11814 = !DILocation(line: 6078, column: 23, scope: !11813)
!11815 = !DILocation(line: 6078, column: 29, scope: !11813)
!11816 = !DILocation(line: 6078, column: 3, scope: !11813)
!11817 = !DILocation(line: 6079, column: 2, scope: !11813)
!11818 = !DILocation(line: 6081, column: 17, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11809, file: !3, line: 6080, column: 7)
!11820 = !DILocation(line: 6081, column: 21, scope: !11819)
!11821 = !DILocation(line: 6081, column: 27, scope: !11819)
!11822 = !DILocation(line: 6081, column: 3, scope: !11819)
!11823 = !DILocation(line: 6084, column: 2, scope: !11792)
!11824 = !DILocation(line: 6085, column: 1, scope: !11792)
!11825 = distinct !DISubprogram(name: "select_nth_bezt", scope: !3, file: !3, line: 6023, type: !11826, scopeLine: 6024, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!11826 = !DISubroutineType(types: !11827)
!11827 = !{null, !3163, !3104, !22}
!11828 = !DILocalVariable(name: "nu", arg: 1, scope: !11825, file: !3, line: 6023, type: !3163)
!11829 = !DILocation(line: 6023, column: 35, scope: !11825)
!11830 = !DILocalVariable(name: "bezt", arg: 2, scope: !11825, file: !3, line: 6023, type: !3104)
!11831 = !DILocation(line: 6023, column: 50, scope: !11825)
!11832 = !DILocalVariable(name: "nth", arg: 3, scope: !11825, file: !3, line: 6023, type: !22)
!11833 = !DILocation(line: 6023, column: 60, scope: !11825)
!11834 = !DILocalVariable(name: "a", scope: !11825, file: !3, line: 6025, type: !22)
!11835 = !DILocation(line: 6025, column: 6, scope: !11825)
!11836 = !DILocalVariable(name: "start", scope: !11825, file: !3, line: 6025, type: !22)
!11837 = !DILocation(line: 6025, column: 9, scope: !11825)
!11838 = !DILocation(line: 6027, column: 10, scope: !11825)
!11839 = !DILocation(line: 6027, column: 17, scope: !11825)
!11840 = !DILocation(line: 6027, column: 21, scope: !11825)
!11841 = !DILocation(line: 6027, column: 15, scope: !11825)
!11842 = !DILocation(line: 6027, column: 8, scope: !11825)
!11843 = !DILocation(line: 6028, column: 6, scope: !11825)
!11844 = !DILocation(line: 6028, column: 10, scope: !11825)
!11845 = !DILocation(line: 6028, column: 4, scope: !11825)
!11846 = !DILocation(line: 6029, column: 10, scope: !11825)
!11847 = !DILocation(line: 6029, column: 14, scope: !11825)
!11848 = !DILocation(line: 6029, column: 19, scope: !11825)
!11849 = !DILocation(line: 6029, column: 21, scope: !11825)
!11850 = !DILocation(line: 6029, column: 7, scope: !11825)
!11851 = !DILocation(line: 6031, column: 2, scope: !11825)
!11852 = !DILocation(line: 6031, column: 10, scope: !11825)
!11853 = !DILocation(line: 6032, column: 11, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11855, file: !3, line: 6032, column: 7)
!11855 = distinct !DILexicalBlock(scope: !11825, file: !3, line: 6031, column: 14)
!11856 = !DILocation(line: 6032, column: 19, scope: !11854)
!11857 = !DILocation(line: 6032, column: 17, scope: !11854)
!11858 = !DILocation(line: 6032, column: 7, scope: !11854)
!11859 = !DILocation(line: 6032, column: 24, scope: !11854)
!11860 = !DILocation(line: 6032, column: 22, scope: !11854)
!11861 = !DILocation(line: 6032, column: 7, scope: !11855)
!11862 = !DILocation(line: 6033, column: 21, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11854, file: !3, line: 6032, column: 29)
!11864 = !DILocation(line: 6033, column: 4, scope: !11863)
!11865 = !DILocation(line: 6034, column: 3, scope: !11863)
!11866 = !DILocation(line: 6036, column: 7, scope: !11855)
!11867 = distinct !{!11867, !11851, !11868}
!11868 = !DILocation(line: 6037, column: 2, scope: !11825)
!11869 = !DILocation(line: 6038, column: 1, scope: !11825)
!11870 = distinct !DISubprogram(name: "select_nth_bp", scope: !3, file: !3, line: 6040, type: !11871, scopeLine: 6041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!11871 = !DISubroutineType(types: !11872)
!11872 = !{null, !3163, !3093, !22}
!11873 = !DILocalVariable(name: "nu", arg: 1, scope: !11870, file: !3, line: 6040, type: !3163)
!11874 = !DILocation(line: 6040, column: 33, scope: !11870)
!11875 = !DILocalVariable(name: "bp", arg: 2, scope: !11870, file: !3, line: 6040, type: !3093)
!11876 = !DILocation(line: 6040, column: 45, scope: !11870)
!11877 = !DILocalVariable(name: "nth", arg: 3, scope: !11870, file: !3, line: 6040, type: !22)
!11878 = !DILocation(line: 6040, column: 53, scope: !11870)
!11879 = !DILocalVariable(name: "a", scope: !11870, file: !3, line: 6042, type: !22)
!11880 = !DILocation(line: 6042, column: 6, scope: !11870)
!11881 = !DILocalVariable(name: "startrow", scope: !11870, file: !3, line: 6042, type: !22)
!11882 = !DILocation(line: 6042, column: 9, scope: !11870)
!11883 = !DILocalVariable(name: "startpnt", scope: !11870, file: !3, line: 6042, type: !22)
!11884 = !DILocation(line: 6042, column: 19, scope: !11870)
!11885 = !DILocalVariable(name: "dist", scope: !11870, file: !3, line: 6043, type: !22)
!11886 = !DILocation(line: 6043, column: 6, scope: !11870)
!11887 = !DILocalVariable(name: "row", scope: !11870, file: !3, line: 6043, type: !22)
!11888 = !DILocation(line: 6043, column: 12, scope: !11870)
!11889 = !DILocalVariable(name: "pnt", scope: !11870, file: !3, line: 6043, type: !22)
!11890 = !DILocation(line: 6043, column: 17, scope: !11870)
!11891 = !DILocation(line: 6045, column: 14, scope: !11870)
!11892 = !DILocation(line: 6045, column: 19, scope: !11870)
!11893 = !DILocation(line: 6045, column: 23, scope: !11870)
!11894 = !DILocation(line: 6045, column: 17, scope: !11870)
!11895 = !DILocation(line: 6045, column: 29, scope: !11870)
!11896 = !DILocation(line: 6045, column: 33, scope: !11870)
!11897 = !DILocation(line: 6045, column: 27, scope: !11870)
!11898 = !DILocation(line: 6045, column: 13, scope: !11870)
!11899 = !DILocation(line: 6045, column: 11, scope: !11870)
!11900 = !DILocation(line: 6046, column: 14, scope: !11870)
!11901 = !DILocation(line: 6046, column: 19, scope: !11870)
!11902 = !DILocation(line: 6046, column: 23, scope: !11870)
!11903 = !DILocation(line: 6046, column: 17, scope: !11870)
!11904 = !DILocation(line: 6046, column: 29, scope: !11870)
!11905 = !DILocation(line: 6046, column: 33, scope: !11870)
!11906 = !DILocation(line: 6046, column: 27, scope: !11870)
!11907 = !DILocation(line: 6046, column: 13, scope: !11870)
!11908 = !DILocation(line: 6046, column: 11, scope: !11870)
!11909 = !DILocation(line: 6048, column: 6, scope: !11870)
!11910 = !DILocation(line: 6048, column: 10, scope: !11870)
!11911 = !DILocation(line: 6048, column: 18, scope: !11870)
!11912 = !DILocation(line: 6048, column: 22, scope: !11870)
!11913 = !DILocation(line: 6048, column: 16, scope: !11870)
!11914 = !DILocation(line: 6048, column: 4, scope: !11870)
!11915 = !DILocation(line: 6049, column: 8, scope: !11870)
!11916 = !DILocation(line: 6049, column: 12, scope: !11870)
!11917 = !DILocation(line: 6049, column: 15, scope: !11870)
!11918 = !DILocation(line: 6049, column: 17, scope: !11870)
!11919 = !DILocation(line: 6049, column: 5, scope: !11870)
!11920 = !DILocation(line: 6050, column: 8, scope: !11870)
!11921 = !DILocation(line: 6050, column: 12, scope: !11870)
!11922 = !DILocation(line: 6050, column: 18, scope: !11870)
!11923 = !DILocation(line: 6050, column: 6, scope: !11870)
!11924 = !DILocation(line: 6051, column: 8, scope: !11870)
!11925 = !DILocation(line: 6051, column: 12, scope: !11870)
!11926 = !DILocation(line: 6051, column: 18, scope: !11870)
!11927 = !DILocation(line: 6051, column: 6, scope: !11870)
!11928 = !DILocation(line: 6053, column: 2, scope: !11870)
!11929 = !DILocation(line: 6053, column: 10, scope: !11870)
!11930 = !DILocation(line: 6054, column: 14, scope: !11931)
!11931 = distinct !DILexicalBlock(scope: !11870, file: !3, line: 6053, column: 14)
!11932 = !DILocation(line: 6054, column: 20, scope: !11931)
!11933 = !DILocation(line: 6054, column: 18, scope: !11931)
!11934 = !DILocation(line: 6054, column: 10, scope: !11931)
!11935 = !DILocation(line: 6054, column: 36, scope: !11931)
!11936 = !DILocation(line: 6054, column: 42, scope: !11931)
!11937 = !DILocation(line: 6054, column: 40, scope: !11931)
!11938 = !DILocation(line: 6054, column: 32, scope: !11931)
!11939 = !DILocation(line: 6054, column: 30, scope: !11931)
!11940 = !DILocation(line: 6054, column: 8, scope: !11931)
!11941 = !DILocation(line: 6055, column: 7, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !11931, file: !3, line: 6055, column: 7)
!11943 = !DILocation(line: 6055, column: 14, scope: !11942)
!11944 = !DILocation(line: 6055, column: 12, scope: !11942)
!11945 = !DILocation(line: 6055, column: 7, scope: !11931)
!11946 = !DILocation(line: 6056, column: 18, scope: !11947)
!11947 = distinct !DILexicalBlock(scope: !11942, file: !3, line: 6055, column: 19)
!11948 = !DILocation(line: 6056, column: 4, scope: !11947)
!11949 = !DILocation(line: 6057, column: 3, scope: !11947)
!11950 = !DILocation(line: 6059, column: 6, scope: !11931)
!11951 = !DILocation(line: 6060, column: 7, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11931, file: !3, line: 6060, column: 7)
!11953 = !DILocation(line: 6060, column: 11, scope: !11952)
!11954 = !DILocation(line: 6060, column: 7, scope: !11931)
!11955 = !DILocation(line: 6061, column: 10, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11952, file: !3, line: 6060, column: 16)
!11957 = !DILocation(line: 6061, column: 14, scope: !11956)
!11958 = !DILocation(line: 6061, column: 20, scope: !11956)
!11959 = !DILocation(line: 6061, column: 8, scope: !11956)
!11960 = !DILocation(line: 6062, column: 7, scope: !11956)
!11961 = !DILocation(line: 6063, column: 3, scope: !11956)
!11962 = !DILocation(line: 6065, column: 5, scope: !11931)
!11963 = distinct !{!11963, !11928, !11964}
!11964 = !DILocation(line: 6066, column: 2, scope: !11870)
!11965 = !DILocation(line: 6067, column: 1, scope: !11870)
!11966 = distinct !DISubprogram(name: "CURVE_OT_select_nth", scope: !3, file: !3, line: 6108, type: !4, scopeLine: 6109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!11967 = !DILocalVariable(name: "ot", arg: 1, scope: !11966, file: !3, line: 6108, type: !6)
!11968 = !DILocation(line: 6108, column: 42, scope: !11966)
!11969 = !DILocation(line: 6111, column: 2, scope: !11966)
!11970 = !DILocation(line: 6111, column: 6, scope: !11966)
!11971 = !DILocation(line: 6111, column: 11, scope: !11966)
!11972 = !DILocation(line: 6112, column: 2, scope: !11966)
!11973 = !DILocation(line: 6112, column: 6, scope: !11966)
!11974 = !DILocation(line: 6112, column: 18, scope: !11966)
!11975 = !DILocation(line: 6113, column: 2, scope: !11966)
!11976 = !DILocation(line: 6113, column: 6, scope: !11966)
!11977 = !DILocation(line: 6113, column: 13, scope: !11966)
!11978 = !DILocation(line: 6116, column: 2, scope: !11966)
!11979 = !DILocation(line: 6116, column: 6, scope: !11966)
!11980 = !DILocation(line: 6116, column: 11, scope: !11966)
!11981 = !DILocation(line: 6117, column: 2, scope: !11966)
!11982 = !DILocation(line: 6117, column: 6, scope: !11966)
!11983 = !DILocation(line: 6117, column: 11, scope: !11966)
!11984 = !DILocation(line: 6120, column: 2, scope: !11966)
!11985 = !DILocation(line: 6120, column: 6, scope: !11966)
!11986 = !DILocation(line: 6120, column: 11, scope: !11966)
!11987 = !DILocation(line: 6122, column: 14, scope: !11966)
!11988 = !DILocation(line: 6122, column: 18, scope: !11966)
!11989 = !DILocation(line: 6122, column: 2, scope: !11966)
!11990 = !DILocation(line: 6123, column: 1, scope: !11966)
!11991 = distinct !DISubprogram(name: "select_nth_exec", scope: !3, file: !3, line: 6087, type: !3224, scopeLine: 6088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!11992 = !DILocalVariable(name: "C", arg: 1, scope: !11991, file: !3, line: 6087, type: !3226)
!11993 = !DILocation(line: 6087, column: 38, scope: !11991)
!11994 = !DILocalVariable(name: "op", arg: 2, scope: !11991, file: !3, line: 6087, type: !3228)
!11995 = !DILocation(line: 6087, column: 53, scope: !11991)
!11996 = !DILocalVariable(name: "obedit", scope: !11991, file: !3, line: 6089, type: !3242)
!11997 = !DILocation(line: 6089, column: 10, scope: !11991)
!11998 = !DILocation(line: 6089, column: 40, scope: !11991)
!11999 = !DILocation(line: 6089, column: 19, scope: !11991)
!12000 = !DILocalVariable(name: "nth", scope: !11991, file: !3, line: 6090, type: !22)
!12001 = !DILocation(line: 6090, column: 6, scope: !11991)
!12002 = !DILocation(line: 6090, column: 24, scope: !11991)
!12003 = !DILocation(line: 6090, column: 28, scope: !11991)
!12004 = !DILocation(line: 6090, column: 12, scope: !11991)
!12005 = !DILocation(line: 6092, column: 27, scope: !12006)
!12006 = distinct !DILexicalBlock(scope: !11991, file: !3, line: 6092, column: 6)
!12007 = !DILocation(line: 6092, column: 35, scope: !12006)
!12008 = !DILocation(line: 6092, column: 41, scope: !12006)
!12009 = !DILocation(line: 6092, column: 7, scope: !12006)
!12010 = !DILocation(line: 6092, column: 6, scope: !11991)
!12011 = !DILocation(line: 6093, column: 7, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !12013, file: !3, line: 6093, column: 7)
!12013 = distinct !DILexicalBlock(scope: !12006, file: !3, line: 6092, column: 47)
!12014 = !DILocation(line: 6093, column: 15, scope: !12012)
!12015 = !DILocation(line: 6093, column: 20, scope: !12012)
!12016 = !DILocation(line: 6093, column: 7, scope: !12013)
!12017 = !DILocation(line: 6094, column: 15, scope: !12018)
!12018 = distinct !DILexicalBlock(scope: !12012, file: !3, line: 6093, column: 32)
!12019 = !DILocation(line: 6094, column: 19, scope: !12018)
!12020 = !DILocation(line: 6094, column: 4, scope: !12018)
!12021 = !DILocation(line: 6095, column: 3, scope: !12018)
!12022 = !DILocation(line: 6097, column: 15, scope: !12023)
!12023 = distinct !DILexicalBlock(scope: !12012, file: !3, line: 6096, column: 8)
!12024 = !DILocation(line: 6097, column: 19, scope: !12023)
!12025 = !DILocation(line: 6097, column: 4, scope: !12023)
!12026 = !DILocation(line: 6100, column: 3, scope: !12013)
!12027 = !DILocation(line: 6103, column: 24, scope: !11991)
!12028 = !DILocation(line: 6103, column: 48, scope: !11991)
!12029 = !DILocation(line: 6103, column: 56, scope: !11991)
!12030 = !DILocation(line: 6103, column: 2, scope: !11991)
!12031 = !DILocation(line: 6105, column: 2, scope: !11991)
!12032 = !DILocation(line: 6106, column: 1, scope: !11991)
!12033 = distinct !DISubprogram(name: "CURVE_OT_duplicate", scope: !3, file: !3, line: 6146, type: !4, scopeLine: 6147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!12034 = !DILocalVariable(name: "ot", arg: 1, scope: !12033, file: !3, line: 6146, type: !6)
!12035 = !DILocation(line: 6146, column: 41, scope: !12033)
!12036 = !DILocation(line: 6149, column: 2, scope: !12033)
!12037 = !DILocation(line: 6149, column: 6, scope: !12033)
!12038 = !DILocation(line: 6149, column: 11, scope: !12033)
!12039 = !DILocation(line: 6150, column: 2, scope: !12033)
!12040 = !DILocation(line: 6150, column: 6, scope: !12033)
!12041 = !DILocation(line: 6150, column: 18, scope: !12033)
!12042 = !DILocation(line: 6151, column: 2, scope: !12033)
!12043 = !DILocation(line: 6151, column: 6, scope: !12033)
!12044 = !DILocation(line: 6151, column: 13, scope: !12033)
!12045 = !DILocation(line: 6154, column: 2, scope: !12033)
!12046 = !DILocation(line: 6154, column: 6, scope: !12033)
!12047 = !DILocation(line: 6154, column: 11, scope: !12033)
!12048 = !DILocation(line: 6155, column: 2, scope: !12033)
!12049 = !DILocation(line: 6155, column: 6, scope: !12033)
!12050 = !DILocation(line: 6155, column: 11, scope: !12033)
!12051 = !DILocation(line: 6158, column: 2, scope: !12033)
!12052 = !DILocation(line: 6158, column: 6, scope: !12033)
!12053 = !DILocation(line: 6158, column: 11, scope: !12033)
!12054 = !DILocation(line: 6159, column: 1, scope: !12033)
!12055 = distinct !DISubprogram(name: "duplicate_exec", scope: !3, file: !3, line: 6127, type: !3224, scopeLine: 6128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!12056 = !DILocalVariable(name: "C", arg: 1, scope: !12055, file: !3, line: 6127, type: !3226)
!12057 = !DILocation(line: 6127, column: 37, scope: !12055)
!12058 = !DILocalVariable(name: "op", arg: 2, scope: !12055, file: !3, line: 6127, type: !3228)
!12059 = !DILocation(line: 6127, column: 52, scope: !12055)
!12060 = !DILocalVariable(name: "obedit", scope: !12055, file: !3, line: 6129, type: !3242)
!12061 = !DILocation(line: 6129, column: 10, scope: !12055)
!12062 = !DILocation(line: 6129, column: 40, scope: !12055)
!12063 = !DILocation(line: 6129, column: 19, scope: !12055)
!12064 = !DILocalVariable(name: "newnurb", scope: !12055, file: !3, line: 6130, type: !58)
!12065 = !DILocation(line: 6130, column: 11, scope: !12055)
!12066 = !DILocation(line: 6132, column: 22, scope: !12055)
!12067 = !DILocation(line: 6132, column: 2, scope: !12055)
!12068 = !DILocation(line: 6134, column: 6, scope: !12069)
!12069 = distinct !DILexicalBlock(scope: !12055, file: !3, line: 6134, column: 6)
!12070 = !DILocation(line: 6134, column: 38, scope: !12069)
!12071 = !DILocation(line: 6134, column: 6, scope: !12055)
!12072 = !DILocation(line: 6135, column: 43, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12069, file: !3, line: 6134, column: 48)
!12074 = !DILocation(line: 6135, column: 22, scope: !12073)
!12075 = !DILocation(line: 6135, column: 3, scope: !12073)
!12076 = !DILocation(line: 6136, column: 25, scope: !12073)
!12077 = !DILocation(line: 6136, column: 49, scope: !12073)
!12078 = !DILocation(line: 6136, column: 57, scope: !12073)
!12079 = !DILocation(line: 6136, column: 3, scope: !12073)
!12080 = !DILocation(line: 6137, column: 2, scope: !12073)
!12081 = !DILocation(line: 6139, column: 14, scope: !12082)
!12082 = distinct !DILexicalBlock(scope: !12069, file: !3, line: 6138, column: 7)
!12083 = !DILocation(line: 6139, column: 18, scope: !12082)
!12084 = !DILocation(line: 6139, column: 3, scope: !12082)
!12085 = !DILocation(line: 6140, column: 3, scope: !12082)
!12086 = !DILocation(line: 6143, column: 2, scope: !12055)
!12087 = !DILocation(line: 6144, column: 1, scope: !12055)
!12088 = distinct !DISubprogram(name: "CURVE_OT_delete", scope: !3, file: !3, line: 6620, type: !4, scopeLine: 6621, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!12089 = !DILocalVariable(name: "ot", arg: 1, scope: !12088, file: !3, line: 6620, type: !6)
!12090 = !DILocation(line: 6620, column: 38, scope: !12088)
!12091 = !DILocalVariable(name: "prop", scope: !12088, file: !3, line: 6622, type: !1830)
!12092 = !DILocation(line: 6622, column: 15, scope: !12088)
!12093 = !DILocation(line: 6625, column: 2, scope: !12088)
!12094 = !DILocation(line: 6625, column: 6, scope: !12088)
!12095 = !DILocation(line: 6625, column: 11, scope: !12088)
!12096 = !DILocation(line: 6626, column: 2, scope: !12088)
!12097 = !DILocation(line: 6626, column: 6, scope: !12088)
!12098 = !DILocation(line: 6626, column: 18, scope: !12088)
!12099 = !DILocation(line: 6627, column: 2, scope: !12088)
!12100 = !DILocation(line: 6627, column: 6, scope: !12088)
!12101 = !DILocation(line: 6627, column: 13, scope: !12088)
!12102 = !DILocation(line: 6630, column: 2, scope: !12088)
!12103 = !DILocation(line: 6630, column: 6, scope: !12088)
!12104 = !DILocation(line: 6630, column: 11, scope: !12088)
!12105 = !DILocation(line: 6631, column: 2, scope: !12088)
!12106 = !DILocation(line: 6631, column: 6, scope: !12088)
!12107 = !DILocation(line: 6631, column: 13, scope: !12088)
!12108 = !DILocation(line: 6632, column: 2, scope: !12088)
!12109 = !DILocation(line: 6632, column: 6, scope: !12088)
!12110 = !DILocation(line: 6632, column: 11, scope: !12088)
!12111 = !DILocation(line: 6635, column: 2, scope: !12088)
!12112 = !DILocation(line: 6635, column: 6, scope: !12088)
!12113 = !DILocation(line: 6635, column: 11, scope: !12088)
!12114 = !DILocation(line: 6638, column: 22, scope: !12088)
!12115 = !DILocation(line: 6638, column: 26, scope: !12088)
!12116 = !DILocation(line: 6638, column: 9, scope: !12088)
!12117 = !DILocation(line: 6638, column: 7, scope: !12088)
!12118 = !DILocation(line: 6639, column: 21, scope: !12088)
!12119 = !DILocation(line: 6639, column: 2, scope: !12088)
!12120 = !DILocation(line: 6641, column: 13, scope: !12088)
!12121 = !DILocation(line: 6641, column: 2, scope: !12088)
!12122 = !DILocation(line: 6641, column: 6, scope: !12088)
!12123 = !DILocation(line: 6641, column: 11, scope: !12088)
!12124 = !DILocation(line: 6642, column: 1, scope: !12088)
!12125 = distinct !DISubprogram(name: "curve_delete_exec", scope: !3, file: !3, line: 6572, type: !3224, scopeLine: 6573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!12126 = !DILocalVariable(name: "C", arg: 1, scope: !12125, file: !3, line: 6572, type: !3226)
!12127 = !DILocation(line: 6572, column: 40, scope: !12125)
!12128 = !DILocalVariable(name: "op", arg: 2, scope: !12125, file: !3, line: 6572, type: !3228)
!12129 = !DILocation(line: 6572, column: 55, scope: !12125)
!12130 = !DILocalVariable(name: "obedit", scope: !12125, file: !3, line: 6574, type: !3242)
!12131 = !DILocation(line: 6574, column: 10, scope: !12125)
!12132 = !DILocation(line: 6574, column: 40, scope: !12125)
!12133 = !DILocation(line: 6574, column: 19, scope: !12125)
!12134 = !DILocalVariable(name: "cu", scope: !12125, file: !3, line: 6575, type: !2953)
!12135 = !DILocation(line: 6575, column: 9, scope: !12125)
!12136 = !DILocation(line: 6575, column: 23, scope: !12125)
!12137 = !DILocation(line: 6575, column: 31, scope: !12125)
!12138 = !DILocation(line: 6575, column: 14, scope: !12125)
!12139 = !DILocalVariable(name: "type", scope: !12125, file: !3, line: 6576, type: !12140)
!12140 = !DIDerivedType(tag: DW_TAG_typedef, name: "eCurveElem_Types", file: !3, line: 111, baseType: !2948)
!12141 = !DILocation(line: 6576, column: 19, scope: !12125)
!12142 = !DILocation(line: 6576, column: 39, scope: !12125)
!12143 = !DILocation(line: 6576, column: 43, scope: !12125)
!12144 = !DILocation(line: 6576, column: 26, scope: !12125)
!12145 = !DILocalVariable(name: "retval", scope: !12125, file: !3, line: 6577, type: !22)
!12146 = !DILocation(line: 6577, column: 6, scope: !12125)
!12147 = !DILocation(line: 6579, column: 6, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !12125, file: !3, line: 6579, column: 6)
!12149 = !DILocation(line: 6579, column: 11, scope: !12148)
!12150 = !DILocation(line: 6579, column: 6, scope: !12125)
!12151 = !DILocation(line: 6579, column: 59, scope: !12148)
!12152 = !DILocation(line: 6579, column: 37, scope: !12148)
!12153 = !DILocation(line: 6579, column: 35, scope: !12148)
!12154 = !DILocation(line: 6579, column: 28, scope: !12148)
!12155 = !DILocation(line: 6580, column: 11, scope: !12156)
!12156 = distinct !DILexicalBlock(scope: !12148, file: !3, line: 6580, column: 11)
!12157 = !DILocation(line: 6580, column: 16, scope: !12156)
!12158 = !DILocation(line: 6580, column: 11, scope: !12148)
!12159 = !DILocation(line: 6580, column: 65, scope: !12156)
!12160 = !DILocation(line: 6580, column: 43, scope: !12156)
!12161 = !DILocation(line: 6580, column: 41, scope: !12156)
!12162 = !DILocation(line: 6580, column: 34, scope: !12156)
!12163 = !DILocation(line: 6583, column: 6, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12125, file: !3, line: 6583, column: 6)
!12165 = !DILocation(line: 6583, column: 13, scope: !12164)
!12166 = !DILocation(line: 6583, column: 6, scope: !12125)
!12167 = !DILocation(line: 6584, column: 15, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12164, file: !3, line: 6583, column: 35)
!12169 = !DILocation(line: 6584, column: 19, scope: !12168)
!12170 = !DILocation(line: 6584, column: 27, scope: !12168)
!12171 = !DILocation(line: 6584, column: 3, scope: !12168)
!12172 = !DILocation(line: 6584, column: 7, scope: !12168)
!12173 = !DILocation(line: 6584, column: 13, scope: !12168)
!12174 = !DILocation(line: 6586, column: 32, scope: !12175)
!12175 = distinct !DILexicalBlock(scope: !12168, file: !3, line: 6586, column: 7)
!12176 = !DILocation(line: 6586, column: 40, scope: !12175)
!12177 = !DILocation(line: 6586, column: 7, scope: !12175)
!12178 = !DILocation(line: 6586, column: 7, scope: !12168)
!12179 = !DILocation(line: 6586, column: 69, scope: !12175)
!12180 = !DILocation(line: 6586, column: 93, scope: !12175)
!12181 = !DILocation(line: 6586, column: 47, scope: !12175)
!12182 = !DILocation(line: 6588, column: 25, scope: !12168)
!12183 = !DILocation(line: 6588, column: 47, scope: !12168)
!12184 = !DILocation(line: 6588, column: 55, scope: !12168)
!12185 = !DILocation(line: 6588, column: 3, scope: !12168)
!12186 = !DILocation(line: 6589, column: 21, scope: !12168)
!12187 = !DILocation(line: 6589, column: 29, scope: !12168)
!12188 = !DILocation(line: 6589, column: 3, scope: !12168)
!12189 = !DILocation(line: 6591, column: 10, scope: !12168)
!12190 = !DILocation(line: 6591, column: 3, scope: !12168)
!12191 = !DILocation(line: 6594, column: 9, scope: !12125)
!12192 = !DILocation(line: 6594, column: 2, scope: !12125)
!12193 = !DILocation(line: 6595, column: 1, scope: !12125)
!12194 = distinct !DISubprogram(name: "rna_curve_delete_type_itemf", scope: !3, file: !3, line: 6603, type: !12195, scopeLine: 6605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!12195 = !DISubroutineType(types: !12196)
!12196 = !{!12197, !3226, !12198, !1830, !12200}
!12197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3207, size: 64)
!12198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12199, size: 64)
!12199 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !25, line: 62, baseType: !74)
!12200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!12201 = !DILocalVariable(name: "C", arg: 1, scope: !12194, file: !3, line: 6603, type: !3226)
!12202 = !DILocation(line: 6603, column: 64, scope: !12194)
!12203 = !DILocalVariable(name: "UNUSED_ptr", arg: 2, scope: !12194, file: !3, line: 6603, type: !12198)
!12204 = !DILocation(line: 6603, column: 79, scope: !12194)
!12205 = !DILocalVariable(name: "UNUSED_prop", arg: 3, scope: !12194, file: !3, line: 6604, type: !1830)
!12206 = !DILocation(line: 6604, column: 74, scope: !12194)
!12207 = !DILocalVariable(name: "r_free", arg: 4, scope: !12194, file: !3, line: 6604, type: !12200)
!12208 = !DILocation(line: 6604, column: 94, scope: !12194)
!12209 = !DILocalVariable(name: "item", scope: !12194, file: !3, line: 6606, type: !12197)
!12210 = !DILocation(line: 6606, column: 20, scope: !12194)
!12211 = !DILocalVariable(name: "totitem", scope: !12194, file: !3, line: 6607, type: !22)
!12212 = !DILocation(line: 6607, column: 6, scope: !12194)
!12213 = !DILocation(line: 6609, column: 7, scope: !12214)
!12214 = distinct !DILexicalBlock(scope: !12194, file: !3, line: 6609, column: 6)
!12215 = !DILocation(line: 6609, column: 6, scope: !12194)
!12216 = !DILocation(line: 6610, column: 3, scope: !12214)
!12217 = !DILocation(line: 6612, column: 2, scope: !12194)
!12218 = !DILocation(line: 6613, column: 2, scope: !12194)
!12219 = !DILocation(line: 6614, column: 2, scope: !12194)
!12220 = !DILocation(line: 6615, column: 3, scope: !12194)
!12221 = !DILocation(line: 6615, column: 10, scope: !12194)
!12222 = !DILocation(line: 6617, column: 9, scope: !12194)
!12223 = !DILocation(line: 6617, column: 2, scope: !12194)
!12224 = !DILocation(line: 6618, column: 1, scope: !12194)
!12225 = distinct !DISubprogram(name: "CURVE_OT_shade_smooth", scope: !3, file: !3, line: 6669, type: !4, scopeLine: 6670, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!12226 = !DILocalVariable(name: "ot", arg: 1, scope: !12225, file: !3, line: 6669, type: !6)
!12227 = !DILocation(line: 6669, column: 44, scope: !12225)
!12228 = !DILocation(line: 6672, column: 2, scope: !12225)
!12229 = !DILocation(line: 6672, column: 6, scope: !12225)
!12230 = !DILocation(line: 6672, column: 11, scope: !12225)
!12231 = !DILocation(line: 6673, column: 2, scope: !12225)
!12232 = !DILocation(line: 6673, column: 6, scope: !12225)
!12233 = !DILocation(line: 6673, column: 13, scope: !12225)
!12234 = !DILocation(line: 6674, column: 2, scope: !12225)
!12235 = !DILocation(line: 6674, column: 6, scope: !12225)
!12236 = !DILocation(line: 6674, column: 18, scope: !12225)
!12237 = !DILocation(line: 6677, column: 2, scope: !12225)
!12238 = !DILocation(line: 6677, column: 6, scope: !12225)
!12239 = !DILocation(line: 6677, column: 11, scope: !12225)
!12240 = !DILocation(line: 6678, column: 2, scope: !12225)
!12241 = !DILocation(line: 6678, column: 6, scope: !12225)
!12242 = !DILocation(line: 6678, column: 11, scope: !12225)
!12243 = !DILocation(line: 6681, column: 2, scope: !12225)
!12244 = !DILocation(line: 6681, column: 6, scope: !12225)
!12245 = !DILocation(line: 6681, column: 11, scope: !12225)
!12246 = !DILocation(line: 6682, column: 1, scope: !12225)
!12247 = distinct !DISubprogram(name: "shade_smooth_exec", scope: !3, file: !3, line: 6646, type: !3224, scopeLine: 6647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!12248 = !DILocalVariable(name: "C", arg: 1, scope: !12247, file: !3, line: 6646, type: !3226)
!12249 = !DILocation(line: 6646, column: 40, scope: !12247)
!12250 = !DILocalVariable(name: "op", arg: 2, scope: !12247, file: !3, line: 6646, type: !3228)
!12251 = !DILocation(line: 6646, column: 55, scope: !12247)
!12252 = !DILocalVariable(name: "obedit", scope: !12247, file: !3, line: 6648, type: !3242)
!12253 = !DILocation(line: 6648, column: 10, scope: !12247)
!12254 = !DILocation(line: 6648, column: 40, scope: !12247)
!12255 = !DILocation(line: 6648, column: 19, scope: !12247)
!12256 = !DILocalVariable(name: "editnurb", scope: !12247, file: !3, line: 6649, type: !486)
!12257 = !DILocation(line: 6649, column: 12, scope: !12247)
!12258 = !DILocation(line: 6649, column: 44, scope: !12247)
!12259 = !DILocation(line: 6649, column: 23, scope: !12247)
!12260 = !DILocalVariable(name: "nu", scope: !12247, file: !3, line: 6650, type: !3163)
!12261 = !DILocation(line: 6650, column: 8, scope: !12247)
!12262 = !DILocalVariable(name: "clear", scope: !12247, file: !3, line: 6651, type: !22)
!12263 = !DILocation(line: 6651, column: 6, scope: !12247)
!12264 = !DILocation(line: 6651, column: 22, scope: !12247)
!12265 = !DILocation(line: 6651, column: 26, scope: !12247)
!12266 = !DILocation(line: 6651, column: 15, scope: !12247)
!12267 = !DILocation(line: 6651, column: 57, scope: !12247)
!12268 = !DILocation(line: 6653, column: 6, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12247, file: !3, line: 6653, column: 6)
!12270 = !DILocation(line: 6653, column: 14, scope: !12269)
!12271 = !DILocation(line: 6653, column: 19, scope: !12269)
!12272 = !DILocation(line: 6653, column: 6, scope: !12247)
!12273 = !DILocation(line: 6654, column: 3, scope: !12269)
!12274 = !DILocation(line: 6656, column: 12, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12247, file: !3, line: 6656, column: 2)
!12276 = !DILocation(line: 6656, column: 22, scope: !12275)
!12277 = !DILocation(line: 6656, column: 10, scope: !12275)
!12278 = !DILocation(line: 6656, column: 7, scope: !12275)
!12279 = !DILocation(line: 6656, column: 29, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12275, file: !3, line: 6656, column: 2)
!12281 = !DILocation(line: 6656, column: 2, scope: !12275)
!12282 = !DILocation(line: 6657, column: 17, scope: !12283)
!12283 = distinct !DILexicalBlock(scope: !12284, file: !3, line: 6657, column: 7)
!12284 = distinct !DILexicalBlock(scope: !12280, file: !3, line: 6656, column: 48)
!12285 = !DILocation(line: 6657, column: 7, scope: !12283)
!12286 = !DILocation(line: 6657, column: 7, scope: !12284)
!12287 = !DILocation(line: 6658, column: 9, scope: !12288)
!12288 = distinct !DILexicalBlock(scope: !12289, file: !3, line: 6658, column: 8)
!12289 = distinct !DILexicalBlock(scope: !12283, file: !3, line: 6657, column: 22)
!12290 = !DILocation(line: 6658, column: 8, scope: !12289)
!12291 = !DILocation(line: 6658, column: 16, scope: !12288)
!12292 = !DILocation(line: 6658, column: 20, scope: !12288)
!12293 = !DILocation(line: 6658, column: 25, scope: !12288)
!12294 = !DILocation(line: 6659, column: 9, scope: !12288)
!12295 = !DILocation(line: 6659, column: 13, scope: !12288)
!12296 = !DILocation(line: 6659, column: 18, scope: !12288)
!12297 = !DILocation(line: 6660, column: 3, scope: !12289)
!12298 = !DILocation(line: 6661, column: 2, scope: !12284)
!12299 = !DILocation(line: 6656, column: 38, scope: !12280)
!12300 = !DILocation(line: 6656, column: 42, scope: !12280)
!12301 = !DILocation(line: 6656, column: 36, scope: !12280)
!12302 = !DILocation(line: 6656, column: 2, scope: !12280)
!12303 = distinct !{!12303, !12281, !12304}
!12304 = !DILocation(line: 6661, column: 2, scope: !12275)
!12305 = !DILocation(line: 6663, column: 24, scope: !12247)
!12306 = !DILocation(line: 6663, column: 46, scope: !12247)
!12307 = !DILocation(line: 6663, column: 54, scope: !12247)
!12308 = !DILocation(line: 6663, column: 2, scope: !12247)
!12309 = !DILocation(line: 6664, column: 20, scope: !12247)
!12310 = !DILocation(line: 6664, column: 28, scope: !12247)
!12311 = !DILocation(line: 6664, column: 2, scope: !12247)
!12312 = !DILocation(line: 6666, column: 2, scope: !12247)
!12313 = !DILocation(line: 6667, column: 1, scope: !12247)
!12314 = distinct !DISubprogram(name: "CURVE_OT_shade_flat", scope: !3, file: !3, line: 6684, type: !4, scopeLine: 6685, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!12315 = !DILocalVariable(name: "ot", arg: 1, scope: !12314, file: !3, line: 6684, type: !6)
!12316 = !DILocation(line: 6684, column: 42, scope: !12314)
!12317 = !DILocation(line: 6687, column: 2, scope: !12314)
!12318 = !DILocation(line: 6687, column: 6, scope: !12314)
!12319 = !DILocation(line: 6687, column: 11, scope: !12314)
!12320 = !DILocation(line: 6688, column: 2, scope: !12314)
!12321 = !DILocation(line: 6688, column: 6, scope: !12314)
!12322 = !DILocation(line: 6688, column: 13, scope: !12314)
!12323 = !DILocation(line: 6689, column: 2, scope: !12314)
!12324 = !DILocation(line: 6689, column: 6, scope: !12314)
!12325 = !DILocation(line: 6689, column: 18, scope: !12314)
!12326 = !DILocation(line: 6692, column: 2, scope: !12314)
!12327 = !DILocation(line: 6692, column: 6, scope: !12314)
!12328 = !DILocation(line: 6692, column: 11, scope: !12314)
!12329 = !DILocation(line: 6693, column: 2, scope: !12314)
!12330 = !DILocation(line: 6693, column: 6, scope: !12314)
!12331 = !DILocation(line: 6693, column: 11, scope: !12314)
!12332 = !DILocation(line: 6696, column: 2, scope: !12314)
!12333 = !DILocation(line: 6696, column: 6, scope: !12314)
!12334 = !DILocation(line: 6696, column: 11, scope: !12314)
!12335 = !DILocation(line: 6697, column: 1, scope: !12314)
!12336 = distinct !DISubprogram(name: "join_curve_exec", scope: !3, file: !3, line: 6701, type: !3224, scopeLine: 6702, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!12337 = !DILocalVariable(name: "C", arg: 1, scope: !12336, file: !3, line: 6701, type: !3226)
!12338 = !DILocation(line: 6701, column: 31, scope: !12336)
!12339 = !DILocalVariable(name: "op", arg: 2, scope: !12336, file: !3, line: 6701, type: !3228)
!12340 = !DILocation(line: 6701, column: 46, scope: !12336)
!12341 = !DILocalVariable(name: "bmain", scope: !12336, file: !3, line: 6703, type: !5429)
!12342 = !DILocation(line: 6703, column: 8, scope: !12336)
!12343 = !DILocation(line: 6703, column: 30, scope: !12336)
!12344 = !DILocation(line: 6703, column: 16, scope: !12336)
!12345 = !DILocalVariable(name: "scene", scope: !12336, file: !3, line: 6704, type: !5497)
!12346 = !DILocation(line: 6704, column: 9, scope: !12336)
!12347 = !DILocation(line: 6704, column: 32, scope: !12336)
!12348 = !DILocation(line: 6704, column: 17, scope: !12336)
!12349 = !DILocalVariable(name: "ob", scope: !12336, file: !3, line: 6705, type: !3242)
!12350 = !DILocation(line: 6705, column: 10, scope: !12336)
!12351 = !DILocation(line: 6705, column: 38, scope: !12336)
!12352 = !DILocation(line: 6705, column: 15, scope: !12336)
!12353 = !DILocalVariable(name: "cu", scope: !12336, file: !3, line: 6706, type: !2953)
!12354 = !DILocation(line: 6706, column: 9, scope: !12336)
!12355 = !DILocalVariable(name: "nu", scope: !12336, file: !3, line: 6707, type: !3163)
!12356 = !DILocation(line: 6707, column: 8, scope: !12336)
!12357 = !DILocalVariable(name: "newnu", scope: !12336, file: !3, line: 6707, type: !3163)
!12358 = !DILocation(line: 6707, column: 13, scope: !12336)
!12359 = !DILocalVariable(name: "bezt", scope: !12336, file: !3, line: 6708, type: !3104)
!12360 = !DILocation(line: 6708, column: 13, scope: !12336)
!12361 = !DILocalVariable(name: "bp", scope: !12336, file: !3, line: 6709, type: !3093)
!12362 = !DILocation(line: 6709, column: 10, scope: !12336)
!12363 = !DILocalVariable(name: "tempbase", scope: !12336, file: !3, line: 6710, type: !58)
!12364 = !DILocation(line: 6710, column: 11, scope: !12336)
!12365 = !DILocalVariable(name: "imat", scope: !12336, file: !3, line: 6711, type: !364)
!12366 = !DILocation(line: 6711, column: 8, scope: !12336)
!12367 = !DILocalVariable(name: "cmat", scope: !12336, file: !3, line: 6711, type: !364)
!12368 = !DILocation(line: 6711, column: 20, scope: !12336)
!12369 = !DILocalVariable(name: "a", scope: !12336, file: !3, line: 6712, type: !22)
!12370 = !DILocation(line: 6712, column: 6, scope: !12336)
!12371 = !DILocalVariable(name: "ok", scope: !12336, file: !3, line: 6713, type: !1081)
!12372 = !DILocation(line: 6713, column: 7, scope: !12336)
!12373 = !DILocalVariable(name: "ctx_data_list", scope: !12374, file: !3, line: 6715, type: !58)
!12374 = distinct !DILexicalBlock(scope: !12336, file: !3, line: 6715, column: 2)
!12375 = !DILocation(line: 6715, column: 2, scope: !12374)
!12376 = !DILocalVariable(name: "ctx_link", scope: !12374, file: !3, line: 6715, type: !12377)
!12377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12378, size: 64)
!12378 = !DIDerivedType(tag: DW_TAG_typedef, name: "CollectionPointerLink", file: !25, line: 284, baseType: !12379)
!12379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CollectionPointerLink", file: !25, line: 281, size: 320, elements: !12380)
!12380 = !{!12381, !12383, !12384}
!12381 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12379, file: !25, line: 282, baseType: !12382, size: 64)
!12382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12379, size: 64)
!12383 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12379, file: !25, line: 282, baseType: !12382, size: 64, offset: 64)
!12384 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !12379, file: !25, line: 283, baseType: !12199, size: 192, offset: 128)
!12385 = !DILocation(line: 6715, column: 2, scope: !12386)
!12386 = distinct !DILexicalBlock(scope: !12374, file: !3, line: 6715, column: 2)
!12387 = !DILocation(line: 6715, column: 2, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12386, file: !3, line: 6715, column: 2)
!12389 = !DILocalVariable(name: "base", scope: !12390, file: !3, line: 6715, type: !5507)
!12390 = distinct !DILexicalBlock(scope: !12388, file: !3, line: 6715, column: 2)
!12391 = !DILocation(line: 6715, column: 2, scope: !12390)
!12392 = !DILocation(line: 6717, column: 7, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12394, file: !3, line: 6717, column: 7)
!12394 = distinct !DILexicalBlock(scope: !12390, file: !3, line: 6716, column: 2)
!12395 = !DILocation(line: 6717, column: 13, scope: !12393)
!12396 = !DILocation(line: 6717, column: 23, scope: !12393)
!12397 = !DILocation(line: 6717, column: 20, scope: !12393)
!12398 = !DILocation(line: 6717, column: 7, scope: !12394)
!12399 = !DILocation(line: 6718, column: 7, scope: !12400)
!12400 = distinct !DILexicalBlock(scope: !12393, file: !3, line: 6717, column: 27)
!12401 = !DILocation(line: 6719, column: 4, scope: !12400)
!12402 = !DILocation(line: 6722, column: 2, scope: !12390)
!12403 = distinct !{!12403, !12385, !12404}
!12404 = !DILocation(line: 6722, column: 2, scope: !12386)
!12405 = !DILocation(line: 6722, column: 2, scope: !12374)
!12406 = !DILocation(line: 6725, column: 6, scope: !12407)
!12407 = distinct !DILexicalBlock(scope: !12336, file: !3, line: 6725, column: 6)
!12408 = !DILocation(line: 6725, column: 9, scope: !12407)
!12409 = !DILocation(line: 6725, column: 6, scope: !12336)
!12410 = !DILocation(line: 6726, column: 14, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12407, file: !3, line: 6725, column: 19)
!12412 = !DILocation(line: 6726, column: 18, scope: !12411)
!12413 = !DILocation(line: 6726, column: 3, scope: !12411)
!12414 = !DILocation(line: 6727, column: 3, scope: !12411)
!12415 = !DILocation(line: 6730, column: 2, scope: !12336)
!12416 = !DILocation(line: 6733, column: 15, scope: !12336)
!12417 = !DILocation(line: 6733, column: 21, scope: !12336)
!12418 = !DILocation(line: 6733, column: 25, scope: !12336)
!12419 = !DILocation(line: 6733, column: 2, scope: !12336)
!12420 = !DILocalVariable(name: "ctx_data_list", scope: !12421, file: !3, line: 6735, type: !58)
!12421 = distinct !DILexicalBlock(scope: !12336, file: !3, line: 6735, column: 2)
!12422 = !DILocation(line: 6735, column: 2, scope: !12421)
!12423 = !DILocalVariable(name: "ctx_link", scope: !12421, file: !3, line: 6735, type: !12377)
!12424 = !DILocation(line: 6735, column: 2, scope: !12425)
!12425 = distinct !DILexicalBlock(scope: !12421, file: !3, line: 6735, column: 2)
!12426 = !DILocation(line: 6735, column: 2, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12425, file: !3, line: 6735, column: 2)
!12428 = !DILocalVariable(name: "base", scope: !12429, file: !3, line: 6735, type: !5507)
!12429 = distinct !DILexicalBlock(scope: !12427, file: !3, line: 6735, column: 2)
!12430 = !DILocation(line: 6735, column: 2, scope: !12429)
!12431 = !DILocation(line: 6737, column: 7, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12433, file: !3, line: 6737, column: 7)
!12433 = distinct !DILexicalBlock(scope: !12429, file: !3, line: 6736, column: 2)
!12434 = !DILocation(line: 6737, column: 13, scope: !12432)
!12435 = !DILocation(line: 6737, column: 21, scope: !12432)
!12436 = !DILocation(line: 6737, column: 29, scope: !12432)
!12437 = !DILocation(line: 6737, column: 33, scope: !12432)
!12438 = !DILocation(line: 6737, column: 26, scope: !12432)
!12439 = !DILocation(line: 6737, column: 7, scope: !12433)
!12440 = !DILocation(line: 6738, column: 8, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !12442, file: !3, line: 6738, column: 8)
!12442 = distinct !DILexicalBlock(scope: !12432, file: !3, line: 6737, column: 39)
!12443 = !DILocation(line: 6738, column: 14, scope: !12441)
!12444 = !DILocation(line: 6738, column: 24, scope: !12441)
!12445 = !DILocation(line: 6738, column: 21, scope: !12441)
!12446 = !DILocation(line: 6738, column: 8, scope: !12442)
!12447 = !DILocation(line: 6740, column: 10, scope: !12448)
!12448 = distinct !DILexicalBlock(scope: !12441, file: !3, line: 6738, column: 28)
!12449 = !DILocation(line: 6740, column: 16, scope: !12448)
!12450 = !DILocation(line: 6740, column: 24, scope: !12448)
!12451 = !DILocation(line: 6740, column: 8, scope: !12448)
!12452 = !DILocation(line: 6742, column: 9, scope: !12453)
!12453 = distinct !DILexicalBlock(scope: !12448, file: !3, line: 6742, column: 9)
!12454 = !DILocation(line: 6742, column: 13, scope: !12453)
!12455 = !DILocation(line: 6742, column: 18, scope: !12453)
!12456 = !DILocation(line: 6742, column: 9, scope: !12448)
!12457 = !DILocation(line: 6744, column: 18, scope: !12458)
!12458 = distinct !DILexicalBlock(scope: !12453, file: !3, line: 6742, column: 25)
!12459 = !DILocation(line: 6744, column: 24, scope: !12458)
!12460 = !DILocation(line: 6744, column: 30, scope: !12458)
!12461 = !DILocation(line: 6744, column: 36, scope: !12458)
!12462 = !DILocation(line: 6744, column: 44, scope: !12458)
!12463 = !DILocation(line: 6744, column: 6, scope: !12458)
!12464 = !DILocation(line: 6746, column: 11, scope: !12458)
!12465 = !DILocation(line: 6746, column: 15, scope: !12458)
!12466 = !DILocation(line: 6746, column: 20, scope: !12458)
!12467 = !DILocation(line: 6746, column: 9, scope: !12458)
!12468 = !DILocation(line: 6747, column: 6, scope: !12458)
!12469 = !DILocation(line: 6747, column: 13, scope: !12458)
!12470 = !DILocation(line: 6748, column: 34, scope: !12471)
!12471 = distinct !DILexicalBlock(scope: !12458, file: !3, line: 6747, column: 17)
!12472 = !DILocation(line: 6748, column: 15, scope: !12471)
!12473 = !DILocation(line: 6748, column: 13, scope: !12471)
!12474 = !DILocation(line: 6749, column: 11, scope: !12475)
!12475 = distinct !DILexicalBlock(scope: !12471, file: !3, line: 6749, column: 11)
!12476 = !DILocation(line: 6749, column: 15, scope: !12475)
!12477 = !DILocation(line: 6749, column: 11, scope: !12471)
!12478 = !DILocation(line: 6750, column: 8, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12480, file: !3, line: 6750, column: 8)
!12480 = distinct !DILexicalBlock(scope: !12481, file: !3, line: 6750, column: 8)
!12481 = distinct !DILexicalBlock(scope: !12475, file: !3, line: 6749, column: 23)
!12482 = !DILocation(line: 6750, column: 8, scope: !12480)
!12483 = !DILocation(line: 6750, column: 8, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12479, file: !3, line: 6750, column: 8)
!12485 = !DILocation(line: 6751, column: 7, scope: !12481)
!12486 = !DILocation(line: 6753, column: 8, scope: !12487)
!12487 = distinct !DILexicalBlock(scope: !12475, file: !3, line: 6752, column: 12)
!12488 = !DILocation(line: 6753, column: 15, scope: !12487)
!12489 = !DILocation(line: 6753, column: 22, scope: !12487)
!12490 = !DILocation(line: 6755, column: 30, scope: !12471)
!12491 = !DILocation(line: 6755, column: 7, scope: !12471)
!12492 = !DILocation(line: 6757, column: 19, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12471, file: !3, line: 6757, column: 11)
!12494 = !DILocation(line: 6757, column: 26, scope: !12493)
!12495 = !DILocation(line: 6757, column: 17, scope: !12493)
!12496 = !DILocation(line: 6757, column: 11, scope: !12471)
!12497 = !DILocation(line: 6758, column: 12, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12493, file: !3, line: 6757, column: 33)
!12499 = !DILocation(line: 6758, column: 19, scope: !12498)
!12500 = !DILocation(line: 6758, column: 10, scope: !12498)
!12501 = !DILocation(line: 6759, column: 8, scope: !12498)
!12502 = !DILocation(line: 6759, column: 16, scope: !12498)
!12503 = !DILocation(line: 6760, column: 19, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12498, file: !3, line: 6759, column: 20)
!12505 = !DILocation(line: 6760, column: 25, scope: !12504)
!12506 = !DILocation(line: 6760, column: 31, scope: !12504)
!12507 = !DILocation(line: 6760, column: 9, scope: !12504)
!12508 = !DILocation(line: 6761, column: 19, scope: !12504)
!12509 = !DILocation(line: 6761, column: 25, scope: !12504)
!12510 = !DILocation(line: 6761, column: 31, scope: !12504)
!12511 = !DILocation(line: 6761, column: 9, scope: !12504)
!12512 = !DILocation(line: 6762, column: 19, scope: !12504)
!12513 = !DILocation(line: 6762, column: 25, scope: !12504)
!12514 = !DILocation(line: 6762, column: 31, scope: !12504)
!12515 = !DILocation(line: 6762, column: 9, scope: !12504)
!12516 = !DILocation(line: 6763, column: 13, scope: !12504)
!12517 = distinct !{!12517, !12501, !12518}
!12518 = !DILocation(line: 6764, column: 8, scope: !12498)
!12519 = !DILocation(line: 6765, column: 30, scope: !12498)
!12520 = !DILocation(line: 6765, column: 8, scope: !12498)
!12521 = !DILocation(line: 6766, column: 7, scope: !12498)
!12522 = !DILocation(line: 6767, column: 17, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12471, file: !3, line: 6767, column: 11)
!12524 = !DILocation(line: 6767, column: 24, scope: !12523)
!12525 = !DILocation(line: 6767, column: 15, scope: !12523)
!12526 = !DILocation(line: 6767, column: 11, scope: !12471)
!12527 = !DILocation(line: 6768, column: 12, scope: !12528)
!12528 = distinct !DILexicalBlock(scope: !12523, file: !3, line: 6767, column: 29)
!12529 = !DILocation(line: 6768, column: 19, scope: !12528)
!12530 = !DILocation(line: 6768, column: 27, scope: !12528)
!12531 = !DILocation(line: 6768, column: 31, scope: !12528)
!12532 = !DILocation(line: 6768, column: 25, scope: !12528)
!12533 = !DILocation(line: 6768, column: 10, scope: !12528)
!12534 = !DILocation(line: 6769, column: 8, scope: !12528)
!12535 = !DILocation(line: 6769, column: 16, scope: !12528)
!12536 = !DILocation(line: 6770, column: 19, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12528, file: !3, line: 6769, column: 20)
!12538 = !DILocation(line: 6770, column: 25, scope: !12537)
!12539 = !DILocation(line: 6770, column: 29, scope: !12537)
!12540 = !DILocation(line: 6770, column: 9, scope: !12537)
!12541 = !DILocation(line: 6771, column: 11, scope: !12537)
!12542 = distinct !{!12542, !12534, !12543}
!12543 = !DILocation(line: 6772, column: 8, scope: !12528)
!12544 = !DILocation(line: 6773, column: 7, scope: !12528)
!12545 = !DILocation(line: 6774, column: 12, scope: !12471)
!12546 = !DILocation(line: 6774, column: 16, scope: !12471)
!12547 = !DILocation(line: 6774, column: 10, scope: !12471)
!12548 = distinct !{!12548, !12468, !12549}
!12549 = !DILocation(line: 6775, column: 6, scope: !12458)
!12550 = !DILocation(line: 6776, column: 5, scope: !12458)
!12551 = !DILocation(line: 6778, column: 36, scope: !12448)
!12552 = !DILocation(line: 6778, column: 43, scope: !12448)
!12553 = !DILocation(line: 6778, column: 50, scope: !12448)
!12554 = !DILocation(line: 6778, column: 5, scope: !12448)
!12555 = !DILocation(line: 6779, column: 4, scope: !12448)
!12556 = !DILocation(line: 6780, column: 3, scope: !12442)
!12557 = !DILocation(line: 6782, column: 2, scope: !12429)
!12558 = distinct !{!12558, !12424, !12559}
!12559 = !DILocation(line: 6782, column: 2, scope: !12425)
!12560 = !DILocation(line: 6782, column: 2, scope: !12421)
!12561 = !DILocation(line: 6784, column: 7, scope: !12336)
!12562 = !DILocation(line: 6784, column: 11, scope: !12336)
!12563 = !DILocation(line: 6784, column: 5, scope: !12336)
!12564 = !DILocation(line: 6785, column: 22, scope: !12336)
!12565 = !DILocation(line: 6785, column: 26, scope: !12336)
!12566 = !DILocation(line: 6785, column: 2, scope: !12336)
!12567 = !DILocation(line: 6787, column: 27, scope: !12336)
!12568 = !DILocation(line: 6787, column: 2, scope: !12336)
!12569 = !DILocation(line: 6789, column: 27, scope: !12336)
!12570 = !DILocation(line: 6789, column: 2, scope: !12336)
!12571 = !DILocation(line: 6790, column: 26, scope: !12336)
!12572 = !DILocation(line: 6790, column: 2, scope: !12336)
!12573 = !DILocation(line: 6792, column: 24, scope: !12336)
!12574 = !DILocation(line: 6792, column: 52, scope: !12336)
!12575 = !DILocation(line: 6792, column: 2, scope: !12336)
!12576 = !DILocation(line: 6794, column: 2, scope: !12336)
!12577 = !DILocation(line: 6795, column: 1, scope: !12336)
!12578 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !12579, file: !12579, line: 89, type: !12580, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!12579 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!12580 = !DISubroutineType(types: !12581)
!12581 = !{null, !12582}
!12582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 64)
!12583 = !DILocalVariable(name: "lb", arg: 1, scope: !12578, file: !12579, line: 89, type: !12582)
!12584 = !DILocation(line: 89, column: 53, scope: !12578)
!12585 = !DILocation(line: 89, column: 71, scope: !12578)
!12586 = !DILocation(line: 89, column: 75, scope: !12578)
!12587 = !DILocation(line: 89, column: 80, scope: !12578)
!12588 = !DILocation(line: 89, column: 59, scope: !12578)
!12589 = !DILocation(line: 89, column: 63, scope: !12578)
!12590 = !DILocation(line: 89, column: 69, scope: !12578)
!12591 = !DILocation(line: 89, column: 93, scope: !12578)
!12592 = distinct !DISubprogram(name: "CURVE_OT_tilt_clear", scope: !3, file: !3, line: 6835, type: !4, scopeLine: 6836, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!12593 = !DILocalVariable(name: "ot", arg: 1, scope: !12592, file: !3, line: 6835, type: !6)
!12594 = !DILocation(line: 6835, column: 42, scope: !12592)
!12595 = !DILocation(line: 6838, column: 2, scope: !12592)
!12596 = !DILocation(line: 6838, column: 6, scope: !12592)
!12597 = !DILocation(line: 6838, column: 11, scope: !12592)
!12598 = !DILocation(line: 6839, column: 2, scope: !12592)
!12599 = !DILocation(line: 6839, column: 6, scope: !12592)
!12600 = !DILocation(line: 6839, column: 13, scope: !12592)
!12601 = !DILocation(line: 6840, column: 2, scope: !12592)
!12602 = !DILocation(line: 6840, column: 6, scope: !12592)
!12603 = !DILocation(line: 6840, column: 18, scope: !12592)
!12604 = !DILocation(line: 6843, column: 2, scope: !12592)
!12605 = !DILocation(line: 6843, column: 6, scope: !12592)
!12606 = !DILocation(line: 6843, column: 11, scope: !12592)
!12607 = !DILocation(line: 6844, column: 2, scope: !12592)
!12608 = !DILocation(line: 6844, column: 6, scope: !12592)
!12609 = !DILocation(line: 6844, column: 11, scope: !12592)
!12610 = !DILocation(line: 6847, column: 2, scope: !12592)
!12611 = !DILocation(line: 6847, column: 6, scope: !12592)
!12612 = !DILocation(line: 6847, column: 11, scope: !12592)
!12613 = !DILocation(line: 6848, column: 1, scope: !12592)
!12614 = distinct !DISubprogram(name: "clear_tilt_exec", scope: !3, file: !3, line: 6800, type: !3224, scopeLine: 6801, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!12615 = !DILocalVariable(name: "C", arg: 1, scope: !12614, file: !3, line: 6800, type: !3226)
!12616 = !DILocation(line: 6800, column: 38, scope: !12614)
!12617 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !12614, file: !3, line: 6800, type: !3228)
!12618 = !DILocation(line: 6800, column: 53, scope: !12614)
!12619 = !DILocalVariable(name: "obedit", scope: !12614, file: !3, line: 6802, type: !3242)
!12620 = !DILocation(line: 6802, column: 10, scope: !12614)
!12621 = !DILocation(line: 6802, column: 40, scope: !12614)
!12622 = !DILocation(line: 6802, column: 19, scope: !12614)
!12623 = !DILocalVariable(name: "cu", scope: !12614, file: !3, line: 6803, type: !2953)
!12624 = !DILocation(line: 6803, column: 9, scope: !12614)
!12625 = !DILocation(line: 6803, column: 14, scope: !12614)
!12626 = !DILocation(line: 6803, column: 22, scope: !12614)
!12627 = !DILocalVariable(name: "editnurb", scope: !12614, file: !3, line: 6804, type: !486)
!12628 = !DILocation(line: 6804, column: 12, scope: !12614)
!12629 = !DILocation(line: 6804, column: 44, scope: !12614)
!12630 = !DILocation(line: 6804, column: 23, scope: !12614)
!12631 = !DILocalVariable(name: "nu", scope: !12614, file: !3, line: 6805, type: !3163)
!12632 = !DILocation(line: 6805, column: 8, scope: !12614)
!12633 = !DILocalVariable(name: "bezt", scope: !12614, file: !3, line: 6806, type: !3104)
!12634 = !DILocation(line: 6806, column: 13, scope: !12614)
!12635 = !DILocalVariable(name: "bp", scope: !12614, file: !3, line: 6807, type: !3093)
!12636 = !DILocation(line: 6807, column: 10, scope: !12614)
!12637 = !DILocalVariable(name: "a", scope: !12614, file: !3, line: 6808, type: !22)
!12638 = !DILocation(line: 6808, column: 6, scope: !12614)
!12639 = !DILocation(line: 6810, column: 12, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12614, file: !3, line: 6810, column: 2)
!12641 = !DILocation(line: 6810, column: 22, scope: !12640)
!12642 = !DILocation(line: 6810, column: 10, scope: !12640)
!12643 = !DILocation(line: 6810, column: 7, scope: !12640)
!12644 = !DILocation(line: 6810, column: 29, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12640, file: !3, line: 6810, column: 2)
!12646 = !DILocation(line: 6810, column: 2, scope: !12640)
!12647 = !DILocation(line: 6811, column: 7, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !12649, file: !3, line: 6811, column: 7)
!12649 = distinct !DILexicalBlock(scope: !12645, file: !3, line: 6810, column: 48)
!12650 = !DILocation(line: 6811, column: 11, scope: !12648)
!12651 = !DILocation(line: 6811, column: 7, scope: !12649)
!12652 = !DILocation(line: 6812, column: 11, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12648, file: !3, line: 6811, column: 17)
!12654 = !DILocation(line: 6812, column: 15, scope: !12653)
!12655 = !DILocation(line: 6812, column: 9, scope: !12653)
!12656 = !DILocation(line: 6813, column: 8, scope: !12653)
!12657 = !DILocation(line: 6813, column: 12, scope: !12653)
!12658 = !DILocation(line: 6813, column: 6, scope: !12653)
!12659 = !DILocation(line: 6814, column: 4, scope: !12653)
!12660 = !DILocation(line: 6814, column: 12, scope: !12653)
!12661 = !DILocation(line: 6815, column: 9, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12663, file: !3, line: 6815, column: 9)
!12663 = distinct !DILexicalBlock(scope: !12653, file: !3, line: 6814, column: 16)
!12664 = !DILocation(line: 6815, column: 9, scope: !12663)
!12665 = !DILocation(line: 6815, column: 46, scope: !12662)
!12666 = !DILocation(line: 6815, column: 52, scope: !12662)
!12667 = !DILocation(line: 6815, column: 57, scope: !12662)
!12668 = !DILocation(line: 6816, column: 9, scope: !12663)
!12669 = distinct !{!12669, !12659, !12670}
!12670 = !DILocation(line: 6817, column: 4, scope: !12653)
!12671 = !DILocation(line: 6818, column: 3, scope: !12653)
!12672 = !DILocation(line: 6819, column: 12, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12648, file: !3, line: 6819, column: 12)
!12674 = !DILocation(line: 6819, column: 16, scope: !12673)
!12675 = !DILocation(line: 6819, column: 12, scope: !12648)
!12676 = !DILocation(line: 6820, column: 9, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !12673, file: !3, line: 6819, column: 20)
!12678 = !DILocation(line: 6820, column: 13, scope: !12677)
!12679 = !DILocation(line: 6820, column: 7, scope: !12677)
!12680 = !DILocation(line: 6821, column: 8, scope: !12677)
!12681 = !DILocation(line: 6821, column: 12, scope: !12677)
!12682 = !DILocation(line: 6821, column: 20, scope: !12677)
!12683 = !DILocation(line: 6821, column: 24, scope: !12677)
!12684 = !DILocation(line: 6821, column: 18, scope: !12677)
!12685 = !DILocation(line: 6821, column: 6, scope: !12677)
!12686 = !DILocation(line: 6822, column: 4, scope: !12677)
!12687 = !DILocation(line: 6822, column: 12, scope: !12677)
!12688 = !DILocation(line: 6823, column: 9, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12690, file: !3, line: 6823, column: 9)
!12690 = distinct !DILexicalBlock(scope: !12677, file: !3, line: 6822, column: 16)
!12691 = !DILocation(line: 6823, column: 13, scope: !12689)
!12692 = !DILocation(line: 6823, column: 16, scope: !12689)
!12693 = !DILocation(line: 6823, column: 9, scope: !12690)
!12694 = !DILocation(line: 6823, column: 26, scope: !12689)
!12695 = !DILocation(line: 6823, column: 30, scope: !12689)
!12696 = !DILocation(line: 6823, column: 35, scope: !12689)
!12697 = !DILocation(line: 6824, column: 7, scope: !12690)
!12698 = distinct !{!12698, !12686, !12699}
!12699 = !DILocation(line: 6825, column: 4, scope: !12677)
!12700 = !DILocation(line: 6826, column: 3, scope: !12677)
!12701 = !DILocation(line: 6827, column: 2, scope: !12649)
!12702 = !DILocation(line: 6810, column: 38, scope: !12645)
!12703 = !DILocation(line: 6810, column: 42, scope: !12645)
!12704 = !DILocation(line: 6810, column: 36, scope: !12645)
!12705 = !DILocation(line: 6810, column: 2, scope: !12645)
!12706 = distinct !{!12706, !12646, !12707}
!12707 = !DILocation(line: 6827, column: 2, scope: !12640)
!12708 = !DILocation(line: 6829, column: 24, scope: !12614)
!12709 = !DILocation(line: 6829, column: 46, scope: !12614)
!12710 = !DILocation(line: 6829, column: 54, scope: !12614)
!12711 = !DILocation(line: 6829, column: 2, scope: !12614)
!12712 = !DILocation(line: 6830, column: 20, scope: !12614)
!12713 = !DILocation(line: 6830, column: 28, scope: !12614)
!12714 = !DILocation(line: 6830, column: 2, scope: !12614)
!12715 = !DILocation(line: 6832, column: 2, scope: !12614)
!12716 = distinct !DISubprogram(name: "undo_push_curve", scope: !3, file: !3, line: 6957, type: !12717, scopeLine: 6958, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!12717 = !DISubroutineType(types: !12718)
!12718 = !{null, !3226, !12}
!12719 = !DILocalVariable(name: "C", arg: 1, scope: !12716, file: !3, line: 6957, type: !3226)
!12720 = !DILocation(line: 6957, column: 32, scope: !12716)
!12721 = !DILocalVariable(name: "name", arg: 2, scope: !12716, file: !3, line: 6957, type: !12)
!12722 = !DILocation(line: 6957, column: 47, scope: !12716)
!12723 = !DILocation(line: 6959, column: 21, scope: !12716)
!12724 = !DILocation(line: 6959, column: 24, scope: !12716)
!12725 = !DILocation(line: 6959, column: 2, scope: !12716)
!12726 = !DILocation(line: 6960, column: 1, scope: !12716)
!12727 = distinct !DISubprogram(name: "get_data", scope: !3, file: !3, line: 6950, type: !12728, scopeLine: 6951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!12728 = !DISubroutineType(types: !12729)
!12729 = !{!56, !3226}
!12730 = !DILocalVariable(name: "C", arg: 1, scope: !12727, file: !3, line: 6950, type: !3226)
!12731 = !DILocation(line: 6950, column: 33, scope: !12727)
!12732 = !DILocalVariable(name: "obedit", scope: !12727, file: !3, line: 6952, type: !3242)
!12733 = !DILocation(line: 6952, column: 10, scope: !12727)
!12734 = !DILocation(line: 6952, column: 40, scope: !12727)
!12735 = !DILocation(line: 6952, column: 19, scope: !12727)
!12736 = !DILocation(line: 6953, column: 9, scope: !12727)
!12737 = !DILocation(line: 6953, column: 2, scope: !12727)
!12738 = distinct !DISubprogram(name: "free_undoCurve", scope: !3, file: !3, line: 6935, type: !625, scopeLine: 6936, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!12739 = !DILocalVariable(name: "ucv", arg: 1, scope: !12738, file: !3, line: 6935, type: !56)
!12740 = !DILocation(line: 6935, column: 34, scope: !12738)
!12741 = !DILocalVariable(name: "undoCurve", scope: !12738, file: !3, line: 6937, type: !12742)
!12742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12743, size: 64)
!12743 = !DIDerivedType(tag: DW_TAG_typedef, name: "UndoCurve", file: !3, line: 88, baseType: !12744)
!12744 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 82, size: 576, elements: !12745)
!12745 = !{!12746, !12747, !12748, !12749, !12750, !12751}
!12746 = !DIDerivedType(tag: DW_TAG_member, name: "nubase", scope: !12744, file: !3, line: 83, baseType: !58, size: 128)
!12747 = !DIDerivedType(tag: DW_TAG_member, name: "actvert", scope: !12744, file: !3, line: 84, baseType: !22, size: 32, offset: 128)
!12748 = !DIDerivedType(tag: DW_TAG_member, name: "undoIndex", scope: !12744, file: !3, line: 85, baseType: !4960, size: 64, offset: 192)
!12749 = !DIDerivedType(tag: DW_TAG_member, name: "fcurves", scope: !12744, file: !3, line: 86, baseType: !58, size: 128, offset: 256)
!12750 = !DIDerivedType(tag: DW_TAG_member, name: "drivers", scope: !12744, file: !3, line: 86, baseType: !58, size: 128, offset: 384)
!12751 = !DIDerivedType(tag: DW_TAG_member, name: "actnu", scope: !12744, file: !3, line: 87, baseType: !22, size: 32, offset: 512)
!12752 = !DILocation(line: 6937, column: 13, scope: !12738)
!12753 = !DILocation(line: 6937, column: 25, scope: !12738)
!12754 = !DILocation(line: 6939, column: 21, scope: !12738)
!12755 = !DILocation(line: 6939, column: 32, scope: !12738)
!12756 = !DILocation(line: 6939, column: 2, scope: !12738)
!12757 = !DILocation(line: 6941, column: 6, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12738, file: !3, line: 6941, column: 6)
!12759 = !DILocation(line: 6941, column: 17, scope: !12758)
!12760 = !DILocation(line: 6941, column: 6, scope: !12738)
!12761 = !DILocation(line: 6942, column: 18, scope: !12758)
!12762 = !DILocation(line: 6942, column: 29, scope: !12758)
!12763 = !DILocation(line: 6942, column: 46, scope: !12758)
!12764 = !DILocation(line: 6942, column: 3, scope: !12758)
!12765 = !DILocation(line: 6944, column: 16, scope: !12738)
!12766 = !DILocation(line: 6944, column: 27, scope: !12738)
!12767 = !DILocation(line: 6944, column: 2, scope: !12738)
!12768 = !DILocation(line: 6945, column: 16, scope: !12738)
!12769 = !DILocation(line: 6945, column: 27, scope: !12738)
!12770 = !DILocation(line: 6945, column: 2, scope: !12738)
!12771 = !DILocation(line: 6947, column: 2, scope: !12738)
!12772 = !DILocation(line: 6947, column: 12, scope: !12738)
!12773 = !DILocation(line: 6948, column: 1, scope: !12738)
!12774 = distinct !DISubprogram(name: "undoCurve_to_editCurve", scope: !3, file: !3, line: 6852, type: !12775, scopeLine: 6853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!12775 = !DISubroutineType(types: !12776)
!12776 = !{null, !56, !56, !56}
!12777 = !DILocalVariable(name: "ucu", arg: 1, scope: !12774, file: !3, line: 6852, type: !56)
!12778 = !DILocation(line: 6852, column: 42, scope: !12774)
!12779 = !DILocalVariable(name: "UNUSED_edata", arg: 2, scope: !12774, file: !3, line: 6852, type: !56)
!12780 = !DILocation(line: 6852, column: 53, scope: !12774)
!12781 = !DILocalVariable(name: "cu_v", arg: 3, scope: !12774, file: !3, line: 6852, type: !56)
!12782 = !DILocation(line: 6852, column: 74, scope: !12774)
!12783 = !DILocalVariable(name: "cu", scope: !12774, file: !3, line: 6854, type: !2953)
!12784 = !DILocation(line: 6854, column: 9, scope: !12774)
!12785 = !DILocation(line: 6854, column: 14, scope: !12774)
!12786 = !DILocalVariable(name: "undoCurve", scope: !12774, file: !3, line: 6855, type: !12742)
!12787 = !DILocation(line: 6855, column: 13, scope: !12774)
!12788 = !DILocation(line: 6855, column: 25, scope: !12774)
!12789 = !DILocalVariable(name: "undobase", scope: !12774, file: !3, line: 6856, type: !486)
!12790 = !DILocation(line: 6856, column: 12, scope: !12774)
!12791 = !DILocation(line: 6856, column: 24, scope: !12774)
!12792 = !DILocation(line: 6856, column: 35, scope: !12774)
!12793 = !DILocalVariable(name: "editbase", scope: !12774, file: !3, line: 6857, type: !486)
!12794 = !DILocation(line: 6857, column: 12, scope: !12774)
!12795 = !DILocation(line: 6857, column: 47, scope: !12774)
!12796 = !DILocation(line: 6857, column: 23, scope: !12774)
!12797 = !DILocalVariable(name: "nu", scope: !12774, file: !3, line: 6858, type: !3163)
!12798 = !DILocation(line: 6858, column: 8, scope: !12774)
!12799 = !DILocalVariable(name: "newnu", scope: !12774, file: !3, line: 6858, type: !3163)
!12800 = !DILocation(line: 6858, column: 13, scope: !12774)
!12801 = !DILocalVariable(name: "editnurb", scope: !12774, file: !3, line: 6859, type: !2962)
!12802 = !DILocation(line: 6859, column: 12, scope: !12774)
!12803 = !DILocation(line: 6859, column: 23, scope: !12774)
!12804 = !DILocation(line: 6859, column: 27, scope: !12774)
!12805 = !DILocalVariable(name: "ad", scope: !12774, file: !3, line: 6860, type: !3428)
!12806 = !DILocation(line: 6860, column: 12, scope: !12774)
!12807 = !DILocation(line: 6860, column: 39, scope: !12774)
!12808 = !DILocation(line: 6860, column: 43, scope: !12774)
!12809 = !DILocation(line: 6860, column: 17, scope: !12774)
!12810 = !DILocation(line: 6862, column: 20, scope: !12774)
!12811 = !DILocation(line: 6862, column: 2, scope: !12774)
!12812 = !DILocation(line: 6864, column: 6, scope: !12813)
!12813 = distinct !DILexicalBlock(scope: !12774, file: !3, line: 6864, column: 6)
!12814 = !DILocation(line: 6864, column: 17, scope: !12813)
!12815 = !DILocation(line: 6864, column: 6, scope: !12774)
!12816 = !DILocation(line: 6865, column: 18, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !12813, file: !3, line: 6864, column: 28)
!12818 = !DILocation(line: 6865, column: 28, scope: !12817)
!12819 = !DILocation(line: 6865, column: 44, scope: !12817)
!12820 = !DILocation(line: 6865, column: 3, scope: !12817)
!12821 = !DILocation(line: 6866, column: 43, scope: !12817)
!12822 = !DILocation(line: 6866, column: 54, scope: !12817)
!12823 = !DILocation(line: 6866, column: 24, scope: !12817)
!12824 = !DILocation(line: 6866, column: 3, scope: !12817)
!12825 = !DILocation(line: 6866, column: 13, scope: !12817)
!12826 = !DILocation(line: 6866, column: 22, scope: !12817)
!12827 = !DILocation(line: 6867, column: 2, scope: !12817)
!12828 = !DILocation(line: 6869, column: 6, scope: !12829)
!12829 = distinct !DILexicalBlock(scope: !12774, file: !3, line: 6869, column: 6)
!12830 = !DILocation(line: 6869, column: 6, scope: !12774)
!12831 = !DILocation(line: 6870, column: 7, scope: !12832)
!12832 = distinct !DILexicalBlock(scope: !12833, file: !3, line: 6870, column: 7)
!12833 = distinct !DILexicalBlock(scope: !12829, file: !3, line: 6869, column: 10)
!12834 = !DILocation(line: 6870, column: 11, scope: !12832)
!12835 = !DILocation(line: 6870, column: 7, scope: !12833)
!12836 = !DILocation(line: 6871, column: 18, scope: !12837)
!12837 = distinct !DILexicalBlock(scope: !12832, file: !3, line: 6870, column: 19)
!12838 = !DILocation(line: 6871, column: 22, scope: !12837)
!12839 = !DILocation(line: 6871, column: 30, scope: !12837)
!12840 = !DILocation(line: 6871, column: 4, scope: !12837)
!12841 = !DILocation(line: 6872, column: 18, scope: !12837)
!12842 = !DILocation(line: 6872, column: 22, scope: !12837)
!12843 = !DILocation(line: 6872, column: 30, scope: !12837)
!12844 = !DILocation(line: 6872, column: 39, scope: !12837)
!12845 = !DILocation(line: 6872, column: 50, scope: !12837)
!12846 = !DILocation(line: 6872, column: 4, scope: !12837)
!12847 = !DILocation(line: 6873, column: 3, scope: !12837)
!12848 = !DILocation(line: 6875, column: 17, scope: !12833)
!12849 = !DILocation(line: 6875, column: 21, scope: !12833)
!12850 = !DILocation(line: 6875, column: 3, scope: !12833)
!12851 = !DILocation(line: 6876, column: 17, scope: !12833)
!12852 = !DILocation(line: 6876, column: 21, scope: !12833)
!12853 = !DILocation(line: 6876, column: 31, scope: !12833)
!12854 = !DILocation(line: 6876, column: 42, scope: !12833)
!12855 = !DILocation(line: 6876, column: 3, scope: !12833)
!12856 = !DILocation(line: 6877, column: 2, scope: !12833)
!12857 = !DILocation(line: 6880, column: 12, scope: !12858)
!12858 = distinct !DILexicalBlock(scope: !12774, file: !3, line: 6880, column: 2)
!12859 = !DILocation(line: 6880, column: 22, scope: !12858)
!12860 = !DILocation(line: 6880, column: 10, scope: !12858)
!12861 = !DILocation(line: 6880, column: 7, scope: !12858)
!12862 = !DILocation(line: 6880, column: 29, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12858, file: !3, line: 6880, column: 2)
!12864 = !DILocation(line: 6880, column: 2, scope: !12858)
!12865 = !DILocation(line: 6881, column: 30, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12863, file: !3, line: 6880, column: 48)
!12867 = !DILocation(line: 6881, column: 11, scope: !12866)
!12868 = !DILocation(line: 6881, column: 9, scope: !12866)
!12869 = !DILocation(line: 6883, column: 7, scope: !12870)
!12870 = distinct !DILexicalBlock(scope: !12866, file: !3, line: 6883, column: 7)
!12871 = !DILocation(line: 6883, column: 17, scope: !12870)
!12872 = !DILocation(line: 6883, column: 7, scope: !12866)
!12873 = !DILocation(line: 6884, column: 24, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12870, file: !3, line: 6883, column: 27)
!12875 = !DILocation(line: 6884, column: 34, scope: !12874)
!12876 = !DILocation(line: 6884, column: 38, scope: !12874)
!12877 = !DILocation(line: 6884, column: 4, scope: !12874)
!12878 = !DILocation(line: 6885, column: 3, scope: !12874)
!12879 = !DILocation(line: 6887, column: 15, scope: !12866)
!12880 = !DILocation(line: 6887, column: 25, scope: !12866)
!12881 = !DILocation(line: 6887, column: 3, scope: !12866)
!12882 = !DILocation(line: 6888, column: 2, scope: !12866)
!12883 = !DILocation(line: 6880, column: 38, scope: !12863)
!12884 = !DILocation(line: 6880, column: 42, scope: !12863)
!12885 = !DILocation(line: 6880, column: 36, scope: !12863)
!12886 = !DILocation(line: 6880, column: 2, scope: !12863)
!12887 = distinct !{!12887, !12864, !12888}
!12888 = !DILocation(line: 6888, column: 2, scope: !12858)
!12889 = !DILocation(line: 6890, column: 16, scope: !12774)
!12890 = !DILocation(line: 6890, column: 27, scope: !12774)
!12891 = !DILocation(line: 6890, column: 2, scope: !12774)
!12892 = !DILocation(line: 6890, column: 6, scope: !12774)
!12893 = !DILocation(line: 6890, column: 14, scope: !12774)
!12894 = !DILocation(line: 6891, column: 14, scope: !12774)
!12895 = !DILocation(line: 6891, column: 25, scope: !12774)
!12896 = !DILocation(line: 6891, column: 2, scope: !12774)
!12897 = !DILocation(line: 6891, column: 6, scope: !12774)
!12898 = !DILocation(line: 6891, column: 12, scope: !12774)
!12899 = !DILocation(line: 6892, column: 27, scope: !12774)
!12900 = !DILocation(line: 6892, column: 2, scope: !12774)
!12901 = !DILocation(line: 6893, column: 1, scope: !12774)
!12902 = distinct !DISubprogram(name: "editCurve_to_undoCurve", scope: !3, file: !3, line: 6895, type: !12903, scopeLine: 6896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!12903 = !DISubroutineType(types: !12904)
!12904 = !{!56, !56, !56}
!12905 = !DILocalVariable(name: "UNUSED_edata", arg: 1, scope: !12902, file: !3, line: 6895, type: !56)
!12906 = !DILocation(line: 6895, column: 43, scope: !12902)
!12907 = !DILocalVariable(name: "cu_v", arg: 2, scope: !12902, file: !3, line: 6895, type: !56)
!12908 = !DILocation(line: 6895, column: 64, scope: !12902)
!12909 = !DILocalVariable(name: "cu", scope: !12902, file: !3, line: 6897, type: !2953)
!12910 = !DILocation(line: 6897, column: 9, scope: !12902)
!12911 = !DILocation(line: 6897, column: 14, scope: !12902)
!12912 = !DILocalVariable(name: "nubase", scope: !12902, file: !3, line: 6898, type: !486)
!12913 = !DILocation(line: 6898, column: 12, scope: !12902)
!12914 = !DILocation(line: 6898, column: 45, scope: !12902)
!12915 = !DILocation(line: 6898, column: 21, scope: !12902)
!12916 = !DILocalVariable(name: "undoCurve", scope: !12902, file: !3, line: 6899, type: !12742)
!12917 = !DILocation(line: 6899, column: 13, scope: !12902)
!12918 = !DILocalVariable(name: "editnurb", scope: !12902, file: !3, line: 6900, type: !2962)
!12919 = !DILocation(line: 6900, column: 12, scope: !12902)
!12920 = !DILocation(line: 6900, column: 23, scope: !12902)
!12921 = !DILocation(line: 6900, column: 27, scope: !12902)
!12922 = !DILocalVariable(name: "tmpEditnurb", scope: !12902, file: !3, line: 6900, type: !2963)
!12923 = !DILocation(line: 6900, column: 37, scope: !12902)
!12924 = !DILocalVariable(name: "nu", scope: !12902, file: !3, line: 6901, type: !3163)
!12925 = !DILocation(line: 6901, column: 8, scope: !12902)
!12926 = !DILocalVariable(name: "newnu", scope: !12902, file: !3, line: 6901, type: !3163)
!12927 = !DILocation(line: 6901, column: 13, scope: !12902)
!12928 = !DILocalVariable(name: "ad", scope: !12902, file: !3, line: 6902, type: !3428)
!12929 = !DILocation(line: 6902, column: 12, scope: !12902)
!12930 = !DILocation(line: 6902, column: 39, scope: !12902)
!12931 = !DILocation(line: 6902, column: 43, scope: !12902)
!12932 = !DILocation(line: 6902, column: 17, scope: !12902)
!12933 = !DILocation(line: 6904, column: 14, scope: !12902)
!12934 = !DILocation(line: 6904, column: 12, scope: !12902)
!12935 = !DILocation(line: 6906, column: 6, scope: !12936)
!12936 = distinct !DILexicalBlock(scope: !12902, file: !3, line: 6906, column: 6)
!12937 = !DILocation(line: 6906, column: 16, scope: !12936)
!12938 = !DILocation(line: 6906, column: 6, scope: !12902)
!12939 = !DILocation(line: 6907, column: 45, scope: !12940)
!12940 = distinct !DILexicalBlock(scope: !12936, file: !3, line: 6906, column: 26)
!12941 = !DILocation(line: 6907, column: 55, scope: !12940)
!12942 = !DILocation(line: 6907, column: 26, scope: !12940)
!12943 = !DILocation(line: 6907, column: 3, scope: !12940)
!12944 = !DILocation(line: 6907, column: 14, scope: !12940)
!12945 = !DILocation(line: 6907, column: 24, scope: !12940)
!12946 = !DILocation(line: 6908, column: 26, scope: !12940)
!12947 = !DILocation(line: 6908, column: 37, scope: !12940)
!12948 = !DILocation(line: 6908, column: 15, scope: !12940)
!12949 = !DILocation(line: 6908, column: 24, scope: !12940)
!12950 = !DILocation(line: 6909, column: 2, scope: !12940)
!12951 = !DILocation(line: 6911, column: 6, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !12902, file: !3, line: 6911, column: 6)
!12953 = !DILocation(line: 6911, column: 6, scope: !12902)
!12954 = !DILocation(line: 6912, column: 7, scope: !12955)
!12955 = distinct !DILexicalBlock(scope: !12956, file: !3, line: 6912, column: 7)
!12956 = distinct !DILexicalBlock(scope: !12952, file: !3, line: 6911, column: 10)
!12957 = !DILocation(line: 6912, column: 11, scope: !12955)
!12958 = !DILocation(line: 6912, column: 7, scope: !12956)
!12959 = !DILocation(line: 6913, column: 18, scope: !12955)
!12960 = !DILocation(line: 6913, column: 29, scope: !12955)
!12961 = !DILocation(line: 6913, column: 39, scope: !12955)
!12962 = !DILocation(line: 6913, column: 43, scope: !12955)
!12963 = !DILocation(line: 6913, column: 51, scope: !12955)
!12964 = !DILocation(line: 6913, column: 4, scope: !12955)
!12965 = !DILocation(line: 6915, column: 17, scope: !12956)
!12966 = !DILocation(line: 6915, column: 28, scope: !12956)
!12967 = !DILocation(line: 6915, column: 38, scope: !12956)
!12968 = !DILocation(line: 6915, column: 42, scope: !12956)
!12969 = !DILocation(line: 6915, column: 3, scope: !12956)
!12970 = !DILocation(line: 6916, column: 2, scope: !12956)
!12971 = !DILocation(line: 6919, column: 12, scope: !12972)
!12972 = distinct !DILexicalBlock(scope: !12902, file: !3, line: 6919, column: 2)
!12973 = !DILocation(line: 6919, column: 20, scope: !12972)
!12974 = !DILocation(line: 6919, column: 10, scope: !12972)
!12975 = !DILocation(line: 6919, column: 7, scope: !12972)
!12976 = !DILocation(line: 6919, column: 27, scope: !12977)
!12977 = distinct !DILexicalBlock(scope: !12972, file: !3, line: 6919, column: 2)
!12978 = !DILocation(line: 6919, column: 2, scope: !12972)
!12979 = !DILocation(line: 6920, column: 30, scope: !12980)
!12980 = distinct !DILexicalBlock(scope: !12977, file: !3, line: 6919, column: 46)
!12981 = !DILocation(line: 6920, column: 11, scope: !12980)
!12982 = !DILocation(line: 6920, column: 9, scope: !12980)
!12983 = !DILocation(line: 6922, column: 7, scope: !12984)
!12984 = distinct !DILexicalBlock(scope: !12980, file: !3, line: 6922, column: 7)
!12985 = !DILocation(line: 6922, column: 18, scope: !12984)
!12986 = !DILocation(line: 6922, column: 7, scope: !12980)
!12987 = !DILocation(line: 6923, column: 38, scope: !12988)
!12988 = distinct !DILexicalBlock(scope: !12984, file: !3, line: 6922, column: 29)
!12989 = !DILocation(line: 6923, column: 42, scope: !12988)
!12990 = !DILocation(line: 6923, column: 4, scope: !12988)
!12991 = !DILocation(line: 6924, column: 3, scope: !12988)
!12992 = !DILocation(line: 6926, column: 16, scope: !12980)
!12993 = !DILocation(line: 6926, column: 27, scope: !12980)
!12994 = !DILocation(line: 6926, column: 35, scope: !12980)
!12995 = !DILocation(line: 6926, column: 3, scope: !12980)
!12996 = !DILocation(line: 6927, column: 2, scope: !12980)
!12997 = !DILocation(line: 6919, column: 36, scope: !12977)
!12998 = !DILocation(line: 6919, column: 40, scope: !12977)
!12999 = !DILocation(line: 6919, column: 34, scope: !12977)
!13000 = !DILocation(line: 6919, column: 2, scope: !12977)
!13001 = distinct !{!13001, !12978, !13002}
!13002 = !DILocation(line: 6927, column: 2, scope: !12972)
!13003 = !DILocation(line: 6929, column: 23, scope: !12902)
!13004 = !DILocation(line: 6929, column: 27, scope: !12902)
!13005 = !DILocation(line: 6929, column: 2, scope: !12902)
!13006 = !DILocation(line: 6929, column: 13, scope: !12902)
!13007 = !DILocation(line: 6929, column: 21, scope: !12902)
!13008 = !DILocation(line: 6930, column: 21, scope: !12902)
!13009 = !DILocation(line: 6930, column: 25, scope: !12902)
!13010 = !DILocation(line: 6930, column: 2, scope: !12902)
!13011 = !DILocation(line: 6930, column: 13, scope: !12902)
!13012 = !DILocation(line: 6930, column: 19, scope: !12902)
!13013 = !DILocation(line: 6932, column: 9, scope: !12902)
!13014 = !DILocation(line: 6932, column: 2, scope: !12902)
!13015 = distinct !DISubprogram(name: "ED_curve_beztcpy", scope: !3, file: !3, line: 6962, type: !13016, scopeLine: 6963, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!13016 = !DISubroutineType(types: !13017)
!13017 = !{null, !2962, !3104, !3104, !22}
!13018 = !DILocalVariable(name: "editnurb", arg: 1, scope: !13015, file: !3, line: 6962, type: !2962)
!13019 = !DILocation(line: 6962, column: 33, scope: !13015)
!13020 = !DILocalVariable(name: "dst", arg: 2, scope: !13015, file: !3, line: 6962, type: !3104)
!13021 = !DILocation(line: 6962, column: 54, scope: !13015)
!13022 = !DILocalVariable(name: "src", arg: 3, scope: !13015, file: !3, line: 6962, type: !3104)
!13023 = !DILocation(line: 6962, column: 70, scope: !13015)
!13024 = !DILocalVariable(name: "count", arg: 4, scope: !13015, file: !3, line: 6962, type: !22)
!13025 = !DILocation(line: 6962, column: 79, scope: !13015)
!13026 = !DILocation(line: 6964, column: 9, scope: !13015)
!13027 = !DILocation(line: 6964, column: 2, scope: !13015)
!13028 = !DILocation(line: 6964, column: 14, scope: !13015)
!13029 = !DILocation(line: 6964, column: 19, scope: !13015)
!13030 = !DILocation(line: 6964, column: 25, scope: !13015)
!13031 = !DILocation(line: 6965, column: 22, scope: !13015)
!13032 = !DILocation(line: 6965, column: 32, scope: !13015)
!13033 = !DILocation(line: 6965, column: 37, scope: !13015)
!13034 = !DILocation(line: 6965, column: 42, scope: !13015)
!13035 = !DILocation(line: 6965, column: 2, scope: !13015)
!13036 = !DILocation(line: 6966, column: 1, scope: !13015)
!13037 = distinct !DISubprogram(name: "keyIndex_updateBezt", scope: !3, file: !3, line: 451, type: !13016, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!13038 = !DILocalVariable(name: "editnurb", arg: 1, scope: !13037, file: !3, line: 451, type: !2962)
!13039 = !DILocation(line: 451, column: 43, scope: !13037)
!13040 = !DILocalVariable(name: "bezt", arg: 2, scope: !13037, file: !3, line: 451, type: !3104)
!13041 = !DILocation(line: 451, column: 64, scope: !13037)
!13042 = !DILocalVariable(name: "newbezt", arg: 3, scope: !13037, file: !3, line: 452, type: !3104)
!13043 = !DILocation(line: 452, column: 44, scope: !13037)
!13044 = !DILocalVariable(name: "count", arg: 4, scope: !13037, file: !3, line: 452, type: !22)
!13045 = !DILocation(line: 452, column: 57, scope: !13037)
!13046 = !DILocation(line: 454, column: 20, scope: !13037)
!13047 = !DILocation(line: 454, column: 38, scope: !13037)
!13048 = !DILocation(line: 454, column: 30, scope: !13037)
!13049 = !DILocation(line: 454, column: 52, scope: !13037)
!13050 = !DILocation(line: 454, column: 44, scope: !13037)
!13051 = !DILocation(line: 454, column: 61, scope: !13037)
!13052 = !DILocation(line: 454, column: 2, scope: !13037)
!13053 = !DILocation(line: 455, column: 1, scope: !13037)
!13054 = distinct !DISubprogram(name: "keyIndex_updateBP", scope: !3, file: !3, line: 457, type: !6178, scopeLine: 459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!13055 = !DILocalVariable(name: "editnurb", arg: 1, scope: !13054, file: !3, line: 457, type: !2962)
!13056 = !DILocation(line: 457, column: 41, scope: !13054)
!13057 = !DILocalVariable(name: "bp", arg: 2, scope: !13054, file: !3, line: 457, type: !3093)
!13058 = !DILocation(line: 457, column: 59, scope: !13054)
!13059 = !DILocalVariable(name: "newbp", arg: 3, scope: !13054, file: !3, line: 458, type: !3093)
!13060 = !DILocation(line: 458, column: 39, scope: !13054)
!13061 = !DILocalVariable(name: "count", arg: 4, scope: !13054, file: !3, line: 458, type: !22)
!13062 = !DILocation(line: 458, column: 50, scope: !13054)
!13063 = !DILocation(line: 460, column: 20, scope: !13054)
!13064 = !DILocation(line: 460, column: 38, scope: !13054)
!13065 = !DILocation(line: 460, column: 30, scope: !13054)
!13066 = !DILocation(line: 460, column: 50, scope: !13054)
!13067 = !DILocation(line: 460, column: 42, scope: !13054)
!13068 = !DILocation(line: 460, column: 57, scope: !13054)
!13069 = !DILocation(line: 460, column: 2, scope: !13054)
!13070 = !DILocation(line: 461, column: 1, scope: !13054)
!13071 = distinct !DISubprogram(name: "ED_curve_active_center", scope: !3, file: !3, line: 6974, type: !13072, scopeLine: 6975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!13072 = !DISubroutineType(types: !13073)
!13073 = !{!1081, !2953, !3154}
!13074 = !DILocalVariable(name: "cu", arg: 1, scope: !13071, file: !3, line: 6974, type: !2953)
!13075 = !DILocation(line: 6974, column: 36, scope: !13071)
!13076 = !DILocalVariable(name: "center", arg: 2, scope: !13071, file: !3, line: 6974, type: !3154)
!13077 = !DILocation(line: 6974, column: 46, scope: !13071)
!13078 = !DILocalVariable(name: "nu", scope: !13071, file: !3, line: 6976, type: !3163)
!13079 = !DILocation(line: 6976, column: 8, scope: !13071)
!13080 = !DILocalVariable(name: "vert", scope: !13071, file: !3, line: 6977, type: !56)
!13081 = !DILocation(line: 6977, column: 8, scope: !13071)
!13082 = !DILocation(line: 6979, column: 38, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13071, file: !3, line: 6979, column: 6)
!13084 = !DILocation(line: 6979, column: 7, scope: !13083)
!13085 = !DILocation(line: 6979, column: 6, scope: !13071)
!13086 = !DILocation(line: 6980, column: 3, scope: !13083)
!13087 = !DILocation(line: 6982, column: 6, scope: !13088)
!13088 = distinct !DILexicalBlock(scope: !13071, file: !3, line: 6982, column: 6)
!13089 = !DILocation(line: 6982, column: 10, scope: !13088)
!13090 = !DILocation(line: 6982, column: 15, scope: !13088)
!13091 = !DILocation(line: 6982, column: 6, scope: !13071)
!13092 = !DILocalVariable(name: "bezt", scope: !13093, file: !3, line: 6983, type: !3104)
!13093 = distinct !DILexicalBlock(scope: !13088, file: !3, line: 6982, column: 29)
!13094 = !DILocation(line: 6983, column: 14, scope: !13093)
!13095 = !DILocation(line: 6983, column: 34, scope: !13093)
!13096 = !DILocation(line: 6983, column: 21, scope: !13093)
!13097 = !DILocation(line: 6984, column: 14, scope: !13093)
!13098 = !DILocation(line: 6984, column: 22, scope: !13093)
!13099 = !DILocation(line: 6984, column: 28, scope: !13093)
!13100 = !DILocation(line: 6984, column: 3, scope: !13093)
!13101 = !DILocation(line: 6985, column: 2, scope: !13093)
!13102 = !DILocalVariable(name: "bp", scope: !13103, file: !3, line: 6987, type: !3093)
!13103 = distinct !DILexicalBlock(scope: !13088, file: !3, line: 6986, column: 7)
!13104 = !DILocation(line: 6987, column: 11, scope: !13103)
!13105 = !DILocation(line: 6987, column: 26, scope: !13103)
!13106 = !DILocation(line: 6987, column: 16, scope: !13103)
!13107 = !DILocation(line: 6988, column: 14, scope: !13103)
!13108 = !DILocation(line: 6988, column: 22, scope: !13103)
!13109 = !DILocation(line: 6988, column: 26, scope: !13103)
!13110 = !DILocation(line: 6988, column: 3, scope: !13103)
!13111 = !DILocation(line: 6991, column: 2, scope: !13071)
!13112 = !DILocation(line: 6992, column: 1, scope: !13071)
!13113 = distinct !DISubprogram(name: "copy_v3_v3", scope: !5794, file: !5794, line: 64, type: !5795, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!13114 = !DILocalVariable(name: "r", arg: 1, scope: !13113, file: !5794, line: 64, type: !3154)
!13115 = !DILocation(line: 64, column: 31, scope: !13113)
!13116 = !DILocalVariable(name: "a", arg: 2, scope: !13113, file: !5794, line: 64, type: !4638)
!13117 = !DILocation(line: 64, column: 49, scope: !13113)
!13118 = !DILocation(line: 66, column: 9, scope: !13113)
!13119 = !DILocation(line: 66, column: 2, scope: !13113)
!13120 = !DILocation(line: 66, column: 7, scope: !13113)
!13121 = !DILocation(line: 67, column: 9, scope: !13113)
!13122 = !DILocation(line: 67, column: 2, scope: !13113)
!13123 = !DILocation(line: 67, column: 7, scope: !13113)
!13124 = !DILocation(line: 68, column: 9, scope: !13113)
!13125 = !DILocation(line: 68, column: 2, scope: !13113)
!13126 = !DILocation(line: 68, column: 7, scope: !13113)
!13127 = !DILocation(line: 69, column: 1, scope: !13113)
!13128 = distinct !DISubprogram(name: "CURVE_OT_match_texture_space", scope: !3, file: !3, line: 7041, type: !4, scopeLine: 7042, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!13129 = !DILocalVariable(name: "ot", arg: 1, scope: !13128, file: !3, line: 7041, type: !6)
!13130 = !DILocation(line: 7041, column: 51, scope: !13128)
!13131 = !DILocation(line: 7044, column: 2, scope: !13128)
!13132 = !DILocation(line: 7044, column: 6, scope: !13128)
!13133 = !DILocation(line: 7044, column: 11, scope: !13128)
!13134 = !DILocation(line: 7045, column: 2, scope: !13128)
!13135 = !DILocation(line: 7045, column: 6, scope: !13128)
!13136 = !DILocation(line: 7045, column: 13, scope: !13128)
!13137 = !DILocation(line: 7046, column: 2, scope: !13128)
!13138 = !DILocation(line: 7046, column: 6, scope: !13128)
!13139 = !DILocation(line: 7046, column: 18, scope: !13128)
!13140 = !DILocation(line: 7049, column: 2, scope: !13128)
!13141 = !DILocation(line: 7049, column: 6, scope: !13128)
!13142 = !DILocation(line: 7049, column: 11, scope: !13128)
!13143 = !DILocation(line: 7050, column: 2, scope: !13128)
!13144 = !DILocation(line: 7050, column: 6, scope: !13128)
!13145 = !DILocation(line: 7050, column: 11, scope: !13128)
!13146 = !DILocation(line: 7053, column: 2, scope: !13128)
!13147 = !DILocation(line: 7053, column: 6, scope: !13128)
!13148 = !DILocation(line: 7053, column: 11, scope: !13128)
!13149 = !DILocation(line: 7054, column: 1, scope: !13128)
!13150 = distinct !DISubprogram(name: "match_texture_space_exec", scope: !3, file: !3, line: 7003, type: !3224, scopeLine: 7004, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!13151 = !DILocalVariable(name: "C", arg: 1, scope: !13150, file: !3, line: 7003, type: !3226)
!13152 = !DILocation(line: 7003, column: 47, scope: !13150)
!13153 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !13150, file: !3, line: 7003, type: !3228)
!13154 = !DILocation(line: 7003, column: 62, scope: !13150)
!13155 = !DILocalVariable(name: "scene", scope: !13150, file: !3, line: 7005, type: !5497)
!13156 = !DILocation(line: 7005, column: 9, scope: !13150)
!13157 = !DILocation(line: 7005, column: 32, scope: !13150)
!13158 = !DILocation(line: 7005, column: 17, scope: !13150)
!13159 = !DILocalVariable(name: "object", scope: !13150, file: !3, line: 7006, type: !3242)
!13160 = !DILocation(line: 7006, column: 10, scope: !13150)
!13161 = !DILocation(line: 7006, column: 42, scope: !13150)
!13162 = !DILocation(line: 7006, column: 19, scope: !13150)
!13163 = !DILocalVariable(name: "curve", scope: !13150, file: !3, line: 7007, type: !2953)
!13164 = !DILocation(line: 7007, column: 9, scope: !13150)
!13165 = !DILocation(line: 7007, column: 27, scope: !13150)
!13166 = !DILocation(line: 7007, column: 35, scope: !13150)
!13167 = !DILocation(line: 7007, column: 17, scope: !13150)
!13168 = !DILocalVariable(name: "min", scope: !13150, file: !3, line: 7008, type: !282)
!13169 = !DILocation(line: 7008, column: 8, scope: !13150)
!13170 = !DILocalVariable(name: "max", scope: !13150, file: !3, line: 7008, type: !282)
!13171 = !DILocation(line: 7008, column: 16, scope: !13150)
!13172 = !DILocalVariable(name: "size", scope: !13150, file: !3, line: 7008, type: !282)
!13173 = !DILocation(line: 7008, column: 24, scope: !13150)
!13174 = !DILocalVariable(name: "loc", scope: !13150, file: !3, line: 7008, type: !282)
!13175 = !DILocation(line: 7008, column: 33, scope: !13150)
!13176 = !DILocalVariable(name: "a", scope: !13150, file: !3, line: 7009, type: !22)
!13177 = !DILocation(line: 7009, column: 6, scope: !13150)
!13178 = !DILocation(line: 7011, column: 6, scope: !13179)
!13179 = distinct !DILexicalBlock(scope: !13150, file: !3, line: 7011, column: 6)
!13180 = !DILocation(line: 7011, column: 14, scope: !13179)
!13181 = !DILocation(line: 7011, column: 26, scope: !13179)
!13182 = !DILocation(line: 7011, column: 6, scope: !13150)
!13183 = !DILocation(line: 7012, column: 32, scope: !13184)
!13184 = distinct !DILexicalBlock(scope: !13179, file: !3, line: 7011, column: 35)
!13185 = !DILocation(line: 7012, column: 39, scope: !13184)
!13186 = !DILocation(line: 7012, column: 3, scope: !13184)
!13187 = !DILocation(line: 7013, column: 2, scope: !13184)
!13188 = !DILocation(line: 7015, column: 2, scope: !13189)
!13189 = distinct !DILexicalBlock(scope: !13150, file: !3, line: 7015, column: 2)
!13190 = !DILocation(line: 7016, column: 23, scope: !13150)
!13191 = !DILocation(line: 7016, column: 31, scope: !13150)
!13192 = !DILocation(line: 7016, column: 44, scope: !13150)
!13193 = !DILocation(line: 7016, column: 50, scope: !13150)
!13194 = !DILocation(line: 7016, column: 55, scope: !13150)
!13195 = !DILocation(line: 7016, column: 2, scope: !13150)
!13196 = !DILocation(line: 7018, column: 14, scope: !13150)
!13197 = !DILocation(line: 7018, column: 19, scope: !13150)
!13198 = !DILocation(line: 7018, column: 24, scope: !13150)
!13199 = !DILocation(line: 7018, column: 2, scope: !13150)
!13200 = !DILocation(line: 7020, column: 13, scope: !13150)
!13201 = !DILocation(line: 7020, column: 22, scope: !13150)
!13202 = !DILocation(line: 7020, column: 20, scope: !13150)
!13203 = !DILocation(line: 7020, column: 30, scope: !13150)
!13204 = !DILocation(line: 7020, column: 2, scope: !13150)
!13205 = !DILocation(line: 7020, column: 10, scope: !13150)
!13206 = !DILocation(line: 7021, column: 13, scope: !13150)
!13207 = !DILocation(line: 7021, column: 22, scope: !13150)
!13208 = !DILocation(line: 7021, column: 20, scope: !13150)
!13209 = !DILocation(line: 7021, column: 30, scope: !13150)
!13210 = !DILocation(line: 7021, column: 2, scope: !13150)
!13211 = !DILocation(line: 7021, column: 10, scope: !13150)
!13212 = !DILocation(line: 7022, column: 13, scope: !13150)
!13213 = !DILocation(line: 7022, column: 22, scope: !13150)
!13214 = !DILocation(line: 7022, column: 20, scope: !13150)
!13215 = !DILocation(line: 7022, column: 30, scope: !13150)
!13216 = !DILocation(line: 7022, column: 2, scope: !13150)
!13217 = !DILocation(line: 7022, column: 10, scope: !13150)
!13218 = !DILocation(line: 7024, column: 9, scope: !13219)
!13219 = distinct !DILexicalBlock(scope: !13150, file: !3, line: 7024, column: 2)
!13220 = !DILocation(line: 7024, column: 7, scope: !13219)
!13221 = !DILocation(line: 7024, column: 14, scope: !13222)
!13222 = distinct !DILexicalBlock(scope: !13219, file: !3, line: 7024, column: 2)
!13223 = !DILocation(line: 7024, column: 16, scope: !13222)
!13224 = !DILocation(line: 7024, column: 2, scope: !13219)
!13225 = !DILocation(line: 7025, column: 12, scope: !13226)
!13226 = distinct !DILexicalBlock(scope: !13227, file: !3, line: 7025, column: 7)
!13227 = distinct !DILexicalBlock(scope: !13222, file: !3, line: 7024, column: 26)
!13228 = !DILocation(line: 7025, column: 7, scope: !13226)
!13229 = !DILocation(line: 7025, column: 15, scope: !13226)
!13230 = !DILocation(line: 7025, column: 7, scope: !13227)
!13231 = !DILocation(line: 7025, column: 29, scope: !13226)
!13232 = !DILocation(line: 7025, column: 24, scope: !13226)
!13233 = !DILocation(line: 7025, column: 32, scope: !13226)
!13234 = !DILocation(line: 7026, column: 17, scope: !13235)
!13235 = distinct !DILexicalBlock(scope: !13226, file: !3, line: 7026, column: 12)
!13236 = !DILocation(line: 7026, column: 12, scope: !13235)
!13237 = !DILocation(line: 7026, column: 20, scope: !13235)
!13238 = !DILocation(line: 7026, column: 27, scope: !13235)
!13239 = !DILocation(line: 7026, column: 35, scope: !13235)
!13240 = !DILocation(line: 7026, column: 30, scope: !13235)
!13241 = !DILocation(line: 7026, column: 38, scope: !13235)
!13242 = !DILocation(line: 7026, column: 12, scope: !13226)
!13243 = !DILocation(line: 7026, column: 55, scope: !13235)
!13244 = !DILocation(line: 7026, column: 50, scope: !13235)
!13245 = !DILocation(line: 7026, column: 58, scope: !13235)
!13246 = !DILocation(line: 7027, column: 17, scope: !13247)
!13247 = distinct !DILexicalBlock(scope: !13235, file: !3, line: 7027, column: 12)
!13248 = !DILocation(line: 7027, column: 12, scope: !13247)
!13249 = !DILocation(line: 7027, column: 20, scope: !13247)
!13250 = !DILocation(line: 7027, column: 27, scope: !13247)
!13251 = !DILocation(line: 7027, column: 35, scope: !13247)
!13252 = !DILocation(line: 7027, column: 30, scope: !13247)
!13253 = !DILocation(line: 7027, column: 38, scope: !13247)
!13254 = !DILocation(line: 7027, column: 12, scope: !13235)
!13255 = !DILocation(line: 7027, column: 56, scope: !13247)
!13256 = !DILocation(line: 7027, column: 51, scope: !13247)
!13257 = !DILocation(line: 7027, column: 59, scope: !13247)
!13258 = !DILocation(line: 7028, column: 2, scope: !13227)
!13259 = !DILocation(line: 7024, column: 22, scope: !13222)
!13260 = !DILocation(line: 7024, column: 2, scope: !13222)
!13261 = distinct !{!13261, !13224, !13262}
!13262 = !DILocation(line: 7028, column: 2, scope: !13219)
!13263 = !DILocation(line: 7030, column: 13, scope: !13150)
!13264 = !DILocation(line: 7030, column: 20, scope: !13150)
!13265 = !DILocation(line: 7030, column: 25, scope: !13150)
!13266 = !DILocation(line: 7030, column: 2, scope: !13150)
!13267 = !DILocation(line: 7031, column: 13, scope: !13150)
!13268 = !DILocation(line: 7031, column: 20, scope: !13150)
!13269 = !DILocation(line: 7031, column: 26, scope: !13150)
!13270 = !DILocation(line: 7031, column: 2, scope: !13150)
!13271 = !DILocation(line: 7032, column: 10, scope: !13150)
!13272 = !DILocation(line: 7032, column: 17, scope: !13150)
!13273 = !DILocation(line: 7032, column: 2, scope: !13150)
!13274 = !DILocation(line: 7034, column: 2, scope: !13150)
!13275 = !DILocation(line: 7034, column: 9, scope: !13150)
!13276 = !DILocation(line: 7034, column: 17, scope: !13150)
!13277 = !DILocation(line: 7036, column: 24, scope: !13150)
!13278 = !DILocation(line: 7036, column: 46, scope: !13150)
!13279 = !DILocation(line: 7036, column: 2, scope: !13150)
!13280 = !DILocation(line: 7038, column: 2, scope: !13150)
!13281 = distinct !DISubprogram(name: "match_texture_space_poll", scope: !3, file: !3, line: 6996, type: !13282, scopeLine: 6997, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!13282 = !DISubroutineType(types: !13283)
!13283 = !{!22, !3226}
!13284 = !DILocalVariable(name: "C", arg: 1, scope: !13281, file: !3, line: 6996, type: !3226)
!13285 = !DILocation(line: 6996, column: 47, scope: !13281)
!13286 = !DILocalVariable(name: "object", scope: !13281, file: !3, line: 6998, type: !3242)
!13287 = !DILocation(line: 6998, column: 10, scope: !13281)
!13288 = !DILocation(line: 6998, column: 42, scope: !13281)
!13289 = !DILocation(line: 6998, column: 19, scope: !13281)
!13290 = !DILocation(line: 7000, column: 9, scope: !13281)
!13291 = !DILocation(line: 7000, column: 16, scope: !13281)
!13292 = !DILocation(line: 7000, column: 19, scope: !13281)
!13293 = !DILocation(line: 0, scope: !13281)
!13294 = !DILocation(line: 7000, column: 2, scope: !13281)
!13295 = distinct !DISubprogram(name: "getCVKeyIndex", scope: !3, file: !3, line: 327, type: !13296, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!13296 = !DISubroutineType(types: !13297)
!13297 = !{!3503, !2962, !56}
!13298 = !DILocalVariable(name: "editnurb", arg: 1, scope: !13295, file: !3, line: 327, type: !2962)
!13299 = !DILocation(line: 327, column: 44, scope: !13295)
!13300 = !DILocalVariable(name: "cv", arg: 2, scope: !13295, file: !3, line: 327, type: !56)
!13301 = !DILocation(line: 327, column: 60, scope: !13295)
!13302 = !DILocation(line: 329, column: 26, scope: !13295)
!13303 = !DILocation(line: 329, column: 36, scope: !13295)
!13304 = !DILocation(line: 329, column: 46, scope: !13295)
!13305 = !DILocation(line: 329, column: 9, scope: !13295)
!13306 = !DILocation(line: 329, column: 2, scope: !13295)
!13307 = distinct !DISubprogram(name: "fcurve_path_rename", scope: !3, file: !3, line: 1002, type: !13308, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!13308 = !DISubroutineType(types: !13309)
!13309 = !{null, !3428, !12, !343, !486, !486}
!13310 = !DILocalVariable(name: "adt", arg: 1, scope: !13307, file: !3, line: 1002, type: !3428)
!13311 = !DILocation(line: 1002, column: 42, scope: !13307)
!13312 = !DILocalVariable(name: "orig_rna_path", arg: 2, scope: !13307, file: !3, line: 1002, type: !12)
!13313 = !DILocation(line: 1002, column: 59, scope: !13307)
!13314 = !DILocalVariable(name: "rna_path", arg: 3, scope: !13307, file: !3, line: 1002, type: !343)
!13315 = !DILocation(line: 1002, column: 80, scope: !13307)
!13316 = !DILocalVariable(name: "orig_curves", arg: 4, scope: !13307, file: !3, line: 1003, type: !486)
!13317 = !DILocation(line: 1003, column: 42, scope: !13307)
!13318 = !DILocalVariable(name: "curves", arg: 5, scope: !13307, file: !3, line: 1003, type: !486)
!13319 = !DILocation(line: 1003, column: 65, scope: !13307)
!13320 = !DILocalVariable(name: "fcu", scope: !13307, file: !3, line: 1005, type: !3527)
!13321 = !DILocation(line: 1005, column: 10, scope: !13307)
!13322 = !DILocalVariable(name: "nfcu", scope: !13307, file: !3, line: 1005, type: !3527)
!13323 = !DILocation(line: 1005, column: 16, scope: !13307)
!13324 = !DILocalVariable(name: "nextfcu", scope: !13307, file: !3, line: 1005, type: !3527)
!13325 = !DILocation(line: 1005, column: 23, scope: !13307)
!13326 = !DILocalVariable(name: "len", scope: !13307, file: !3, line: 1006, type: !22)
!13327 = !DILocation(line: 1006, column: 6, scope: !13307)
!13328 = !DILocation(line: 1006, column: 19, scope: !13307)
!13329 = !DILocation(line: 1006, column: 12, scope: !13307)
!13330 = !DILocation(line: 1008, column: 13, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13307, file: !3, line: 1008, column: 2)
!13332 = !DILocation(line: 1008, column: 26, scope: !13331)
!13333 = !DILocation(line: 1008, column: 11, scope: !13331)
!13334 = !DILocation(line: 1008, column: 7, scope: !13331)
!13335 = !DILocation(line: 1008, column: 33, scope: !13336)
!13336 = distinct !DILexicalBlock(scope: !13331, file: !3, line: 1008, column: 2)
!13337 = !DILocation(line: 1008, column: 2, scope: !13331)
!13338 = !DILocation(line: 1009, column: 13, scope: !13339)
!13339 = distinct !DILexicalBlock(scope: !13336, file: !3, line: 1008, column: 53)
!13340 = !DILocation(line: 1009, column: 18, scope: !13339)
!13341 = !DILocation(line: 1009, column: 11, scope: !13339)
!13342 = !DILocation(line: 1010, column: 16, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !13339, file: !3, line: 1010, column: 7)
!13344 = !DILocation(line: 1010, column: 21, scope: !13343)
!13345 = !DILocation(line: 1010, column: 31, scope: !13343)
!13346 = !DILocation(line: 1010, column: 46, scope: !13343)
!13347 = !DILocation(line: 1010, column: 8, scope: !13343)
!13348 = !DILocation(line: 1010, column: 7, scope: !13339)
!13349 = !DILocalVariable(name: "spath", scope: !13350, file: !3, line: 1011, type: !343)
!13350 = distinct !DILexicalBlock(scope: !13343, file: !3, line: 1010, column: 52)
!13351 = !DILocation(line: 1011, column: 10, scope: !13350)
!13352 = !DILocalVariable(name: "suffix", scope: !13350, file: !3, line: 1011, type: !343)
!13353 = !DILocation(line: 1011, column: 18, scope: !13350)
!13354 = !DILocation(line: 1011, column: 27, scope: !13350)
!13355 = !DILocation(line: 1011, column: 32, scope: !13350)
!13356 = !DILocation(line: 1011, column: 43, scope: !13350)
!13357 = !DILocation(line: 1011, column: 41, scope: !13350)
!13358 = !DILocation(line: 1012, column: 23, scope: !13350)
!13359 = !DILocation(line: 1012, column: 11, scope: !13350)
!13360 = !DILocation(line: 1012, column: 9, scope: !13350)
!13361 = !DILocation(line: 1013, column: 12, scope: !13350)
!13362 = !DILocation(line: 1013, column: 18, scope: !13350)
!13363 = !DILocation(line: 1013, column: 10, scope: !13350)
!13364 = !DILocation(line: 1014, column: 42, scope: !13350)
!13365 = !DILocation(line: 1014, column: 52, scope: !13350)
!13366 = !DILocation(line: 1014, column: 21, scope: !13350)
!13367 = !DILocation(line: 1014, column: 4, scope: !13350)
!13368 = !DILocation(line: 1014, column: 10, scope: !13350)
!13369 = !DILocation(line: 1014, column: 19, scope: !13350)
!13370 = !DILocation(line: 1015, column: 16, scope: !13350)
!13371 = !DILocation(line: 1015, column: 24, scope: !13350)
!13372 = !DILocation(line: 1015, column: 4, scope: !13350)
!13373 = !DILocation(line: 1017, column: 8, scope: !13374)
!13374 = distinct !DILexicalBlock(scope: !13350, file: !3, line: 1017, column: 8)
!13375 = !DILocation(line: 1017, column: 13, scope: !13374)
!13376 = !DILocation(line: 1017, column: 8, scope: !13350)
!13377 = !DILocation(line: 1018, column: 34, scope: !13378)
!13378 = distinct !DILexicalBlock(scope: !13374, file: !3, line: 1017, column: 18)
!13379 = !DILocation(line: 1018, column: 39, scope: !13378)
!13380 = !DILocation(line: 1018, column: 47, scope: !13378)
!13381 = !DILocation(line: 1018, column: 5, scope: !13378)
!13382 = !DILocation(line: 1019, column: 31, scope: !13378)
!13383 = !DILocation(line: 1019, column: 36, scope: !13378)
!13384 = !DILocation(line: 1019, column: 44, scope: !13378)
!13385 = !DILocation(line: 1019, column: 49, scope: !13378)
!13386 = !DILocation(line: 1019, column: 54, scope: !13378)
!13387 = !DILocation(line: 1019, column: 5, scope: !13378)
!13388 = !DILocation(line: 1020, column: 4, scope: !13378)
!13389 = !DILocation(line: 1021, column: 14, scope: !13390)
!13390 = distinct !DILexicalBlock(scope: !13374, file: !3, line: 1021, column: 13)
!13391 = !DILocation(line: 1021, column: 19, scope: !13390)
!13392 = !DILocation(line: 1021, column: 13, scope: !13390)
!13393 = !DILocation(line: 1021, column: 27, scope: !13390)
!13394 = !DILocation(line: 1021, column: 32, scope: !13390)
!13395 = !DILocation(line: 1021, column: 37, scope: !13390)
!13396 = !DILocation(line: 1021, column: 45, scope: !13390)
!13397 = !DILocation(line: 1021, column: 55, scope: !13390)
!13398 = !DILocation(line: 1021, column: 52, scope: !13390)
!13399 = !DILocation(line: 1021, column: 13, scope: !13374)
!13400 = !DILocation(line: 1022, column: 18, scope: !13390)
!13401 = !DILocation(line: 1022, column: 23, scope: !13390)
!13402 = !DILocation(line: 1022, column: 31, scope: !13390)
!13403 = !DILocation(line: 1022, column: 39, scope: !13390)
!13404 = !DILocation(line: 1022, column: 5, scope: !13390)
!13405 = !DILocation(line: 1024, column: 18, scope: !13390)
!13406 = !DILocation(line: 1024, column: 23, scope: !13390)
!13407 = !DILocation(line: 1024, column: 32, scope: !13390)
!13408 = !DILocation(line: 1024, column: 5, scope: !13390)
!13409 = !DILocation(line: 1026, column: 16, scope: !13350)
!13410 = !DILocation(line: 1026, column: 4, scope: !13350)
!13411 = !DILocation(line: 1028, column: 4, scope: !13350)
!13412 = !DILocation(line: 1028, column: 14, scope: !13350)
!13413 = !DILocation(line: 1029, column: 3, scope: !13350)
!13414 = !DILocation(line: 1030, column: 2, scope: !13339)
!13415 = !DILocation(line: 1008, column: 44, scope: !13336)
!13416 = !DILocation(line: 1008, column: 42, scope: !13336)
!13417 = !DILocation(line: 1008, column: 2, scope: !13336)
!13418 = distinct !{!13418, !13337, !13419}
!13419 = !DILocation(line: 1030, column: 2, scope: !13331)
!13420 = !DILocation(line: 1031, column: 1, scope: !13307)
!13421 = distinct !DISubprogram(name: "fcurve_remove", scope: !3, file: !3, line: 1033, type: !13422, scopeLine: 1034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!13422 = !DISubroutineType(types: !13423)
!13423 = !{null, !3428, !486, !3527}
!13424 = !DILocalVariable(name: "adt", arg: 1, scope: !13421, file: !3, line: 1033, type: !3428)
!13425 = !DILocation(line: 1033, column: 37, scope: !13421)
!13426 = !DILocalVariable(name: "orig_curves", arg: 2, scope: !13421, file: !3, line: 1033, type: !486)
!13427 = !DILocation(line: 1033, column: 52, scope: !13421)
!13428 = !DILocalVariable(name: "fcu", arg: 3, scope: !13421, file: !3, line: 1033, type: !3527)
!13429 = !DILocation(line: 1033, column: 73, scope: !13421)
!13430 = !DILocation(line: 1035, column: 6, scope: !13431)
!13431 = distinct !DILexicalBlock(scope: !13421, file: !3, line: 1035, column: 6)
!13432 = !DILocation(line: 1035, column: 22, scope: !13431)
!13433 = !DILocation(line: 1035, column: 27, scope: !13431)
!13434 = !DILocation(line: 1035, column: 18, scope: !13431)
!13435 = !DILocation(line: 1035, column: 6, scope: !13421)
!13436 = !DILocation(line: 1035, column: 49, scope: !13431)
!13437 = !DILocation(line: 1035, column: 54, scope: !13431)
!13438 = !DILocation(line: 1035, column: 63, scope: !13431)
!13439 = !DILocation(line: 1035, column: 36, scope: !13431)
!13440 = !DILocation(line: 1036, column: 36, scope: !13431)
!13441 = !DILocation(line: 1036, column: 41, scope: !13431)
!13442 = !DILocation(line: 1036, column: 49, scope: !13431)
!13443 = !DILocation(line: 1036, column: 7, scope: !13431)
!13444 = !DILocation(line: 1038, column: 14, scope: !13421)
!13445 = !DILocation(line: 1038, column: 2, scope: !13421)
!13446 = !DILocation(line: 1039, column: 1, scope: !13421)
!13447 = distinct !DISubprogram(name: "initialize_index_map", scope: !3, file: !3, line: 1168, type: !13448, scopeLine: 1169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!13448 = !DISubroutineType(types: !13449)
!13449 = !{!3150, !3242, !3150}
!13450 = !DILocalVariable(name: "obedit", arg: 1, scope: !13447, file: !3, line: 1168, type: !3242)
!13451 = !DILocation(line: 1168, column: 42, scope: !13447)
!13452 = !DILocalVariable(name: "r_old_totvert", arg: 2, scope: !13447, file: !3, line: 1168, type: !3150)
!13453 = !DILocation(line: 1168, column: 55, scope: !13447)
!13454 = !DILocalVariable(name: "curve", scope: !13447, file: !3, line: 1170, type: !2953)
!13455 = !DILocation(line: 1170, column: 9, scope: !13447)
!13456 = !DILocation(line: 1170, column: 27, scope: !13447)
!13457 = !DILocation(line: 1170, column: 35, scope: !13447)
!13458 = !DILocation(line: 1170, column: 17, scope: !13447)
!13459 = !DILocalVariable(name: "editnurb", scope: !13447, file: !3, line: 1171, type: !2962)
!13460 = !DILocation(line: 1171, column: 12, scope: !13447)
!13461 = !DILocation(line: 1171, column: 23, scope: !13447)
!13462 = !DILocation(line: 1171, column: 30, scope: !13447)
!13463 = !DILocalVariable(name: "nu", scope: !13447, file: !3, line: 1172, type: !3163)
!13464 = !DILocation(line: 1172, column: 8, scope: !13447)
!13465 = !DILocalVariable(name: "keyIndex", scope: !13447, file: !3, line: 1173, type: !3503)
!13466 = !DILocation(line: 1173, column: 14, scope: !13447)
!13467 = !DILocalVariable(name: "old_to_new_map", scope: !13447, file: !3, line: 1174, type: !3150)
!13468 = !DILocation(line: 1174, column: 7, scope: !13447)
!13469 = !DILocalVariable(name: "old_totvert", scope: !13447, file: !3, line: 1175, type: !22)
!13470 = !DILocation(line: 1175, column: 6, scope: !13447)
!13471 = !DILocalVariable(name: "i", scope: !13447, file: !3, line: 1175, type: !22)
!13472 = !DILocation(line: 1175, column: 19, scope: !13447)
!13473 = !DILocalVariable(name: "vertex_index", scope: !13447, file: !3, line: 1176, type: !22)
!13474 = !DILocation(line: 1176, column: 6, scope: !13447)
!13475 = !DILocation(line: 1178, column: 12, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13447, file: !3, line: 1178, column: 2)
!13477 = !DILocation(line: 1178, column: 19, scope: !13476)
!13478 = !DILocation(line: 1178, column: 24, scope: !13476)
!13479 = !DILocation(line: 1178, column: 10, scope: !13476)
!13480 = !DILocation(line: 1178, column: 43, scope: !13476)
!13481 = !DILocation(line: 1178, column: 7, scope: !13476)
!13482 = !DILocation(line: 1178, column: 48, scope: !13483)
!13483 = distinct !DILexicalBlock(scope: !13476, file: !3, line: 1178, column: 2)
!13484 = !DILocation(line: 1178, column: 51, scope: !13483)
!13485 = !DILocation(line: 1178, column: 2, scope: !13476)
!13486 = !DILocation(line: 1179, column: 7, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !13488, file: !3, line: 1179, column: 7)
!13488 = distinct !DILexicalBlock(scope: !13483, file: !3, line: 1178, column: 75)
!13489 = !DILocation(line: 1179, column: 11, scope: !13487)
!13490 = !DILocation(line: 1179, column: 7, scope: !13488)
!13491 = !DILocation(line: 1180, column: 19, scope: !13492)
!13492 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 1179, column: 17)
!13493 = !DILocation(line: 1180, column: 23, scope: !13492)
!13494 = !DILocation(line: 1180, column: 29, scope: !13492)
!13495 = !DILocation(line: 1180, column: 16, scope: !13492)
!13496 = !DILocation(line: 1181, column: 3, scope: !13492)
!13497 = !DILocation(line: 1183, column: 19, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 1182, column: 8)
!13499 = !DILocation(line: 1183, column: 23, scope: !13498)
!13500 = !DILocation(line: 1183, column: 31, scope: !13498)
!13501 = !DILocation(line: 1183, column: 35, scope: !13498)
!13502 = !DILocation(line: 1183, column: 29, scope: !13498)
!13503 = !DILocation(line: 1183, column: 16, scope: !13498)
!13504 = !DILocation(line: 1185, column: 2, scope: !13488)
!13505 = !DILocation(line: 1178, column: 65, scope: !13483)
!13506 = !DILocation(line: 1178, column: 69, scope: !13483)
!13507 = !DILocation(line: 1178, column: 63, scope: !13483)
!13508 = !DILocation(line: 1178, column: 2, scope: !13483)
!13509 = distinct !{!13509, !13485, !13510}
!13510 = !DILocation(line: 1185, column: 2, scope: !13476)
!13511 = !DILocation(line: 1187, column: 19, scope: !13447)
!13512 = !DILocation(line: 1187, column: 31, scope: !13447)
!13513 = !DILocation(line: 1187, column: 43, scope: !13447)
!13514 = !DILocation(line: 1187, column: 17, scope: !13447)
!13515 = !DILocation(line: 1188, column: 9, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13447, file: !3, line: 1188, column: 2)
!13517 = !DILocation(line: 1188, column: 7, scope: !13516)
!13518 = !DILocation(line: 1188, column: 14, scope: !13519)
!13519 = distinct !DILexicalBlock(scope: !13516, file: !3, line: 1188, column: 2)
!13520 = !DILocation(line: 1188, column: 18, scope: !13519)
!13521 = !DILocation(line: 1188, column: 16, scope: !13519)
!13522 = !DILocation(line: 1188, column: 2, scope: !13516)
!13523 = !DILocation(line: 1189, column: 3, scope: !13524)
!13524 = distinct !DILexicalBlock(scope: !13519, file: !3, line: 1188, column: 36)
!13525 = !DILocation(line: 1189, column: 18, scope: !13524)
!13526 = !DILocation(line: 1189, column: 21, scope: !13524)
!13527 = !DILocation(line: 1190, column: 2, scope: !13524)
!13528 = !DILocation(line: 1188, column: 32, scope: !13519)
!13529 = !DILocation(line: 1188, column: 2, scope: !13519)
!13530 = distinct !{!13530, !13522, !13531}
!13531 = !DILocation(line: 1190, column: 2, scope: !13516)
!13532 = !DILocation(line: 1192, column: 12, scope: !13533)
!13533 = distinct !DILexicalBlock(scope: !13447, file: !3, line: 1192, column: 2)
!13534 = !DILocation(line: 1192, column: 22, scope: !13533)
!13535 = !DILocation(line: 1192, column: 28, scope: !13533)
!13536 = !DILocation(line: 1192, column: 10, scope: !13533)
!13537 = !DILocation(line: 1192, column: 48, scope: !13533)
!13538 = !DILocation(line: 1192, column: 7, scope: !13533)
!13539 = !DILocation(line: 1193, column: 7, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13533, file: !3, line: 1192, column: 2)
!13541 = !DILocation(line: 1193, column: 10, scope: !13540)
!13542 = !DILocation(line: 1192, column: 2, scope: !13533)
!13543 = !DILocation(line: 1196, column: 7, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13545, file: !3, line: 1196, column: 7)
!13545 = distinct !DILexicalBlock(scope: !13540, file: !3, line: 1195, column: 2)
!13546 = !DILocation(line: 1196, column: 11, scope: !13544)
!13547 = !DILocation(line: 1196, column: 7, scope: !13545)
!13548 = !DILocalVariable(name: "bezt", scope: !13549, file: !3, line: 1197, type: !3104)
!13549 = distinct !DILexicalBlock(scope: !13544, file: !3, line: 1196, column: 17)
!13550 = !DILocation(line: 1197, column: 15, scope: !13549)
!13551 = !DILocation(line: 1197, column: 22, scope: !13549)
!13552 = !DILocation(line: 1197, column: 26, scope: !13549)
!13553 = !DILocalVariable(name: "a", scope: !13549, file: !3, line: 1198, type: !22)
!13554 = !DILocation(line: 1198, column: 8, scope: !13549)
!13555 = !DILocation(line: 1198, column: 12, scope: !13549)
!13556 = !DILocation(line: 1198, column: 16, scope: !13549)
!13557 = !DILocation(line: 1200, column: 4, scope: !13549)
!13558 = !DILocation(line: 1200, column: 12, scope: !13549)
!13559 = !DILocation(line: 1201, column: 30, scope: !13560)
!13560 = distinct !DILexicalBlock(scope: !13549, file: !3, line: 1200, column: 16)
!13561 = !DILocation(line: 1201, column: 40, scope: !13560)
!13562 = !DILocation(line: 1201, column: 16, scope: !13560)
!13563 = !DILocation(line: 1201, column: 14, scope: !13560)
!13564 = !DILocation(line: 1202, column: 9, scope: !13565)
!13565 = distinct !DILexicalBlock(scope: !13560, file: !3, line: 1202, column: 9)
!13566 = !DILocation(line: 1202, column: 9, scope: !13560)
!13567 = !DILocation(line: 1203, column: 10, scope: !13568)
!13568 = distinct !DILexicalBlock(scope: !13569, file: !3, line: 1203, column: 10)
!13569 = distinct !DILexicalBlock(scope: !13565, file: !3, line: 1202, column: 19)
!13570 = !DILocation(line: 1203, column: 20, scope: !13568)
!13571 = !DILocation(line: 1203, column: 10, scope: !13569)
!13572 = !DILocation(line: 1204, column: 48, scope: !13573)
!13573 = distinct !DILexicalBlock(scope: !13568, file: !3, line: 1203, column: 30)
!13574 = !DILocation(line: 1204, column: 61, scope: !13573)
!13575 = !DILocation(line: 1204, column: 7, scope: !13573)
!13576 = !DILocation(line: 1204, column: 22, scope: !13573)
!13577 = !DILocation(line: 1204, column: 32, scope: !13573)
!13578 = !DILocation(line: 1204, column: 46, scope: !13573)
!13579 = !DILocation(line: 1205, column: 52, scope: !13573)
!13580 = !DILocation(line: 1205, column: 65, scope: !13573)
!13581 = !DILocation(line: 1205, column: 7, scope: !13573)
!13582 = !DILocation(line: 1205, column: 22, scope: !13573)
!13583 = !DILocation(line: 1205, column: 32, scope: !13573)
!13584 = !DILocation(line: 1205, column: 45, scope: !13573)
!13585 = !DILocation(line: 1205, column: 50, scope: !13573)
!13586 = !DILocation(line: 1206, column: 52, scope: !13573)
!13587 = !DILocation(line: 1206, column: 7, scope: !13573)
!13588 = !DILocation(line: 1206, column: 22, scope: !13573)
!13589 = !DILocation(line: 1206, column: 32, scope: !13573)
!13590 = !DILocation(line: 1206, column: 45, scope: !13573)
!13591 = !DILocation(line: 1206, column: 50, scope: !13573)
!13592 = !DILocation(line: 1207, column: 6, scope: !13573)
!13593 = !DILocation(line: 1209, column: 48, scope: !13594)
!13594 = distinct !DILexicalBlock(scope: !13568, file: !3, line: 1208, column: 11)
!13595 = !DILocation(line: 1209, column: 7, scope: !13594)
!13596 = !DILocation(line: 1209, column: 22, scope: !13594)
!13597 = !DILocation(line: 1209, column: 32, scope: !13594)
!13598 = !DILocation(line: 1209, column: 46, scope: !13594)
!13599 = !DILocation(line: 1210, column: 52, scope: !13594)
!13600 = !DILocation(line: 1210, column: 65, scope: !13594)
!13601 = !DILocation(line: 1210, column: 7, scope: !13594)
!13602 = !DILocation(line: 1210, column: 22, scope: !13594)
!13603 = !DILocation(line: 1210, column: 32, scope: !13594)
!13604 = !DILocation(line: 1210, column: 45, scope: !13594)
!13605 = !DILocation(line: 1210, column: 50, scope: !13594)
!13606 = !DILocation(line: 1211, column: 52, scope: !13594)
!13607 = !DILocation(line: 1211, column: 65, scope: !13594)
!13608 = !DILocation(line: 1211, column: 7, scope: !13594)
!13609 = !DILocation(line: 1211, column: 22, scope: !13594)
!13610 = !DILocation(line: 1211, column: 32, scope: !13594)
!13611 = !DILocation(line: 1211, column: 45, scope: !13594)
!13612 = !DILocation(line: 1211, column: 50, scope: !13594)
!13613 = !DILocation(line: 1213, column: 5, scope: !13569)
!13614 = !DILocation(line: 1214, column: 18, scope: !13560)
!13615 = !DILocation(line: 1215, column: 9, scope: !13560)
!13616 = distinct !{!13616, !13557, !13617}
!13617 = !DILocation(line: 1216, column: 4, scope: !13549)
!13618 = !DILocation(line: 1217, column: 3, scope: !13549)
!13619 = !DILocalVariable(name: "bp", scope: !13620, file: !3, line: 1219, type: !3093)
!13620 = distinct !DILexicalBlock(scope: !13544, file: !3, line: 1218, column: 8)
!13621 = !DILocation(line: 1219, column: 12, scope: !13620)
!13622 = !DILocation(line: 1219, column: 17, scope: !13620)
!13623 = !DILocation(line: 1219, column: 21, scope: !13620)
!13624 = !DILocalVariable(name: "a", scope: !13620, file: !3, line: 1220, type: !22)
!13625 = !DILocation(line: 1220, column: 8, scope: !13620)
!13626 = !DILocation(line: 1220, column: 12, scope: !13620)
!13627 = !DILocation(line: 1220, column: 16, scope: !13620)
!13628 = !DILocation(line: 1220, column: 24, scope: !13620)
!13629 = !DILocation(line: 1220, column: 28, scope: !13620)
!13630 = !DILocation(line: 1220, column: 22, scope: !13620)
!13631 = !DILocation(line: 1222, column: 4, scope: !13620)
!13632 = !DILocation(line: 1222, column: 12, scope: !13620)
!13633 = !DILocation(line: 1223, column: 30, scope: !13634)
!13634 = distinct !DILexicalBlock(scope: !13620, file: !3, line: 1222, column: 16)
!13635 = !DILocation(line: 1223, column: 40, scope: !13634)
!13636 = !DILocation(line: 1223, column: 16, scope: !13634)
!13637 = !DILocation(line: 1223, column: 14, scope: !13634)
!13638 = !DILocation(line: 1224, column: 9, scope: !13639)
!13639 = distinct !DILexicalBlock(scope: !13634, file: !3, line: 1224, column: 9)
!13640 = !DILocation(line: 1224, column: 9, scope: !13634)
!13641 = !DILocation(line: 1225, column: 47, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13639, file: !3, line: 1224, column: 19)
!13643 = !DILocation(line: 1225, column: 6, scope: !13642)
!13644 = !DILocation(line: 1225, column: 21, scope: !13642)
!13645 = !DILocation(line: 1225, column: 31, scope: !13642)
!13646 = !DILocation(line: 1225, column: 45, scope: !13642)
!13647 = !DILocation(line: 1226, column: 5, scope: !13642)
!13648 = !DILocation(line: 1227, column: 17, scope: !13634)
!13649 = !DILocation(line: 1228, column: 7, scope: !13634)
!13650 = distinct !{!13650, !13631, !13651}
!13651 = !DILocation(line: 1229, column: 4, scope: !13620)
!13652 = !DILocation(line: 1231, column: 2, scope: !13545)
!13653 = !DILocation(line: 1194, column: 12, scope: !13540)
!13654 = !DILocation(line: 1194, column: 16, scope: !13540)
!13655 = !DILocation(line: 1194, column: 10, scope: !13540)
!13656 = !DILocation(line: 1192, column: 2, scope: !13540)
!13657 = distinct !{!13657, !13542, !13658}
!13658 = !DILocation(line: 1231, column: 2, scope: !13533)
!13659 = !DILocation(line: 1233, column: 19, scope: !13447)
!13660 = !DILocation(line: 1233, column: 3, scope: !13447)
!13661 = !DILocation(line: 1233, column: 17, scope: !13447)
!13662 = !DILocation(line: 1234, column: 9, scope: !13447)
!13663 = !DILocation(line: 1234, column: 2, scope: !13447)
!13664 = distinct !DISubprogram(name: "getKeyIndexOrig_bezt", scope: !3, file: !3, line: 337, type: !13665, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!13665 = !DISubroutineType(types: !13666)
!13666 = !{!3104, !2962, !3104}
!13667 = !DILocalVariable(name: "editnurb", arg: 1, scope: !13664, file: !3, line: 337, type: !2962)
!13668 = !DILocation(line: 337, column: 50, scope: !13664)
!13669 = !DILocalVariable(name: "bezt", arg: 2, scope: !13664, file: !3, line: 337, type: !3104)
!13670 = !DILocation(line: 337, column: 71, scope: !13664)
!13671 = !DILocalVariable(name: "index", scope: !13664, file: !3, line: 339, type: !3503)
!13672 = !DILocation(line: 339, column: 14, scope: !13664)
!13673 = !DILocation(line: 339, column: 36, scope: !13664)
!13674 = !DILocation(line: 339, column: 46, scope: !13664)
!13675 = !DILocation(line: 339, column: 22, scope: !13664)
!13676 = !DILocation(line: 341, column: 7, scope: !13677)
!13677 = distinct !DILexicalBlock(scope: !13664, file: !3, line: 341, column: 6)
!13678 = !DILocation(line: 341, column: 6, scope: !13664)
!13679 = !DILocation(line: 342, column: 3, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13677, file: !3, line: 341, column: 14)
!13681 = !DILocation(line: 345, column: 22, scope: !13664)
!13682 = !DILocation(line: 345, column: 29, scope: !13664)
!13683 = !DILocation(line: 345, column: 9, scope: !13664)
!13684 = !DILocation(line: 345, column: 2, scope: !13664)
!13685 = !DILocation(line: 346, column: 1, scope: !13664)
!13686 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !5794, file: !5794, line: 357, type: !13687, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!13687 = !DISubroutineType(types: !13688)
!13688 = !{null, !3154, !4638, !4638}
!13689 = !DILocalVariable(name: "r", arg: 1, scope: !13686, file: !5794, line: 357, type: !3154)
!13690 = !DILocation(line: 357, column: 32, scope: !13686)
!13691 = !DILocalVariable(name: "a", arg: 2, scope: !13686, file: !5794, line: 357, type: !4638)
!13692 = !DILocation(line: 357, column: 50, scope: !13686)
!13693 = !DILocalVariable(name: "b", arg: 3, scope: !13686, file: !5794, line: 357, type: !4638)
!13694 = !DILocation(line: 357, column: 68, scope: !13686)
!13695 = !DILocation(line: 359, column: 9, scope: !13686)
!13696 = !DILocation(line: 359, column: 16, scope: !13686)
!13697 = !DILocation(line: 359, column: 14, scope: !13686)
!13698 = !DILocation(line: 359, column: 2, scope: !13686)
!13699 = !DILocation(line: 359, column: 7, scope: !13686)
!13700 = !DILocation(line: 360, column: 9, scope: !13686)
!13701 = !DILocation(line: 360, column: 16, scope: !13686)
!13702 = !DILocation(line: 360, column: 14, scope: !13686)
!13703 = !DILocation(line: 360, column: 2, scope: !13686)
!13704 = !DILocation(line: 360, column: 7, scope: !13686)
!13705 = !DILocation(line: 361, column: 9, scope: !13686)
!13706 = !DILocation(line: 361, column: 16, scope: !13686)
!13707 = !DILocation(line: 361, column: 14, scope: !13686)
!13708 = !DILocation(line: 361, column: 2, scope: !13686)
!13709 = !DILocation(line: 361, column: 7, scope: !13686)
!13710 = !DILocation(line: 362, column: 1, scope: !13686)
!13711 = distinct !DISubprogram(name: "getKeyIndexOrig_bp", scope: !3, file: !3, line: 348, type: !13712, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!13712 = !DISubroutineType(types: !13713)
!13713 = !{!3093, !2962, !3093}
!13714 = !DILocalVariable(name: "editnurb", arg: 1, scope: !13711, file: !3, line: 348, type: !2962)
!13715 = !DILocation(line: 348, column: 45, scope: !13711)
!13716 = !DILocalVariable(name: "bp", arg: 2, scope: !13711, file: !3, line: 348, type: !3093)
!13717 = !DILocation(line: 348, column: 63, scope: !13711)
!13718 = !DILocalVariable(name: "index", scope: !13711, file: !3, line: 350, type: !3503)
!13719 = !DILocation(line: 350, column: 14, scope: !13711)
!13720 = !DILocation(line: 350, column: 36, scope: !13711)
!13721 = !DILocation(line: 350, column: 46, scope: !13711)
!13722 = !DILocation(line: 350, column: 22, scope: !13711)
!13723 = !DILocation(line: 352, column: 7, scope: !13724)
!13724 = distinct !DILexicalBlock(scope: !13711, file: !3, line: 352, column: 6)
!13725 = !DILocation(line: 352, column: 6, scope: !13711)
!13726 = !DILocation(line: 353, column: 3, scope: !13727)
!13727 = distinct !DILexicalBlock(scope: !13724, file: !3, line: 352, column: 14)
!13728 = !DILocation(line: 356, column: 19, scope: !13711)
!13729 = !DILocation(line: 356, column: 26, scope: !13711)
!13730 = !DILocation(line: 356, column: 9, scope: !13711)
!13731 = !DILocation(line: 356, column: 2, scope: !13711)
!13732 = !DILocation(line: 357, column: 1, scope: !13711)
!13733 = distinct !DISubprogram(name: "getKeyIndexOrig_keyIndex", scope: !3, file: !3, line: 359, type: !13734, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!13734 = !DISubroutineType(types: !13735)
!13735 = !{!22, !2962, !56}
!13736 = !DILocalVariable(name: "editnurb", arg: 1, scope: !13733, file: !3, line: 359, type: !2962)
!13737 = !DILocation(line: 359, column: 47, scope: !13733)
!13738 = !DILocalVariable(name: "cv", arg: 2, scope: !13733, file: !3, line: 359, type: !56)
!13739 = !DILocation(line: 359, column: 63, scope: !13733)
!13740 = !DILocalVariable(name: "index", scope: !13733, file: !3, line: 361, type: !3503)
!13741 = !DILocation(line: 361, column: 14, scope: !13733)
!13742 = !DILocation(line: 361, column: 36, scope: !13733)
!13743 = !DILocation(line: 361, column: 46, scope: !13733)
!13744 = !DILocation(line: 361, column: 22, scope: !13733)
!13745 = !DILocation(line: 363, column: 7, scope: !13746)
!13746 = distinct !DILexicalBlock(scope: !13733, file: !3, line: 363, column: 6)
!13747 = !DILocation(line: 363, column: 6, scope: !13733)
!13748 = !DILocation(line: 364, column: 3, scope: !13749)
!13749 = distinct !DILexicalBlock(scope: !13746, file: !3, line: 363, column: 14)
!13750 = !DILocation(line: 367, column: 9, scope: !13733)
!13751 = !DILocation(line: 367, column: 16, scope: !13733)
!13752 = !DILocation(line: 367, column: 2, scope: !13733)
!13753 = !DILocation(line: 368, column: 1, scope: !13733)
!13754 = distinct !DISubprogram(name: "calc_keyHandles", scope: !3, file: !3, line: 680, type: !13755, scopeLine: 681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!13755 = !DISubroutineType(types: !13756)
!13756 = !{null, !486, !3154}
!13757 = !DILocalVariable(name: "nurb", arg: 1, scope: !13754, file: !3, line: 680, type: !486)
!13758 = !DILocation(line: 680, column: 39, scope: !13754)
!13759 = !DILocalVariable(name: "key", arg: 2, scope: !13754, file: !3, line: 680, type: !3154)
!13760 = !DILocation(line: 680, column: 52, scope: !13754)
!13761 = !DILocalVariable(name: "nu", scope: !13754, file: !3, line: 682, type: !3163)
!13762 = !DILocation(line: 682, column: 8, scope: !13754)
!13763 = !DILocalVariable(name: "a", scope: !13754, file: !3, line: 683, type: !22)
!13764 = !DILocation(line: 683, column: 6, scope: !13754)
!13765 = !DILocalVariable(name: "fp", scope: !13754, file: !3, line: 684, type: !3154)
!13766 = !DILocation(line: 684, column: 9, scope: !13754)
!13767 = !DILocation(line: 684, column: 14, scope: !13754)
!13768 = !DILocalVariable(name: "bezt", scope: !13754, file: !3, line: 685, type: !3104)
!13769 = !DILocation(line: 685, column: 13, scope: !13754)
!13770 = !DILocation(line: 687, column: 7, scope: !13754)
!13771 = !DILocation(line: 687, column: 13, scope: !13754)
!13772 = !DILocation(line: 687, column: 5, scope: !13754)
!13773 = !DILocation(line: 688, column: 2, scope: !13754)
!13774 = !DILocation(line: 688, column: 9, scope: !13754)
!13775 = !DILocation(line: 689, column: 7, scope: !13776)
!13776 = distinct !DILexicalBlock(scope: !13777, file: !3, line: 689, column: 7)
!13777 = distinct !DILexicalBlock(scope: !13754, file: !3, line: 688, column: 13)
!13778 = !DILocation(line: 689, column: 11, scope: !13776)
!13779 = !DILocation(line: 689, column: 7, scope: !13777)
!13780 = !DILocalVariable(name: "prevp", scope: !13781, file: !3, line: 690, type: !3104)
!13781 = distinct !DILexicalBlock(scope: !13776, file: !3, line: 689, column: 17)
!13782 = !DILocation(line: 690, column: 15, scope: !13781)
!13783 = !DILocalVariable(name: "nextp", scope: !13781, file: !3, line: 690, type: !3104)
!13784 = !DILocation(line: 690, column: 23, scope: !13781)
!13785 = !DILocalVariable(name: "cur", scope: !13781, file: !3, line: 691, type: !3105)
!13786 = !DILocation(line: 691, column: 14, scope: !13781)
!13787 = !DILocalVariable(name: "prev", scope: !13781, file: !3, line: 691, type: !3105)
!13788 = !DILocation(line: 691, column: 19, scope: !13781)
!13789 = !DILocalVariable(name: "next", scope: !13781, file: !3, line: 691, type: !3105)
!13790 = !DILocation(line: 691, column: 25, scope: !13781)
!13791 = !DILocalVariable(name: "startfp", scope: !13781, file: !3, line: 692, type: !3154)
!13792 = !DILocation(line: 692, column: 11, scope: !13781)
!13793 = !DILocalVariable(name: "prevfp", scope: !13781, file: !3, line: 692, type: !3154)
!13794 = !DILocation(line: 692, column: 21, scope: !13781)
!13795 = !DILocalVariable(name: "nextfp", scope: !13781, file: !3, line: 692, type: !3154)
!13796 = !DILocation(line: 692, column: 30, scope: !13781)
!13797 = !DILocation(line: 694, column: 11, scope: !13781)
!13798 = !DILocation(line: 694, column: 15, scope: !13781)
!13799 = !DILocation(line: 694, column: 9, scope: !13781)
!13800 = !DILocation(line: 695, column: 8, scope: !13781)
!13801 = !DILocation(line: 695, column: 12, scope: !13781)
!13802 = !DILocation(line: 695, column: 6, scope: !13781)
!13803 = !DILocation(line: 696, column: 14, scope: !13781)
!13804 = !DILocation(line: 696, column: 12, scope: !13781)
!13805 = !DILocation(line: 698, column: 8, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13781, file: !3, line: 698, column: 8)
!13807 = !DILocation(line: 698, column: 12, scope: !13806)
!13808 = !DILocation(line: 698, column: 18, scope: !13806)
!13809 = !DILocation(line: 698, column: 8, scope: !13781)
!13810 = !DILocation(line: 699, column: 13, scope: !13811)
!13811 = distinct !DILexicalBlock(scope: !13806, file: !3, line: 698, column: 36)
!13812 = !DILocation(line: 699, column: 21, scope: !13811)
!13813 = !DILocation(line: 699, column: 23, scope: !13811)
!13814 = !DILocation(line: 699, column: 18, scope: !13811)
!13815 = !DILocation(line: 699, column: 11, scope: !13811)
!13816 = !DILocation(line: 700, column: 14, scope: !13811)
!13817 = !DILocation(line: 700, column: 26, scope: !13811)
!13818 = !DILocation(line: 700, column: 28, scope: !13811)
!13819 = !DILocation(line: 700, column: 23, scope: !13811)
!13820 = !DILocation(line: 700, column: 17, scope: !13811)
!13821 = !DILocation(line: 700, column: 12, scope: !13811)
!13822 = !DILocation(line: 701, column: 4, scope: !13811)
!13823 = !DILocation(line: 703, column: 11, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13806, file: !3, line: 702, column: 9)
!13825 = !DILocation(line: 704, column: 12, scope: !13824)
!13826 = !DILocation(line: 707, column: 12, scope: !13781)
!13827 = !DILocation(line: 707, column: 17, scope: !13781)
!13828 = !DILocation(line: 707, column: 10, scope: !13781)
!13829 = !DILocation(line: 708, column: 13, scope: !13781)
!13830 = !DILocation(line: 708, column: 16, scope: !13781)
!13831 = !DILocation(line: 708, column: 11, scope: !13781)
!13832 = !DILocation(line: 710, column: 4, scope: !13781)
!13833 = !DILocation(line: 710, column: 12, scope: !13781)
!13834 = !DILocation(line: 711, column: 17, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13781, file: !3, line: 710, column: 16)
!13836 = !DILocation(line: 711, column: 21, scope: !13835)
!13837 = !DILocation(line: 711, column: 5, scope: !13835)
!13838 = !DILocation(line: 713, column: 9, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13835, file: !3, line: 713, column: 9)
!13840 = !DILocation(line: 713, column: 9, scope: !13835)
!13841 = !DILocation(line: 713, column: 28, scope: !13839)
!13842 = !DILocation(line: 713, column: 36, scope: !13839)
!13843 = !DILocation(line: 713, column: 16, scope: !13839)
!13844 = !DILocation(line: 714, column: 9, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !13835, file: !3, line: 714, column: 9)
!13846 = !DILocation(line: 714, column: 9, scope: !13835)
!13847 = !DILocation(line: 714, column: 28, scope: !13845)
!13848 = !DILocation(line: 714, column: 36, scope: !13845)
!13849 = !DILocation(line: 714, column: 16, scope: !13845)
!13850 = !DILocation(line: 716, column: 32, scope: !13835)
!13851 = !DILocation(line: 716, column: 54, scope: !13835)
!13852 = !DILocation(line: 716, column: 5, scope: !13835)
!13853 = !DILocation(line: 717, column: 23, scope: !13835)
!13854 = !DILocation(line: 717, column: 5, scope: !13835)
!13855 = !DILocation(line: 719, column: 13, scope: !13835)
!13856 = !DILocation(line: 719, column: 11, scope: !13835)
!13857 = !DILocation(line: 720, column: 14, scope: !13835)
!13858 = !DILocation(line: 720, column: 12, scope: !13835)
!13859 = !DILocation(line: 721, column: 9, scope: !13860)
!13860 = distinct !DILexicalBlock(scope: !13835, file: !3, line: 721, column: 9)
!13861 = !DILocation(line: 721, column: 11, scope: !13860)
!13862 = !DILocation(line: 721, column: 9, scope: !13835)
!13863 = !DILocation(line: 722, column: 10, scope: !13864)
!13864 = distinct !DILexicalBlock(scope: !13865, file: !3, line: 722, column: 10)
!13865 = distinct !DILexicalBlock(scope: !13860, file: !3, line: 721, column: 17)
!13866 = !DILocation(line: 722, column: 14, scope: !13864)
!13867 = !DILocation(line: 722, column: 20, scope: !13864)
!13868 = !DILocation(line: 722, column: 10, scope: !13865)
!13869 = !DILocation(line: 723, column: 15, scope: !13870)
!13870 = distinct !DILexicalBlock(scope: !13864, file: !3, line: 722, column: 38)
!13871 = !DILocation(line: 723, column: 19, scope: !13870)
!13872 = !DILocation(line: 723, column: 13, scope: !13870)
!13873 = !DILocation(line: 724, column: 16, scope: !13870)
!13874 = !DILocation(line: 724, column: 14, scope: !13870)
!13875 = !DILocation(line: 725, column: 6, scope: !13870)
!13876 = !DILocation(line: 727, column: 13, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !13864, file: !3, line: 726, column: 11)
!13878 = !DILocation(line: 728, column: 14, scope: !13877)
!13879 = !DILocation(line: 730, column: 5, scope: !13865)
!13880 = !DILocation(line: 732, column: 11, scope: !13881)
!13881 = distinct !DILexicalBlock(scope: !13860, file: !3, line: 731, column: 10)
!13882 = !DILocation(line: 733, column: 13, scope: !13881)
!13883 = !DILocation(line: 736, column: 9, scope: !13835)
!13884 = !DILocation(line: 737, column: 8, scope: !13835)
!13885 = distinct !{!13885, !13832, !13886}
!13886 = !DILocation(line: 738, column: 4, scope: !13781)
!13887 = !DILocation(line: 739, column: 3, scope: !13781)
!13888 = !DILocation(line: 741, column: 8, scope: !13889)
!13889 = distinct !DILexicalBlock(scope: !13776, file: !3, line: 740, column: 8)
!13890 = !DILocation(line: 741, column: 12, scope: !13889)
!13891 = !DILocation(line: 741, column: 20, scope: !13889)
!13892 = !DILocation(line: 741, column: 24, scope: !13889)
!13893 = !DILocation(line: 741, column: 18, scope: !13889)
!13894 = !DILocation(line: 741, column: 6, scope: !13889)
!13895 = !DILocation(line: 742, column: 10, scope: !13889)
!13896 = !DILocation(line: 742, column: 12, scope: !13889)
!13897 = !DILocation(line: 742, column: 7, scope: !13889)
!13898 = !DILocation(line: 745, column: 8, scope: !13777)
!13899 = !DILocation(line: 745, column: 12, scope: !13777)
!13900 = !DILocation(line: 745, column: 6, scope: !13777)
!13901 = distinct !{!13901, !13773, !13902}
!13902 = !DILocation(line: 746, column: 2, scope: !13754)
!13903 = !DILocation(line: 747, column: 1, scope: !13754)
!13904 = distinct !DISubprogram(name: "key_to_bezt", scope: !3, file: !3, line: 667, type: !13905, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!13905 = !DISubroutineType(types: !13906)
!13906 = !{null, !3154, !3104, !3104}
!13907 = !DILocalVariable(name: "key", arg: 1, scope: !13904, file: !3, line: 667, type: !3154)
!13908 = !DILocation(line: 667, column: 32, scope: !13904)
!13909 = !DILocalVariable(name: "basebezt", arg: 2, scope: !13904, file: !3, line: 667, type: !3104)
!13910 = !DILocation(line: 667, column: 48, scope: !13904)
!13911 = !DILocalVariable(name: "bezt", arg: 3, scope: !13904, file: !3, line: 667, type: !3104)
!13912 = !DILocation(line: 667, column: 69, scope: !13904)
!13913 = !DILocation(line: 669, column: 9, scope: !13904)
!13914 = !DILocation(line: 669, column: 2, scope: !13904)
!13915 = !DILocation(line: 669, column: 15, scope: !13904)
!13916 = !DILocation(line: 670, column: 9, scope: !13904)
!13917 = !DILocation(line: 670, column: 15, scope: !13904)
!13918 = !DILocation(line: 670, column: 2, scope: !13904)
!13919 = !DILocation(line: 670, column: 20, scope: !13904)
!13920 = !DILocation(line: 671, column: 15, scope: !13904)
!13921 = !DILocation(line: 671, column: 2, scope: !13904)
!13922 = !DILocation(line: 671, column: 8, scope: !13904)
!13923 = !DILocation(line: 671, column: 13, scope: !13904)
!13924 = !DILocation(line: 672, column: 1, scope: !13904)
!13925 = distinct !DISubprogram(name: "bezt_to_key", scope: !3, file: !3, line: 674, type: !13926, scopeLine: 675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!13926 = !DISubroutineType(types: !13927)
!13927 = !{null, !3104, !3154}
!13928 = !DILocalVariable(name: "bezt", arg: 1, scope: !13925, file: !3, line: 674, type: !3104)
!13929 = !DILocation(line: 674, column: 36, scope: !13925)
!13930 = !DILocalVariable(name: "key", arg: 2, scope: !13925, file: !3, line: 674, type: !3154)
!13931 = !DILocation(line: 674, column: 49, scope: !13925)
!13932 = !DILocation(line: 676, column: 9, scope: !13925)
!13933 = !DILocation(line: 676, column: 2, scope: !13925)
!13934 = !DILocation(line: 676, column: 14, scope: !13925)
!13935 = !DILocation(line: 676, column: 20, scope: !13925)
!13936 = !DILocation(line: 677, column: 11, scope: !13925)
!13937 = !DILocation(line: 677, column: 17, scope: !13925)
!13938 = !DILocation(line: 677, column: 2, scope: !13925)
!13939 = !DILocation(line: 677, column: 9, scope: !13925)
!13940 = !DILocation(line: 678, column: 1, scope: !13925)
!13941 = distinct !DISubprogram(name: "init_cvKeyIndex", scope: !3, file: !3, line: 258, type: !13942, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!13942 = !DISubroutineType(types: !13943)
!13943 = !{!3503, !56, !22, !22, !22, !22, !3163}
!13944 = !DILocalVariable(name: "cv", arg: 1, scope: !13941, file: !3, line: 258, type: !56)
!13945 = !DILocation(line: 258, column: 42, scope: !13941)
!13946 = !DILocalVariable(name: "key_index", arg: 2, scope: !13941, file: !3, line: 258, type: !22)
!13947 = !DILocation(line: 258, column: 50, scope: !13941)
!13948 = !DILocalVariable(name: "nu_index", arg: 3, scope: !13941, file: !3, line: 258, type: !22)
!13949 = !DILocation(line: 258, column: 65, scope: !13941)
!13950 = !DILocalVariable(name: "pt_index", arg: 4, scope: !13941, file: !3, line: 258, type: !22)
!13951 = !DILocation(line: 258, column: 79, scope: !13941)
!13952 = !DILocalVariable(name: "vertex_index", arg: 5, scope: !13941, file: !3, line: 258, type: !22)
!13953 = !DILocation(line: 258, column: 93, scope: !13941)
!13954 = !DILocalVariable(name: "orig_nu", arg: 6, scope: !13941, file: !3, line: 258, type: !3163)
!13955 = !DILocation(line: 258, column: 113, scope: !13941)
!13956 = !DILocalVariable(name: "cvIndex", scope: !13941, file: !3, line: 260, type: !3503)
!13957 = !DILocation(line: 260, column: 14, scope: !13941)
!13958 = !DILocation(line: 260, column: 24, scope: !13941)
!13959 = !DILocation(line: 262, column: 21, scope: !13941)
!13960 = !DILocation(line: 262, column: 2, scope: !13941)
!13961 = !DILocation(line: 262, column: 11, scope: !13941)
!13962 = !DILocation(line: 262, column: 19, scope: !13941)
!13963 = !DILocation(line: 263, column: 23, scope: !13941)
!13964 = !DILocation(line: 263, column: 2, scope: !13941)
!13965 = !DILocation(line: 263, column: 11, scope: !13941)
!13966 = !DILocation(line: 263, column: 21, scope: !13941)
!13967 = !DILocation(line: 264, column: 22, scope: !13941)
!13968 = !DILocation(line: 264, column: 2, scope: !13941)
!13969 = !DILocation(line: 264, column: 11, scope: !13941)
!13970 = !DILocation(line: 264, column: 20, scope: !13941)
!13971 = !DILocation(line: 265, column: 22, scope: !13941)
!13972 = !DILocation(line: 265, column: 2, scope: !13941)
!13973 = !DILocation(line: 265, column: 11, scope: !13941)
!13974 = !DILocation(line: 265, column: 20, scope: !13941)
!13975 = !DILocation(line: 266, column: 26, scope: !13941)
!13976 = !DILocation(line: 266, column: 2, scope: !13941)
!13977 = !DILocation(line: 266, column: 11, scope: !13941)
!13978 = !DILocation(line: 266, column: 24, scope: !13941)
!13979 = !DILocation(line: 267, column: 2, scope: !13941)
!13980 = !DILocation(line: 267, column: 11, scope: !13941)
!13981 = !DILocation(line: 267, column: 20, scope: !13941)
!13982 = !DILocation(line: 268, column: 21, scope: !13941)
!13983 = !DILocation(line: 268, column: 2, scope: !13941)
!13984 = !DILocation(line: 268, column: 11, scope: !13941)
!13985 = !DILocation(line: 268, column: 19, scope: !13941)
!13986 = !DILocation(line: 270, column: 9, scope: !13941)
!13987 = !DILocation(line: 270, column: 2, scope: !13941)
!13988 = distinct !DISubprogram(name: "adduplicateflagNurb", scope: !3, file: !3, line: 2137, type: !13989, scopeLine: 2139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!13989 = !DISubroutineType(types: !13990)
!13990 = !{null, !3242, !486, !13991, !7655}
!13991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !48)
!13992 = !DILocalVariable(name: "obedit", arg: 1, scope: !13988, file: !3, line: 2137, type: !3242)
!13993 = !DILocation(line: 2137, column: 41, scope: !13988)
!13994 = !DILocalVariable(name: "newnurb", arg: 2, scope: !13988, file: !3, line: 2137, type: !486)
!13995 = !DILocation(line: 2137, column: 59, scope: !13988)
!13996 = !DILocalVariable(name: "flag", arg: 3, scope: !13988, file: !3, line: 2138, type: !13991)
!13997 = !DILocation(line: 2138, column: 45, scope: !13988)
!13998 = !DILocalVariable(name: "split", arg: 4, scope: !13988, file: !3, line: 2138, type: !7655)
!13999 = !DILocation(line: 2138, column: 62, scope: !13988)
!14000 = !DILocalVariable(name: "editnurb", scope: !13988, file: !3, line: 2140, type: !486)
!14001 = !DILocation(line: 2140, column: 12, scope: !13988)
!14002 = !DILocation(line: 2140, column: 44, scope: !13988)
!14003 = !DILocation(line: 2140, column: 23, scope: !13988)
!14004 = !DILocalVariable(name: "nu", scope: !13988, file: !3, line: 2141, type: !3163)
!14005 = !DILocation(line: 2141, column: 8, scope: !13988)
!14006 = !DILocation(line: 2141, column: 13, scope: !13988)
!14007 = !DILocation(line: 2141, column: 23, scope: !13988)
!14008 = !DILocalVariable(name: "newnu", scope: !13988, file: !3, line: 2141, type: !3163)
!14009 = !DILocation(line: 2141, column: 30, scope: !13988)
!14010 = !DILocalVariable(name: "bezt", scope: !13988, file: !3, line: 2142, type: !3104)
!14011 = !DILocation(line: 2142, column: 13, scope: !13988)
!14012 = !DILocalVariable(name: "bezt1", scope: !13988, file: !3, line: 2142, type: !3104)
!14013 = !DILocation(line: 2142, column: 20, scope: !13988)
!14014 = !DILocalVariable(name: "bp", scope: !13988, file: !3, line: 2143, type: !3093)
!14015 = !DILocation(line: 2143, column: 10, scope: !13988)
!14016 = !DILocalVariable(name: "bp1", scope: !13988, file: !3, line: 2143, type: !3093)
!14017 = !DILocation(line: 2143, column: 15, scope: !13988)
!14018 = !DILocalVariable(name: "bp2", scope: !13988, file: !3, line: 2143, type: !3093)
!14019 = !DILocation(line: 2143, column: 21, scope: !13988)
!14020 = !DILocalVariable(name: "bp3", scope: !13988, file: !3, line: 2143, type: !3093)
!14021 = !DILocation(line: 2143, column: 27, scope: !13988)
!14022 = !DILocalVariable(name: "cu", scope: !13988, file: !3, line: 2144, type: !2953)
!14023 = !DILocation(line: 2144, column: 9, scope: !13988)
!14024 = !DILocation(line: 2144, column: 23, scope: !13988)
!14025 = !DILocation(line: 2144, column: 31, scope: !13988)
!14026 = !DILocation(line: 2144, column: 14, scope: !13988)
!14027 = !DILocalVariable(name: "a", scope: !13988, file: !3, line: 2145, type: !22)
!14028 = !DILocation(line: 2145, column: 6, scope: !13988)
!14029 = !DILocalVariable(name: "b", scope: !13988, file: !3, line: 2145, type: !22)
!14030 = !DILocation(line: 2145, column: 9, scope: !13988)
!14031 = !DILocalVariable(name: "c", scope: !13988, file: !3, line: 2145, type: !22)
!14032 = !DILocation(line: 2145, column: 12, scope: !13988)
!14033 = !DILocalVariable(name: "starta", scope: !13988, file: !3, line: 2145, type: !22)
!14034 = !DILocation(line: 2145, column: 15, scope: !13988)
!14035 = !DILocalVariable(name: "enda", scope: !13988, file: !3, line: 2145, type: !22)
!14036 = !DILocation(line: 2145, column: 23, scope: !13988)
!14037 = !DILocalVariable(name: "diffa", scope: !13988, file: !3, line: 2145, type: !22)
!14038 = !DILocation(line: 2145, column: 29, scope: !13988)
!14039 = !DILocalVariable(name: "cyclicu", scope: !13988, file: !3, line: 2145, type: !22)
!14040 = !DILocation(line: 2145, column: 36, scope: !13988)
!14041 = !DILocalVariable(name: "cyclicv", scope: !13988, file: !3, line: 2145, type: !22)
!14042 = !DILocation(line: 2145, column: 45, scope: !13988)
!14043 = !DILocalVariable(name: "newu", scope: !13988, file: !3, line: 2145, type: !22)
!14044 = !DILocation(line: 2145, column: 54, scope: !13988)
!14045 = !DILocalVariable(name: "newv", scope: !13988, file: !3, line: 2145, type: !22)
!14046 = !DILocation(line: 2145, column: 60, scope: !13988)
!14047 = !DILocalVariable(name: "usel", scope: !13988, file: !3, line: 2146, type: !343)
!14048 = !DILocation(line: 2146, column: 8, scope: !13988)
!14049 = !DILocation(line: 2148, column: 2, scope: !13988)
!14050 = !DILocation(line: 2148, column: 9, scope: !13988)
!14051 = !DILocation(line: 2149, column: 21, scope: !14052)
!14052 = distinct !DILexicalBlock(scope: !13988, file: !3, line: 2148, column: 13)
!14053 = !DILocation(line: 2149, column: 11, scope: !14052)
!14054 = !DILocation(line: 2150, column: 7, scope: !14055)
!14055 = distinct !DILexicalBlock(scope: !14052, file: !3, line: 2150, column: 7)
!14056 = !DILocation(line: 2150, column: 11, scope: !14055)
!14057 = !DILocation(line: 2150, column: 16, scope: !14055)
!14058 = !DILocation(line: 2150, column: 7, scope: !14052)
!14059 = !DILocation(line: 2151, column: 11, scope: !14060)
!14060 = distinct !DILexicalBlock(scope: !14061, file: !3, line: 2151, column: 4)
!14061 = distinct !DILexicalBlock(scope: !14055, file: !3, line: 2150, column: 30)
!14062 = !DILocation(line: 2151, column: 23, scope: !14060)
!14063 = !DILocation(line: 2151, column: 27, scope: !14060)
!14064 = !DILocation(line: 2151, column: 21, scope: !14060)
!14065 = !DILocation(line: 2151, column: 9, scope: !14060)
!14066 = !DILocation(line: 2151, column: 33, scope: !14067)
!14067 = distinct !DILexicalBlock(scope: !14060, file: !3, line: 2151, column: 4)
!14068 = !DILocation(line: 2151, column: 37, scope: !14067)
!14069 = !DILocation(line: 2151, column: 41, scope: !14067)
!14070 = !DILocation(line: 2151, column: 35, scope: !14067)
!14071 = !DILocation(line: 2151, column: 4, scope: !14060)
!14072 = !DILocation(line: 2152, column: 10, scope: !14073)
!14073 = distinct !DILexicalBlock(scope: !14067, file: !3, line: 2151, column: 61)
!14074 = !DILocation(line: 2153, column: 14, scope: !14073)
!14075 = !DILocation(line: 2153, column: 12, scope: !14073)
!14076 = !DILocation(line: 2154, column: 5, scope: !14073)
!14077 = !DILocation(line: 2154, column: 13, scope: !14073)
!14078 = !DILocation(line: 2154, column: 19, scope: !14073)
!14079 = !DILocation(line: 2154, column: 24, scope: !14073)
!14080 = !DILocation(line: 2154, column: 22, scope: !14073)
!14081 = !DILocation(line: 2154, column: 30, scope: !14073)
!14082 = !DILocation(line: 2154, column: 34, scope: !14073)
!14083 = !DILocation(line: 2154, column: 40, scope: !14073)
!14084 = !DILocation(line: 2154, column: 45, scope: !14073)
!14085 = !DILocation(line: 2154, column: 43, scope: !14073)
!14086 = !DILocation(line: 2154, column: 51, scope: !14073)
!14087 = !DILocation(line: 2154, column: 55, scope: !14073)
!14088 = !DILocation(line: 2154, column: 61, scope: !14073)
!14089 = !DILocation(line: 2154, column: 66, scope: !14073)
!14090 = !DILocation(line: 2154, column: 64, scope: !14073)
!14091 = !DILocation(line: 2155, column: 11, scope: !14092)
!14092 = distinct !DILexicalBlock(scope: !14093, file: !3, line: 2155, column: 10)
!14093 = distinct !DILexicalBlock(scope: !14073, file: !3, line: 2154, column: 73)
!14094 = !DILocation(line: 2155, column: 10, scope: !14093)
!14095 = !DILocation(line: 2155, column: 35, scope: !14092)
!14096 = !DILocation(line: 2155, column: 51, scope: !14092)
!14097 = !DILocation(line: 2155, column: 18, scope: !14092)
!14098 = !DILocation(line: 2156, column: 13, scope: !14093)
!14099 = !DILocation(line: 2156, column: 11, scope: !14093)
!14100 = !DILocation(line: 2157, column: 10, scope: !14101)
!14101 = distinct !DILexicalBlock(scope: !14093, file: !3, line: 2157, column: 10)
!14102 = !DILocation(line: 2157, column: 15, scope: !14101)
!14103 = !DILocation(line: 2157, column: 19, scope: !14101)
!14104 = !DILocation(line: 2157, column: 25, scope: !14101)
!14105 = !DILocation(line: 2157, column: 12, scope: !14101)
!14106 = !DILocation(line: 2157, column: 10, scope: !14093)
!14107 = !DILocation(line: 2157, column: 30, scope: !14101)
!14108 = !DILocation(line: 2158, column: 7, scope: !14093)
!14109 = !DILocation(line: 2159, column: 10, scope: !14093)
!14110 = distinct !{!14110, !14076, !14111}
!14111 = !DILocation(line: 2160, column: 5, scope: !14073)
!14112 = !DILocation(line: 2161, column: 9, scope: !14113)
!14113 = distinct !DILexicalBlock(scope: !14073, file: !3, line: 2161, column: 9)
!14114 = !DILocation(line: 2161, column: 17, scope: !14113)
!14115 = !DILocation(line: 2161, column: 14, scope: !14113)
!14116 = !DILocation(line: 2161, column: 9, scope: !14073)
!14117 = !DILocation(line: 2162, column: 21, scope: !14118)
!14118 = distinct !DILexicalBlock(scope: !14113, file: !3, line: 2161, column: 25)
!14119 = !DILocation(line: 2162, column: 28, scope: !14118)
!14120 = !DILocation(line: 2162, column: 26, scope: !14118)
!14121 = !DILocation(line: 2162, column: 35, scope: !14118)
!14122 = !DILocation(line: 2162, column: 19, scope: !14118)
!14123 = !DILocation(line: 2162, column: 11, scope: !14118)
!14124 = !DILocation(line: 2164, column: 10, scope: !14125)
!14125 = distinct !DILexicalBlock(scope: !14118, file: !3, line: 2164, column: 10)
!14126 = !DILocation(line: 2164, column: 17, scope: !14125)
!14127 = !DILocation(line: 2164, column: 22, scope: !14125)
!14128 = !DILocation(line: 2164, column: 25, scope: !14125)
!14129 = !DILocation(line: 2164, column: 33, scope: !14125)
!14130 = !DILocation(line: 2164, column: 37, scope: !14125)
!14131 = !DILocation(line: 2164, column: 30, scope: !14125)
!14132 = !DILocation(line: 2164, column: 43, scope: !14125)
!14133 = !DILocation(line: 2164, column: 47, scope: !14125)
!14134 = !DILocation(line: 2164, column: 51, scope: !14125)
!14135 = !DILocation(line: 2164, column: 57, scope: !14125)
!14136 = !DILocation(line: 2164, column: 10, scope: !14118)
!14137 = !DILocation(line: 2165, column: 17, scope: !14138)
!14138 = distinct !DILexicalBlock(scope: !14125, file: !3, line: 2164, column: 76)
!14139 = !DILocation(line: 2165, column: 15, scope: !14138)
!14140 = !DILocation(line: 2166, column: 6, scope: !14138)
!14141 = !DILocation(line: 2168, column: 11, scope: !14142)
!14142 = distinct !DILexicalBlock(scope: !14143, file: !3, line: 2168, column: 11)
!14143 = distinct !DILexicalBlock(scope: !14125, file: !3, line: 2167, column: 11)
!14144 = !DILocation(line: 2168, column: 19, scope: !14142)
!14145 = !DILocation(line: 2168, column: 23, scope: !14142)
!14146 = !DILocation(line: 2168, column: 29, scope: !14142)
!14147 = !DILocation(line: 2168, column: 16, scope: !14142)
!14148 = !DILocation(line: 2168, column: 11, scope: !14143)
!14149 = !DILocation(line: 2168, column: 42, scope: !14142)
!14150 = !DILocation(line: 2168, column: 39, scope: !14142)
!14151 = !DILocation(line: 2168, column: 34, scope: !14142)
!14152 = !DILocation(line: 2170, column: 29, scope: !14143)
!14153 = !DILocation(line: 2170, column: 33, scope: !14143)
!14154 = !DILocation(line: 2170, column: 15, scope: !14143)
!14155 = !DILocation(line: 2170, column: 13, scope: !14143)
!14156 = !DILocation(line: 2171, column: 19, scope: !14143)
!14157 = !DILocation(line: 2171, column: 28, scope: !14143)
!14158 = !DILocation(line: 2171, column: 7, scope: !14143)
!14159 = !DILocation(line: 2172, column: 14, scope: !14143)
!14160 = !DILocation(line: 2172, column: 21, scope: !14143)
!14161 = !DILocation(line: 2172, column: 7, scope: !14143)
!14162 = !DILocation(line: 2172, column: 28, scope: !14143)
!14163 = !DILocation(line: 2172, column: 32, scope: !14143)
!14164 = !DILocation(line: 2172, column: 37, scope: !14143)
!14165 = !DILocation(line: 2172, column: 46, scope: !14143)
!14166 = !DILocation(line: 2172, column: 52, scope: !14143)
!14167 = !DILocation(line: 2173, column: 11, scope: !14168)
!14168 = distinct !DILexicalBlock(scope: !14143, file: !3, line: 2173, column: 11)
!14169 = !DILocation(line: 2173, column: 19, scope: !14168)
!14170 = !DILocation(line: 2173, column: 16, scope: !14168)
!14171 = !DILocation(line: 2173, column: 11, scope: !14143)
!14172 = !DILocation(line: 2174, column: 16, scope: !14173)
!14173 = distinct !DILexicalBlock(scope: !14168, file: !3, line: 2173, column: 26)
!14174 = !DILocation(line: 2174, column: 23, scope: !14173)
!14175 = !DILocation(line: 2174, column: 28, scope: !14173)
!14176 = !DILocation(line: 2174, column: 8, scope: !14173)
!14177 = !DILocation(line: 2174, column: 36, scope: !14173)
!14178 = !DILocation(line: 2174, column: 40, scope: !14173)
!14179 = !DILocation(line: 2174, column: 46, scope: !14173)
!14180 = !DILocation(line: 2174, column: 54, scope: !14173)
!14181 = !DILocation(line: 2175, column: 16, scope: !14173)
!14182 = !DILocation(line: 2176, column: 7, scope: !14173)
!14183 = !DILocation(line: 2178, column: 11, scope: !14184)
!14184 = distinct !DILexicalBlock(scope: !14143, file: !3, line: 2178, column: 11)
!14185 = !DILocation(line: 2178, column: 19, scope: !14184)
!14186 = !DILocation(line: 2178, column: 23, scope: !14184)
!14187 = !DILocation(line: 2178, column: 16, scope: !14184)
!14188 = !DILocation(line: 2178, column: 11, scope: !14143)
!14189 = !DILocation(line: 2178, column: 30, scope: !14184)
!14190 = !DILocation(line: 2178, column: 37, scope: !14184)
!14191 = !DILocation(line: 2178, column: 43, scope: !14184)
!14192 = !DILocation(line: 2180, column: 14, scope: !14193)
!14193 = distinct !DILexicalBlock(scope: !14143, file: !3, line: 2180, column: 7)
!14194 = !DILocation(line: 2180, column: 27, scope: !14193)
!14195 = !DILocation(line: 2180, column: 34, scope: !14193)
!14196 = !DILocation(line: 2180, column: 25, scope: !14193)
!14197 = !DILocation(line: 2180, column: 12, scope: !14193)
!14198 = !DILocation(line: 2180, column: 40, scope: !14199)
!14199 = distinct !DILexicalBlock(scope: !14193, file: !3, line: 2180, column: 7)
!14200 = !DILocation(line: 2180, column: 44, scope: !14199)
!14201 = !DILocation(line: 2180, column: 51, scope: !14199)
!14202 = !DILocation(line: 2180, column: 42, scope: !14199)
!14203 = !DILocation(line: 2180, column: 7, scope: !14193)
!14204 = !DILocation(line: 2181, column: 25, scope: !14205)
!14205 = distinct !DILexicalBlock(scope: !14199, file: !3, line: 2180, column: 72)
!14206 = !DILocation(line: 2181, column: 40, scope: !14205)
!14207 = !DILocation(line: 2181, column: 8, scope: !14205)
!14208 = !DILocation(line: 2182, column: 7, scope: !14205)
!14209 = !DILocation(line: 2180, column: 59, scope: !14199)
!14210 = !DILocation(line: 2180, column: 68, scope: !14199)
!14211 = !DILocation(line: 2180, column: 7, scope: !14199)
!14212 = distinct !{!14212, !14203, !14213}
!14213 = !DILocation(line: 2182, column: 7, scope: !14193)
!14214 = !DILocation(line: 2184, column: 5, scope: !14118)
!14215 = !DILocation(line: 2185, column: 4, scope: !14073)
!14216 = !DILocation(line: 2151, column: 49, scope: !14067)
!14217 = !DILocation(line: 2151, column: 57, scope: !14067)
!14218 = !DILocation(line: 2151, column: 4, scope: !14067)
!14219 = distinct !{!14219, !14071, !14220}
!14220 = !DILocation(line: 2185, column: 4, scope: !14060)
!14221 = !DILocation(line: 2187, column: 8, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14061, file: !3, line: 2187, column: 8)
!14223 = !DILocation(line: 2187, column: 16, scope: !14222)
!14224 = !DILocation(line: 2187, column: 8, scope: !14061)
!14225 = !DILocation(line: 2188, column: 27, scope: !14226)
!14226 = distinct !DILexicalBlock(scope: !14222, file: !3, line: 2187, column: 22)
!14227 = !DILocation(line: 2188, column: 31, scope: !14226)
!14228 = !DILocation(line: 2188, column: 13, scope: !14226)
!14229 = !DILocation(line: 2188, column: 11, scope: !14226)
!14230 = !DILocation(line: 2189, column: 17, scope: !14226)
!14231 = !DILocation(line: 2189, column: 26, scope: !14226)
!14232 = !DILocation(line: 2189, column: 5, scope: !14226)
!14233 = !DILocation(line: 2190, column: 12, scope: !14226)
!14234 = !DILocation(line: 2190, column: 19, scope: !14226)
!14235 = !DILocation(line: 2190, column: 5, scope: !14226)
!14236 = !DILocation(line: 2190, column: 25, scope: !14226)
!14237 = !DILocation(line: 2190, column: 29, scope: !14226)
!14238 = !DILocation(line: 2190, column: 35, scope: !14226)
!14239 = !DILocation(line: 2190, column: 43, scope: !14226)
!14240 = !DILocation(line: 2191, column: 5, scope: !14226)
!14241 = !DILocation(line: 2191, column: 12, scope: !14226)
!14242 = !DILocation(line: 2191, column: 18, scope: !14226)
!14243 = !DILocation(line: 2193, column: 12, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !14226, file: !3, line: 2193, column: 5)
!14245 = !DILocation(line: 2193, column: 25, scope: !14244)
!14246 = !DILocation(line: 2193, column: 32, scope: !14244)
!14247 = !DILocation(line: 2193, column: 23, scope: !14244)
!14248 = !DILocation(line: 2193, column: 10, scope: !14244)
!14249 = !DILocation(line: 2193, column: 38, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14244, file: !3, line: 2193, column: 5)
!14251 = !DILocation(line: 2193, column: 42, scope: !14250)
!14252 = !DILocation(line: 2193, column: 49, scope: !14250)
!14253 = !DILocation(line: 2193, column: 40, scope: !14250)
!14254 = !DILocation(line: 2193, column: 5, scope: !14244)
!14255 = !DILocation(line: 2194, column: 23, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14250, file: !3, line: 2193, column: 70)
!14257 = !DILocation(line: 2194, column: 38, scope: !14256)
!14258 = !DILocation(line: 2194, column: 6, scope: !14256)
!14259 = !DILocation(line: 2195, column: 5, scope: !14256)
!14260 = !DILocation(line: 2193, column: 57, scope: !14250)
!14261 = !DILocation(line: 2193, column: 66, scope: !14250)
!14262 = !DILocation(line: 2193, column: 5, scope: !14250)
!14263 = distinct !{!14263, !14254, !14264}
!14264 = !DILocation(line: 2195, column: 5, scope: !14244)
!14265 = !DILocation(line: 2196, column: 4, scope: !14226)
!14266 = !DILocation(line: 2197, column: 3, scope: !14061)
!14267 = !DILocation(line: 2198, column: 12, scope: !14268)
!14268 = distinct !DILexicalBlock(scope: !14055, file: !3, line: 2198, column: 12)
!14269 = !DILocation(line: 2198, column: 16, scope: !14268)
!14270 = !DILocation(line: 2198, column: 22, scope: !14268)
!14271 = !DILocation(line: 2198, column: 12, scope: !14055)
!14272 = !DILocation(line: 2199, column: 11, scope: !14273)
!14273 = distinct !DILexicalBlock(scope: !14274, file: !3, line: 2199, column: 4)
!14274 = distinct !DILexicalBlock(scope: !14268, file: !3, line: 2198, column: 28)
!14275 = !DILocation(line: 2199, column: 21, scope: !14273)
!14276 = !DILocation(line: 2199, column: 25, scope: !14273)
!14277 = !DILocation(line: 2199, column: 19, scope: !14273)
!14278 = !DILocation(line: 2199, column: 9, scope: !14273)
!14279 = !DILocation(line: 2199, column: 29, scope: !14280)
!14280 = distinct !DILexicalBlock(scope: !14273, file: !3, line: 2199, column: 4)
!14281 = !DILocation(line: 2199, column: 33, scope: !14280)
!14282 = !DILocation(line: 2199, column: 37, scope: !14280)
!14283 = !DILocation(line: 2199, column: 31, scope: !14280)
!14284 = !DILocation(line: 2199, column: 4, scope: !14273)
!14285 = !DILocation(line: 2200, column: 10, scope: !14286)
!14286 = distinct !DILexicalBlock(scope: !14280, file: !3, line: 2199, column: 55)
!14287 = !DILocation(line: 2201, column: 14, scope: !14286)
!14288 = !DILocation(line: 2201, column: 12, scope: !14286)
!14289 = !DILocation(line: 2202, column: 5, scope: !14286)
!14290 = !DILocation(line: 2202, column: 12, scope: !14286)
!14291 = !DILocation(line: 2202, column: 16, scope: !14286)
!14292 = !DILocation(line: 2202, column: 21, scope: !14286)
!14293 = !DILocation(line: 2202, column: 19, scope: !14286)
!14294 = !DILocation(line: 2203, column: 11, scope: !14295)
!14295 = distinct !DILexicalBlock(scope: !14296, file: !3, line: 2203, column: 10)
!14296 = distinct !DILexicalBlock(scope: !14286, file: !3, line: 2202, column: 27)
!14297 = !DILocation(line: 2203, column: 10, scope: !14296)
!14298 = !DILocation(line: 2203, column: 32, scope: !14295)
!14299 = !DILocation(line: 2203, column: 46, scope: !14295)
!14300 = !DILocation(line: 2203, column: 18, scope: !14295)
!14301 = !DILocation(line: 2204, column: 13, scope: !14296)
!14302 = !DILocation(line: 2204, column: 11, scope: !14296)
!14303 = !DILocation(line: 2205, column: 10, scope: !14304)
!14304 = distinct !DILexicalBlock(scope: !14296, file: !3, line: 2205, column: 10)
!14305 = !DILocation(line: 2205, column: 15, scope: !14304)
!14306 = !DILocation(line: 2205, column: 19, scope: !14304)
!14307 = !DILocation(line: 2205, column: 25, scope: !14304)
!14308 = !DILocation(line: 2205, column: 12, scope: !14304)
!14309 = !DILocation(line: 2205, column: 10, scope: !14296)
!14310 = !DILocation(line: 2205, column: 30, scope: !14304)
!14311 = !DILocation(line: 2206, column: 7, scope: !14296)
!14312 = !DILocation(line: 2207, column: 8, scope: !14296)
!14313 = distinct !{!14313, !14289, !14314}
!14314 = !DILocation(line: 2208, column: 5, scope: !14286)
!14315 = !DILocation(line: 2209, column: 9, scope: !14316)
!14316 = distinct !DILexicalBlock(scope: !14286, file: !3, line: 2209, column: 9)
!14317 = !DILocation(line: 2209, column: 17, scope: !14316)
!14318 = !DILocation(line: 2209, column: 14, scope: !14316)
!14319 = !DILocation(line: 2209, column: 9, scope: !14286)
!14320 = !DILocation(line: 2210, column: 21, scope: !14321)
!14321 = distinct !DILexicalBlock(scope: !14316, file: !3, line: 2209, column: 25)
!14322 = !DILocation(line: 2210, column: 28, scope: !14321)
!14323 = !DILocation(line: 2210, column: 26, scope: !14321)
!14324 = !DILocation(line: 2210, column: 35, scope: !14321)
!14325 = !DILocation(line: 2210, column: 19, scope: !14321)
!14326 = !DILocation(line: 2210, column: 11, scope: !14321)
!14327 = !DILocation(line: 2212, column: 10, scope: !14328)
!14328 = distinct !DILexicalBlock(scope: !14321, file: !3, line: 2212, column: 10)
!14329 = !DILocation(line: 2212, column: 17, scope: !14328)
!14330 = !DILocation(line: 2212, column: 22, scope: !14328)
!14331 = !DILocation(line: 2212, column: 25, scope: !14328)
!14332 = !DILocation(line: 2212, column: 33, scope: !14328)
!14333 = !DILocation(line: 2212, column: 37, scope: !14328)
!14334 = !DILocation(line: 2212, column: 30, scope: !14328)
!14335 = !DILocation(line: 2212, column: 43, scope: !14328)
!14336 = !DILocation(line: 2212, column: 47, scope: !14328)
!14337 = !DILocation(line: 2212, column: 51, scope: !14328)
!14338 = !DILocation(line: 2212, column: 57, scope: !14328)
!14339 = !DILocation(line: 2212, column: 10, scope: !14321)
!14340 = !DILocation(line: 2213, column: 17, scope: !14341)
!14341 = distinct !DILexicalBlock(scope: !14328, file: !3, line: 2212, column: 76)
!14342 = !DILocation(line: 2213, column: 15, scope: !14341)
!14343 = !DILocation(line: 2214, column: 6, scope: !14341)
!14344 = !DILocation(line: 2216, column: 11, scope: !14345)
!14345 = distinct !DILexicalBlock(scope: !14346, file: !3, line: 2216, column: 11)
!14346 = distinct !DILexicalBlock(scope: !14328, file: !3, line: 2215, column: 11)
!14347 = !DILocation(line: 2216, column: 19, scope: !14345)
!14348 = !DILocation(line: 2216, column: 23, scope: !14345)
!14349 = !DILocation(line: 2216, column: 29, scope: !14345)
!14350 = !DILocation(line: 2216, column: 16, scope: !14345)
!14351 = !DILocation(line: 2216, column: 11, scope: !14346)
!14352 = !DILocation(line: 2216, column: 42, scope: !14345)
!14353 = !DILocation(line: 2216, column: 39, scope: !14345)
!14354 = !DILocation(line: 2216, column: 34, scope: !14345)
!14355 = !DILocation(line: 2218, column: 29, scope: !14346)
!14356 = !DILocation(line: 2218, column: 33, scope: !14346)
!14357 = !DILocation(line: 2218, column: 15, scope: !14346)
!14358 = !DILocation(line: 2218, column: 13, scope: !14346)
!14359 = !DILocation(line: 2219, column: 19, scope: !14346)
!14360 = !DILocation(line: 2219, column: 28, scope: !14346)
!14361 = !DILocation(line: 2219, column: 7, scope: !14346)
!14362 = !DILocation(line: 2220, column: 14, scope: !14346)
!14363 = !DILocation(line: 2220, column: 21, scope: !14346)
!14364 = !DILocation(line: 2220, column: 7, scope: !14346)
!14365 = !DILocation(line: 2220, column: 26, scope: !14346)
!14366 = !DILocation(line: 2220, column: 30, scope: !14346)
!14367 = !DILocation(line: 2220, column: 33, scope: !14346)
!14368 = !DILocation(line: 2220, column: 42, scope: !14346)
!14369 = !DILocation(line: 2220, column: 48, scope: !14346)
!14370 = !DILocation(line: 2221, column: 11, scope: !14371)
!14371 = distinct !DILexicalBlock(scope: !14346, file: !3, line: 2221, column: 11)
!14372 = !DILocation(line: 2221, column: 19, scope: !14371)
!14373 = !DILocation(line: 2221, column: 16, scope: !14371)
!14374 = !DILocation(line: 2221, column: 11, scope: !14346)
!14375 = !DILocation(line: 2222, column: 16, scope: !14376)
!14376 = distinct !DILexicalBlock(scope: !14371, file: !3, line: 2221, column: 26)
!14377 = !DILocation(line: 2222, column: 23, scope: !14376)
!14378 = !DILocation(line: 2222, column: 26, scope: !14376)
!14379 = !DILocation(line: 2222, column: 8, scope: !14376)
!14380 = !DILocation(line: 2222, column: 34, scope: !14376)
!14381 = !DILocation(line: 2222, column: 38, scope: !14376)
!14382 = !DILocation(line: 2222, column: 42, scope: !14376)
!14383 = !DILocation(line: 2222, column: 50, scope: !14376)
!14384 = !DILocation(line: 2223, column: 16, scope: !14376)
!14385 = !DILocation(line: 2224, column: 7, scope: !14376)
!14386 = !DILocation(line: 2226, column: 11, scope: !14387)
!14387 = distinct !DILexicalBlock(scope: !14346, file: !3, line: 2226, column: 11)
!14388 = !DILocation(line: 2226, column: 19, scope: !14387)
!14389 = !DILocation(line: 2226, column: 23, scope: !14387)
!14390 = !DILocation(line: 2226, column: 16, scope: !14387)
!14391 = !DILocation(line: 2226, column: 11, scope: !14346)
!14392 = !DILocation(line: 2226, column: 30, scope: !14387)
!14393 = !DILocation(line: 2226, column: 37, scope: !14387)
!14394 = !DILocation(line: 2226, column: 43, scope: !14387)
!14395 = !DILocation(line: 2228, column: 14, scope: !14396)
!14396 = distinct !DILexicalBlock(scope: !14346, file: !3, line: 2228, column: 7)
!14397 = !DILocation(line: 2228, column: 25, scope: !14396)
!14398 = !DILocation(line: 2228, column: 32, scope: !14396)
!14399 = !DILocation(line: 2228, column: 23, scope: !14396)
!14400 = !DILocation(line: 2228, column: 12, scope: !14396)
!14401 = !DILocation(line: 2228, column: 36, scope: !14402)
!14402 = distinct !DILexicalBlock(scope: !14396, file: !3, line: 2228, column: 7)
!14403 = !DILocation(line: 2228, column: 40, scope: !14402)
!14404 = !DILocation(line: 2228, column: 47, scope: !14402)
!14405 = !DILocation(line: 2228, column: 38, scope: !14402)
!14406 = !DILocation(line: 2228, column: 7, scope: !14396)
!14407 = !DILocation(line: 2229, column: 22, scope: !14408)
!14408 = distinct !DILexicalBlock(scope: !14402, file: !3, line: 2228, column: 66)
!14409 = !DILocation(line: 2229, column: 35, scope: !14408)
!14410 = !DILocation(line: 2229, column: 8, scope: !14408)
!14411 = !DILocation(line: 2230, column: 7, scope: !14408)
!14412 = !DILocation(line: 2228, column: 55, scope: !14402)
!14413 = !DILocation(line: 2228, column: 62, scope: !14402)
!14414 = !DILocation(line: 2228, column: 7, scope: !14402)
!14415 = distinct !{!14415, !14406, !14416}
!14416 = !DILocation(line: 2230, column: 7, scope: !14396)
!14417 = !DILocation(line: 2232, column: 5, scope: !14321)
!14418 = !DILocation(line: 2233, column: 4, scope: !14286)
!14419 = !DILocation(line: 2199, column: 45, scope: !14280)
!14420 = !DILocation(line: 2199, column: 51, scope: !14280)
!14421 = !DILocation(line: 2199, column: 4, scope: !14280)
!14422 = distinct !{!14422, !14284, !14423}
!14423 = !DILocation(line: 2233, column: 4, scope: !14273)
!14424 = !DILocation(line: 2235, column: 8, scope: !14425)
!14425 = distinct !DILexicalBlock(scope: !14274, file: !3, line: 2235, column: 8)
!14426 = !DILocation(line: 2235, column: 16, scope: !14425)
!14427 = !DILocation(line: 2235, column: 8, scope: !14274)
!14428 = !DILocation(line: 2236, column: 27, scope: !14429)
!14429 = distinct !DILexicalBlock(scope: !14425, file: !3, line: 2235, column: 22)
!14430 = !DILocation(line: 2236, column: 31, scope: !14429)
!14431 = !DILocation(line: 2236, column: 13, scope: !14429)
!14432 = !DILocation(line: 2236, column: 11, scope: !14429)
!14433 = !DILocation(line: 2237, column: 17, scope: !14429)
!14434 = !DILocation(line: 2237, column: 26, scope: !14429)
!14435 = !DILocation(line: 2237, column: 5, scope: !14429)
!14436 = !DILocation(line: 2238, column: 12, scope: !14429)
!14437 = !DILocation(line: 2238, column: 19, scope: !14429)
!14438 = !DILocation(line: 2238, column: 5, scope: !14429)
!14439 = !DILocation(line: 2238, column: 23, scope: !14429)
!14440 = !DILocation(line: 2238, column: 27, scope: !14429)
!14441 = !DILocation(line: 2238, column: 31, scope: !14429)
!14442 = !DILocation(line: 2238, column: 39, scope: !14429)
!14443 = !DILocation(line: 2239, column: 5, scope: !14429)
!14444 = !DILocation(line: 2239, column: 12, scope: !14429)
!14445 = !DILocation(line: 2239, column: 18, scope: !14429)
!14446 = !DILocation(line: 2241, column: 12, scope: !14447)
!14447 = distinct !DILexicalBlock(scope: !14429, file: !3, line: 2241, column: 5)
!14448 = !DILocation(line: 2241, column: 23, scope: !14447)
!14449 = !DILocation(line: 2241, column: 30, scope: !14447)
!14450 = !DILocation(line: 2241, column: 21, scope: !14447)
!14451 = !DILocation(line: 2241, column: 10, scope: !14447)
!14452 = !DILocation(line: 2241, column: 34, scope: !14453)
!14453 = distinct !DILexicalBlock(scope: !14447, file: !3, line: 2241, column: 5)
!14454 = !DILocation(line: 2241, column: 38, scope: !14453)
!14455 = !DILocation(line: 2241, column: 45, scope: !14453)
!14456 = !DILocation(line: 2241, column: 36, scope: !14453)
!14457 = !DILocation(line: 2241, column: 5, scope: !14447)
!14458 = !DILocation(line: 2242, column: 20, scope: !14459)
!14459 = distinct !DILexicalBlock(scope: !14453, file: !3, line: 2241, column: 64)
!14460 = !DILocation(line: 2242, column: 33, scope: !14459)
!14461 = !DILocation(line: 2242, column: 6, scope: !14459)
!14462 = !DILocation(line: 2243, column: 5, scope: !14459)
!14463 = !DILocation(line: 2241, column: 53, scope: !14453)
!14464 = !DILocation(line: 2241, column: 60, scope: !14453)
!14465 = !DILocation(line: 2241, column: 5, scope: !14453)
!14466 = distinct !{!14466, !14457, !14467}
!14467 = !DILocation(line: 2243, column: 5, scope: !14447)
!14468 = !DILocation(line: 2244, column: 4, scope: !14429)
!14469 = !DILocation(line: 2245, column: 3, scope: !14274)
!14470 = !DILocation(line: 2247, column: 18, scope: !14471)
!14471 = distinct !DILexicalBlock(scope: !14472, file: !3, line: 2247, column: 8)
!14472 = distinct !DILexicalBlock(scope: !14268, file: !3, line: 2246, column: 8)
!14473 = !DILocation(line: 2247, column: 8, scope: !14471)
!14474 = !DILocation(line: 2247, column: 8, scope: !14472)
!14475 = !DILocation(line: 2249, column: 12, scope: !14476)
!14476 = distinct !DILexicalBlock(scope: !14471, file: !3, line: 2247, column: 23)
!14477 = !DILocation(line: 2249, column: 24, scope: !14476)
!14478 = !DILocation(line: 2249, column: 28, scope: !14476)
!14479 = !DILocation(line: 2249, column: 10, scope: !14476)
!14480 = !DILocation(line: 2250, column: 10, scope: !14476)
!14481 = !DILocation(line: 2250, column: 14, scope: !14476)
!14482 = !DILocation(line: 2250, column: 8, scope: !14476)
!14483 = !DILocation(line: 2251, column: 12, scope: !14484)
!14484 = distinct !DILexicalBlock(scope: !14476, file: !3, line: 2251, column: 5)
!14485 = !DILocation(line: 2251, column: 10, scope: !14484)
!14486 = !DILocation(line: 2251, column: 17, scope: !14487)
!14487 = distinct !DILexicalBlock(scope: !14484, file: !3, line: 2251, column: 5)
!14488 = !DILocation(line: 2251, column: 21, scope: !14487)
!14489 = !DILocation(line: 2251, column: 25, scope: !14487)
!14490 = !DILocation(line: 2251, column: 19, scope: !14487)
!14491 = !DILocation(line: 2251, column: 5, scope: !14484)
!14492 = !DILocation(line: 2252, column: 13, scope: !14493)
!14493 = distinct !DILexicalBlock(scope: !14494, file: !3, line: 2252, column: 6)
!14494 = distinct !DILexicalBlock(scope: !14487, file: !3, line: 2251, column: 37)
!14495 = !DILocation(line: 2252, column: 11, scope: !14493)
!14496 = !DILocation(line: 2252, column: 18, scope: !14497)
!14497 = distinct !DILexicalBlock(scope: !14493, file: !3, line: 2252, column: 6)
!14498 = !DILocation(line: 2252, column: 22, scope: !14497)
!14499 = !DILocation(line: 2252, column: 26, scope: !14497)
!14500 = !DILocation(line: 2252, column: 20, scope: !14497)
!14501 = !DILocation(line: 2252, column: 6, scope: !14493)
!14502 = !DILocation(line: 2253, column: 11, scope: !14503)
!14503 = distinct !DILexicalBlock(scope: !14504, file: !3, line: 2253, column: 11)
!14504 = distinct !DILexicalBlock(scope: !14497, file: !3, line: 2252, column: 44)
!14505 = !DILocation(line: 2253, column: 15, scope: !14503)
!14506 = !DILocation(line: 2253, column: 20, scope: !14503)
!14507 = !DILocation(line: 2253, column: 18, scope: !14503)
!14508 = !DILocation(line: 2253, column: 11, scope: !14504)
!14509 = !DILocation(line: 2253, column: 26, scope: !14503)
!14510 = !DILocation(line: 2253, column: 31, scope: !14503)
!14511 = !DILocation(line: 2253, column: 33, scope: !14503)
!14512 = !DILocation(line: 2254, column: 6, scope: !14504)
!14513 = !DILocation(line: 2252, column: 34, scope: !14497)
!14514 = !DILocation(line: 2252, column: 40, scope: !14497)
!14515 = !DILocation(line: 2252, column: 6, scope: !14497)
!14516 = distinct !{!14516, !14501, !14517}
!14517 = !DILocation(line: 2254, column: 6, scope: !14493)
!14518 = !DILocation(line: 2255, column: 5, scope: !14494)
!14519 = !DILocation(line: 2251, column: 33, scope: !14487)
!14520 = !DILocation(line: 2251, column: 5, scope: !14487)
!14521 = distinct !{!14521, !14491, !14522}
!14522 = !DILocation(line: 2255, column: 5, scope: !14484)
!14523 = !DILocation(line: 2256, column: 10, scope: !14476)
!14524 = !DILocation(line: 2257, column: 10, scope: !14476)
!14525 = !DILocation(line: 2258, column: 12, scope: !14526)
!14526 = distinct !DILexicalBlock(scope: !14476, file: !3, line: 2258, column: 5)
!14527 = !DILocation(line: 2258, column: 10, scope: !14526)
!14528 = !DILocation(line: 2258, column: 17, scope: !14529)
!14529 = distinct !DILexicalBlock(scope: !14526, file: !3, line: 2258, column: 5)
!14530 = !DILocation(line: 2258, column: 21, scope: !14529)
!14531 = !DILocation(line: 2258, column: 25, scope: !14529)
!14532 = !DILocation(line: 2258, column: 19, scope: !14529)
!14533 = !DILocation(line: 2258, column: 5, scope: !14526)
!14534 = !DILocation(line: 2259, column: 10, scope: !14535)
!14535 = distinct !DILexicalBlock(scope: !14536, file: !3, line: 2259, column: 10)
!14536 = distinct !DILexicalBlock(scope: !14529, file: !3, line: 2258, column: 37)
!14537 = !DILocation(line: 2259, column: 15, scope: !14535)
!14538 = !DILocation(line: 2259, column: 10, scope: !14536)
!14539 = !DILocation(line: 2260, column: 11, scope: !14540)
!14540 = distinct !DILexicalBlock(scope: !14541, file: !3, line: 2260, column: 11)
!14541 = distinct !DILexicalBlock(scope: !14535, file: !3, line: 2259, column: 19)
!14542 = !DILocation(line: 2260, column: 16, scope: !14540)
!14543 = !DILocation(line: 2260, column: 21, scope: !14540)
!14544 = !DILocation(line: 2260, column: 24, scope: !14540)
!14545 = !DILocation(line: 2260, column: 29, scope: !14540)
!14546 = !DILocation(line: 2260, column: 35, scope: !14540)
!14547 = !DILocation(line: 2260, column: 32, scope: !14540)
!14548 = !DILocation(line: 2260, column: 11, scope: !14541)
!14549 = !DILocation(line: 2261, column: 15, scope: !14550)
!14550 = distinct !DILexicalBlock(scope: !14540, file: !3, line: 2260, column: 41)
!14551 = !DILocation(line: 2261, column: 20, scope: !14550)
!14552 = !DILocation(line: 2261, column: 13, scope: !14550)
!14553 = !DILocation(line: 2262, column: 12, scope: !14550)
!14554 = !DILocation(line: 2263, column: 7, scope: !14550)
!14555 = !DILocation(line: 2265, column: 13, scope: !14556)
!14556 = distinct !DILexicalBlock(scope: !14540, file: !3, line: 2264, column: 12)
!14557 = !DILocation(line: 2266, column: 8, scope: !14556)
!14558 = !DILocation(line: 2268, column: 6, scope: !14541)
!14559 = !DILocation(line: 2269, column: 5, scope: !14536)
!14560 = !DILocation(line: 2258, column: 33, scope: !14529)
!14561 = !DILocation(line: 2258, column: 5, scope: !14529)
!14562 = distinct !{!14562, !14533, !14563}
!14563 = !DILocation(line: 2269, column: 5, scope: !14526)
!14564 = !DILocation(line: 2270, column: 5, scope: !14476)
!14565 = !DILocation(line: 2270, column: 15, scope: !14476)
!14566 = !DILocation(line: 2272, column: 10, scope: !14567)
!14567 = distinct !DILexicalBlock(scope: !14476, file: !3, line: 2272, column: 9)
!14568 = !DILocation(line: 2272, column: 15, scope: !14567)
!14569 = !DILocation(line: 2272, column: 20, scope: !14567)
!14570 = !DILocation(line: 2272, column: 23, scope: !14567)
!14571 = !DILocation(line: 2272, column: 28, scope: !14567)
!14572 = !DILocation(line: 2272, column: 34, scope: !14567)
!14573 = !DILocation(line: 2273, column: 10, scope: !14567)
!14574 = !DILocation(line: 2273, column: 16, scope: !14567)
!14575 = !DILocation(line: 2273, column: 31, scope: !14567)
!14576 = !DILocation(line: 2273, column: 20, scope: !14567)
!14577 = !DILocation(line: 2273, column: 50, scope: !14567)
!14578 = !DILocation(line: 2273, column: 65, scope: !14567)
!14579 = !DILocation(line: 2273, column: 54, scope: !14567)
!14580 = !DILocation(line: 2272, column: 9, scope: !14476)
!14581 = !DILocation(line: 2275, column: 12, scope: !14582)
!14582 = distinct !DILexicalBlock(scope: !14583, file: !3, line: 2275, column: 10)
!14583 = distinct !DILexicalBlock(scope: !14567, file: !3, line: 2274, column: 5)
!14584 = !DILocation(line: 2275, column: 18, scope: !14582)
!14585 = !DILocation(line: 2275, column: 10, scope: !14583)
!14586 = !DILocation(line: 2276, column: 7, scope: !14582)
!14587 = !DILocation(line: 2277, column: 5, scope: !14583)
!14588 = !DILocation(line: 2279, column: 13, scope: !14589)
!14589 = distinct !DILexicalBlock(scope: !14590, file: !3, line: 2279, column: 6)
!14590 = distinct !DILexicalBlock(scope: !14567, file: !3, line: 2278, column: 10)
!14591 = !DILocation(line: 2279, column: 24, scope: !14589)
!14592 = !DILocation(line: 2279, column: 28, scope: !14589)
!14593 = !DILocation(line: 2279, column: 22, scope: !14589)
!14594 = !DILocation(line: 2279, column: 11, scope: !14589)
!14595 = !DILocation(line: 2279, column: 32, scope: !14596)
!14596 = distinct !DILexicalBlock(scope: !14589, file: !3, line: 2279, column: 6)
!14597 = !DILocation(line: 2279, column: 36, scope: !14596)
!14598 = !DILocation(line: 2279, column: 40, scope: !14596)
!14599 = !DILocation(line: 2279, column: 48, scope: !14596)
!14600 = !DILocation(line: 2279, column: 52, scope: !14596)
!14601 = !DILocation(line: 2279, column: 46, scope: !14596)
!14602 = !DILocation(line: 2279, column: 34, scope: !14596)
!14603 = !DILocation(line: 2279, column: 6, scope: !14589)
!14604 = !DILocation(line: 2280, column: 19, scope: !14605)
!14605 = distinct !DILexicalBlock(scope: !14596, file: !3, line: 2279, column: 71)
!14606 = !DILocation(line: 2280, column: 12, scope: !14605)
!14607 = !DILocation(line: 2282, column: 12, scope: !14608)
!14608 = distinct !DILexicalBlock(scope: !14605, file: !3, line: 2282, column: 11)
!14609 = !DILocation(line: 2282, column: 17, scope: !14608)
!14610 = !DILocation(line: 2282, column: 22, scope: !14608)
!14611 = !DILocation(line: 2282, column: 20, scope: !14608)
!14612 = !DILocation(line: 2282, column: 28, scope: !14608)
!14613 = !DILocation(line: 2282, column: 33, scope: !14608)
!14614 = !DILocation(line: 2282, column: 38, scope: !14608)
!14615 = !DILocation(line: 2282, column: 41, scope: !14608)
!14616 = !DILocation(line: 2282, column: 11, scope: !14605)
!14617 = !DILocation(line: 2284, column: 17, scope: !14618)
!14618 = distinct !DILexicalBlock(scope: !14619, file: !3, line: 2284, column: 8)
!14619 = distinct !DILexicalBlock(scope: !14608, file: !3, line: 2282, column: 55)
!14620 = !DILocation(line: 2284, column: 21, scope: !14618)
!14621 = !DILocation(line: 2284, column: 25, scope: !14618)
!14622 = !DILocation(line: 2284, column: 19, scope: !14618)
!14623 = !DILocation(line: 2284, column: 15, scope: !14618)
!14624 = !DILocation(line: 2284, column: 38, scope: !14618)
!14625 = !DILocation(line: 2284, column: 36, scope: !14618)
!14626 = !DILocation(line: 2284, column: 13, scope: !14618)
!14627 = !DILocation(line: 2284, column: 43, scope: !14628)
!14628 = distinct !DILexicalBlock(scope: !14618, file: !3, line: 2284, column: 8)
!14629 = !DILocation(line: 2284, column: 47, scope: !14628)
!14630 = !DILocation(line: 2284, column: 51, scope: !14628)
!14631 = !DILocation(line: 2284, column: 45, scope: !14628)
!14632 = !DILocation(line: 2284, column: 8, scope: !14618)
!14633 = !DILocation(line: 2285, column: 13, scope: !14634)
!14634 = distinct !DILexicalBlock(scope: !14635, file: !3, line: 2285, column: 13)
!14635 = distinct !DILexicalBlock(scope: !14628, file: !3, line: 2284, column: 70)
!14636 = !DILocation(line: 2285, column: 18, scope: !14634)
!14637 = !DILocation(line: 2285, column: 23, scope: !14634)
!14638 = !DILocation(line: 2285, column: 21, scope: !14634)
!14639 = !DILocation(line: 2285, column: 13, scope: !14635)
!14640 = !DILocation(line: 2286, column: 14, scope: !14641)
!14641 = distinct !DILexicalBlock(scope: !14634, file: !3, line: 2285, column: 29)
!14642 = !DILocation(line: 2287, column: 19, scope: !14643)
!14643 = distinct !DILexicalBlock(scope: !14641, file: !3, line: 2287, column: 10)
!14644 = !DILocation(line: 2287, column: 23, scope: !14643)
!14645 = !DILocation(line: 2287, column: 27, scope: !14643)
!14646 = !DILocation(line: 2287, column: 21, scope: !14643)
!14647 = !DILocation(line: 2287, column: 17, scope: !14643)
!14648 = !DILocation(line: 2287, column: 40, scope: !14643)
!14649 = !DILocation(line: 2287, column: 38, scope: !14643)
!14650 = !DILocation(line: 2287, column: 15, scope: !14643)
!14651 = !DILocation(line: 2287, column: 45, scope: !14652)
!14652 = distinct !DILexicalBlock(scope: !14643, file: !3, line: 2287, column: 10)
!14653 = !DILocation(line: 2287, column: 49, scope: !14652)
!14654 = !DILocation(line: 2287, column: 53, scope: !14652)
!14655 = !DILocation(line: 2287, column: 47, scope: !14652)
!14656 = !DILocation(line: 2287, column: 10, scope: !14643)
!14657 = !DILocation(line: 2288, column: 15, scope: !14658)
!14658 = distinct !DILexicalBlock(scope: !14659, file: !3, line: 2288, column: 15)
!14659 = distinct !DILexicalBlock(scope: !14652, file: !3, line: 2287, column: 83)
!14660 = !DILocation(line: 2288, column: 20, scope: !14658)
!14661 = !DILocation(line: 2288, column: 25, scope: !14658)
!14662 = !DILocation(line: 2288, column: 23, scope: !14658)
!14663 = !DILocation(line: 2288, column: 15, scope: !14659)
!14664 = !DILocation(line: 2289, column: 12, scope: !14665)
!14665 = distinct !DILexicalBlock(scope: !14658, file: !3, line: 2288, column: 31)
!14666 = !DILocation(line: 2289, column: 17, scope: !14665)
!14667 = !DILocation(line: 2289, column: 20, scope: !14665)
!14668 = !DILocation(line: 2290, column: 16, scope: !14669)
!14669 = distinct !DILexicalBlock(scope: !14665, file: !3, line: 2290, column: 16)
!14670 = !DILocation(line: 2290, column: 21, scope: !14669)
!14671 = !DILocation(line: 2290, column: 16, scope: !14665)
!14672 = !DILocation(line: 2290, column: 31, scope: !14669)
!14673 = !DILocation(line: 2290, column: 27, scope: !14669)
!14674 = !DILocation(line: 2291, column: 11, scope: !14665)
!14675 = !DILocation(line: 2293, column: 12, scope: !14676)
!14676 = distinct !DILexicalBlock(scope: !14658, file: !3, line: 2292, column: 16)
!14677 = !DILocation(line: 2295, column: 10, scope: !14659)
!14678 = !DILocation(line: 2287, column: 61, scope: !14652)
!14679 = !DILocation(line: 2287, column: 72, scope: !14652)
!14680 = !DILocation(line: 2287, column: 76, scope: !14652)
!14681 = !DILocation(line: 2287, column: 69, scope: !14652)
!14682 = !DILocation(line: 2287, column: 10, scope: !14652)
!14683 = distinct !{!14683, !14656, !14684}
!14684 = !DILocation(line: 2295, column: 10, scope: !14643)
!14685 = !DILocation(line: 2296, column: 9, scope: !14641)
!14686 = !DILocation(line: 2298, column: 10, scope: !14687)
!14687 = distinct !DILexicalBlock(scope: !14634, file: !3, line: 2297, column: 14)
!14688 = !DILocation(line: 2300, column: 8, scope: !14635)
!14689 = !DILocation(line: 2284, column: 59, scope: !14628)
!14690 = !DILocation(line: 2284, column: 66, scope: !14628)
!14691 = !DILocation(line: 2284, column: 8, scope: !14628)
!14692 = distinct !{!14692, !14632, !14693}
!14693 = !DILocation(line: 2300, column: 8, scope: !14618)
!14694 = !DILocation(line: 2301, column: 7, scope: !14619)
!14695 = !DILocation(line: 2303, column: 12, scope: !14696)
!14696 = distinct !DILexicalBlock(scope: !14605, file: !3, line: 2303, column: 11)
!14697 = !DILocation(line: 2303, column: 19, scope: !14696)
!14698 = !DILocation(line: 2303, column: 17, scope: !14696)
!14699 = !DILocation(line: 2303, column: 25, scope: !14696)
!14700 = !DILocation(line: 2303, column: 11, scope: !14605)
!14701 = !DILocation(line: 2305, column: 12, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14703, file: !3, line: 2305, column: 12)
!14703 = distinct !DILexicalBlock(scope: !14696, file: !3, line: 2303, column: 30)
!14704 = !DILocation(line: 2305, column: 14, scope: !14702)
!14705 = !DILocation(line: 2305, column: 12, scope: !14703)
!14706 = !DILocation(line: 2307, column: 13, scope: !14707)
!14707 = distinct !DILexicalBlock(scope: !14708, file: !3, line: 2307, column: 13)
!14708 = distinct !DILexicalBlock(scope: !14702, file: !3, line: 2305, column: 20)
!14709 = !DILocation(line: 2307, column: 21, scope: !14707)
!14710 = !DILocation(line: 2307, column: 25, scope: !14707)
!14711 = !DILocation(line: 2307, column: 18, scope: !14707)
!14712 = !DILocation(line: 2307, column: 31, scope: !14707)
!14713 = !DILocation(line: 2307, column: 35, scope: !14707)
!14714 = !DILocation(line: 2307, column: 39, scope: !14707)
!14715 = !DILocation(line: 2307, column: 45, scope: !14707)
!14716 = !DILocation(line: 2307, column: 13, scope: !14708)
!14717 = !DILocation(line: 2307, column: 74, scope: !14707)
!14718 = !DILocation(line: 2307, column: 72, scope: !14707)
!14719 = !DILocation(line: 2307, column: 64, scope: !14707)
!14720 = !DILocation(line: 2308, column: 13, scope: !14721)
!14721 = distinct !DILexicalBlock(scope: !14708, file: !3, line: 2308, column: 13)
!14722 = !DILocation(line: 2308, column: 21, scope: !14721)
!14723 = !DILocation(line: 2308, column: 25, scope: !14721)
!14724 = !DILocation(line: 2308, column: 18, scope: !14721)
!14725 = !DILocation(line: 2308, column: 31, scope: !14721)
!14726 = !DILocation(line: 2308, column: 35, scope: !14721)
!14727 = !DILocation(line: 2308, column: 39, scope: !14721)
!14728 = !DILocation(line: 2308, column: 45, scope: !14721)
!14729 = !DILocation(line: 2308, column: 13, scope: !14708)
!14730 = !DILocation(line: 2308, column: 74, scope: !14721)
!14731 = !DILocation(line: 2308, column: 72, scope: !14721)
!14732 = !DILocation(line: 2308, column: 64, scope: !14721)
!14733 = !DILocation(line: 2309, column: 13, scope: !14734)
!14734 = distinct !DILexicalBlock(scope: !14708, file: !3, line: 2309, column: 13)
!14735 = !DILocation(line: 2309, column: 21, scope: !14734)
!14736 = !DILocation(line: 2309, column: 26, scope: !14734)
!14737 = !DILocation(line: 2309, column: 29, scope: !14734)
!14738 = !DILocation(line: 2309, column: 37, scope: !14734)
!14739 = !DILocation(line: 2309, column: 13, scope: !14708)
!14740 = !DILocation(line: 2309, column: 43, scope: !14734)
!14741 = !DILocation(line: 2310, column: 8, scope: !14708)
!14742 = !DILocation(line: 2312, column: 12, scope: !14743)
!14743 = distinct !DILexicalBlock(scope: !14703, file: !3, line: 2312, column: 12)
!14744 = !DILocation(line: 2312, column: 16, scope: !14743)
!14745 = !DILocation(line: 2312, column: 14, scope: !14743)
!14746 = !DILocation(line: 2312, column: 24, scope: !14743)
!14747 = !DILocation(line: 2312, column: 28, scope: !14743)
!14748 = !DILocation(line: 2312, column: 21, scope: !14743)
!14749 = !DILocation(line: 2312, column: 34, scope: !14743)
!14750 = !DILocation(line: 2312, column: 37, scope: !14743)
!14751 = !DILocation(line: 2312, column: 45, scope: !14743)
!14752 = !DILocation(line: 2312, column: 12, scope: !14703)
!14753 = !DILocation(line: 2314, column: 31, scope: !14754)
!14754 = distinct !DILexicalBlock(scope: !14743, file: !3, line: 2312, column: 51)
!14755 = !DILocation(line: 2314, column: 35, scope: !14754)
!14756 = !DILocation(line: 2314, column: 42, scope: !14754)
!14757 = !DILocation(line: 2314, column: 40, scope: !14754)
!14758 = !DILocation(line: 2314, column: 51, scope: !14754)
!14759 = !DILocation(line: 2314, column: 17, scope: !14754)
!14760 = !DILocation(line: 2314, column: 15, scope: !14754)
!14761 = !DILocation(line: 2315, column: 16, scope: !14762)
!14762 = distinct !DILexicalBlock(scope: !14754, file: !3, line: 2315, column: 9)
!14763 = !DILocation(line: 2315, column: 14, scope: !14762)
!14764 = !DILocation(line: 2315, column: 21, scope: !14765)
!14765 = distinct !DILexicalBlock(scope: !14762, file: !3, line: 2315, column: 9)
!14766 = !DILocation(line: 2315, column: 25, scope: !14765)
!14767 = !DILocation(line: 2315, column: 23, scope: !14765)
!14768 = !DILocation(line: 2315, column: 9, scope: !14762)
!14769 = !DILocation(line: 2316, column: 18, scope: !14770)
!14770 = distinct !DILexicalBlock(scope: !14765, file: !3, line: 2315, column: 36)
!14771 = !DILocation(line: 2316, column: 25, scope: !14770)
!14772 = !DILocation(line: 2316, column: 28, scope: !14770)
!14773 = !DILocation(line: 2316, column: 32, scope: !14770)
!14774 = !DILocation(line: 2316, column: 39, scope: !14770)
!14775 = !DILocation(line: 2316, column: 30, scope: !14770)
!14776 = !DILocation(line: 2316, column: 10, scope: !14770)
!14777 = !DILocation(line: 2316, column: 48, scope: !14770)
!14778 = !DILocation(line: 2316, column: 52, scope: !14770)
!14779 = !DILocation(line: 2316, column: 55, scope: !14770)
!14780 = !DILocation(line: 2316, column: 59, scope: !14770)
!14781 = !DILocation(line: 2316, column: 63, scope: !14770)
!14782 = !DILocation(line: 2316, column: 57, scope: !14770)
!14783 = !DILocation(line: 2316, column: 71, scope: !14770)
!14784 = !DILocation(line: 2316, column: 69, scope: !14770)
!14785 = !DILocation(line: 2316, column: 75, scope: !14770)
!14786 = !DILocation(line: 2316, column: 80, scope: !14770)
!14787 = !DILocation(line: 2317, column: 18, scope: !14770)
!14788 = !DILocation(line: 2317, column: 25, scope: !14770)
!14789 = !DILocation(line: 2317, column: 28, scope: !14770)
!14790 = !DILocation(line: 2317, column: 32, scope: !14770)
!14791 = !DILocation(line: 2317, column: 39, scope: !14770)
!14792 = !DILocation(line: 2317, column: 30, scope: !14770)
!14793 = !DILocation(line: 2317, column: 47, scope: !14770)
!14794 = !DILocation(line: 2317, column: 45, scope: !14770)
!14795 = !DILocation(line: 2317, column: 10, scope: !14770)
!14796 = !DILocation(line: 2317, column: 55, scope: !14770)
!14797 = !DILocation(line: 2317, column: 59, scope: !14770)
!14798 = !DILocation(line: 2317, column: 62, scope: !14770)
!14799 = !DILocation(line: 2317, column: 66, scope: !14770)
!14800 = !DILocation(line: 2317, column: 70, scope: !14770)
!14801 = !DILocation(line: 2317, column: 64, scope: !14770)
!14802 = !DILocation(line: 2317, column: 78, scope: !14770)
!14803 = !DILocation(line: 2317, column: 86, scope: !14770)
!14804 = !DILocation(line: 2318, column: 9, scope: !14770)
!14805 = !DILocation(line: 2315, column: 32, scope: !14765)
!14806 = !DILocation(line: 2315, column: 9, scope: !14765)
!14807 = distinct !{!14807, !14768, !14808}
!14808 = !DILocation(line: 2318, column: 9, scope: !14762)
!14809 = !DILocation(line: 2319, column: 27, scope: !14754)
!14810 = !DILocation(line: 2319, column: 17, scope: !14754)
!14811 = !DILocation(line: 2320, column: 8, scope: !14754)
!14812 = !DILocation(line: 2321, column: 18, scope: !14813)
!14813 = distinct !DILexicalBlock(scope: !14743, file: !3, line: 2321, column: 17)
!14814 = !DILocation(line: 2321, column: 22, scope: !14813)
!14815 = !DILocation(line: 2321, column: 26, scope: !14813)
!14816 = !DILocation(line: 2321, column: 20, scope: !14813)
!14817 = !DILocation(line: 2321, column: 35, scope: !14813)
!14818 = !DILocation(line: 2321, column: 33, scope: !14813)
!14819 = !DILocation(line: 2321, column: 43, scope: !14813)
!14820 = !DILocation(line: 2321, column: 47, scope: !14813)
!14821 = !DILocation(line: 2321, column: 40, scope: !14813)
!14822 = !DILocation(line: 2321, column: 53, scope: !14813)
!14823 = !DILocation(line: 2321, column: 56, scope: !14813)
!14824 = !DILocation(line: 2321, column: 64, scope: !14813)
!14825 = !DILocation(line: 2321, column: 17, scope: !14743)
!14826 = !DILocation(line: 2323, column: 31, scope: !14827)
!14827 = distinct !DILexicalBlock(scope: !14813, file: !3, line: 2321, column: 70)
!14828 = !DILocation(line: 2323, column: 35, scope: !14827)
!14829 = !DILocation(line: 2323, column: 41, scope: !14827)
!14830 = !DILocation(line: 2323, column: 48, scope: !14827)
!14831 = !DILocation(line: 2323, column: 46, scope: !14827)
!14832 = !DILocation(line: 2323, column: 17, scope: !14827)
!14833 = !DILocation(line: 2323, column: 15, scope: !14827)
!14834 = !DILocation(line: 2324, column: 16, scope: !14827)
!14835 = !DILocation(line: 2324, column: 23, scope: !14827)
!14836 = !DILocation(line: 2324, column: 9, scope: !14827)
!14837 = !DILocation(line: 2324, column: 28, scope: !14827)
!14838 = !DILocation(line: 2324, column: 32, scope: !14827)
!14839 = !DILocation(line: 2324, column: 35, scope: !14827)
!14840 = !DILocation(line: 2324, column: 39, scope: !14827)
!14841 = !DILocation(line: 2324, column: 46, scope: !14827)
!14842 = !DILocation(line: 2324, column: 44, scope: !14827)
!14843 = !DILocation(line: 2324, column: 51, scope: !14827)
!14844 = !DILocation(line: 2325, column: 17, scope: !14827)
!14845 = !DILocation(line: 2325, column: 24, scope: !14827)
!14846 = !DILocation(line: 2325, column: 27, scope: !14827)
!14847 = !DILocation(line: 2325, column: 34, scope: !14827)
!14848 = !DILocation(line: 2325, column: 32, scope: !14827)
!14849 = !DILocation(line: 2325, column: 9, scope: !14827)
!14850 = !DILocation(line: 2325, column: 41, scope: !14827)
!14851 = !DILocation(line: 2325, column: 45, scope: !14827)
!14852 = !DILocation(line: 2325, column: 49, scope: !14827)
!14853 = !DILocation(line: 2325, column: 56, scope: !14827)
!14854 = !DILocation(line: 2325, column: 54, scope: !14827)
!14855 = !DILocation(line: 2325, column: 64, scope: !14827)
!14856 = !DILocation(line: 2326, column: 27, scope: !14827)
!14857 = !DILocation(line: 2326, column: 17, scope: !14827)
!14858 = !DILocation(line: 2327, column: 8, scope: !14827)
!14859 = !DILocation(line: 2329, column: 31, scope: !14860)
!14860 = distinct !DILexicalBlock(scope: !14813, file: !3, line: 2328, column: 13)
!14861 = !DILocation(line: 2329, column: 35, scope: !14860)
!14862 = !DILocation(line: 2329, column: 41, scope: !14860)
!14863 = !DILocation(line: 2329, column: 17, scope: !14860)
!14864 = !DILocation(line: 2329, column: 15, scope: !14860)
!14865 = !DILocation(line: 2330, column: 16, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14860, file: !3, line: 2330, column: 9)
!14867 = !DILocation(line: 2330, column: 14, scope: !14866)
!14868 = !DILocation(line: 2330, column: 21, scope: !14869)
!14869 = distinct !DILexicalBlock(scope: !14866, file: !3, line: 2330, column: 9)
!14870 = !DILocation(line: 2330, column: 25, scope: !14869)
!14871 = !DILocation(line: 2330, column: 23, scope: !14869)
!14872 = !DILocation(line: 2330, column: 9, scope: !14866)
!14873 = !DILocation(line: 2331, column: 18, scope: !14874)
!14874 = distinct !DILexicalBlock(scope: !14869, file: !3, line: 2330, column: 36)
!14875 = !DILocation(line: 2331, column: 25, scope: !14874)
!14876 = !DILocation(line: 2331, column: 28, scope: !14874)
!14877 = !DILocation(line: 2331, column: 32, scope: !14874)
!14878 = !DILocation(line: 2331, column: 30, scope: !14874)
!14879 = !DILocation(line: 2331, column: 10, scope: !14874)
!14880 = !DILocation(line: 2331, column: 40, scope: !14874)
!14881 = !DILocation(line: 2331, column: 44, scope: !14874)
!14882 = !DILocation(line: 2331, column: 47, scope: !14874)
!14883 = !DILocation(line: 2331, column: 51, scope: !14874)
!14884 = !DILocation(line: 2331, column: 55, scope: !14874)
!14885 = !DILocation(line: 2331, column: 49, scope: !14874)
!14886 = !DILocation(line: 2331, column: 63, scope: !14874)
!14887 = !DILocation(line: 2331, column: 61, scope: !14874)
!14888 = !DILocation(line: 2331, column: 67, scope: !14874)
!14889 = !DILocation(line: 2331, column: 72, scope: !14874)
!14890 = !DILocation(line: 2332, column: 9, scope: !14874)
!14891 = !DILocation(line: 2330, column: 32, scope: !14869)
!14892 = !DILocation(line: 2330, column: 9, scope: !14869)
!14893 = distinct !{!14893, !14872, !14894}
!14894 = !DILocation(line: 2332, column: 9, scope: !14866)
!14895 = !DILocation(line: 2334, column: 20, scope: !14703)
!14896 = !DILocation(line: 2334, column: 29, scope: !14703)
!14897 = !DILocation(line: 2334, column: 8, scope: !14703)
!14898 = !DILocation(line: 2336, column: 12, scope: !14899)
!14899 = distinct !DILexicalBlock(scope: !14703, file: !3, line: 2336, column: 12)
!14900 = !DILocation(line: 2336, column: 20, scope: !14899)
!14901 = !DILocation(line: 2336, column: 24, scope: !14899)
!14902 = !DILocation(line: 2336, column: 17, scope: !14899)
!14903 = !DILocation(line: 2336, column: 12, scope: !14703)
!14904 = !DILocation(line: 2336, column: 31, scope: !14899)
!14905 = !DILocation(line: 2336, column: 38, scope: !14899)
!14906 = !DILocation(line: 2336, column: 44, scope: !14899)
!14907 = !DILocation(line: 2337, column: 12, scope: !14908)
!14908 = distinct !DILexicalBlock(scope: !14703, file: !3, line: 2337, column: 12)
!14909 = !DILocation(line: 2337, column: 20, scope: !14908)
!14910 = !DILocation(line: 2337, column: 24, scope: !14908)
!14911 = !DILocation(line: 2337, column: 17, scope: !14908)
!14912 = !DILocation(line: 2337, column: 12, scope: !14703)
!14913 = !DILocation(line: 2337, column: 31, scope: !14908)
!14914 = !DILocation(line: 2337, column: 38, scope: !14908)
!14915 = !DILocation(line: 2337, column: 44, scope: !14908)
!14916 = !DILocation(line: 2338, column: 7, scope: !14703)
!14917 = !DILocation(line: 2339, column: 6, scope: !14605)
!14918 = !DILocation(line: 2279, column: 60, scope: !14596)
!14919 = !DILocation(line: 2279, column: 67, scope: !14596)
!14920 = !DILocation(line: 2279, column: 6, scope: !14596)
!14921 = distinct !{!14921, !14603, !14922}
!14922 = !DILocation(line: 2339, column: 6, scope: !14589)
!14923 = !DILocation(line: 2341, column: 10, scope: !14924)
!14924 = distinct !DILexicalBlock(scope: !14590, file: !3, line: 2341, column: 10)
!14925 = !DILocation(line: 2341, column: 18, scope: !14924)
!14926 = !DILocation(line: 2341, column: 23, scope: !14924)
!14927 = !DILocation(line: 2341, column: 26, scope: !14924)
!14928 = !DILocation(line: 2341, column: 34, scope: !14924)
!14929 = !DILocation(line: 2341, column: 10, scope: !14590)
!14930 = !DILocation(line: 2343, column: 14, scope: !14931)
!14931 = distinct !DILexicalBlock(scope: !14924, file: !3, line: 2341, column: 40)
!14932 = !DILocation(line: 2343, column: 22, scope: !14931)
!14933 = !DILocation(line: 2343, column: 29, scope: !14931)
!14934 = !DILocation(line: 2343, column: 33, scope: !14931)
!14935 = !DILocation(line: 2343, column: 41, scope: !14931)
!14936 = !DILocation(line: 2343, column: 12, scope: !14931)
!14937 = !DILocation(line: 2344, column: 14, scope: !14931)
!14938 = !DILocation(line: 2344, column: 22, scope: !14931)
!14939 = !DILocation(line: 2344, column: 29, scope: !14931)
!14940 = !DILocation(line: 2344, column: 33, scope: !14931)
!14941 = !DILocation(line: 2344, column: 41, scope: !14931)
!14942 = !DILocation(line: 2344, column: 12, scope: !14931)
!14943 = !DILocation(line: 2346, column: 29, scope: !14931)
!14944 = !DILocation(line: 2346, column: 33, scope: !14931)
!14945 = !DILocation(line: 2346, column: 39, scope: !14931)
!14946 = !DILocation(line: 2346, column: 15, scope: !14931)
!14947 = !DILocation(line: 2346, column: 13, scope: !14931)
!14948 = !DILocation(line: 2347, column: 14, scope: !14949)
!14949 = distinct !DILexicalBlock(scope: !14931, file: !3, line: 2347, column: 7)
!14950 = !DILocation(line: 2347, column: 12, scope: !14949)
!14951 = !DILocation(line: 2347, column: 19, scope: !14952)
!14952 = distinct !DILexicalBlock(scope: !14949, file: !3, line: 2347, column: 7)
!14953 = !DILocation(line: 2347, column: 23, scope: !14952)
!14954 = !DILocation(line: 2347, column: 21, scope: !14952)
!14955 = !DILocation(line: 2347, column: 7, scope: !14949)
!14956 = !DILocation(line: 2348, column: 16, scope: !14957)
!14957 = distinct !DILexicalBlock(scope: !14952, file: !3, line: 2347, column: 34)
!14958 = !DILocation(line: 2348, column: 23, scope: !14957)
!14959 = !DILocation(line: 2348, column: 26, scope: !14957)
!14960 = !DILocation(line: 2348, column: 30, scope: !14957)
!14961 = !DILocation(line: 2348, column: 28, scope: !14957)
!14962 = !DILocation(line: 2348, column: 8, scope: !14957)
!14963 = !DILocation(line: 2348, column: 38, scope: !14957)
!14964 = !DILocation(line: 2348, column: 42, scope: !14957)
!14965 = !DILocation(line: 2348, column: 45, scope: !14957)
!14966 = !DILocation(line: 2348, column: 49, scope: !14957)
!14967 = !DILocation(line: 2348, column: 53, scope: !14957)
!14968 = !DILocation(line: 2348, column: 47, scope: !14957)
!14969 = !DILocation(line: 2348, column: 61, scope: !14957)
!14970 = !DILocation(line: 2348, column: 66, scope: !14957)
!14971 = !DILocation(line: 2349, column: 7, scope: !14957)
!14972 = !DILocation(line: 2347, column: 30, scope: !14952)
!14973 = !DILocation(line: 2347, column: 7, scope: !14952)
!14974 = distinct !{!14974, !14955, !14975}
!14975 = !DILocation(line: 2349, column: 7, scope: !14949)
!14976 = !DILocation(line: 2350, column: 19, scope: !14931)
!14977 = !DILocation(line: 2350, column: 28, scope: !14931)
!14978 = !DILocation(line: 2350, column: 7, scope: !14931)
!14979 = !DILocation(line: 2352, column: 11, scope: !14980)
!14980 = distinct !DILexicalBlock(scope: !14931, file: !3, line: 2352, column: 11)
!14981 = !DILocation(line: 2352, column: 19, scope: !14980)
!14982 = !DILocation(line: 2352, column: 23, scope: !14980)
!14983 = !DILocation(line: 2352, column: 16, scope: !14980)
!14984 = !DILocation(line: 2352, column: 11, scope: !14931)
!14985 = !DILocation(line: 2352, column: 30, scope: !14980)
!14986 = !DILocation(line: 2352, column: 37, scope: !14980)
!14987 = !DILocation(line: 2352, column: 43, scope: !14980)
!14988 = !DILocation(line: 2353, column: 11, scope: !14989)
!14989 = distinct !DILexicalBlock(scope: !14931, file: !3, line: 2353, column: 11)
!14990 = !DILocation(line: 2353, column: 19, scope: !14989)
!14991 = !DILocation(line: 2353, column: 23, scope: !14989)
!14992 = !DILocation(line: 2353, column: 16, scope: !14989)
!14993 = !DILocation(line: 2353, column: 11, scope: !14931)
!14994 = !DILocation(line: 2353, column: 30, scope: !14989)
!14995 = !DILocation(line: 2353, column: 37, scope: !14989)
!14996 = !DILocation(line: 2353, column: 43, scope: !14989)
!14997 = !DILocation(line: 2354, column: 6, scope: !14931)
!14998 = !DILocation(line: 2356, column: 13, scope: !14999)
!14999 = distinct !DILexicalBlock(scope: !14590, file: !3, line: 2356, column: 6)
!15000 = !DILocation(line: 2356, column: 24, scope: !14999)
!15001 = !DILocation(line: 2356, column: 28, scope: !14999)
!15002 = !DILocation(line: 2356, column: 22, scope: !14999)
!15003 = !DILocation(line: 2356, column: 11, scope: !14999)
!15004 = !DILocation(line: 2356, column: 32, scope: !15005)
!15005 = distinct !DILexicalBlock(scope: !14999, file: !3, line: 2356, column: 6)
!15006 = !DILocation(line: 2356, column: 36, scope: !15005)
!15007 = !DILocation(line: 2356, column: 40, scope: !15005)
!15008 = !DILocation(line: 2356, column: 48, scope: !15005)
!15009 = !DILocation(line: 2356, column: 52, scope: !15005)
!15010 = !DILocation(line: 2356, column: 46, scope: !15005)
!15011 = !DILocation(line: 2356, column: 34, scope: !15005)
!15012 = !DILocation(line: 2356, column: 6, scope: !14999)
!15013 = !DILocation(line: 2357, column: 7, scope: !15014)
!15014 = distinct !DILexicalBlock(scope: !15005, file: !3, line: 2356, column: 71)
!15015 = !DILocation(line: 2357, column: 12, scope: !15014)
!15016 = !DILocation(line: 2357, column: 15, scope: !15014)
!15017 = !DILocation(line: 2358, column: 12, scope: !15018)
!15018 = distinct !DILexicalBlock(scope: !15014, file: !3, line: 2358, column: 11)
!15019 = !DILocation(line: 2358, column: 11, scope: !15014)
!15020 = !DILocation(line: 2358, column: 33, scope: !15018)
!15021 = !DILocation(line: 2358, column: 48, scope: !15018)
!15022 = !DILocation(line: 2358, column: 19, scope: !15018)
!15023 = !DILocation(line: 2359, column: 6, scope: !15014)
!15024 = !DILocation(line: 2356, column: 60, scope: !15005)
!15025 = !DILocation(line: 2356, column: 67, scope: !15005)
!15026 = !DILocation(line: 2356, column: 6, scope: !15005)
!15027 = distinct !{!15027, !15012, !15028}
!15028 = !DILocation(line: 2359, column: 6, scope: !14999)
!15029 = !DILocation(line: 2361, column: 4, scope: !14476)
!15030 = !DILocation(line: 2363, column: 8, scope: !14052)
!15031 = !DILocation(line: 2363, column: 12, scope: !14052)
!15032 = !DILocation(line: 2363, column: 6, scope: !14052)
!15033 = distinct !{!15033, !14049, !15034}
!15034 = !DILocation(line: 2364, column: 2, scope: !13988)
!15035 = !DILocation(line: 2366, column: 28, scope: !15036)
!15036 = distinct !DILexicalBlock(scope: !13988, file: !3, line: 2366, column: 6)
!15037 = !DILocation(line: 2366, column: 6, scope: !15036)
!15038 = !DILocation(line: 2366, column: 37, scope: !15036)
!15039 = !DILocation(line: 2366, column: 6, scope: !13988)
!15040 = !DILocation(line: 2367, column: 15, scope: !15041)
!15041 = distinct !DILexicalBlock(scope: !15036, file: !3, line: 2366, column: 47)
!15042 = !DILocation(line: 2367, column: 19, scope: !15041)
!15043 = !DILocation(line: 2367, column: 27, scope: !15041)
!15044 = !DILocation(line: 2367, column: 3, scope: !15041)
!15045 = !DILocation(line: 2367, column: 7, scope: !15041)
!15046 = !DILocation(line: 2367, column: 13, scope: !15041)
!15047 = !DILocation(line: 2369, column: 13, scope: !15048)
!15048 = distinct !DILexicalBlock(scope: !15041, file: !3, line: 2369, column: 3)
!15049 = !DILocation(line: 2369, column: 22, scope: !15048)
!15050 = !DILocation(line: 2369, column: 11, scope: !15048)
!15051 = !DILocation(line: 2369, column: 8, scope: !15048)
!15052 = !DILocation(line: 2369, column: 29, scope: !15053)
!15053 = distinct !DILexicalBlock(scope: !15048, file: !3, line: 2369, column: 3)
!15054 = !DILocation(line: 2369, column: 3, scope: !15048)
!15055 = !DILocation(line: 2370, column: 8, scope: !15056)
!15056 = distinct !DILexicalBlock(scope: !15057, file: !3, line: 2370, column: 8)
!15057 = distinct !DILexicalBlock(scope: !15053, file: !3, line: 2369, column: 48)
!15058 = !DILocation(line: 2370, column: 12, scope: !15056)
!15059 = !DILocation(line: 2370, column: 17, scope: !15056)
!15060 = !DILocation(line: 2370, column: 8, scope: !15057)
!15061 = !DILocation(line: 2371, column: 9, scope: !15062)
!15062 = distinct !DILexicalBlock(scope: !15063, file: !3, line: 2371, column: 9)
!15063 = distinct !DILexicalBlock(scope: !15056, file: !3, line: 2370, column: 31)
!15064 = !DILocation(line: 2371, column: 9, scope: !15063)
!15065 = !DILocation(line: 2373, column: 34, scope: !15066)
!15066 = distinct !DILexicalBlock(scope: !15062, file: !3, line: 2371, column: 16)
!15067 = !DILocation(line: 2373, column: 39, scope: !15066)
!15068 = !DILocation(line: 2373, column: 43, scope: !15066)
!15069 = !DILocation(line: 2373, column: 6, scope: !15066)
!15070 = !DILocation(line: 2374, column: 34, scope: !15066)
!15071 = !DILocation(line: 2374, column: 39, scope: !15066)
!15072 = !DILocation(line: 2374, column: 43, scope: !15066)
!15073 = !DILocation(line: 2374, column: 48, scope: !15066)
!15074 = !DILocation(line: 2374, column: 52, scope: !15066)
!15075 = !DILocation(line: 2374, column: 58, scope: !15066)
!15076 = !DILocation(line: 2374, column: 6, scope: !15066)
!15077 = !DILocation(line: 2375, column: 5, scope: !15066)
!15078 = !DILocation(line: 2376, column: 4, scope: !15063)
!15079 = !DILocation(line: 2379, column: 18, scope: !15080)
!15080 = distinct !DILexicalBlock(scope: !15056, file: !3, line: 2377, column: 9)
!15081 = !DILocation(line: 2379, column: 22, scope: !15080)
!15082 = !DILocation(line: 2379, column: 29, scope: !15080)
!15083 = !DILocation(line: 2379, column: 5, scope: !15080)
!15084 = !DILocation(line: 2379, column: 9, scope: !15080)
!15085 = !DILocation(line: 2379, column: 16, scope: !15080)
!15086 = !DILocation(line: 2380, column: 28, scope: !15080)
!15087 = !DILocation(line: 2380, column: 5, scope: !15080)
!15088 = !DILocation(line: 2381, column: 26, scope: !15080)
!15089 = !DILocation(line: 2381, column: 5, scope: !15080)
!15090 = !DILocation(line: 2383, column: 9, scope: !15091)
!15091 = distinct !DILexicalBlock(scope: !15080, file: !3, line: 2383, column: 9)
!15092 = !DILocation(line: 2383, column: 17, scope: !15091)
!15093 = !DILocation(line: 2383, column: 22, scope: !15091)
!15094 = !DILocation(line: 2383, column: 9, scope: !15080)
!15095 = !DILocation(line: 2384, column: 13, scope: !15096)
!15096 = distinct !DILexicalBlock(scope: !15097, file: !3, line: 2384, column: 6)
!15097 = distinct !DILexicalBlock(scope: !15091, file: !3, line: 2383, column: 34)
!15098 = !DILocation(line: 2384, column: 23, scope: !15096)
!15099 = !DILocation(line: 2384, column: 27, scope: !15096)
!15100 = !DILocation(line: 2384, column: 21, scope: !15096)
!15101 = !DILocation(line: 2384, column: 11, scope: !15096)
!15102 = !DILocation(line: 2384, column: 31, scope: !15103)
!15103 = distinct !DILexicalBlock(scope: !15096, file: !3, line: 2384, column: 6)
!15104 = !DILocation(line: 2384, column: 35, scope: !15103)
!15105 = !DILocation(line: 2384, column: 39, scope: !15103)
!15106 = !DILocation(line: 2384, column: 47, scope: !15103)
!15107 = !DILocation(line: 2384, column: 51, scope: !15103)
!15108 = !DILocation(line: 2384, column: 45, scope: !15103)
!15109 = !DILocation(line: 2384, column: 33, scope: !15103)
!15110 = !DILocation(line: 2384, column: 6, scope: !15096)
!15111 = !DILocation(line: 2385, column: 7, scope: !15112)
!15112 = distinct !DILexicalBlock(scope: !15103, file: !3, line: 2384, column: 69)
!15113 = !DILocation(line: 2385, column: 11, scope: !15112)
!15114 = !DILocation(line: 2385, column: 14, scope: !15112)
!15115 = !DILocation(line: 2386, column: 6, scope: !15112)
!15116 = !DILocation(line: 2384, column: 59, scope: !15103)
!15117 = !DILocation(line: 2384, column: 65, scope: !15103)
!15118 = !DILocation(line: 2384, column: 6, scope: !15103)
!15119 = distinct !{!15119, !15110, !15120}
!15120 = !DILocation(line: 2386, column: 6, scope: !15096)
!15121 = !DILocation(line: 2388, column: 29, scope: !15097)
!15122 = !DILocation(line: 2388, column: 6, scope: !15097)
!15123 = !DILocation(line: 2389, column: 27, scope: !15097)
!15124 = !DILocation(line: 2389, column: 6, scope: !15097)
!15125 = !DILocation(line: 2390, column: 5, scope: !15097)
!15126 = !DILocation(line: 2392, column: 3, scope: !15057)
!15127 = !DILocation(line: 2369, column: 38, scope: !15053)
!15128 = !DILocation(line: 2369, column: 42, scope: !15053)
!15129 = !DILocation(line: 2369, column: 36, scope: !15053)
!15130 = !DILocation(line: 2369, column: 3, scope: !15053)
!15131 = distinct !{!15131, !15054, !15132}
!15132 = !DILocation(line: 2392, column: 3, scope: !15048)
!15133 = !DILocation(line: 2393, column: 2, scope: !15041)
!15134 = !DILocation(line: 2394, column: 1, scope: !13988)
!15135 = distinct !DISubprogram(name: "BLI_listbase_is_empty", scope: !12579, file: !12579, line: 88, type: !15136, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!15136 = !DISubroutineType(types: !15137)
!15137 = !{!1081, !15138}
!15138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15139, size: 64)
!15139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!15140 = !DILocalVariable(name: "lb", arg: 1, scope: !15135, file: !12579, line: 88, type: !15138)
!15141 = !DILocation(line: 88, column: 62, scope: !15135)
!15142 = !DILocation(line: 88, column: 76, scope: !15135)
!15143 = !DILocation(line: 88, column: 80, scope: !15135)
!15144 = !DILocation(line: 88, column: 86, scope: !15135)
!15145 = !DILocation(line: 88, column: 75, scope: !15135)
!15146 = !DILocation(line: 88, column: 68, scope: !15135)
!15147 = distinct !DISubprogram(name: "curve_delete_segments", scope: !3, file: !3, line: 6175, type: !15148, scopeLine: 6176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!15148 = !DISubroutineType(types: !15149)
!15149 = !{!22, !3242, !7655}
!15150 = !DILocalVariable(name: "obedit", arg: 1, scope: !15147, file: !3, line: 6175, type: !3242)
!15151 = !DILocation(line: 6175, column: 42, scope: !15147)
!15152 = !DILocalVariable(name: "split", arg: 2, scope: !15147, file: !3, line: 6175, type: !7655)
!15153 = !DILocation(line: 6175, column: 61, scope: !15147)
!15154 = !DILocalVariable(name: "cu", scope: !15147, file: !3, line: 6177, type: !2953)
!15155 = !DILocation(line: 6177, column: 9, scope: !15147)
!15156 = !DILocation(line: 6177, column: 14, scope: !15147)
!15157 = !DILocation(line: 6177, column: 22, scope: !15147)
!15158 = !DILocalVariable(name: "editnurb", scope: !15147, file: !3, line: 6178, type: !2962)
!15159 = !DILocation(line: 6178, column: 12, scope: !15147)
!15160 = !DILocation(line: 6178, column: 23, scope: !15147)
!15161 = !DILocation(line: 6178, column: 27, scope: !15147)
!15162 = !DILocalVariable(name: "nubase", scope: !15147, file: !3, line: 6179, type: !486)
!15163 = !DILocation(line: 6179, column: 12, scope: !15147)
!15164 = !DILocation(line: 6179, column: 22, scope: !15147)
!15165 = !DILocation(line: 6179, column: 32, scope: !15147)
!15166 = !DILocalVariable(name: "newnurb", scope: !15147, file: !3, line: 6179, type: !58)
!15167 = !DILocation(line: 6179, column: 39, scope: !15147)
!15168 = !DILocalVariable(name: "nu", scope: !15147, file: !3, line: 6180, type: !3163)
!15169 = !DILocation(line: 6180, column: 8, scope: !15147)
!15170 = !DILocalVariable(name: "nu1", scope: !15147, file: !3, line: 6180, type: !3163)
!15171 = !DILocation(line: 6180, column: 13, scope: !15147)
!15172 = !DILocalVariable(name: "bezt", scope: !15147, file: !3, line: 6181, type: !3104)
!15173 = !DILocation(line: 6181, column: 13, scope: !15147)
!15174 = !DILocalVariable(name: "bezt1", scope: !15147, file: !3, line: 6181, type: !3104)
!15175 = !DILocation(line: 6181, column: 20, scope: !15147)
!15176 = !DILocalVariable(name: "bezt2", scope: !15147, file: !3, line: 6181, type: !3104)
!15177 = !DILocation(line: 6181, column: 28, scope: !15147)
!15178 = !DILocalVariable(name: "bp", scope: !15147, file: !3, line: 6182, type: !3093)
!15179 = !DILocation(line: 6182, column: 10, scope: !15147)
!15180 = !DILocalVariable(name: "bp1", scope: !15147, file: !3, line: 6182, type: !3093)
!15181 = !DILocation(line: 6182, column: 15, scope: !15147)
!15182 = !DILocalVariable(name: "bp2", scope: !15147, file: !3, line: 6182, type: !3093)
!15183 = !DILocation(line: 6182, column: 21, scope: !15147)
!15184 = !DILocalVariable(name: "a", scope: !15147, file: !3, line: 6183, type: !22)
!15185 = !DILocation(line: 6183, column: 6, scope: !15147)
!15186 = !DILocalVariable(name: "b", scope: !15147, file: !3, line: 6183, type: !22)
!15187 = !DILocation(line: 6183, column: 9, scope: !15147)
!15188 = !DILocalVariable(name: "starta", scope: !15147, file: !3, line: 6183, type: !22)
!15189 = !DILocation(line: 6183, column: 12, scope: !15147)
!15190 = !DILocalVariable(name: "enda", scope: !15147, file: !3, line: 6183, type: !22)
!15191 = !DILocation(line: 6183, column: 20, scope: !15147)
!15192 = !DILocalVariable(name: "cut", scope: !15147, file: !3, line: 6183, type: !22)
!15193 = !DILocation(line: 6183, column: 26, scope: !15147)
!15194 = !DILocalVariable(name: "cyclicut", scope: !15147, file: !3, line: 6183, type: !22)
!15195 = !DILocation(line: 6183, column: 31, scope: !15147)
!15196 = !DILocation(line: 6185, column: 12, scope: !15197)
!15197 = distinct !DILexicalBlock(scope: !15147, file: !3, line: 6185, column: 2)
!15198 = !DILocation(line: 6185, column: 20, scope: !15197)
!15199 = !DILocation(line: 6185, column: 10, scope: !15197)
!15200 = !DILocation(line: 6185, column: 7, scope: !15197)
!15201 = !DILocation(line: 6185, column: 27, scope: !15202)
!15202 = distinct !DILexicalBlock(scope: !15197, file: !3, line: 6185, column: 2)
!15203 = !DILocation(line: 6185, column: 2, scope: !15197)
!15204 = !DILocation(line: 6186, column: 7, scope: !15205)
!15205 = distinct !DILexicalBlock(scope: !15202, file: !3, line: 6185, column: 46)
!15206 = !DILocation(line: 6187, column: 23, scope: !15205)
!15207 = !DILocation(line: 6187, column: 17, scope: !15205)
!15208 = !DILocation(line: 6187, column: 10, scope: !15205)
!15209 = !DILocation(line: 6188, column: 12, scope: !15205)
!15210 = !DILocation(line: 6190, column: 7, scope: !15211)
!15211 = distinct !DILexicalBlock(scope: !15205, file: !3, line: 6190, column: 7)
!15212 = !DILocation(line: 6190, column: 11, scope: !15211)
!15213 = !DILocation(line: 6190, column: 16, scope: !15211)
!15214 = !DILocation(line: 6190, column: 7, scope: !15205)
!15215 = !DILocation(line: 6191, column: 11, scope: !15216)
!15216 = distinct !DILexicalBlock(scope: !15217, file: !3, line: 6191, column: 4)
!15217 = distinct !DILexicalBlock(scope: !15211, file: !3, line: 6190, column: 30)
!15218 = !DILocation(line: 6191, column: 23, scope: !15216)
!15219 = !DILocation(line: 6191, column: 27, scope: !15216)
!15220 = !DILocation(line: 6191, column: 21, scope: !15216)
!15221 = !DILocation(line: 6191, column: 9, scope: !15216)
!15222 = !DILocation(line: 6191, column: 33, scope: !15223)
!15223 = distinct !DILexicalBlock(scope: !15216, file: !3, line: 6191, column: 4)
!15224 = !DILocation(line: 6191, column: 37, scope: !15223)
!15225 = !DILocation(line: 6191, column: 41, scope: !15223)
!15226 = !DILocation(line: 6191, column: 35, scope: !15223)
!15227 = !DILocation(line: 6191, column: 4, scope: !15216)
!15228 = !DILocation(line: 6192, column: 10, scope: !15229)
!15229 = distinct !DILexicalBlock(scope: !15230, file: !3, line: 6192, column: 9)
!15230 = distinct !DILexicalBlock(scope: !15223, file: !3, line: 6191, column: 61)
!15231 = !DILocation(line: 6192, column: 9, scope: !15230)
!15232 = !DILocation(line: 6193, column: 13, scope: !15233)
!15233 = distinct !DILexicalBlock(scope: !15229, file: !3, line: 6192, column: 47)
!15234 = !DILocation(line: 6193, column: 11, scope: !15233)
!15235 = !DILocation(line: 6194, column: 10, scope: !15236)
!15236 = distinct !DILexicalBlock(scope: !15233, file: !3, line: 6194, column: 10)
!15237 = !DILocation(line: 6194, column: 17, scope: !15236)
!15238 = !DILocation(line: 6194, column: 10, scope: !15233)
!15239 = !DILocation(line: 6194, column: 33, scope: !15236)
!15240 = !DILocation(line: 6194, column: 31, scope: !15236)
!15241 = !DILocation(line: 6194, column: 24, scope: !15236)
!15242 = !DILocation(line: 6195, column: 10, scope: !15243)
!15243 = distinct !DILexicalBlock(scope: !15233, file: !3, line: 6195, column: 10)
!15244 = !DILocation(line: 6195, column: 14, scope: !15243)
!15245 = !DILocation(line: 6195, column: 18, scope: !15243)
!15246 = !DILocation(line: 6195, column: 24, scope: !15243)
!15247 = !DILocation(line: 6195, column: 12, scope: !15243)
!15248 = !DILocation(line: 6195, column: 10, scope: !15233)
!15249 = !DILocation(line: 6195, column: 29, scope: !15243)
!15250 = !DILocation(line: 6196, column: 5, scope: !15233)
!15251 = !DILocation(line: 6197, column: 14, scope: !15252)
!15252 = distinct !DILexicalBlock(scope: !15229, file: !3, line: 6197, column: 14)
!15253 = !DILocation(line: 6197, column: 18, scope: !15252)
!15254 = !DILocation(line: 6197, column: 22, scope: !15252)
!15255 = !DILocation(line: 6197, column: 28, scope: !15252)
!15256 = !DILocation(line: 6197, column: 16, scope: !15252)
!15257 = !DILocation(line: 6197, column: 32, scope: !15252)
!15258 = !DILocation(line: 6197, column: 36, scope: !15252)
!15259 = !DILocation(line: 6197, column: 14, scope: !15229)
!15260 = !DILocation(line: 6199, column: 6, scope: !15261)
!15261 = distinct !DILexicalBlock(scope: !15252, file: !3, line: 6197, column: 77)
!15262 = !DILocation(line: 6202, column: 9, scope: !15263)
!15263 = distinct !DILexicalBlock(scope: !15230, file: !3, line: 6202, column: 9)
!15264 = !DILocation(line: 6202, column: 16, scope: !15263)
!15265 = !DILocation(line: 6202, column: 9, scope: !15230)
!15266 = !DILocation(line: 6204, column: 10, scope: !15267)
!15267 = distinct !DILexicalBlock(scope: !15268, file: !3, line: 6204, column: 10)
!15268 = distinct !DILexicalBlock(scope: !15263, file: !3, line: 6202, column: 22)
!15269 = !DILocation(line: 6204, column: 17, scope: !15267)
!15270 = !DILocation(line: 6204, column: 22, scope: !15267)
!15271 = !DILocation(line: 6204, column: 25, scope: !15267)
!15272 = !DILocation(line: 6204, column: 30, scope: !15267)
!15273 = !DILocation(line: 6204, column: 34, scope: !15267)
!15274 = !DILocation(line: 6204, column: 40, scope: !15267)
!15275 = !DILocation(line: 6204, column: 27, scope: !15267)
!15276 = !DILocation(line: 6204, column: 10, scope: !15268)
!15277 = !DILocation(line: 6206, column: 11, scope: !15278)
!15278 = distinct !DILexicalBlock(scope: !15279, file: !3, line: 6206, column: 11)
!15279 = distinct !DILexicalBlock(scope: !15267, file: !3, line: 6204, column: 45)
!15280 = !DILocation(line: 6206, column: 18, scope: !15278)
!15281 = !DILocation(line: 6206, column: 23, scope: !15278)
!15282 = !DILocation(line: 6206, column: 26, scope: !15278)
!15283 = !DILocation(line: 6206, column: 34, scope: !15278)
!15284 = !DILocation(line: 6206, column: 31, scope: !15278)
!15285 = !DILocation(line: 6206, column: 11, scope: !15279)
!15286 = !DILocation(line: 6206, column: 37, scope: !15278)
!15287 = !DILocation(line: 6206, column: 41, scope: !15278)
!15288 = !DILocation(line: 6206, column: 47, scope: !15278)
!15289 = !DILocation(line: 6208, column: 14, scope: !15279)
!15290 = !DILocation(line: 6209, column: 14, scope: !15279)
!15291 = !DILocation(line: 6209, column: 12, scope: !15279)
!15292 = !DILocation(line: 6210, column: 13, scope: !15279)
!15293 = !DILocation(line: 6210, column: 20, scope: !15279)
!15294 = !DILocation(line: 6210, column: 18, scope: !15279)
!15295 = !DILocation(line: 6210, column: 27, scope: !15279)
!15296 = !DILocation(line: 6210, column: 11, scope: !15279)
!15297 = !DILocation(line: 6211, column: 27, scope: !15279)
!15298 = !DILocation(line: 6211, column: 31, scope: !15279)
!15299 = !DILocation(line: 6211, column: 13, scope: !15279)
!15300 = !DILocation(line: 6211, column: 11, scope: !15279)
!15301 = !DILocation(line: 6212, column: 6, scope: !15279)
!15302 = !DILocation(line: 6213, column: 15, scope: !15303)
!15303 = distinct !DILexicalBlock(scope: !15267, file: !3, line: 6213, column: 15)
!15304 = !DILocation(line: 6213, column: 22, scope: !15303)
!15305 = !DILocation(line: 6213, column: 15, scope: !15267)
!15306 = !DILocation(line: 6215, column: 11, scope: !15307)
!15307 = distinct !DILexicalBlock(scope: !15303, file: !3, line: 6213, column: 28)
!15308 = !DILocation(line: 6216, column: 13, scope: !15307)
!15309 = !DILocation(line: 6216, column: 20, scope: !15307)
!15310 = !DILocation(line: 6216, column: 18, scope: !15307)
!15311 = !DILocation(line: 6216, column: 27, scope: !15307)
!15312 = !DILocation(line: 6216, column: 11, scope: !15307)
!15313 = !DILocation(line: 6217, column: 16, scope: !15307)
!15314 = !DILocation(line: 6217, column: 20, scope: !15307)
!15315 = !DILocation(line: 6217, column: 25, scope: !15307)
!15316 = !DILocation(line: 6217, column: 29, scope: !15307)
!15317 = !DILocation(line: 6217, column: 35, scope: !15307)
!15318 = !DILocation(line: 6217, column: 13, scope: !15307)
!15319 = !DILocation(line: 6218, column: 16, scope: !15307)
!15320 = !DILocation(line: 6218, column: 20, scope: !15307)
!15321 = !DILocation(line: 6218, column: 25, scope: !15307)
!15322 = !DILocation(line: 6218, column: 29, scope: !15307)
!15323 = !DILocation(line: 6218, column: 35, scope: !15307)
!15324 = !DILocation(line: 6218, column: 13, scope: !15307)
!15325 = !DILocation(line: 6220, column: 12, scope: !15326)
!15326 = distinct !DILexicalBlock(scope: !15307, file: !3, line: 6220, column: 11)
!15327 = !DILocation(line: 6220, column: 16, scope: !15326)
!15328 = !DILocation(line: 6220, column: 22, scope: !15326)
!15329 = !DILocation(line: 6220, column: 40, scope: !15326)
!15330 = !DILocation(line: 6221, column: 11, scope: !15326)
!15331 = !DILocation(line: 6221, column: 48, scope: !15326)
!15332 = !DILocation(line: 6222, column: 11, scope: !15326)
!15333 = !DILocation(line: 6220, column: 11, scope: !15307)
!15334 = !DILocation(line: 6225, column: 28, scope: !15335)
!15335 = distinct !DILexicalBlock(scope: !15326, file: !3, line: 6223, column: 7)
!15336 = !DILocation(line: 6225, column: 32, scope: !15335)
!15337 = !DILocation(line: 6225, column: 36, scope: !15335)
!15338 = !DILocation(line: 6225, column: 14, scope: !15335)
!15339 = !DILocation(line: 6225, column: 12, scope: !15335)
!15340 = !DILocation(line: 6226, column: 25, scope: !15335)
!15341 = !DILocation(line: 6226, column: 36, scope: !15335)
!15342 = !DILocation(line: 6226, column: 41, scope: !15335)
!15343 = !DILocation(line: 6226, column: 50, scope: !15335)
!15344 = !DILocation(line: 6226, column: 54, scope: !15335)
!15345 = !DILocation(line: 6226, column: 60, scope: !15335)
!15346 = !DILocation(line: 6226, column: 8, scope: !15335)
!15347 = !DILocation(line: 6227, column: 17, scope: !15335)
!15348 = !DILocation(line: 6227, column: 21, scope: !15335)
!15349 = !DILocation(line: 6227, column: 27, scope: !15335)
!15350 = !DILocation(line: 6227, column: 15, scope: !15335)
!15351 = !DILocation(line: 6228, column: 12, scope: !15335)
!15352 = !DILocation(line: 6229, column: 7, scope: !15335)
!15353 = !DILocation(line: 6231, column: 12, scope: !15354)
!15354 = distinct !DILexicalBlock(scope: !15355, file: !3, line: 6231, column: 12)
!15355 = distinct !DILexicalBlock(scope: !15326, file: !3, line: 6230, column: 12)
!15356 = !DILocation(line: 6231, column: 16, scope: !15354)
!15357 = !DILocation(line: 6231, column: 22, scope: !15354)
!15358 = !DILocation(line: 6231, column: 12, scope: !15355)
!15359 = !DILocation(line: 6231, column: 51, scope: !15354)
!15360 = !DILocation(line: 6231, column: 49, scope: !15354)
!15361 = !DILocation(line: 6231, column: 40, scope: !15354)
!15362 = !DILocation(line: 6232, column: 33, scope: !15354)
!15363 = !DILocation(line: 6232, column: 37, scope: !15354)
!15364 = !DILocation(line: 6232, column: 19, scope: !15354)
!15365 = !DILocation(line: 6232, column: 17, scope: !15354)
!15366 = !DILocation(line: 6234, column: 6, scope: !15307)
!15367 = !DILocation(line: 6235, column: 15, scope: !15368)
!15368 = distinct !DILexicalBlock(scope: !15303, file: !3, line: 6235, column: 15)
!15369 = !DILocation(line: 6235, column: 23, scope: !15368)
!15370 = !DILocation(line: 6235, column: 27, scope: !15368)
!15371 = !DILocation(line: 6235, column: 33, scope: !15368)
!15372 = !DILocation(line: 6235, column: 20, scope: !15368)
!15373 = !DILocation(line: 6235, column: 15, scope: !15303)
!15374 = !DILocation(line: 6237, column: 13, scope: !15375)
!15375 = distinct !DILexicalBlock(scope: !15368, file: !3, line: 6235, column: 38)
!15376 = !DILocation(line: 6238, column: 13, scope: !15375)
!15377 = !DILocation(line: 6238, column: 20, scope: !15375)
!15378 = !DILocation(line: 6238, column: 18, scope: !15375)
!15379 = !DILocation(line: 6238, column: 27, scope: !15375)
!15380 = !DILocation(line: 6238, column: 11, scope: !15375)
!15381 = !DILocation(line: 6239, column: 15, scope: !15375)
!15382 = !DILocation(line: 6239, column: 19, scope: !15375)
!15383 = !DILocation(line: 6239, column: 13, scope: !15375)
!15384 = !DILocation(line: 6240, column: 16, scope: !15375)
!15385 = !DILocation(line: 6240, column: 20, scope: !15375)
!15386 = !DILocation(line: 6240, column: 13, scope: !15375)
!15387 = !DILocation(line: 6242, column: 12, scope: !15388)
!15388 = distinct !DILexicalBlock(scope: !15375, file: !3, line: 6242, column: 11)
!15389 = !DILocation(line: 6242, column: 16, scope: !15388)
!15390 = !DILocation(line: 6242, column: 22, scope: !15388)
!15391 = !DILocation(line: 6242, column: 40, scope: !15388)
!15392 = !DILocation(line: 6243, column: 11, scope: !15388)
!15393 = !DILocation(line: 6243, column: 48, scope: !15388)
!15394 = !DILocation(line: 6244, column: 11, scope: !15388)
!15395 = !DILocation(line: 6242, column: 11, scope: !15375)
!15396 = !DILocation(line: 6247, column: 28, scope: !15397)
!15397 = distinct !DILexicalBlock(scope: !15388, file: !3, line: 6245, column: 7)
!15398 = !DILocation(line: 6247, column: 32, scope: !15397)
!15399 = !DILocation(line: 6247, column: 36, scope: !15397)
!15400 = !DILocation(line: 6247, column: 14, scope: !15397)
!15401 = !DILocation(line: 6247, column: 12, scope: !15397)
!15402 = !DILocation(line: 6248, column: 25, scope: !15397)
!15403 = !DILocation(line: 6248, column: 36, scope: !15397)
!15404 = !DILocation(line: 6248, column: 41, scope: !15397)
!15405 = !DILocation(line: 6248, column: 46, scope: !15397)
!15406 = !DILocation(line: 6248, column: 52, scope: !15397)
!15407 = !DILocation(line: 6248, column: 56, scope: !15397)
!15408 = !DILocation(line: 6248, column: 8, scope: !15397)
!15409 = !DILocation(line: 6249, column: 7, scope: !15397)
!15410 = !DILocation(line: 6250, column: 16, scope: !15411)
!15411 = distinct !DILexicalBlock(scope: !15388, file: !3, line: 6250, column: 16)
!15412 = !DILocation(line: 6250, column: 25, scope: !15411)
!15413 = !DILocation(line: 6250, column: 16, scope: !15388)
!15414 = !DILocation(line: 6252, column: 28, scope: !15415)
!15415 = distinct !DILexicalBlock(scope: !15411, file: !3, line: 6250, column: 31)
!15416 = !DILocation(line: 6252, column: 32, scope: !15415)
!15417 = !DILocation(line: 6252, column: 38, scope: !15415)
!15418 = !DILocation(line: 6252, column: 36, scope: !15415)
!15419 = !DILocation(line: 6252, column: 14, scope: !15415)
!15420 = !DILocation(line: 6252, column: 12, scope: !15415)
!15421 = !DILocation(line: 6253, column: 25, scope: !15415)
!15422 = !DILocation(line: 6253, column: 36, scope: !15415)
!15423 = !DILocation(line: 6253, column: 41, scope: !15415)
!15424 = !DILocation(line: 6253, column: 46, scope: !15415)
!15425 = !DILocation(line: 6253, column: 52, scope: !15415)
!15426 = !DILocation(line: 6253, column: 56, scope: !15415)
!15427 = !DILocation(line: 6253, column: 62, scope: !15415)
!15428 = !DILocation(line: 6253, column: 8, scope: !15415)
!15429 = !DILocation(line: 6254, column: 17, scope: !15415)
!15430 = !DILocation(line: 6255, column: 7, scope: !15415)
!15431 = !DILocation(line: 6257, column: 28, scope: !15432)
!15432 = distinct !DILexicalBlock(scope: !15411, file: !3, line: 6256, column: 12)
!15433 = !DILocation(line: 6257, column: 32, scope: !15432)
!15434 = !DILocation(line: 6257, column: 14, scope: !15432)
!15435 = !DILocation(line: 6257, column: 12, scope: !15432)
!15436 = !DILocation(line: 6259, column: 6, scope: !15375)
!15437 = !DILocation(line: 6262, column: 13, scope: !15438)
!15438 = distinct !DILexicalBlock(scope: !15368, file: !3, line: 6260, column: 11)
!15439 = !DILocation(line: 6263, column: 11, scope: !15438)
!15440 = !DILocation(line: 6264, column: 13, scope: !15438)
!15441 = !DILocation(line: 6264, column: 20, scope: !15438)
!15442 = !DILocation(line: 6264, column: 18, scope: !15438)
!15443 = !DILocation(line: 6264, column: 27, scope: !15438)
!15444 = !DILocation(line: 6264, column: 11, scope: !15438)
!15445 = !DILocation(line: 6265, column: 27, scope: !15438)
!15446 = !DILocation(line: 6265, column: 31, scope: !15438)
!15447 = !DILocation(line: 6265, column: 13, scope: !15438)
!15448 = !DILocation(line: 6265, column: 11, scope: !15438)
!15449 = !DILocation(line: 6268, column: 10, scope: !15450)
!15450 = distinct !DILexicalBlock(scope: !15268, file: !3, line: 6268, column: 10)
!15451 = !DILocation(line: 6268, column: 14, scope: !15450)
!15452 = !DILocation(line: 6268, column: 10, scope: !15268)
!15453 = !DILocation(line: 6269, column: 24, scope: !15454)
!15454 = distinct !DILexicalBlock(scope: !15450, file: !3, line: 6268, column: 23)
!15455 = !DILocation(line: 6269, column: 34, scope: !15454)
!15456 = !DILocation(line: 6269, column: 39, scope: !15454)
!15457 = !DILocation(line: 6269, column: 46, scope: !15454)
!15458 = !DILocation(line: 6269, column: 50, scope: !15454)
!15459 = !DILocation(line: 6269, column: 55, scope: !15454)
!15460 = !DILocation(line: 6269, column: 64, scope: !15454)
!15461 = !DILocation(line: 6269, column: 7, scope: !15454)
!15462 = !DILocation(line: 6270, column: 29, scope: !15454)
!15463 = !DILocation(line: 6270, column: 7, scope: !15454)
!15464 = !DILocation(line: 6272, column: 11, scope: !15465)
!15465 = distinct !DILexicalBlock(scope: !15454, file: !3, line: 6272, column: 11)
!15466 = !DILocation(line: 6272, column: 18, scope: !15465)
!15467 = !DILocation(line: 6272, column: 23, scope: !15465)
!15468 = !DILocation(line: 6272, column: 26, scope: !15465)
!15469 = !DILocation(line: 6272, column: 34, scope: !15465)
!15470 = !DILocation(line: 6272, column: 38, scope: !15465)
!15471 = !DILocation(line: 6272, column: 44, scope: !15465)
!15472 = !DILocation(line: 6272, column: 31, scope: !15465)
!15473 = !DILocation(line: 6272, column: 11, scope: !15454)
!15474 = !DILocation(line: 6272, column: 49, scope: !15465)
!15475 = !DILocation(line: 6272, column: 54, scope: !15465)
!15476 = !DILocation(line: 6272, column: 60, scope: !15465)
!15477 = !DILocation(line: 6273, column: 11, scope: !15454)
!15478 = !DILocation(line: 6274, column: 6, scope: !15454)
!15479 = !DILocation(line: 6275, column: 20, scope: !15268)
!15480 = !DILocation(line: 6275, column: 13, scope: !15268)
!15481 = !DILocation(line: 6276, column: 5, scope: !15268)
!15482 = !DILocation(line: 6277, column: 4, scope: !15230)
!15483 = !DILocation(line: 6191, column: 49, scope: !15223)
!15484 = !DILocation(line: 6191, column: 57, scope: !15223)
!15485 = !DILocation(line: 6191, column: 4, scope: !15223)
!15486 = distinct !{!15486, !15227, !15487}
!15487 = !DILocation(line: 6277, column: 4, scope: !15216)
!15488 = !DILocation(line: 6279, column: 9, scope: !15489)
!15489 = distinct !DILexicalBlock(scope: !15217, file: !3, line: 6279, column: 8)
!15490 = !DILocation(line: 6279, column: 15, scope: !15489)
!15491 = !DILocation(line: 6279, column: 18, scope: !15489)
!15492 = !DILocation(line: 6279, column: 22, scope: !15489)
!15493 = !DILocation(line: 6279, column: 28, scope: !15489)
!15494 = !DILocation(line: 6279, column: 31, scope: !15489)
!15495 = !DILocation(line: 6279, column: 35, scope: !15489)
!15496 = !DILocation(line: 6279, column: 41, scope: !15489)
!15497 = !DILocation(line: 6279, column: 45, scope: !15489)
!15498 = !DILocation(line: 6279, column: 50, scope: !15489)
!15499 = !DILocation(line: 6279, column: 54, scope: !15489)
!15500 = !DILocation(line: 6279, column: 60, scope: !15489)
!15501 = !DILocation(line: 6279, column: 8, scope: !15217)
!15502 = !DILocation(line: 6281, column: 13, scope: !15503)
!15503 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 6279, column: 79)
!15504 = !DILocation(line: 6281, column: 17, scope: !15503)
!15505 = !DILocation(line: 6281, column: 11, scope: !15503)
!15506 = !DILocation(line: 6282, column: 14, scope: !15503)
!15507 = !DILocation(line: 6282, column: 18, scope: !15503)
!15508 = !DILocation(line: 6282, column: 11, scope: !15503)
!15509 = !DILocation(line: 6284, column: 9, scope: !15510)
!15510 = distinct !DILexicalBlock(scope: !15503, file: !3, line: 6284, column: 9)
!15511 = !DILocation(line: 6284, column: 46, scope: !15510)
!15512 = !DILocation(line: 6285, column: 9, scope: !15510)
!15513 = !DILocation(line: 6284, column: 9, scope: !15503)
!15514 = !DILocation(line: 6287, column: 26, scope: !15515)
!15515 = distinct !DILexicalBlock(scope: !15510, file: !3, line: 6286, column: 5)
!15516 = !DILocation(line: 6287, column: 12, scope: !15515)
!15517 = !DILocation(line: 6287, column: 10, scope: !15515)
!15518 = !DILocation(line: 6288, column: 23, scope: !15515)
!15519 = !DILocation(line: 6288, column: 33, scope: !15515)
!15520 = !DILocation(line: 6288, column: 38, scope: !15515)
!15521 = !DILocation(line: 6288, column: 44, scope: !15515)
!15522 = !DILocation(line: 6288, column: 6, scope: !15515)
!15523 = !DILocation(line: 6289, column: 28, scope: !15515)
!15524 = !DILocation(line: 6289, column: 6, scope: !15515)
!15525 = !DILocation(line: 6290, column: 5, scope: !15515)
!15526 = !DILocation(line: 6292, column: 14, scope: !15503)
!15527 = !DILocation(line: 6292, column: 18, scope: !15503)
!15528 = !DILocation(line: 6292, column: 23, scope: !15503)
!15529 = !DILocation(line: 6292, column: 27, scope: !15503)
!15530 = !DILocation(line: 6292, column: 33, scope: !15503)
!15531 = !DILocation(line: 6292, column: 11, scope: !15503)
!15532 = !DILocation(line: 6293, column: 14, scope: !15503)
!15533 = !DILocation(line: 6293, column: 18, scope: !15503)
!15534 = !DILocation(line: 6293, column: 23, scope: !15503)
!15535 = !DILocation(line: 6293, column: 27, scope: !15503)
!15536 = !DILocation(line: 6293, column: 33, scope: !15503)
!15537 = !DILocation(line: 6293, column: 11, scope: !15503)
!15538 = !DILocation(line: 6295, column: 9, scope: !15539)
!15539 = distinct !DILexicalBlock(scope: !15503, file: !3, line: 6295, column: 9)
!15540 = !DILocation(line: 6295, column: 46, scope: !15539)
!15541 = !DILocation(line: 6296, column: 9, scope: !15539)
!15542 = !DILocation(line: 6295, column: 9, scope: !15503)
!15543 = !DILocation(line: 6298, column: 26, scope: !15544)
!15544 = distinct !DILexicalBlock(scope: !15539, file: !3, line: 6297, column: 5)
!15545 = !DILocation(line: 6298, column: 12, scope: !15544)
!15546 = !DILocation(line: 6298, column: 10, scope: !15544)
!15547 = !DILocation(line: 6299, column: 23, scope: !15544)
!15548 = !DILocation(line: 6299, column: 33, scope: !15544)
!15549 = !DILocation(line: 6299, column: 38, scope: !15544)
!15550 = !DILocation(line: 6299, column: 44, scope: !15544)
!15551 = !DILocation(line: 6299, column: 6, scope: !15544)
!15552 = !DILocation(line: 6300, column: 28, scope: !15544)
!15553 = !DILocation(line: 6300, column: 6, scope: !15544)
!15554 = !DILocation(line: 6301, column: 5, scope: !15544)
!15555 = !DILocation(line: 6302, column: 4, scope: !15503)
!15556 = !DILocation(line: 6303, column: 3, scope: !15217)
!15557 = !DILocation(line: 6304, column: 12, scope: !15558)
!15558 = distinct !DILexicalBlock(scope: !15211, file: !3, line: 6304, column: 12)
!15559 = !DILocation(line: 6304, column: 16, scope: !15558)
!15560 = !DILocation(line: 6304, column: 22, scope: !15558)
!15561 = !DILocation(line: 6304, column: 12, scope: !15211)
!15562 = !DILocalVariable(name: "u", scope: !15563, file: !3, line: 6305, type: !22)
!15563 = distinct !DILexicalBlock(scope: !15558, file: !3, line: 6304, column: 28)
!15564 = !DILocation(line: 6305, column: 8, scope: !15563)
!15565 = !DILocalVariable(name: "v", scope: !15563, file: !3, line: 6305, type: !22)
!15566 = !DILocation(line: 6305, column: 11, scope: !15563)
!15567 = !DILocation(line: 6307, column: 19, scope: !15568)
!15568 = distinct !DILexicalBlock(scope: !15563, file: !3, line: 6307, column: 8)
!15569 = !DILocation(line: 6307, column: 8, scope: !15568)
!15570 = !DILocation(line: 6307, column: 8, scope: !15563)
!15571 = !DILocation(line: 6308, column: 12, scope: !15572)
!15572 = distinct !DILexicalBlock(scope: !15573, file: !3, line: 6308, column: 5)
!15573 = distinct !DILexicalBlock(scope: !15568, file: !3, line: 6307, column: 36)
!15574 = !DILocation(line: 6308, column: 22, scope: !15572)
!15575 = !DILocation(line: 6308, column: 26, scope: !15572)
!15576 = !DILocation(line: 6308, column: 20, scope: !15572)
!15577 = !DILocation(line: 6308, column: 10, scope: !15572)
!15578 = !DILocation(line: 6308, column: 30, scope: !15579)
!15579 = distinct !DILexicalBlock(scope: !15572, file: !3, line: 6308, column: 5)
!15580 = !DILocation(line: 6308, column: 34, scope: !15579)
!15581 = !DILocation(line: 6308, column: 38, scope: !15579)
!15582 = !DILocation(line: 6308, column: 32, scope: !15579)
!15583 = !DILocation(line: 6308, column: 5, scope: !15572)
!15584 = !DILocation(line: 6309, column: 12, scope: !15585)
!15585 = distinct !DILexicalBlock(scope: !15586, file: !3, line: 6309, column: 10)
!15586 = distinct !DILexicalBlock(scope: !15579, file: !3, line: 6308, column: 56)
!15587 = !DILocation(line: 6309, column: 16, scope: !15585)
!15588 = !DILocation(line: 6309, column: 19, scope: !15585)
!15589 = !DILocation(line: 6309, column: 10, scope: !15586)
!15590 = !DILocation(line: 6310, column: 14, scope: !15591)
!15591 = distinct !DILexicalBlock(scope: !15585, file: !3, line: 6309, column: 30)
!15592 = !DILocation(line: 6310, column: 12, scope: !15591)
!15593 = !DILocation(line: 6311, column: 11, scope: !15594)
!15594 = distinct !DILexicalBlock(scope: !15591, file: !3, line: 6311, column: 11)
!15595 = !DILocation(line: 6311, column: 18, scope: !15594)
!15596 = !DILocation(line: 6311, column: 11, scope: !15591)
!15597 = !DILocation(line: 6311, column: 34, scope: !15594)
!15598 = !DILocation(line: 6311, column: 32, scope: !15594)
!15599 = !DILocation(line: 6311, column: 25, scope: !15594)
!15600 = !DILocation(line: 6312, column: 11, scope: !15601)
!15601 = distinct !DILexicalBlock(scope: !15591, file: !3, line: 6312, column: 11)
!15602 = !DILocation(line: 6312, column: 15, scope: !15601)
!15603 = !DILocation(line: 6312, column: 19, scope: !15601)
!15604 = !DILocation(line: 6312, column: 25, scope: !15601)
!15605 = !DILocation(line: 6312, column: 13, scope: !15601)
!15606 = !DILocation(line: 6312, column: 11, scope: !15591)
!15607 = !DILocation(line: 6312, column: 30, scope: !15601)
!15608 = !DILocation(line: 6313, column: 6, scope: !15591)
!15609 = !DILocation(line: 6314, column: 15, scope: !15610)
!15610 = distinct !DILexicalBlock(scope: !15585, file: !3, line: 6314, column: 15)
!15611 = !DILocation(line: 6314, column: 19, scope: !15610)
!15612 = !DILocation(line: 6314, column: 23, scope: !15610)
!15613 = !DILocation(line: 6314, column: 29, scope: !15610)
!15614 = !DILocation(line: 6314, column: 17, scope: !15610)
!15615 = !DILocation(line: 6314, column: 33, scope: !15610)
!15616 = !DILocation(line: 6314, column: 39, scope: !15610)
!15617 = !DILocation(line: 6314, column: 42, scope: !15610)
!15618 = !DILocation(line: 6314, column: 48, scope: !15610)
!15619 = !DILocation(line: 6314, column: 38, scope: !15610)
!15620 = !DILocation(line: 6314, column: 51, scope: !15610)
!15621 = !DILocation(line: 6314, column: 15, scope: !15585)
!15622 = !DILocation(line: 6316, column: 7, scope: !15623)
!15623 = distinct !DILexicalBlock(scope: !15610, file: !3, line: 6314, column: 62)
!15624 = !DILocation(line: 6319, column: 10, scope: !15625)
!15625 = distinct !DILexicalBlock(scope: !15586, file: !3, line: 6319, column: 10)
!15626 = !DILocation(line: 6319, column: 17, scope: !15625)
!15627 = !DILocation(line: 6319, column: 10, scope: !15586)
!15628 = !DILocation(line: 6321, column: 11, scope: !15629)
!15629 = distinct !DILexicalBlock(scope: !15630, file: !3, line: 6321, column: 11)
!15630 = distinct !DILexicalBlock(scope: !15625, file: !3, line: 6319, column: 23)
!15631 = !DILocation(line: 6321, column: 18, scope: !15629)
!15632 = !DILocation(line: 6321, column: 23, scope: !15629)
!15633 = !DILocation(line: 6321, column: 26, scope: !15629)
!15634 = !DILocation(line: 6321, column: 31, scope: !15629)
!15635 = !DILocation(line: 6321, column: 35, scope: !15629)
!15636 = !DILocation(line: 6321, column: 41, scope: !15629)
!15637 = !DILocation(line: 6321, column: 28, scope: !15629)
!15638 = !DILocation(line: 6321, column: 11, scope: !15630)
!15639 = !DILocation(line: 6323, column: 12, scope: !15640)
!15640 = distinct !DILexicalBlock(scope: !15641, file: !3, line: 6323, column: 12)
!15641 = distinct !DILexicalBlock(scope: !15629, file: !3, line: 6321, column: 46)
!15642 = !DILocation(line: 6323, column: 19, scope: !15640)
!15643 = !DILocation(line: 6323, column: 24, scope: !15640)
!15644 = !DILocation(line: 6323, column: 27, scope: !15640)
!15645 = !DILocation(line: 6323, column: 35, scope: !15640)
!15646 = !DILocation(line: 6323, column: 32, scope: !15640)
!15647 = !DILocation(line: 6323, column: 12, scope: !15641)
!15648 = !DILocation(line: 6323, column: 38, scope: !15640)
!15649 = !DILocation(line: 6323, column: 42, scope: !15640)
!15650 = !DILocation(line: 6323, column: 48, scope: !15640)
!15651 = !DILocation(line: 6325, column: 15, scope: !15641)
!15652 = !DILocation(line: 6326, column: 15, scope: !15641)
!15653 = !DILocation(line: 6326, column: 13, scope: !15641)
!15654 = !DILocation(line: 6327, column: 14, scope: !15641)
!15655 = !DILocation(line: 6327, column: 21, scope: !15641)
!15656 = !DILocation(line: 6327, column: 19, scope: !15641)
!15657 = !DILocation(line: 6327, column: 28, scope: !15641)
!15658 = !DILocation(line: 6327, column: 12, scope: !15641)
!15659 = !DILocation(line: 6328, column: 28, scope: !15641)
!15660 = !DILocation(line: 6328, column: 32, scope: !15641)
!15661 = !DILocation(line: 6328, column: 37, scope: !15641)
!15662 = !DILocation(line: 6328, column: 41, scope: !15641)
!15663 = !DILocation(line: 6328, column: 14, scope: !15641)
!15664 = !DILocation(line: 6328, column: 12, scope: !15641)
!15665 = !DILocation(line: 6329, column: 7, scope: !15641)
!15666 = !DILocation(line: 6330, column: 16, scope: !15667)
!15667 = distinct !DILexicalBlock(scope: !15629, file: !3, line: 6330, column: 16)
!15668 = !DILocation(line: 6330, column: 23, scope: !15667)
!15669 = !DILocation(line: 6330, column: 16, scope: !15629)
!15670 = !DILocation(line: 6332, column: 12, scope: !15671)
!15671 = distinct !DILexicalBlock(scope: !15667, file: !3, line: 6330, column: 29)
!15672 = !DILocation(line: 6333, column: 14, scope: !15671)
!15673 = !DILocation(line: 6333, column: 21, scope: !15671)
!15674 = !DILocation(line: 6333, column: 19, scope: !15671)
!15675 = !DILocation(line: 6333, column: 28, scope: !15671)
!15676 = !DILocation(line: 6333, column: 12, scope: !15671)
!15677 = !DILocation(line: 6334, column: 15, scope: !15671)
!15678 = !DILocation(line: 6334, column: 19, scope: !15671)
!15679 = !DILocation(line: 6334, column: 22, scope: !15671)
!15680 = !DILocation(line: 6334, column: 26, scope: !15671)
!15681 = !DILocation(line: 6334, column: 32, scope: !15671)
!15682 = !DILocation(line: 6334, column: 12, scope: !15671)
!15683 = !DILocation(line: 6335, column: 15, scope: !15671)
!15684 = !DILocation(line: 6335, column: 19, scope: !15671)
!15685 = !DILocation(line: 6335, column: 22, scope: !15671)
!15686 = !DILocation(line: 6335, column: 26, scope: !15671)
!15687 = !DILocation(line: 6335, column: 32, scope: !15671)
!15688 = !DILocation(line: 6335, column: 12, scope: !15671)
!15689 = !DILocation(line: 6337, column: 13, scope: !15690)
!15690 = distinct !DILexicalBlock(scope: !15671, file: !3, line: 6337, column: 12)
!15691 = !DILocation(line: 6337, column: 17, scope: !15690)
!15692 = !DILocation(line: 6337, column: 23, scope: !15690)
!15693 = !DILocation(line: 6337, column: 41, scope: !15690)
!15694 = !DILocation(line: 6337, column: 45, scope: !15690)
!15695 = !DILocation(line: 6337, column: 50, scope: !15690)
!15696 = !DILocation(line: 6337, column: 53, scope: !15690)
!15697 = !DILocation(line: 6337, column: 63, scope: !15690)
!15698 = !DILocation(line: 6337, column: 67, scope: !15690)
!15699 = !DILocation(line: 6337, column: 72, scope: !15690)
!15700 = !DILocation(line: 6337, column: 75, scope: !15690)
!15701 = !DILocation(line: 6337, column: 12, scope: !15671)
!15702 = !DILocation(line: 6339, column: 29, scope: !15703)
!15703 = distinct !DILexicalBlock(scope: !15690, file: !3, line: 6337, column: 86)
!15704 = !DILocation(line: 6339, column: 33, scope: !15703)
!15705 = !DILocation(line: 6339, column: 37, scope: !15703)
!15706 = !DILocation(line: 6339, column: 42, scope: !15703)
!15707 = !DILocation(line: 6339, column: 46, scope: !15703)
!15708 = !DILocation(line: 6339, column: 15, scope: !15703)
!15709 = !DILocation(line: 6339, column: 13, scope: !15703)
!15710 = !DILocation(line: 6340, column: 16, scope: !15711)
!15711 = distinct !DILexicalBlock(scope: !15703, file: !3, line: 6340, column: 9)
!15712 = !DILocation(line: 6340, column: 14, scope: !15711)
!15713 = !DILocation(line: 6340, column: 21, scope: !15714)
!15714 = distinct !DILexicalBlock(scope: !15711, file: !3, line: 6340, column: 9)
!15715 = !DILocation(line: 6340, column: 25, scope: !15714)
!15716 = !DILocation(line: 6340, column: 29, scope: !15714)
!15717 = !DILocation(line: 6340, column: 23, scope: !15714)
!15718 = !DILocation(line: 6340, column: 9, scope: !15711)
!15719 = !DILocation(line: 6341, column: 25, scope: !15720)
!15720 = distinct !DILexicalBlock(scope: !15714, file: !3, line: 6340, column: 41)
!15721 = !DILocation(line: 6341, column: 36, scope: !15720)
!15722 = !DILocation(line: 6341, column: 41, scope: !15720)
!15723 = !DILocation(line: 6341, column: 44, scope: !15720)
!15724 = !DILocation(line: 6341, column: 48, scope: !15720)
!15725 = !DILocation(line: 6341, column: 53, scope: !15720)
!15726 = !DILocation(line: 6341, column: 46, scope: !15720)
!15727 = !DILocation(line: 6341, column: 59, scope: !15720)
!15728 = !DILocation(line: 6341, column: 66, scope: !15720)
!15729 = !DILocation(line: 6341, column: 70, scope: !15720)
!15730 = !DILocation(line: 6341, column: 73, scope: !15720)
!15731 = !DILocation(line: 6341, column: 77, scope: !15720)
!15732 = !DILocation(line: 6341, column: 81, scope: !15720)
!15733 = !DILocation(line: 6341, column: 75, scope: !15720)
!15734 = !DILocation(line: 6341, column: 89, scope: !15720)
!15735 = !DILocation(line: 6341, column: 10, scope: !15720)
!15736 = !DILocation(line: 6342, column: 9, scope: !15720)
!15737 = !DILocation(line: 6340, column: 37, scope: !15714)
!15738 = !DILocation(line: 6340, column: 9, scope: !15714)
!15739 = distinct !{!15739, !15718, !15740}
!15740 = !DILocation(line: 6342, column: 9, scope: !15711)
!15741 = !DILocation(line: 6343, column: 18, scope: !15703)
!15742 = !DILocation(line: 6343, column: 22, scope: !15703)
!15743 = !DILocation(line: 6343, column: 28, scope: !15703)
!15744 = !DILocation(line: 6343, column: 16, scope: !15703)
!15745 = !DILocation(line: 6344, column: 13, scope: !15703)
!15746 = !DILocation(line: 6345, column: 8, scope: !15703)
!15747 = !DILocation(line: 6347, column: 13, scope: !15748)
!15748 = distinct !DILexicalBlock(scope: !15749, file: !3, line: 6347, column: 13)
!15749 = distinct !DILexicalBlock(scope: !15690, file: !3, line: 6346, column: 13)
!15750 = !DILocation(line: 6347, column: 17, scope: !15748)
!15751 = !DILocation(line: 6347, column: 23, scope: !15748)
!15752 = !DILocation(line: 6347, column: 13, scope: !15749)
!15753 = !DILocation(line: 6347, column: 52, scope: !15748)
!15754 = !DILocation(line: 6347, column: 50, scope: !15748)
!15755 = !DILocation(line: 6347, column: 41, scope: !15748)
!15756 = !DILocation(line: 6348, column: 34, scope: !15748)
!15757 = !DILocation(line: 6348, column: 38, scope: !15748)
!15758 = !DILocation(line: 6348, column: 43, scope: !15748)
!15759 = !DILocation(line: 6348, column: 47, scope: !15748)
!15760 = !DILocation(line: 6348, column: 20, scope: !15748)
!15761 = !DILocation(line: 6348, column: 18, scope: !15748)
!15762 = !DILocation(line: 6350, column: 7, scope: !15671)
!15763 = !DILocation(line: 6351, column: 16, scope: !15764)
!15764 = distinct !DILexicalBlock(scope: !15667, file: !3, line: 6351, column: 16)
!15765 = !DILocation(line: 6351, column: 24, scope: !15764)
!15766 = !DILocation(line: 6351, column: 28, scope: !15764)
!15767 = !DILocation(line: 6351, column: 34, scope: !15764)
!15768 = !DILocation(line: 6351, column: 21, scope: !15764)
!15769 = !DILocation(line: 6351, column: 16, scope: !15667)
!15770 = !DILocation(line: 6353, column: 14, scope: !15771)
!15771 = distinct !DILexicalBlock(scope: !15764, file: !3, line: 6351, column: 39)
!15772 = !DILocation(line: 6354, column: 14, scope: !15771)
!15773 = !DILocation(line: 6354, column: 21, scope: !15771)
!15774 = !DILocation(line: 6354, column: 19, scope: !15771)
!15775 = !DILocation(line: 6354, column: 28, scope: !15771)
!15776 = !DILocation(line: 6354, column: 12, scope: !15771)
!15777 = !DILocation(line: 6355, column: 14, scope: !15771)
!15778 = !DILocation(line: 6355, column: 18, scope: !15771)
!15779 = !DILocation(line: 6355, column: 12, scope: !15771)
!15780 = !DILocation(line: 6356, column: 15, scope: !15771)
!15781 = !DILocation(line: 6356, column: 19, scope: !15771)
!15782 = !DILocation(line: 6356, column: 12, scope: !15771)
!15783 = !DILocation(line: 6358, column: 13, scope: !15784)
!15784 = distinct !DILexicalBlock(scope: !15771, file: !3, line: 6358, column: 12)
!15785 = !DILocation(line: 6358, column: 17, scope: !15784)
!15786 = !DILocation(line: 6358, column: 23, scope: !15784)
!15787 = !DILocation(line: 6358, column: 41, scope: !15784)
!15788 = !DILocation(line: 6358, column: 45, scope: !15784)
!15789 = !DILocation(line: 6358, column: 50, scope: !15784)
!15790 = !DILocation(line: 6358, column: 53, scope: !15784)
!15791 = !DILocation(line: 6358, column: 63, scope: !15784)
!15792 = !DILocation(line: 6358, column: 67, scope: !15784)
!15793 = !DILocation(line: 6358, column: 72, scope: !15784)
!15794 = !DILocation(line: 6358, column: 75, scope: !15784)
!15795 = !DILocation(line: 6358, column: 12, scope: !15771)
!15796 = !DILocation(line: 6360, column: 29, scope: !15797)
!15797 = distinct !DILexicalBlock(scope: !15784, file: !3, line: 6358, column: 86)
!15798 = !DILocation(line: 6360, column: 33, scope: !15797)
!15799 = !DILocation(line: 6360, column: 37, scope: !15797)
!15800 = !DILocation(line: 6360, column: 42, scope: !15797)
!15801 = !DILocation(line: 6360, column: 46, scope: !15797)
!15802 = !DILocation(line: 6360, column: 15, scope: !15797)
!15803 = !DILocation(line: 6360, column: 13, scope: !15797)
!15804 = !DILocation(line: 6361, column: 16, scope: !15805)
!15805 = distinct !DILexicalBlock(scope: !15797, file: !3, line: 6361, column: 9)
!15806 = !DILocation(line: 6361, column: 14, scope: !15805)
!15807 = !DILocation(line: 6361, column: 21, scope: !15808)
!15808 = distinct !DILexicalBlock(scope: !15805, file: !3, line: 6361, column: 9)
!15809 = !DILocation(line: 6361, column: 25, scope: !15808)
!15810 = !DILocation(line: 6361, column: 29, scope: !15808)
!15811 = !DILocation(line: 6361, column: 23, scope: !15808)
!15812 = !DILocation(line: 6361, column: 9, scope: !15805)
!15813 = !DILocation(line: 6362, column: 25, scope: !15814)
!15814 = distinct !DILexicalBlock(scope: !15808, file: !3, line: 6361, column: 41)
!15815 = !DILocation(line: 6362, column: 36, scope: !15814)
!15816 = !DILocation(line: 6362, column: 41, scope: !15814)
!15817 = !DILocation(line: 6362, column: 44, scope: !15814)
!15818 = !DILocation(line: 6362, column: 48, scope: !15814)
!15819 = !DILocation(line: 6362, column: 53, scope: !15814)
!15820 = !DILocation(line: 6362, column: 46, scope: !15814)
!15821 = !DILocation(line: 6362, column: 61, scope: !15814)
!15822 = !DILocation(line: 6362, column: 59, scope: !15814)
!15823 = !DILocation(line: 6362, column: 68, scope: !15814)
!15824 = !DILocation(line: 6362, column: 72, scope: !15814)
!15825 = !DILocation(line: 6362, column: 75, scope: !15814)
!15826 = !DILocation(line: 6362, column: 79, scope: !15814)
!15827 = !DILocation(line: 6362, column: 83, scope: !15814)
!15828 = !DILocation(line: 6362, column: 77, scope: !15814)
!15829 = !DILocation(line: 6362, column: 10, scope: !15814)
!15830 = !DILocation(line: 6363, column: 9, scope: !15814)
!15831 = !DILocation(line: 6361, column: 37, scope: !15808)
!15832 = !DILocation(line: 6361, column: 9, scope: !15808)
!15833 = distinct !{!15833, !15812, !15834}
!15834 = !DILocation(line: 6363, column: 9, scope: !15805)
!15835 = !DILocation(line: 6364, column: 8, scope: !15797)
!15836 = !DILocation(line: 6365, column: 17, scope: !15837)
!15837 = distinct !DILexicalBlock(scope: !15784, file: !3, line: 6365, column: 17)
!15838 = !DILocation(line: 6365, column: 26, scope: !15837)
!15839 = !DILocation(line: 6365, column: 17, scope: !15784)
!15840 = !DILocation(line: 6367, column: 29, scope: !15841)
!15841 = distinct !DILexicalBlock(scope: !15837, file: !3, line: 6365, column: 32)
!15842 = !DILocation(line: 6367, column: 33, scope: !15841)
!15843 = !DILocation(line: 6367, column: 39, scope: !15841)
!15844 = !DILocation(line: 6367, column: 37, scope: !15841)
!15845 = !DILocation(line: 6367, column: 49, scope: !15841)
!15846 = !DILocation(line: 6367, column: 53, scope: !15841)
!15847 = !DILocation(line: 6367, column: 15, scope: !15841)
!15848 = !DILocation(line: 6367, column: 13, scope: !15841)
!15849 = !DILocation(line: 6368, column: 16, scope: !15850)
!15850 = distinct !DILexicalBlock(scope: !15841, file: !3, line: 6368, column: 9)
!15851 = !DILocation(line: 6368, column: 14, scope: !15850)
!15852 = !DILocation(line: 6368, column: 21, scope: !15853)
!15853 = distinct !DILexicalBlock(scope: !15850, file: !3, line: 6368, column: 9)
!15854 = !DILocation(line: 6368, column: 25, scope: !15853)
!15855 = !DILocation(line: 6368, column: 29, scope: !15853)
!15856 = !DILocation(line: 6368, column: 23, scope: !15853)
!15857 = !DILocation(line: 6368, column: 9, scope: !15850)
!15858 = !DILocation(line: 6369, column: 25, scope: !15859)
!15859 = distinct !DILexicalBlock(scope: !15853, file: !3, line: 6368, column: 41)
!15860 = !DILocation(line: 6369, column: 36, scope: !15859)
!15861 = !DILocation(line: 6369, column: 41, scope: !15859)
!15862 = !DILocation(line: 6369, column: 44, scope: !15859)
!15863 = !DILocation(line: 6369, column: 48, scope: !15859)
!15864 = !DILocation(line: 6369, column: 53, scope: !15859)
!15865 = !DILocation(line: 6369, column: 46, scope: !15859)
!15866 = !DILocation(line: 6369, column: 61, scope: !15859)
!15867 = !DILocation(line: 6369, column: 59, scope: !15859)
!15868 = !DILocation(line: 6369, column: 68, scope: !15859)
!15869 = !DILocation(line: 6369, column: 72, scope: !15859)
!15870 = !DILocation(line: 6369, column: 75, scope: !15859)
!15871 = !DILocation(line: 6369, column: 79, scope: !15859)
!15872 = !DILocation(line: 6369, column: 83, scope: !15859)
!15873 = !DILocation(line: 6369, column: 77, scope: !15859)
!15874 = !DILocation(line: 6369, column: 91, scope: !15859)
!15875 = !DILocation(line: 6369, column: 10, scope: !15859)
!15876 = !DILocation(line: 6370, column: 9, scope: !15859)
!15877 = !DILocation(line: 6368, column: 37, scope: !15853)
!15878 = !DILocation(line: 6368, column: 9, scope: !15853)
!15879 = distinct !{!15879, !15857, !15880}
!15880 = !DILocation(line: 6370, column: 9, scope: !15850)
!15881 = !DILocation(line: 6371, column: 8, scope: !15841)
!15882 = !DILocation(line: 6373, column: 29, scope: !15883)
!15883 = distinct !DILexicalBlock(scope: !15837, file: !3, line: 6372, column: 13)
!15884 = !DILocation(line: 6373, column: 33, scope: !15883)
!15885 = !DILocation(line: 6373, column: 38, scope: !15883)
!15886 = !DILocation(line: 6373, column: 42, scope: !15883)
!15887 = !DILocation(line: 6373, column: 15, scope: !15883)
!15888 = !DILocation(line: 6373, column: 13, scope: !15883)
!15889 = !DILocation(line: 6375, column: 7, scope: !15771)
!15890 = !DILocation(line: 6378, column: 14, scope: !15891)
!15891 = distinct !DILexicalBlock(scope: !15764, file: !3, line: 6376, column: 12)
!15892 = !DILocation(line: 6379, column: 12, scope: !15891)
!15893 = !DILocation(line: 6380, column: 14, scope: !15891)
!15894 = !DILocation(line: 6380, column: 21, scope: !15891)
!15895 = !DILocation(line: 6380, column: 19, scope: !15891)
!15896 = !DILocation(line: 6380, column: 28, scope: !15891)
!15897 = !DILocation(line: 6380, column: 12, scope: !15891)
!15898 = !DILocation(line: 6381, column: 28, scope: !15891)
!15899 = !DILocation(line: 6381, column: 32, scope: !15891)
!15900 = !DILocation(line: 6381, column: 37, scope: !15891)
!15901 = !DILocation(line: 6381, column: 41, scope: !15891)
!15902 = !DILocation(line: 6381, column: 14, scope: !15891)
!15903 = !DILocation(line: 6381, column: 12, scope: !15891)
!15904 = !DILocation(line: 6384, column: 11, scope: !15905)
!15905 = distinct !DILexicalBlock(scope: !15630, file: !3, line: 6384, column: 11)
!15906 = !DILocation(line: 6384, column: 15, scope: !15905)
!15907 = !DILocation(line: 6384, column: 11, scope: !15630)
!15908 = !DILocation(line: 6385, column: 15, scope: !15909)
!15909 = distinct !DILexicalBlock(scope: !15910, file: !3, line: 6385, column: 8)
!15910 = distinct !DILexicalBlock(scope: !15905, file: !3, line: 6384, column: 24)
!15911 = !DILocation(line: 6385, column: 13, scope: !15909)
!15912 = !DILocation(line: 6385, column: 20, scope: !15913)
!15913 = distinct !DILexicalBlock(scope: !15909, file: !3, line: 6385, column: 8)
!15914 = !DILocation(line: 6385, column: 24, scope: !15913)
!15915 = !DILocation(line: 6385, column: 28, scope: !15913)
!15916 = !DILocation(line: 6385, column: 22, scope: !15913)
!15917 = !DILocation(line: 6385, column: 8, scope: !15909)
!15918 = !DILocation(line: 6386, column: 24, scope: !15919)
!15919 = distinct !DILexicalBlock(scope: !15913, file: !3, line: 6385, column: 40)
!15920 = !DILocation(line: 6386, column: 35, scope: !15919)
!15921 = !DILocation(line: 6386, column: 40, scope: !15919)
!15922 = !DILocation(line: 6386, column: 43, scope: !15919)
!15923 = !DILocation(line: 6386, column: 47, scope: !15919)
!15924 = !DILocation(line: 6386, column: 52, scope: !15919)
!15925 = !DILocation(line: 6386, column: 45, scope: !15919)
!15926 = !DILocation(line: 6386, column: 61, scope: !15919)
!15927 = !DILocation(line: 6386, column: 65, scope: !15919)
!15928 = !DILocation(line: 6386, column: 68, scope: !15919)
!15929 = !DILocation(line: 6386, column: 72, scope: !15919)
!15930 = !DILocation(line: 6386, column: 76, scope: !15919)
!15931 = !DILocation(line: 6386, column: 70, scope: !15919)
!15932 = !DILocation(line: 6386, column: 84, scope: !15919)
!15933 = !DILocation(line: 6386, column: 82, scope: !15919)
!15934 = !DILocation(line: 6386, column: 93, scope: !15919)
!15935 = !DILocation(line: 6386, column: 9, scope: !15919)
!15936 = !DILocation(line: 6387, column: 8, scope: !15919)
!15937 = !DILocation(line: 6385, column: 36, scope: !15913)
!15938 = !DILocation(line: 6385, column: 8, scope: !15913)
!15939 = distinct !{!15939, !15917, !15940}
!15940 = !DILocation(line: 6387, column: 8, scope: !15909)
!15941 = !DILocation(line: 6388, column: 30, scope: !15910)
!15942 = !DILocation(line: 6388, column: 8, scope: !15910)
!15943 = !DILocation(line: 6390, column: 12, scope: !15944)
!15944 = distinct !DILexicalBlock(scope: !15910, file: !3, line: 6390, column: 12)
!15945 = !DILocation(line: 6390, column: 19, scope: !15944)
!15946 = !DILocation(line: 6390, column: 24, scope: !15944)
!15947 = !DILocation(line: 6390, column: 27, scope: !15944)
!15948 = !DILocation(line: 6390, column: 35, scope: !15944)
!15949 = !DILocation(line: 6390, column: 39, scope: !15944)
!15950 = !DILocation(line: 6390, column: 45, scope: !15944)
!15951 = !DILocation(line: 6390, column: 32, scope: !15944)
!15952 = !DILocation(line: 6390, column: 12, scope: !15910)
!15953 = !DILocation(line: 6390, column: 50, scope: !15944)
!15954 = !DILocation(line: 6390, column: 55, scope: !15944)
!15955 = !DILocation(line: 6390, column: 61, scope: !15944)
!15956 = !DILocation(line: 6391, column: 12, scope: !15910)
!15957 = !DILocation(line: 6392, column: 7, scope: !15910)
!15958 = !DILocation(line: 6393, column: 21, scope: !15630)
!15959 = !DILocation(line: 6393, column: 14, scope: !15630)
!15960 = !DILocation(line: 6394, column: 6, scope: !15630)
!15961 = !DILocation(line: 6395, column: 5, scope: !15586)
!15962 = !DILocation(line: 6308, column: 46, scope: !15579)
!15963 = !DILocation(line: 6308, column: 52, scope: !15579)
!15964 = !DILocation(line: 6308, column: 5, scope: !15579)
!15965 = distinct !{!15965, !15583, !15966}
!15966 = !DILocation(line: 6395, column: 5, scope: !15572)
!15967 = !DILocation(line: 6397, column: 10, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !15573, file: !3, line: 6397, column: 9)
!15969 = !DILocation(line: 6397, column: 16, scope: !15968)
!15970 = !DILocation(line: 6397, column: 19, scope: !15968)
!15971 = !DILocation(line: 6397, column: 23, scope: !15968)
!15972 = !DILocation(line: 6397, column: 29, scope: !15968)
!15973 = !DILocation(line: 6397, column: 32, scope: !15968)
!15974 = !DILocation(line: 6397, column: 36, scope: !15968)
!15975 = !DILocation(line: 6397, column: 42, scope: !15968)
!15976 = !DILocation(line: 6397, column: 46, scope: !15968)
!15977 = !DILocation(line: 6397, column: 51, scope: !15968)
!15978 = !DILocation(line: 6397, column: 55, scope: !15968)
!15979 = !DILocation(line: 6397, column: 61, scope: !15968)
!15980 = !DILocation(line: 6397, column: 9, scope: !15573)
!15981 = !DILocation(line: 6399, column: 12, scope: !15982)
!15982 = distinct !DILexicalBlock(scope: !15968, file: !3, line: 6397, column: 80)
!15983 = !DILocation(line: 6399, column: 16, scope: !15982)
!15984 = !DILocation(line: 6399, column: 10, scope: !15982)
!15985 = !DILocation(line: 6400, column: 13, scope: !15982)
!15986 = !DILocation(line: 6400, column: 17, scope: !15982)
!15987 = !DILocation(line: 6400, column: 10, scope: !15982)
!15988 = !DILocation(line: 6402, column: 11, scope: !15989)
!15989 = distinct !DILexicalBlock(scope: !15982, file: !3, line: 6402, column: 10)
!15990 = !DILocation(line: 6402, column: 16, scope: !15989)
!15991 = !DILocation(line: 6402, column: 19, scope: !15989)
!15992 = !DILocation(line: 6402, column: 29, scope: !15989)
!15993 = !DILocation(line: 6402, column: 33, scope: !15989)
!15994 = !DILocation(line: 6402, column: 38, scope: !15989)
!15995 = !DILocation(line: 6402, column: 41, scope: !15989)
!15996 = !DILocation(line: 6402, column: 10, scope: !15982)
!15997 = !DILocation(line: 6403, column: 27, scope: !15998)
!15998 = distinct !DILexicalBlock(scope: !15989, file: !3, line: 6402, column: 52)
!15999 = !DILocation(line: 6403, column: 34, scope: !15998)
!16000 = !DILocation(line: 6403, column: 38, scope: !15998)
!16001 = !DILocation(line: 6403, column: 13, scope: !15998)
!16002 = !DILocation(line: 6403, column: 11, scope: !15998)
!16003 = !DILocation(line: 6404, column: 14, scope: !16004)
!16004 = distinct !DILexicalBlock(scope: !15998, file: !3, line: 6404, column: 7)
!16005 = !DILocation(line: 6404, column: 12, scope: !16004)
!16006 = !DILocation(line: 6404, column: 19, scope: !16007)
!16007 = distinct !DILexicalBlock(scope: !16004, file: !3, line: 6404, column: 7)
!16008 = !DILocation(line: 6404, column: 23, scope: !16007)
!16009 = !DILocation(line: 6404, column: 27, scope: !16007)
!16010 = !DILocation(line: 6404, column: 21, scope: !16007)
!16011 = !DILocation(line: 6404, column: 7, scope: !16004)
!16012 = !DILocation(line: 6405, column: 23, scope: !16013)
!16013 = distinct !DILexicalBlock(scope: !16007, file: !3, line: 6404, column: 39)
!16014 = !DILocation(line: 6405, column: 34, scope: !16013)
!16015 = !DILocation(line: 6405, column: 39, scope: !16013)
!16016 = !DILocation(line: 6405, column: 42, scope: !16013)
!16017 = !DILocation(line: 6405, column: 47, scope: !16013)
!16018 = !DILocation(line: 6405, column: 51, scope: !16013)
!16019 = !DILocation(line: 6405, column: 54, scope: !16013)
!16020 = !DILocation(line: 6405, column: 58, scope: !16013)
!16021 = !DILocation(line: 6405, column: 62, scope: !16013)
!16022 = !DILocation(line: 6405, column: 56, scope: !16013)
!16023 = !DILocation(line: 6405, column: 8, scope: !16013)
!16024 = !DILocation(line: 6406, column: 7, scope: !16013)
!16025 = !DILocation(line: 6404, column: 35, scope: !16007)
!16026 = !DILocation(line: 6404, column: 7, scope: !16007)
!16027 = distinct !{!16027, !16011, !16028}
!16028 = !DILocation(line: 6406, column: 7, scope: !16004)
!16029 = !DILocation(line: 6407, column: 29, scope: !15998)
!16030 = !DILocation(line: 6407, column: 7, scope: !15998)
!16031 = !DILocation(line: 6408, column: 6, scope: !15998)
!16032 = !DILocation(line: 6410, column: 13, scope: !15982)
!16033 = !DILocation(line: 6410, column: 17, scope: !15982)
!16034 = !DILocation(line: 6410, column: 20, scope: !15982)
!16035 = !DILocation(line: 6410, column: 24, scope: !15982)
!16036 = !DILocation(line: 6410, column: 30, scope: !15982)
!16037 = !DILocation(line: 6410, column: 10, scope: !15982)
!16038 = !DILocation(line: 6411, column: 13, scope: !15982)
!16039 = !DILocation(line: 6411, column: 17, scope: !15982)
!16040 = !DILocation(line: 6411, column: 20, scope: !15982)
!16041 = !DILocation(line: 6411, column: 24, scope: !15982)
!16042 = !DILocation(line: 6411, column: 30, scope: !15982)
!16043 = !DILocation(line: 6411, column: 10, scope: !15982)
!16044 = !DILocation(line: 6413, column: 11, scope: !16045)
!16045 = distinct !DILexicalBlock(scope: !15982, file: !3, line: 6413, column: 10)
!16046 = !DILocation(line: 6413, column: 16, scope: !16045)
!16047 = !DILocation(line: 6413, column: 19, scope: !16045)
!16048 = !DILocation(line: 6413, column: 29, scope: !16045)
!16049 = !DILocation(line: 6413, column: 33, scope: !16045)
!16050 = !DILocation(line: 6413, column: 38, scope: !16045)
!16051 = !DILocation(line: 6413, column: 41, scope: !16045)
!16052 = !DILocation(line: 6413, column: 10, scope: !15982)
!16053 = !DILocation(line: 6414, column: 27, scope: !16054)
!16054 = distinct !DILexicalBlock(scope: !16045, file: !3, line: 6413, column: 52)
!16055 = !DILocation(line: 6414, column: 34, scope: !16054)
!16056 = !DILocation(line: 6414, column: 38, scope: !16054)
!16057 = !DILocation(line: 6414, column: 13, scope: !16054)
!16058 = !DILocation(line: 6414, column: 11, scope: !16054)
!16059 = !DILocation(line: 6415, column: 14, scope: !16060)
!16060 = distinct !DILexicalBlock(scope: !16054, file: !3, line: 6415, column: 7)
!16061 = !DILocation(line: 6415, column: 12, scope: !16060)
!16062 = !DILocation(line: 6415, column: 19, scope: !16063)
!16063 = distinct !DILexicalBlock(scope: !16060, file: !3, line: 6415, column: 7)
!16064 = !DILocation(line: 6415, column: 23, scope: !16063)
!16065 = !DILocation(line: 6415, column: 27, scope: !16063)
!16066 = !DILocation(line: 6415, column: 21, scope: !16063)
!16067 = !DILocation(line: 6415, column: 7, scope: !16060)
!16068 = !DILocation(line: 6416, column: 23, scope: !16069)
!16069 = distinct !DILexicalBlock(scope: !16063, file: !3, line: 6415, column: 39)
!16070 = !DILocation(line: 6416, column: 34, scope: !16069)
!16071 = !DILocation(line: 6416, column: 39, scope: !16069)
!16072 = !DILocation(line: 6416, column: 42, scope: !16069)
!16073 = !DILocation(line: 6416, column: 47, scope: !16069)
!16074 = !DILocation(line: 6416, column: 51, scope: !16069)
!16075 = !DILocation(line: 6416, column: 54, scope: !16069)
!16076 = !DILocation(line: 6416, column: 58, scope: !16069)
!16077 = !DILocation(line: 6416, column: 62, scope: !16069)
!16078 = !DILocation(line: 6416, column: 56, scope: !16069)
!16079 = !DILocation(line: 6416, column: 70, scope: !16069)
!16080 = !DILocation(line: 6416, column: 74, scope: !16069)
!16081 = !DILocation(line: 6416, column: 68, scope: !16069)
!16082 = !DILocation(line: 6416, column: 80, scope: !16069)
!16083 = !DILocation(line: 6416, column: 8, scope: !16069)
!16084 = !DILocation(line: 6417, column: 7, scope: !16069)
!16085 = !DILocation(line: 6415, column: 35, scope: !16063)
!16086 = !DILocation(line: 6415, column: 7, scope: !16063)
!16087 = distinct !{!16087, !16067, !16088}
!16088 = !DILocation(line: 6417, column: 7, scope: !16060)
!16089 = !DILocation(line: 6418, column: 29, scope: !16054)
!16090 = !DILocation(line: 6418, column: 7, scope: !16054)
!16091 = !DILocation(line: 6419, column: 6, scope: !16054)
!16092 = !DILocation(line: 6420, column: 5, scope: !15982)
!16093 = !DILocation(line: 6421, column: 4, scope: !15573)
!16094 = !DILocation(line: 6422, column: 24, scope: !16095)
!16095 = distinct !DILexicalBlock(scope: !15568, file: !3, line: 6422, column: 13)
!16096 = !DILocation(line: 6422, column: 13, scope: !16095)
!16097 = !DILocation(line: 6422, column: 13, scope: !15568)
!16098 = !DILocation(line: 6423, column: 12, scope: !16099)
!16099 = distinct !DILexicalBlock(scope: !16100, file: !3, line: 6423, column: 5)
!16100 = distinct !DILexicalBlock(scope: !16095, file: !3, line: 6422, column: 41)
!16101 = !DILocation(line: 6423, column: 22, scope: !16099)
!16102 = !DILocation(line: 6423, column: 26, scope: !16099)
!16103 = !DILocation(line: 6423, column: 20, scope: !16099)
!16104 = !DILocation(line: 6423, column: 10, scope: !16099)
!16105 = !DILocation(line: 6423, column: 30, scope: !16106)
!16106 = distinct !DILexicalBlock(scope: !16099, file: !3, line: 6423, column: 5)
!16107 = !DILocation(line: 6423, column: 34, scope: !16106)
!16108 = !DILocation(line: 6423, column: 38, scope: !16106)
!16109 = !DILocation(line: 6423, column: 32, scope: !16106)
!16110 = !DILocation(line: 6423, column: 5, scope: !16099)
!16111 = !DILocation(line: 6424, column: 12, scope: !16112)
!16112 = distinct !DILexicalBlock(scope: !16113, file: !3, line: 6424, column: 10)
!16113 = distinct !DILexicalBlock(scope: !16106, file: !3, line: 6423, column: 67)
!16114 = !DILocation(line: 6424, column: 16, scope: !16112)
!16115 = !DILocation(line: 6424, column: 19, scope: !16112)
!16116 = !DILocation(line: 6424, column: 10, scope: !16113)
!16117 = !DILocation(line: 6425, column: 14, scope: !16118)
!16118 = distinct !DILexicalBlock(scope: !16112, file: !3, line: 6424, column: 30)
!16119 = !DILocation(line: 6425, column: 12, scope: !16118)
!16120 = !DILocation(line: 6426, column: 11, scope: !16121)
!16121 = distinct !DILexicalBlock(scope: !16118, file: !3, line: 6426, column: 11)
!16122 = !DILocation(line: 6426, column: 18, scope: !16121)
!16123 = !DILocation(line: 6426, column: 11, scope: !16118)
!16124 = !DILocation(line: 6426, column: 34, scope: !16121)
!16125 = !DILocation(line: 6426, column: 32, scope: !16121)
!16126 = !DILocation(line: 6426, column: 25, scope: !16121)
!16127 = !DILocation(line: 6427, column: 11, scope: !16128)
!16128 = distinct !DILexicalBlock(scope: !16118, file: !3, line: 6427, column: 11)
!16129 = !DILocation(line: 6427, column: 15, scope: !16128)
!16130 = !DILocation(line: 6427, column: 19, scope: !16128)
!16131 = !DILocation(line: 6427, column: 25, scope: !16128)
!16132 = !DILocation(line: 6427, column: 13, scope: !16128)
!16133 = !DILocation(line: 6427, column: 11, scope: !16118)
!16134 = !DILocation(line: 6427, column: 30, scope: !16128)
!16135 = !DILocation(line: 6428, column: 6, scope: !16118)
!16136 = !DILocation(line: 6429, column: 15, scope: !16137)
!16137 = distinct !DILexicalBlock(scope: !16112, file: !3, line: 6429, column: 15)
!16138 = !DILocation(line: 6429, column: 19, scope: !16137)
!16139 = !DILocation(line: 6429, column: 23, scope: !16137)
!16140 = !DILocation(line: 6429, column: 29, scope: !16137)
!16141 = !DILocation(line: 6429, column: 17, scope: !16137)
!16142 = !DILocation(line: 6429, column: 33, scope: !16137)
!16143 = !DILocation(line: 6429, column: 39, scope: !16137)
!16144 = !DILocation(line: 6429, column: 44, scope: !16137)
!16145 = !DILocation(line: 6429, column: 48, scope: !16137)
!16146 = !DILocation(line: 6429, column: 42, scope: !16137)
!16147 = !DILocation(line: 6429, column: 56, scope: !16137)
!16148 = !DILocation(line: 6429, column: 38, scope: !16137)
!16149 = !DILocation(line: 6429, column: 59, scope: !16137)
!16150 = !DILocation(line: 6429, column: 15, scope: !16112)
!16151 = !DILocation(line: 6431, column: 7, scope: !16152)
!16152 = distinct !DILexicalBlock(scope: !16137, file: !3, line: 6429, column: 70)
!16153 = !DILocation(line: 6434, column: 10, scope: !16154)
!16154 = distinct !DILexicalBlock(scope: !16113, file: !3, line: 6434, column: 10)
!16155 = !DILocation(line: 6434, column: 17, scope: !16154)
!16156 = !DILocation(line: 6434, column: 10, scope: !16113)
!16157 = !DILocation(line: 6436, column: 11, scope: !16158)
!16158 = distinct !DILexicalBlock(scope: !16159, file: !3, line: 6436, column: 11)
!16159 = distinct !DILexicalBlock(scope: !16154, file: !3, line: 6434, column: 23)
!16160 = !DILocation(line: 6436, column: 18, scope: !16158)
!16161 = !DILocation(line: 6436, column: 23, scope: !16158)
!16162 = !DILocation(line: 6436, column: 26, scope: !16158)
!16163 = !DILocation(line: 6436, column: 31, scope: !16158)
!16164 = !DILocation(line: 6436, column: 35, scope: !16158)
!16165 = !DILocation(line: 6436, column: 41, scope: !16158)
!16166 = !DILocation(line: 6436, column: 28, scope: !16158)
!16167 = !DILocation(line: 6436, column: 11, scope: !16159)
!16168 = !DILocation(line: 6438, column: 12, scope: !16169)
!16169 = distinct !DILexicalBlock(scope: !16170, file: !3, line: 6438, column: 12)
!16170 = distinct !DILexicalBlock(scope: !16158, file: !3, line: 6436, column: 46)
!16171 = !DILocation(line: 6438, column: 19, scope: !16169)
!16172 = !DILocation(line: 6438, column: 24, scope: !16169)
!16173 = !DILocation(line: 6438, column: 27, scope: !16169)
!16174 = !DILocation(line: 6438, column: 35, scope: !16169)
!16175 = !DILocation(line: 6438, column: 32, scope: !16169)
!16176 = !DILocation(line: 6438, column: 12, scope: !16170)
!16177 = !DILocation(line: 6438, column: 38, scope: !16169)
!16178 = !DILocation(line: 6438, column: 42, scope: !16169)
!16179 = !DILocation(line: 6438, column: 48, scope: !16169)
!16180 = !DILocation(line: 6440, column: 15, scope: !16170)
!16181 = !DILocation(line: 6441, column: 15, scope: !16170)
!16182 = !DILocation(line: 6441, column: 13, scope: !16170)
!16183 = !DILocation(line: 6442, column: 14, scope: !16170)
!16184 = !DILocation(line: 6442, column: 21, scope: !16170)
!16185 = !DILocation(line: 6442, column: 19, scope: !16170)
!16186 = !DILocation(line: 6442, column: 28, scope: !16170)
!16187 = !DILocation(line: 6442, column: 12, scope: !16170)
!16188 = !DILocation(line: 6443, column: 28, scope: !16170)
!16189 = !DILocation(line: 6443, column: 32, scope: !16170)
!16190 = !DILocation(line: 6443, column: 36, scope: !16170)
!16191 = !DILocation(line: 6443, column: 43, scope: !16170)
!16192 = !DILocation(line: 6443, column: 14, scope: !16170)
!16193 = !DILocation(line: 6443, column: 12, scope: !16170)
!16194 = !DILocation(line: 6444, column: 7, scope: !16170)
!16195 = !DILocation(line: 6445, column: 16, scope: !16196)
!16196 = distinct !DILexicalBlock(scope: !16158, file: !3, line: 6445, column: 16)
!16197 = !DILocation(line: 6445, column: 23, scope: !16196)
!16198 = !DILocation(line: 6445, column: 16, scope: !16158)
!16199 = !DILocation(line: 6447, column: 12, scope: !16200)
!16200 = distinct !DILexicalBlock(scope: !16196, file: !3, line: 6445, column: 29)
!16201 = !DILocation(line: 6448, column: 14, scope: !16200)
!16202 = !DILocation(line: 6448, column: 21, scope: !16200)
!16203 = !DILocation(line: 6448, column: 19, scope: !16200)
!16204 = !DILocation(line: 6448, column: 28, scope: !16200)
!16205 = !DILocation(line: 6448, column: 12, scope: !16200)
!16206 = !DILocation(line: 6449, column: 15, scope: !16200)
!16207 = !DILocation(line: 6449, column: 19, scope: !16200)
!16208 = !DILocation(line: 6449, column: 22, scope: !16200)
!16209 = !DILocation(line: 6449, column: 26, scope: !16200)
!16210 = !DILocation(line: 6449, column: 34, scope: !16200)
!16211 = !DILocation(line: 6449, column: 38, scope: !16200)
!16212 = !DILocation(line: 6449, column: 32, scope: !16200)
!16213 = !DILocation(line: 6449, column: 46, scope: !16200)
!16214 = !DILocation(line: 6449, column: 50, scope: !16200)
!16215 = !DILocation(line: 6449, column: 44, scope: !16200)
!16216 = !DILocation(line: 6449, column: 12, scope: !16200)
!16217 = !DILocation(line: 6450, column: 15, scope: !16200)
!16218 = !DILocation(line: 6450, column: 19, scope: !16200)
!16219 = !DILocation(line: 6450, column: 22, scope: !16200)
!16220 = !DILocation(line: 6450, column: 26, scope: !16200)
!16221 = !DILocation(line: 6450, column: 34, scope: !16200)
!16222 = !DILocation(line: 6450, column: 38, scope: !16200)
!16223 = !DILocation(line: 6450, column: 32, scope: !16200)
!16224 = !DILocation(line: 6450, column: 47, scope: !16200)
!16225 = !DILocation(line: 6450, column: 51, scope: !16200)
!16226 = !DILocation(line: 6450, column: 57, scope: !16200)
!16227 = !DILocation(line: 6450, column: 44, scope: !16200)
!16228 = !DILocation(line: 6450, column: 12, scope: !16200)
!16229 = !DILocation(line: 6452, column: 13, scope: !16230)
!16230 = distinct !DILexicalBlock(scope: !16200, file: !3, line: 6452, column: 12)
!16231 = !DILocation(line: 6452, column: 17, scope: !16230)
!16232 = !DILocation(line: 6452, column: 23, scope: !16230)
!16233 = !DILocation(line: 6452, column: 41, scope: !16230)
!16234 = !DILocation(line: 6452, column: 45, scope: !16230)
!16235 = !DILocation(line: 6452, column: 50, scope: !16230)
!16236 = !DILocation(line: 6452, column: 53, scope: !16230)
!16237 = !DILocation(line: 6452, column: 63, scope: !16230)
!16238 = !DILocation(line: 6452, column: 67, scope: !16230)
!16239 = !DILocation(line: 6452, column: 72, scope: !16230)
!16240 = !DILocation(line: 6452, column: 75, scope: !16230)
!16241 = !DILocation(line: 6452, column: 12, scope: !16200)
!16242 = !DILocation(line: 6454, column: 29, scope: !16243)
!16243 = distinct !DILexicalBlock(scope: !16230, file: !3, line: 6452, column: 86)
!16244 = !DILocation(line: 6454, column: 33, scope: !16243)
!16245 = !DILocation(line: 6454, column: 37, scope: !16243)
!16246 = !DILocation(line: 6454, column: 44, scope: !16243)
!16247 = !DILocation(line: 6454, column: 48, scope: !16243)
!16248 = !DILocation(line: 6454, column: 15, scope: !16243)
!16249 = !DILocation(line: 6454, column: 13, scope: !16243)
!16250 = !DILocation(line: 6455, column: 24, scope: !16243)
!16251 = !DILocation(line: 6455, column: 35, scope: !16243)
!16252 = !DILocation(line: 6455, column: 40, scope: !16243)
!16253 = !DILocation(line: 6455, column: 43, scope: !16243)
!16254 = !DILocation(line: 6455, column: 47, scope: !16243)
!16255 = !DILocation(line: 6455, column: 55, scope: !16243)
!16256 = !DILocation(line: 6455, column: 59, scope: !16243)
!16257 = !DILocation(line: 6455, column: 63, scope: !16243)
!16258 = !DILocation(line: 6455, column: 69, scope: !16243)
!16259 = !DILocation(line: 6455, column: 73, scope: !16243)
!16260 = !DILocation(line: 6455, column: 67, scope: !16243)
!16261 = !DILocation(line: 6455, column: 9, scope: !16243)
!16262 = !DILocation(line: 6456, column: 18, scope: !16243)
!16263 = !DILocation(line: 6456, column: 22, scope: !16243)
!16264 = !DILocation(line: 6456, column: 28, scope: !16243)
!16265 = !DILocation(line: 6456, column: 16, scope: !16243)
!16266 = !DILocation(line: 6457, column: 13, scope: !16243)
!16267 = !DILocation(line: 6458, column: 8, scope: !16243)
!16268 = !DILocation(line: 6460, column: 13, scope: !16269)
!16269 = distinct !DILexicalBlock(scope: !16270, file: !3, line: 6460, column: 13)
!16270 = distinct !DILexicalBlock(scope: !16230, file: !3, line: 6459, column: 13)
!16271 = !DILocation(line: 6460, column: 17, scope: !16269)
!16272 = !DILocation(line: 6460, column: 23, scope: !16269)
!16273 = !DILocation(line: 6460, column: 13, scope: !16270)
!16274 = !DILocation(line: 6460, column: 52, scope: !16269)
!16275 = !DILocation(line: 6460, column: 50, scope: !16269)
!16276 = !DILocation(line: 6460, column: 41, scope: !16269)
!16277 = !DILocation(line: 6461, column: 34, scope: !16269)
!16278 = !DILocation(line: 6461, column: 38, scope: !16269)
!16279 = !DILocation(line: 6461, column: 42, scope: !16269)
!16280 = !DILocation(line: 6461, column: 49, scope: !16269)
!16281 = !DILocation(line: 6461, column: 20, scope: !16269)
!16282 = !DILocation(line: 6461, column: 18, scope: !16269)
!16283 = !DILocation(line: 6463, column: 7, scope: !16200)
!16284 = !DILocation(line: 6464, column: 16, scope: !16285)
!16285 = distinct !DILexicalBlock(scope: !16196, file: !3, line: 6464, column: 16)
!16286 = !DILocation(line: 6464, column: 24, scope: !16285)
!16287 = !DILocation(line: 6464, column: 28, scope: !16285)
!16288 = !DILocation(line: 6464, column: 34, scope: !16285)
!16289 = !DILocation(line: 6464, column: 21, scope: !16285)
!16290 = !DILocation(line: 6464, column: 16, scope: !16196)
!16291 = !DILocation(line: 6466, column: 14, scope: !16292)
!16292 = distinct !DILexicalBlock(scope: !16285, file: !3, line: 6464, column: 39)
!16293 = !DILocation(line: 6467, column: 14, scope: !16292)
!16294 = !DILocation(line: 6467, column: 21, scope: !16292)
!16295 = !DILocation(line: 6467, column: 19, scope: !16292)
!16296 = !DILocation(line: 6467, column: 28, scope: !16292)
!16297 = !DILocation(line: 6467, column: 12, scope: !16292)
!16298 = !DILocation(line: 6468, column: 14, scope: !16292)
!16299 = !DILocation(line: 6468, column: 18, scope: !16292)
!16300 = !DILocation(line: 6468, column: 12, scope: !16292)
!16301 = !DILocation(line: 6469, column: 15, scope: !16292)
!16302 = !DILocation(line: 6469, column: 19, scope: !16292)
!16303 = !DILocation(line: 6469, column: 22, scope: !16292)
!16304 = !DILocation(line: 6469, column: 26, scope: !16292)
!16305 = !DILocation(line: 6469, column: 12, scope: !16292)
!16306 = !DILocation(line: 6471, column: 13, scope: !16307)
!16307 = distinct !DILexicalBlock(scope: !16292, file: !3, line: 6471, column: 12)
!16308 = !DILocation(line: 6471, column: 17, scope: !16307)
!16309 = !DILocation(line: 6471, column: 23, scope: !16307)
!16310 = !DILocation(line: 6471, column: 41, scope: !16307)
!16311 = !DILocation(line: 6471, column: 45, scope: !16307)
!16312 = !DILocation(line: 6471, column: 50, scope: !16307)
!16313 = !DILocation(line: 6471, column: 53, scope: !16307)
!16314 = !DILocation(line: 6471, column: 63, scope: !16307)
!16315 = !DILocation(line: 6471, column: 67, scope: !16307)
!16316 = !DILocation(line: 6471, column: 72, scope: !16307)
!16317 = !DILocation(line: 6471, column: 75, scope: !16307)
!16318 = !DILocation(line: 6471, column: 12, scope: !16292)
!16319 = !DILocation(line: 6473, column: 29, scope: !16320)
!16320 = distinct !DILexicalBlock(scope: !16307, file: !3, line: 6471, column: 86)
!16321 = !DILocation(line: 6473, column: 33, scope: !16320)
!16322 = !DILocation(line: 6473, column: 37, scope: !16320)
!16323 = !DILocation(line: 6473, column: 44, scope: !16320)
!16324 = !DILocation(line: 6473, column: 48, scope: !16320)
!16325 = !DILocation(line: 6473, column: 15, scope: !16320)
!16326 = !DILocation(line: 6473, column: 13, scope: !16320)
!16327 = !DILocation(line: 6474, column: 24, scope: !16320)
!16328 = !DILocation(line: 6474, column: 35, scope: !16320)
!16329 = !DILocation(line: 6474, column: 40, scope: !16320)
!16330 = !DILocation(line: 6474, column: 43, scope: !16320)
!16331 = !DILocation(line: 6474, column: 49, scope: !16320)
!16332 = !DILocation(line: 6474, column: 53, scope: !16320)
!16333 = !DILocation(line: 6474, column: 47, scope: !16320)
!16334 = !DILocation(line: 6474, column: 61, scope: !16320)
!16335 = !DILocation(line: 6474, column: 65, scope: !16320)
!16336 = !DILocation(line: 6474, column: 69, scope: !16320)
!16337 = !DILocation(line: 6474, column: 73, scope: !16320)
!16338 = !DILocation(line: 6474, column: 9, scope: !16320)
!16339 = !DILocation(line: 6475, column: 8, scope: !16320)
!16340 = !DILocation(line: 6476, column: 17, scope: !16341)
!16341 = distinct !DILexicalBlock(scope: !16307, file: !3, line: 6476, column: 17)
!16342 = !DILocation(line: 6476, column: 26, scope: !16341)
!16343 = !DILocation(line: 6476, column: 17, scope: !16307)
!16344 = !DILocation(line: 6478, column: 29, scope: !16345)
!16345 = distinct !DILexicalBlock(scope: !16341, file: !3, line: 6476, column: 32)
!16346 = !DILocation(line: 6478, column: 33, scope: !16345)
!16347 = !DILocation(line: 6478, column: 37, scope: !16345)
!16348 = !DILocation(line: 6478, column: 44, scope: !16345)
!16349 = !DILocation(line: 6478, column: 50, scope: !16345)
!16350 = !DILocation(line: 6478, column: 48, scope: !16345)
!16351 = !DILocation(line: 6478, column: 15, scope: !16345)
!16352 = !DILocation(line: 6478, column: 13, scope: !16345)
!16353 = !DILocation(line: 6479, column: 24, scope: !16345)
!16354 = !DILocation(line: 6479, column: 35, scope: !16345)
!16355 = !DILocation(line: 6479, column: 40, scope: !16345)
!16356 = !DILocation(line: 6479, column: 43, scope: !16345)
!16357 = !DILocation(line: 6479, column: 49, scope: !16345)
!16358 = !DILocation(line: 6479, column: 53, scope: !16345)
!16359 = !DILocation(line: 6479, column: 47, scope: !16345)
!16360 = !DILocation(line: 6479, column: 61, scope: !16345)
!16361 = !DILocation(line: 6479, column: 65, scope: !16345)
!16362 = !DILocation(line: 6479, column: 69, scope: !16345)
!16363 = !DILocation(line: 6479, column: 73, scope: !16345)
!16364 = !DILocation(line: 6479, column: 81, scope: !16345)
!16365 = !DILocation(line: 6479, column: 79, scope: !16345)
!16366 = !DILocation(line: 6479, column: 9, scope: !16345)
!16367 = !DILocation(line: 6480, column: 18, scope: !16345)
!16368 = !DILocation(line: 6481, column: 8, scope: !16345)
!16369 = !DILocation(line: 6483, column: 29, scope: !16370)
!16370 = distinct !DILexicalBlock(scope: !16341, file: !3, line: 6482, column: 13)
!16371 = !DILocation(line: 6483, column: 33, scope: !16370)
!16372 = !DILocation(line: 6483, column: 37, scope: !16370)
!16373 = !DILocation(line: 6483, column: 44, scope: !16370)
!16374 = !DILocation(line: 6483, column: 15, scope: !16370)
!16375 = !DILocation(line: 6483, column: 13, scope: !16370)
!16376 = !DILocation(line: 6485, column: 7, scope: !16292)
!16377 = !DILocation(line: 6488, column: 14, scope: !16378)
!16378 = distinct !DILexicalBlock(scope: !16285, file: !3, line: 6486, column: 12)
!16379 = !DILocation(line: 6489, column: 12, scope: !16378)
!16380 = !DILocation(line: 6490, column: 14, scope: !16378)
!16381 = !DILocation(line: 6490, column: 21, scope: !16378)
!16382 = !DILocation(line: 6490, column: 19, scope: !16378)
!16383 = !DILocation(line: 6490, column: 28, scope: !16378)
!16384 = !DILocation(line: 6490, column: 12, scope: !16378)
!16385 = !DILocation(line: 6491, column: 28, scope: !16378)
!16386 = !DILocation(line: 6491, column: 32, scope: !16378)
!16387 = !DILocation(line: 6491, column: 36, scope: !16378)
!16388 = !DILocation(line: 6491, column: 43, scope: !16378)
!16389 = !DILocation(line: 6491, column: 14, scope: !16378)
!16390 = !DILocation(line: 6491, column: 12, scope: !16378)
!16391 = !DILocation(line: 6494, column: 11, scope: !16392)
!16392 = distinct !DILexicalBlock(scope: !16159, file: !3, line: 6494, column: 11)
!16393 = !DILocation(line: 6494, column: 15, scope: !16392)
!16394 = !DILocation(line: 6494, column: 11, scope: !16159)
!16395 = !DILocation(line: 6495, column: 23, scope: !16396)
!16396 = distinct !DILexicalBlock(scope: !16392, file: !3, line: 6494, column: 24)
!16397 = !DILocation(line: 6495, column: 33, scope: !16396)
!16398 = !DILocation(line: 6495, column: 38, scope: !16396)
!16399 = !DILocation(line: 6495, column: 43, scope: !16396)
!16400 = !DILocation(line: 6495, column: 47, scope: !16396)
!16401 = !DILocation(line: 6495, column: 50, scope: !16396)
!16402 = !DILocation(line: 6495, column: 59, scope: !16396)
!16403 = !DILocation(line: 6495, column: 63, scope: !16396)
!16404 = !DILocation(line: 6495, column: 57, scope: !16396)
!16405 = !DILocation(line: 6495, column: 71, scope: !16396)
!16406 = !DILocation(line: 6495, column: 77, scope: !16396)
!16407 = !DILocation(line: 6495, column: 81, scope: !16396)
!16408 = !DILocation(line: 6495, column: 75, scope: !16396)
!16409 = !DILocation(line: 6495, column: 8, scope: !16396)
!16410 = !DILocation(line: 6496, column: 30, scope: !16396)
!16411 = !DILocation(line: 6496, column: 8, scope: !16396)
!16412 = !DILocation(line: 6498, column: 12, scope: !16413)
!16413 = distinct !DILexicalBlock(scope: !16396, file: !3, line: 6498, column: 12)
!16414 = !DILocation(line: 6498, column: 19, scope: !16413)
!16415 = !DILocation(line: 6498, column: 24, scope: !16413)
!16416 = !DILocation(line: 6498, column: 27, scope: !16413)
!16417 = !DILocation(line: 6498, column: 35, scope: !16413)
!16418 = !DILocation(line: 6498, column: 39, scope: !16413)
!16419 = !DILocation(line: 6498, column: 45, scope: !16413)
!16420 = !DILocation(line: 6498, column: 32, scope: !16413)
!16421 = !DILocation(line: 6498, column: 12, scope: !16396)
!16422 = !DILocation(line: 6498, column: 50, scope: !16413)
!16423 = !DILocation(line: 6498, column: 55, scope: !16413)
!16424 = !DILocation(line: 6498, column: 61, scope: !16413)
!16425 = !DILocation(line: 6499, column: 12, scope: !16396)
!16426 = !DILocation(line: 6500, column: 7, scope: !16396)
!16427 = !DILocation(line: 6501, column: 21, scope: !16159)
!16428 = !DILocation(line: 6501, column: 14, scope: !16159)
!16429 = !DILocation(line: 6502, column: 6, scope: !16159)
!16430 = !DILocation(line: 6503, column: 5, scope: !16113)
!16431 = !DILocation(line: 6423, column: 46, scope: !16106)
!16432 = !DILocation(line: 6423, column: 56, scope: !16106)
!16433 = !DILocation(line: 6423, column: 60, scope: !16106)
!16434 = !DILocation(line: 6423, column: 53, scope: !16106)
!16435 = !DILocation(line: 6423, column: 5, scope: !16106)
!16436 = distinct !{!16436, !16110, !16437}
!16437 = !DILocation(line: 6503, column: 5, scope: !16099)
!16438 = !DILocation(line: 6505, column: 10, scope: !16439)
!16439 = distinct !DILexicalBlock(scope: !16100, file: !3, line: 6505, column: 9)
!16440 = !DILocation(line: 6505, column: 16, scope: !16439)
!16441 = !DILocation(line: 6505, column: 19, scope: !16439)
!16442 = !DILocation(line: 6505, column: 23, scope: !16439)
!16443 = !DILocation(line: 6505, column: 29, scope: !16439)
!16444 = !DILocation(line: 6505, column: 32, scope: !16439)
!16445 = !DILocation(line: 6505, column: 36, scope: !16439)
!16446 = !DILocation(line: 6505, column: 42, scope: !16439)
!16447 = !DILocation(line: 6505, column: 46, scope: !16439)
!16448 = !DILocation(line: 6505, column: 51, scope: !16439)
!16449 = !DILocation(line: 6505, column: 55, scope: !16439)
!16450 = !DILocation(line: 6505, column: 61, scope: !16439)
!16451 = !DILocation(line: 6505, column: 9, scope: !16100)
!16452 = !DILocation(line: 6507, column: 12, scope: !16453)
!16453 = distinct !DILexicalBlock(scope: !16439, file: !3, line: 6505, column: 80)
!16454 = !DILocation(line: 6507, column: 16, scope: !16453)
!16455 = !DILocation(line: 6507, column: 10, scope: !16453)
!16456 = !DILocation(line: 6508, column: 13, scope: !16453)
!16457 = !DILocation(line: 6508, column: 17, scope: !16453)
!16458 = !DILocation(line: 6508, column: 20, scope: !16453)
!16459 = !DILocation(line: 6508, column: 24, scope: !16453)
!16460 = !DILocation(line: 6508, column: 10, scope: !16453)
!16461 = !DILocation(line: 6510, column: 11, scope: !16462)
!16462 = distinct !DILexicalBlock(scope: !16453, file: !3, line: 6510, column: 10)
!16463 = !DILocation(line: 6510, column: 16, scope: !16462)
!16464 = !DILocation(line: 6510, column: 19, scope: !16462)
!16465 = !DILocation(line: 6510, column: 29, scope: !16462)
!16466 = !DILocation(line: 6510, column: 33, scope: !16462)
!16467 = !DILocation(line: 6510, column: 38, scope: !16462)
!16468 = !DILocation(line: 6510, column: 41, scope: !16462)
!16469 = !DILocation(line: 6510, column: 10, scope: !16453)
!16470 = !DILocation(line: 6511, column: 27, scope: !16471)
!16471 = distinct !DILexicalBlock(scope: !16462, file: !3, line: 6510, column: 52)
!16472 = !DILocation(line: 6511, column: 31, scope: !16471)
!16473 = !DILocation(line: 6511, column: 35, scope: !16471)
!16474 = !DILocation(line: 6511, column: 13, scope: !16471)
!16475 = !DILocation(line: 6511, column: 11, scope: !16471)
!16476 = !DILocation(line: 6512, column: 22, scope: !16471)
!16477 = !DILocation(line: 6512, column: 32, scope: !16471)
!16478 = !DILocation(line: 6512, column: 37, scope: !16471)
!16479 = !DILocation(line: 6512, column: 41, scope: !16471)
!16480 = !DILocation(line: 6512, column: 45, scope: !16471)
!16481 = !DILocation(line: 6512, column: 49, scope: !16471)
!16482 = !DILocation(line: 6512, column: 53, scope: !16471)
!16483 = !DILocation(line: 6512, column: 7, scope: !16471)
!16484 = !DILocation(line: 6513, column: 29, scope: !16471)
!16485 = !DILocation(line: 6513, column: 7, scope: !16471)
!16486 = !DILocation(line: 6514, column: 6, scope: !16471)
!16487 = !DILocation(line: 6516, column: 13, scope: !16453)
!16488 = !DILocation(line: 6516, column: 17, scope: !16453)
!16489 = !DILocation(line: 6516, column: 20, scope: !16453)
!16490 = !DILocation(line: 6516, column: 24, scope: !16453)
!16491 = !DILocation(line: 6516, column: 32, scope: !16453)
!16492 = !DILocation(line: 6516, column: 36, scope: !16453)
!16493 = !DILocation(line: 6516, column: 30, scope: !16453)
!16494 = !DILocation(line: 6516, column: 44, scope: !16453)
!16495 = !DILocation(line: 6516, column: 48, scope: !16453)
!16496 = !DILocation(line: 6516, column: 42, scope: !16453)
!16497 = !DILocation(line: 6516, column: 10, scope: !16453)
!16498 = !DILocation(line: 6517, column: 13, scope: !16453)
!16499 = !DILocation(line: 6517, column: 17, scope: !16453)
!16500 = !DILocation(line: 6517, column: 20, scope: !16453)
!16501 = !DILocation(line: 6517, column: 24, scope: !16453)
!16502 = !DILocation(line: 6517, column: 32, scope: !16453)
!16503 = !DILocation(line: 6517, column: 36, scope: !16453)
!16504 = !DILocation(line: 6517, column: 30, scope: !16453)
!16505 = !DILocation(line: 6517, column: 45, scope: !16453)
!16506 = !DILocation(line: 6517, column: 49, scope: !16453)
!16507 = !DILocation(line: 6517, column: 55, scope: !16453)
!16508 = !DILocation(line: 6517, column: 42, scope: !16453)
!16509 = !DILocation(line: 6517, column: 10, scope: !16453)
!16510 = !DILocation(line: 6519, column: 11, scope: !16511)
!16511 = distinct !DILexicalBlock(scope: !16453, file: !3, line: 6519, column: 10)
!16512 = !DILocation(line: 6519, column: 16, scope: !16511)
!16513 = !DILocation(line: 6519, column: 19, scope: !16511)
!16514 = !DILocation(line: 6519, column: 29, scope: !16511)
!16515 = !DILocation(line: 6519, column: 33, scope: !16511)
!16516 = !DILocation(line: 6519, column: 38, scope: !16511)
!16517 = !DILocation(line: 6519, column: 41, scope: !16511)
!16518 = !DILocation(line: 6519, column: 10, scope: !16453)
!16519 = !DILocation(line: 6520, column: 27, scope: !16520)
!16520 = distinct !DILexicalBlock(scope: !16511, file: !3, line: 6519, column: 52)
!16521 = !DILocation(line: 6520, column: 31, scope: !16520)
!16522 = !DILocation(line: 6520, column: 35, scope: !16520)
!16523 = !DILocation(line: 6520, column: 13, scope: !16520)
!16524 = !DILocation(line: 6520, column: 11, scope: !16520)
!16525 = !DILocation(line: 6521, column: 22, scope: !16520)
!16526 = !DILocation(line: 6521, column: 32, scope: !16520)
!16527 = !DILocation(line: 6521, column: 37, scope: !16520)
!16528 = !DILocation(line: 6521, column: 42, scope: !16520)
!16529 = !DILocation(line: 6521, column: 46, scope: !16520)
!16530 = !DILocation(line: 6521, column: 49, scope: !16520)
!16531 = !DILocation(line: 6521, column: 53, scope: !16520)
!16532 = !DILocation(line: 6521, column: 61, scope: !16520)
!16533 = !DILocation(line: 6521, column: 65, scope: !16520)
!16534 = !DILocation(line: 6521, column: 59, scope: !16520)
!16535 = !DILocation(line: 6521, column: 73, scope: !16520)
!16536 = !DILocation(line: 6521, column: 77, scope: !16520)
!16537 = !DILocation(line: 6521, column: 71, scope: !16520)
!16538 = !DILocation(line: 6521, column: 85, scope: !16520)
!16539 = !DILocation(line: 6521, column: 89, scope: !16520)
!16540 = !DILocation(line: 6521, column: 7, scope: !16520)
!16541 = !DILocation(line: 6522, column: 29, scope: !16520)
!16542 = !DILocation(line: 6522, column: 7, scope: !16520)
!16543 = !DILocation(line: 6523, column: 6, scope: !16520)
!16544 = !DILocation(line: 6524, column: 5, scope: !16453)
!16545 = !DILocation(line: 6525, column: 4, scope: !16100)
!16546 = !DILocation(line: 6528, column: 25, scope: !16547)
!16547 = distinct !DILexicalBlock(scope: !16095, file: !3, line: 6526, column: 9)
!16548 = !DILocation(line: 6528, column: 29, scope: !16547)
!16549 = !DILocation(line: 6528, column: 33, scope: !16547)
!16550 = !DILocation(line: 6528, column: 40, scope: !16547)
!16551 = !DILocation(line: 6528, column: 44, scope: !16547)
!16552 = !DILocation(line: 6528, column: 11, scope: !16547)
!16553 = !DILocation(line: 6528, column: 9, scope: !16547)
!16554 = !DILocation(line: 6529, column: 20, scope: !16547)
!16555 = !DILocation(line: 6529, column: 30, scope: !16547)
!16556 = !DILocation(line: 6529, column: 35, scope: !16547)
!16557 = !DILocation(line: 6529, column: 39, scope: !16547)
!16558 = !DILocation(line: 6529, column: 43, scope: !16547)
!16559 = !DILocation(line: 6529, column: 47, scope: !16547)
!16560 = !DILocation(line: 6529, column: 51, scope: !16547)
!16561 = !DILocation(line: 6529, column: 59, scope: !16547)
!16562 = !DILocation(line: 6529, column: 63, scope: !16547)
!16563 = !DILocation(line: 6529, column: 57, scope: !16547)
!16564 = !DILocation(line: 6529, column: 5, scope: !16547)
!16565 = !DILocation(line: 6530, column: 27, scope: !16547)
!16566 = !DILocation(line: 6530, column: 5, scope: !16547)
!16567 = !DILocation(line: 6532, column: 3, scope: !15563)
!16568 = !DILocation(line: 6533, column: 2, scope: !15205)
!16569 = !DILocation(line: 6185, column: 36, scope: !15202)
!16570 = !DILocation(line: 6185, column: 40, scope: !15202)
!16571 = !DILocation(line: 6185, column: 34, scope: !15202)
!16572 = !DILocation(line: 6185, column: 2, scope: !15202)
!16573 = distinct !{!16573, !15203, !16574}
!16574 = !DILocation(line: 6533, column: 2, scope: !15197)
!16575 = !DILocation(line: 6535, column: 20, scope: !16576)
!16576 = distinct !DILexicalBlock(scope: !15147, file: !3, line: 6535, column: 2)
!16577 = !DILocation(line: 6535, column: 12, scope: !16576)
!16578 = !DILocation(line: 6535, column: 10, scope: !16576)
!16579 = !DILocation(line: 6535, column: 7, scope: !16576)
!16580 = !DILocation(line: 6535, column: 27, scope: !16581)
!16581 = distinct !DILexicalBlock(scope: !16576, file: !3, line: 6535, column: 2)
!16582 = !DILocation(line: 6535, column: 2, scope: !16576)
!16583 = !DILocation(line: 6536, column: 7, scope: !16584)
!16584 = distinct !DILexicalBlock(scope: !16585, file: !3, line: 6536, column: 7)
!16585 = distinct !DILexicalBlock(scope: !16581, file: !3, line: 6535, column: 46)
!16586 = !DILocation(line: 6536, column: 11, scope: !16584)
!16587 = !DILocation(line: 6536, column: 16, scope: !16584)
!16588 = !DILocation(line: 6536, column: 7, scope: !16585)
!16589 = !DILocation(line: 6537, column: 8, scope: !16590)
!16590 = distinct !DILexicalBlock(scope: !16591, file: !3, line: 6537, column: 8)
!16591 = distinct !DILexicalBlock(scope: !16584, file: !3, line: 6536, column: 30)
!16592 = !DILocation(line: 6537, column: 8, scope: !16591)
!16593 = !DILocation(line: 6539, column: 12, scope: !16594)
!16594 = distinct !DILexicalBlock(scope: !16595, file: !3, line: 6539, column: 5)
!16595 = distinct !DILexicalBlock(scope: !16590, file: !3, line: 6537, column: 15)
!16596 = !DILocation(line: 6539, column: 25, scope: !16594)
!16597 = !DILocation(line: 6539, column: 29, scope: !16594)
!16598 = !DILocation(line: 6539, column: 23, scope: !16594)
!16599 = !DILocation(line: 6539, column: 10, scope: !16594)
!16600 = !DILocation(line: 6539, column: 35, scope: !16601)
!16601 = distinct !DILexicalBlock(scope: !16594, file: !3, line: 6539, column: 5)
!16602 = !DILocation(line: 6539, column: 39, scope: !16601)
!16603 = !DILocation(line: 6539, column: 43, scope: !16601)
!16604 = !DILocation(line: 6539, column: 37, scope: !16601)
!16605 = !DILocation(line: 6539, column: 5, scope: !16594)
!16606 = !DILocation(line: 6540, column: 23, scope: !16607)
!16607 = distinct !DILexicalBlock(scope: !16601, file: !3, line: 6539, column: 64)
!16608 = !DILocation(line: 6540, column: 6, scope: !16607)
!16609 = !DILocation(line: 6541, column: 5, scope: !16607)
!16610 = !DILocation(line: 6539, column: 51, scope: !16601)
!16611 = !DILocation(line: 6539, column: 60, scope: !16601)
!16612 = !DILocation(line: 6539, column: 5, scope: !16601)
!16613 = distinct !{!16613, !16605, !16614}
!16614 = !DILocation(line: 6541, column: 5, scope: !16594)
!16615 = !DILocation(line: 6542, column: 4, scope: !16595)
!16616 = !DILocation(line: 6544, column: 26, scope: !16591)
!16617 = !DILocation(line: 6544, column: 4, scope: !16591)
!16618 = !DILocation(line: 6545, column: 3, scope: !16591)
!16619 = !DILocation(line: 6547, column: 8, scope: !16620)
!16620 = distinct !DILexicalBlock(scope: !16621, file: !3, line: 6547, column: 8)
!16621 = distinct !DILexicalBlock(scope: !16584, file: !3, line: 6546, column: 8)
!16622 = !DILocation(line: 6547, column: 8, scope: !16621)
!16623 = !DILocation(line: 6549, column: 12, scope: !16624)
!16624 = distinct !DILexicalBlock(scope: !16625, file: !3, line: 6549, column: 5)
!16625 = distinct !DILexicalBlock(scope: !16620, file: !3, line: 6547, column: 15)
!16626 = !DILocation(line: 6549, column: 23, scope: !16624)
!16627 = !DILocation(line: 6549, column: 27, scope: !16624)
!16628 = !DILocation(line: 6549, column: 21, scope: !16624)
!16629 = !DILocation(line: 6549, column: 10, scope: !16624)
!16630 = !DILocation(line: 6549, column: 31, scope: !16631)
!16631 = distinct !DILexicalBlock(scope: !16624, file: !3, line: 6549, column: 5)
!16632 = !DILocation(line: 6549, column: 35, scope: !16631)
!16633 = !DILocation(line: 6549, column: 39, scope: !16631)
!16634 = !DILocation(line: 6549, column: 47, scope: !16631)
!16635 = !DILocation(line: 6549, column: 51, scope: !16631)
!16636 = !DILocation(line: 6549, column: 45, scope: !16631)
!16637 = !DILocation(line: 6549, column: 33, scope: !16631)
!16638 = !DILocation(line: 6549, column: 5, scope: !16624)
!16639 = !DILocation(line: 6550, column: 20, scope: !16640)
!16640 = distinct !DILexicalBlock(scope: !16631, file: !3, line: 6549, column: 70)
!16641 = !DILocation(line: 6550, column: 6, scope: !16640)
!16642 = !DILocation(line: 6551, column: 5, scope: !16640)
!16643 = !DILocation(line: 6549, column: 59, scope: !16631)
!16644 = !DILocation(line: 6549, column: 66, scope: !16631)
!16645 = !DILocation(line: 6549, column: 5, scope: !16631)
!16646 = distinct !{!16646, !16638, !16647}
!16647 = !DILocation(line: 6551, column: 5, scope: !16624)
!16648 = !DILocation(line: 6552, column: 4, scope: !16625)
!16649 = !DILocation(line: 6554, column: 17, scope: !16621)
!16650 = !DILocation(line: 6554, column: 21, scope: !16621)
!16651 = !DILocation(line: 6554, column: 28, scope: !16621)
!16652 = !DILocation(line: 6554, column: 4, scope: !16621)
!16653 = !DILocation(line: 6554, column: 8, scope: !16621)
!16654 = !DILocation(line: 6554, column: 15, scope: !16621)
!16655 = !DILocation(line: 6555, column: 27, scope: !16621)
!16656 = !DILocation(line: 6555, column: 4, scope: !16621)
!16657 = !DILocation(line: 6556, column: 25, scope: !16621)
!16658 = !DILocation(line: 6556, column: 4, scope: !16621)
!16659 = !DILocation(line: 6558, column: 8, scope: !16660)
!16660 = distinct !DILexicalBlock(scope: !16621, file: !3, line: 6558, column: 8)
!16661 = !DILocation(line: 6558, column: 12, scope: !16660)
!16662 = !DILocation(line: 6558, column: 18, scope: !16660)
!16663 = !DILocation(line: 6558, column: 8, scope: !16621)
!16664 = !DILocation(line: 6559, column: 28, scope: !16665)
!16665 = distinct !DILexicalBlock(scope: !16660, file: !3, line: 6558, column: 23)
!16666 = !DILocation(line: 6559, column: 5, scope: !16665)
!16667 = !DILocation(line: 6560, column: 26, scope: !16665)
!16668 = !DILocation(line: 6560, column: 5, scope: !16665)
!16669 = !DILocation(line: 6561, column: 4, scope: !16665)
!16670 = !DILocation(line: 6563, column: 2, scope: !16585)
!16671 = !DILocation(line: 6535, column: 36, scope: !16581)
!16672 = !DILocation(line: 6535, column: 40, scope: !16581)
!16673 = !DILocation(line: 6535, column: 34, scope: !16581)
!16674 = !DILocation(line: 6535, column: 2, scope: !16581)
!16675 = distinct !{!16675, !16582, !16676}
!16676 = !DILocation(line: 6563, column: 2, scope: !16576)
!16677 = !DILocation(line: 6565, column: 23, scope: !15147)
!16678 = !DILocation(line: 6565, column: 33, scope: !15147)
!16679 = !DILocation(line: 6565, column: 2, scope: !15147)
!16680 = !DILocation(line: 6566, column: 20, scope: !15147)
!16681 = !DILocation(line: 6566, column: 2, scope: !15147)
!16682 = !DILocation(line: 6567, column: 21, scope: !15147)
!16683 = !DILocation(line: 6567, column: 2, scope: !15147)
!16684 = !DILocation(line: 6569, column: 2, scope: !15147)
!16685 = distinct !DISubprogram(name: "isNurbselU", scope: !3, file: !3, line: 1650, type: !16686, scopeLine: 1651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!16686 = !DISubroutineType(types: !16687)
!16687 = !{!1081, !3163, !3150, !22}
!16688 = !DILocalVariable(name: "nu", arg: 1, scope: !16685, file: !3, line: 1650, type: !3163)
!16689 = !DILocation(line: 1650, column: 30, scope: !16685)
!16690 = !DILocalVariable(name: "v", arg: 2, scope: !16685, file: !3, line: 1650, type: !3150)
!16691 = !DILocation(line: 1650, column: 39, scope: !16685)
!16692 = !DILocalVariable(name: "flag", arg: 3, scope: !16685, file: !3, line: 1650, type: !22)
!16693 = !DILocation(line: 1650, column: 46, scope: !16685)
!16694 = !DILocalVariable(name: "bp", scope: !16685, file: !3, line: 1652, type: !3093)
!16695 = !DILocation(line: 1652, column: 10, scope: !16685)
!16696 = !DILocalVariable(name: "a", scope: !16685, file: !3, line: 1653, type: !22)
!16697 = !DILocation(line: 1653, column: 6, scope: !16685)
!16698 = !DILocalVariable(name: "b", scope: !16685, file: !3, line: 1653, type: !22)
!16699 = !DILocation(line: 1653, column: 9, scope: !16685)
!16700 = !DILocalVariable(name: "sel", scope: !16685, file: !3, line: 1653, type: !22)
!16701 = !DILocation(line: 1653, column: 12, scope: !16685)
!16702 = !DILocation(line: 1655, column: 3, scope: !16685)
!16703 = !DILocation(line: 1655, column: 5, scope: !16685)
!16704 = !DILocation(line: 1657, column: 9, scope: !16705)
!16705 = distinct !DILexicalBlock(scope: !16685, file: !3, line: 1657, column: 2)
!16706 = !DILocation(line: 1657, column: 19, scope: !16705)
!16707 = !DILocation(line: 1657, column: 23, scope: !16705)
!16708 = !DILocation(line: 1657, column: 17, scope: !16705)
!16709 = !DILocation(line: 1657, column: 7, scope: !16705)
!16710 = !DILocation(line: 1657, column: 27, scope: !16711)
!16711 = distinct !DILexicalBlock(scope: !16705, file: !3, line: 1657, column: 2)
!16712 = !DILocation(line: 1657, column: 31, scope: !16711)
!16713 = !DILocation(line: 1657, column: 35, scope: !16711)
!16714 = !DILocation(line: 1657, column: 29, scope: !16711)
!16715 = !DILocation(line: 1657, column: 2, scope: !16705)
!16716 = !DILocation(line: 1658, column: 7, scope: !16717)
!16717 = distinct !DILexicalBlock(scope: !16711, file: !3, line: 1657, column: 47)
!16718 = !DILocation(line: 1659, column: 10, scope: !16719)
!16719 = distinct !DILexicalBlock(scope: !16717, file: !3, line: 1659, column: 3)
!16720 = !DILocation(line: 1659, column: 8, scope: !16719)
!16721 = !DILocation(line: 1659, column: 15, scope: !16722)
!16722 = distinct !DILexicalBlock(scope: !16719, file: !3, line: 1659, column: 3)
!16723 = !DILocation(line: 1659, column: 19, scope: !16722)
!16724 = !DILocation(line: 1659, column: 23, scope: !16722)
!16725 = !DILocation(line: 1659, column: 17, scope: !16722)
!16726 = !DILocation(line: 1659, column: 3, scope: !16719)
!16727 = !DILocation(line: 1660, column: 8, scope: !16728)
!16728 = distinct !DILexicalBlock(scope: !16729, file: !3, line: 1660, column: 8)
!16729 = distinct !DILexicalBlock(scope: !16722, file: !3, line: 1659, column: 41)
!16730 = !DILocation(line: 1660, column: 12, scope: !16728)
!16731 = !DILocation(line: 1660, column: 17, scope: !16728)
!16732 = !DILocation(line: 1660, column: 15, scope: !16728)
!16733 = !DILocation(line: 1660, column: 8, scope: !16729)
!16734 = !DILocation(line: 1660, column: 26, scope: !16728)
!16735 = !DILocation(line: 1660, column: 23, scope: !16728)
!16736 = !DILocation(line: 1661, column: 3, scope: !16729)
!16737 = !DILocation(line: 1659, column: 31, scope: !16722)
!16738 = !DILocation(line: 1659, column: 37, scope: !16722)
!16739 = !DILocation(line: 1659, column: 3, scope: !16722)
!16740 = distinct !{!16740, !16726, !16741}
!16741 = !DILocation(line: 1661, column: 3, scope: !16719)
!16742 = !DILocation(line: 1662, column: 7, scope: !16743)
!16743 = distinct !DILexicalBlock(scope: !16717, file: !3, line: 1662, column: 7)
!16744 = !DILocation(line: 1662, column: 14, scope: !16743)
!16745 = !DILocation(line: 1662, column: 18, scope: !16743)
!16746 = !DILocation(line: 1662, column: 11, scope: !16743)
!16747 = !DILocation(line: 1662, column: 7, scope: !16717)
!16748 = !DILocation(line: 1663, column: 6, scope: !16749)
!16749 = distinct !DILexicalBlock(scope: !16743, file: !3, line: 1662, column: 25)
!16750 = !DILocation(line: 1663, column: 8, scope: !16749)
!16751 = !DILocation(line: 1664, column: 3, scope: !16749)
!16752 = !DILocation(line: 1665, column: 12, scope: !16753)
!16753 = distinct !DILexicalBlock(scope: !16743, file: !3, line: 1665, column: 12)
!16754 = !DILocation(line: 1665, column: 16, scope: !16753)
!16755 = !DILocation(line: 1665, column: 12, scope: !16743)
!16756 = !DILocation(line: 1666, column: 5, scope: !16757)
!16757 = distinct !DILexicalBlock(scope: !16753, file: !3, line: 1665, column: 22)
!16758 = !DILocation(line: 1666, column: 7, scope: !16757)
!16759 = !DILocation(line: 1667, column: 4, scope: !16757)
!16760 = !DILocation(line: 1669, column: 2, scope: !16717)
!16761 = !DILocation(line: 1657, column: 43, scope: !16711)
!16762 = !DILocation(line: 1657, column: 2, scope: !16711)
!16763 = distinct !{!16763, !16715, !16764}
!16764 = !DILocation(line: 1669, column: 2, scope: !16705)
!16765 = !DILocation(line: 1671, column: 2, scope: !16685)
!16766 = !DILocation(line: 1672, column: 1, scope: !16685)
!16767 = distinct !DISubprogram(name: "isNurbselV", scope: !3, file: !3, line: 1675, type: !16686, scopeLine: 1676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!16768 = !DILocalVariable(name: "nu", arg: 1, scope: !16767, file: !3, line: 1675, type: !3163)
!16769 = !DILocation(line: 1675, column: 30, scope: !16767)
!16770 = !DILocalVariable(name: "u", arg: 2, scope: !16767, file: !3, line: 1675, type: !3150)
!16771 = !DILocation(line: 1675, column: 39, scope: !16767)
!16772 = !DILocalVariable(name: "flag", arg: 3, scope: !16767, file: !3, line: 1675, type: !22)
!16773 = !DILocation(line: 1675, column: 46, scope: !16767)
!16774 = !DILocalVariable(name: "bp", scope: !16767, file: !3, line: 1677, type: !3093)
!16775 = !DILocation(line: 1677, column: 10, scope: !16767)
!16776 = !DILocalVariable(name: "a", scope: !16767, file: !3, line: 1678, type: !22)
!16777 = !DILocation(line: 1678, column: 6, scope: !16767)
!16778 = !DILocalVariable(name: "b", scope: !16767, file: !3, line: 1678, type: !22)
!16779 = !DILocation(line: 1678, column: 9, scope: !16767)
!16780 = !DILocalVariable(name: "sel", scope: !16767, file: !3, line: 1678, type: !22)
!16781 = !DILocation(line: 1678, column: 12, scope: !16767)
!16782 = !DILocation(line: 1680, column: 3, scope: !16767)
!16783 = !DILocation(line: 1680, column: 5, scope: !16767)
!16784 = !DILocation(line: 1682, column: 9, scope: !16785)
!16785 = distinct !DILexicalBlock(scope: !16767, file: !3, line: 1682, column: 2)
!16786 = !DILocation(line: 1682, column: 7, scope: !16785)
!16787 = !DILocation(line: 1682, column: 14, scope: !16788)
!16788 = distinct !DILexicalBlock(scope: !16785, file: !3, line: 1682, column: 2)
!16789 = !DILocation(line: 1682, column: 18, scope: !16788)
!16790 = !DILocation(line: 1682, column: 22, scope: !16788)
!16791 = !DILocation(line: 1682, column: 16, scope: !16788)
!16792 = !DILocation(line: 1682, column: 2, scope: !16785)
!16793 = !DILocation(line: 1683, column: 9, scope: !16794)
!16794 = distinct !DILexicalBlock(scope: !16788, file: !3, line: 1682, column: 34)
!16795 = !DILocation(line: 1683, column: 13, scope: !16794)
!16796 = !DILocation(line: 1683, column: 16, scope: !16794)
!16797 = !DILocation(line: 1683, column: 6, scope: !16794)
!16798 = !DILocation(line: 1684, column: 7, scope: !16794)
!16799 = !DILocation(line: 1685, column: 10, scope: !16800)
!16800 = distinct !DILexicalBlock(scope: !16794, file: !3, line: 1685, column: 3)
!16801 = !DILocation(line: 1685, column: 8, scope: !16800)
!16802 = !DILocation(line: 1685, column: 15, scope: !16803)
!16803 = distinct !DILexicalBlock(scope: !16800, file: !3, line: 1685, column: 3)
!16804 = !DILocation(line: 1685, column: 19, scope: !16803)
!16805 = !DILocation(line: 1685, column: 23, scope: !16803)
!16806 = !DILocation(line: 1685, column: 17, scope: !16803)
!16807 = !DILocation(line: 1685, column: 3, scope: !16800)
!16808 = !DILocation(line: 1686, column: 8, scope: !16809)
!16809 = distinct !DILexicalBlock(scope: !16810, file: !3, line: 1686, column: 8)
!16810 = distinct !DILexicalBlock(scope: !16803, file: !3, line: 1685, column: 52)
!16811 = !DILocation(line: 1686, column: 12, scope: !16809)
!16812 = !DILocation(line: 1686, column: 17, scope: !16809)
!16813 = !DILocation(line: 1686, column: 15, scope: !16809)
!16814 = !DILocation(line: 1686, column: 8, scope: !16810)
!16815 = !DILocation(line: 1686, column: 26, scope: !16809)
!16816 = !DILocation(line: 1686, column: 23, scope: !16809)
!16817 = !DILocation(line: 1687, column: 3, scope: !16810)
!16818 = !DILocation(line: 1685, column: 31, scope: !16803)
!16819 = !DILocation(line: 1685, column: 41, scope: !16803)
!16820 = !DILocation(line: 1685, column: 45, scope: !16803)
!16821 = !DILocation(line: 1685, column: 38, scope: !16803)
!16822 = !DILocation(line: 1685, column: 3, scope: !16803)
!16823 = distinct !{!16823, !16807, !16824}
!16824 = !DILocation(line: 1687, column: 3, scope: !16800)
!16825 = !DILocation(line: 1688, column: 7, scope: !16826)
!16826 = distinct !DILexicalBlock(scope: !16794, file: !3, line: 1688, column: 7)
!16827 = !DILocation(line: 1688, column: 14, scope: !16826)
!16828 = !DILocation(line: 1688, column: 18, scope: !16826)
!16829 = !DILocation(line: 1688, column: 11, scope: !16826)
!16830 = !DILocation(line: 1688, column: 7, scope: !16794)
!16831 = !DILocation(line: 1689, column: 6, scope: !16832)
!16832 = distinct !DILexicalBlock(scope: !16826, file: !3, line: 1688, column: 25)
!16833 = !DILocation(line: 1689, column: 8, scope: !16832)
!16834 = !DILocation(line: 1690, column: 3, scope: !16832)
!16835 = !DILocation(line: 1691, column: 12, scope: !16836)
!16836 = distinct !DILexicalBlock(scope: !16826, file: !3, line: 1691, column: 12)
!16837 = !DILocation(line: 1691, column: 16, scope: !16836)
!16838 = !DILocation(line: 1691, column: 12, scope: !16826)
!16839 = !DILocation(line: 1692, column: 5, scope: !16840)
!16840 = distinct !DILexicalBlock(scope: !16836, file: !3, line: 1691, column: 22)
!16841 = !DILocation(line: 1692, column: 7, scope: !16840)
!16842 = !DILocation(line: 1693, column: 4, scope: !16840)
!16843 = !DILocation(line: 1695, column: 2, scope: !16794)
!16844 = !DILocation(line: 1682, column: 30, scope: !16788)
!16845 = !DILocation(line: 1682, column: 2, scope: !16788)
!16846 = distinct !{!16846, !16792, !16847}
!16847 = !DILocation(line: 1695, column: 2, scope: !16785)
!16848 = !DILocation(line: 1697, column: 2, scope: !16767)
!16849 = !DILocation(line: 1698, column: 1, scope: !16767)
!16850 = distinct !DISubprogram(name: "keyIndex_delNurbList", scope: !3, file: !3, line: 417, type: !4944, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!16851 = !DILocalVariable(name: "editnurb", arg: 1, scope: !16850, file: !3, line: 417, type: !2962)
!16852 = !DILocation(line: 417, column: 44, scope: !16850)
!16853 = !DILocalVariable(name: "nubase", arg: 2, scope: !16850, file: !3, line: 417, type: !486)
!16854 = !DILocation(line: 417, column: 64, scope: !16850)
!16855 = !DILocalVariable(name: "nu", scope: !16850, file: !3, line: 419, type: !3163)
!16856 = !DILocation(line: 419, column: 8, scope: !16850)
!16857 = !DILocation(line: 419, column: 13, scope: !16850)
!16858 = !DILocation(line: 419, column: 21, scope: !16850)
!16859 = !DILocation(line: 421, column: 2, scope: !16850)
!16860 = !DILocation(line: 421, column: 9, scope: !16850)
!16861 = !DILocation(line: 422, column: 20, scope: !16862)
!16862 = distinct !DILexicalBlock(scope: !16850, file: !3, line: 421, column: 13)
!16863 = !DILocation(line: 422, column: 30, scope: !16862)
!16864 = !DILocation(line: 422, column: 3, scope: !16862)
!16865 = !DILocation(line: 424, column: 8, scope: !16862)
!16866 = !DILocation(line: 424, column: 12, scope: !16862)
!16867 = !DILocation(line: 424, column: 6, scope: !16862)
!16868 = distinct !{!16868, !16859, !16869}
!16869 = !DILocation(line: 425, column: 2, scope: !16850)
!16870 = !DILocation(line: 426, column: 1, scope: !16850)
!16871 = distinct !DISubprogram(name: "keyIndex_delNurb", scope: !3, file: !3, line: 389, type: !16872, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!16872 = !DISubroutineType(types: !16873)
!16873 = !{null, !2962, !3163}
!16874 = !DILocalVariable(name: "editnurb", arg: 1, scope: !16871, file: !3, line: 389, type: !2962)
!16875 = !DILocation(line: 389, column: 40, scope: !16871)
!16876 = !DILocalVariable(name: "nu", arg: 2, scope: !16871, file: !3, line: 389, type: !3163)
!16877 = !DILocation(line: 389, column: 56, scope: !16871)
!16878 = !DILocalVariable(name: "a", scope: !16871, file: !3, line: 391, type: !22)
!16879 = !DILocation(line: 391, column: 6, scope: !16871)
!16880 = !DILocation(line: 393, column: 7, scope: !16881)
!16881 = distinct !DILexicalBlock(scope: !16871, file: !3, line: 393, column: 6)
!16882 = !DILocation(line: 393, column: 17, scope: !16881)
!16883 = !DILocation(line: 393, column: 6, scope: !16871)
!16884 = !DILocation(line: 394, column: 3, scope: !16885)
!16885 = distinct !DILexicalBlock(scope: !16881, file: !3, line: 393, column: 27)
!16886 = !DILocation(line: 397, column: 6, scope: !16887)
!16887 = distinct !DILexicalBlock(scope: !16871, file: !3, line: 397, column: 6)
!16888 = !DILocation(line: 397, column: 10, scope: !16887)
!16889 = !DILocation(line: 397, column: 6, scope: !16871)
!16890 = !DILocalVariable(name: "bezt", scope: !16891, file: !3, line: 398, type: !3104)
!16891 = distinct !DILexicalBlock(scope: !16887, file: !3, line: 397, column: 16)
!16892 = !DILocation(line: 398, column: 14, scope: !16891)
!16893 = !DILocation(line: 398, column: 21, scope: !16891)
!16894 = !DILocation(line: 398, column: 25, scope: !16891)
!16895 = !DILocation(line: 399, column: 7, scope: !16891)
!16896 = !DILocation(line: 399, column: 11, scope: !16891)
!16897 = !DILocation(line: 399, column: 5, scope: !16891)
!16898 = !DILocation(line: 401, column: 3, scope: !16891)
!16899 = !DILocation(line: 401, column: 11, scope: !16891)
!16900 = !DILocation(line: 402, column: 21, scope: !16901)
!16901 = distinct !DILexicalBlock(scope: !16891, file: !3, line: 401, column: 15)
!16902 = !DILocation(line: 402, column: 31, scope: !16901)
!16903 = !DILocation(line: 402, column: 41, scope: !16901)
!16904 = !DILocation(line: 402, column: 53, scope: !16901)
!16905 = !DILocation(line: 402, column: 4, scope: !16901)
!16906 = !DILocation(line: 403, column: 8, scope: !16901)
!16907 = distinct !{!16907, !16898, !16908}
!16908 = !DILocation(line: 404, column: 3, scope: !16891)
!16909 = !DILocation(line: 405, column: 2, scope: !16891)
!16910 = !DILocalVariable(name: "bp", scope: !16911, file: !3, line: 407, type: !3093)
!16911 = distinct !DILexicalBlock(scope: !16887, file: !3, line: 406, column: 7)
!16912 = !DILocation(line: 407, column: 11, scope: !16911)
!16913 = !DILocation(line: 407, column: 16, scope: !16911)
!16914 = !DILocation(line: 407, column: 20, scope: !16911)
!16915 = !DILocation(line: 408, column: 7, scope: !16911)
!16916 = !DILocation(line: 408, column: 11, scope: !16911)
!16917 = !DILocation(line: 408, column: 19, scope: !16911)
!16918 = !DILocation(line: 408, column: 23, scope: !16911)
!16919 = !DILocation(line: 408, column: 17, scope: !16911)
!16920 = !DILocation(line: 408, column: 5, scope: !16911)
!16921 = !DILocation(line: 410, column: 3, scope: !16911)
!16922 = !DILocation(line: 410, column: 11, scope: !16911)
!16923 = !DILocation(line: 411, column: 21, scope: !16924)
!16924 = distinct !DILexicalBlock(scope: !16911, file: !3, line: 410, column: 15)
!16925 = !DILocation(line: 411, column: 31, scope: !16924)
!16926 = !DILocation(line: 411, column: 41, scope: !16924)
!16927 = !DILocation(line: 411, column: 51, scope: !16924)
!16928 = !DILocation(line: 411, column: 4, scope: !16924)
!16929 = !DILocation(line: 412, column: 6, scope: !16924)
!16930 = distinct !{!16930, !16921, !16931}
!16931 = !DILocation(line: 413, column: 3, scope: !16911)
!16932 = !DILocation(line: 415, column: 1, scope: !16871)
!16933 = distinct !DISubprogram(name: "keyData_switchDirectionNurb", scope: !3, file: !3, line: 628, type: !16934, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!16934 = !DISubroutineType(types: !16935)
!16935 = !{null, !2953, !3163}
!16936 = !DILocalVariable(name: "cu", arg: 1, scope: !16933, file: !3, line: 628, type: !2953)
!16937 = !DILocation(line: 628, column: 48, scope: !16933)
!16938 = !DILocalVariable(name: "nu", arg: 2, scope: !16933, file: !3, line: 628, type: !3163)
!16939 = !DILocation(line: 628, column: 58, scope: !16933)
!16940 = !DILocalVariable(name: "editnurb", scope: !16933, file: !3, line: 630, type: !2962)
!16941 = !DILocation(line: 630, column: 12, scope: !16933)
!16942 = !DILocation(line: 630, column: 23, scope: !16933)
!16943 = !DILocation(line: 630, column: 27, scope: !16933)
!16944 = !DILocation(line: 632, column: 7, scope: !16945)
!16945 = distinct !DILexicalBlock(scope: !16933, file: !3, line: 632, column: 6)
!16946 = !DILocation(line: 632, column: 17, scope: !16945)
!16947 = !DILocation(line: 632, column: 6, scope: !16933)
!16948 = !DILocation(line: 634, column: 3, scope: !16949)
!16949 = distinct !DILexicalBlock(scope: !16945, file: !3, line: 632, column: 27)
!16950 = !DILocation(line: 637, column: 27, scope: !16933)
!16951 = !DILocation(line: 637, column: 37, scope: !16933)
!16952 = !DILocation(line: 637, column: 2, scope: !16933)
!16953 = !DILocation(line: 638, column: 6, scope: !16954)
!16954 = distinct !DILexicalBlock(scope: !16933, file: !3, line: 638, column: 6)
!16955 = !DILocation(line: 638, column: 10, scope: !16954)
!16956 = !DILocation(line: 638, column: 6, scope: !16933)
!16957 = !DILocation(line: 639, column: 25, scope: !16954)
!16958 = !DILocation(line: 639, column: 29, scope: !16954)
!16959 = !DILocation(line: 639, column: 3, scope: !16954)
!16960 = !DILocation(line: 640, column: 1, scope: !16933)
!16961 = distinct !DISubprogram(name: "keyIndex_switchDirection", scope: !3, file: !3, line: 482, type: !16872, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!16962 = !DILocalVariable(name: "editnurb", arg: 1, scope: !16961, file: !3, line: 482, type: !2962)
!16963 = !DILocation(line: 482, column: 48, scope: !16961)
!16964 = !DILocalVariable(name: "nu", arg: 2, scope: !16961, file: !3, line: 482, type: !3163)
!16965 = !DILocation(line: 482, column: 64, scope: !16961)
!16966 = !DILocalVariable(name: "a", scope: !16961, file: !3, line: 484, type: !22)
!16967 = !DILocation(line: 484, column: 6, scope: !16961)
!16968 = !DILocalVariable(name: "index1", scope: !16961, file: !3, line: 485, type: !3503)
!16969 = !DILocation(line: 485, column: 14, scope: !16961)
!16970 = !DILocalVariable(name: "index2", scope: !16961, file: !3, line: 485, type: !3503)
!16971 = !DILocation(line: 485, column: 23, scope: !16961)
!16972 = !DILocation(line: 487, column: 6, scope: !16973)
!16973 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 487, column: 6)
!16974 = !DILocation(line: 487, column: 10, scope: !16973)
!16975 = !DILocation(line: 487, column: 6, scope: !16961)
!16976 = !DILocalVariable(name: "bezt1", scope: !16977, file: !3, line: 488, type: !3104)
!16977 = distinct !DILexicalBlock(scope: !16973, file: !3, line: 487, column: 16)
!16978 = !DILocation(line: 488, column: 14, scope: !16977)
!16979 = !DILocalVariable(name: "bezt2", scope: !16977, file: !3, line: 488, type: !3104)
!16980 = !DILocation(line: 488, column: 22, scope: !16977)
!16981 = !DILocation(line: 490, column: 7, scope: !16977)
!16982 = !DILocation(line: 490, column: 11, scope: !16977)
!16983 = !DILocation(line: 490, column: 5, scope: !16977)
!16984 = !DILocation(line: 492, column: 11, scope: !16977)
!16985 = !DILocation(line: 492, column: 15, scope: !16977)
!16986 = !DILocation(line: 492, column: 9, scope: !16977)
!16987 = !DILocation(line: 493, column: 11, scope: !16977)
!16988 = !DILocation(line: 493, column: 20, scope: !16977)
!16989 = !DILocation(line: 493, column: 22, scope: !16977)
!16990 = !DILocation(line: 493, column: 17, scope: !16977)
!16991 = !DILocation(line: 493, column: 9, scope: !16977)
!16992 = !DILocation(line: 495, column: 7, scope: !16993)
!16993 = distinct !DILexicalBlock(scope: !16977, file: !3, line: 495, column: 7)
!16994 = !DILocation(line: 495, column: 9, scope: !16993)
!16995 = !DILocation(line: 495, column: 7, scope: !16977)
!16996 = !DILocation(line: 495, column: 14, scope: !16993)
!16997 = !DILocation(line: 497, column: 5, scope: !16977)
!16998 = !DILocation(line: 499, column: 3, scope: !16977)
!16999 = !DILocation(line: 499, column: 11, scope: !16977)
!17000 = !DILocation(line: 500, column: 27, scope: !17001)
!17001 = distinct !DILexicalBlock(scope: !16977, file: !3, line: 499, column: 15)
!17002 = !DILocation(line: 500, column: 37, scope: !17001)
!17003 = !DILocation(line: 500, column: 13, scope: !17001)
!17004 = !DILocation(line: 500, column: 11, scope: !17001)
!17005 = !DILocation(line: 501, column: 27, scope: !17001)
!17006 = !DILocation(line: 501, column: 37, scope: !17001)
!17007 = !DILocation(line: 501, column: 13, scope: !17001)
!17008 = !DILocation(line: 501, column: 11, scope: !17001)
!17009 = !DILocation(line: 503, column: 8, scope: !17010)
!17010 = distinct !DILexicalBlock(scope: !17001, file: !3, line: 503, column: 8)
!17011 = !DILocation(line: 503, column: 8, scope: !17001)
!17012 = !DILocation(line: 503, column: 36, scope: !17010)
!17013 = !DILocation(line: 503, column: 44, scope: !17010)
!17014 = !DILocation(line: 503, column: 35, scope: !17010)
!17015 = !DILocation(line: 503, column: 16, scope: !17010)
!17016 = !DILocation(line: 503, column: 24, scope: !17010)
!17017 = !DILocation(line: 503, column: 33, scope: !17010)
!17018 = !DILocation(line: 505, column: 8, scope: !17019)
!17019 = distinct !DILexicalBlock(scope: !17001, file: !3, line: 505, column: 8)
!17020 = !DILocation(line: 505, column: 17, scope: !17019)
!17021 = !DILocation(line: 505, column: 14, scope: !17019)
!17022 = !DILocation(line: 505, column: 8, scope: !17001)
!17023 = !DILocation(line: 506, column: 19, scope: !17024)
!17024 = distinct !DILexicalBlock(scope: !17019, file: !3, line: 505, column: 24)
!17025 = !DILocation(line: 506, column: 29, scope: !17024)
!17026 = !DILocation(line: 506, column: 36, scope: !17024)
!17027 = !DILocation(line: 506, column: 5, scope: !17024)
!17028 = !DILocation(line: 508, column: 9, scope: !17029)
!17029 = distinct !DILexicalBlock(scope: !17024, file: !3, line: 508, column: 9)
!17030 = !DILocation(line: 508, column: 9, scope: !17024)
!17031 = !DILocation(line: 508, column: 37, scope: !17029)
!17032 = !DILocation(line: 508, column: 45, scope: !17029)
!17033 = !DILocation(line: 508, column: 36, scope: !17029)
!17034 = !DILocation(line: 508, column: 17, scope: !17029)
!17035 = !DILocation(line: 508, column: 25, scope: !17029)
!17036 = !DILocation(line: 508, column: 34, scope: !17029)
!17037 = !DILocation(line: 509, column: 4, scope: !17024)
!17038 = !DILocation(line: 511, column: 9, scope: !17001)
!17039 = !DILocation(line: 512, column: 9, scope: !17001)
!17040 = distinct !{!17040, !16998, !17041}
!17041 = !DILocation(line: 513, column: 3, scope: !16977)
!17042 = !DILocation(line: 514, column: 2, scope: !16977)
!17043 = !DILocalVariable(name: "bp1", scope: !17044, file: !3, line: 516, type: !3093)
!17044 = distinct !DILexicalBlock(scope: !16973, file: !3, line: 515, column: 7)
!17045 = !DILocation(line: 516, column: 11, scope: !17044)
!17046 = !DILocalVariable(name: "bp2", scope: !17044, file: !3, line: 516, type: !3093)
!17047 = !DILocation(line: 516, column: 17, scope: !17044)
!17048 = !DILocation(line: 518, column: 7, scope: !17049)
!17049 = distinct !DILexicalBlock(scope: !17044, file: !3, line: 518, column: 7)
!17050 = !DILocation(line: 518, column: 11, scope: !17049)
!17051 = !DILocation(line: 518, column: 17, scope: !17049)
!17052 = !DILocation(line: 518, column: 7, scope: !17044)
!17053 = !DILocation(line: 519, column: 8, scope: !17054)
!17054 = distinct !DILexicalBlock(scope: !17049, file: !3, line: 518, column: 23)
!17055 = !DILocation(line: 519, column: 12, scope: !17054)
!17056 = !DILocation(line: 519, column: 6, scope: !17054)
!17057 = !DILocation(line: 520, column: 10, scope: !17054)
!17058 = !DILocation(line: 520, column: 14, scope: !17054)
!17059 = !DILocation(line: 520, column: 8, scope: !17054)
!17060 = !DILocation(line: 521, column: 10, scope: !17054)
!17061 = !DILocation(line: 521, column: 17, scope: !17054)
!17062 = !DILocation(line: 521, column: 19, scope: !17054)
!17063 = !DILocation(line: 521, column: 14, scope: !17054)
!17064 = !DILocation(line: 521, column: 8, scope: !17054)
!17065 = !DILocation(line: 522, column: 6, scope: !17054)
!17066 = !DILocation(line: 523, column: 4, scope: !17054)
!17067 = !DILocation(line: 523, column: 11, scope: !17054)
!17068 = !DILocation(line: 523, column: 18, scope: !17054)
!17069 = !DILocation(line: 523, column: 15, scope: !17054)
!17070 = !DILocation(line: 523, column: 22, scope: !17054)
!17071 = !DILocation(line: 523, column: 25, scope: !17054)
!17072 = !DILocation(line: 523, column: 27, scope: !17054)
!17073 = !DILocation(line: 0, scope: !17054)
!17074 = !DILocation(line: 524, column: 28, scope: !17075)
!17075 = distinct !DILexicalBlock(scope: !17054, file: !3, line: 523, column: 32)
!17076 = !DILocation(line: 524, column: 38, scope: !17075)
!17077 = !DILocation(line: 524, column: 14, scope: !17075)
!17078 = !DILocation(line: 524, column: 12, scope: !17075)
!17079 = !DILocation(line: 525, column: 28, scope: !17075)
!17080 = !DILocation(line: 525, column: 38, scope: !17075)
!17081 = !DILocation(line: 525, column: 14, scope: !17075)
!17082 = !DILocation(line: 525, column: 12, scope: !17075)
!17083 = !DILocation(line: 527, column: 9, scope: !17084)
!17084 = distinct !DILexicalBlock(scope: !17075, file: !3, line: 527, column: 9)
!17085 = !DILocation(line: 527, column: 9, scope: !17075)
!17086 = !DILocation(line: 527, column: 37, scope: !17084)
!17087 = !DILocation(line: 527, column: 45, scope: !17084)
!17088 = !DILocation(line: 527, column: 36, scope: !17084)
!17089 = !DILocation(line: 527, column: 17, scope: !17084)
!17090 = !DILocation(line: 527, column: 25, scope: !17084)
!17091 = !DILocation(line: 527, column: 34, scope: !17084)
!17092 = !DILocation(line: 529, column: 9, scope: !17093)
!17093 = distinct !DILexicalBlock(scope: !17075, file: !3, line: 529, column: 9)
!17094 = !DILocation(line: 529, column: 16, scope: !17093)
!17095 = !DILocation(line: 529, column: 13, scope: !17093)
!17096 = !DILocation(line: 529, column: 9, scope: !17075)
!17097 = !DILocation(line: 530, column: 10, scope: !17098)
!17098 = distinct !DILexicalBlock(scope: !17099, file: !3, line: 530, column: 10)
!17099 = distinct !DILexicalBlock(scope: !17093, file: !3, line: 529, column: 21)
!17100 = !DILocation(line: 530, column: 10, scope: !17099)
!17101 = !DILocation(line: 530, column: 38, scope: !17098)
!17102 = !DILocation(line: 530, column: 46, scope: !17098)
!17103 = !DILocation(line: 530, column: 37, scope: !17098)
!17104 = !DILocation(line: 530, column: 18, scope: !17098)
!17105 = !DILocation(line: 530, column: 26, scope: !17098)
!17106 = !DILocation(line: 530, column: 35, scope: !17098)
!17107 = !DILocation(line: 532, column: 20, scope: !17099)
!17108 = !DILocation(line: 532, column: 30, scope: !17099)
!17109 = !DILocation(line: 532, column: 35, scope: !17099)
!17110 = !DILocation(line: 532, column: 6, scope: !17099)
!17111 = !DILocation(line: 533, column: 5, scope: !17099)
!17112 = !DILocation(line: 535, column: 6, scope: !17075)
!17113 = !DILocation(line: 536, column: 8, scope: !17075)
!17114 = !DILocation(line: 537, column: 8, scope: !17075)
!17115 = distinct !{!17115, !17066, !17116}
!17116 = !DILocation(line: 538, column: 4, scope: !17054)
!17117 = !DILocation(line: 539, column: 3, scope: !17054)
!17118 = !DILocalVariable(name: "b", scope: !17119, file: !3, line: 541, type: !22)
!17119 = distinct !DILexicalBlock(scope: !17049, file: !3, line: 540, column: 8)
!17120 = !DILocation(line: 541, column: 8, scope: !17119)
!17121 = !DILocation(line: 543, column: 11, scope: !17122)
!17122 = distinct !DILexicalBlock(scope: !17119, file: !3, line: 543, column: 4)
!17123 = !DILocation(line: 543, column: 9, scope: !17122)
!17124 = !DILocation(line: 543, column: 16, scope: !17125)
!17125 = distinct !DILexicalBlock(scope: !17122, file: !3, line: 543, column: 4)
!17126 = !DILocation(line: 543, column: 20, scope: !17125)
!17127 = !DILocation(line: 543, column: 24, scope: !17125)
!17128 = !DILocation(line: 543, column: 18, scope: !17125)
!17129 = !DILocation(line: 543, column: 4, scope: !17122)
!17130 = !DILocation(line: 545, column: 12, scope: !17131)
!17131 = distinct !DILexicalBlock(scope: !17125, file: !3, line: 543, column: 36)
!17132 = !DILocation(line: 545, column: 16, scope: !17131)
!17133 = !DILocation(line: 545, column: 19, scope: !17131)
!17134 = !DILocation(line: 545, column: 23, scope: !17131)
!17135 = !DILocation(line: 545, column: 27, scope: !17131)
!17136 = !DILocation(line: 545, column: 21, scope: !17131)
!17137 = !DILocation(line: 545, column: 9, scope: !17131)
!17138 = !DILocation(line: 546, column: 9, scope: !17131)
!17139 = !DILocation(line: 546, column: 13, scope: !17131)
!17140 = !DILocation(line: 546, column: 7, scope: !17131)
!17141 = !DILocation(line: 547, column: 11, scope: !17131)
!17142 = !DILocation(line: 547, column: 18, scope: !17131)
!17143 = !DILocation(line: 547, column: 20, scope: !17131)
!17144 = !DILocation(line: 547, column: 15, scope: !17131)
!17145 = !DILocation(line: 547, column: 9, scope: !17131)
!17146 = !DILocation(line: 548, column: 7, scope: !17131)
!17147 = !DILocation(line: 550, column: 5, scope: !17131)
!17148 = !DILocation(line: 550, column: 12, scope: !17131)
!17149 = !DILocation(line: 550, column: 19, scope: !17131)
!17150 = !DILocation(line: 550, column: 16, scope: !17131)
!17151 = !DILocation(line: 550, column: 23, scope: !17131)
!17152 = !DILocation(line: 550, column: 26, scope: !17131)
!17153 = !DILocation(line: 550, column: 28, scope: !17131)
!17154 = !DILocation(line: 0, scope: !17131)
!17155 = !DILocation(line: 551, column: 29, scope: !17156)
!17156 = distinct !DILexicalBlock(scope: !17131, file: !3, line: 550, column: 33)
!17157 = !DILocation(line: 551, column: 39, scope: !17156)
!17158 = !DILocation(line: 551, column: 15, scope: !17156)
!17159 = !DILocation(line: 551, column: 13, scope: !17156)
!17160 = !DILocation(line: 552, column: 29, scope: !17156)
!17161 = !DILocation(line: 552, column: 39, scope: !17156)
!17162 = !DILocation(line: 552, column: 15, scope: !17156)
!17163 = !DILocation(line: 552, column: 13, scope: !17156)
!17164 = !DILocation(line: 554, column: 10, scope: !17165)
!17165 = distinct !DILexicalBlock(scope: !17156, file: !3, line: 554, column: 10)
!17166 = !DILocation(line: 554, column: 10, scope: !17156)
!17167 = !DILocation(line: 554, column: 38, scope: !17165)
!17168 = !DILocation(line: 554, column: 46, scope: !17165)
!17169 = !DILocation(line: 554, column: 37, scope: !17165)
!17170 = !DILocation(line: 554, column: 18, scope: !17165)
!17171 = !DILocation(line: 554, column: 26, scope: !17165)
!17172 = !DILocation(line: 554, column: 35, scope: !17165)
!17173 = !DILocation(line: 556, column: 10, scope: !17174)
!17174 = distinct !DILexicalBlock(scope: !17156, file: !3, line: 556, column: 10)
!17175 = !DILocation(line: 556, column: 17, scope: !17174)
!17176 = !DILocation(line: 556, column: 14, scope: !17174)
!17177 = !DILocation(line: 556, column: 10, scope: !17156)
!17178 = !DILocation(line: 557, column: 11, scope: !17179)
!17179 = distinct !DILexicalBlock(scope: !17180, file: !3, line: 557, column: 11)
!17180 = distinct !DILexicalBlock(scope: !17174, file: !3, line: 556, column: 22)
!17181 = !DILocation(line: 557, column: 11, scope: !17180)
!17182 = !DILocation(line: 557, column: 39, scope: !17179)
!17183 = !DILocation(line: 557, column: 47, scope: !17179)
!17184 = !DILocation(line: 557, column: 38, scope: !17179)
!17185 = !DILocation(line: 557, column: 19, scope: !17179)
!17186 = !DILocation(line: 557, column: 27, scope: !17179)
!17187 = !DILocation(line: 557, column: 36, scope: !17179)
!17188 = !DILocation(line: 559, column: 21, scope: !17180)
!17189 = !DILocation(line: 559, column: 31, scope: !17180)
!17190 = !DILocation(line: 559, column: 36, scope: !17180)
!17191 = !DILocation(line: 559, column: 7, scope: !17180)
!17192 = !DILocation(line: 560, column: 6, scope: !17180)
!17193 = !DILocation(line: 562, column: 7, scope: !17156)
!17194 = !DILocation(line: 563, column: 9, scope: !17156)
!17195 = !DILocation(line: 564, column: 9, scope: !17156)
!17196 = distinct !{!17196, !17147, !17197}
!17197 = !DILocation(line: 565, column: 5, scope: !17131)
!17198 = !DILocation(line: 566, column: 4, scope: !17131)
!17199 = !DILocation(line: 543, column: 32, scope: !17125)
!17200 = !DILocation(line: 543, column: 4, scope: !17125)
!17201 = distinct !{!17201, !17129, !17202}
!17202 = !DILocation(line: 566, column: 4, scope: !17122)
!17203 = !DILocation(line: 570, column: 1, scope: !16961)
!17204 = distinct !DISubprogram(name: "switch_keys_direction", scope: !3, file: !3, line: 572, type: !16934, scopeLine: 573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!17205 = !DILocalVariable(name: "cu", arg: 1, scope: !17204, file: !3, line: 572, type: !2953)
!17206 = !DILocation(line: 572, column: 42, scope: !17204)
!17207 = !DILocalVariable(name: "actnu", arg: 2, scope: !17204, file: !3, line: 572, type: !3163)
!17208 = !DILocation(line: 572, column: 52, scope: !17204)
!17209 = !DILocalVariable(name: "currkey", scope: !17204, file: !3, line: 574, type: !2982)
!17210 = !DILocation(line: 574, column: 12, scope: !17204)
!17211 = !DILocalVariable(name: "editnurb", scope: !17204, file: !3, line: 575, type: !2962)
!17212 = !DILocation(line: 575, column: 12, scope: !17204)
!17213 = !DILocation(line: 575, column: 23, scope: !17204)
!17214 = !DILocation(line: 575, column: 27, scope: !17204)
!17215 = !DILocalVariable(name: "nubase", scope: !17204, file: !3, line: 576, type: !486)
!17216 = !DILocation(line: 576, column: 12, scope: !17204)
!17217 = !DILocation(line: 576, column: 22, scope: !17204)
!17218 = !DILocation(line: 576, column: 32, scope: !17204)
!17219 = !DILocalVariable(name: "nu", scope: !17204, file: !3, line: 577, type: !3163)
!17220 = !DILocation(line: 577, column: 8, scope: !17204)
!17221 = !DILocalVariable(name: "fp", scope: !17204, file: !3, line: 578, type: !3154)
!17222 = !DILocation(line: 578, column: 9, scope: !17204)
!17223 = !DILocalVariable(name: "a", scope: !17204, file: !3, line: 579, type: !22)
!17224 = !DILocation(line: 579, column: 6, scope: !17204)
!17225 = !DILocation(line: 581, column: 12, scope: !17204)
!17226 = !DILocation(line: 581, column: 16, scope: !17204)
!17227 = !DILocation(line: 581, column: 21, scope: !17204)
!17228 = !DILocation(line: 581, column: 27, scope: !17204)
!17229 = !DILocation(line: 581, column: 10, scope: !17204)
!17230 = !DILocation(line: 582, column: 2, scope: !17204)
!17231 = !DILocation(line: 582, column: 9, scope: !17204)
!17232 = !DILocation(line: 583, column: 8, scope: !17233)
!17233 = distinct !DILexicalBlock(scope: !17204, file: !3, line: 582, column: 18)
!17234 = !DILocation(line: 583, column: 17, scope: !17233)
!17235 = !DILocation(line: 583, column: 6, scope: !17233)
!17236 = !DILocation(line: 585, column: 8, scope: !17233)
!17237 = !DILocation(line: 585, column: 16, scope: !17233)
!17238 = !DILocation(line: 585, column: 6, scope: !17233)
!17239 = !DILocation(line: 586, column: 3, scope: !17233)
!17240 = !DILocation(line: 586, column: 10, scope: !17233)
!17241 = !DILocation(line: 587, column: 8, scope: !17242)
!17242 = distinct !DILexicalBlock(scope: !17243, file: !3, line: 587, column: 8)
!17243 = distinct !DILexicalBlock(scope: !17233, file: !3, line: 586, column: 14)
!17244 = !DILocation(line: 587, column: 12, scope: !17242)
!17245 = !DILocation(line: 587, column: 8, scope: !17243)
!17246 = !DILocalVariable(name: "bezt", scope: !17247, file: !3, line: 588, type: !3104)
!17247 = distinct !DILexicalBlock(scope: !17242, file: !3, line: 587, column: 18)
!17248 = !DILocation(line: 588, column: 16, scope: !17247)
!17249 = !DILocation(line: 588, column: 23, scope: !17247)
!17250 = !DILocation(line: 588, column: 27, scope: !17247)
!17251 = !DILocation(line: 589, column: 9, scope: !17247)
!17252 = !DILocation(line: 589, column: 13, scope: !17247)
!17253 = !DILocation(line: 589, column: 7, scope: !17247)
!17254 = !DILocation(line: 590, column: 9, scope: !17255)
!17255 = distinct !DILexicalBlock(scope: !17247, file: !3, line: 590, column: 9)
!17256 = !DILocation(line: 590, column: 15, scope: !17255)
!17257 = !DILocation(line: 590, column: 12, scope: !17255)
!17258 = !DILocation(line: 590, column: 9, scope: !17247)
!17259 = !DILocation(line: 591, column: 6, scope: !17260)
!17260 = distinct !DILexicalBlock(scope: !17255, file: !3, line: 590, column: 22)
!17261 = !DILocation(line: 591, column: 14, scope: !17260)
!17262 = !DILocation(line: 592, column: 32, scope: !17263)
!17263 = distinct !DILexicalBlock(scope: !17264, file: !3, line: 592, column: 11)
!17264 = distinct !DILexicalBlock(scope: !17260, file: !3, line: 591, column: 18)
!17265 = !DILocation(line: 592, column: 42, scope: !17263)
!17266 = !DILocation(line: 592, column: 11, scope: !17263)
!17267 = !DILocation(line: 592, column: 11, scope: !17264)
!17268 = !DILocation(line: 593, column: 19, scope: !17269)
!17269 = distinct !DILexicalBlock(scope: !17263, file: !3, line: 592, column: 49)
!17270 = !DILocation(line: 593, column: 23, scope: !17269)
!17271 = !DILocation(line: 593, column: 26, scope: !17269)
!17272 = !DILocation(line: 593, column: 8, scope: !17269)
!17273 = !DILocation(line: 594, column: 23, scope: !17269)
!17274 = !DILocation(line: 594, column: 26, scope: !17269)
!17275 = !DILocation(line: 594, column: 21, scope: !17269)
!17276 = !DILocation(line: 594, column: 20, scope: !17269)
!17277 = !DILocation(line: 594, column: 10, scope: !17269)
!17278 = !DILocation(line: 594, column: 13, scope: !17269)
!17279 = !DILocation(line: 594, column: 18, scope: !17269)
!17280 = !DILocation(line: 595, column: 11, scope: !17269)
!17281 = !DILocation(line: 596, column: 7, scope: !17269)
!17282 = !DILocation(line: 597, column: 11, scope: !17264)
!17283 = distinct !{!17283, !17259, !17284}
!17284 = !DILocation(line: 598, column: 6, scope: !17260)
!17285 = !DILocation(line: 599, column: 5, scope: !17260)
!17286 = !DILocation(line: 601, column: 12, scope: !17287)
!17287 = distinct !DILexicalBlock(scope: !17255, file: !3, line: 600, column: 10)
!17288 = !DILocation(line: 601, column: 14, scope: !17287)
!17289 = !DILocation(line: 601, column: 9, scope: !17287)
!17290 = !DILocation(line: 603, column: 4, scope: !17247)
!17291 = !DILocalVariable(name: "bp", scope: !17292, file: !3, line: 605, type: !3093)
!17292 = distinct !DILexicalBlock(scope: !17242, file: !3, line: 604, column: 9)
!17293 = !DILocation(line: 605, column: 13, scope: !17292)
!17294 = !DILocation(line: 605, column: 18, scope: !17292)
!17295 = !DILocation(line: 605, column: 22, scope: !17292)
!17296 = !DILocation(line: 606, column: 9, scope: !17292)
!17297 = !DILocation(line: 606, column: 13, scope: !17292)
!17298 = !DILocation(line: 606, column: 21, scope: !17292)
!17299 = !DILocation(line: 606, column: 25, scope: !17292)
!17300 = !DILocation(line: 606, column: 19, scope: !17292)
!17301 = !DILocation(line: 606, column: 7, scope: !17292)
!17302 = !DILocation(line: 607, column: 9, scope: !17303)
!17303 = distinct !DILexicalBlock(scope: !17292, file: !3, line: 607, column: 9)
!17304 = !DILocation(line: 607, column: 15, scope: !17303)
!17305 = !DILocation(line: 607, column: 12, scope: !17303)
!17306 = !DILocation(line: 607, column: 9, scope: !17292)
!17307 = !DILocation(line: 608, column: 6, scope: !17308)
!17308 = distinct !DILexicalBlock(scope: !17303, file: !3, line: 607, column: 22)
!17309 = !DILocation(line: 608, column: 14, scope: !17308)
!17310 = !DILocation(line: 609, column: 30, scope: !17311)
!17311 = distinct !DILexicalBlock(scope: !17312, file: !3, line: 609, column: 11)
!17312 = distinct !DILexicalBlock(scope: !17308, file: !3, line: 608, column: 18)
!17313 = !DILocation(line: 609, column: 40, scope: !17311)
!17314 = !DILocation(line: 609, column: 11, scope: !17311)
!17315 = !DILocation(line: 609, column: 11, scope: !17312)
!17316 = !DILocation(line: 610, column: 23, scope: !17317)
!17317 = distinct !DILexicalBlock(scope: !17311, file: !3, line: 609, column: 45)
!17318 = !DILocation(line: 610, column: 26, scope: !17317)
!17319 = !DILocation(line: 610, column: 21, scope: !17317)
!17320 = !DILocation(line: 610, column: 20, scope: !17317)
!17321 = !DILocation(line: 610, column: 10, scope: !17317)
!17322 = !DILocation(line: 610, column: 13, scope: !17317)
!17323 = !DILocation(line: 610, column: 18, scope: !17317)
!17324 = !DILocation(line: 611, column: 11, scope: !17317)
!17325 = !DILocation(line: 612, column: 7, scope: !17317)
!17326 = !DILocation(line: 613, column: 9, scope: !17312)
!17327 = distinct !{!17327, !17307, !17328}
!17328 = !DILocation(line: 614, column: 6, scope: !17308)
!17329 = !DILocation(line: 615, column: 5, scope: !17308)
!17330 = !DILocation(line: 617, column: 12, scope: !17331)
!17331 = distinct !DILexicalBlock(scope: !17303, file: !3, line: 616, column: 10)
!17332 = !DILocation(line: 617, column: 14, scope: !17331)
!17333 = !DILocation(line: 617, column: 9, scope: !17331)
!17334 = !DILocation(line: 621, column: 9, scope: !17243)
!17335 = !DILocation(line: 621, column: 13, scope: !17243)
!17336 = !DILocation(line: 621, column: 7, scope: !17243)
!17337 = distinct !{!17337, !17239, !17338}
!17338 = !DILocation(line: 622, column: 3, scope: !17233)
!17339 = !DILocation(line: 624, column: 13, scope: !17233)
!17340 = !DILocation(line: 624, column: 22, scope: !17233)
!17341 = !DILocation(line: 624, column: 11, scope: !17233)
!17342 = distinct !{!17342, !17230, !17343}
!17343 = !DILocation(line: 625, column: 2, scope: !17204)
!17344 = !DILocation(line: 626, column: 1, scope: !17204)
!17345 = distinct !DISubprogram(name: "keyIndex_swap", scope: !3, file: !3, line: 473, type: !17346, scopeLine: 474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!17346 = !DISubroutineType(types: !17347)
!17347 = !{null, !2962, !56, !56}
!17348 = !DILocalVariable(name: "editnurb", arg: 1, scope: !17345, file: !3, line: 473, type: !2962)
!17349 = !DILocation(line: 473, column: 37, scope: !17345)
!17350 = !DILocalVariable(name: "a", arg: 2, scope: !17345, file: !3, line: 473, type: !56)
!17351 = !DILocation(line: 473, column: 53, scope: !17345)
!17352 = !DILocalVariable(name: "b", arg: 3, scope: !17345, file: !3, line: 473, type: !56)
!17353 = !DILocation(line: 473, column: 62, scope: !17345)
!17354 = !DILocalVariable(name: "index1", scope: !17345, file: !3, line: 475, type: !3503)
!17355 = !DILocation(line: 475, column: 14, scope: !17345)
!17356 = !DILocation(line: 475, column: 37, scope: !17345)
!17357 = !DILocation(line: 475, column: 47, scope: !17345)
!17358 = !DILocation(line: 475, column: 23, scope: !17345)
!17359 = !DILocalVariable(name: "index2", scope: !17345, file: !3, line: 476, type: !3503)
!17360 = !DILocation(line: 476, column: 14, scope: !17345)
!17361 = !DILocation(line: 476, column: 37, scope: !17345)
!17362 = !DILocation(line: 476, column: 47, scope: !17345)
!17363 = !DILocation(line: 476, column: 23, scope: !17345)
!17364 = !DILocation(line: 478, column: 6, scope: !17365)
!17365 = distinct !DILexicalBlock(scope: !17345, file: !3, line: 478, column: 6)
!17366 = !DILocation(line: 478, column: 6, scope: !17345)
!17367 = !DILocation(line: 478, column: 31, scope: !17365)
!17368 = !DILocation(line: 478, column: 41, scope: !17365)
!17369 = !DILocation(line: 478, column: 51, scope: !17365)
!17370 = !DILocation(line: 478, column: 54, scope: !17365)
!17371 = !DILocation(line: 478, column: 14, scope: !17365)
!17372 = !DILocation(line: 479, column: 6, scope: !17373)
!17373 = distinct !DILexicalBlock(scope: !17345, file: !3, line: 479, column: 6)
!17374 = !DILocation(line: 479, column: 6, scope: !17345)
!17375 = !DILocation(line: 479, column: 31, scope: !17373)
!17376 = !DILocation(line: 479, column: 41, scope: !17373)
!17377 = !DILocation(line: 479, column: 51, scope: !17373)
!17378 = !DILocation(line: 479, column: 54, scope: !17373)
!17379 = !DILocation(line: 479, column: 14, scope: !17373)
!17380 = !DILocation(line: 480, column: 1, scope: !17345)
!17381 = distinct !DISubprogram(name: "popCVKeyIndex", scope: !3, file: !3, line: 332, type: !13296, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!17382 = !DILocalVariable(name: "editnurb", arg: 1, scope: !17381, file: !3, line: 332, type: !2962)
!17383 = !DILocation(line: 332, column: 44, scope: !17381)
!17384 = !DILocalVariable(name: "cv", arg: 2, scope: !17381, file: !3, line: 332, type: !56)
!17385 = !DILocation(line: 332, column: 60, scope: !17381)
!17386 = !DILocation(line: 334, column: 26, scope: !17381)
!17387 = !DILocation(line: 334, column: 36, scope: !17381)
!17388 = !DILocation(line: 334, column: 46, scope: !17381)
!17389 = !DILocation(line: 334, column: 9, scope: !17381)
!17390 = !DILocation(line: 334, column: 2, scope: !17381)
!17391 = distinct !DISubprogram(name: "swap_v3_v3", scope: !5794, file: !5794, line: 223, type: !17392, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!17392 = !DISubroutineType(types: !17393)
!17393 = !{null, !3154, !3154}
!17394 = !DILocalVariable(name: "a", arg: 1, scope: !17391, file: !5794, line: 223, type: !3154)
!17395 = !DILocation(line: 223, column: 31, scope: !17391)
!17396 = !DILocalVariable(name: "b", arg: 2, scope: !17391, file: !5794, line: 223, type: !3154)
!17397 = !DILocation(line: 223, column: 43, scope: !17391)
!17398 = !DILocalVariable(name: "sw_ap", scope: !17399, file: !5794, line: 225, type: !204)
!17399 = distinct !DILexicalBlock(scope: !17391, file: !5794, line: 225, column: 2)
!17400 = !DILocation(line: 225, column: 2, scope: !17399)
!17401 = !DILocalVariable(name: "sw_ap", scope: !17402, file: !5794, line: 226, type: !204)
!17402 = distinct !DILexicalBlock(scope: !17391, file: !5794, line: 226, column: 2)
!17403 = !DILocation(line: 226, column: 2, scope: !17402)
!17404 = !DILocalVariable(name: "sw_ap", scope: !17405, file: !5794, line: 227, type: !204)
!17405 = distinct !DILexicalBlock(scope: !17391, file: !5794, line: 227, column: 2)
!17406 = !DILocation(line: 227, column: 2, scope: !17405)
!17407 = !DILocation(line: 228, column: 1, scope: !17391)
!17408 = distinct !DISubprogram(name: "mod_i", scope: !17409, file: !17409, line: 178, type: !17410, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!17409 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!17410 = !DISubroutineType(types: !17411)
!17411 = !{!22, !22, !22}
!17412 = !DILocalVariable(name: "i", arg: 1, scope: !17408, file: !17409, line: 178, type: !22)
!17413 = !DILocation(line: 178, column: 23, scope: !17408)
!17414 = !DILocalVariable(name: "n", arg: 2, scope: !17408, file: !17409, line: 178, type: !22)
!17415 = !DILocation(line: 178, column: 30, scope: !17408)
!17416 = !DILocation(line: 180, column: 10, scope: !17408)
!17417 = !DILocation(line: 180, column: 14, scope: !17408)
!17418 = !DILocation(line: 180, column: 12, scope: !17408)
!17419 = !DILocation(line: 180, column: 18, scope: !17408)
!17420 = !DILocation(line: 180, column: 16, scope: !17408)
!17421 = !DILocation(line: 180, column: 23, scope: !17408)
!17422 = !DILocation(line: 180, column: 21, scope: !17408)
!17423 = !DILocation(line: 180, column: 2, scope: !17408)
!17424 = distinct !DISubprogram(name: "smooth_single_bezt", scope: !3, file: !3, line: 2546, type: !17425, scopeLine: 2550, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!17425 = !DISubroutineType(types: !17426)
!17426 = !{null, !3104, !6889, !6889, !204}
!17427 = !DILocalVariable(name: "bezt", arg: 1, scope: !17424, file: !3, line: 2547, type: !3104)
!17428 = !DILocation(line: 2547, column: 20, scope: !17424)
!17429 = !DILocalVariable(name: "bezt_orig_prev", arg: 2, scope: !17424, file: !3, line: 2548, type: !6889)
!17430 = !DILocation(line: 2548, column: 26, scope: !17424)
!17431 = !DILocalVariable(name: "bezt_orig_next", arg: 3, scope: !17424, file: !3, line: 2548, type: !6889)
!17432 = !DILocation(line: 2548, column: 59, scope: !17424)
!17433 = !DILocalVariable(name: "factor", arg: 4, scope: !17424, file: !3, line: 2549, type: !204)
!17434 = !DILocation(line: 2549, column: 15, scope: !17424)
!17435 = !DILocalVariable(name: "i", scope: !17424, file: !3, line: 2551, type: !22)
!17436 = !DILocation(line: 2551, column: 6, scope: !17424)
!17437 = !DILocation(line: 2555, column: 9, scope: !17438)
!17438 = distinct !DILexicalBlock(scope: !17424, file: !3, line: 2555, column: 2)
!17439 = !DILocation(line: 2555, column: 7, scope: !17438)
!17440 = !DILocation(line: 2555, column: 14, scope: !17441)
!17441 = distinct !DILexicalBlock(scope: !17438, file: !3, line: 2555, column: 2)
!17442 = !DILocation(line: 2555, column: 16, scope: !17441)
!17443 = !DILocation(line: 2555, column: 2, scope: !17438)
!17444 = !DILocalVariable(name: "val_old", scope: !17445, file: !3, line: 2556, type: !204)
!17445 = distinct !DILexicalBlock(scope: !17441, file: !3, line: 2555, column: 26)
!17446 = !DILocation(line: 2556, column: 9, scope: !17445)
!17447 = !DILocalVariable(name: "val_new", scope: !17445, file: !3, line: 2556, type: !204)
!17448 = !DILocation(line: 2556, column: 18, scope: !17445)
!17449 = !DILocalVariable(name: "offset", scope: !17445, file: !3, line: 2556, type: !204)
!17450 = !DILocation(line: 2556, column: 27, scope: !17445)
!17451 = !DILocation(line: 2559, column: 13, scope: !17445)
!17452 = !DILocation(line: 2559, column: 19, scope: !17445)
!17453 = !DILocation(line: 2559, column: 26, scope: !17445)
!17454 = !DILocation(line: 2559, column: 11, scope: !17445)
!17455 = !DILocation(line: 2562, column: 14, scope: !17445)
!17456 = !DILocation(line: 2562, column: 30, scope: !17445)
!17457 = !DILocation(line: 2562, column: 37, scope: !17445)
!17458 = !DILocation(line: 2562, column: 40, scope: !17445)
!17459 = !DILocation(line: 2562, column: 51, scope: !17445)
!17460 = !DILocation(line: 2562, column: 67, scope: !17445)
!17461 = !DILocation(line: 2562, column: 74, scope: !17445)
!17462 = !DILocation(line: 2562, column: 77, scope: !17445)
!17463 = !DILocation(line: 2562, column: 48, scope: !17445)
!17464 = !DILocation(line: 2562, column: 11, scope: !17445)
!17465 = !DILocation(line: 2563, column: 13, scope: !17445)
!17466 = !DILocation(line: 2563, column: 31, scope: !17445)
!17467 = !DILocation(line: 2563, column: 29, scope: !17445)
!17468 = !DILocation(line: 2563, column: 21, scope: !17445)
!17469 = !DILocation(line: 2563, column: 43, scope: !17445)
!17470 = !DILocation(line: 2563, column: 53, scope: !17445)
!17471 = !DILocation(line: 2563, column: 51, scope: !17445)
!17472 = !DILocation(line: 2563, column: 40, scope: !17445)
!17473 = !DILocation(line: 2563, column: 63, scope: !17445)
!17474 = !DILocation(line: 2563, column: 61, scope: !17445)
!17475 = !DILocation(line: 2563, column: 10, scope: !17445)
!17476 = !DILocation(line: 2566, column: 22, scope: !17445)
!17477 = !DILocation(line: 2566, column: 3, scope: !17445)
!17478 = !DILocation(line: 2566, column: 9, scope: !17445)
!17479 = !DILocation(line: 2566, column: 16, scope: !17445)
!17480 = !DILocation(line: 2566, column: 19, scope: !17445)
!17481 = !DILocation(line: 2567, column: 22, scope: !17445)
!17482 = !DILocation(line: 2567, column: 3, scope: !17445)
!17483 = !DILocation(line: 2567, column: 9, scope: !17445)
!17484 = !DILocation(line: 2567, column: 16, scope: !17445)
!17485 = !DILocation(line: 2567, column: 19, scope: !17445)
!17486 = !DILocation(line: 2568, column: 22, scope: !17445)
!17487 = !DILocation(line: 2568, column: 3, scope: !17445)
!17488 = !DILocation(line: 2568, column: 9, scope: !17445)
!17489 = !DILocation(line: 2568, column: 16, scope: !17445)
!17490 = !DILocation(line: 2568, column: 19, scope: !17445)
!17491 = !DILocation(line: 2569, column: 2, scope: !17445)
!17492 = !DILocation(line: 2555, column: 22, scope: !17441)
!17493 = !DILocation(line: 2555, column: 2, scope: !17441)
!17494 = distinct !{!17494, !17443, !17495}
!17495 = !DILocation(line: 2569, column: 2, scope: !17438)
!17496 = !DILocation(line: 2570, column: 1, scope: !17424)
!17497 = distinct !DISubprogram(name: "smooth_single_bp", scope: !3, file: !3, line: 2575, type: !17498, scopeLine: 2579, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!17498 = !DISubroutineType(types: !17499)
!17499 = !{null, !3093, !6979, !6979, !204}
!17500 = !DILocalVariable(name: "bp", arg: 1, scope: !17497, file: !3, line: 2576, type: !3093)
!17501 = !DILocation(line: 2576, column: 17, scope: !17497)
!17502 = !DILocalVariable(name: "bp_orig_prev", arg: 2, scope: !17497, file: !3, line: 2577, type: !6979)
!17503 = !DILocation(line: 2577, column: 23, scope: !17497)
!17504 = !DILocalVariable(name: "bp_orig_next", arg: 3, scope: !17497, file: !3, line: 2577, type: !6979)
!17505 = !DILocation(line: 2577, column: 51, scope: !17497)
!17506 = !DILocalVariable(name: "factor", arg: 4, scope: !17497, file: !3, line: 2578, type: !204)
!17507 = !DILocation(line: 2578, column: 15, scope: !17497)
!17508 = !DILocalVariable(name: "i", scope: !17497, file: !3, line: 2580, type: !22)
!17509 = !DILocation(line: 2580, column: 6, scope: !17497)
!17510 = !DILocation(line: 2584, column: 9, scope: !17511)
!17511 = distinct !DILexicalBlock(scope: !17497, file: !3, line: 2584, column: 2)
!17512 = !DILocation(line: 2584, column: 7, scope: !17511)
!17513 = !DILocation(line: 2584, column: 14, scope: !17514)
!17514 = distinct !DILexicalBlock(scope: !17511, file: !3, line: 2584, column: 2)
!17515 = !DILocation(line: 2584, column: 16, scope: !17514)
!17516 = !DILocation(line: 2584, column: 2, scope: !17511)
!17517 = !DILocalVariable(name: "val_old", scope: !17518, file: !3, line: 2585, type: !204)
!17518 = distinct !DILexicalBlock(scope: !17514, file: !3, line: 2584, column: 26)
!17519 = !DILocation(line: 2585, column: 9, scope: !17518)
!17520 = !DILocalVariable(name: "val_new", scope: !17518, file: !3, line: 2585, type: !204)
!17521 = !DILocation(line: 2585, column: 18, scope: !17518)
!17522 = !DILocalVariable(name: "offset", scope: !17518, file: !3, line: 2585, type: !204)
!17523 = !DILocation(line: 2585, column: 27, scope: !17518)
!17524 = !DILocation(line: 2587, column: 13, scope: !17518)
!17525 = !DILocation(line: 2587, column: 17, scope: !17518)
!17526 = !DILocation(line: 2587, column: 21, scope: !17518)
!17527 = !DILocation(line: 2587, column: 11, scope: !17518)
!17528 = !DILocation(line: 2588, column: 14, scope: !17518)
!17529 = !DILocation(line: 2588, column: 28, scope: !17518)
!17530 = !DILocation(line: 2588, column: 32, scope: !17518)
!17531 = !DILocation(line: 2588, column: 35, scope: !17518)
!17532 = !DILocation(line: 2588, column: 46, scope: !17518)
!17533 = !DILocation(line: 2588, column: 60, scope: !17518)
!17534 = !DILocation(line: 2588, column: 64, scope: !17518)
!17535 = !DILocation(line: 2588, column: 67, scope: !17518)
!17536 = !DILocation(line: 2588, column: 43, scope: !17518)
!17537 = !DILocation(line: 2588, column: 11, scope: !17518)
!17538 = !DILocation(line: 2589, column: 13, scope: !17518)
!17539 = !DILocation(line: 2589, column: 31, scope: !17518)
!17540 = !DILocation(line: 2589, column: 29, scope: !17518)
!17541 = !DILocation(line: 2589, column: 21, scope: !17518)
!17542 = !DILocation(line: 2589, column: 43, scope: !17518)
!17543 = !DILocation(line: 2589, column: 53, scope: !17518)
!17544 = !DILocation(line: 2589, column: 51, scope: !17518)
!17545 = !DILocation(line: 2589, column: 40, scope: !17518)
!17546 = !DILocation(line: 2589, column: 63, scope: !17518)
!17547 = !DILocation(line: 2589, column: 61, scope: !17518)
!17548 = !DILocation(line: 2589, column: 10, scope: !17518)
!17549 = !DILocation(line: 2591, column: 17, scope: !17518)
!17550 = !DILocation(line: 2591, column: 3, scope: !17518)
!17551 = !DILocation(line: 2591, column: 7, scope: !17518)
!17552 = !DILocation(line: 2591, column: 11, scope: !17518)
!17553 = !DILocation(line: 2591, column: 14, scope: !17518)
!17554 = !DILocation(line: 2592, column: 2, scope: !17518)
!17555 = !DILocation(line: 2584, column: 22, scope: !17514)
!17556 = !DILocation(line: 2584, column: 2, scope: !17514)
!17557 = distinct !{!17557, !17516, !17558}
!17558 = !DILocation(line: 2592, column: 2, scope: !17511)
!17559 = !DILocation(line: 2593, column: 1, scope: !17497)
!17560 = distinct !DISubprogram(name: "curve_smooth_value", scope: !3, file: !3, line: 2699, type: !17561, scopeLine: 2701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!17561 = !DISubroutineType(types: !17562)
!17562 = !{null, !486, !8060, !8060}
!17563 = !DILocalVariable(name: "editnurb", arg: 1, scope: !17560, file: !3, line: 2699, type: !486)
!17564 = !DILocation(line: 2699, column: 42, scope: !17560)
!17565 = !DILocalVariable(name: "bezt_offsetof", arg: 2, scope: !17560, file: !3, line: 2700, type: !8060)
!17566 = !DILocation(line: 2700, column: 42, scope: !17560)
!17567 = !DILocalVariable(name: "bp_offset", arg: 3, scope: !17560, file: !3, line: 2700, type: !8060)
!17568 = !DILocation(line: 2700, column: 67, scope: !17560)
!17569 = !DILocalVariable(name: "nu", scope: !17560, file: !3, line: 2702, type: !3163)
!17570 = !DILocation(line: 2702, column: 8, scope: !17560)
!17571 = !DILocalVariable(name: "bezt", scope: !17560, file: !3, line: 2703, type: !3104)
!17572 = !DILocation(line: 2703, column: 13, scope: !17560)
!17573 = !DILocalVariable(name: "bp", scope: !17560, file: !3, line: 2704, type: !3093)
!17574 = !DILocation(line: 2704, column: 10, scope: !17560)
!17575 = !DILocalVariable(name: "a", scope: !17560, file: !3, line: 2705, type: !22)
!17576 = !DILocation(line: 2705, column: 6, scope: !17560)
!17577 = !DILocalVariable(name: "last_sel", scope: !17560, file: !3, line: 2708, type: !22)
!17578 = !DILocation(line: 2708, column: 6, scope: !17560)
!17579 = !DILocalVariable(name: "start_sel", scope: !17560, file: !3, line: 2709, type: !22)
!17580 = !DILocation(line: 2709, column: 6, scope: !17560)
!17581 = !DILocalVariable(name: "end_sel", scope: !17560, file: !3, line: 2709, type: !22)
!17582 = !DILocation(line: 2709, column: 17, scope: !17560)
!17583 = !DILocalVariable(name: "start_rad", scope: !17560, file: !3, line: 2710, type: !204)
!17584 = !DILocation(line: 2710, column: 8, scope: !17560)
!17585 = !DILocalVariable(name: "end_rad", scope: !17560, file: !3, line: 2710, type: !204)
!17586 = !DILocation(line: 2710, column: 19, scope: !17560)
!17587 = !DILocalVariable(name: "fac", scope: !17560, file: !3, line: 2710, type: !204)
!17588 = !DILocation(line: 2710, column: 28, scope: !17560)
!17589 = !DILocalVariable(name: "range", scope: !17560, file: !3, line: 2710, type: !204)
!17590 = !DILocation(line: 2710, column: 33, scope: !17560)
!17591 = !DILocation(line: 2712, column: 12, scope: !17592)
!17592 = distinct !DILexicalBlock(scope: !17560, file: !3, line: 2712, column: 2)
!17593 = !DILocation(line: 2712, column: 22, scope: !17592)
!17594 = !DILocation(line: 2712, column: 10, scope: !17592)
!17595 = !DILocation(line: 2712, column: 7, scope: !17592)
!17596 = !DILocation(line: 2712, column: 29, scope: !17597)
!17597 = distinct !DILexicalBlock(scope: !17592, file: !3, line: 2712, column: 2)
!17598 = !DILocation(line: 2712, column: 2, scope: !17592)
!17599 = !DILocation(line: 2713, column: 7, scope: !17600)
!17600 = distinct !DILexicalBlock(scope: !17601, file: !3, line: 2713, column: 7)
!17601 = distinct !DILexicalBlock(scope: !17597, file: !3, line: 2712, column: 48)
!17602 = !DILocation(line: 2713, column: 11, scope: !17600)
!17603 = !DILocation(line: 2713, column: 7, scope: !17601)
!17604 = !DILocation(line: 2716, column: 18, scope: !17605)
!17605 = distinct !DILexicalBlock(scope: !17606, file: !3, line: 2716, column: 4)
!17606 = distinct !DILexicalBlock(scope: !17600, file: !3, line: 2713, column: 17)
!17607 = !DILocation(line: 2716, column: 9, scope: !17605)
!17608 = !DILocation(line: 2716, column: 23, scope: !17609)
!17609 = distinct !DILexicalBlock(scope: !17605, file: !3, line: 2716, column: 4)
!17610 = !DILocation(line: 2716, column: 34, scope: !17609)
!17611 = !DILocation(line: 2716, column: 38, scope: !17609)
!17612 = !DILocation(line: 2716, column: 32, scope: !17609)
!17613 = !DILocation(line: 2716, column: 4, scope: !17605)
!17614 = !DILocation(line: 2720, column: 15, scope: !17615)
!17615 = distinct !DILexicalBlock(scope: !17609, file: !3, line: 2716, column: 57)
!17616 = !DILocation(line: 2721, column: 18, scope: !17617)
!17617 = distinct !DILexicalBlock(scope: !17615, file: !3, line: 2721, column: 5)
!17618 = !DILocation(line: 2721, column: 22, scope: !17617)
!17619 = !DILocation(line: 2721, column: 27, scope: !17617)
!17620 = !DILocation(line: 2721, column: 15, scope: !17617)
!17621 = !DILocation(line: 2721, column: 42, scope: !17617)
!17622 = !DILocation(line: 2721, column: 40, scope: !17617)
!17623 = !DILocation(line: 2721, column: 10, scope: !17617)
!17624 = !DILocation(line: 2721, column: 52, scope: !17625)
!17625 = distinct !DILexicalBlock(scope: !17617, file: !3, line: 2721, column: 5)
!17626 = !DILocation(line: 2721, column: 56, scope: !17625)
!17627 = !DILocation(line: 2721, column: 60, scope: !17625)
!17628 = !DILocation(line: 2721, column: 54, scope: !17625)
!17629 = !DILocation(line: 2721, column: 5, scope: !17617)
!17630 = !DILocation(line: 2722, column: 10, scope: !17631)
!17631 = distinct !DILexicalBlock(scope: !17632, file: !3, line: 2722, column: 10)
!17632 = distinct !DILexicalBlock(scope: !17625, file: !3, line: 2721, column: 80)
!17633 = !DILocation(line: 2722, column: 16, scope: !17631)
!17634 = !DILocation(line: 2722, column: 19, scope: !17631)
!17635 = !DILocation(line: 2722, column: 10, scope: !17632)
!17636 = !DILocation(line: 2723, column: 19, scope: !17637)
!17637 = distinct !DILexicalBlock(scope: !17631, file: !3, line: 2722, column: 29)
!17638 = !DILocation(line: 2723, column: 17, scope: !17637)
!17639 = !DILocation(line: 2724, column: 7, scope: !17637)
!17640 = !DILocation(line: 2726, column: 5, scope: !17632)
!17641 = !DILocation(line: 2721, column: 68, scope: !17625)
!17642 = !DILocation(line: 2721, column: 76, scope: !17625)
!17643 = !DILocation(line: 2721, column: 5, scope: !17625)
!17644 = distinct !{!17644, !17629, !17645}
!17645 = !DILocation(line: 2726, column: 5, scope: !17617)
!17646 = !DILocation(line: 2728, column: 15, scope: !17615)
!17647 = !DILocation(line: 2728, column: 13, scope: !17615)
!17648 = !DILocation(line: 2729, column: 18, scope: !17649)
!17649 = distinct !DILexicalBlock(scope: !17615, file: !3, line: 2729, column: 5)
!17650 = !DILocation(line: 2729, column: 22, scope: !17649)
!17651 = !DILocation(line: 2729, column: 27, scope: !17649)
!17652 = !DILocation(line: 2729, column: 37, scope: !17649)
!17653 = !DILocation(line: 2729, column: 15, scope: !17649)
!17654 = !DILocation(line: 2729, column: 47, scope: !17649)
!17655 = !DILocation(line: 2729, column: 57, scope: !17649)
!17656 = !DILocation(line: 2729, column: 45, scope: !17649)
!17657 = !DILocation(line: 2729, column: 10, scope: !17649)
!17658 = !DILocation(line: 2729, column: 62, scope: !17659)
!17659 = distinct !DILexicalBlock(scope: !17649, file: !3, line: 2729, column: 5)
!17660 = !DILocation(line: 2729, column: 66, scope: !17659)
!17661 = !DILocation(line: 2729, column: 70, scope: !17659)
!17662 = !DILocation(line: 2729, column: 64, scope: !17659)
!17663 = !DILocation(line: 2729, column: 5, scope: !17649)
!17664 = !DILocation(line: 2730, column: 11, scope: !17665)
!17665 = distinct !DILexicalBlock(scope: !17666, file: !3, line: 2730, column: 10)
!17666 = distinct !DILexicalBlock(scope: !17659, file: !3, line: 2729, column: 90)
!17667 = !DILocation(line: 2730, column: 17, scope: !17665)
!17668 = !DILocation(line: 2730, column: 20, scope: !17665)
!17669 = !DILocation(line: 2730, column: 30, scope: !17665)
!17670 = !DILocation(line: 2730, column: 10, scope: !17666)
!17671 = !DILocation(line: 2731, column: 7, scope: !17672)
!17672 = distinct !DILexicalBlock(scope: !17665, file: !3, line: 2730, column: 36)
!17673 = !DILocation(line: 2733, column: 16, scope: !17666)
!17674 = !DILocation(line: 2733, column: 14, scope: !17666)
!17675 = !DILocation(line: 2734, column: 5, scope: !17666)
!17676 = !DILocation(line: 2729, column: 78, scope: !17659)
!17677 = !DILocation(line: 2729, column: 86, scope: !17659)
!17678 = !DILocation(line: 2729, column: 5, scope: !17659)
!17679 = distinct !{!17679, !17663, !17680}
!17680 = !DILocation(line: 2734, column: 5, scope: !17649)
!17681 = !DILocation(line: 2736, column: 9, scope: !17682)
!17682 = distinct !DILexicalBlock(scope: !17615, file: !3, line: 2736, column: 9)
!17683 = !DILocation(line: 2736, column: 19, scope: !17682)
!17684 = !DILocation(line: 2736, column: 9, scope: !17615)
!17685 = !DILocation(line: 2737, column: 17, scope: !17686)
!17686 = distinct !DILexicalBlock(scope: !17682, file: !3, line: 2736, column: 26)
!17687 = !DILocation(line: 2737, column: 21, scope: !17686)
!17688 = !DILocation(line: 2737, column: 15, scope: !17686)
!17689 = !DILocation(line: 2738, column: 5, scope: !17686)
!17690 = !DILocation(line: 2740, column: 17, scope: !17691)
!17691 = distinct !DILexicalBlock(scope: !17682, file: !3, line: 2739, column: 10)
!17692 = !DILocation(line: 2740, column: 15, scope: !17691)
!17693 = !DILocation(line: 2743, column: 26, scope: !17691)
!17694 = !DILocation(line: 2743, column: 16, scope: !17691)
!17695 = !DILocation(line: 2745, column: 10, scope: !17696)
!17696 = distinct !DILexicalBlock(scope: !17691, file: !3, line: 2745, column: 10)
!17697 = !DILocation(line: 2745, column: 23, scope: !17696)
!17698 = !DILocation(line: 2745, column: 20, scope: !17696)
!17699 = !DILocation(line: 2745, column: 10, scope: !17691)
!17700 = !DILocation(line: 2747, column: 11, scope: !17701)
!17701 = distinct !DILexicalBlock(scope: !17702, file: !3, line: 2747, column: 11)
!17702 = distinct !DILexicalBlock(scope: !17696, file: !3, line: 2745, column: 32)
!17703 = !DILocation(line: 2747, column: 21, scope: !17701)
!17704 = !DILocation(line: 2747, column: 11, scope: !17702)
!17705 = !DILocation(line: 2747, column: 62, scope: !17701)
!17706 = !DILocation(line: 2747, column: 60, scope: !17701)
!17707 = !DILocation(line: 2747, column: 50, scope: !17701)
!17708 = !DILocation(line: 2748, column: 11, scope: !17709)
!17709 = distinct !DILexicalBlock(scope: !17702, file: !3, line: 2748, column: 11)
!17710 = !DILocation(line: 2748, column: 19, scope: !17709)
!17711 = !DILocation(line: 2748, column: 25, scope: !17709)
!17712 = !DILocation(line: 2748, column: 28, scope: !17709)
!17713 = !DILocation(line: 2748, column: 38, scope: !17709)
!17714 = !DILocation(line: 2748, column: 42, scope: !17709)
!17715 = !DILocation(line: 2748, column: 36, scope: !17709)
!17716 = !DILocation(line: 2748, column: 11, scope: !17702)
!17717 = !DILocation(line: 2748, column: 62, scope: !17709)
!17718 = !DILocation(line: 2748, column: 60, scope: !17709)
!17719 = !DILocation(line: 2748, column: 50, scope: !17709)
!17720 = !DILocation(line: 2750, column: 16, scope: !17721)
!17721 = distinct !DILexicalBlock(scope: !17702, file: !3, line: 2750, column: 16)
!17722 = !DILocation(line: 2750, column: 26, scope: !17721)
!17723 = !DILocation(line: 2750, column: 37, scope: !17721)
!17724 = !DILocation(line: 2750, column: 40, scope: !17721)
!17725 = !DILocation(line: 2750, column: 48, scope: !17721)
!17726 = !DILocation(line: 2750, column: 16, scope: !17702)
!17727 = !DILocation(line: 2750, column: 96, scope: !17721)
!17728 = !DILocation(line: 2750, column: 108, scope: !17721)
!17729 = !DILocation(line: 2750, column: 106, scope: !17721)
!17730 = !DILocation(line: 2750, column: 117, scope: !17721)
!17731 = !DILocation(line: 2750, column: 60, scope: !17721)
!17732 = !DILocation(line: 2750, column: 93, scope: !17721)
!17733 = !DILocation(line: 2751, column: 16, scope: !17734)
!17734 = distinct !DILexicalBlock(scope: !17721, file: !3, line: 2751, column: 16)
!17735 = !DILocation(line: 2751, column: 26, scope: !17734)
!17736 = !DILocation(line: 2751, column: 16, scope: !17721)
!17737 = !DILocation(line: 2751, column: 95, scope: !17734)
!17738 = !DILocation(line: 2751, column: 60, scope: !17734)
!17739 = !DILocation(line: 2751, column: 93, scope: !17734)
!17740 = !DILocation(line: 2752, column: 16, scope: !17741)
!17741 = distinct !DILexicalBlock(scope: !17734, file: !3, line: 2752, column: 16)
!17742 = !DILocation(line: 2752, column: 26, scope: !17741)
!17743 = !DILocation(line: 2752, column: 16, scope: !17734)
!17744 = !DILocation(line: 2752, column: 95, scope: !17741)
!17745 = !DILocation(line: 2752, column: 60, scope: !17741)
!17746 = !DILocation(line: 2752, column: 93, scope: !17741)
!17747 = !DILocation(line: 2753, column: 6, scope: !17702)
!17748 = !DILocation(line: 2756, column: 11, scope: !17749)
!17749 = distinct !DILexicalBlock(scope: !17750, file: !3, line: 2756, column: 11)
!17750 = distinct !DILexicalBlock(scope: !17696, file: !3, line: 2754, column: 11)
!17751 = !DILocation(line: 2756, column: 21, scope: !17749)
!17752 = !DILocation(line: 2756, column: 11, scope: !17750)
!17753 = !DILocation(line: 2757, column: 20, scope: !17754)
!17754 = distinct !DILexicalBlock(scope: !17749, file: !3, line: 2756, column: 27)
!17755 = !DILocation(line: 2757, column: 18, scope: !17754)
!17756 = !DILocation(line: 2758, column: 17, scope: !17754)
!17757 = !DILocation(line: 2759, column: 7, scope: !17754)
!17758 = !DILocation(line: 2761, column: 20, scope: !17759)
!17759 = distinct !DILexicalBlock(scope: !17749, file: !3, line: 2760, column: 12)
!17760 = !DILocation(line: 2761, column: 18, scope: !17759)
!17761 = !DILocation(line: 2763, column: 11, scope: !17762)
!17762 = distinct !DILexicalBlock(scope: !17750, file: !3, line: 2763, column: 11)
!17763 = !DILocation(line: 2763, column: 22, scope: !17762)
!17764 = !DILocation(line: 2763, column: 26, scope: !17762)
!17765 = !DILocation(line: 2763, column: 32, scope: !17762)
!17766 = !DILocation(line: 2763, column: 19, scope: !17762)
!17767 = !DILocation(line: 2763, column: 11, scope: !17750)
!17768 = !DILocation(line: 2764, column: 18, scope: !17769)
!17769 = distinct !DILexicalBlock(scope: !17762, file: !3, line: 2763, column: 37)
!17770 = !DILocation(line: 2764, column: 16, scope: !17769)
!17771 = !DILocation(line: 2765, column: 15, scope: !17769)
!17772 = !DILocation(line: 2766, column: 7, scope: !17769)
!17773 = !DILocation(line: 2768, column: 18, scope: !17774)
!17774 = distinct !DILexicalBlock(scope: !17762, file: !3, line: 2767, column: 12)
!17775 = !DILocation(line: 2768, column: 16, scope: !17774)
!17776 = !DILocation(line: 2772, column: 23, scope: !17750)
!17777 = !DILocation(line: 2772, column: 33, scope: !17750)
!17778 = !DILocation(line: 2772, column: 31, scope: !17750)
!17779 = !DILocation(line: 2772, column: 15, scope: !17750)
!17780 = !DILocation(line: 2772, column: 44, scope: !17750)
!17781 = !DILocation(line: 2772, column: 13, scope: !17750)
!17782 = !DILocation(line: 2773, column: 20, scope: !17783)
!17783 = distinct !DILexicalBlock(scope: !17750, file: !3, line: 2773, column: 7)
!17784 = !DILocation(line: 2773, column: 24, scope: !17783)
!17785 = !DILocation(line: 2773, column: 29, scope: !17783)
!17786 = !DILocation(line: 2773, column: 17, scope: !17783)
!17787 = !DILocation(line: 2773, column: 45, scope: !17783)
!17788 = !DILocation(line: 2773, column: 43, scope: !17783)
!17789 = !DILocation(line: 2773, column: 12, scope: !17783)
!17790 = !DILocation(line: 2773, column: 56, scope: !17791)
!17791 = distinct !DILexicalBlock(scope: !17783, file: !3, line: 2773, column: 7)
!17792 = !DILocation(line: 2773, column: 61, scope: !17791)
!17793 = !DILocation(line: 2773, column: 58, scope: !17791)
!17794 = !DILocation(line: 2773, column: 7, scope: !17783)
!17795 = !DILocation(line: 2774, column: 26, scope: !17796)
!17796 = distinct !DILexicalBlock(scope: !17791, file: !3, line: 2773, column: 83)
!17797 = !DILocation(line: 2774, column: 24, scope: !17796)
!17798 = !DILocation(line: 2774, column: 30, scope: !17796)
!17799 = !DILocation(line: 2774, column: 28, scope: !17796)
!17800 = !DILocation(line: 2774, column: 14, scope: !17796)
!17801 = !DILocation(line: 2774, column: 43, scope: !17796)
!17802 = !DILocation(line: 2774, column: 41, scope: !17796)
!17803 = !DILocation(line: 2774, column: 12, scope: !17796)
!17804 = !DILocation(line: 2775, column: 27, scope: !17796)
!17805 = !DILocation(line: 2775, column: 47, scope: !17796)
!17806 = !DILocation(line: 2775, column: 45, scope: !17796)
!17807 = !DILocation(line: 2775, column: 37, scope: !17796)
!17808 = !DILocation(line: 2775, column: 54, scope: !17796)
!17809 = !DILocation(line: 2775, column: 64, scope: !17796)
!17810 = !DILocation(line: 2775, column: 62, scope: !17796)
!17811 = !DILocation(line: 2775, column: 52, scope: !17796)
!17812 = !DILocation(line: 2775, column: 8, scope: !17796)
!17813 = !DILocation(line: 2775, column: 25, scope: !17796)
!17814 = !DILocation(line: 2776, column: 7, scope: !17796)
!17815 = !DILocation(line: 2773, column: 71, scope: !17791)
!17816 = !DILocation(line: 2773, column: 79, scope: !17791)
!17817 = !DILocation(line: 2773, column: 7, scope: !17791)
!17818 = distinct !{!17818, !17794, !17819}
!17819 = !DILocation(line: 2776, column: 7, scope: !17783)
!17820 = !DILocation(line: 2779, column: 4, scope: !17615)
!17821 = !DILocation(line: 2716, column: 53, scope: !17609)
!17822 = !DILocation(line: 2716, column: 4, scope: !17609)
!17823 = distinct !{!17823, !17613, !17824}
!17824 = !DILocation(line: 2779, column: 4, scope: !17605)
!17825 = !DILocation(line: 2781, column: 3, scope: !17606)
!17826 = !DILocation(line: 2782, column: 12, scope: !17827)
!17827 = distinct !DILexicalBlock(scope: !17600, file: !3, line: 2782, column: 12)
!17828 = !DILocation(line: 2782, column: 16, scope: !17827)
!17829 = !DILocation(line: 2782, column: 12, scope: !17600)
!17830 = !DILocation(line: 2786, column: 18, scope: !17831)
!17831 = distinct !DILexicalBlock(scope: !17832, file: !3, line: 2786, column: 4)
!17832 = distinct !DILexicalBlock(scope: !17827, file: !3, line: 2782, column: 20)
!17833 = !DILocation(line: 2786, column: 9, scope: !17831)
!17834 = !DILocation(line: 2786, column: 23, scope: !17835)
!17835 = distinct !DILexicalBlock(scope: !17831, file: !3, line: 2786, column: 4)
!17836 = !DILocation(line: 2786, column: 34, scope: !17835)
!17837 = !DILocation(line: 2786, column: 38, scope: !17835)
!17838 = !DILocation(line: 2786, column: 32, scope: !17835)
!17839 = !DILocation(line: 2786, column: 4, scope: !17831)
!17840 = !DILocation(line: 2790, column: 15, scope: !17841)
!17841 = distinct !DILexicalBlock(scope: !17835, file: !3, line: 2786, column: 57)
!17842 = !DILocation(line: 2791, column: 16, scope: !17843)
!17843 = distinct !DILexicalBlock(scope: !17841, file: !3, line: 2791, column: 5)
!17844 = !DILocation(line: 2791, column: 20, scope: !17843)
!17845 = !DILocation(line: 2791, column: 23, scope: !17843)
!17846 = !DILocation(line: 2791, column: 13, scope: !17843)
!17847 = !DILocation(line: 2791, column: 38, scope: !17843)
!17848 = !DILocation(line: 2791, column: 36, scope: !17843)
!17849 = !DILocation(line: 2791, column: 10, scope: !17843)
!17850 = !DILocation(line: 2791, column: 48, scope: !17851)
!17851 = distinct !DILexicalBlock(scope: !17843, file: !3, line: 2791, column: 5)
!17852 = !DILocation(line: 2791, column: 52, scope: !17851)
!17853 = !DILocation(line: 2791, column: 56, scope: !17851)
!17854 = !DILocation(line: 2791, column: 50, scope: !17851)
!17855 = !DILocation(line: 2791, column: 5, scope: !17843)
!17856 = !DILocation(line: 2792, column: 10, scope: !17857)
!17857 = distinct !DILexicalBlock(scope: !17858, file: !3, line: 2792, column: 10)
!17858 = distinct !DILexicalBlock(scope: !17851, file: !3, line: 2791, column: 74)
!17859 = !DILocation(line: 2792, column: 14, scope: !17857)
!17860 = !DILocation(line: 2792, column: 17, scope: !17857)
!17861 = !DILocation(line: 2792, column: 10, scope: !17858)
!17862 = !DILocation(line: 2793, column: 19, scope: !17863)
!17863 = distinct !DILexicalBlock(scope: !17857, file: !3, line: 2792, column: 27)
!17864 = !DILocation(line: 2793, column: 17, scope: !17863)
!17865 = !DILocation(line: 2794, column: 7, scope: !17863)
!17866 = !DILocation(line: 2796, column: 5, scope: !17858)
!17867 = !DILocation(line: 2791, column: 64, scope: !17851)
!17868 = !DILocation(line: 2791, column: 70, scope: !17851)
!17869 = !DILocation(line: 2791, column: 5, scope: !17851)
!17870 = distinct !{!17870, !17855, !17871}
!17871 = !DILocation(line: 2796, column: 5, scope: !17843)
!17872 = !DILocation(line: 2798, column: 15, scope: !17841)
!17873 = !DILocation(line: 2798, column: 13, scope: !17841)
!17874 = !DILocation(line: 2799, column: 16, scope: !17875)
!17875 = distinct !DILexicalBlock(scope: !17841, file: !3, line: 2799, column: 5)
!17876 = !DILocation(line: 2799, column: 20, scope: !17875)
!17877 = !DILocation(line: 2799, column: 23, scope: !17875)
!17878 = !DILocation(line: 2799, column: 33, scope: !17875)
!17879 = !DILocation(line: 2799, column: 13, scope: !17875)
!17880 = !DILocation(line: 2799, column: 43, scope: !17875)
!17881 = !DILocation(line: 2799, column: 53, scope: !17875)
!17882 = !DILocation(line: 2799, column: 41, scope: !17875)
!17883 = !DILocation(line: 2799, column: 10, scope: !17875)
!17884 = !DILocation(line: 2799, column: 58, scope: !17885)
!17885 = distinct !DILexicalBlock(scope: !17875, file: !3, line: 2799, column: 5)
!17886 = !DILocation(line: 2799, column: 62, scope: !17885)
!17887 = !DILocation(line: 2799, column: 66, scope: !17885)
!17888 = !DILocation(line: 2799, column: 60, scope: !17885)
!17889 = !DILocation(line: 2799, column: 5, scope: !17875)
!17890 = !DILocation(line: 2800, column: 11, scope: !17891)
!17891 = distinct !DILexicalBlock(scope: !17892, file: !3, line: 2800, column: 10)
!17892 = distinct !DILexicalBlock(scope: !17885, file: !3, line: 2799, column: 84)
!17893 = !DILocation(line: 2800, column: 15, scope: !17891)
!17894 = !DILocation(line: 2800, column: 18, scope: !17891)
!17895 = !DILocation(line: 2800, column: 28, scope: !17891)
!17896 = !DILocation(line: 2800, column: 10, scope: !17892)
!17897 = !DILocation(line: 2801, column: 7, scope: !17898)
!17898 = distinct !DILexicalBlock(scope: !17891, file: !3, line: 2800, column: 34)
!17899 = !DILocation(line: 2803, column: 16, scope: !17892)
!17900 = !DILocation(line: 2803, column: 14, scope: !17892)
!17901 = !DILocation(line: 2804, column: 5, scope: !17892)
!17902 = !DILocation(line: 2799, column: 74, scope: !17885)
!17903 = !DILocation(line: 2799, column: 80, scope: !17885)
!17904 = !DILocation(line: 2799, column: 5, scope: !17885)
!17905 = distinct !{!17905, !17889, !17906}
!17906 = !DILocation(line: 2804, column: 5, scope: !17875)
!17907 = !DILocation(line: 2806, column: 9, scope: !17908)
!17908 = distinct !DILexicalBlock(scope: !17841, file: !3, line: 2806, column: 9)
!17909 = !DILocation(line: 2806, column: 19, scope: !17908)
!17910 = !DILocation(line: 2806, column: 9, scope: !17841)
!17911 = !DILocation(line: 2807, column: 17, scope: !17912)
!17912 = distinct !DILexicalBlock(scope: !17908, file: !3, line: 2806, column: 26)
!17913 = !DILocation(line: 2807, column: 21, scope: !17912)
!17914 = !DILocation(line: 2807, column: 15, scope: !17912)
!17915 = !DILocation(line: 2808, column: 5, scope: !17912)
!17916 = !DILocation(line: 2810, column: 17, scope: !17917)
!17917 = distinct !DILexicalBlock(scope: !17908, file: !3, line: 2809, column: 10)
!17918 = !DILocation(line: 2810, column: 15, scope: !17917)
!17919 = !DILocation(line: 2813, column: 26, scope: !17917)
!17920 = !DILocation(line: 2813, column: 16, scope: !17917)
!17921 = !DILocation(line: 2815, column: 10, scope: !17922)
!17922 = distinct !DILexicalBlock(scope: !17917, file: !3, line: 2815, column: 10)
!17923 = !DILocation(line: 2815, column: 23, scope: !17922)
!17924 = !DILocation(line: 2815, column: 20, scope: !17922)
!17925 = !DILocation(line: 2815, column: 10, scope: !17917)
!17926 = !DILocation(line: 2817, column: 11, scope: !17927)
!17927 = distinct !DILexicalBlock(scope: !17928, file: !3, line: 2817, column: 11)
!17928 = distinct !DILexicalBlock(scope: !17922, file: !3, line: 2815, column: 32)
!17929 = !DILocation(line: 2817, column: 21, scope: !17927)
!17930 = !DILocation(line: 2817, column: 11, scope: !17928)
!17931 = !DILocation(line: 2817, column: 38, scope: !17927)
!17932 = !DILocation(line: 2817, column: 36, scope: !17927)
!17933 = !DILocation(line: 2817, column: 26, scope: !17927)
!17934 = !DILocation(line: 2818, column: 11, scope: !17935)
!17935 = distinct !DILexicalBlock(scope: !17928, file: !3, line: 2818, column: 11)
!17936 = !DILocation(line: 2818, column: 19, scope: !17935)
!17937 = !DILocation(line: 2818, column: 25, scope: !17935)
!17938 = !DILocation(line: 2818, column: 28, scope: !17935)
!17939 = !DILocation(line: 2818, column: 38, scope: !17935)
!17940 = !DILocation(line: 2818, column: 42, scope: !17935)
!17941 = !DILocation(line: 2818, column: 36, scope: !17935)
!17942 = !DILocation(line: 2818, column: 11, scope: !17928)
!17943 = !DILocation(line: 2818, column: 59, scope: !17935)
!17944 = !DILocation(line: 2818, column: 57, scope: !17935)
!17945 = !DILocation(line: 2818, column: 49, scope: !17935)
!17946 = !DILocation(line: 2820, column: 16, scope: !17947)
!17947 = distinct !DILexicalBlock(scope: !17928, file: !3, line: 2820, column: 16)
!17948 = !DILocation(line: 2820, column: 26, scope: !17947)
!17949 = !DILocation(line: 2820, column: 37, scope: !17947)
!17950 = !DILocation(line: 2820, column: 40, scope: !17947)
!17951 = !DILocation(line: 2820, column: 48, scope: !17947)
!17952 = !DILocation(line: 2820, column: 16, scope: !17928)
!17953 = !DILocation(line: 2820, column: 92, scope: !17947)
!17954 = !DILocation(line: 2820, column: 104, scope: !17947)
!17955 = !DILocation(line: 2820, column: 102, scope: !17947)
!17956 = !DILocation(line: 2820, column: 113, scope: !17947)
!17957 = !DILocation(line: 2820, column: 60, scope: !17947)
!17958 = !DILocation(line: 2820, column: 89, scope: !17947)
!17959 = !DILocation(line: 2821, column: 16, scope: !17960)
!17960 = distinct !DILexicalBlock(scope: !17947, file: !3, line: 2821, column: 16)
!17961 = !DILocation(line: 2821, column: 26, scope: !17960)
!17962 = !DILocation(line: 2821, column: 16, scope: !17947)
!17963 = !DILocation(line: 2821, column: 91, scope: !17960)
!17964 = !DILocation(line: 2821, column: 60, scope: !17960)
!17965 = !DILocation(line: 2821, column: 89, scope: !17960)
!17966 = !DILocation(line: 2822, column: 16, scope: !17967)
!17967 = distinct !DILexicalBlock(scope: !17960, file: !3, line: 2822, column: 16)
!17968 = !DILocation(line: 2822, column: 26, scope: !17967)
!17969 = !DILocation(line: 2822, column: 16, scope: !17960)
!17970 = !DILocation(line: 2822, column: 91, scope: !17967)
!17971 = !DILocation(line: 2822, column: 60, scope: !17967)
!17972 = !DILocation(line: 2822, column: 89, scope: !17967)
!17973 = !DILocation(line: 2823, column: 6, scope: !17928)
!17974 = !DILocation(line: 2826, column: 11, scope: !17975)
!17975 = distinct !DILexicalBlock(scope: !17976, file: !3, line: 2826, column: 11)
!17976 = distinct !DILexicalBlock(scope: !17922, file: !3, line: 2824, column: 11)
!17977 = !DILocation(line: 2826, column: 21, scope: !17975)
!17978 = !DILocation(line: 2826, column: 11, scope: !17976)
!17979 = !DILocation(line: 2827, column: 20, scope: !17980)
!17980 = distinct !DILexicalBlock(scope: !17975, file: !3, line: 2826, column: 27)
!17981 = !DILocation(line: 2827, column: 18, scope: !17980)
!17982 = !DILocation(line: 2828, column: 17, scope: !17980)
!17983 = !DILocation(line: 2829, column: 7, scope: !17980)
!17984 = !DILocation(line: 2831, column: 20, scope: !17985)
!17985 = distinct !DILexicalBlock(scope: !17975, file: !3, line: 2830, column: 12)
!17986 = !DILocation(line: 2831, column: 18, scope: !17985)
!17987 = !DILocation(line: 2833, column: 11, scope: !17988)
!17988 = distinct !DILexicalBlock(scope: !17976, file: !3, line: 2833, column: 11)
!17989 = !DILocation(line: 2833, column: 22, scope: !17988)
!17990 = !DILocation(line: 2833, column: 26, scope: !17988)
!17991 = !DILocation(line: 2833, column: 32, scope: !17988)
!17992 = !DILocation(line: 2833, column: 19, scope: !17988)
!17993 = !DILocation(line: 2833, column: 11, scope: !17976)
!17994 = !DILocation(line: 2834, column: 18, scope: !17995)
!17995 = distinct !DILexicalBlock(scope: !17988, file: !3, line: 2833, column: 37)
!17996 = !DILocation(line: 2834, column: 16, scope: !17995)
!17997 = !DILocation(line: 2835, column: 15, scope: !17995)
!17998 = !DILocation(line: 2836, column: 7, scope: !17995)
!17999 = !DILocation(line: 2838, column: 18, scope: !18000)
!18000 = distinct !DILexicalBlock(scope: !17988, file: !3, line: 2837, column: 12)
!18001 = !DILocation(line: 2838, column: 16, scope: !18000)
!18002 = !DILocation(line: 2842, column: 23, scope: !17976)
!18003 = !DILocation(line: 2842, column: 33, scope: !17976)
!18004 = !DILocation(line: 2842, column: 31, scope: !17976)
!18005 = !DILocation(line: 2842, column: 15, scope: !17976)
!18006 = !DILocation(line: 2842, column: 44, scope: !17976)
!18007 = !DILocation(line: 2842, column: 13, scope: !17976)
!18008 = !DILocation(line: 2843, column: 18, scope: !18009)
!18009 = distinct !DILexicalBlock(scope: !17976, file: !3, line: 2843, column: 7)
!18010 = !DILocation(line: 2843, column: 22, scope: !18009)
!18011 = !DILocation(line: 2843, column: 25, scope: !18009)
!18012 = !DILocation(line: 2843, column: 15, scope: !18009)
!18013 = !DILocation(line: 2843, column: 41, scope: !18009)
!18014 = !DILocation(line: 2843, column: 39, scope: !18009)
!18015 = !DILocation(line: 2843, column: 12, scope: !18009)
!18016 = !DILocation(line: 2843, column: 52, scope: !18017)
!18017 = distinct !DILexicalBlock(scope: !18009, file: !3, line: 2843, column: 7)
!18018 = !DILocation(line: 2843, column: 57, scope: !18017)
!18019 = !DILocation(line: 2843, column: 54, scope: !18017)
!18020 = !DILocation(line: 2843, column: 7, scope: !18009)
!18021 = !DILocation(line: 2844, column: 26, scope: !18022)
!18022 = distinct !DILexicalBlock(scope: !18017, file: !3, line: 2843, column: 77)
!18023 = !DILocation(line: 2844, column: 24, scope: !18022)
!18024 = !DILocation(line: 2844, column: 30, scope: !18022)
!18025 = !DILocation(line: 2844, column: 28, scope: !18022)
!18026 = !DILocation(line: 2844, column: 14, scope: !18022)
!18027 = !DILocation(line: 2844, column: 43, scope: !18022)
!18028 = !DILocation(line: 2844, column: 41, scope: !18022)
!18029 = !DILocation(line: 2844, column: 12, scope: !18022)
!18030 = !DILocation(line: 2845, column: 23, scope: !18022)
!18031 = !DILocation(line: 2845, column: 43, scope: !18022)
!18032 = !DILocation(line: 2845, column: 41, scope: !18022)
!18033 = !DILocation(line: 2845, column: 33, scope: !18022)
!18034 = !DILocation(line: 2845, column: 50, scope: !18022)
!18035 = !DILocation(line: 2845, column: 60, scope: !18022)
!18036 = !DILocation(line: 2845, column: 58, scope: !18022)
!18037 = !DILocation(line: 2845, column: 48, scope: !18022)
!18038 = !DILocation(line: 2845, column: 8, scope: !18022)
!18039 = !DILocation(line: 2845, column: 21, scope: !18022)
!18040 = !DILocation(line: 2846, column: 7, scope: !18022)
!18041 = !DILocation(line: 2843, column: 67, scope: !18017)
!18042 = !DILocation(line: 2843, column: 73, scope: !18017)
!18043 = !DILocation(line: 2843, column: 7, scope: !18017)
!18044 = distinct !{!18044, !18020, !18045}
!18045 = !DILocation(line: 2846, column: 7, scope: !18009)
!18046 = !DILocation(line: 2849, column: 4, scope: !17841)
!18047 = !DILocation(line: 2786, column: 53, scope: !17835)
!18048 = !DILocation(line: 2786, column: 4, scope: !17835)
!18049 = distinct !{!18049, !17839, !18050}
!18050 = !DILocation(line: 2849, column: 4, scope: !17831)
!18051 = !DILocation(line: 2851, column: 3, scope: !17832)
!18052 = !DILocation(line: 2852, column: 2, scope: !17601)
!18053 = !DILocation(line: 2712, column: 38, scope: !17597)
!18054 = !DILocation(line: 2712, column: 42, scope: !17597)
!18055 = !DILocation(line: 2712, column: 36, scope: !17597)
!18056 = !DILocation(line: 2712, column: 2, scope: !17597)
!18057 = distinct !{!18057, !17598, !18058}
!18058 = !DILocation(line: 2852, column: 2, scope: !17592)
!18059 = !DILocation(line: 2853, column: 1, scope: !17560)
!18060 = distinct !DISubprogram(name: "nurb_has_selected_cps", scope: !3, file: !3, line: 3122, type: !18061, scopeLine: 3123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!18061 = !DISubroutineType(types: !18062)
!18062 = !{!1081, !486}
!18063 = !DILocalVariable(name: "editnurb", arg: 1, scope: !18060, file: !3, line: 3122, type: !486)
!18064 = !DILocation(line: 3122, column: 45, scope: !18060)
!18065 = !DILocalVariable(name: "nu", scope: !18060, file: !3, line: 3124, type: !3163)
!18066 = !DILocation(line: 3124, column: 8, scope: !18060)
!18067 = !DILocalVariable(name: "bezt", scope: !18060, file: !3, line: 3125, type: !3104)
!18068 = !DILocation(line: 3125, column: 13, scope: !18060)
!18069 = !DILocalVariable(name: "bp", scope: !18060, file: !3, line: 3126, type: !3093)
!18070 = !DILocation(line: 3126, column: 10, scope: !18060)
!18071 = !DILocalVariable(name: "a", scope: !18060, file: !3, line: 3127, type: !22)
!18072 = !DILocation(line: 3127, column: 6, scope: !18060)
!18073 = !DILocation(line: 3129, column: 12, scope: !18074)
!18074 = distinct !DILexicalBlock(scope: !18060, file: !3, line: 3129, column: 2)
!18075 = !DILocation(line: 3129, column: 22, scope: !18074)
!18076 = !DILocation(line: 3129, column: 10, scope: !18074)
!18077 = !DILocation(line: 3129, column: 7, scope: !18074)
!18078 = !DILocation(line: 3129, column: 29, scope: !18079)
!18079 = distinct !DILexicalBlock(scope: !18074, file: !3, line: 3129, column: 2)
!18080 = !DILocation(line: 3129, column: 2, scope: !18074)
!18081 = !DILocation(line: 3130, column: 7, scope: !18082)
!18082 = distinct !DILexicalBlock(scope: !18083, file: !3, line: 3130, column: 7)
!18083 = distinct !DILexicalBlock(scope: !18079, file: !3, line: 3129, column: 48)
!18084 = !DILocation(line: 3130, column: 11, scope: !18082)
!18085 = !DILocation(line: 3130, column: 16, scope: !18082)
!18086 = !DILocation(line: 3130, column: 7, scope: !18083)
!18087 = !DILocation(line: 3131, column: 8, scope: !18088)
!18088 = distinct !DILexicalBlock(scope: !18082, file: !3, line: 3130, column: 30)
!18089 = !DILocation(line: 3131, column: 12, scope: !18088)
!18090 = !DILocation(line: 3131, column: 6, scope: !18088)
!18091 = !DILocation(line: 3132, column: 11, scope: !18088)
!18092 = !DILocation(line: 3132, column: 15, scope: !18088)
!18093 = !DILocation(line: 3132, column: 9, scope: !18088)
!18094 = !DILocation(line: 3133, column: 4, scope: !18088)
!18095 = !DILocation(line: 3133, column: 12, scope: !18088)
!18096 = !DILocation(line: 3134, column: 9, scope: !18097)
!18097 = distinct !DILexicalBlock(scope: !18098, file: !3, line: 3134, column: 9)
!18098 = distinct !DILexicalBlock(scope: !18088, file: !3, line: 3133, column: 16)
!18099 = !DILocation(line: 3134, column: 15, scope: !18097)
!18100 = !DILocation(line: 3134, column: 20, scope: !18097)
!18101 = !DILocation(line: 3134, column: 9, scope: !18098)
!18102 = !DILocation(line: 3135, column: 11, scope: !18103)
!18103 = distinct !DILexicalBlock(scope: !18104, file: !3, line: 3135, column: 10)
!18104 = distinct !DILexicalBlock(scope: !18097, file: !3, line: 3134, column: 26)
!18105 = !DILocation(line: 3135, column: 17, scope: !18103)
!18106 = !DILocation(line: 3135, column: 20, scope: !18103)
!18107 = !DILocation(line: 3135, column: 30, scope: !18103)
!18108 = !DILocation(line: 3136, column: 11, scope: !18103)
!18109 = !DILocation(line: 3136, column: 17, scope: !18103)
!18110 = !DILocation(line: 3136, column: 20, scope: !18103)
!18111 = !DILocation(line: 3136, column: 30, scope: !18103)
!18112 = !DILocation(line: 3137, column: 11, scope: !18103)
!18113 = !DILocation(line: 3137, column: 17, scope: !18103)
!18114 = !DILocation(line: 3137, column: 20, scope: !18103)
!18115 = !DILocation(line: 3135, column: 10, scope: !18104)
!18116 = !DILocation(line: 3139, column: 7, scope: !18117)
!18117 = distinct !DILexicalBlock(scope: !18103, file: !3, line: 3138, column: 6)
!18118 = !DILocation(line: 3141, column: 5, scope: !18104)
!18119 = !DILocation(line: 3142, column: 9, scope: !18098)
!18120 = distinct !{!18120, !18094, !18121}
!18121 = !DILocation(line: 3143, column: 4, scope: !18088)
!18122 = !DILocation(line: 3144, column: 3, scope: !18088)
!18123 = !DILocation(line: 3146, column: 8, scope: !18124)
!18124 = distinct !DILexicalBlock(scope: !18082, file: !3, line: 3145, column: 8)
!18125 = !DILocation(line: 3146, column: 12, scope: !18124)
!18126 = !DILocation(line: 3146, column: 20, scope: !18124)
!18127 = !DILocation(line: 3146, column: 24, scope: !18124)
!18128 = !DILocation(line: 3146, column: 18, scope: !18124)
!18129 = !DILocation(line: 3146, column: 6, scope: !18124)
!18130 = !DILocation(line: 3147, column: 9, scope: !18124)
!18131 = !DILocation(line: 3147, column: 13, scope: !18124)
!18132 = !DILocation(line: 3147, column: 7, scope: !18124)
!18133 = !DILocation(line: 3148, column: 4, scope: !18124)
!18134 = !DILocation(line: 3148, column: 12, scope: !18124)
!18135 = !DILocation(line: 3149, column: 10, scope: !18136)
!18136 = distinct !DILexicalBlock(scope: !18137, file: !3, line: 3149, column: 9)
!18137 = distinct !DILexicalBlock(scope: !18124, file: !3, line: 3148, column: 16)
!18138 = !DILocation(line: 3149, column: 14, scope: !18136)
!18139 = !DILocation(line: 3149, column: 19, scope: !18136)
!18140 = !DILocation(line: 3149, column: 25, scope: !18136)
!18141 = !DILocation(line: 3149, column: 29, scope: !18136)
!18142 = !DILocation(line: 3149, column: 33, scope: !18136)
!18143 = !DILocation(line: 3149, column: 36, scope: !18136)
!18144 = !DILocation(line: 3149, column: 9, scope: !18137)
!18145 = !DILocation(line: 3149, column: 47, scope: !18136)
!18146 = !DILocation(line: 3150, column: 7, scope: !18137)
!18147 = distinct !{!18147, !18133, !18148}
!18148 = !DILocation(line: 3151, column: 4, scope: !18124)
!18149 = !DILocation(line: 3153, column: 2, scope: !18083)
!18150 = !DILocation(line: 3129, column: 38, scope: !18079)
!18151 = !DILocation(line: 3129, column: 42, scope: !18079)
!18152 = !DILocation(line: 3129, column: 36, scope: !18079)
!18153 = !DILocation(line: 3129, column: 2, scope: !18079)
!18154 = distinct !{!18154, !18080, !18155}
!18155 = !DILocation(line: 3153, column: 2, scope: !18074)
!18156 = !DILocation(line: 3155, column: 2, scope: !18060)
!18157 = !DILocation(line: 3156, column: 1, scope: !18060)
!18158 = distinct !DISubprogram(name: "subdividenurb", scope: !3, file: !3, line: 3348, type: !18159, scopeLine: 3349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!18159 = !DISubroutineType(types: !18160)
!18160 = !{null, !3242, !22}
!18161 = !DILocalVariable(name: "obedit", arg: 1, scope: !18158, file: !3, line: 3348, type: !3242)
!18162 = !DILocation(line: 3348, column: 35, scope: !18158)
!18163 = !DILocalVariable(name: "number_cuts", arg: 2, scope: !18158, file: !3, line: 3348, type: !22)
!18164 = !DILocation(line: 3348, column: 47, scope: !18158)
!18165 = !DILocalVariable(name: "cu", scope: !18158, file: !3, line: 3350, type: !2953)
!18166 = !DILocation(line: 3350, column: 9, scope: !18158)
!18167 = !DILocation(line: 3350, column: 14, scope: !18158)
!18168 = !DILocation(line: 3350, column: 22, scope: !18158)
!18169 = !DILocalVariable(name: "editnurb", scope: !18158, file: !3, line: 3351, type: !2962)
!18170 = !DILocation(line: 3351, column: 12, scope: !18158)
!18171 = !DILocation(line: 3351, column: 23, scope: !18158)
!18172 = !DILocation(line: 3351, column: 27, scope: !18158)
!18173 = !DILocalVariable(name: "nu", scope: !18158, file: !3, line: 3352, type: !3163)
!18174 = !DILocation(line: 3352, column: 8, scope: !18158)
!18175 = !DILocalVariable(name: "bezt", scope: !18158, file: !3, line: 3353, type: !3104)
!18176 = !DILocation(line: 3353, column: 13, scope: !18158)
!18177 = !DILocalVariable(name: "beztnew", scope: !18158, file: !3, line: 3353, type: !3104)
!18178 = !DILocation(line: 3353, column: 20, scope: !18158)
!18179 = !DILocalVariable(name: "beztn", scope: !18158, file: !3, line: 3353, type: !3104)
!18180 = !DILocation(line: 3353, column: 30, scope: !18158)
!18181 = !DILocalVariable(name: "bp", scope: !18158, file: !3, line: 3354, type: !3093)
!18182 = !DILocation(line: 3354, column: 10, scope: !18158)
!18183 = !DILocalVariable(name: "prevbp", scope: !18158, file: !3, line: 3354, type: !3093)
!18184 = !DILocation(line: 3354, column: 15, scope: !18158)
!18185 = !DILocalVariable(name: "bpnew", scope: !18158, file: !3, line: 3354, type: !3093)
!18186 = !DILocation(line: 3354, column: 24, scope: !18158)
!18187 = !DILocalVariable(name: "bpn", scope: !18158, file: !3, line: 3354, type: !3093)
!18188 = !DILocation(line: 3354, column: 32, scope: !18158)
!18189 = !DILocalVariable(name: "vec", scope: !18158, file: !3, line: 3355, type: !18190)
!18190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 480, elements: !18191)
!18191 = !{!18192}
!18192 = !DISubrange(count: 15)
!18193 = !DILocation(line: 3355, column: 8, scope: !18158)
!18194 = !DILocalVariable(name: "a", scope: !18158, file: !3, line: 3356, type: !22)
!18195 = !DILocation(line: 3356, column: 6, scope: !18158)
!18196 = !DILocalVariable(name: "b", scope: !18158, file: !3, line: 3356, type: !22)
!18197 = !DILocation(line: 3356, column: 9, scope: !18158)
!18198 = !DILocalVariable(name: "sel", scope: !18158, file: !3, line: 3356, type: !22)
!18199 = !DILocation(line: 3356, column: 12, scope: !18158)
!18200 = !DILocalVariable(name: "amount", scope: !18158, file: !3, line: 3356, type: !22)
!18201 = !DILocation(line: 3356, column: 17, scope: !18158)
!18202 = !DILocalVariable(name: "usel", scope: !18158, file: !3, line: 3356, type: !3150)
!18203 = !DILocation(line: 3356, column: 26, scope: !18158)
!18204 = !DILocalVariable(name: "vsel", scope: !18158, file: !3, line: 3356, type: !3150)
!18205 = !DILocation(line: 3356, column: 33, scope: !18158)
!18206 = !DILocalVariable(name: "i", scope: !18158, file: !3, line: 3356, type: !22)
!18207 = !DILocation(line: 3356, column: 39, scope: !18158)
!18208 = !DILocalVariable(name: "factor", scope: !18158, file: !3, line: 3357, type: !204)
!18209 = !DILocation(line: 3357, column: 8, scope: !18158)
!18210 = !DILocation(line: 3361, column: 12, scope: !18211)
!18211 = distinct !DILexicalBlock(scope: !18158, file: !3, line: 3361, column: 2)
!18212 = !DILocation(line: 3361, column: 22, scope: !18211)
!18213 = !DILocation(line: 3361, column: 28, scope: !18211)
!18214 = !DILocation(line: 3361, column: 10, scope: !18211)
!18215 = !DILocation(line: 3361, column: 7, scope: !18211)
!18216 = !DILocation(line: 3361, column: 35, scope: !18217)
!18217 = distinct !DILexicalBlock(scope: !18211, file: !3, line: 3361, column: 2)
!18218 = !DILocation(line: 3361, column: 2, scope: !18211)
!18219 = !DILocation(line: 3362, column: 10, scope: !18220)
!18220 = distinct !DILexicalBlock(scope: !18217, file: !3, line: 3361, column: 54)
!18221 = !DILocation(line: 3363, column: 7, scope: !18222)
!18222 = distinct !DILexicalBlock(scope: !18220, file: !3, line: 3363, column: 7)
!18223 = !DILocation(line: 3363, column: 11, scope: !18222)
!18224 = !DILocation(line: 3363, column: 16, scope: !18222)
!18225 = !DILocation(line: 3363, column: 7, scope: !18220)
!18226 = !DILocalVariable(name: "nextbezt", scope: !18227, file: !3, line: 3364, type: !3104)
!18227 = distinct !DILexicalBlock(scope: !18222, file: !3, line: 3363, column: 30)
!18228 = !DILocation(line: 3364, column: 15, scope: !18227)
!18229 = !DILocation(line: 3372, column: 8, scope: !18227)
!18230 = !DILocation(line: 3372, column: 12, scope: !18227)
!18231 = !DILocation(line: 3372, column: 6, scope: !18227)
!18232 = !DILocation(line: 3373, column: 11, scope: !18227)
!18233 = !DILocation(line: 3373, column: 15, scope: !18227)
!18234 = !DILocation(line: 3373, column: 9, scope: !18227)
!18235 = !DILocation(line: 3374, column: 4, scope: !18227)
!18236 = !DILocation(line: 3374, column: 12, scope: !18227)
!18237 = !DILocation(line: 3375, column: 39, scope: !18238)
!18238 = distinct !DILexicalBlock(scope: !18227, file: !3, line: 3374, column: 16)
!18239 = !DILocation(line: 3375, column: 43, scope: !18238)
!18240 = !DILocation(line: 3375, column: 16, scope: !18238)
!18241 = !DILocation(line: 3375, column: 14, scope: !18238)
!18242 = !DILocation(line: 3376, column: 9, scope: !18243)
!18243 = distinct !DILexicalBlock(scope: !18238, file: !3, line: 3376, column: 9)
!18244 = !DILocation(line: 3376, column: 18, scope: !18243)
!18245 = !DILocation(line: 3376, column: 9, scope: !18238)
!18246 = !DILocation(line: 3377, column: 6, scope: !18247)
!18247 = distinct !DILexicalBlock(scope: !18243, file: !3, line: 3376, column: 27)
!18248 = !DILocation(line: 3380, column: 9, scope: !18249)
!18249 = distinct !DILexicalBlock(scope: !18238, file: !3, line: 3380, column: 9)
!18250 = !DILocation(line: 3380, column: 45, scope: !18249)
!18251 = !DILocation(line: 3380, column: 48, scope: !18249)
!18252 = !DILocation(line: 3380, column: 9, scope: !18238)
!18253 = !DILocation(line: 3381, column: 16, scope: !18254)
!18254 = distinct !DILexicalBlock(scope: !18249, file: !3, line: 3380, column: 89)
!18255 = !DILocation(line: 3381, column: 13, scope: !18254)
!18256 = !DILocation(line: 3382, column: 5, scope: !18254)
!18257 = !DILocation(line: 3383, column: 9, scope: !18238)
!18258 = distinct !{!18258, !18235, !18259}
!18259 = !DILocation(line: 3384, column: 4, scope: !18227)
!18260 = !DILocation(line: 3386, column: 8, scope: !18261)
!18261 = distinct !DILexicalBlock(scope: !18227, file: !3, line: 3386, column: 8)
!18262 = !DILocation(line: 3386, column: 8, scope: !18227)
!18263 = !DILocation(line: 3388, column: 28, scope: !18264)
!18264 = distinct !DILexicalBlock(scope: !18261, file: !3, line: 3386, column: 16)
!18265 = !DILocation(line: 3388, column: 41, scope: !18264)
!18266 = !DILocation(line: 3388, column: 50, scope: !18264)
!18267 = !DILocation(line: 3388, column: 54, scope: !18264)
!18268 = !DILocation(line: 3388, column: 48, scope: !18264)
!18269 = !DILocation(line: 3388, column: 40, scope: !18264)
!18270 = !DILocation(line: 3388, column: 61, scope: !18264)
!18271 = !DILocation(line: 3388, column: 15, scope: !18264)
!18272 = !DILocation(line: 3388, column: 13, scope: !18264)
!18273 = !DILocation(line: 3389, column: 13, scope: !18264)
!18274 = !DILocation(line: 3389, column: 11, scope: !18264)
!18275 = !DILocation(line: 3390, column: 9, scope: !18264)
!18276 = !DILocation(line: 3390, column: 13, scope: !18264)
!18277 = !DILocation(line: 3390, column: 7, scope: !18264)
!18278 = !DILocation(line: 3391, column: 12, scope: !18264)
!18279 = !DILocation(line: 3391, column: 16, scope: !18264)
!18280 = !DILocation(line: 3391, column: 10, scope: !18264)
!18281 = !DILocation(line: 3392, column: 5, scope: !18264)
!18282 = !DILocation(line: 3392, column: 13, scope: !18264)
!18283 = !DILocation(line: 3393, column: 13, scope: !18284)
!18284 = distinct !DILexicalBlock(scope: !18264, file: !3, line: 3392, column: 17)
!18285 = !DILocation(line: 3393, column: 6, scope: !18284)
!18286 = !DILocation(line: 3393, column: 20, scope: !18284)
!18287 = !DILocation(line: 3394, column: 26, scope: !18284)
!18288 = !DILocation(line: 3394, column: 36, scope: !18284)
!18289 = !DILocation(line: 3394, column: 42, scope: !18284)
!18290 = !DILocation(line: 3394, column: 6, scope: !18284)
!18291 = !DILocation(line: 3395, column: 11, scope: !18284)
!18292 = !DILocation(line: 3397, column: 40, scope: !18284)
!18293 = !DILocation(line: 3397, column: 44, scope: !18284)
!18294 = !DILocation(line: 3397, column: 17, scope: !18284)
!18295 = !DILocation(line: 3397, column: 15, scope: !18284)
!18296 = !DILocation(line: 3398, column: 10, scope: !18297)
!18297 = distinct !DILexicalBlock(scope: !18284, file: !3, line: 3398, column: 10)
!18298 = !DILocation(line: 3398, column: 19, scope: !18297)
!18299 = !DILocation(line: 3398, column: 10, scope: !18284)
!18300 = !DILocation(line: 3399, column: 7, scope: !18301)
!18301 = distinct !DILexicalBlock(scope: !18297, file: !3, line: 3398, column: 28)
!18302 = !DILocation(line: 3402, column: 10, scope: !18303)
!18303 = distinct !DILexicalBlock(scope: !18284, file: !3, line: 3402, column: 10)
!18304 = !DILocation(line: 3402, column: 46, scope: !18303)
!18305 = !DILocation(line: 3402, column: 49, scope: !18303)
!18306 = !DILocation(line: 3402, column: 10, scope: !18284)
!18307 = !DILocalVariable(name: "prevvec", scope: !18308, file: !3, line: 3403, type: !3109)
!18308 = distinct !DILexicalBlock(scope: !18303, file: !3, line: 3402, column: 90)
!18309 = !DILocation(line: 3403, column: 13, scope: !18308)
!18310 = !DILocation(line: 3405, column: 7, scope: !18308)
!18311 = !DILocation(line: 3405, column: 23, scope: !18308)
!18312 = !DILocation(line: 3405, column: 29, scope: !18308)
!18313 = !DILocation(line: 3407, column: 14, scope: !18314)
!18314 = distinct !DILexicalBlock(scope: !18308, file: !3, line: 3407, column: 7)
!18315 = !DILocation(line: 3407, column: 12, scope: !18314)
!18316 = !DILocation(line: 3407, column: 19, scope: !18317)
!18317 = distinct !DILexicalBlock(scope: !18314, file: !3, line: 3407, column: 7)
!18318 = !DILocation(line: 3407, column: 23, scope: !18317)
!18319 = !DILocation(line: 3407, column: 21, scope: !18317)
!18320 = !DILocation(line: 3407, column: 7, scope: !18314)
!18321 = !DILocation(line: 3408, column: 25, scope: !18322)
!18322 = distinct !DILexicalBlock(scope: !18317, file: !3, line: 3407, column: 41)
!18323 = !DILocation(line: 3408, column: 37, scope: !18322)
!18324 = !DILocation(line: 3408, column: 43, scope: !18322)
!18325 = !DILocation(line: 3408, column: 41, scope: !18322)
!18326 = !DILocation(line: 3408, column: 24, scope: !18322)
!18327 = !DILocation(line: 3408, column: 22, scope: !18322)
!18328 = !DILocation(line: 3408, column: 15, scope: !18322)
!18329 = !DILocation(line: 3410, column: 15, scope: !18322)
!18330 = !DILocation(line: 3410, column: 8, scope: !18322)
!18331 = !DILocation(line: 3410, column: 22, scope: !18322)
!18332 = !DILocation(line: 3413, column: 23, scope: !18322)
!18333 = !DILocation(line: 3413, column: 28, scope: !18322)
!18334 = !DILocation(line: 3413, column: 40, scope: !18322)
!18335 = !DILocation(line: 3413, column: 52, scope: !18322)
!18336 = !DILocation(line: 3413, column: 8, scope: !18322)
!18337 = !DILocation(line: 3414, column: 23, scope: !18322)
!18338 = !DILocation(line: 3414, column: 27, scope: !18322)
!18339 = !DILocation(line: 3414, column: 32, scope: !18322)
!18340 = !DILocation(line: 3414, column: 44, scope: !18322)
!18341 = !DILocation(line: 3414, column: 54, scope: !18322)
!18342 = !DILocation(line: 3414, column: 62, scope: !18322)
!18343 = !DILocation(line: 3414, column: 8, scope: !18322)
!18344 = !DILocation(line: 3415, column: 23, scope: !18322)
!18345 = !DILocation(line: 3415, column: 27, scope: !18322)
!18346 = !DILocation(line: 3415, column: 32, scope: !18322)
!18347 = !DILocation(line: 3415, column: 42, scope: !18322)
!18348 = !DILocation(line: 3415, column: 50, scope: !18322)
!18349 = !DILocation(line: 3415, column: 60, scope: !18322)
!18350 = !DILocation(line: 3415, column: 68, scope: !18322)
!18351 = !DILocation(line: 3415, column: 8, scope: !18322)
!18352 = !DILocation(line: 3417, column: 23, scope: !18322)
!18353 = !DILocation(line: 3417, column: 27, scope: !18322)
!18354 = !DILocation(line: 3417, column: 32, scope: !18322)
!18355 = !DILocation(line: 3417, column: 37, scope: !18322)
!18356 = !DILocation(line: 3417, column: 41, scope: !18322)
!18357 = !DILocation(line: 3417, column: 46, scope: !18322)
!18358 = !DILocation(line: 3417, column: 8, scope: !18322)
!18359 = !DILocation(line: 3418, column: 23, scope: !18322)
!18360 = !DILocation(line: 3418, column: 27, scope: !18322)
!18361 = !DILocation(line: 3418, column: 33, scope: !18322)
!18362 = !DILocation(line: 3418, column: 37, scope: !18322)
!18363 = !DILocation(line: 3418, column: 42, scope: !18322)
!18364 = !DILocation(line: 3418, column: 46, scope: !18322)
!18365 = !DILocation(line: 3418, column: 51, scope: !18322)
!18366 = !DILocation(line: 3418, column: 8, scope: !18322)
!18367 = !DILocation(line: 3421, column: 20, scope: !18322)
!18368 = !DILocation(line: 3421, column: 26, scope: !18322)
!18369 = !DILocation(line: 3421, column: 32, scope: !18322)
!18370 = !DILocation(line: 3421, column: 19, scope: !18322)
!18371 = !DILocation(line: 3421, column: 40, scope: !18322)
!18372 = !DILocation(line: 3421, column: 8, scope: !18322)
!18373 = !DILocation(line: 3423, column: 19, scope: !18322)
!18374 = !DILocation(line: 3423, column: 26, scope: !18322)
!18375 = !DILocation(line: 3423, column: 34, scope: !18322)
!18376 = !DILocation(line: 3423, column: 38, scope: !18322)
!18377 = !DILocation(line: 3423, column: 8, scope: !18322)
!18378 = !DILocation(line: 3424, column: 23, scope: !18322)
!18379 = !DILocation(line: 3424, column: 30, scope: !18322)
!18380 = !DILocation(line: 3424, column: 38, scope: !18322)
!18381 = !DILocation(line: 3424, column: 42, scope: !18322)
!18382 = !DILocation(line: 3424, column: 47, scope: !18322)
!18383 = !DILocation(line: 3424, column: 51, scope: !18322)
!18384 = !DILocation(line: 3424, column: 57, scope: !18322)
!18385 = !DILocation(line: 3424, column: 8, scope: !18322)
!18386 = !DILocation(line: 3425, column: 19, scope: !18322)
!18387 = !DILocation(line: 3425, column: 26, scope: !18322)
!18388 = !DILocation(line: 3425, column: 34, scope: !18322)
!18389 = !DILocation(line: 3425, column: 38, scope: !18322)
!18390 = !DILocation(line: 3425, column: 8, scope: !18322)
!18391 = !DILocation(line: 3427, column: 12, scope: !18392)
!18392 = distinct !DILexicalBlock(scope: !18322, file: !3, line: 3427, column: 12)
!18393 = !DILocation(line: 3427, column: 14, scope: !18392)
!18394 = !DILocation(line: 3427, column: 19, scope: !18392)
!18395 = !DILocation(line: 3427, column: 22, scope: !18392)
!18396 = !DILocation(line: 3427, column: 27, scope: !18392)
!18397 = !DILocation(line: 3427, column: 39, scope: !18392)
!18398 = !DILocation(line: 3427, column: 24, scope: !18392)
!18399 = !DILocation(line: 3427, column: 43, scope: !18392)
!18400 = !DILocation(line: 3427, column: 47, scope: !18392)
!18401 = !DILocation(line: 3427, column: 51, scope: !18392)
!18402 = !DILocation(line: 3427, column: 57, scope: !18392)
!18403 = !DILocation(line: 3427, column: 12, scope: !18322)
!18404 = !DILocation(line: 3427, column: 89, scope: !18405)
!18405 = distinct !DILexicalBlock(scope: !18392, file: !3, line: 3427, column: 76)
!18406 = !DILocation(line: 3427, column: 98, scope: !18405)
!18407 = !DILocation(line: 3427, column: 106, scope: !18405)
!18408 = !DILocation(line: 3427, column: 110, scope: !18405)
!18409 = !DILocation(line: 3427, column: 78, scope: !18405)
!18410 = !DILocation(line: 3427, column: 116, scope: !18405)
!18411 = !DILocation(line: 3428, column: 89, scope: !18412)
!18412 = distinct !DILexicalBlock(scope: !18392, file: !3, line: 3428, column: 76)
!18413 = !DILocation(line: 3428, column: 99, scope: !18412)
!18414 = !DILocation(line: 3428, column: 107, scope: !18412)
!18415 = !DILocation(line: 3428, column: 111, scope: !18412)
!18416 = !DILocation(line: 3428, column: 78, scope: !18412)
!18417 = !DILocation(line: 3430, column: 25, scope: !18322)
!18418 = !DILocation(line: 3430, column: 31, scope: !18322)
!18419 = !DILocation(line: 3430, column: 40, scope: !18322)
!18420 = !DILocation(line: 3430, column: 50, scope: !18322)
!18421 = !DILocation(line: 3430, column: 38, scope: !18322)
!18422 = !DILocation(line: 3430, column: 58, scope: !18322)
!18423 = !DILocation(line: 3430, column: 8, scope: !18322)
!18424 = !DILocation(line: 3430, column: 15, scope: !18322)
!18425 = !DILocation(line: 3430, column: 22, scope: !18322)
!18426 = !DILocation(line: 3431, column: 25, scope: !18322)
!18427 = !DILocation(line: 3431, column: 31, scope: !18322)
!18428 = !DILocation(line: 3431, column: 40, scope: !18322)
!18429 = !DILocation(line: 3431, column: 50, scope: !18322)
!18430 = !DILocation(line: 3431, column: 38, scope: !18322)
!18431 = !DILocation(line: 3431, column: 58, scope: !18322)
!18432 = !DILocation(line: 3431, column: 8, scope: !18322)
!18433 = !DILocation(line: 3431, column: 15, scope: !18322)
!18434 = !DILocation(line: 3431, column: 22, scope: !18322)
!18435 = !DILocation(line: 3433, column: 8, scope: !18322)
!18436 = !DILocation(line: 3433, column: 24, scope: !18322)
!18437 = !DILocation(line: 3433, column: 31, scope: !18322)
!18438 = !DILocation(line: 3434, column: 13, scope: !18322)
!18439 = !DILocation(line: 3435, column: 7, scope: !18322)
!18440 = !DILocation(line: 3407, column: 37, scope: !18317)
!18441 = !DILocation(line: 3407, column: 7, scope: !18317)
!18442 = distinct !{!18442, !18320, !18443}
!18443 = !DILocation(line: 3435, column: 7, scope: !18314)
!18444 = !DILocation(line: 3436, column: 6, scope: !18308)
!18445 = !DILocation(line: 3438, column: 10, scope: !18284)
!18446 = distinct !{!18446, !18281, !18447}
!18447 = !DILocation(line: 3439, column: 5, scope: !18264)
!18448 = !DILocation(line: 3441, column: 5, scope: !18264)
!18449 = !DILocation(line: 3441, column: 15, scope: !18264)
!18450 = !DILocation(line: 3441, column: 19, scope: !18264)
!18451 = !DILocation(line: 3442, column: 16, scope: !18264)
!18452 = !DILocation(line: 3442, column: 5, scope: !18264)
!18453 = !DILocation(line: 3442, column: 9, scope: !18264)
!18454 = !DILocation(line: 3442, column: 14, scope: !18264)
!18455 = !DILocation(line: 3443, column: 18, scope: !18264)
!18456 = !DILocation(line: 3443, column: 5, scope: !18264)
!18457 = !DILocation(line: 3443, column: 9, scope: !18264)
!18458 = !DILocation(line: 3443, column: 15, scope: !18264)
!18459 = !DILocation(line: 3445, column: 27, scope: !18264)
!18460 = !DILocation(line: 3445, column: 5, scope: !18264)
!18461 = !DILocation(line: 3446, column: 4, scope: !18264)
!18462 = !DILocation(line: 3447, column: 3, scope: !18227)
!18463 = !DILocation(line: 3448, column: 12, scope: !18464)
!18464 = distinct !DILexicalBlock(scope: !18222, file: !3, line: 3448, column: 12)
!18465 = !DILocation(line: 3448, column: 16, scope: !18464)
!18466 = !DILocation(line: 3448, column: 22, scope: !18464)
!18467 = !DILocation(line: 3448, column: 12, scope: !18222)
!18468 = !DILocalVariable(name: "nextbp", scope: !18469, file: !3, line: 3449, type: !3093)
!18469 = distinct !DILexicalBlock(scope: !18464, file: !3, line: 3448, column: 28)
!18470 = !DILocation(line: 3449, column: 12, scope: !18469)
!18471 = !DILocation(line: 3458, column: 8, scope: !18469)
!18472 = !DILocation(line: 3458, column: 12, scope: !18469)
!18473 = !DILocation(line: 3458, column: 6, scope: !18469)
!18474 = !DILocation(line: 3459, column: 9, scope: !18469)
!18475 = !DILocation(line: 3459, column: 13, scope: !18469)
!18476 = !DILocation(line: 3459, column: 7, scope: !18469)
!18477 = !DILocation(line: 3460, column: 4, scope: !18469)
!18478 = !DILocation(line: 3460, column: 12, scope: !18469)
!18479 = !DILocation(line: 3461, column: 39, scope: !18480)
!18480 = distinct !DILexicalBlock(scope: !18469, file: !3, line: 3460, column: 16)
!18481 = !DILocation(line: 3461, column: 43, scope: !18480)
!18482 = !DILocation(line: 3461, column: 14, scope: !18480)
!18483 = !DILocation(line: 3461, column: 12, scope: !18480)
!18484 = !DILocation(line: 3462, column: 9, scope: !18485)
!18485 = distinct !DILexicalBlock(scope: !18480, file: !3, line: 3462, column: 9)
!18486 = !DILocation(line: 3462, column: 16, scope: !18485)
!18487 = !DILocation(line: 3462, column: 9, scope: !18480)
!18488 = !DILocation(line: 3463, column: 6, scope: !18489)
!18489 = distinct !DILexicalBlock(scope: !18485, file: !3, line: 3462, column: 25)
!18490 = !DILocation(line: 3466, column: 10, scope: !18491)
!18491 = distinct !DILexicalBlock(scope: !18480, file: !3, line: 3466, column: 9)
!18492 = !DILocation(line: 3466, column: 14, scope: !18491)
!18493 = !DILocation(line: 3466, column: 17, scope: !18491)
!18494 = !DILocation(line: 3466, column: 27, scope: !18491)
!18495 = !DILocation(line: 3466, column: 31, scope: !18491)
!18496 = !DILocation(line: 3466, column: 39, scope: !18491)
!18497 = !DILocation(line: 3466, column: 42, scope: !18491)
!18498 = !DILocation(line: 3466, column: 9, scope: !18480)
!18499 = !DILocation(line: 3467, column: 16, scope: !18500)
!18500 = distinct !DILexicalBlock(scope: !18491, file: !3, line: 3466, column: 53)
!18501 = !DILocation(line: 3467, column: 13, scope: !18500)
!18502 = !DILocation(line: 3468, column: 5, scope: !18500)
!18503 = !DILocation(line: 3469, column: 7, scope: !18480)
!18504 = distinct !{!18504, !18477, !18505}
!18505 = !DILocation(line: 3470, column: 4, scope: !18469)
!18506 = !DILocation(line: 3472, column: 8, scope: !18507)
!18507 = distinct !DILexicalBlock(scope: !18469, file: !3, line: 3472, column: 8)
!18508 = !DILocation(line: 3472, column: 8, scope: !18469)
!18509 = !DILocation(line: 3474, column: 23, scope: !18510)
!18510 = distinct !DILexicalBlock(scope: !18507, file: !3, line: 3472, column: 16)
!18511 = !DILocation(line: 3474, column: 36, scope: !18510)
!18512 = !DILocation(line: 3474, column: 45, scope: !18510)
!18513 = !DILocation(line: 3474, column: 49, scope: !18510)
!18514 = !DILocation(line: 3474, column: 43, scope: !18510)
!18515 = !DILocation(line: 3474, column: 35, scope: !18510)
!18516 = !DILocation(line: 3474, column: 56, scope: !18510)
!18517 = !DILocation(line: 3474, column: 13, scope: !18510)
!18518 = !DILocation(line: 3474, column: 11, scope: !18510)
!18519 = !DILocation(line: 3475, column: 11, scope: !18510)
!18520 = !DILocation(line: 3475, column: 9, scope: !18510)
!18521 = !DILocation(line: 3477, column: 9, scope: !18510)
!18522 = !DILocation(line: 3477, column: 13, scope: !18510)
!18523 = !DILocation(line: 3477, column: 7, scope: !18510)
!18524 = !DILocation(line: 3478, column: 10, scope: !18510)
!18525 = !DILocation(line: 3478, column: 14, scope: !18510)
!18526 = !DILocation(line: 3478, column: 8, scope: !18510)
!18527 = !DILocation(line: 3480, column: 5, scope: !18510)
!18528 = !DILocation(line: 3480, column: 13, scope: !18510)
!18529 = !DILocation(line: 3482, column: 13, scope: !18530)
!18530 = distinct !DILexicalBlock(scope: !18510, file: !3, line: 3480, column: 17)
!18531 = !DILocation(line: 3482, column: 6, scope: !18530)
!18532 = !DILocation(line: 3482, column: 18, scope: !18530)
!18533 = !DILocation(line: 3483, column: 24, scope: !18530)
!18534 = !DILocation(line: 3483, column: 34, scope: !18530)
!18535 = !DILocation(line: 3483, column: 38, scope: !18530)
!18536 = !DILocation(line: 3483, column: 6, scope: !18530)
!18537 = !DILocation(line: 3484, column: 9, scope: !18530)
!18538 = !DILocation(line: 3486, column: 40, scope: !18530)
!18539 = !DILocation(line: 3486, column: 44, scope: !18530)
!18540 = !DILocation(line: 3486, column: 15, scope: !18530)
!18541 = !DILocation(line: 3486, column: 13, scope: !18530)
!18542 = !DILocation(line: 3487, column: 10, scope: !18543)
!18543 = distinct !DILexicalBlock(scope: !18530, file: !3, line: 3487, column: 10)
!18544 = !DILocation(line: 3487, column: 17, scope: !18543)
!18545 = !DILocation(line: 3487, column: 10, scope: !18530)
!18546 = !DILocation(line: 3488, column: 7, scope: !18547)
!18547 = distinct !DILexicalBlock(scope: !18543, file: !3, line: 3487, column: 26)
!18548 = !DILocation(line: 3491, column: 11, scope: !18549)
!18549 = distinct !DILexicalBlock(scope: !18530, file: !3, line: 3491, column: 10)
!18550 = !DILocation(line: 3491, column: 15, scope: !18549)
!18551 = !DILocation(line: 3491, column: 18, scope: !18549)
!18552 = !DILocation(line: 3491, column: 28, scope: !18549)
!18553 = !DILocation(line: 3491, column: 32, scope: !18549)
!18554 = !DILocation(line: 3491, column: 40, scope: !18549)
!18555 = !DILocation(line: 3491, column: 43, scope: !18549)
!18556 = !DILocation(line: 3491, column: 10, scope: !18530)
!18557 = !DILocation(line: 3493, column: 14, scope: !18558)
!18558 = distinct !DILexicalBlock(scope: !18559, file: !3, line: 3493, column: 7)
!18559 = distinct !DILexicalBlock(scope: !18549, file: !3, line: 3491, column: 54)
!18560 = !DILocation(line: 3493, column: 12, scope: !18558)
!18561 = !DILocation(line: 3493, column: 19, scope: !18562)
!18562 = distinct !DILexicalBlock(scope: !18558, file: !3, line: 3493, column: 7)
!18563 = !DILocation(line: 3493, column: 23, scope: !18562)
!18564 = !DILocation(line: 3493, column: 21, scope: !18562)
!18565 = !DILocation(line: 3493, column: 7, scope: !18558)
!18566 = !DILocation(line: 3494, column: 25, scope: !18567)
!18567 = distinct !DILexicalBlock(scope: !18562, file: !3, line: 3493, column: 41)
!18568 = !DILocation(line: 3494, column: 27, scope: !18567)
!18569 = !DILocation(line: 3494, column: 17, scope: !18567)
!18570 = !DILocation(line: 3494, column: 35, scope: !18567)
!18571 = !DILocation(line: 3494, column: 47, scope: !18567)
!18572 = !DILocation(line: 3494, column: 34, scope: !18567)
!18573 = !DILocation(line: 3494, column: 32, scope: !18567)
!18574 = !DILocation(line: 3494, column: 15, scope: !18567)
!18575 = !DILocation(line: 3496, column: 15, scope: !18567)
!18576 = !DILocation(line: 3496, column: 8, scope: !18567)
!18577 = !DILocation(line: 3496, column: 20, scope: !18567)
!18578 = !DILocation(line: 3497, column: 23, scope: !18567)
!18579 = !DILocation(line: 3497, column: 28, scope: !18567)
!18580 = !DILocation(line: 3497, column: 33, scope: !18567)
!18581 = !DILocation(line: 3497, column: 37, scope: !18567)
!18582 = !DILocation(line: 3497, column: 42, scope: !18567)
!18583 = !DILocation(line: 3497, column: 50, scope: !18567)
!18584 = !DILocation(line: 3497, column: 55, scope: !18567)
!18585 = !DILocation(line: 3497, column: 8, scope: !18567)
!18586 = !DILocation(line: 3498, column: 11, scope: !18567)
!18587 = !DILocation(line: 3499, column: 7, scope: !18567)
!18588 = !DILocation(line: 3493, column: 37, scope: !18562)
!18589 = !DILocation(line: 3493, column: 7, scope: !18562)
!18590 = distinct !{!18590, !18565, !18591}
!18591 = !DILocation(line: 3499, column: 7, scope: !18558)
!18592 = !DILocation(line: 3501, column: 6, scope: !18559)
!18593 = !DILocation(line: 3502, column: 8, scope: !18530)
!18594 = distinct !{!18594, !18527, !18595}
!18595 = !DILocation(line: 3503, column: 5, scope: !18510)
!18596 = !DILocation(line: 3505, column: 5, scope: !18510)
!18597 = !DILocation(line: 3505, column: 15, scope: !18510)
!18598 = !DILocation(line: 3505, column: 19, scope: !18510)
!18599 = !DILocation(line: 3506, column: 14, scope: !18510)
!18600 = !DILocation(line: 3506, column: 5, scope: !18510)
!18601 = !DILocation(line: 3506, column: 9, scope: !18510)
!18602 = !DILocation(line: 3506, column: 12, scope: !18510)
!18603 = !DILocation(line: 3507, column: 18, scope: !18510)
!18604 = !DILocation(line: 3507, column: 5, scope: !18510)
!18605 = !DILocation(line: 3507, column: 9, scope: !18510)
!18606 = !DILocation(line: 3507, column: 15, scope: !18510)
!18607 = !DILocation(line: 3509, column: 9, scope: !18608)
!18608 = distinct !DILexicalBlock(scope: !18510, file: !3, line: 3509, column: 9)
!18609 = !DILocation(line: 3509, column: 13, scope: !18608)
!18610 = !DILocation(line: 3509, column: 18, scope: !18608)
!18611 = !DILocation(line: 3509, column: 9, scope: !18510)
!18612 = !DILocation(line: 3510, column: 27, scope: !18613)
!18613 = distinct !DILexicalBlock(scope: !18608, file: !3, line: 3509, column: 30)
!18614 = !DILocation(line: 3510, column: 6, scope: !18613)
!18615 = !DILocation(line: 3511, column: 5, scope: !18613)
!18616 = !DILocation(line: 3512, column: 4, scope: !18510)
!18617 = !DILocation(line: 3513, column: 3, scope: !18469)
!18618 = !DILocation(line: 3514, column: 12, scope: !18619)
!18619 = distinct !DILexicalBlock(scope: !18464, file: !3, line: 3514, column: 12)
!18620 = !DILocation(line: 3514, column: 16, scope: !18619)
!18621 = !DILocation(line: 3514, column: 21, scope: !18619)
!18622 = !DILocation(line: 3514, column: 12, scope: !18464)
!18623 = !DILocation(line: 3558, column: 11, scope: !18624)
!18624 = distinct !DILexicalBlock(scope: !18619, file: !3, line: 3514, column: 34)
!18625 = !DILocation(line: 3558, column: 37, scope: !18624)
!18626 = !DILocation(line: 3558, column: 41, scope: !18624)
!18627 = !DILocation(line: 3558, column: 35, scope: !18624)
!18628 = !DILocation(line: 3558, column: 9, scope: !18624)
!18629 = !DILocation(line: 3559, column: 11, scope: !18624)
!18630 = !DILocation(line: 3559, column: 37, scope: !18624)
!18631 = !DILocation(line: 3559, column: 41, scope: !18624)
!18632 = !DILocation(line: 3559, column: 35, scope: !18624)
!18633 = !DILocation(line: 3559, column: 9, scope: !18624)
!18634 = !DILocation(line: 3560, column: 8, scope: !18624)
!18635 = !DILocation(line: 3563, column: 9, scope: !18624)
!18636 = !DILocation(line: 3563, column: 13, scope: !18624)
!18637 = !DILocation(line: 3563, column: 7, scope: !18624)
!18638 = !DILocation(line: 3564, column: 11, scope: !18639)
!18639 = distinct !DILexicalBlock(scope: !18624, file: !3, line: 3564, column: 4)
!18640 = !DILocation(line: 3564, column: 9, scope: !18639)
!18641 = !DILocation(line: 3564, column: 16, scope: !18642)
!18642 = distinct !DILexicalBlock(scope: !18639, file: !3, line: 3564, column: 4)
!18643 = !DILocation(line: 3564, column: 20, scope: !18642)
!18644 = !DILocation(line: 3564, column: 24, scope: !18642)
!18645 = !DILocation(line: 3564, column: 18, scope: !18642)
!18646 = !DILocation(line: 3564, column: 4, scope: !18639)
!18647 = !DILocation(line: 3565, column: 12, scope: !18648)
!18648 = distinct !DILexicalBlock(scope: !18649, file: !3, line: 3565, column: 5)
!18649 = distinct !DILexicalBlock(scope: !18642, file: !3, line: 3564, column: 36)
!18650 = !DILocation(line: 3565, column: 10, scope: !18648)
!18651 = !DILocation(line: 3565, column: 17, scope: !18652)
!18652 = distinct !DILexicalBlock(scope: !18648, file: !3, line: 3565, column: 5)
!18653 = !DILocation(line: 3565, column: 21, scope: !18652)
!18654 = !DILocation(line: 3565, column: 25, scope: !18652)
!18655 = !DILocation(line: 3565, column: 19, scope: !18652)
!18656 = !DILocation(line: 3565, column: 5, scope: !18648)
!18657 = !DILocation(line: 3566, column: 10, scope: !18658)
!18658 = distinct !DILexicalBlock(scope: !18659, file: !3, line: 3566, column: 10)
!18659 = distinct !DILexicalBlock(scope: !18652, file: !3, line: 3565, column: 37)
!18660 = !DILocation(line: 3566, column: 14, scope: !18658)
!18661 = !DILocation(line: 3566, column: 17, scope: !18658)
!18662 = !DILocation(line: 3566, column: 10, scope: !18659)
!18663 = !DILocation(line: 3567, column: 7, scope: !18664)
!18664 = distinct !DILexicalBlock(scope: !18658, file: !3, line: 3566, column: 27)
!18665 = !DILocation(line: 3567, column: 12, scope: !18664)
!18666 = !DILocation(line: 3567, column: 14, scope: !18664)
!18667 = !DILocation(line: 3568, column: 7, scope: !18664)
!18668 = !DILocation(line: 3568, column: 12, scope: !18664)
!18669 = !DILocation(line: 3568, column: 14, scope: !18664)
!18670 = !DILocation(line: 3569, column: 10, scope: !18664)
!18671 = !DILocation(line: 3570, column: 6, scope: !18664)
!18672 = !DILocation(line: 3571, column: 8, scope: !18659)
!18673 = !DILocation(line: 3572, column: 5, scope: !18659)
!18674 = !DILocation(line: 3565, column: 33, scope: !18652)
!18675 = !DILocation(line: 3565, column: 5, scope: !18652)
!18676 = distinct !{!18676, !18656, !18677}
!18677 = !DILocation(line: 3572, column: 5, scope: !18648)
!18678 = !DILocation(line: 3573, column: 4, scope: !18649)
!18679 = !DILocation(line: 3564, column: 32, scope: !18642)
!18680 = !DILocation(line: 3564, column: 4, scope: !18642)
!18681 = distinct !{!18681, !18646, !18682}
!18682 = !DILocation(line: 3573, column: 4, scope: !18639)
!18683 = !DILocation(line: 3574, column: 8, scope: !18684)
!18684 = distinct !DILexicalBlock(scope: !18624, file: !3, line: 3574, column: 8)
!18685 = !DILocation(line: 3574, column: 16, scope: !18684)
!18686 = !DILocation(line: 3574, column: 20, scope: !18684)
!18687 = !DILocation(line: 3574, column: 28, scope: !18684)
!18688 = !DILocation(line: 3574, column: 32, scope: !18684)
!18689 = !DILocation(line: 3574, column: 26, scope: !18684)
!18690 = !DILocation(line: 3574, column: 12, scope: !18684)
!18691 = !DILocation(line: 3574, column: 8, scope: !18624)
!18692 = !DILocalVariable(name: "countu", scope: !18693, file: !3, line: 3579, type: !22)
!18693 = distinct !DILexicalBlock(scope: !18684, file: !3, line: 3574, column: 40)
!18694 = !DILocation(line: 3579, column: 9, scope: !18693)
!18695 = !DILocation(line: 3579, column: 18, scope: !18693)
!18696 = !DILocation(line: 3579, column: 22, scope: !18693)
!18697 = !DILocation(line: 3579, column: 31, scope: !18693)
!18698 = !DILocation(line: 3579, column: 35, scope: !18693)
!18699 = !DILocation(line: 3579, column: 41, scope: !18693)
!18700 = !DILocation(line: 3579, column: 48, scope: !18693)
!18701 = !DILocation(line: 3579, column: 46, scope: !18693)
!18702 = !DILocation(line: 3579, column: 28, scope: !18693)
!18703 = !DILocalVariable(name: "tot", scope: !18693, file: !3, line: 3582, type: !22)
!18704 = !DILocation(line: 3582, column: 9, scope: !18693)
!18705 = !DILocation(line: 3582, column: 17, scope: !18693)
!18706 = !DILocation(line: 3582, column: 29, scope: !18693)
!18707 = !DILocation(line: 3582, column: 36, scope: !18693)
!18708 = !DILocation(line: 3582, column: 40, scope: !18693)
!18709 = !DILocation(line: 3582, column: 34, scope: !18693)
!18710 = !DILocation(line: 3582, column: 48, scope: !18693)
!18711 = !DILocation(line: 3582, column: 46, scope: !18693)
!18712 = !DILocation(line: 3582, column: 65, scope: !18693)
!18713 = !DILocation(line: 3582, column: 77, scope: !18693)
!18714 = !DILocation(line: 3582, column: 84, scope: !18693)
!18715 = !DILocation(line: 3582, column: 88, scope: !18693)
!18716 = !DILocation(line: 3582, column: 82, scope: !18693)
!18717 = !DILocation(line: 3582, column: 96, scope: !18693)
!18718 = !DILocation(line: 3582, column: 94, scope: !18693)
!18719 = !DILocation(line: 3582, column: 61, scope: !18693)
!18720 = !DILocation(line: 3584, column: 19, scope: !18693)
!18721 = !DILocation(line: 3584, column: 31, scope: !18693)
!18722 = !DILocation(line: 3584, column: 35, scope: !18693)
!18723 = !DILocation(line: 3584, column: 17, scope: !18693)
!18724 = !DILocation(line: 3584, column: 9, scope: !18693)
!18725 = !DILocation(line: 3585, column: 10, scope: !18693)
!18726 = !DILocation(line: 3585, column: 14, scope: !18693)
!18727 = !DILocation(line: 3585, column: 8, scope: !18693)
!18728 = !DILocation(line: 3587, column: 12, scope: !18729)
!18729 = distinct !DILexicalBlock(scope: !18693, file: !3, line: 3587, column: 5)
!18730 = !DILocation(line: 3587, column: 10, scope: !18729)
!18731 = !DILocation(line: 3587, column: 17, scope: !18732)
!18732 = distinct !DILexicalBlock(scope: !18729, file: !3, line: 3587, column: 5)
!18733 = !DILocation(line: 3587, column: 21, scope: !18732)
!18734 = !DILocation(line: 3587, column: 25, scope: !18732)
!18735 = !DILocation(line: 3587, column: 19, scope: !18732)
!18736 = !DILocation(line: 3587, column: 5, scope: !18729)
!18737 = !DILocation(line: 3588, column: 13, scope: !18738)
!18738 = distinct !DILexicalBlock(scope: !18739, file: !3, line: 3588, column: 6)
!18739 = distinct !DILexicalBlock(scope: !18732, file: !3, line: 3587, column: 37)
!18740 = !DILocation(line: 3588, column: 11, scope: !18738)
!18741 = !DILocation(line: 3588, column: 18, scope: !18742)
!18742 = distinct !DILexicalBlock(scope: !18738, file: !3, line: 3588, column: 6)
!18743 = !DILocation(line: 3588, column: 22, scope: !18742)
!18744 = !DILocation(line: 3588, column: 26, scope: !18742)
!18745 = !DILocation(line: 3588, column: 20, scope: !18742)
!18746 = !DILocation(line: 3588, column: 6, scope: !18738)
!18747 = !DILocation(line: 3589, column: 8, scope: !18748)
!18748 = distinct !DILexicalBlock(scope: !18742, file: !3, line: 3588, column: 38)
!18749 = !DILocation(line: 3589, column: 15, scope: !18748)
!18750 = !DILocation(line: 3589, column: 14, scope: !18748)
!18751 = !DILocation(line: 3590, column: 25, scope: !18748)
!18752 = !DILocation(line: 3590, column: 35, scope: !18748)
!18753 = !DILocation(line: 3590, column: 39, scope: !18748)
!18754 = !DILocation(line: 3590, column: 7, scope: !18748)
!18755 = !DILocation(line: 3591, column: 10, scope: !18748)
!18756 = !DILocation(line: 3592, column: 9, scope: !18748)
!18757 = !DILocation(line: 3593, column: 11, scope: !18758)
!18758 = distinct !DILexicalBlock(scope: !18748, file: !3, line: 3593, column: 11)
!18759 = !DILocation(line: 3593, column: 15, scope: !18758)
!18760 = !DILocation(line: 3593, column: 19, scope: !18758)
!18761 = !DILocation(line: 3593, column: 25, scope: !18758)
!18762 = !DILocation(line: 3593, column: 13, scope: !18758)
!18763 = !DILocation(line: 3593, column: 11, scope: !18748)
!18764 = !DILocation(line: 3594, column: 17, scope: !18765)
!18765 = distinct !DILexicalBlock(scope: !18758, file: !3, line: 3593, column: 30)
!18766 = !DILocation(line: 3594, column: 20, scope: !18765)
!18767 = !DILocation(line: 3594, column: 15, scope: !18765)
!18768 = !DILocation(line: 3595, column: 15, scope: !18769)
!18769 = distinct !DILexicalBlock(scope: !18765, file: !3, line: 3595, column: 8)
!18770 = !DILocation(line: 3595, column: 13, scope: !18769)
!18771 = !DILocation(line: 3595, column: 20, scope: !18772)
!18772 = distinct !DILexicalBlock(scope: !18769, file: !3, line: 3595, column: 8)
!18773 = !DILocation(line: 3595, column: 24, scope: !18772)
!18774 = !DILocation(line: 3595, column: 22, scope: !18772)
!18775 = !DILocation(line: 3595, column: 8, scope: !18769)
!18776 = !DILocation(line: 3596, column: 26, scope: !18777)
!18777 = distinct !DILexicalBlock(scope: !18772, file: !3, line: 3595, column: 42)
!18778 = !DILocation(line: 3596, column: 28, scope: !18777)
!18779 = !DILocation(line: 3596, column: 18, scope: !18777)
!18780 = !DILocation(line: 3596, column: 36, scope: !18777)
!18781 = !DILocation(line: 3596, column: 48, scope: !18777)
!18782 = !DILocation(line: 3596, column: 35, scope: !18777)
!18783 = !DILocation(line: 3596, column: 33, scope: !18777)
!18784 = !DILocation(line: 3596, column: 16, scope: !18777)
!18785 = !DILocation(line: 3597, column: 10, scope: !18777)
!18786 = !DILocation(line: 3597, column: 17, scope: !18777)
!18787 = !DILocation(line: 3597, column: 16, scope: !18777)
!18788 = !DILocation(line: 3598, column: 24, scope: !18777)
!18789 = !DILocation(line: 3598, column: 29, scope: !18777)
!18790 = !DILocation(line: 3598, column: 34, scope: !18777)
!18791 = !DILocation(line: 3598, column: 42, scope: !18777)
!18792 = !DILocation(line: 3598, column: 47, scope: !18777)
!18793 = !DILocation(line: 3598, column: 51, scope: !18777)
!18794 = !DILocation(line: 3598, column: 56, scope: !18777)
!18795 = !DILocation(line: 3598, column: 9, scope: !18777)
!18796 = !DILocation(line: 3599, column: 12, scope: !18777)
!18797 = !DILocation(line: 3600, column: 8, scope: !18777)
!18798 = !DILocation(line: 3595, column: 38, scope: !18772)
!18799 = !DILocation(line: 3595, column: 8, scope: !18772)
!18800 = distinct !{!18800, !18775, !18801}
!18801 = !DILocation(line: 3600, column: 8, scope: !18769)
!18802 = !DILocation(line: 3601, column: 7, scope: !18765)
!18803 = !DILocation(line: 3602, column: 6, scope: !18748)
!18804 = !DILocation(line: 3588, column: 34, scope: !18742)
!18805 = !DILocation(line: 3588, column: 6, scope: !18742)
!18806 = distinct !{!18806, !18746, !18807}
!18807 = !DILocation(line: 3602, column: 6, scope: !18738)
!18808 = !DILocation(line: 3603, column: 13, scope: !18739)
!18809 = !DILocation(line: 3603, column: 27, scope: !18739)
!18810 = !DILocation(line: 3603, column: 25, scope: !18739)
!18811 = !DILocation(line: 3603, column: 10, scope: !18739)
!18812 = !DILocation(line: 3604, column: 5, scope: !18739)
!18813 = !DILocation(line: 3587, column: 33, scope: !18732)
!18814 = !DILocation(line: 3587, column: 5, scope: !18732)
!18815 = distinct !{!18815, !18736, !18816}
!18816 = !DILocation(line: 3604, column: 5, scope: !18729)
!18817 = !DILocation(line: 3606, column: 11, scope: !18693)
!18818 = !DILocation(line: 3606, column: 21, scope: !18693)
!18819 = !DILocation(line: 3606, column: 33, scope: !18693)
!18820 = !DILocation(line: 3606, column: 40, scope: !18693)
!18821 = !DILocation(line: 3606, column: 44, scope: !18693)
!18822 = !DILocation(line: 3606, column: 38, scope: !18693)
!18823 = !DILocation(line: 3606, column: 52, scope: !18693)
!18824 = !DILocation(line: 3606, column: 50, scope: !18693)
!18825 = !DILocation(line: 3606, column: 17, scope: !18693)
!18826 = !DILocation(line: 3606, column: 9, scope: !18693)
!18827 = !DILocation(line: 3607, column: 10, scope: !18693)
!18828 = !DILocation(line: 3607, column: 19, scope: !18693)
!18829 = !DILocation(line: 3607, column: 31, scope: !18693)
!18830 = !DILocation(line: 3607, column: 40, scope: !18693)
!18831 = !DILocation(line: 3607, column: 52, scope: !18693)
!18832 = !DILocation(line: 3607, column: 59, scope: !18693)
!18833 = !DILocation(line: 3607, column: 63, scope: !18693)
!18834 = !DILocation(line: 3607, column: 57, scope: !18693)
!18835 = !DILocation(line: 3607, column: 71, scope: !18693)
!18836 = !DILocation(line: 3607, column: 69, scope: !18693)
!18837 = !DILocation(line: 3607, column: 36, scope: !18693)
!18838 = !DILocation(line: 3607, column: 16, scope: !18693)
!18839 = !DILocation(line: 3607, column: 8, scope: !18693)
!18840 = !DILocation(line: 3608, column: 14, scope: !18693)
!18841 = !DILocation(line: 3608, column: 12, scope: !18693)
!18842 = !DILocation(line: 3609, column: 12, scope: !18843)
!18843 = distinct !DILexicalBlock(scope: !18693, file: !3, line: 3609, column: 5)
!18844 = !DILocation(line: 3609, column: 10, scope: !18843)
!18845 = !DILocation(line: 3609, column: 17, scope: !18846)
!18846 = distinct !DILexicalBlock(scope: !18843, file: !3, line: 3609, column: 5)
!18847 = !DILocation(line: 3609, column: 21, scope: !18846)
!18848 = !DILocation(line: 3609, column: 25, scope: !18846)
!18849 = !DILocation(line: 3609, column: 19, scope: !18846)
!18850 = !DILocation(line: 3609, column: 5, scope: !18843)
!18851 = !DILocation(line: 3611, column: 13, scope: !18852)
!18852 = distinct !DILexicalBlock(scope: !18853, file: !3, line: 3611, column: 6)
!18853 = distinct !DILexicalBlock(scope: !18846, file: !3, line: 3609, column: 37)
!18854 = !DILocation(line: 3611, column: 11, scope: !18852)
!18855 = !DILocation(line: 3611, column: 18, scope: !18856)
!18856 = distinct !DILexicalBlock(scope: !18852, file: !3, line: 3611, column: 6)
!18857 = !DILocation(line: 3611, column: 23, scope: !18856)
!18858 = !DILocation(line: 3611, column: 35, scope: !18856)
!18859 = !DILocation(line: 3611, column: 42, scope: !18856)
!18860 = !DILocation(line: 3611, column: 46, scope: !18856)
!18861 = !DILocation(line: 3611, column: 40, scope: !18856)
!18862 = !DILocation(line: 3611, column: 54, scope: !18856)
!18863 = !DILocation(line: 3611, column: 52, scope: !18856)
!18864 = !DILocation(line: 3611, column: 20, scope: !18856)
!18865 = !DILocation(line: 3611, column: 6, scope: !18852)
!18866 = !DILocalVariable(name: "tmp", scope: !18867, file: !3, line: 3612, type: !3093)
!18867 = distinct !DILexicalBlock(scope: !18856, file: !3, line: 3611, column: 72)
!18868 = !DILocation(line: 3612, column: 15, scope: !18867)
!18869 = !DILocation(line: 3612, column: 21, scope: !18867)
!18870 = !DILocation(line: 3613, column: 14, scope: !18871)
!18871 = distinct !DILexicalBlock(scope: !18867, file: !3, line: 3613, column: 7)
!18872 = !DILocation(line: 3613, column: 12, scope: !18871)
!18873 = !DILocation(line: 3613, column: 19, scope: !18874)
!18874 = distinct !DILexicalBlock(scope: !18871, file: !3, line: 3613, column: 7)
!18875 = !DILocation(line: 3613, column: 23, scope: !18874)
!18876 = !DILocation(line: 3613, column: 21, scope: !18874)
!18877 = !DILocation(line: 3613, column: 7, scope: !18871)
!18878 = !DILocation(line: 3614, column: 25, scope: !18879)
!18879 = distinct !DILexicalBlock(scope: !18874, file: !3, line: 3613, column: 41)
!18880 = !DILocation(line: 3614, column: 27, scope: !18879)
!18881 = !DILocation(line: 3614, column: 17, scope: !18879)
!18882 = !DILocation(line: 3614, column: 35, scope: !18879)
!18883 = !DILocation(line: 3614, column: 47, scope: !18879)
!18884 = !DILocation(line: 3614, column: 34, scope: !18879)
!18885 = !DILocation(line: 3614, column: 32, scope: !18879)
!18886 = !DILocation(line: 3614, column: 15, scope: !18879)
!18887 = !DILocation(line: 3615, column: 9, scope: !18879)
!18888 = !DILocation(line: 3615, column: 16, scope: !18879)
!18889 = !DILocation(line: 3615, column: 15, scope: !18879)
!18890 = !DILocation(line: 3616, column: 23, scope: !18879)
!18891 = !DILocation(line: 3616, column: 28, scope: !18879)
!18892 = !DILocation(line: 3616, column: 33, scope: !18879)
!18893 = !DILocation(line: 3616, column: 41, scope: !18879)
!18894 = !DILocation(line: 3616, column: 46, scope: !18879)
!18895 = !DILocation(line: 3616, column: 50, scope: !18879)
!18896 = !DILocation(line: 3616, column: 55, scope: !18879)
!18897 = !DILocation(line: 3616, column: 8, scope: !18879)
!18898 = !DILocation(line: 3617, column: 15, scope: !18879)
!18899 = !DILocation(line: 3617, column: 12, scope: !18879)
!18900 = !DILocation(line: 3618, column: 7, scope: !18879)
!18901 = !DILocation(line: 3613, column: 37, scope: !18874)
!18902 = !DILocation(line: 3613, column: 7, scope: !18874)
!18903 = distinct !{!18903, !18877, !18904}
!18904 = !DILocation(line: 3618, column: 7, scope: !18871)
!18905 = !DILocation(line: 3619, column: 9, scope: !18867)
!18906 = !DILocation(line: 3620, column: 13, scope: !18867)
!18907 = !DILocation(line: 3621, column: 10, scope: !18867)
!18908 = !DILocation(line: 3622, column: 6, scope: !18867)
!18909 = !DILocation(line: 3611, column: 68, scope: !18856)
!18910 = !DILocation(line: 3611, column: 6, scope: !18856)
!18911 = distinct !{!18911, !18865, !18912}
!18912 = !DILocation(line: 3622, column: 6, scope: !18852)
!18913 = !DILocation(line: 3623, column: 12, scope: !18853)
!18914 = !DILocation(line: 3623, column: 26, scope: !18853)
!18915 = !DILocation(line: 3623, column: 24, scope: !18853)
!18916 = !DILocation(line: 3623, column: 9, scope: !18853)
!18917 = !DILocation(line: 3624, column: 13, scope: !18853)
!18918 = !DILocation(line: 3624, column: 27, scope: !18853)
!18919 = !DILocation(line: 3624, column: 25, scope: !18853)
!18920 = !DILocation(line: 3624, column: 10, scope: !18853)
!18921 = !DILocation(line: 3625, column: 16, scope: !18853)
!18922 = !DILocation(line: 3625, column: 30, scope: !18853)
!18923 = !DILocation(line: 3625, column: 28, scope: !18853)
!18924 = !DILocation(line: 3625, column: 13, scope: !18853)
!18925 = !DILocation(line: 3626, column: 5, scope: !18853)
!18926 = !DILocation(line: 3609, column: 33, scope: !18846)
!18927 = !DILocation(line: 3609, column: 5, scope: !18846)
!18928 = distinct !{!18928, !18850, !18929}
!18929 = !DILocation(line: 3626, column: 5, scope: !18843)
!18930 = !DILocation(line: 3627, column: 5, scope: !18693)
!18931 = !DILocation(line: 3627, column: 15, scope: !18693)
!18932 = !DILocation(line: 3627, column: 19, scope: !18693)
!18933 = !DILocation(line: 3628, column: 14, scope: !18693)
!18934 = !DILocation(line: 3628, column: 5, scope: !18693)
!18935 = !DILocation(line: 3628, column: 9, scope: !18693)
!18936 = !DILocation(line: 3628, column: 12, scope: !18693)
!18937 = !DILocation(line: 3629, column: 18, scope: !18693)
!18938 = !DILocation(line: 3629, column: 30, scope: !18693)
!18939 = !DILocation(line: 3629, column: 37, scope: !18693)
!18940 = !DILocation(line: 3629, column: 41, scope: !18693)
!18941 = !DILocation(line: 3629, column: 35, scope: !18693)
!18942 = !DILocation(line: 3629, column: 49, scope: !18693)
!18943 = !DILocation(line: 3629, column: 47, scope: !18693)
!18944 = !DILocation(line: 3629, column: 5, scope: !18693)
!18945 = !DILocation(line: 3629, column: 9, scope: !18693)
!18946 = !DILocation(line: 3629, column: 15, scope: !18693)
!18947 = !DILocation(line: 3630, column: 18, scope: !18693)
!18948 = !DILocation(line: 3630, column: 30, scope: !18693)
!18949 = !DILocation(line: 3630, column: 37, scope: !18693)
!18950 = !DILocation(line: 3630, column: 41, scope: !18693)
!18951 = !DILocation(line: 3630, column: 35, scope: !18693)
!18952 = !DILocation(line: 3630, column: 49, scope: !18693)
!18953 = !DILocation(line: 3630, column: 47, scope: !18693)
!18954 = !DILocation(line: 3630, column: 5, scope: !18693)
!18955 = !DILocation(line: 3630, column: 9, scope: !18693)
!18956 = !DILocation(line: 3630, column: 15, scope: !18693)
!18957 = !DILocation(line: 3631, column: 26, scope: !18693)
!18958 = !DILocation(line: 3631, column: 5, scope: !18693)
!18959 = !DILocation(line: 3632, column: 26, scope: !18693)
!18960 = !DILocation(line: 3632, column: 5, scope: !18693)
!18961 = !DILocation(line: 3633, column: 4, scope: !18693)
!18962 = !DILocation(line: 3636, column: 9, scope: !18963)
!18963 = distinct !DILexicalBlock(scope: !18684, file: !3, line: 3634, column: 9)
!18964 = !DILocation(line: 3637, column: 12, scope: !18965)
!18965 = distinct !DILexicalBlock(scope: !18963, file: !3, line: 3637, column: 5)
!18966 = !DILocation(line: 3637, column: 10, scope: !18965)
!18967 = !DILocation(line: 3637, column: 17, scope: !18968)
!18968 = distinct !DILexicalBlock(scope: !18965, file: !3, line: 3637, column: 5)
!18969 = !DILocation(line: 3637, column: 21, scope: !18968)
!18970 = !DILocation(line: 3637, column: 25, scope: !18968)
!18971 = !DILocation(line: 3637, column: 31, scope: !18968)
!18972 = !DILocation(line: 3637, column: 19, scope: !18968)
!18973 = !DILocation(line: 3637, column: 5, scope: !18965)
!18974 = !DILocation(line: 3638, column: 10, scope: !18975)
!18975 = distinct !DILexicalBlock(scope: !18976, file: !3, line: 3638, column: 10)
!18976 = distinct !DILexicalBlock(scope: !18968, file: !3, line: 3637, column: 41)
!18977 = !DILocation(line: 3638, column: 15, scope: !18975)
!18978 = !DILocation(line: 3638, column: 21, scope: !18975)
!18979 = !DILocation(line: 3638, column: 25, scope: !18975)
!18980 = !DILocation(line: 3638, column: 18, scope: !18975)
!18981 = !DILocation(line: 3638, column: 31, scope: !18975)
!18982 = !DILocation(line: 3638, column: 34, scope: !18975)
!18983 = !DILocation(line: 3638, column: 39, scope: !18975)
!18984 = !DILocation(line: 3638, column: 41, scope: !18975)
!18985 = !DILocation(line: 3638, column: 49, scope: !18975)
!18986 = !DILocation(line: 3638, column: 53, scope: !18975)
!18987 = !DILocation(line: 3638, column: 46, scope: !18975)
!18988 = !DILocation(line: 3638, column: 10, scope: !18976)
!18989 = !DILocation(line: 3638, column: 67, scope: !18975)
!18990 = !DILocation(line: 3638, column: 64, scope: !18975)
!18991 = !DILocation(line: 3638, column: 60, scope: !18975)
!18992 = !DILocation(line: 3639, column: 5, scope: !18976)
!18993 = !DILocation(line: 3637, column: 37, scope: !18968)
!18994 = !DILocation(line: 3637, column: 5, scope: !18968)
!18995 = distinct !{!18995, !18973, !18996}
!18996 = !DILocation(line: 3639, column: 5, scope: !18965)
!18997 = !DILocation(line: 3641, column: 9, scope: !18998)
!18998 = distinct !DILexicalBlock(scope: !18963, file: !3, line: 3641, column: 9)
!18999 = !DILocation(line: 3641, column: 9, scope: !18963)
!19000 = !DILocation(line: 3642, column: 20, scope: !19001)
!19001 = distinct !DILexicalBlock(scope: !18998, file: !3, line: 3641, column: 14)
!19002 = !DILocation(line: 3642, column: 33, scope: !19001)
!19003 = !DILocation(line: 3642, column: 39, scope: !19001)
!19004 = !DILocation(line: 3642, column: 43, scope: !19001)
!19005 = !DILocation(line: 3642, column: 37, scope: !19001)
!19006 = !DILocation(line: 3642, column: 52, scope: !19001)
!19007 = !DILocation(line: 3642, column: 56, scope: !19001)
!19008 = !DILocation(line: 3642, column: 50, scope: !19001)
!19009 = !DILocation(line: 3642, column: 32, scope: !19001)
!19010 = !DILocation(line: 3642, column: 62, scope: !19001)
!19011 = !DILocation(line: 3642, column: 18, scope: !19001)
!19012 = !DILocation(line: 3642, column: 10, scope: !19001)
!19013 = !DILocation(line: 3643, column: 11, scope: !19001)
!19014 = !DILocation(line: 3643, column: 15, scope: !19001)
!19015 = !DILocation(line: 3643, column: 9, scope: !19001)
!19016 = !DILocation(line: 3644, column: 13, scope: !19017)
!19017 = distinct !DILexicalBlock(scope: !19001, file: !3, line: 3644, column: 6)
!19018 = !DILocation(line: 3644, column: 11, scope: !19017)
!19019 = !DILocation(line: 3644, column: 18, scope: !19020)
!19020 = distinct !DILexicalBlock(scope: !19017, file: !3, line: 3644, column: 6)
!19021 = !DILocation(line: 3644, column: 22, scope: !19020)
!19022 = !DILocation(line: 3644, column: 26, scope: !19020)
!19023 = !DILocation(line: 3644, column: 20, scope: !19020)
!19024 = !DILocation(line: 3644, column: 6, scope: !19017)
!19025 = !DILocation(line: 3645, column: 14, scope: !19026)
!19026 = distinct !DILexicalBlock(scope: !19027, file: !3, line: 3645, column: 7)
!19027 = distinct !DILexicalBlock(scope: !19020, file: !3, line: 3644, column: 38)
!19028 = !DILocation(line: 3645, column: 12, scope: !19026)
!19029 = !DILocation(line: 3645, column: 19, scope: !19030)
!19030 = distinct !DILexicalBlock(scope: !19026, file: !3, line: 3645, column: 7)
!19031 = !DILocation(line: 3645, column: 23, scope: !19030)
!19032 = !DILocation(line: 3645, column: 27, scope: !19030)
!19033 = !DILocation(line: 3645, column: 21, scope: !19030)
!19034 = !DILocation(line: 3645, column: 7, scope: !19026)
!19035 = !DILocation(line: 3646, column: 9, scope: !19036)
!19036 = distinct !DILexicalBlock(scope: !19030, file: !3, line: 3645, column: 39)
!19037 = !DILocation(line: 3646, column: 16, scope: !19036)
!19038 = !DILocation(line: 3646, column: 15, scope: !19036)
!19039 = !DILocation(line: 3647, column: 26, scope: !19036)
!19040 = !DILocation(line: 3647, column: 36, scope: !19036)
!19041 = !DILocation(line: 3647, column: 40, scope: !19036)
!19042 = !DILocation(line: 3647, column: 8, scope: !19036)
!19043 = !DILocation(line: 3648, column: 11, scope: !19036)
!19044 = !DILocation(line: 3649, column: 10, scope: !19036)
!19045 = !DILocation(line: 3650, column: 7, scope: !19036)
!19046 = !DILocation(line: 3645, column: 35, scope: !19030)
!19047 = !DILocation(line: 3645, column: 7, scope: !19030)
!19048 = distinct !{!19048, !19034, !19049}
!19049 = !DILocation(line: 3650, column: 7, scope: !19026)
!19050 = !DILocation(line: 3651, column: 13, scope: !19051)
!19051 = distinct !DILexicalBlock(scope: !19027, file: !3, line: 3651, column: 12)
!19052 = !DILocation(line: 3651, column: 17, scope: !19051)
!19053 = !DILocation(line: 3651, column: 21, scope: !19051)
!19054 = !DILocation(line: 3651, column: 27, scope: !19051)
!19055 = !DILocation(line: 3651, column: 15, scope: !19051)
!19056 = !DILocation(line: 3651, column: 32, scope: !19051)
!19057 = !DILocation(line: 3651, column: 35, scope: !19051)
!19058 = !DILocation(line: 3651, column: 40, scope: !19051)
!19059 = !DILocation(line: 3651, column: 46, scope: !19051)
!19060 = !DILocation(line: 3651, column: 50, scope: !19051)
!19061 = !DILocation(line: 3651, column: 43, scope: !19051)
!19062 = !DILocation(line: 3651, column: 56, scope: !19051)
!19063 = !DILocation(line: 3651, column: 59, scope: !19051)
!19064 = !DILocation(line: 3651, column: 64, scope: !19051)
!19065 = !DILocation(line: 3651, column: 66, scope: !19051)
!19066 = !DILocation(line: 3651, column: 74, scope: !19051)
!19067 = !DILocation(line: 3651, column: 78, scope: !19051)
!19068 = !DILocation(line: 3651, column: 71, scope: !19051)
!19069 = !DILocation(line: 3651, column: 12, scope: !19027)
!19070 = !DILocation(line: 3652, column: 15, scope: !19071)
!19071 = distinct !DILexicalBlock(scope: !19072, file: !3, line: 3652, column: 8)
!19072 = distinct !DILexicalBlock(scope: !19051, file: !3, line: 3651, column: 85)
!19073 = !DILocation(line: 3652, column: 13, scope: !19071)
!19074 = !DILocation(line: 3652, column: 20, scope: !19075)
!19075 = distinct !DILexicalBlock(scope: !19071, file: !3, line: 3652, column: 8)
!19076 = !DILocation(line: 3652, column: 24, scope: !19075)
!19077 = !DILocation(line: 3652, column: 22, scope: !19075)
!19078 = !DILocation(line: 3652, column: 8, scope: !19071)
!19079 = !DILocation(line: 3653, column: 26, scope: !19080)
!19080 = distinct !DILexicalBlock(scope: !19075, file: !3, line: 3652, column: 42)
!19081 = !DILocation(line: 3653, column: 28, scope: !19080)
!19082 = !DILocation(line: 3653, column: 18, scope: !19080)
!19083 = !DILocation(line: 3653, column: 36, scope: !19080)
!19084 = !DILocation(line: 3653, column: 48, scope: !19080)
!19085 = !DILocation(line: 3653, column: 35, scope: !19080)
!19086 = !DILocation(line: 3653, column: 33, scope: !19080)
!19087 = !DILocation(line: 3653, column: 16, scope: !19080)
!19088 = !DILocation(line: 3654, column: 18, scope: !19080)
!19089 = !DILocation(line: 3654, column: 23, scope: !19080)
!19090 = !DILocation(line: 3654, column: 27, scope: !19080)
!19091 = !DILocation(line: 3654, column: 21, scope: !19080)
!19092 = !DILocation(line: 3654, column: 16, scope: !19080)
!19093 = !DILocation(line: 3655, column: 16, scope: !19094)
!19094 = distinct !DILexicalBlock(scope: !19080, file: !3, line: 3655, column: 9)
!19095 = !DILocation(line: 3655, column: 14, scope: !19094)
!19096 = !DILocation(line: 3655, column: 21, scope: !19097)
!19097 = distinct !DILexicalBlock(scope: !19094, file: !3, line: 3655, column: 9)
!19098 = !DILocation(line: 3655, column: 25, scope: !19097)
!19099 = !DILocation(line: 3655, column: 29, scope: !19097)
!19100 = !DILocation(line: 3655, column: 23, scope: !19097)
!19101 = !DILocation(line: 3655, column: 9, scope: !19094)
!19102 = !DILocation(line: 3663, column: 11, scope: !19103)
!19103 = distinct !DILexicalBlock(scope: !19097, file: !3, line: 3655, column: 41)
!19104 = !DILocation(line: 3663, column: 18, scope: !19103)
!19105 = !DILocation(line: 3663, column: 17, scope: !19103)
!19106 = !DILocation(line: 3664, column: 25, scope: !19103)
!19107 = !DILocation(line: 3664, column: 30, scope: !19103)
!19108 = !DILocation(line: 3664, column: 35, scope: !19103)
!19109 = !DILocation(line: 3664, column: 43, scope: !19103)
!19110 = !DILocation(line: 3664, column: 48, scope: !19103)
!19111 = !DILocation(line: 3664, column: 52, scope: !19103)
!19112 = !DILocation(line: 3664, column: 57, scope: !19103)
!19113 = !DILocation(line: 3664, column: 10, scope: !19103)
!19114 = !DILocation(line: 3665, column: 13, scope: !19103)
!19115 = !DILocation(line: 3667, column: 16, scope: !19103)
!19116 = !DILocation(line: 3668, column: 12, scope: !19103)
!19117 = !DILocation(line: 3669, column: 9, scope: !19103)
!19118 = !DILocation(line: 3655, column: 37, scope: !19097)
!19119 = !DILocation(line: 3655, column: 9, scope: !19097)
!19120 = distinct !{!19120, !19101, !19121}
!19121 = !DILocation(line: 3669, column: 9, scope: !19094)
!19122 = !DILocation(line: 3670, column: 15, scope: !19080)
!19123 = !DILocation(line: 3670, column: 19, scope: !19080)
!19124 = !DILocation(line: 3670, column: 12, scope: !19080)
!19125 = !DILocation(line: 3671, column: 8, scope: !19080)
!19126 = !DILocation(line: 3652, column: 38, scope: !19075)
!19127 = !DILocation(line: 3652, column: 8, scope: !19075)
!19128 = distinct !{!19128, !19078, !19129}
!19129 = !DILocation(line: 3671, column: 8, scope: !19071)
!19130 = !DILocation(line: 3672, column: 7, scope: !19072)
!19131 = !DILocation(line: 3673, column: 6, scope: !19027)
!19132 = !DILocation(line: 3644, column: 34, scope: !19020)
!19133 = !DILocation(line: 3644, column: 6, scope: !19020)
!19134 = distinct !{!19134, !19024, !19135}
!19135 = !DILocation(line: 3673, column: 6, scope: !19017)
!19136 = !DILocation(line: 3674, column: 6, scope: !19001)
!19137 = !DILocation(line: 3674, column: 16, scope: !19001)
!19138 = !DILocation(line: 3674, column: 20, scope: !19001)
!19139 = !DILocation(line: 3675, column: 15, scope: !19001)
!19140 = !DILocation(line: 3675, column: 6, scope: !19001)
!19141 = !DILocation(line: 3675, column: 10, scope: !19001)
!19142 = !DILocation(line: 3675, column: 13, scope: !19001)
!19143 = !DILocation(line: 3676, column: 19, scope: !19001)
!19144 = !DILocation(line: 3676, column: 6, scope: !19001)
!19145 = !DILocation(line: 3676, column: 10, scope: !19001)
!19146 = !DILocation(line: 3676, column: 16, scope: !19001)
!19147 = !DILocation(line: 3677, column: 27, scope: !19001)
!19148 = !DILocation(line: 3677, column: 6, scope: !19001)
!19149 = !DILocation(line: 3678, column: 5, scope: !19001)
!19150 = !DILocation(line: 3681, column: 10, scope: !19151)
!19151 = distinct !DILexicalBlock(scope: !18998, file: !3, line: 3679, column: 10)
!19152 = !DILocation(line: 3682, column: 13, scope: !19153)
!19153 = distinct !DILexicalBlock(scope: !19151, file: !3, line: 3682, column: 6)
!19154 = !DILocation(line: 3682, column: 11, scope: !19153)
!19155 = !DILocation(line: 3682, column: 18, scope: !19156)
!19156 = distinct !DILexicalBlock(scope: !19153, file: !3, line: 3682, column: 6)
!19157 = !DILocation(line: 3682, column: 22, scope: !19156)
!19158 = !DILocation(line: 3682, column: 26, scope: !19156)
!19159 = !DILocation(line: 3682, column: 32, scope: !19156)
!19160 = !DILocation(line: 3682, column: 20, scope: !19156)
!19161 = !DILocation(line: 3682, column: 6, scope: !19153)
!19162 = !DILocation(line: 3683, column: 11, scope: !19163)
!19163 = distinct !DILexicalBlock(scope: !19164, file: !3, line: 3683, column: 11)
!19164 = distinct !DILexicalBlock(scope: !19156, file: !3, line: 3682, column: 42)
!19165 = !DILocation(line: 3683, column: 16, scope: !19163)
!19166 = !DILocation(line: 3683, column: 22, scope: !19163)
!19167 = !DILocation(line: 3683, column: 26, scope: !19163)
!19168 = !DILocation(line: 3683, column: 19, scope: !19163)
!19169 = !DILocation(line: 3683, column: 32, scope: !19163)
!19170 = !DILocation(line: 3683, column: 35, scope: !19163)
!19171 = !DILocation(line: 3683, column: 40, scope: !19163)
!19172 = !DILocation(line: 3683, column: 42, scope: !19163)
!19173 = !DILocation(line: 3683, column: 50, scope: !19163)
!19174 = !DILocation(line: 3683, column: 54, scope: !19163)
!19175 = !DILocation(line: 3683, column: 47, scope: !19163)
!19176 = !DILocation(line: 3683, column: 11, scope: !19164)
!19177 = !DILocation(line: 3683, column: 68, scope: !19163)
!19178 = !DILocation(line: 3683, column: 65, scope: !19163)
!19179 = !DILocation(line: 3683, column: 61, scope: !19163)
!19180 = !DILocation(line: 3684, column: 6, scope: !19164)
!19181 = !DILocation(line: 3682, column: 38, scope: !19156)
!19182 = !DILocation(line: 3682, column: 6, scope: !19156)
!19183 = distinct !{!19183, !19161, !19184}
!19184 = !DILocation(line: 3684, column: 6, scope: !19153)
!19185 = !DILocation(line: 3686, column: 10, scope: !19186)
!19186 = distinct !DILexicalBlock(scope: !19151, file: !3, line: 3686, column: 10)
!19187 = !DILocation(line: 3686, column: 10, scope: !19151)
!19188 = !DILocation(line: 3689, column: 21, scope: !19189)
!19189 = distinct !DILexicalBlock(scope: !19186, file: !3, line: 3686, column: 15)
!19190 = !DILocation(line: 3689, column: 34, scope: !19189)
!19191 = !DILocation(line: 3689, column: 40, scope: !19189)
!19192 = !DILocation(line: 3689, column: 44, scope: !19189)
!19193 = !DILocation(line: 3689, column: 38, scope: !19189)
!19194 = !DILocation(line: 3689, column: 53, scope: !19189)
!19195 = !DILocation(line: 3689, column: 57, scope: !19189)
!19196 = !DILocation(line: 3689, column: 51, scope: !19189)
!19197 = !DILocation(line: 3689, column: 33, scope: !19189)
!19198 = !DILocation(line: 3689, column: 63, scope: !19189)
!19199 = !DILocation(line: 3689, column: 19, scope: !19189)
!19200 = !DILocation(line: 3689, column: 11, scope: !19189)
!19201 = !DILocation(line: 3690, column: 12, scope: !19189)
!19202 = !DILocation(line: 3690, column: 16, scope: !19189)
!19203 = !DILocation(line: 3690, column: 10, scope: !19189)
!19204 = !DILocation(line: 3691, column: 14, scope: !19205)
!19205 = distinct !DILexicalBlock(scope: !19189, file: !3, line: 3691, column: 7)
!19206 = !DILocation(line: 3691, column: 12, scope: !19205)
!19207 = !DILocation(line: 3691, column: 19, scope: !19208)
!19208 = distinct !DILexicalBlock(scope: !19205, file: !3, line: 3691, column: 7)
!19209 = !DILocation(line: 3691, column: 23, scope: !19208)
!19210 = !DILocation(line: 3691, column: 27, scope: !19208)
!19211 = !DILocation(line: 3691, column: 21, scope: !19208)
!19212 = !DILocation(line: 3691, column: 7, scope: !19205)
!19213 = !DILocation(line: 3692, column: 15, scope: !19214)
!19214 = distinct !DILexicalBlock(scope: !19215, file: !3, line: 3692, column: 8)
!19215 = distinct !DILexicalBlock(scope: !19208, file: !3, line: 3691, column: 39)
!19216 = !DILocation(line: 3692, column: 13, scope: !19214)
!19217 = !DILocation(line: 3692, column: 20, scope: !19218)
!19218 = distinct !DILexicalBlock(scope: !19214, file: !3, line: 3692, column: 8)
!19219 = !DILocation(line: 3692, column: 24, scope: !19218)
!19220 = !DILocation(line: 3692, column: 28, scope: !19218)
!19221 = !DILocation(line: 3692, column: 22, scope: !19218)
!19222 = !DILocation(line: 3692, column: 8, scope: !19214)
!19223 = !DILocation(line: 3693, column: 10, scope: !19224)
!19224 = distinct !DILexicalBlock(scope: !19218, file: !3, line: 3692, column: 40)
!19225 = !DILocation(line: 3693, column: 17, scope: !19224)
!19226 = !DILocation(line: 3693, column: 16, scope: !19224)
!19227 = !DILocation(line: 3694, column: 27, scope: !19224)
!19228 = !DILocation(line: 3694, column: 37, scope: !19224)
!19229 = !DILocation(line: 3694, column: 41, scope: !19224)
!19230 = !DILocation(line: 3694, column: 9, scope: !19224)
!19231 = !DILocation(line: 3695, column: 12, scope: !19224)
!19232 = !DILocation(line: 3696, column: 11, scope: !19224)
!19233 = !DILocation(line: 3697, column: 15, scope: !19234)
!19234 = distinct !DILexicalBlock(scope: !19224, file: !3, line: 3697, column: 14)
!19235 = !DILocation(line: 3697, column: 19, scope: !19234)
!19236 = !DILocation(line: 3697, column: 23, scope: !19234)
!19237 = !DILocation(line: 3697, column: 29, scope: !19234)
!19238 = !DILocation(line: 3697, column: 17, scope: !19234)
!19239 = !DILocation(line: 3697, column: 34, scope: !19234)
!19240 = !DILocation(line: 3697, column: 37, scope: !19234)
!19241 = !DILocation(line: 3697, column: 42, scope: !19234)
!19242 = !DILocation(line: 3697, column: 48, scope: !19234)
!19243 = !DILocation(line: 3697, column: 52, scope: !19234)
!19244 = !DILocation(line: 3697, column: 45, scope: !19234)
!19245 = !DILocation(line: 3697, column: 58, scope: !19234)
!19246 = !DILocation(line: 3697, column: 61, scope: !19234)
!19247 = !DILocation(line: 3697, column: 66, scope: !19234)
!19248 = !DILocation(line: 3697, column: 68, scope: !19234)
!19249 = !DILocation(line: 3697, column: 76, scope: !19234)
!19250 = !DILocation(line: 3697, column: 80, scope: !19234)
!19251 = !DILocation(line: 3697, column: 73, scope: !19234)
!19252 = !DILocation(line: 3697, column: 14, scope: !19224)
!19253 = !DILocation(line: 3705, column: 17, scope: !19254)
!19254 = distinct !DILexicalBlock(scope: !19255, file: !3, line: 3705, column: 10)
!19255 = distinct !DILexicalBlock(scope: !19234, file: !3, line: 3697, column: 87)
!19256 = !DILocation(line: 3705, column: 15, scope: !19254)
!19257 = !DILocation(line: 3705, column: 22, scope: !19258)
!19258 = distinct !DILexicalBlock(scope: !19254, file: !3, line: 3705, column: 10)
!19259 = !DILocation(line: 3705, column: 26, scope: !19258)
!19260 = !DILocation(line: 3705, column: 24, scope: !19258)
!19261 = !DILocation(line: 3705, column: 10, scope: !19254)
!19262 = !DILocation(line: 3706, column: 28, scope: !19263)
!19263 = distinct !DILexicalBlock(scope: !19258, file: !3, line: 3705, column: 44)
!19264 = !DILocation(line: 3706, column: 30, scope: !19263)
!19265 = !DILocation(line: 3706, column: 20, scope: !19263)
!19266 = !DILocation(line: 3706, column: 38, scope: !19263)
!19267 = !DILocation(line: 3706, column: 50, scope: !19263)
!19268 = !DILocation(line: 3706, column: 37, scope: !19263)
!19269 = !DILocation(line: 3706, column: 35, scope: !19263)
!19270 = !DILocation(line: 3706, column: 18, scope: !19263)
!19271 = !DILocation(line: 3707, column: 20, scope: !19263)
!19272 = !DILocation(line: 3707, column: 23, scope: !19263)
!19273 = !DILocation(line: 3707, column: 18, scope: !19263)
!19274 = !DILocation(line: 3708, column: 12, scope: !19263)
!19275 = !DILocation(line: 3708, column: 19, scope: !19263)
!19276 = !DILocation(line: 3708, column: 18, scope: !19263)
!19277 = !DILocation(line: 3709, column: 26, scope: !19263)
!19278 = !DILocation(line: 3709, column: 31, scope: !19263)
!19279 = !DILocation(line: 3709, column: 36, scope: !19263)
!19280 = !DILocation(line: 3709, column: 44, scope: !19263)
!19281 = !DILocation(line: 3709, column: 49, scope: !19263)
!19282 = !DILocation(line: 3709, column: 53, scope: !19263)
!19283 = !DILocation(line: 3709, column: 58, scope: !19263)
!19284 = !DILocation(line: 3709, column: 11, scope: !19263)
!19285 = !DILocation(line: 3710, column: 14, scope: !19263)
!19286 = !DILocation(line: 3711, column: 10, scope: !19263)
!19287 = !DILocation(line: 3705, column: 40, scope: !19258)
!19288 = !DILocation(line: 3705, column: 10, scope: !19258)
!19289 = distinct !{!19289, !19261, !19290}
!19290 = !DILocation(line: 3711, column: 10, scope: !19254)
!19291 = !DILocation(line: 3712, column: 9, scope: !19255)
!19292 = !DILocation(line: 3713, column: 8, scope: !19224)
!19293 = !DILocation(line: 3692, column: 36, scope: !19218)
!19294 = !DILocation(line: 3692, column: 8, scope: !19218)
!19295 = distinct !{!19295, !19222, !19296}
!19296 = !DILocation(line: 3713, column: 8, scope: !19214)
!19297 = !DILocation(line: 3714, column: 7, scope: !19215)
!19298 = !DILocation(line: 3691, column: 35, scope: !19208)
!19299 = !DILocation(line: 3691, column: 7, scope: !19208)
!19300 = distinct !{!19300, !19212, !19301}
!19301 = !DILocation(line: 3714, column: 7, scope: !19205)
!19302 = !DILocation(line: 3715, column: 7, scope: !19189)
!19303 = !DILocation(line: 3715, column: 17, scope: !19189)
!19304 = !DILocation(line: 3715, column: 21, scope: !19189)
!19305 = !DILocation(line: 3716, column: 16, scope: !19189)
!19306 = !DILocation(line: 3716, column: 7, scope: !19189)
!19307 = !DILocation(line: 3716, column: 11, scope: !19189)
!19308 = !DILocation(line: 3716, column: 14, scope: !19189)
!19309 = !DILocation(line: 3717, column: 20, scope: !19189)
!19310 = !DILocation(line: 3717, column: 7, scope: !19189)
!19311 = !DILocation(line: 3717, column: 11, scope: !19189)
!19312 = !DILocation(line: 3717, column: 17, scope: !19189)
!19313 = !DILocation(line: 3718, column: 28, scope: !19189)
!19314 = !DILocation(line: 3718, column: 7, scope: !19189)
!19315 = !DILocation(line: 3719, column: 6, scope: !19189)
!19316 = !DILocation(line: 3722, column: 4, scope: !18624)
!19317 = !DILocation(line: 3722, column: 14, scope: !18624)
!19318 = !DILocation(line: 3723, column: 4, scope: !18624)
!19319 = !DILocation(line: 3723, column: 14, scope: !18624)
!19320 = !DILocation(line: 3725, column: 3, scope: !18624)
!19321 = !DILocation(line: 3726, column: 2, scope: !18220)
!19322 = !DILocation(line: 3361, column: 44, scope: !18217)
!19323 = !DILocation(line: 3361, column: 48, scope: !18217)
!19324 = !DILocation(line: 3361, column: 42, scope: !18217)
!19325 = !DILocation(line: 3361, column: 2, scope: !18217)
!19326 = distinct !{!19326, !18218, !19327}
!19327 = !DILocation(line: 3726, column: 2, scope: !18211)
!19328 = !DILocation(line: 3727, column: 1, scope: !18158)
!19329 = distinct !DISubprogram(name: "isNurbsel_count", scope: !3, file: !3, line: 209, type: !19330, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!19330 = !DISubroutineType(types: !19331)
!19331 = !{!22, !2953, !3163}
!19332 = !DILocalVariable(name: "cu", arg: 1, scope: !19329, file: !3, line: 209, type: !2953)
!19333 = !DILocation(line: 209, column: 35, scope: !19329)
!19334 = !DILocalVariable(name: "nu", arg: 2, scope: !19329, file: !3, line: 209, type: !3163)
!19335 = !DILocation(line: 209, column: 45, scope: !19329)
!19336 = !DILocalVariable(name: "bezt", scope: !19329, file: !3, line: 211, type: !3104)
!19337 = !DILocation(line: 211, column: 13, scope: !19329)
!19338 = !DILocalVariable(name: "bp", scope: !19329, file: !3, line: 212, type: !3093)
!19339 = !DILocation(line: 212, column: 10, scope: !19329)
!19340 = !DILocalVariable(name: "a", scope: !19329, file: !3, line: 213, type: !22)
!19341 = !DILocation(line: 213, column: 6, scope: !19329)
!19342 = !DILocalVariable(name: "sel", scope: !19329, file: !3, line: 213, type: !22)
!19343 = !DILocation(line: 213, column: 9, scope: !19329)
!19344 = !DILocation(line: 215, column: 6, scope: !19345)
!19345 = distinct !DILexicalBlock(scope: !19329, file: !3, line: 215, column: 6)
!19346 = !DILocation(line: 215, column: 10, scope: !19345)
!19347 = !DILocation(line: 215, column: 15, scope: !19345)
!19348 = !DILocation(line: 215, column: 6, scope: !19329)
!19349 = !DILocation(line: 216, column: 10, scope: !19350)
!19350 = distinct !DILexicalBlock(scope: !19345, file: !3, line: 215, column: 29)
!19351 = !DILocation(line: 216, column: 14, scope: !19350)
!19352 = !DILocation(line: 216, column: 8, scope: !19350)
!19353 = !DILocation(line: 217, column: 7, scope: !19350)
!19354 = !DILocation(line: 217, column: 11, scope: !19350)
!19355 = !DILocation(line: 217, column: 5, scope: !19350)
!19356 = !DILocation(line: 218, column: 3, scope: !19350)
!19357 = !DILocation(line: 218, column: 11, scope: !19350)
!19358 = !DILocation(line: 219, column: 8, scope: !19359)
!19359 = distinct !DILexicalBlock(scope: !19360, file: !3, line: 219, column: 8)
!19360 = distinct !DILexicalBlock(scope: !19350, file: !3, line: 218, column: 15)
!19361 = !DILocation(line: 219, column: 8, scope: !19360)
!19362 = !DILocation(line: 219, column: 48, scope: !19359)
!19363 = !DILocation(line: 219, column: 45, scope: !19359)
!19364 = !DILocation(line: 220, column: 8, scope: !19360)
!19365 = distinct !{!19365, !19356, !19366}
!19366 = !DILocation(line: 221, column: 3, scope: !19350)
!19367 = !DILocation(line: 222, column: 2, scope: !19350)
!19368 = !DILocation(line: 224, column: 8, scope: !19369)
!19369 = distinct !DILexicalBlock(scope: !19345, file: !3, line: 223, column: 7)
!19370 = !DILocation(line: 224, column: 12, scope: !19369)
!19371 = !DILocation(line: 224, column: 6, scope: !19369)
!19372 = !DILocation(line: 225, column: 7, scope: !19369)
!19373 = !DILocation(line: 225, column: 11, scope: !19369)
!19374 = !DILocation(line: 225, column: 19, scope: !19369)
!19375 = !DILocation(line: 225, column: 23, scope: !19369)
!19376 = !DILocation(line: 225, column: 17, scope: !19369)
!19377 = !DILocation(line: 225, column: 5, scope: !19369)
!19378 = !DILocation(line: 226, column: 3, scope: !19369)
!19379 = !DILocation(line: 226, column: 11, scope: !19369)
!19380 = !DILocation(line: 227, column: 10, scope: !19381)
!19381 = distinct !DILexicalBlock(scope: !19382, file: !3, line: 227, column: 9)
!19382 = distinct !DILexicalBlock(scope: !19369, file: !3, line: 226, column: 15)
!19383 = !DILocation(line: 227, column: 14, scope: !19381)
!19384 = !DILocation(line: 227, column: 17, scope: !19381)
!19385 = !DILocation(line: 227, column: 9, scope: !19382)
!19386 = !DILocation(line: 227, column: 32, scope: !19381)
!19387 = !DILocation(line: 227, column: 29, scope: !19381)
!19388 = !DILocation(line: 228, column: 6, scope: !19382)
!19389 = distinct !{!19389, !19378, !19390}
!19390 = !DILocation(line: 229, column: 3, scope: !19369)
!19391 = !DILocation(line: 231, column: 9, scope: !19329)
!19392 = !DILocation(line: 231, column: 2, scope: !19329)
!19393 = distinct !DISubprogram(name: "merge_nurb", scope: !3, file: !3, line: 4348, type: !3224, scopeLine: 4349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!19394 = !DILocalVariable(name: "C", arg: 1, scope: !19393, file: !3, line: 4348, type: !3226)
!19395 = !DILocation(line: 4348, column: 33, scope: !19393)
!19396 = !DILocalVariable(name: "op", arg: 2, scope: !19393, file: !3, line: 4348, type: !3228)
!19397 = !DILocation(line: 4348, column: 48, scope: !19393)
!19398 = !DILocalVariable(name: "obedit", scope: !19393, file: !3, line: 4350, type: !3242)
!19399 = !DILocation(line: 4350, column: 10, scope: !19393)
!19400 = !DILocation(line: 4350, column: 40, scope: !19393)
!19401 = !DILocation(line: 4350, column: 19, scope: !19393)
!19402 = !DILocalVariable(name: "cu", scope: !19393, file: !3, line: 4351, type: !2953)
!19403 = !DILocation(line: 4351, column: 9, scope: !19393)
!19404 = !DILocation(line: 4351, column: 14, scope: !19393)
!19405 = !DILocation(line: 4351, column: 22, scope: !19393)
!19406 = !DILocalVariable(name: "editnurb", scope: !19393, file: !3, line: 4352, type: !486)
!19407 = !DILocation(line: 4352, column: 12, scope: !19393)
!19408 = !DILocation(line: 4352, column: 44, scope: !19393)
!19409 = !DILocation(line: 4352, column: 23, scope: !19393)
!19410 = !DILocalVariable(name: "nus1", scope: !19393, file: !3, line: 4353, type: !3155)
!19411 = !DILocation(line: 4353, column: 12, scope: !19393)
!19412 = !DILocalVariable(name: "nus2", scope: !19393, file: !3, line: 4353, type: !3155)
!19413 = !DILocation(line: 4353, column: 19, scope: !19393)
!19414 = !DILocalVariable(name: "ok", scope: !19393, file: !3, line: 4354, type: !1081)
!19415 = !DILocation(line: 4354, column: 7, scope: !19393)
!19416 = !DILocation(line: 4356, column: 27, scope: !19393)
!19417 = !DILocation(line: 4356, column: 2, scope: !19393)
!19418 = !DILocation(line: 4358, column: 16, scope: !19419)
!19419 = distinct !DILexicalBlock(scope: !19393, file: !3, line: 4358, column: 6)
!19420 = !DILocation(line: 4358, column: 35, scope: !19419)
!19421 = !DILocation(line: 4358, column: 22, scope: !19419)
!19422 = !DILocation(line: 4358, column: 6, scope: !19393)
!19423 = !DILocation(line: 4359, column: 3, scope: !19424)
!19424 = distinct !DILexicalBlock(scope: !19419, file: !3, line: 4358, column: 41)
!19425 = !DILocation(line: 4360, column: 14, scope: !19424)
!19426 = !DILocation(line: 4360, column: 18, scope: !19424)
!19427 = !DILocation(line: 4360, column: 3, scope: !19424)
!19428 = !DILocation(line: 4361, column: 3, scope: !19424)
!19429 = !DILocation(line: 4364, column: 19, scope: !19393)
!19430 = !DILocation(line: 4364, column: 9, scope: !19393)
!19431 = !DILocation(line: 4364, column: 7, scope: !19393)
!19432 = !DILocation(line: 4365, column: 9, scope: !19393)
!19433 = !DILocation(line: 4365, column: 15, scope: !19393)
!19434 = !DILocation(line: 4365, column: 7, scope: !19393)
!19435 = !DILocation(line: 4368, column: 6, scope: !19436)
!19436 = distinct !DILexicalBlock(scope: !19393, file: !3, line: 4368, column: 6)
!19437 = !DILocation(line: 4368, column: 12, scope: !19436)
!19438 = !DILocation(line: 4368, column: 16, scope: !19436)
!19439 = !DILocation(line: 4368, column: 22, scope: !19436)
!19440 = !DILocation(line: 4368, column: 6, scope: !19393)
!19441 = !DILocation(line: 4369, column: 7, scope: !19442)
!19442 = distinct !DILexicalBlock(scope: !19443, file: !3, line: 4369, column: 7)
!19443 = distinct !DILexicalBlock(scope: !19436, file: !3, line: 4368, column: 28)
!19444 = !DILocation(line: 4369, column: 13, scope: !19442)
!19445 = !DILocation(line: 4369, column: 17, scope: !19442)
!19446 = !DILocation(line: 4369, column: 26, scope: !19442)
!19447 = !DILocation(line: 4369, column: 32, scope: !19442)
!19448 = !DILocation(line: 4369, column: 36, scope: !19442)
!19449 = !DILocation(line: 4369, column: 23, scope: !19442)
!19450 = !DILocation(line: 4369, column: 42, scope: !19442)
!19451 = !DILocation(line: 4369, column: 45, scope: !19442)
!19452 = !DILocation(line: 4369, column: 51, scope: !19442)
!19453 = !DILocation(line: 4369, column: 55, scope: !19442)
!19454 = !DILocation(line: 4369, column: 64, scope: !19442)
!19455 = !DILocation(line: 4369, column: 70, scope: !19442)
!19456 = !DILocation(line: 4369, column: 74, scope: !19442)
!19457 = !DILocation(line: 4369, column: 61, scope: !19442)
!19458 = !DILocation(line: 4369, column: 7, scope: !19443)
!19459 = !DILocation(line: 4371, column: 3, scope: !19460)
!19460 = distinct !DILexicalBlock(scope: !19442, file: !3, line: 4369, column: 81)
!19461 = !DILocation(line: 4373, column: 7, scope: !19462)
!19462 = distinct !DILexicalBlock(scope: !19442, file: !3, line: 4372, column: 8)
!19463 = !DILocation(line: 4375, column: 2, scope: !19443)
!19464 = !DILocation(line: 4376, column: 11, scope: !19465)
!19465 = distinct !DILexicalBlock(scope: !19436, file: !3, line: 4376, column: 11)
!19466 = !DILocation(line: 4376, column: 17, scope: !19465)
!19467 = !DILocation(line: 4376, column: 21, scope: !19465)
!19468 = !DILocation(line: 4376, column: 27, scope: !19465)
!19469 = !DILocation(line: 4376, column: 11, scope: !19436)
!19470 = !DILocation(line: 4377, column: 7, scope: !19471)
!19471 = distinct !DILexicalBlock(scope: !19472, file: !3, line: 4377, column: 7)
!19472 = distinct !DILexicalBlock(scope: !19465, file: !3, line: 4376, column: 33)
!19473 = !DILocation(line: 4377, column: 13, scope: !19471)
!19474 = !DILocation(line: 4377, column: 17, scope: !19471)
!19475 = !DILocation(line: 4377, column: 26, scope: !19471)
!19476 = !DILocation(line: 4377, column: 32, scope: !19471)
!19477 = !DILocation(line: 4377, column: 36, scope: !19471)
!19478 = !DILocation(line: 4377, column: 23, scope: !19471)
!19479 = !DILocation(line: 4377, column: 42, scope: !19471)
!19480 = !DILocation(line: 4377, column: 45, scope: !19471)
!19481 = !DILocation(line: 4377, column: 51, scope: !19471)
!19482 = !DILocation(line: 4377, column: 55, scope: !19471)
!19483 = !DILocation(line: 4377, column: 64, scope: !19471)
!19484 = !DILocation(line: 4377, column: 70, scope: !19471)
!19485 = !DILocation(line: 4377, column: 74, scope: !19471)
!19486 = !DILocation(line: 4377, column: 61, scope: !19471)
!19487 = !DILocation(line: 4377, column: 7, scope: !19472)
!19488 = !DILocation(line: 4379, column: 3, scope: !19489)
!19489 = distinct !DILexicalBlock(scope: !19471, file: !3, line: 4377, column: 81)
!19490 = !DILocation(line: 4381, column: 7, scope: !19491)
!19491 = distinct !DILexicalBlock(scope: !19471, file: !3, line: 4380, column: 8)
!19492 = !DILocation(line: 4383, column: 2, scope: !19472)
!19493 = !DILocation(line: 4384, column: 11, scope: !19494)
!19494 = distinct !DILexicalBlock(scope: !19465, file: !3, line: 4384, column: 11)
!19495 = !DILocation(line: 4384, column: 17, scope: !19494)
!19496 = !DILocation(line: 4384, column: 21, scope: !19494)
!19497 = !DILocation(line: 4384, column: 30, scope: !19494)
!19498 = !DILocation(line: 4384, column: 36, scope: !19494)
!19499 = !DILocation(line: 4384, column: 40, scope: !19494)
!19500 = !DILocation(line: 4384, column: 27, scope: !19494)
!19501 = !DILocation(line: 4384, column: 46, scope: !19494)
!19502 = !DILocation(line: 4384, column: 49, scope: !19494)
!19503 = !DILocation(line: 4384, column: 55, scope: !19494)
!19504 = !DILocation(line: 4384, column: 59, scope: !19494)
!19505 = !DILocation(line: 4384, column: 68, scope: !19494)
!19506 = !DILocation(line: 4384, column: 74, scope: !19494)
!19507 = !DILocation(line: 4384, column: 78, scope: !19494)
!19508 = !DILocation(line: 4384, column: 65, scope: !19494)
!19509 = !DILocation(line: 4384, column: 11, scope: !19465)
!19510 = !DILocation(line: 4386, column: 2, scope: !19511)
!19511 = distinct !DILexicalBlock(scope: !19494, file: !3, line: 4384, column: 85)
!19512 = !DILocation(line: 4387, column: 11, scope: !19513)
!19513 = distinct !DILexicalBlock(scope: !19494, file: !3, line: 4387, column: 11)
!19514 = !DILocation(line: 4387, column: 17, scope: !19513)
!19515 = !DILocation(line: 4387, column: 21, scope: !19513)
!19516 = !DILocation(line: 4387, column: 30, scope: !19513)
!19517 = !DILocation(line: 4387, column: 36, scope: !19513)
!19518 = !DILocation(line: 4387, column: 40, scope: !19513)
!19519 = !DILocation(line: 4387, column: 27, scope: !19513)
!19520 = !DILocation(line: 4387, column: 46, scope: !19513)
!19521 = !DILocation(line: 4387, column: 49, scope: !19513)
!19522 = !DILocation(line: 4387, column: 55, scope: !19513)
!19523 = !DILocation(line: 4387, column: 59, scope: !19513)
!19524 = !DILocation(line: 4387, column: 68, scope: !19513)
!19525 = !DILocation(line: 4387, column: 74, scope: !19513)
!19526 = !DILocation(line: 4387, column: 78, scope: !19513)
!19527 = !DILocation(line: 4387, column: 65, scope: !19513)
!19528 = !DILocation(line: 4387, column: 11, scope: !19494)
!19529 = !DILocation(line: 4389, column: 2, scope: !19530)
!19530 = distinct !DILexicalBlock(scope: !19513, file: !3, line: 4387, column: 85)
!19531 = !DILocation(line: 4391, column: 6, scope: !19532)
!19532 = distinct !DILexicalBlock(scope: !19513, file: !3, line: 4390, column: 7)
!19533 = !DILocation(line: 4394, column: 6, scope: !19534)
!19534 = distinct !DILexicalBlock(scope: !19393, file: !3, line: 4394, column: 6)
!19535 = !DILocation(line: 4394, column: 9, scope: !19534)
!19536 = !DILocation(line: 4394, column: 6, scope: !19393)
!19537 = !DILocation(line: 4395, column: 14, scope: !19538)
!19538 = distinct !DILexicalBlock(scope: !19534, file: !3, line: 4394, column: 15)
!19539 = !DILocation(line: 4395, column: 18, scope: !19538)
!19540 = !DILocation(line: 4395, column: 3, scope: !19538)
!19541 = !DILocation(line: 4396, column: 3, scope: !19538)
!19542 = !DILocation(line: 4397, column: 3, scope: !19538)
!19543 = !DILocation(line: 4400, column: 2, scope: !19393)
!19544 = !DILocation(line: 4400, column: 9, scope: !19393)
!19545 = !DILocation(line: 4401, column: 16, scope: !19546)
!19546 = distinct !DILexicalBlock(scope: !19393, file: !3, line: 4400, column: 15)
!19547 = !DILocation(line: 4401, column: 20, scope: !19546)
!19548 = !DILocation(line: 4401, column: 24, scope: !19546)
!19549 = !DILocation(line: 4401, column: 34, scope: !19546)
!19550 = !DILocation(line: 4401, column: 40, scope: !19546)
!19551 = !DILocation(line: 4401, column: 44, scope: !19546)
!19552 = !DILocation(line: 4401, column: 50, scope: !19546)
!19553 = !DILocation(line: 4401, column: 3, scope: !19546)
!19554 = !DILocation(line: 4402, column: 10, scope: !19546)
!19555 = !DILocation(line: 4402, column: 16, scope: !19546)
!19556 = !DILocation(line: 4402, column: 8, scope: !19546)
!19557 = distinct !{!19557, !19543, !19558}
!19558 = !DILocation(line: 4403, column: 2, scope: !19393)
!19559 = !DILocation(line: 4405, column: 2, scope: !19393)
!19560 = !DILocation(line: 4407, column: 28, scope: !19393)
!19561 = !DILocation(line: 4407, column: 36, scope: !19393)
!19562 = !DILocation(line: 4407, column: 2, scope: !19393)
!19563 = !DILocation(line: 4409, column: 24, scope: !19393)
!19564 = !DILocation(line: 4409, column: 46, scope: !19393)
!19565 = !DILocation(line: 4409, column: 54, scope: !19393)
!19566 = !DILocation(line: 4409, column: 2, scope: !19393)
!19567 = !DILocation(line: 4410, column: 20, scope: !19393)
!19568 = !DILocation(line: 4410, column: 28, scope: !19393)
!19569 = !DILocation(line: 4410, column: 2, scope: !19393)
!19570 = !DILocation(line: 4412, column: 2, scope: !19393)
!19571 = !DILocation(line: 4413, column: 1, scope: !19393)
!19572 = distinct !DISubprogram(name: "make_selection_list_nurb", scope: !3, file: !3, line: 4142, type: !19573, scopeLine: 4143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!19573 = !DISubroutineType(types: !19574)
!19574 = !{null, !486}
!19575 = !DILocalVariable(name: "editnurb", arg: 1, scope: !19572, file: !3, line: 4142, type: !486)
!19576 = !DILocation(line: 4142, column: 48, scope: !19572)
!19577 = !DILocalVariable(name: "nbase", scope: !19572, file: !3, line: 4144, type: !58)
!19578 = !DILocation(line: 4144, column: 11, scope: !19572)
!19579 = !DILocalVariable(name: "nus", scope: !19572, file: !3, line: 4145, type: !3155)
!19580 = !DILocation(line: 4145, column: 12, scope: !19572)
!19581 = !DILocalVariable(name: "nustest", scope: !19572, file: !3, line: 4145, type: !3155)
!19582 = !DILocation(line: 4145, column: 18, scope: !19572)
!19583 = !DILocalVariable(name: "headdo", scope: !19572, file: !3, line: 4145, type: !3155)
!19584 = !DILocation(line: 4145, column: 28, scope: !19572)
!19585 = !DILocalVariable(name: "taildo", scope: !19572, file: !3, line: 4145, type: !3155)
!19586 = !DILocation(line: 4145, column: 37, scope: !19572)
!19587 = !DILocalVariable(name: "nu", scope: !19572, file: !3, line: 4146, type: !3163)
!19588 = !DILocation(line: 4146, column: 8, scope: !19572)
!19589 = !DILocalVariable(name: "bp", scope: !19572, file: !3, line: 4147, type: !3093)
!19590 = !DILocation(line: 4147, column: 10, scope: !19572)
!19591 = !DILocalVariable(name: "dist", scope: !19572, file: !3, line: 4148, type: !204)
!19592 = !DILocation(line: 4148, column: 8, scope: !19572)
!19593 = !DILocalVariable(name: "headdist", scope: !19572, file: !3, line: 4148, type: !204)
!19594 = !DILocation(line: 4148, column: 14, scope: !19572)
!19595 = !DILocalVariable(name: "taildist", scope: !19572, file: !3, line: 4148, type: !204)
!19596 = !DILocation(line: 4148, column: 24, scope: !19572)
!19597 = !DILocalVariable(name: "a", scope: !19572, file: !3, line: 4149, type: !22)
!19598 = !DILocation(line: 4149, column: 6, scope: !19572)
!19599 = !DILocation(line: 4151, column: 12, scope: !19600)
!19600 = distinct !DILexicalBlock(scope: !19572, file: !3, line: 4151, column: 2)
!19601 = !DILocation(line: 4151, column: 22, scope: !19600)
!19602 = !DILocation(line: 4151, column: 10, scope: !19600)
!19603 = !DILocation(line: 4151, column: 7, scope: !19600)
!19604 = !DILocation(line: 4151, column: 29, scope: !19605)
!19605 = distinct !DILexicalBlock(scope: !19600, file: !3, line: 4151, column: 2)
!19606 = !DILocation(line: 4151, column: 2, scope: !19600)
!19607 = !DILocation(line: 4152, column: 17, scope: !19608)
!19608 = distinct !DILexicalBlock(scope: !19609, file: !3, line: 4152, column: 7)
!19609 = distinct !DILexicalBlock(scope: !19605, file: !3, line: 4151, column: 48)
!19610 = !DILocation(line: 4152, column: 7, scope: !19608)
!19611 = !DILocation(line: 4152, column: 7, scope: !19609)
!19612 = !DILocation(line: 4154, column: 22, scope: !19613)
!19613 = distinct !DILexicalBlock(scope: !19608, file: !3, line: 4152, column: 22)
!19614 = !DILocation(line: 4154, column: 10, scope: !19613)
!19615 = !DILocation(line: 4154, column: 8, scope: !19613)
!19616 = !DILocation(line: 4155, column: 24, scope: !19613)
!19617 = !DILocation(line: 4155, column: 4, scope: !19613)
!19618 = !DILocation(line: 4156, column: 14, scope: !19613)
!19619 = !DILocation(line: 4156, column: 4, scope: !19613)
!19620 = !DILocation(line: 4156, column: 9, scope: !19613)
!19621 = !DILocation(line: 4156, column: 12, scope: !19613)
!19622 = !DILocation(line: 4158, column: 9, scope: !19613)
!19623 = !DILocation(line: 4158, column: 13, scope: !19613)
!19624 = !DILocation(line: 4158, column: 7, scope: !19613)
!19625 = !DILocation(line: 4159, column: 8, scope: !19613)
!19626 = !DILocation(line: 4159, column: 12, scope: !19613)
!19627 = !DILocation(line: 4159, column: 6, scope: !19613)
!19628 = !DILocation(line: 4160, column: 4, scope: !19613)
!19629 = !DILocation(line: 4160, column: 12, scope: !19613)
!19630 = !DILocation(line: 4161, column: 15, scope: !19631)
!19631 = distinct !DILexicalBlock(scope: !19613, file: !3, line: 4160, column: 16)
!19632 = !DILocation(line: 4161, column: 20, scope: !19631)
!19633 = !DILocation(line: 4161, column: 25, scope: !19631)
!19634 = !DILocation(line: 4161, column: 29, scope: !19631)
!19635 = !DILocation(line: 4161, column: 5, scope: !19631)
!19636 = !DILocation(line: 4162, column: 7, scope: !19631)
!19637 = distinct !{!19637, !19628, !19638}
!19638 = !DILocation(line: 4163, column: 4, scope: !19613)
!19639 = !DILocation(line: 4164, column: 14, scope: !19613)
!19640 = !DILocation(line: 4164, column: 19, scope: !19613)
!19641 = !DILocation(line: 4164, column: 38, scope: !19613)
!19642 = !DILocation(line: 4164, column: 42, scope: !19613)
!19643 = !DILocation(line: 4164, column: 31, scope: !19613)
!19644 = !DILocation(line: 4164, column: 29, scope: !19613)
!19645 = !DILocation(line: 4164, column: 4, scope: !19613)
!19646 = !DILocation(line: 4167, column: 3, scope: !19613)
!19647 = !DILocation(line: 4168, column: 2, scope: !19609)
!19648 = !DILocation(line: 4151, column: 38, scope: !19605)
!19649 = !DILocation(line: 4151, column: 42, scope: !19605)
!19650 = !DILocation(line: 4151, column: 36, scope: !19605)
!19651 = !DILocation(line: 4151, column: 2, scope: !19605)
!19652 = distinct !{!19652, !19606, !19653}
!19653 = !DILocation(line: 4168, column: 2, scope: !19600)
!19654 = !DILocation(line: 4171, column: 14, scope: !19572)
!19655 = !DILocation(line: 4171, column: 8, scope: !19572)
!19656 = !DILocation(line: 4171, column: 6, scope: !19572)
!19657 = !DILocation(line: 4172, column: 22, scope: !19572)
!19658 = !DILocation(line: 4172, column: 2, scope: !19572)
!19659 = !DILocation(line: 4173, column: 26, scope: !19572)
!19660 = !DILocation(line: 4173, column: 2, scope: !19572)
!19661 = !DILocation(line: 4176, column: 2, scope: !19572)
!19662 = !DILocation(line: 4176, column: 15, scope: !19572)
!19663 = !DILocation(line: 4178, column: 23, scope: !19664)
!19664 = distinct !DILexicalBlock(scope: !19572, file: !3, line: 4176, column: 22)
!19665 = !DILocation(line: 4178, column: 12, scope: !19664)
!19666 = !DILocation(line: 4179, column: 19, scope: !19664)
!19667 = !DILocation(line: 4179, column: 10, scope: !19664)
!19668 = !DILocation(line: 4181, column: 19, scope: !19664)
!19669 = !DILocation(line: 4181, column: 13, scope: !19664)
!19670 = !DILocation(line: 4181, column: 11, scope: !19664)
!19671 = !DILocation(line: 4182, column: 3, scope: !19664)
!19672 = !DILocation(line: 4182, column: 10, scope: !19664)
!19673 = !DILocation(line: 4183, column: 20, scope: !19674)
!19674 = distinct !DILexicalBlock(scope: !19664, file: !3, line: 4182, column: 19)
!19675 = !DILocation(line: 4183, column: 29, scope: !19674)
!19676 = !DILocation(line: 4183, column: 57, scope: !19674)
!19677 = !DILocation(line: 4183, column: 35, scope: !19674)
!19678 = !DILocation(line: 4183, column: 65, scope: !19674)
!19679 = !DILocation(line: 4183, column: 34, scope: !19674)
!19680 = !DILocation(line: 4183, column: 11, scope: !19674)
!19681 = !DILocation(line: 4183, column: 9, scope: !19674)
!19682 = !DILocation(line: 4185, column: 8, scope: !19683)
!19683 = distinct !DILexicalBlock(scope: !19674, file: !3, line: 4185, column: 8)
!19684 = !DILocation(line: 4185, column: 15, scope: !19683)
!19685 = !DILocation(line: 4185, column: 13, scope: !19683)
!19686 = !DILocation(line: 4185, column: 8, scope: !19674)
!19687 = !DILocation(line: 4186, column: 16, scope: !19688)
!19688 = distinct !DILexicalBlock(scope: !19683, file: !3, line: 4185, column: 25)
!19689 = !DILocation(line: 4186, column: 14, scope: !19688)
!19690 = !DILocation(line: 4187, column: 14, scope: !19688)
!19691 = !DILocation(line: 4187, column: 12, scope: !19688)
!19692 = !DILocation(line: 4188, column: 4, scope: !19688)
!19693 = !DILocation(line: 4189, column: 20, scope: !19674)
!19694 = !DILocation(line: 4189, column: 29, scope: !19674)
!19695 = !DILocation(line: 4189, column: 57, scope: !19674)
!19696 = !DILocation(line: 4189, column: 35, scope: !19674)
!19697 = !DILocation(line: 4189, column: 64, scope: !19674)
!19698 = !DILocation(line: 4189, column: 34, scope: !19674)
!19699 = !DILocation(line: 4189, column: 11, scope: !19674)
!19700 = !DILocation(line: 4189, column: 9, scope: !19674)
!19701 = !DILocation(line: 4191, column: 8, scope: !19702)
!19702 = distinct !DILexicalBlock(scope: !19674, file: !3, line: 4191, column: 8)
!19703 = !DILocation(line: 4191, column: 15, scope: !19702)
!19704 = !DILocation(line: 4191, column: 13, scope: !19702)
!19705 = !DILocation(line: 4191, column: 8, scope: !19674)
!19706 = !DILocation(line: 4192, column: 16, scope: !19707)
!19707 = distinct !DILexicalBlock(scope: !19702, file: !3, line: 4191, column: 25)
!19708 = !DILocation(line: 4192, column: 14, scope: !19707)
!19709 = !DILocation(line: 4193, column: 14, scope: !19707)
!19710 = !DILocation(line: 4193, column: 12, scope: !19707)
!19711 = !DILocation(line: 4194, column: 4, scope: !19707)
!19712 = !DILocation(line: 4195, column: 14, scope: !19674)
!19713 = !DILocation(line: 4195, column: 23, scope: !19674)
!19714 = !DILocation(line: 4195, column: 12, scope: !19674)
!19715 = distinct !{!19715, !19671, !19716}
!19716 = !DILocation(line: 4196, column: 3, scope: !19664)
!19717 = !DILocation(line: 4198, column: 7, scope: !19718)
!19718 = distinct !DILexicalBlock(scope: !19664, file: !3, line: 4198, column: 7)
!19719 = !DILocation(line: 4198, column: 18, scope: !19718)
!19720 = !DILocation(line: 4198, column: 16, scope: !19718)
!19721 = !DILocation(line: 4198, column: 7, scope: !19664)
!19722 = !DILocation(line: 4199, column: 24, scope: !19723)
!19723 = distinct !DILexicalBlock(scope: !19718, file: !3, line: 4198, column: 28)
!19724 = !DILocation(line: 4199, column: 4, scope: !19723)
!19725 = !DILocation(line: 4200, column: 28, scope: !19723)
!19726 = !DILocation(line: 4200, column: 4, scope: !19723)
!19727 = !DILocation(line: 4201, column: 3, scope: !19723)
!19728 = !DILocation(line: 4203, column: 24, scope: !19729)
!19729 = distinct !DILexicalBlock(scope: !19718, file: !3, line: 4202, column: 8)
!19730 = !DILocation(line: 4203, column: 4, scope: !19729)
!19731 = !DILocation(line: 4204, column: 28, scope: !19729)
!19732 = !DILocation(line: 4204, column: 4, scope: !19729)
!19733 = distinct !{!19733, !19661, !19734}
!19734 = !DILocation(line: 4206, column: 2, scope: !19572)
!19735 = !DILocation(line: 4207, column: 1, scope: !19572)
!19736 = distinct !DISubprogram(name: "merge_2_nurb", scope: !3, file: !3, line: 4209, type: !19737, scopeLine: 4210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!19737 = !DISubroutineType(types: !19738)
!19738 = !{null, !3228, !2953, !486, !3163, !3163}
!19739 = !DILocalVariable(name: "op", arg: 1, scope: !19736, file: !3, line: 4209, type: !3228)
!19740 = !DILocation(line: 4209, column: 38, scope: !19736)
!19741 = !DILocalVariable(name: "cu", arg: 2, scope: !19736, file: !3, line: 4209, type: !2953)
!19742 = !DILocation(line: 4209, column: 49, scope: !19736)
!19743 = !DILocalVariable(name: "editnurb", arg: 3, scope: !19736, file: !3, line: 4209, type: !486)
!19744 = !DILocation(line: 4209, column: 63, scope: !19736)
!19745 = !DILocalVariable(name: "nu1", arg: 4, scope: !19736, file: !3, line: 4209, type: !3163)
!19746 = !DILocation(line: 4209, column: 79, scope: !19736)
!19747 = !DILocalVariable(name: "nu2", arg: 5, scope: !19736, file: !3, line: 4209, type: !3163)
!19748 = !DILocation(line: 4209, column: 90, scope: !19736)
!19749 = !DILocalVariable(name: "bp", scope: !19736, file: !3, line: 4211, type: !3093)
!19750 = !DILocation(line: 4211, column: 10, scope: !19736)
!19751 = !DILocalVariable(name: "bp1", scope: !19736, file: !3, line: 4211, type: !3093)
!19752 = !DILocation(line: 4211, column: 15, scope: !19736)
!19753 = !DILocalVariable(name: "bp2", scope: !19736, file: !3, line: 4211, type: !3093)
!19754 = !DILocation(line: 4211, column: 21, scope: !19736)
!19755 = !DILocalVariable(name: "temp", scope: !19736, file: !3, line: 4211, type: !3093)
!19756 = !DILocation(line: 4211, column: 27, scope: !19736)
!19757 = !DILocalVariable(name: "len1", scope: !19736, file: !3, line: 4212, type: !204)
!19758 = !DILocation(line: 4212, column: 8, scope: !19736)
!19759 = !DILocalVariable(name: "len2", scope: !19736, file: !3, line: 4212, type: !204)
!19760 = !DILocation(line: 4212, column: 14, scope: !19736)
!19761 = !DILocalVariable(name: "origu", scope: !19736, file: !3, line: 4213, type: !22)
!19762 = !DILocation(line: 4213, column: 6, scope: !19736)
!19763 = !DILocalVariable(name: "u", scope: !19736, file: !3, line: 4213, type: !22)
!19764 = !DILocation(line: 4213, column: 13, scope: !19736)
!19765 = !DILocalVariable(name: "v", scope: !19736, file: !3, line: 4213, type: !22)
!19766 = !DILocation(line: 4213, column: 16, scope: !19736)
!19767 = !DILocation(line: 4220, column: 20, scope: !19768)
!19768 = distinct !DILexicalBlock(scope: !19736, file: !3, line: 4220, column: 6)
!19769 = !DILocation(line: 4220, column: 25, scope: !19768)
!19770 = !DILocation(line: 4220, column: 30, scope: !19768)
!19771 = !DILocation(line: 4220, column: 36, scope: !19768)
!19772 = !DILocation(line: 4220, column: 6, scope: !19768)
!19773 = !DILocation(line: 4220, column: 6, scope: !19736)
!19774 = !DILocation(line: 4222, column: 2, scope: !19775)
!19775 = distinct !DILexicalBlock(scope: !19768, file: !3, line: 4220, column: 42)
!19776 = !DILocation(line: 4226, column: 7, scope: !19777)
!19777 = distinct !DILexicalBlock(scope: !19778, file: !3, line: 4226, column: 7)
!19778 = distinct !DILexicalBlock(scope: !19768, file: !3, line: 4223, column: 7)
!19779 = !DILocation(line: 4226, column: 12, scope: !19777)
!19780 = !DILocation(line: 4226, column: 19, scope: !19777)
!19781 = !DILocation(line: 4226, column: 7, scope: !19778)
!19782 = !DILocation(line: 4226, column: 25, scope: !19777)
!19783 = !DILocation(line: 4226, column: 30, scope: !19777)
!19784 = !DILocation(line: 4226, column: 37, scope: !19777)
!19785 = !DILocation(line: 4228, column: 25, scope: !19778)
!19786 = !DILocation(line: 4228, column: 3, scope: !19778)
!19787 = !DILocation(line: 4229, column: 21, scope: !19788)
!19788 = distinct !DILexicalBlock(scope: !19778, file: !3, line: 4229, column: 7)
!19789 = !DILocation(line: 4229, column: 26, scope: !19788)
!19790 = !DILocation(line: 4229, column: 31, scope: !19788)
!19791 = !DILocation(line: 4229, column: 37, scope: !19788)
!19792 = !DILocation(line: 4229, column: 7, scope: !19788)
!19793 = !DILocation(line: 4229, column: 7, scope: !19778)
!19794 = !DILocation(line: 4231, column: 3, scope: !19795)
!19795 = distinct !DILexicalBlock(scope: !19788, file: !3, line: 4229, column: 43)
!19796 = !DILocation(line: 4233, column: 26, scope: !19797)
!19797 = distinct !DILexicalBlock(scope: !19788, file: !3, line: 4232, column: 8)
!19798 = !DILocation(line: 4233, column: 4, scope: !19797)
!19799 = !DILocation(line: 4234, column: 22, scope: !19800)
!19800 = distinct !DILexicalBlock(scope: !19797, file: !3, line: 4234, column: 8)
!19801 = !DILocation(line: 4234, column: 27, scope: !19800)
!19802 = !DILocation(line: 4234, column: 32, scope: !19800)
!19803 = !DILocation(line: 4234, column: 38, scope: !19800)
!19804 = !DILocation(line: 4234, column: 8, scope: !19800)
!19805 = !DILocation(line: 4234, column: 8, scope: !19797)
!19806 = !DILocation(line: 4236, column: 4, scope: !19807)
!19807 = distinct !DILexicalBlock(scope: !19800, file: !3, line: 4234, column: 44)
!19808 = !DILocation(line: 4238, column: 27, scope: !19809)
!19809 = distinct !DILexicalBlock(scope: !19800, file: !3, line: 4237, column: 9)
!19810 = !DILocation(line: 4238, column: 5, scope: !19809)
!19811 = !DILocation(line: 4239, column: 23, scope: !19812)
!19812 = distinct !DILexicalBlock(scope: !19809, file: !3, line: 4239, column: 9)
!19813 = !DILocation(line: 4239, column: 28, scope: !19812)
!19814 = !DILocation(line: 4239, column: 33, scope: !19812)
!19815 = !DILocation(line: 4239, column: 39, scope: !19812)
!19816 = !DILocation(line: 4239, column: 9, scope: !19812)
!19817 = !DILocation(line: 4239, column: 9, scope: !19809)
!19818 = !DILocation(line: 4241, column: 5, scope: !19819)
!19819 = distinct !DILexicalBlock(scope: !19812, file: !3, line: 4239, column: 45)
!19820 = !DILocation(line: 4244, column: 10, scope: !19821)
!19821 = distinct !DILexicalBlock(scope: !19822, file: !3, line: 4244, column: 10)
!19822 = distinct !DILexicalBlock(scope: !19812, file: !3, line: 4242, column: 10)
!19823 = !DILocation(line: 4244, column: 15, scope: !19821)
!19824 = !DILocation(line: 4244, column: 21, scope: !19821)
!19825 = !DILocation(line: 4244, column: 10, scope: !19822)
!19826 = !DILocation(line: 4244, column: 49, scope: !19821)
!19827 = !DILocation(line: 4244, column: 27, scope: !19821)
!19828 = !DILocation(line: 4245, column: 6, scope: !19822)
!19829 = !DILocation(line: 4252, column: 20, scope: !19830)
!19830 = distinct !DILexicalBlock(scope: !19736, file: !3, line: 4252, column: 6)
!19831 = !DILocation(line: 4252, column: 6, scope: !19830)
!19832 = !DILocation(line: 4252, column: 6, scope: !19736)
!19833 = !DILocation(line: 4254, column: 2, scope: !19834)
!19834 = distinct !DILexicalBlock(scope: !19830, file: !3, line: 4252, column: 29)
!19835 = !DILocation(line: 4256, column: 7, scope: !19836)
!19836 = distinct !DILexicalBlock(scope: !19837, file: !3, line: 4256, column: 7)
!19837 = distinct !DILexicalBlock(scope: !19830, file: !3, line: 4255, column: 7)
!19838 = !DILocation(line: 4256, column: 12, scope: !19836)
!19839 = !DILocation(line: 4256, column: 19, scope: !19836)
!19840 = !DILocation(line: 4256, column: 7, scope: !19837)
!19841 = !DILocation(line: 4256, column: 25, scope: !19836)
!19842 = !DILocation(line: 4256, column: 30, scope: !19836)
!19843 = !DILocation(line: 4256, column: 37, scope: !19836)
!19844 = !DILocation(line: 4257, column: 25, scope: !19837)
!19845 = !DILocation(line: 4257, column: 3, scope: !19837)
!19846 = !DILocation(line: 4258, column: 21, scope: !19847)
!19847 = distinct !DILexicalBlock(scope: !19837, file: !3, line: 4258, column: 7)
!19848 = !DILocation(line: 4258, column: 7, scope: !19847)
!19849 = !DILocation(line: 4258, column: 7, scope: !19837)
!19850 = !DILocation(line: 4260, column: 3, scope: !19851)
!19851 = distinct !DILexicalBlock(scope: !19847, file: !3, line: 4258, column: 30)
!19852 = !DILocation(line: 4262, column: 26, scope: !19853)
!19853 = distinct !DILexicalBlock(scope: !19847, file: !3, line: 4261, column: 8)
!19854 = !DILocation(line: 4262, column: 4, scope: !19853)
!19855 = !DILocation(line: 4263, column: 22, scope: !19856)
!19856 = distinct !DILexicalBlock(scope: !19853, file: !3, line: 4263, column: 8)
!19857 = !DILocation(line: 4263, column: 8, scope: !19856)
!19858 = !DILocation(line: 4263, column: 8, scope: !19853)
!19859 = !DILocation(line: 4265, column: 4, scope: !19860)
!19860 = distinct !DILexicalBlock(scope: !19856, file: !3, line: 4263, column: 31)
!19861 = !DILocation(line: 4267, column: 27, scope: !19862)
!19862 = distinct !DILexicalBlock(scope: !19856, file: !3, line: 4266, column: 9)
!19863 = !DILocation(line: 4267, column: 5, scope: !19862)
!19864 = !DILocation(line: 4268, column: 23, scope: !19865)
!19865 = distinct !DILexicalBlock(scope: !19862, file: !3, line: 4268, column: 9)
!19866 = !DILocation(line: 4268, column: 9, scope: !19865)
!19867 = !DILocation(line: 4268, column: 9, scope: !19862)
!19868 = !DILocation(line: 4270, column: 5, scope: !19869)
!19869 = distinct !DILexicalBlock(scope: !19865, file: !3, line: 4268, column: 32)
!19870 = !DILocation(line: 4273, column: 10, scope: !19871)
!19871 = distinct !DILexicalBlock(scope: !19872, file: !3, line: 4273, column: 10)
!19872 = distinct !DILexicalBlock(scope: !19865, file: !3, line: 4271, column: 10)
!19873 = !DILocation(line: 4273, column: 15, scope: !19871)
!19874 = !DILocation(line: 4273, column: 21, scope: !19871)
!19875 = !DILocation(line: 4273, column: 10, scope: !19872)
!19876 = !DILocation(line: 4273, column: 49, scope: !19871)
!19877 = !DILocation(line: 4273, column: 27, scope: !19871)
!19878 = !DILocation(line: 4274, column: 10, scope: !19879)
!19879 = distinct !DILexicalBlock(scope: !19872, file: !3, line: 4274, column: 10)
!19880 = !DILocation(line: 4274, column: 15, scope: !19879)
!19881 = !DILocation(line: 4274, column: 21, scope: !19879)
!19882 = !DILocation(line: 4274, column: 10, scope: !19872)
!19883 = !DILocation(line: 4274, column: 49, scope: !19879)
!19884 = !DILocation(line: 4274, column: 27, scope: !19879)
!19885 = !DILocation(line: 4275, column: 6, scope: !19872)
!19886 = !DILocation(line: 4281, column: 6, scope: !19887)
!19887 = distinct !DILexicalBlock(scope: !19736, file: !3, line: 4281, column: 6)
!19888 = !DILocation(line: 4281, column: 11, scope: !19887)
!19889 = !DILocation(line: 4281, column: 20, scope: !19887)
!19890 = !DILocation(line: 4281, column: 25, scope: !19887)
!19891 = !DILocation(line: 4281, column: 17, scope: !19887)
!19892 = !DILocation(line: 4281, column: 6, scope: !19736)
!19893 = !DILocation(line: 4282, column: 14, scope: !19894)
!19894 = distinct !DILexicalBlock(scope: !19887, file: !3, line: 4281, column: 32)
!19895 = !DILocation(line: 4282, column: 18, scope: !19894)
!19896 = !DILocation(line: 4282, column: 3, scope: !19894)
!19897 = !DILocation(line: 4283, column: 3, scope: !19894)
!19898 = !DILocation(line: 4289, column: 9, scope: !19736)
!19899 = !DILocation(line: 4289, column: 14, scope: !19736)
!19900 = !DILocation(line: 4289, column: 17, scope: !19736)
!19901 = !DILocation(line: 4289, column: 22, scope: !19736)
!19902 = !DILocation(line: 4289, column: 28, scope: !19736)
!19903 = !DILocation(line: 4289, column: 6, scope: !19736)
!19904 = !DILocation(line: 4290, column: 8, scope: !19736)
!19905 = !DILocation(line: 4290, column: 13, scope: !19736)
!19906 = !DILocation(line: 4290, column: 6, scope: !19736)
!19907 = !DILocation(line: 4291, column: 7, scope: !19736)
!19908 = !DILocation(line: 4293, column: 9, scope: !19909)
!19909 = distinct !DILexicalBlock(scope: !19736, file: !3, line: 4293, column: 2)
!19910 = !DILocation(line: 4293, column: 7, scope: !19909)
!19911 = !DILocation(line: 4293, column: 14, scope: !19912)
!19912 = distinct !DILexicalBlock(scope: !19909, file: !3, line: 4293, column: 2)
!19913 = !DILocation(line: 4293, column: 18, scope: !19912)
!19914 = !DILocation(line: 4293, column: 23, scope: !19912)
!19915 = !DILocation(line: 4293, column: 16, scope: !19912)
!19916 = !DILocation(line: 4293, column: 2, scope: !19909)
!19917 = !DILocation(line: 4294, column: 20, scope: !19918)
!19918 = distinct !DILexicalBlock(scope: !19912, file: !3, line: 4293, column: 73)
!19919 = !DILocation(line: 4294, column: 25, scope: !19918)
!19920 = !DILocation(line: 4294, column: 30, scope: !19918)
!19921 = !DILocation(line: 4294, column: 35, scope: !19918)
!19922 = !DILocation(line: 4294, column: 11, scope: !19918)
!19923 = !DILocation(line: 4294, column: 8, scope: !19918)
!19924 = !DILocation(line: 4295, column: 2, scope: !19918)
!19925 = !DILocation(line: 4293, column: 31, scope: !19912)
!19926 = !DILocation(line: 4293, column: 42, scope: !19912)
!19927 = !DILocation(line: 4293, column: 47, scope: !19912)
!19928 = !DILocation(line: 4293, column: 39, scope: !19912)
!19929 = !DILocation(line: 4293, column: 61, scope: !19912)
!19930 = !DILocation(line: 4293, column: 66, scope: !19912)
!19931 = !DILocation(line: 4293, column: 58, scope: !19912)
!19932 = !DILocation(line: 4293, column: 2, scope: !19912)
!19933 = distinct !{!19933, !19916, !19934}
!19934 = !DILocation(line: 4295, column: 2, scope: !19909)
!19935 = !DILocation(line: 4297, column: 9, scope: !19736)
!19936 = !DILocation(line: 4297, column: 14, scope: !19736)
!19937 = !DILocation(line: 4297, column: 17, scope: !19736)
!19938 = !DILocation(line: 4297, column: 22, scope: !19736)
!19939 = !DILocation(line: 4297, column: 28, scope: !19736)
!19940 = !DILocation(line: 4297, column: 6, scope: !19736)
!19941 = !DILocation(line: 4298, column: 9, scope: !19736)
!19942 = !DILocation(line: 4298, column: 14, scope: !19736)
!19943 = !DILocation(line: 4298, column: 17, scope: !19736)
!19944 = !DILocation(line: 4298, column: 22, scope: !19736)
!19945 = !DILocation(line: 4298, column: 31, scope: !19736)
!19946 = !DILocation(line: 4298, column: 36, scope: !19736)
!19947 = !DILocation(line: 4298, column: 42, scope: !19736)
!19948 = !DILocation(line: 4298, column: 28, scope: !19736)
!19949 = !DILocation(line: 4298, column: 6, scope: !19736)
!19950 = !DILocation(line: 4299, column: 7, scope: !19736)
!19951 = !DILocation(line: 4301, column: 9, scope: !19952)
!19952 = distinct !DILexicalBlock(scope: !19736, file: !3, line: 4301, column: 2)
!19953 = !DILocation(line: 4301, column: 7, scope: !19952)
!19954 = !DILocation(line: 4301, column: 14, scope: !19955)
!19955 = distinct !DILexicalBlock(scope: !19952, file: !3, line: 4301, column: 2)
!19956 = !DILocation(line: 4301, column: 18, scope: !19955)
!19957 = !DILocation(line: 4301, column: 23, scope: !19955)
!19958 = !DILocation(line: 4301, column: 16, scope: !19955)
!19959 = !DILocation(line: 4301, column: 2, scope: !19952)
!19960 = !DILocation(line: 4302, column: 20, scope: !19961)
!19961 = distinct !DILexicalBlock(scope: !19955, file: !3, line: 4301, column: 73)
!19962 = !DILocation(line: 4302, column: 25, scope: !19961)
!19963 = !DILocation(line: 4302, column: 30, scope: !19961)
!19964 = !DILocation(line: 4302, column: 35, scope: !19961)
!19965 = !DILocation(line: 4302, column: 11, scope: !19961)
!19966 = !DILocation(line: 4302, column: 8, scope: !19961)
!19967 = !DILocation(line: 4303, column: 2, scope: !19961)
!19968 = !DILocation(line: 4301, column: 31, scope: !19955)
!19969 = !DILocation(line: 4301, column: 42, scope: !19955)
!19970 = !DILocation(line: 4301, column: 47, scope: !19955)
!19971 = !DILocation(line: 4301, column: 39, scope: !19955)
!19972 = !DILocation(line: 4301, column: 61, scope: !19955)
!19973 = !DILocation(line: 4301, column: 66, scope: !19955)
!19974 = !DILocation(line: 4301, column: 58, scope: !19955)
!19975 = !DILocation(line: 4301, column: 2, scope: !19955)
!19976 = distinct !{!19976, !19959, !19977}
!19977 = !DILocation(line: 4303, column: 2, scope: !19952)
!19978 = !DILocation(line: 4306, column: 10, scope: !19736)
!19979 = !DILocation(line: 4306, column: 15, scope: !19736)
!19980 = !DILocation(line: 4306, column: 8, scope: !19736)
!19981 = !DILocation(line: 4307, column: 16, scope: !19736)
!19982 = !DILocation(line: 4307, column: 21, scope: !19736)
!19983 = !DILocation(line: 4307, column: 2, scope: !19736)
!19984 = !DILocation(line: 4307, column: 7, scope: !19736)
!19985 = !DILocation(line: 4307, column: 13, scope: !19736)
!19986 = !DILocation(line: 4308, column: 6, scope: !19987)
!19987 = distinct !DILexicalBlock(scope: !19736, file: !3, line: 4308, column: 6)
!19988 = !DILocation(line: 4308, column: 11, scope: !19987)
!19989 = !DILocation(line: 4308, column: 18, scope: !19987)
!19990 = !DILocation(line: 4308, column: 22, scope: !19987)
!19991 = !DILocation(line: 4308, column: 25, scope: !19987)
!19992 = !DILocation(line: 4308, column: 30, scope: !19987)
!19993 = !DILocation(line: 4308, column: 39, scope: !19987)
!19994 = !DILocation(line: 4308, column: 44, scope: !19987)
!19995 = !DILocation(line: 4308, column: 37, scope: !19987)
!19996 = !DILocation(line: 4308, column: 6, scope: !19736)
!19997 = !DILocation(line: 4308, column: 51, scope: !19987)
!19998 = !DILocation(line: 4308, column: 56, scope: !19987)
!19999 = !DILocation(line: 4308, column: 62, scope: !19987)
!20000 = !DILocation(line: 4309, column: 6, scope: !20001)
!20001 = distinct !DILexicalBlock(scope: !19736, file: !3, line: 4309, column: 6)
!20002 = !DILocation(line: 4309, column: 11, scope: !20001)
!20003 = !DILocation(line: 4309, column: 18, scope: !20001)
!20004 = !DILocation(line: 4309, column: 22, scope: !20001)
!20005 = !DILocation(line: 4309, column: 25, scope: !20001)
!20006 = !DILocation(line: 4309, column: 30, scope: !20001)
!20007 = !DILocation(line: 4309, column: 39, scope: !20001)
!20008 = !DILocation(line: 4309, column: 44, scope: !20001)
!20009 = !DILocation(line: 4309, column: 37, scope: !20001)
!20010 = !DILocation(line: 4309, column: 6, scope: !19736)
!20011 = !DILocation(line: 4309, column: 51, scope: !20001)
!20012 = !DILocation(line: 4309, column: 56, scope: !20001)
!20013 = !DILocation(line: 4309, column: 62, scope: !20001)
!20014 = !DILocation(line: 4310, column: 9, scope: !19736)
!20015 = !DILocation(line: 4310, column: 14, scope: !19736)
!20016 = !DILocation(line: 4310, column: 7, scope: !19736)
!20017 = !DILocation(line: 4311, column: 12, scope: !19736)
!20018 = !DILocation(line: 4311, column: 24, scope: !19736)
!20019 = !DILocation(line: 4311, column: 29, scope: !19736)
!20020 = !DILocation(line: 4311, column: 37, scope: !19736)
!20021 = !DILocation(line: 4311, column: 42, scope: !19736)
!20022 = !DILocation(line: 4311, column: 35, scope: !19736)
!20023 = !DILocation(line: 4311, column: 48, scope: !19736)
!20024 = !DILocation(line: 4311, column: 2, scope: !19736)
!20025 = !DILocation(line: 4311, column: 7, scope: !19736)
!20026 = !DILocation(line: 4311, column: 10, scope: !19736)
!20027 = !DILocation(line: 4313, column: 7, scope: !19736)
!20028 = !DILocation(line: 4313, column: 12, scope: !19736)
!20029 = !DILocation(line: 4313, column: 5, scope: !19736)
!20030 = !DILocation(line: 4314, column: 8, scope: !19736)
!20031 = !DILocation(line: 4314, column: 6, scope: !19736)
!20032 = !DILocation(line: 4316, column: 9, scope: !20033)
!20033 = distinct !DILexicalBlock(scope: !19736, file: !3, line: 4316, column: 2)
!20034 = !DILocation(line: 4316, column: 7, scope: !20033)
!20035 = !DILocation(line: 4316, column: 14, scope: !20036)
!20036 = distinct !DILexicalBlock(scope: !20033, file: !3, line: 4316, column: 2)
!20037 = !DILocation(line: 4316, column: 18, scope: !20036)
!20038 = !DILocation(line: 4316, column: 23, scope: !20036)
!20039 = !DILocation(line: 4316, column: 16, scope: !20036)
!20040 = !DILocation(line: 4316, column: 2, scope: !20033)
!20041 = !DILocation(line: 4319, column: 7, scope: !20042)
!20042 = distinct !DILexicalBlock(scope: !20043, file: !3, line: 4319, column: 7)
!20043 = distinct !DILexicalBlock(scope: !20036, file: !3, line: 4316, column: 35)
!20044 = !DILocation(line: 4319, column: 14, scope: !20042)
!20045 = !DILocation(line: 4319, column: 12, scope: !20042)
!20046 = !DILocation(line: 4319, column: 7, scope: !20043)
!20047 = !DILocation(line: 4319, column: 27, scope: !20042)
!20048 = !DILocation(line: 4319, column: 32, scope: !20042)
!20049 = !DILocation(line: 4319, column: 35, scope: !20042)
!20050 = !DILocation(line: 4319, column: 39, scope: !20042)
!20051 = !DILocation(line: 4319, column: 44, scope: !20042)
!20052 = !DILocation(line: 4319, column: 37, scope: !20042)
!20053 = !DILocation(line: 4319, column: 24, scope: !20042)
!20054 = !DILocation(line: 4319, column: 20, scope: !20042)
!20055 = !DILocation(line: 4320, column: 27, scope: !20042)
!20056 = !DILocation(line: 4320, column: 32, scope: !20042)
!20057 = !DILocation(line: 4320, column: 36, scope: !20042)
!20058 = !DILocation(line: 4320, column: 41, scope: !20042)
!20059 = !DILocation(line: 4320, column: 49, scope: !20042)
!20060 = !DILocation(line: 4320, column: 47, scope: !20042)
!20061 = !DILocation(line: 4320, column: 51, scope: !20042)
!20062 = !DILocation(line: 4320, column: 58, scope: !20042)
!20063 = !DILocation(line: 4320, column: 63, scope: !20042)
!20064 = !DILocation(line: 4320, column: 56, scope: !20042)
!20065 = !DILocation(line: 4320, column: 24, scope: !20042)
!20066 = !DILocation(line: 4322, column: 10, scope: !20067)
!20067 = distinct !DILexicalBlock(scope: !20043, file: !3, line: 4322, column: 3)
!20068 = !DILocation(line: 4322, column: 8, scope: !20067)
!20069 = !DILocation(line: 4322, column: 15, scope: !20070)
!20070 = distinct !DILexicalBlock(scope: !20067, file: !3, line: 4322, column: 3)
!20071 = !DILocation(line: 4322, column: 19, scope: !20070)
!20072 = !DILocation(line: 4322, column: 24, scope: !20070)
!20073 = !DILocation(line: 4322, column: 17, scope: !20070)
!20074 = !DILocation(line: 4322, column: 3, scope: !20067)
!20075 = !DILocation(line: 4323, column: 8, scope: !20076)
!20076 = distinct !DILexicalBlock(scope: !20077, file: !3, line: 4323, column: 8)
!20077 = distinct !DILexicalBlock(scope: !20070, file: !3, line: 4322, column: 42)
!20078 = !DILocation(line: 4323, column: 12, scope: !20076)
!20079 = !DILocation(line: 4323, column: 10, scope: !20076)
!20080 = !DILocation(line: 4323, column: 8, scope: !20077)
!20081 = !DILocation(line: 4324, column: 23, scope: !20082)
!20082 = distinct !DILexicalBlock(scope: !20076, file: !3, line: 4323, column: 19)
!20083 = !DILocation(line: 4324, column: 27, scope: !20082)
!20084 = !DILocation(line: 4324, column: 37, scope: !20082)
!20085 = !DILocation(line: 4324, column: 42, scope: !20082)
!20086 = !DILocation(line: 4324, column: 5, scope: !20082)
!20087 = !DILocation(line: 4325, column: 6, scope: !20082)
!20088 = !DILocation(line: 4325, column: 12, scope: !20082)
!20089 = !DILocation(line: 4325, column: 11, scope: !20082)
!20090 = !DILocation(line: 4325, column: 20, scope: !20082)
!20091 = !DILocation(line: 4326, column: 19, scope: !20082)
!20092 = !DILocation(line: 4326, column: 5, scope: !20082)
!20093 = !DILocation(line: 4327, column: 4, scope: !20082)
!20094 = !DILocation(line: 4329, column: 23, scope: !20095)
!20095 = distinct !DILexicalBlock(scope: !20076, file: !3, line: 4328, column: 9)
!20096 = !DILocation(line: 4329, column: 27, scope: !20095)
!20097 = !DILocation(line: 4329, column: 37, scope: !20095)
!20098 = !DILocation(line: 4329, column: 42, scope: !20095)
!20099 = !DILocation(line: 4329, column: 5, scope: !20095)
!20100 = !DILocation(line: 4330, column: 6, scope: !20095)
!20101 = !DILocation(line: 4330, column: 12, scope: !20095)
!20102 = !DILocation(line: 4330, column: 11, scope: !20095)
!20103 = !DILocation(line: 4330, column: 20, scope: !20095)
!20104 = !DILocation(line: 4332, column: 3, scope: !20077)
!20105 = !DILocation(line: 4322, column: 32, scope: !20070)
!20106 = !DILocation(line: 4322, column: 38, scope: !20070)
!20107 = !DILocation(line: 4322, column: 3, scope: !20070)
!20108 = distinct !{!20108, !20074, !20109}
!20109 = !DILocation(line: 4332, column: 3, scope: !20067)
!20110 = !DILocation(line: 4333, column: 2, scope: !20043)
!20111 = !DILocation(line: 4316, column: 31, scope: !20036)
!20112 = !DILocation(line: 4316, column: 2, scope: !20036)
!20113 = distinct !{!20113, !20040, !20114}
!20114 = !DILocation(line: 4333, column: 2, scope: !20033)
!20115 = !DILocation(line: 4335, column: 6, scope: !20116)
!20116 = distinct !DILexicalBlock(scope: !19736, file: !3, line: 4335, column: 6)
!20117 = !DILocation(line: 4335, column: 11, scope: !20116)
!20118 = !DILocation(line: 4335, column: 16, scope: !20116)
!20119 = !DILocation(line: 4335, column: 6, scope: !19736)
!20120 = !DILocation(line: 4337, column: 24, scope: !20121)
!20121 = distinct !DILexicalBlock(scope: !20116, file: !3, line: 4335, column: 29)
!20122 = !DILocation(line: 4337, column: 3, scope: !20121)
!20123 = !DILocation(line: 4340, column: 24, scope: !20121)
!20124 = !DILocation(line: 4340, column: 3, scope: !20121)
!20125 = !DILocation(line: 4341, column: 2, scope: !20121)
!20126 = !DILocation(line: 4343, column: 2, scope: !19736)
!20127 = !DILocation(line: 4343, column: 12, scope: !19736)
!20128 = !DILocation(line: 4344, column: 14, scope: !19736)
!20129 = !DILocation(line: 4344, column: 24, scope: !19736)
!20130 = !DILocation(line: 4344, column: 2, scope: !19736)
!20131 = !DILocation(line: 4345, column: 16, scope: !19736)
!20132 = !DILocation(line: 4345, column: 2, scope: !19736)
!20133 = !DILocation(line: 4346, column: 1, scope: !19736)
!20134 = distinct !DISubprogram(name: "mul_v3_fl", scope: !5794, file: !5794, line: 392, type: !20135, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!20135 = !DISubroutineType(types: !20136)
!20136 = !{null, !3154, !204}
!20137 = !DILocalVariable(name: "r", arg: 1, scope: !20134, file: !5794, line: 392, type: !3154)
!20138 = !DILocation(line: 392, column: 30, scope: !20134)
!20139 = !DILocalVariable(name: "f", arg: 2, scope: !20134, file: !5794, line: 392, type: !204)
!20140 = !DILocation(line: 392, column: 42, scope: !20134)
!20141 = !DILocation(line: 394, column: 10, scope: !20134)
!20142 = !DILocation(line: 394, column: 2, scope: !20134)
!20143 = !DILocation(line: 394, column: 7, scope: !20134)
!20144 = !DILocation(line: 395, column: 10, scope: !20134)
!20145 = !DILocation(line: 395, column: 2, scope: !20134)
!20146 = !DILocation(line: 395, column: 7, scope: !20134)
!20147 = !DILocation(line: 396, column: 10, scope: !20134)
!20148 = !DILocation(line: 396, column: 2, scope: !20134)
!20149 = !DILocation(line: 396, column: 7, scope: !20134)
!20150 = !DILocation(line: 397, column: 1, scope: !20134)
!20151 = distinct !DISubprogram(name: "len_v3v3", scope: !5794, file: !5794, line: 759, type: !20152, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!20152 = !DISubroutineType(types: !20153)
!20153 = !{!204, !4638, !4638}
!20154 = !DILocalVariable(name: "a", arg: 1, scope: !20151, file: !5794, line: 759, type: !4638)
!20155 = !DILocation(line: 759, column: 36, scope: !20151)
!20156 = !DILocalVariable(name: "b", arg: 2, scope: !20151, file: !5794, line: 759, type: !4638)
!20157 = !DILocation(line: 759, column: 54, scope: !20151)
!20158 = !DILocalVariable(name: "d", scope: !20151, file: !5794, line: 761, type: !282)
!20159 = !DILocation(line: 761, column: 8, scope: !20151)
!20160 = !DILocation(line: 763, column: 14, scope: !20151)
!20161 = !DILocation(line: 763, column: 17, scope: !20151)
!20162 = !DILocation(line: 763, column: 20, scope: !20151)
!20163 = !DILocation(line: 763, column: 2, scope: !20151)
!20164 = !DILocation(line: 764, column: 16, scope: !20151)
!20165 = !DILocation(line: 764, column: 9, scope: !20151)
!20166 = !DILocation(line: 764, column: 2, scope: !20151)
!20167 = distinct !DISubprogram(name: "len_v3", scope: !5794, file: !5794, line: 714, type: !20168, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!20168 = !DISubroutineType(types: !20169)
!20169 = !{!204, !4638}
!20170 = !DILocalVariable(name: "a", arg: 1, scope: !20167, file: !5794, line: 714, type: !4638)
!20171 = !DILocation(line: 714, column: 34, scope: !20167)
!20172 = !DILocation(line: 716, column: 24, scope: !20167)
!20173 = !DILocation(line: 716, column: 27, scope: !20167)
!20174 = !DILocation(line: 716, column: 15, scope: !20167)
!20175 = !DILocation(line: 716, column: 9, scope: !20167)
!20176 = !DILocation(line: 716, column: 2, scope: !20167)
!20177 = distinct !DISubprogram(name: "dot_v3v3", scope: !5794, file: !5794, line: 619, type: !20152, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!20178 = !DILocalVariable(name: "a", arg: 1, scope: !20177, file: !5794, line: 619, type: !4638)
!20179 = !DILocation(line: 619, column: 36, scope: !20177)
!20180 = !DILocalVariable(name: "b", arg: 2, scope: !20177, file: !5794, line: 619, type: !4638)
!20181 = !DILocation(line: 619, column: 54, scope: !20177)
!20182 = !DILocation(line: 621, column: 9, scope: !20177)
!20183 = !DILocation(line: 621, column: 16, scope: !20177)
!20184 = !DILocation(line: 621, column: 14, scope: !20177)
!20185 = !DILocation(line: 621, column: 23, scope: !20177)
!20186 = !DILocation(line: 621, column: 30, scope: !20177)
!20187 = !DILocation(line: 621, column: 28, scope: !20177)
!20188 = !DILocation(line: 621, column: 21, scope: !20177)
!20189 = !DILocation(line: 621, column: 37, scope: !20177)
!20190 = !DILocation(line: 621, column: 44, scope: !20177)
!20191 = !DILocation(line: 621, column: 42, scope: !20177)
!20192 = !DILocation(line: 621, column: 35, scope: !20177)
!20193 = !DILocation(line: 621, column: 2, scope: !20177)
!20194 = distinct !DISubprogram(name: "is_u_selected", scope: !3, file: !3, line: 4117, type: !20195, scopeLine: 4118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!20195 = !DISubroutineType(types: !20196)
!20196 = !{!1081, !3163, !22}
!20197 = !DILocalVariable(name: "nu", arg: 1, scope: !20194, file: !3, line: 4117, type: !3163)
!20198 = !DILocation(line: 4117, column: 33, scope: !20194)
!20199 = !DILocalVariable(name: "u", arg: 2, scope: !20194, file: !3, line: 4117, type: !22)
!20200 = !DILocation(line: 4117, column: 41, scope: !20194)
!20201 = !DILocalVariable(name: "bp", scope: !20194, file: !3, line: 4119, type: !3093)
!20202 = !DILocation(line: 4119, column: 10, scope: !20194)
!20203 = !DILocalVariable(name: "v", scope: !20194, file: !3, line: 4120, type: !22)
!20204 = !DILocation(line: 4120, column: 6, scope: !20194)
!20205 = !DILocation(line: 4123, column: 8, scope: !20194)
!20206 = !DILocation(line: 4123, column: 12, scope: !20194)
!20207 = !DILocation(line: 4123, column: 15, scope: !20194)
!20208 = !DILocation(line: 4123, column: 5, scope: !20194)
!20209 = !DILocation(line: 4124, column: 9, scope: !20210)
!20210 = distinct !DILexicalBlock(scope: !20194, file: !3, line: 4124, column: 2)
!20211 = !DILocation(line: 4124, column: 7, scope: !20210)
!20212 = !DILocation(line: 4124, column: 14, scope: !20213)
!20213 = distinct !DILexicalBlock(scope: !20210, file: !3, line: 4124, column: 2)
!20214 = !DILocation(line: 4124, column: 18, scope: !20213)
!20215 = !DILocation(line: 4124, column: 22, scope: !20213)
!20216 = !DILocation(line: 4124, column: 28, scope: !20213)
!20217 = !DILocation(line: 4124, column: 16, scope: !20213)
!20218 = !DILocation(line: 4124, column: 2, scope: !20210)
!20219 = !DILocation(line: 4125, column: 8, scope: !20220)
!20220 = distinct !DILexicalBlock(scope: !20221, file: !3, line: 4125, column: 7)
!20221 = distinct !DILexicalBlock(scope: !20213, file: !3, line: 4124, column: 55)
!20222 = !DILocation(line: 4125, column: 10, scope: !20220)
!20223 = !DILocation(line: 4125, column: 16, scope: !20220)
!20224 = !DILocation(line: 4125, column: 20, scope: !20220)
!20225 = !DILocation(line: 4125, column: 24, scope: !20220)
!20226 = !DILocation(line: 4125, column: 27, scope: !20220)
!20227 = !DILocation(line: 4125, column: 7, scope: !20221)
!20228 = !DILocation(line: 4126, column: 4, scope: !20229)
!20229 = distinct !DILexicalBlock(scope: !20220, file: !3, line: 4125, column: 38)
!20230 = !DILocation(line: 4128, column: 2, scope: !20221)
!20231 = !DILocation(line: 4124, column: 34, scope: !20213)
!20232 = !DILocation(line: 4124, column: 44, scope: !20213)
!20233 = !DILocation(line: 4124, column: 48, scope: !20213)
!20234 = !DILocation(line: 4124, column: 41, scope: !20213)
!20235 = !DILocation(line: 4124, column: 2, scope: !20213)
!20236 = distinct !{!20236, !20218, !20237}
!20237 = !DILocation(line: 4128, column: 2, scope: !20210)
!20238 = !DILocation(line: 4130, column: 2, scope: !20194)
!20239 = !DILocation(line: 4131, column: 1, scope: !20194)
!20240 = distinct !DISubprogram(name: "rotate_direction_nurb", scope: !3, file: !3, line: 4092, type: !20241, scopeLine: 4093, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!20241 = !DISubroutineType(types: !20242)
!20242 = !{null, !3163}
!20243 = !DILocalVariable(name: "nu", arg: 1, scope: !20240, file: !3, line: 4092, type: !3163)
!20244 = !DILocation(line: 4092, column: 41, scope: !20240)
!20245 = !DILocalVariable(name: "bp1", scope: !20240, file: !3, line: 4094, type: !3093)
!20246 = !DILocation(line: 4094, column: 10, scope: !20240)
!20247 = !DILocalVariable(name: "bp2", scope: !20240, file: !3, line: 4094, type: !3093)
!20248 = !DILocation(line: 4094, column: 16, scope: !20240)
!20249 = !DILocalVariable(name: "temp", scope: !20240, file: !3, line: 4094, type: !3093)
!20250 = !DILocation(line: 4094, column: 22, scope: !20240)
!20251 = !DILocalVariable(name: "u", scope: !20240, file: !3, line: 4095, type: !22)
!20252 = !DILocation(line: 4095, column: 6, scope: !20240)
!20253 = !DILocalVariable(name: "v", scope: !20240, file: !3, line: 4095, type: !22)
!20254 = !DILocation(line: 4095, column: 9, scope: !20240)
!20255 = !DILocalVariable(name: "sw_ap", scope: !20256, file: !3, line: 4097, type: !22)
!20256 = distinct !DILexicalBlock(scope: !20240, file: !3, line: 4097, column: 2)
!20257 = !DILocation(line: 4097, column: 2, scope: !20256)
!20258 = !DILocalVariable(name: "sw_ap", scope: !20259, file: !3, line: 4098, type: !48)
!20259 = distinct !DILexicalBlock(scope: !20240, file: !3, line: 4098, column: 2)
!20260 = !DILocation(line: 4098, column: 2, scope: !20259)
!20261 = !DILocalVariable(name: "sw_ap", scope: !20262, file: !3, line: 4099, type: !48)
!20262 = distinct !DILexicalBlock(scope: !20240, file: !3, line: 4099, column: 2)
!20263 = !DILocation(line: 4099, column: 2, scope: !20262)
!20264 = !DILocalVariable(name: "sw_ap", scope: !20265, file: !3, line: 4100, type: !48)
!20265 = distinct !DILexicalBlock(scope: !20240, file: !3, line: 4100, column: 2)
!20266 = !DILocation(line: 4100, column: 2, scope: !20265)
!20267 = !DILocalVariable(name: "sw_ap", scope: !20268, file: !3, line: 4102, type: !3154)
!20268 = distinct !DILexicalBlock(scope: !20240, file: !3, line: 4102, column: 2)
!20269 = !DILocation(line: 4102, column: 2, scope: !20268)
!20270 = !DILocation(line: 4103, column: 24, scope: !20240)
!20271 = !DILocation(line: 4103, column: 28, scope: !20240)
!20272 = !DILocation(line: 4103, column: 36, scope: !20240)
!20273 = !DILocation(line: 4103, column: 2, scope: !20240)
!20274 = !DILocation(line: 4105, column: 9, scope: !20240)
!20275 = !DILocation(line: 4105, column: 23, scope: !20240)
!20276 = !DILocation(line: 4105, column: 27, scope: !20240)
!20277 = !DILocation(line: 4105, column: 7, scope: !20240)
!20278 = !DILocation(line: 4106, column: 8, scope: !20240)
!20279 = !DILocation(line: 4106, column: 12, scope: !20240)
!20280 = !DILocation(line: 4106, column: 6, scope: !20240)
!20281 = !DILocation(line: 4107, column: 9, scope: !20282)
!20282 = distinct !DILexicalBlock(scope: !20240, file: !3, line: 4107, column: 2)
!20283 = !DILocation(line: 4107, column: 7, scope: !20282)
!20284 = !DILocation(line: 4107, column: 14, scope: !20285)
!20285 = distinct !DILexicalBlock(scope: !20282, file: !3, line: 4107, column: 2)
!20286 = !DILocation(line: 4107, column: 18, scope: !20285)
!20287 = !DILocation(line: 4107, column: 22, scope: !20285)
!20288 = !DILocation(line: 4107, column: 16, scope: !20285)
!20289 = !DILocation(line: 4107, column: 2, scope: !20282)
!20290 = !DILocation(line: 4108, column: 10, scope: !20291)
!20291 = distinct !DILexicalBlock(scope: !20292, file: !3, line: 4108, column: 3)
!20292 = distinct !DILexicalBlock(scope: !20285, file: !3, line: 4107, column: 34)
!20293 = !DILocation(line: 4108, column: 8, scope: !20291)
!20294 = !DILocation(line: 4108, column: 15, scope: !20295)
!20295 = distinct !DILexicalBlock(scope: !20291, file: !3, line: 4108, column: 3)
!20296 = !DILocation(line: 4108, column: 19, scope: !20295)
!20297 = !DILocation(line: 4108, column: 23, scope: !20295)
!20298 = !DILocation(line: 4108, column: 17, scope: !20295)
!20299 = !DILocation(line: 4108, column: 3, scope: !20291)
!20300 = !DILocation(line: 4109, column: 10, scope: !20301)
!20301 = distinct !DILexicalBlock(scope: !20295, file: !3, line: 4108, column: 42)
!20302 = !DILocation(line: 4109, column: 18, scope: !20301)
!20303 = !DILocation(line: 4109, column: 22, scope: !20301)
!20304 = !DILocation(line: 4109, column: 30, scope: !20301)
!20305 = !DILocation(line: 4109, column: 28, scope: !20301)
!20306 = !DILocation(line: 4109, column: 32, scope: !20301)
!20307 = !DILocation(line: 4109, column: 40, scope: !20301)
!20308 = !DILocation(line: 4109, column: 44, scope: !20301)
!20309 = !DILocation(line: 4109, column: 37, scope: !20301)
!20310 = !DILocation(line: 4109, column: 15, scope: !20301)
!20311 = !DILocation(line: 4109, column: 53, scope: !20301)
!20312 = !DILocation(line: 4109, column: 51, scope: !20301)
!20313 = !DILocation(line: 4109, column: 8, scope: !20301)
!20314 = !DILocation(line: 4110, column: 5, scope: !20301)
!20315 = !DILocation(line: 4110, column: 12, scope: !20301)
!20316 = !DILocation(line: 4110, column: 11, scope: !20301)
!20317 = !DILocation(line: 4111, column: 3, scope: !20301)
!20318 = !DILocation(line: 4108, column: 31, scope: !20295)
!20319 = !DILocation(line: 4108, column: 38, scope: !20295)
!20320 = !DILocation(line: 4108, column: 3, scope: !20295)
!20321 = distinct !{!20321, !20299, !20322}
!20322 = !DILocation(line: 4111, column: 3, scope: !20291)
!20323 = !DILocation(line: 4112, column: 2, scope: !20292)
!20324 = !DILocation(line: 4107, column: 30, scope: !20285)
!20325 = !DILocation(line: 4107, column: 2, scope: !20285)
!20326 = distinct !{!20326, !20289, !20327}
!20327 = !DILocation(line: 4112, column: 2, scope: !20282)
!20328 = !DILocation(line: 4114, column: 2, scope: !20240)
!20329 = !DILocation(line: 4114, column: 12, scope: !20240)
!20330 = !DILocation(line: 4115, column: 1, scope: !20240)
!20331 = distinct !DISubprogram(name: "switchdirection_knots", scope: !3, file: !3, line: 4051, type: !20332, scopeLine: 4052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!20332 = !DISubroutineType(types: !20333)
!20333 = !{null, !3154, !22}
!20334 = !DILocalVariable(name: "base", arg: 1, scope: !20331, file: !3, line: 4051, type: !3154)
!20335 = !DILocation(line: 4051, column: 42, scope: !20331)
!20336 = !DILocalVariable(name: "tot", arg: 2, scope: !20331, file: !3, line: 4051, type: !22)
!20337 = !DILocation(line: 4051, column: 52, scope: !20331)
!20338 = !DILocalVariable(name: "fp1", scope: !20331, file: !3, line: 4053, type: !3154)
!20339 = !DILocation(line: 4053, column: 9, scope: !20331)
!20340 = !DILocalVariable(name: "fp2", scope: !20331, file: !3, line: 4053, type: !3154)
!20341 = !DILocation(line: 4053, column: 15, scope: !20331)
!20342 = !DILocalVariable(name: "tempf", scope: !20331, file: !3, line: 4053, type: !3154)
!20343 = !DILocation(line: 4053, column: 21, scope: !20331)
!20344 = !DILocalVariable(name: "a", scope: !20331, file: !3, line: 4054, type: !22)
!20345 = !DILocation(line: 4054, column: 6, scope: !20331)
!20346 = !DILocation(line: 4056, column: 6, scope: !20347)
!20347 = distinct !DILexicalBlock(scope: !20331, file: !3, line: 4056, column: 6)
!20348 = !DILocation(line: 4056, column: 11, scope: !20347)
!20349 = !DILocation(line: 4056, column: 19, scope: !20347)
!20350 = !DILocation(line: 4056, column: 22, scope: !20347)
!20351 = !DILocation(line: 4056, column: 26, scope: !20347)
!20352 = !DILocation(line: 4056, column: 6, scope: !20331)
!20353 = !DILocation(line: 4056, column: 32, scope: !20347)
!20354 = !DILocation(line: 4059, column: 6, scope: !20331)
!20355 = !DILocation(line: 4059, column: 4, scope: !20331)
!20356 = !DILocation(line: 4060, column: 8, scope: !20331)
!20357 = !DILocation(line: 4060, column: 6, scope: !20331)
!20358 = !DILocation(line: 4061, column: 8, scope: !20331)
!20359 = !DILocation(line: 4061, column: 15, scope: !20331)
!20360 = !DILocation(line: 4061, column: 17, scope: !20331)
!20361 = !DILocation(line: 4061, column: 12, scope: !20331)
!20362 = !DILocation(line: 4061, column: 6, scope: !20331)
!20363 = !DILocation(line: 4062, column: 4, scope: !20331)
!20364 = !DILocation(line: 4063, column: 2, scope: !20331)
!20365 = !DILocation(line: 4063, column: 9, scope: !20331)
!20366 = !DILocation(line: 4063, column: 16, scope: !20331)
!20367 = !DILocation(line: 4063, column: 13, scope: !20331)
!20368 = !DILocation(line: 4063, column: 20, scope: !20331)
!20369 = !DILocation(line: 4063, column: 23, scope: !20331)
!20370 = !DILocation(line: 4063, column: 25, scope: !20331)
!20371 = !DILocation(line: 0, scope: !20331)
!20372 = !DILocalVariable(name: "sw_ap", scope: !20373, file: !3, line: 4064, type: !204)
!20373 = distinct !DILexicalBlock(scope: !20374, file: !3, line: 4064, column: 3)
!20374 = distinct !DILexicalBlock(scope: !20331, file: !3, line: 4063, column: 30)
!20375 = !DILocation(line: 4064, column: 3, scope: !20373)
!20376 = !DILocation(line: 4065, column: 4, scope: !20374)
!20377 = !DILocation(line: 4066, column: 6, scope: !20374)
!20378 = !DILocation(line: 4067, column: 6, scope: !20374)
!20379 = distinct !{!20379, !20364, !20380}
!20380 = !DILocation(line: 4068, column: 2, scope: !20331)
!20381 = !DILocation(line: 4070, column: 6, scope: !20331)
!20382 = !DILocation(line: 4070, column: 4, scope: !20331)
!20383 = !DILocation(line: 4071, column: 8, scope: !20331)
!20384 = !DILocation(line: 4071, column: 6, scope: !20331)
!20385 = !DILocation(line: 4072, column: 16, scope: !20331)
!20386 = !DILocation(line: 4072, column: 44, scope: !20331)
!20387 = !DILocation(line: 4072, column: 42, scope: !20331)
!20388 = !DILocation(line: 4072, column: 14, scope: !20331)
!20389 = !DILocation(line: 4072, column: 6, scope: !20331)
!20390 = !DILocation(line: 4073, column: 2, scope: !20331)
!20391 = !DILocation(line: 4073, column: 10, scope: !20331)
!20392 = !DILocation(line: 4074, column: 18, scope: !20393)
!20393 = distinct !DILexicalBlock(scope: !20331, file: !3, line: 4073, column: 14)
!20394 = !DILocation(line: 4074, column: 27, scope: !20393)
!20395 = !DILocation(line: 4074, column: 25, scope: !20393)
!20396 = !DILocation(line: 4074, column: 12, scope: !20393)
!20397 = !DILocation(line: 4074, column: 3, scope: !20393)
!20398 = !DILocation(line: 4074, column: 10, scope: !20393)
!20399 = !DILocation(line: 4075, column: 6, scope: !20393)
!20400 = !DILocation(line: 4076, column: 6, scope: !20393)
!20401 = distinct !{!20401, !20390, !20402}
!20402 = !DILocation(line: 4077, column: 2, scope: !20331)
!20403 = !DILocation(line: 4079, column: 6, scope: !20331)
!20404 = !DILocation(line: 4079, column: 10, scope: !20331)
!20405 = !DILocation(line: 4079, column: 4, scope: !20331)
!20406 = !DILocation(line: 4080, column: 8, scope: !20331)
!20407 = !DILocation(line: 4080, column: 6, scope: !20331)
!20408 = !DILocation(line: 4081, column: 8, scope: !20331)
!20409 = !DILocation(line: 4081, column: 6, scope: !20331)
!20410 = !DILocation(line: 4082, column: 2, scope: !20331)
!20411 = !DILocation(line: 4082, column: 9, scope: !20331)
!20412 = !DILocation(line: 4083, column: 5, scope: !20331)
!20413 = !DILocation(line: 4084, column: 2, scope: !20331)
!20414 = !DILocation(line: 4084, column: 10, scope: !20331)
!20415 = !DILocation(line: 4085, column: 12, scope: !20416)
!20416 = distinct !DILexicalBlock(scope: !20331, file: !3, line: 4084, column: 14)
!20417 = !DILocation(line: 4085, column: 22, scope: !20416)
!20418 = !DILocation(line: 4085, column: 20, scope: !20416)
!20419 = !DILocation(line: 4085, column: 3, scope: !20416)
!20420 = !DILocation(line: 4085, column: 10, scope: !20416)
!20421 = !DILocation(line: 4086, column: 6, scope: !20416)
!20422 = !DILocation(line: 4087, column: 6, scope: !20416)
!20423 = distinct !{!20423, !20413, !20424}
!20424 = !DILocation(line: 4088, column: 2, scope: !20331)
!20425 = !DILocation(line: 4089, column: 2, scope: !20331)
!20426 = !DILocation(line: 4089, column: 12, scope: !20331)
!20427 = !DILocation(line: 4090, column: 1, scope: !20331)
!20428 = distinct !DISubprogram(name: "findnearestNurbvert__doClosest", scope: !3, file: !3, line: 3768, type: !20429, scopeLine: 3769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!20429 = !DISubroutineType(types: !20430)
!20430 = !{null, !56, !3163, !3093, !3104, !22, !4638}
!20431 = !DILocalVariable(name: "userData", arg: 1, scope: !20428, file: !3, line: 3768, type: !56)
!20432 = !DILocation(line: 3768, column: 50, scope: !20428)
!20433 = !DILocalVariable(name: "nu", arg: 2, scope: !20428, file: !3, line: 3768, type: !3163)
!20434 = !DILocation(line: 3768, column: 66, scope: !20428)
!20435 = !DILocalVariable(name: "bp", arg: 3, scope: !20428, file: !3, line: 3768, type: !3093)
!20436 = !DILocation(line: 3768, column: 78, scope: !20428)
!20437 = !DILocalVariable(name: "bezt", arg: 4, scope: !20428, file: !3, line: 3768, type: !3104)
!20438 = !DILocation(line: 3768, column: 93, scope: !20428)
!20439 = !DILocalVariable(name: "beztindex", arg: 5, scope: !20428, file: !3, line: 3768, type: !22)
!20440 = !DILocation(line: 3768, column: 103, scope: !20428)
!20441 = !DILocalVariable(name: "screen_co", arg: 6, scope: !20428, file: !3, line: 3768, type: !4638)
!20442 = !DILocation(line: 3768, column: 126, scope: !20428)
!20443 = !DILocalVariable(name: "data", scope: !20428, file: !3, line: 3770, type: !20444)
!20444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20445, size: 64)
!20445 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !20428, file: !3, line: 3770, size: 384, elements: !20446)
!20446 = !{!20447, !20448, !20449, !20450, !20451, !20452, !20453}
!20447 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !20445, file: !3, line: 3770, baseType: !3093, size: 64)
!20448 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !20445, file: !3, line: 3770, baseType: !3104, size: 64, offset: 64)
!20449 = !DIDerivedType(tag: DW_TAG_member, name: "nurb", scope: !20445, file: !3, line: 3770, baseType: !3163, size: 64, offset: 128)
!20450 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !20445, file: !3, line: 3770, baseType: !204, size: 32, offset: 192)
!20451 = !DIDerivedType(tag: DW_TAG_member, name: "hpoint", scope: !20445, file: !3, line: 3770, baseType: !22, size: 32, offset: 224)
!20452 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !20445, file: !3, line: 3770, baseType: !22, size: 32, offset: 256)
!20453 = !DIDerivedType(tag: DW_TAG_member, name: "mval_fl", scope: !20445, file: !3, line: 3770, baseType: !494, size: 64, offset: 288)
!20454 = !DILocation(line: 3770, column: 105, scope: !20428)
!20455 = !DILocation(line: 3770, column: 112, scope: !20428)
!20456 = !DILocalVariable(name: "flag", scope: !20428, file: !3, line: 3772, type: !48)
!20457 = !DILocation(line: 3772, column: 8, scope: !20428)
!20458 = !DILocalVariable(name: "dist_test", scope: !20428, file: !3, line: 3773, type: !204)
!20459 = !DILocation(line: 3773, column: 8, scope: !20428)
!20460 = !DILocation(line: 3775, column: 6, scope: !20461)
!20461 = distinct !DILexicalBlock(scope: !20428, file: !3, line: 3775, column: 6)
!20462 = !DILocation(line: 3775, column: 6, scope: !20428)
!20463 = !DILocation(line: 3776, column: 10, scope: !20464)
!20464 = distinct !DILexicalBlock(scope: !20461, file: !3, line: 3775, column: 10)
!20465 = !DILocation(line: 3776, column: 14, scope: !20464)
!20466 = !DILocation(line: 3776, column: 8, scope: !20464)
!20467 = !DILocation(line: 3777, column: 2, scope: !20464)
!20468 = !DILocation(line: 3779, column: 7, scope: !20469)
!20469 = distinct !DILexicalBlock(scope: !20470, file: !3, line: 3779, column: 7)
!20470 = distinct !DILexicalBlock(scope: !20461, file: !3, line: 3778, column: 7)
!20471 = !DILocation(line: 3779, column: 17, scope: !20469)
!20472 = !DILocation(line: 3779, column: 7, scope: !20470)
!20473 = !DILocation(line: 3780, column: 11, scope: !20474)
!20474 = distinct !DILexicalBlock(scope: !20469, file: !3, line: 3779, column: 23)
!20475 = !DILocation(line: 3780, column: 17, scope: !20474)
!20476 = !DILocation(line: 3780, column: 9, scope: !20474)
!20477 = !DILocation(line: 3781, column: 3, scope: !20474)
!20478 = !DILocation(line: 3782, column: 12, scope: !20479)
!20479 = distinct !DILexicalBlock(scope: !20469, file: !3, line: 3782, column: 12)
!20480 = !DILocation(line: 3782, column: 22, scope: !20479)
!20481 = !DILocation(line: 3782, column: 12, scope: !20469)
!20482 = !DILocation(line: 3783, column: 11, scope: !20483)
!20483 = distinct !DILexicalBlock(scope: !20479, file: !3, line: 3782, column: 28)
!20484 = !DILocation(line: 3783, column: 17, scope: !20483)
!20485 = !DILocation(line: 3783, column: 9, scope: !20483)
!20486 = !DILocation(line: 3784, column: 3, scope: !20483)
!20487 = !DILocation(line: 3786, column: 11, scope: !20488)
!20488 = distinct !DILexicalBlock(scope: !20479, file: !3, line: 3785, column: 8)
!20489 = !DILocation(line: 3786, column: 17, scope: !20488)
!20490 = !DILocation(line: 3786, column: 9, scope: !20488)
!20491 = !DILocation(line: 3790, column: 33, scope: !20428)
!20492 = !DILocation(line: 3790, column: 39, scope: !20428)
!20493 = !DILocation(line: 3790, column: 48, scope: !20428)
!20494 = !DILocation(line: 3790, column: 14, scope: !20428)
!20495 = !DILocation(line: 3790, column: 12, scope: !20428)
!20496 = !DILocation(line: 3791, column: 7, scope: !20497)
!20497 = distinct !DILexicalBlock(scope: !20428, file: !3, line: 3791, column: 6)
!20498 = !DILocation(line: 3791, column: 12, scope: !20497)
!20499 = !DILocation(line: 3791, column: 25, scope: !20497)
!20500 = !DILocation(line: 3791, column: 31, scope: !20497)
!20501 = !DILocation(line: 3791, column: 22, scope: !20497)
!20502 = !DILocation(line: 3791, column: 6, scope: !20428)
!20503 = !DILocation(line: 3791, column: 49, scope: !20497)
!20504 = !DILocation(line: 3791, column: 39, scope: !20497)
!20505 = !DILocation(line: 3792, column: 6, scope: !20506)
!20506 = distinct !DILexicalBlock(scope: !20428, file: !3, line: 3792, column: 6)
!20507 = !DILocation(line: 3792, column: 11, scope: !20506)
!20508 = !DILocation(line: 3792, column: 14, scope: !20506)
!20509 = !DILocation(line: 3792, column: 24, scope: !20506)
!20510 = !DILocation(line: 3792, column: 6, scope: !20428)
!20511 = !DILocation(line: 3792, column: 40, scope: !20506)
!20512 = !DILocation(line: 3792, column: 30, scope: !20506)
!20513 = !DILocation(line: 3794, column: 6, scope: !20514)
!20514 = distinct !DILexicalBlock(scope: !20428, file: !3, line: 3794, column: 6)
!20515 = !DILocation(line: 3794, column: 18, scope: !20514)
!20516 = !DILocation(line: 3794, column: 24, scope: !20514)
!20517 = !DILocation(line: 3794, column: 16, scope: !20514)
!20518 = !DILocation(line: 3794, column: 6, scope: !20428)
!20519 = !DILocation(line: 3795, column: 16, scope: !20520)
!20520 = distinct !DILexicalBlock(scope: !20514, file: !3, line: 3794, column: 30)
!20521 = !DILocation(line: 3795, column: 3, scope: !20520)
!20522 = !DILocation(line: 3795, column: 9, scope: !20520)
!20523 = !DILocation(line: 3795, column: 14, scope: !20520)
!20524 = !DILocation(line: 3797, column: 14, scope: !20520)
!20525 = !DILocation(line: 3797, column: 3, scope: !20520)
!20526 = !DILocation(line: 3797, column: 9, scope: !20520)
!20527 = !DILocation(line: 3797, column: 12, scope: !20520)
!20528 = !DILocation(line: 3798, column: 16, scope: !20520)
!20529 = !DILocation(line: 3798, column: 3, scope: !20520)
!20530 = !DILocation(line: 3798, column: 9, scope: !20520)
!20531 = !DILocation(line: 3798, column: 14, scope: !20520)
!20532 = !DILocation(line: 3799, column: 16, scope: !20520)
!20533 = !DILocation(line: 3799, column: 3, scope: !20520)
!20534 = !DILocation(line: 3799, column: 9, scope: !20520)
!20535 = !DILocation(line: 3799, column: 14, scope: !20520)
!20536 = !DILocation(line: 3800, column: 18, scope: !20520)
!20537 = !DILocation(line: 3800, column: 25, scope: !20520)
!20538 = !DILocation(line: 3800, column: 3, scope: !20520)
!20539 = !DILocation(line: 3800, column: 9, scope: !20520)
!20540 = !DILocation(line: 3800, column: 16, scope: !20520)
!20541 = !DILocation(line: 3801, column: 2, scope: !20520)
!20542 = !DILocation(line: 3802, column: 1, scope: !20428)
!20543 = distinct !DISubprogram(name: "len_manhattan_v2v2", scope: !5794, file: !5794, line: 735, type: !20152, scopeLine: 736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!20544 = !DILocalVariable(name: "a", arg: 1, scope: !20543, file: !5794, line: 735, type: !4638)
!20545 = !DILocation(line: 735, column: 46, scope: !20543)
!20546 = !DILocalVariable(name: "b", arg: 2, scope: !20543, file: !5794, line: 735, type: !4638)
!20547 = !DILocation(line: 735, column: 64, scope: !20543)
!20548 = !DILocalVariable(name: "d", scope: !20543, file: !5794, line: 737, type: !494)
!20549 = !DILocation(line: 737, column: 8, scope: !20543)
!20550 = !DILocation(line: 739, column: 14, scope: !20543)
!20551 = !DILocation(line: 739, column: 17, scope: !20543)
!20552 = !DILocation(line: 739, column: 20, scope: !20543)
!20553 = !DILocation(line: 739, column: 2, scope: !20543)
!20554 = !DILocation(line: 740, column: 26, scope: !20543)
!20555 = !DILocation(line: 740, column: 9, scope: !20543)
!20556 = !DILocation(line: 740, column: 2, scope: !20543)
!20557 = distinct !DISubprogram(name: "sub_v2_v2v2", scope: !5794, file: !5794, line: 338, type: !13687, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!20558 = !DILocalVariable(name: "r", arg: 1, scope: !20557, file: !5794, line: 338, type: !3154)
!20559 = !DILocation(line: 338, column: 32, scope: !20557)
!20560 = !DILocalVariable(name: "a", arg: 2, scope: !20557, file: !5794, line: 338, type: !4638)
!20561 = !DILocation(line: 338, column: 50, scope: !20557)
!20562 = !DILocalVariable(name: "b", arg: 3, scope: !20557, file: !5794, line: 338, type: !4638)
!20563 = !DILocation(line: 338, column: 68, scope: !20557)
!20564 = !DILocation(line: 340, column: 9, scope: !20557)
!20565 = !DILocation(line: 340, column: 16, scope: !20557)
!20566 = !DILocation(line: 340, column: 14, scope: !20557)
!20567 = !DILocation(line: 340, column: 2, scope: !20557)
!20568 = !DILocation(line: 340, column: 7, scope: !20557)
!20569 = !DILocation(line: 341, column: 9, scope: !20557)
!20570 = !DILocation(line: 341, column: 16, scope: !20557)
!20571 = !DILocation(line: 341, column: 14, scope: !20557)
!20572 = !DILocation(line: 341, column: 2, scope: !20557)
!20573 = !DILocation(line: 341, column: 7, scope: !20557)
!20574 = !DILocation(line: 342, column: 1, scope: !20557)
!20575 = distinct !DISubprogram(name: "len_manhattan_v2", scope: !5794, file: !5794, line: 676, type: !20168, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!20576 = !DILocalVariable(name: "v", arg: 1, scope: !20575, file: !5794, line: 676, type: !4638)
!20577 = !DILocation(line: 676, column: 44, scope: !20575)
!20578 = !DILocation(line: 678, column: 15, scope: !20575)
!20579 = !DILocation(line: 678, column: 9, scope: !20575)
!20580 = !DILocation(line: 678, column: 29, scope: !20575)
!20581 = !DILocation(line: 678, column: 23, scope: !20575)
!20582 = !DILocation(line: 678, column: 21, scope: !20575)
!20583 = !DILocation(line: 678, column: 2, scope: !20575)
!20584 = distinct !DISubprogram(name: "sub_v3_v3", scope: !5794, file: !5794, line: 350, type: !5795, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!20585 = !DILocalVariable(name: "r", arg: 1, scope: !20584, file: !5794, line: 350, type: !3154)
!20586 = !DILocation(line: 350, column: 30, scope: !20584)
!20587 = !DILocalVariable(name: "a", arg: 2, scope: !20584, file: !5794, line: 350, type: !4638)
!20588 = !DILocation(line: 350, column: 48, scope: !20584)
!20589 = !DILocation(line: 352, column: 10, scope: !20584)
!20590 = !DILocation(line: 352, column: 2, scope: !20584)
!20591 = !DILocation(line: 352, column: 7, scope: !20584)
!20592 = !DILocation(line: 353, column: 10, scope: !20584)
!20593 = !DILocation(line: 353, column: 2, scope: !20584)
!20594 = !DILocation(line: 353, column: 7, scope: !20584)
!20595 = !DILocation(line: 354, column: 10, scope: !20584)
!20596 = !DILocation(line: 354, column: 2, scope: !20584)
!20597 = !DILocation(line: 354, column: 7, scope: !20584)
!20598 = !DILocation(line: 355, column: 1, scope: !20584)
!20599 = distinct !DISubprogram(name: "addvert_Nurb", scope: !3, file: !3, line: 4902, type: !20600, scopeLine: 4903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!20600 = !DISubroutineType(types: !20601)
!20601 = !{!22, !3226, !48, !3154}
!20602 = !DILocalVariable(name: "C", arg: 1, scope: !20599, file: !3, line: 4902, type: !3226)
!20603 = !DILocation(line: 4902, column: 35, scope: !20599)
!20604 = !DILocalVariable(name: "mode", arg: 2, scope: !20599, file: !3, line: 4902, type: !48)
!20605 = !DILocation(line: 4902, column: 44, scope: !20599)
!20606 = !DILocalVariable(name: "location", arg: 3, scope: !20599, file: !3, line: 4902, type: !3154)
!20607 = !DILocation(line: 4902, column: 56, scope: !20599)
!20608 = !DILocalVariable(name: "obedit", scope: !20599, file: !3, line: 4904, type: !3242)
!20609 = !DILocation(line: 4904, column: 10, scope: !20599)
!20610 = !DILocation(line: 4904, column: 40, scope: !20599)
!20611 = !DILocation(line: 4904, column: 19, scope: !20599)
!20612 = !DILocalVariable(name: "cu", scope: !20599, file: !3, line: 4905, type: !2953)
!20613 = !DILocation(line: 4905, column: 9, scope: !20599)
!20614 = !DILocation(line: 4905, column: 23, scope: !20599)
!20615 = !DILocation(line: 4905, column: 31, scope: !20599)
!20616 = !DILocation(line: 4905, column: 14, scope: !20599)
!20617 = !DILocalVariable(name: "editnurb", scope: !20599, file: !3, line: 4906, type: !2962)
!20618 = !DILocation(line: 4906, column: 12, scope: !20599)
!20619 = !DILocation(line: 4906, column: 23, scope: !20599)
!20620 = !DILocation(line: 4906, column: 27, scope: !20599)
!20621 = !DILocalVariable(name: "nu", scope: !20599, file: !3, line: 4907, type: !3163)
!20622 = !DILocation(line: 4907, column: 8, scope: !20599)
!20623 = !DILocalVariable(name: "newnu", scope: !20599, file: !3, line: 4907, type: !3163)
!20624 = !DILocation(line: 4907, column: 13, scope: !20599)
!20625 = !DILocalVariable(name: "bezt", scope: !20599, file: !3, line: 4908, type: !3104)
!20626 = !DILocation(line: 4908, column: 13, scope: !20599)
!20627 = !DILocalVariable(name: "newbezt", scope: !20599, file: !3, line: 4908, type: !3104)
!20628 = !DILocation(line: 4908, column: 20, scope: !20599)
!20629 = !DILocalVariable(name: "bp", scope: !20599, file: !3, line: 4909, type: !3093)
!20630 = !DILocation(line: 4909, column: 10, scope: !20599)
!20631 = !DILocalVariable(name: "newbp", scope: !20599, file: !3, line: 4909, type: !3093)
!20632 = !DILocation(line: 4909, column: 15, scope: !20599)
!20633 = !DILocalVariable(name: "imat", scope: !20599, file: !3, line: 4910, type: !364)
!20634 = !DILocation(line: 4910, column: 8, scope: !20599)
!20635 = !DILocalVariable(name: "temp", scope: !20599, file: !3, line: 4910, type: !282)
!20636 = !DILocation(line: 4910, column: 20, scope: !20599)
!20637 = !DILocalVariable(name: "ok", scope: !20599, file: !3, line: 4911, type: !1081)
!20638 = !DILocation(line: 4911, column: 7, scope: !20599)
!20639 = !DILocalVariable(name: "bezt_recalc", scope: !20599, file: !3, line: 4912, type: !20640)
!20640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3104, size: 192, elements: !283)
!20641 = !DILocation(line: 4912, column: 13, scope: !20599)
!20642 = !DILocation(line: 4914, column: 15, scope: !20599)
!20643 = !DILocation(line: 4914, column: 21, scope: !20599)
!20644 = !DILocation(line: 4914, column: 29, scope: !20599)
!20645 = !DILocation(line: 4914, column: 2, scope: !20599)
!20646 = !DILocation(line: 4916, column: 24, scope: !20599)
!20647 = !DILocation(line: 4916, column: 34, scope: !20599)
!20648 = !DILocation(line: 4916, column: 2, scope: !20599)
!20649 = !DILocation(line: 4918, column: 7, scope: !20650)
!20650 = distinct !DILexicalBlock(scope: !20599, file: !3, line: 4918, column: 6)
!20651 = !DILocation(line: 4918, column: 10, scope: !20650)
!20652 = !DILocation(line: 4918, column: 19, scope: !20650)
!20653 = !DILocation(line: 4918, column: 23, scope: !20650)
!20654 = !DILocation(line: 4918, column: 27, scope: !20650)
!20655 = !DILocation(line: 4918, column: 32, scope: !20650)
!20656 = !DILocation(line: 4918, column: 45, scope: !20650)
!20657 = !DILocation(line: 4918, column: 48, scope: !20650)
!20658 = !DILocation(line: 4918, column: 53, scope: !20650)
!20659 = !DILocation(line: 4918, column: 62, scope: !20650)
!20660 = !DILocation(line: 4918, column: 66, scope: !20650)
!20661 = !DILocation(line: 4918, column: 70, scope: !20650)
!20662 = !DILocation(line: 4918, column: 75, scope: !20650)
!20663 = !DILocation(line: 4918, column: 88, scope: !20650)
!20664 = !DILocation(line: 4918, column: 91, scope: !20650)
!20665 = !DILocation(line: 4918, column: 94, scope: !20650)
!20666 = !DILocation(line: 4918, column: 6, scope: !20599)
!20667 = !DILocation(line: 4919, column: 7, scope: !20668)
!20668 = distinct !DILexicalBlock(scope: !20669, file: !3, line: 4919, column: 7)
!20669 = distinct !DILexicalBlock(scope: !20650, file: !3, line: 4918, column: 104)
!20670 = !DILocation(line: 4919, column: 12, scope: !20668)
!20671 = !DILocation(line: 4919, column: 7, scope: !20669)
!20672 = !DILocation(line: 4920, column: 8, scope: !20673)
!20673 = distinct !DILexicalBlock(scope: !20674, file: !3, line: 4920, column: 8)
!20674 = distinct !DILexicalBlock(scope: !20668, file: !3, line: 4919, column: 20)
!20675 = !DILocation(line: 4920, column: 12, scope: !20673)
!20676 = !DILocation(line: 4920, column: 18, scope: !20673)
!20677 = !DILocation(line: 4920, column: 8, scope: !20674)
!20678 = !DILocation(line: 4921, column: 24, scope: !20673)
!20679 = !DILocation(line: 4921, column: 34, scope: !20673)
!20680 = !DILocation(line: 4921, column: 41, scope: !20673)
!20681 = !DILocation(line: 4921, column: 45, scope: !20673)
!20682 = !DILocation(line: 4921, column: 10, scope: !20673)
!20683 = !DILocation(line: 4921, column: 8, scope: !20673)
!20684 = !DILocation(line: 4921, column: 5, scope: !20673)
!20685 = !DILocation(line: 4923, column: 9, scope: !20686)
!20686 = distinct !DILexicalBlock(scope: !20674, file: !3, line: 4923, column: 8)
!20687 = !DILocation(line: 4923, column: 12, scope: !20686)
!20688 = !DILocation(line: 4923, column: 15, scope: !20686)
!20689 = !DILocation(line: 4923, column: 19, scope: !20686)
!20690 = !DILocation(line: 4923, column: 24, scope: !20686)
!20691 = !DILocation(line: 4923, column: 8, scope: !20674)
!20692 = !DILocation(line: 4924, column: 28, scope: !20693)
!20693 = distinct !DILexicalBlock(scope: !20686, file: !3, line: 4923, column: 38)
!20694 = !DILocation(line: 4924, column: 15, scope: !20693)
!20695 = !DILocation(line: 4924, column: 13, scope: !20693)
!20696 = !DILocation(line: 4925, column: 5, scope: !20693)
!20697 = !DILocation(line: 4925, column: 14, scope: !20693)
!20698 = !DILocation(line: 4925, column: 21, scope: !20693)
!20699 = !DILocation(line: 4926, column: 5, scope: !20693)
!20700 = !DILocation(line: 4926, column: 14, scope: !20693)
!20701 = !DILocation(line: 4926, column: 19, scope: !20693)
!20702 = !DILocation(line: 4927, column: 5, scope: !20703)
!20703 = distinct !DILexicalBlock(scope: !20693, file: !3, line: 4927, column: 5)
!20704 = !DILocation(line: 4928, column: 19, scope: !20693)
!20705 = !DILocation(line: 4928, column: 28, scope: !20693)
!20706 = !DILocation(line: 4928, column: 31, scope: !20693)
!20707 = !DILocation(line: 4928, column: 5, scope: !20693)
!20708 = !DILocation(line: 4928, column: 14, scope: !20693)
!20709 = !DILocation(line: 4928, column: 17, scope: !20693)
!20710 = !DILocation(line: 4930, column: 21, scope: !20693)
!20711 = !DILocation(line: 4930, column: 13, scope: !20693)
!20712 = !DILocation(line: 4930, column: 11, scope: !20693)
!20713 = !DILocation(line: 4931, column: 10, scope: !20714)
!20714 = distinct !DILexicalBlock(scope: !20693, file: !3, line: 4931, column: 9)
!20715 = !DILocation(line: 4931, column: 9, scope: !20693)
!20716 = !DILocation(line: 4935, column: 6, scope: !20717)
!20717 = distinct !DILexicalBlock(scope: !20714, file: !3, line: 4931, column: 14)
!20718 = !DILocation(line: 4935, column: 13, scope: !20717)
!20719 = !DILocation(line: 4935, column: 18, scope: !20717)
!20720 = !DILocation(line: 4936, column: 22, scope: !20717)
!20721 = !DILocation(line: 4936, column: 26, scope: !20717)
!20722 = !DILocation(line: 4936, column: 6, scope: !20717)
!20723 = !DILocation(line: 4936, column: 13, scope: !20717)
!20724 = !DILocation(line: 4936, column: 20, scope: !20717)
!20725 = !DILocation(line: 4937, column: 6, scope: !20717)
!20726 = !DILocation(line: 4937, column: 13, scope: !20717)
!20727 = !DILocation(line: 4937, column: 18, scope: !20717)
!20728 = !DILocation(line: 4938, column: 5, scope: !20717)
!20729 = !DILocation(line: 4940, column: 13, scope: !20730)
!20730 = distinct !DILexicalBlock(scope: !20714, file: !3, line: 4939, column: 10)
!20731 = !DILocation(line: 4940, column: 6, scope: !20730)
!20732 = !DILocation(line: 4940, column: 20, scope: !20730)
!20733 = !DILocation(line: 4943, column: 18, scope: !20693)
!20734 = !DILocation(line: 4943, column: 28, scope: !20693)
!20735 = !DILocation(line: 4943, column: 35, scope: !20693)
!20736 = !DILocation(line: 4943, column: 5, scope: !20693)
!20737 = !DILocation(line: 4944, column: 19, scope: !20693)
!20738 = !DILocation(line: 4944, column: 5, scope: !20693)
!20739 = !DILocation(line: 4944, column: 12, scope: !20693)
!20740 = !DILocation(line: 4944, column: 17, scope: !20693)
!20741 = !DILocation(line: 4945, column: 5, scope: !20693)
!20742 = !DILocation(line: 4945, column: 12, scope: !20693)
!20743 = !DILocation(line: 4945, column: 18, scope: !20693)
!20744 = !DILocation(line: 4947, column: 5, scope: !20693)
!20745 = !DILocation(line: 4947, column: 13, scope: !20693)
!20746 = !DILocation(line: 4948, column: 5, scope: !20693)
!20747 = !DILocation(line: 4948, column: 13, scope: !20693)
!20748 = !DILocation(line: 4949, column: 5, scope: !20693)
!20749 = !DILocation(line: 4949, column: 13, scope: !20693)
!20750 = !DILocation(line: 4951, column: 16, scope: !20693)
!20751 = !DILocation(line: 4951, column: 25, scope: !20693)
!20752 = !DILocation(line: 4951, column: 33, scope: !20693)
!20753 = !DILocation(line: 4951, column: 5, scope: !20693)
!20754 = !DILocation(line: 4952, column: 17, scope: !20693)
!20755 = !DILocation(line: 4952, column: 26, scope: !20693)
!20756 = !DILocation(line: 4952, column: 34, scope: !20693)
!20757 = !DILocation(line: 4952, column: 43, scope: !20693)
!20758 = !DILocation(line: 4952, column: 51, scope: !20693)
!20759 = !DILocation(line: 4952, column: 5, scope: !20693)
!20760 = !DILocation(line: 4953, column: 17, scope: !20693)
!20761 = !DILocation(line: 4953, column: 26, scope: !20693)
!20762 = !DILocation(line: 4953, column: 34, scope: !20693)
!20763 = !DILocation(line: 4953, column: 43, scope: !20693)
!20764 = !DILocation(line: 4953, column: 51, scope: !20693)
!20765 = !DILocation(line: 4953, column: 5, scope: !20693)
!20766 = !DILocation(line: 4955, column: 15, scope: !20693)
!20767 = !DILocation(line: 4955, column: 21, scope: !20693)
!20768 = !DILocation(line: 4955, column: 30, scope: !20693)
!20769 = !DILocation(line: 4955, column: 5, scope: !20693)
!20770 = !DILocation(line: 4956, column: 15, scope: !20693)
!20771 = !DILocation(line: 4956, column: 21, scope: !20693)
!20772 = !DILocation(line: 4956, column: 30, scope: !20693)
!20773 = !DILocation(line: 4956, column: 5, scope: !20693)
!20774 = !DILocation(line: 4957, column: 15, scope: !20693)
!20775 = !DILocation(line: 4957, column: 21, scope: !20693)
!20776 = !DILocation(line: 4957, column: 30, scope: !20693)
!20777 = !DILocation(line: 4957, column: 5, scope: !20693)
!20778 = !DILocation(line: 4959, column: 8, scope: !20693)
!20779 = !DILocation(line: 4960, column: 10, scope: !20693)
!20780 = !DILocation(line: 4960, column: 8, scope: !20693)
!20781 = !DILocation(line: 4961, column: 4, scope: !20693)
!20782 = !DILocation(line: 4962, column: 13, scope: !20783)
!20783 = distinct !DILexicalBlock(scope: !20686, file: !3, line: 4962, column: 13)
!20784 = !DILocation(line: 4962, column: 17, scope: !20783)
!20785 = !DILocation(line: 4962, column: 23, scope: !20783)
!20786 = !DILocation(line: 4962, column: 13, scope: !20686)
!20787 = !DILocation(line: 4963, column: 23, scope: !20788)
!20788 = distinct !DILexicalBlock(scope: !20783, file: !3, line: 4962, column: 29)
!20789 = !DILocation(line: 4963, column: 13, scope: !20788)
!20790 = !DILocation(line: 4963, column: 11, scope: !20788)
!20791 = !DILocation(line: 4964, column: 5, scope: !20788)
!20792 = !DILocation(line: 4964, column: 12, scope: !20788)
!20793 = !DILocation(line: 4964, column: 19, scope: !20788)
!20794 = !DILocation(line: 4965, column: 5, scope: !20788)
!20795 = !DILocation(line: 4965, column: 12, scope: !20788)
!20796 = !DILocation(line: 4965, column: 17, scope: !20788)
!20797 = !DILocation(line: 4966, column: 5, scope: !20788)
!20798 = !DILocation(line: 4966, column: 12, scope: !20788)
!20799 = !DILocation(line: 4966, column: 15, scope: !20788)
!20800 = !DILocation(line: 4968, column: 21, scope: !20788)
!20801 = !DILocation(line: 4968, column: 13, scope: !20788)
!20802 = !DILocation(line: 4968, column: 11, scope: !20788)
!20803 = !DILocation(line: 4969, column: 12, scope: !20788)
!20804 = !DILocation(line: 4969, column: 5, scope: !20788)
!20805 = !DILocation(line: 4969, column: 19, scope: !20788)
!20806 = !DILocation(line: 4970, column: 18, scope: !20788)
!20807 = !DILocation(line: 4970, column: 28, scope: !20788)
!20808 = !DILocation(line: 4970, column: 35, scope: !20788)
!20809 = !DILocation(line: 4970, column: 5, scope: !20788)
!20810 = !DILocation(line: 4971, column: 17, scope: !20788)
!20811 = !DILocation(line: 4971, column: 5, scope: !20788)
!20812 = !DILocation(line: 4971, column: 12, scope: !20788)
!20813 = !DILocation(line: 4971, column: 15, scope: !20788)
!20814 = !DILocation(line: 4972, column: 5, scope: !20788)
!20815 = !DILocation(line: 4972, column: 12, scope: !20788)
!20816 = !DILocation(line: 4972, column: 19, scope: !20788)
!20817 = !DILocation(line: 4973, column: 5, scope: !20788)
!20818 = !DILocation(line: 4973, column: 12, scope: !20788)
!20819 = !DILocation(line: 4973, column: 18, scope: !20788)
!20820 = !DILocation(line: 4975, column: 17, scope: !20788)
!20821 = !DILocation(line: 4975, column: 24, scope: !20788)
!20822 = !DILocation(line: 4975, column: 29, scope: !20788)
!20823 = !DILocation(line: 4975, column: 35, scope: !20788)
!20824 = !DILocation(line: 4975, column: 5, scope: !20788)
!20825 = !DILocation(line: 4976, column: 5, scope: !20788)
!20826 = !DILocation(line: 4976, column: 12, scope: !20788)
!20827 = !DILocation(line: 4976, column: 19, scope: !20788)
!20828 = !DILocation(line: 4978, column: 21, scope: !20788)
!20829 = !DILocation(line: 4978, column: 28, scope: !20788)
!20830 = !DILocation(line: 4978, column: 35, scope: !20788)
!20831 = !DILocation(line: 4978, column: 5, scope: !20788)
!20832 = !DILocation(line: 4978, column: 12, scope: !20788)
!20833 = !DILocation(line: 4978, column: 19, scope: !20788)
!20834 = !DILocation(line: 4979, column: 26, scope: !20788)
!20835 = !DILocation(line: 4979, column: 5, scope: !20788)
!20836 = !DILocation(line: 4981, column: 8, scope: !20788)
!20837 = !DILocation(line: 4982, column: 10, scope: !20788)
!20838 = !DILocation(line: 4982, column: 8, scope: !20788)
!20839 = !DILocation(line: 4983, column: 4, scope: !20788)
!20840 = !DILocation(line: 4985, column: 3, scope: !20674)
!20841 = !DILocation(line: 4987, column: 8, scope: !20842)
!20842 = distinct !DILexicalBlock(scope: !20669, file: !3, line: 4987, column: 7)
!20843 = !DILocation(line: 4987, column: 7, scope: !20669)
!20844 = !DILocation(line: 4988, column: 4, scope: !20842)
!20845 = !DILocation(line: 4989, column: 2, scope: !20669)
!20846 = !DILocation(line: 4991, column: 7, scope: !20847)
!20847 = distinct !DILexicalBlock(scope: !20599, file: !3, line: 4991, column: 6)
!20848 = !DILocation(line: 4991, column: 10, scope: !20847)
!20849 = !DILocation(line: 4991, column: 13, scope: !20847)
!20850 = !DILocation(line: 4991, column: 17, scope: !20847)
!20851 = !DILocation(line: 4991, column: 22, scope: !20847)
!20852 = !DILocation(line: 4991, column: 6, scope: !20599)
!20853 = !DILocation(line: 4993, column: 7, scope: !20854)
!20854 = distinct !DILexicalBlock(scope: !20855, file: !3, line: 4993, column: 7)
!20855 = distinct !DILexicalBlock(scope: !20847, file: !3, line: 4991, column: 36)
!20856 = !DILocation(line: 4993, column: 16, scope: !20854)
!20857 = !DILocation(line: 4993, column: 20, scope: !20854)
!20858 = !DILocation(line: 4993, column: 25, scope: !20854)
!20859 = !DILocation(line: 4993, column: 29, scope: !20854)
!20860 = !DILocation(line: 4993, column: 35, scope: !20854)
!20861 = !DILocation(line: 4993, column: 12, scope: !20854)
!20862 = !DILocation(line: 4993, column: 7, scope: !20855)
!20863 = !DILocation(line: 4994, column: 4, scope: !20864)
!20864 = distinct !DILexicalBlock(scope: !20865, file: !3, line: 4994, column: 4)
!20865 = distinct !DILexicalBlock(scope: !20854, file: !3, line: 4993, column: 41)
!20866 = !DILocation(line: 4995, column: 27, scope: !20865)
!20867 = !DILocation(line: 4995, column: 40, scope: !20865)
!20868 = !DILocation(line: 4995, column: 44, scope: !20865)
!20869 = !DILocation(line: 4995, column: 50, scope: !20865)
!20870 = !DILocation(line: 4995, column: 39, scope: !20865)
!20871 = !DILocation(line: 4995, column: 55, scope: !20865)
!20872 = !DILocation(line: 4995, column: 14, scope: !20865)
!20873 = !DILocation(line: 4995, column: 12, scope: !20865)
!20874 = !DILocation(line: 4996, column: 21, scope: !20865)
!20875 = !DILocation(line: 4996, column: 31, scope: !20865)
!20876 = !DILocation(line: 4996, column: 40, scope: !20865)
!20877 = !DILocation(line: 4996, column: 44, scope: !20865)
!20878 = !DILocation(line: 4996, column: 50, scope: !20865)
!20879 = !DILocation(line: 4996, column: 54, scope: !20865)
!20880 = !DILocation(line: 4996, column: 4, scope: !20865)
!20881 = !DILocation(line: 4997, column: 4, scope: !20865)
!20882 = !DILocation(line: 4997, column: 12, scope: !20865)
!20883 = !DILocation(line: 4997, column: 16, scope: !20865)
!20884 = !DILocation(line: 4997, column: 26, scope: !20865)
!20885 = !DILocation(line: 4997, column: 25, scope: !20865)
!20886 = !DILocation(line: 4998, column: 15, scope: !20865)
!20887 = !DILocation(line: 4998, column: 21, scope: !20865)
!20888 = !DILocation(line: 4998, column: 27, scope: !20865)
!20889 = !DILocation(line: 4998, column: 4, scope: !20865)
!20890 = !DILocation(line: 4999, column: 4, scope: !20865)
!20891 = !DILocation(line: 4999, column: 14, scope: !20865)
!20892 = !DILocation(line: 4999, column: 18, scope: !20865)
!20893 = !DILocation(line: 5000, column: 15, scope: !20865)
!20894 = !DILocation(line: 5000, column: 4, scope: !20865)
!20895 = !DILocation(line: 5000, column: 8, scope: !20865)
!20896 = !DILocation(line: 5000, column: 13, scope: !20865)
!20897 = !DILocation(line: 5001, column: 15, scope: !20865)
!20898 = !DILocation(line: 5001, column: 19, scope: !20865)
!20899 = !DILocation(line: 5001, column: 12, scope: !20865)
!20900 = !DILocation(line: 5002, column: 4, scope: !20901)
!20901 = distinct !DILexicalBlock(scope: !20865, file: !3, line: 5002, column: 4)
!20902 = !DILocation(line: 5003, column: 18, scope: !20865)
!20903 = !DILocation(line: 5003, column: 27, scope: !20865)
!20904 = !DILocation(line: 5003, column: 4, scope: !20865)
!20905 = !DILocation(line: 5003, column: 13, scope: !20865)
!20906 = !DILocation(line: 5003, column: 16, scope: !20865)
!20907 = !DILocation(line: 5004, column: 12, scope: !20865)
!20908 = !DILocation(line: 5004, column: 16, scope: !20865)
!20909 = !DILocation(line: 5004, column: 21, scope: !20865)
!20910 = !DILocation(line: 5004, column: 25, scope: !20865)
!20911 = !DILocation(line: 5004, column: 31, scope: !20865)
!20912 = !DILocation(line: 5004, column: 9, scope: !20865)
!20913 = !DILocation(line: 5005, column: 7, scope: !20865)
!20914 = !DILocation(line: 5007, column: 8, scope: !20915)
!20915 = distinct !DILexicalBlock(scope: !20865, file: !3, line: 5007, column: 8)
!20916 = !DILocation(line: 5007, column: 12, scope: !20915)
!20917 = !DILocation(line: 5007, column: 18, scope: !20915)
!20918 = !DILocation(line: 5007, column: 8, scope: !20865)
!20919 = !DILocation(line: 5008, column: 22, scope: !20920)
!20920 = distinct !DILexicalBlock(scope: !20915, file: !3, line: 5007, column: 23)
!20921 = !DILocation(line: 5008, column: 5, scope: !20920)
!20922 = !DILocation(line: 5008, column: 20, scope: !20920)
!20923 = !DILocation(line: 5009, column: 22, scope: !20920)
!20924 = !DILocation(line: 5009, column: 30, scope: !20920)
!20925 = !DILocation(line: 5009, column: 5, scope: !20920)
!20926 = !DILocation(line: 5009, column: 20, scope: !20920)
!20927 = !DILocation(line: 5010, column: 4, scope: !20920)
!20928 = !DILocation(line: 5011, column: 3, scope: !20865)
!20929 = !DILocation(line: 5012, column: 12, scope: !20930)
!20930 = distinct !DILexicalBlock(scope: !20854, file: !3, line: 5012, column: 12)
!20931 = !DILocation(line: 5012, column: 20, scope: !20930)
!20932 = !DILocation(line: 5012, column: 24, scope: !20930)
!20933 = !DILocation(line: 5012, column: 17, scope: !20930)
!20934 = !DILocation(line: 5012, column: 12, scope: !20854)
!20935 = !DILocation(line: 5013, column: 4, scope: !20936)
!20936 = distinct !DILexicalBlock(scope: !20937, file: !3, line: 5013, column: 4)
!20937 = distinct !DILexicalBlock(scope: !20930, file: !3, line: 5012, column: 30)
!20938 = !DILocation(line: 5014, column: 27, scope: !20937)
!20939 = !DILocation(line: 5014, column: 40, scope: !20937)
!20940 = !DILocation(line: 5014, column: 44, scope: !20937)
!20941 = !DILocation(line: 5014, column: 50, scope: !20937)
!20942 = !DILocation(line: 5014, column: 39, scope: !20937)
!20943 = !DILocation(line: 5014, column: 55, scope: !20937)
!20944 = !DILocation(line: 5014, column: 14, scope: !20937)
!20945 = !DILocation(line: 5014, column: 12, scope: !20937)
!20946 = !DILocation(line: 5015, column: 21, scope: !20937)
!20947 = !DILocation(line: 5015, column: 31, scope: !20937)
!20948 = !DILocation(line: 5015, column: 39, scope: !20937)
!20949 = !DILocation(line: 5015, column: 44, scope: !20937)
!20950 = !DILocation(line: 5015, column: 50, scope: !20937)
!20951 = !DILocation(line: 5015, column: 54, scope: !20937)
!20952 = !DILocation(line: 5015, column: 4, scope: !20937)
!20953 = !DILocation(line: 5016, column: 5, scope: !20937)
!20954 = !DILocation(line: 5016, column: 16, scope: !20937)
!20955 = !DILocation(line: 5016, column: 15, scope: !20937)
!20956 = !DILocation(line: 5017, column: 4, scope: !20957)
!20957 = distinct !DILexicalBlock(scope: !20937, file: !3, line: 5017, column: 4)
!20958 = !DILocation(line: 5018, column: 18, scope: !20937)
!20959 = !DILocation(line: 5018, column: 27, scope: !20937)
!20960 = !DILocation(line: 5018, column: 4, scope: !20937)
!20961 = !DILocation(line: 5018, column: 13, scope: !20937)
!20962 = !DILocation(line: 5018, column: 16, scope: !20937)
!20963 = !DILocation(line: 5019, column: 15, scope: !20937)
!20964 = !DILocation(line: 5019, column: 21, scope: !20937)
!20965 = !DILocation(line: 5019, column: 27, scope: !20937)
!20966 = !DILocation(line: 5019, column: 4, scope: !20937)
!20967 = !DILocation(line: 5020, column: 4, scope: !20937)
!20968 = !DILocation(line: 5020, column: 14, scope: !20937)
!20969 = !DILocation(line: 5020, column: 18, scope: !20937)
!20970 = !DILocation(line: 5021, column: 15, scope: !20937)
!20971 = !DILocation(line: 5021, column: 4, scope: !20937)
!20972 = !DILocation(line: 5021, column: 8, scope: !20937)
!20973 = !DILocation(line: 5021, column: 13, scope: !20937)
!20974 = !DILocation(line: 5022, column: 11, scope: !20937)
!20975 = !DILocation(line: 5022, column: 19, scope: !20937)
!20976 = !DILocation(line: 5022, column: 9, scope: !20937)
!20977 = !DILocation(line: 5023, column: 7, scope: !20937)
!20978 = !DILocation(line: 5025, column: 8, scope: !20979)
!20979 = distinct !DILexicalBlock(scope: !20937, file: !3, line: 5025, column: 8)
!20980 = !DILocation(line: 5025, column: 12, scope: !20979)
!20981 = !DILocation(line: 5025, column: 18, scope: !20979)
!20982 = !DILocation(line: 5025, column: 8, scope: !20937)
!20983 = !DILocation(line: 5026, column: 22, scope: !20984)
!20984 = distinct !DILexicalBlock(scope: !20979, file: !3, line: 5025, column: 23)
!20985 = !DILocation(line: 5026, column: 5, scope: !20984)
!20986 = !DILocation(line: 5026, column: 20, scope: !20984)
!20987 = !DILocation(line: 5027, column: 22, scope: !20984)
!20988 = !DILocation(line: 5027, column: 30, scope: !20984)
!20989 = !DILocation(line: 5027, column: 5, scope: !20984)
!20990 = !DILocation(line: 5027, column: 20, scope: !20984)
!20991 = !DILocation(line: 5028, column: 4, scope: !20984)
!20992 = !DILocation(line: 5029, column: 3, scope: !20937)
!20993 = !DILocation(line: 5030, column: 12, scope: !20994)
!20994 = distinct !DILexicalBlock(scope: !20930, file: !3, line: 5030, column: 12)
!20995 = !DILocation(line: 5030, column: 17, scope: !20994)
!20996 = !DILocation(line: 5030, column: 12, scope: !20930)
!20997 = !DILocation(line: 5031, column: 4, scope: !20998)
!20998 = distinct !DILexicalBlock(scope: !20999, file: !3, line: 5031, column: 4)
!20999 = distinct !DILexicalBlock(scope: !20994, file: !3, line: 5030, column: 25)
!21000 = !DILocation(line: 5032, column: 27, scope: !20999)
!21001 = !DILocation(line: 5032, column: 14, scope: !20999)
!21002 = !DILocation(line: 5032, column: 12, scope: !20999)
!21003 = !DILocation(line: 5033, column: 5, scope: !20999)
!21004 = !DILocation(line: 5033, column: 16, scope: !20999)
!21005 = !DILocation(line: 5033, column: 15, scope: !20999)
!21006 = !DILocation(line: 5034, column: 4, scope: !21007)
!21007 = distinct !DILexicalBlock(scope: !20999, file: !3, line: 5034, column: 4)
!21008 = !DILocation(line: 5035, column: 18, scope: !20999)
!21009 = !DILocation(line: 5035, column: 27, scope: !20999)
!21010 = !DILocation(line: 5035, column: 4, scope: !20999)
!21011 = !DILocation(line: 5035, column: 13, scope: !20999)
!21012 = !DILocation(line: 5035, column: 16, scope: !20999)
!21013 = !DILocation(line: 5036, column: 15, scope: !20999)
!21014 = !DILocation(line: 5036, column: 21, scope: !20999)
!21015 = !DILocation(line: 5036, column: 27, scope: !20999)
!21016 = !DILocation(line: 5036, column: 4, scope: !20999)
!21017 = !DILocation(line: 5038, column: 20, scope: !20999)
!21018 = !DILocation(line: 5038, column: 12, scope: !20999)
!21019 = !DILocation(line: 5038, column: 10, scope: !20999)
!21020 = !DILocation(line: 5039, column: 11, scope: !20999)
!21021 = !DILocation(line: 5039, column: 4, scope: !20999)
!21022 = !DILocation(line: 5039, column: 18, scope: !20999)
!21023 = !DILocation(line: 5040, column: 17, scope: !20999)
!21024 = !DILocation(line: 5040, column: 27, scope: !20999)
!21025 = !DILocation(line: 5040, column: 34, scope: !20999)
!21026 = !DILocation(line: 5040, column: 4, scope: !20999)
!21027 = !DILocation(line: 5041, column: 18, scope: !20999)
!21028 = !DILocation(line: 5041, column: 4, scope: !20999)
!21029 = !DILocation(line: 5041, column: 11, scope: !20999)
!21030 = !DILocation(line: 5041, column: 16, scope: !20999)
!21031 = !DILocation(line: 5042, column: 4, scope: !20999)
!21032 = !DILocation(line: 5042, column: 11, scope: !20999)
!21033 = !DILocation(line: 5042, column: 17, scope: !20999)
!21034 = !DILocation(line: 5044, column: 9, scope: !20999)
!21035 = !DILocation(line: 5044, column: 7, scope: !20999)
!21036 = !DILocation(line: 5045, column: 11, scope: !20999)
!21037 = !DILocation(line: 5045, column: 9, scope: !20999)
!21038 = !DILocation(line: 5046, column: 7, scope: !20999)
!21039 = !DILocation(line: 5047, column: 3, scope: !20999)
!21040 = !DILocation(line: 5049, column: 9, scope: !21041)
!21041 = distinct !DILexicalBlock(scope: !20994, file: !3, line: 5048, column: 8)
!21042 = !DILocation(line: 5052, column: 7, scope: !21043)
!21043 = distinct !DILexicalBlock(scope: !20855, file: !3, line: 5052, column: 7)
!21044 = !DILocation(line: 5052, column: 7, scope: !20855)
!21045 = !DILocation(line: 5053, column: 9, scope: !21046)
!21046 = distinct !DILexicalBlock(scope: !21047, file: !3, line: 5053, column: 8)
!21047 = distinct !DILexicalBlock(scope: !21043, file: !3, line: 5052, column: 13)
!21048 = !DILocation(line: 5053, column: 8, scope: !21047)
!21049 = !DILocation(line: 5053, column: 16, scope: !21046)
!21050 = !DILocation(line: 5053, column: 20, scope: !21046)
!21051 = !DILocation(line: 5053, column: 25, scope: !21046)
!21052 = !DILocation(line: 5055, column: 8, scope: !21053)
!21053 = distinct !DILexicalBlock(scope: !21047, file: !3, line: 5055, column: 8)
!21054 = !DILocation(line: 5055, column: 13, scope: !21053)
!21055 = !DILocation(line: 5055, column: 8, scope: !21047)
!21056 = !DILocation(line: 5056, column: 16, scope: !21057)
!21057 = distinct !DILexicalBlock(scope: !21053, file: !3, line: 5055, column: 21)
!21058 = !DILocation(line: 5056, column: 25, scope: !21057)
!21059 = !DILocation(line: 5056, column: 33, scope: !21057)
!21060 = !DILocation(line: 5056, column: 39, scope: !21057)
!21061 = !DILocation(line: 5056, column: 5, scope: !21057)
!21062 = !DILocation(line: 5057, column: 16, scope: !21057)
!21063 = !DILocation(line: 5057, column: 25, scope: !21057)
!21064 = !DILocation(line: 5057, column: 33, scope: !21057)
!21065 = !DILocation(line: 5057, column: 39, scope: !21057)
!21066 = !DILocation(line: 5057, column: 5, scope: !21057)
!21067 = !DILocation(line: 5058, column: 16, scope: !21057)
!21068 = !DILocation(line: 5058, column: 25, scope: !21057)
!21069 = !DILocation(line: 5058, column: 33, scope: !21057)
!21070 = !DILocation(line: 5058, column: 39, scope: !21057)
!21071 = !DILocation(line: 5058, column: 5, scope: !21057)
!21072 = !DILocation(line: 5059, column: 4, scope: !21057)
!21073 = !DILocation(line: 5061, column: 17, scope: !21074)
!21074 = distinct !DILexicalBlock(scope: !21053, file: !3, line: 5060, column: 9)
!21075 = !DILocation(line: 5061, column: 26, scope: !21074)
!21076 = !DILocation(line: 5061, column: 34, scope: !21074)
!21077 = !DILocation(line: 5061, column: 40, scope: !21074)
!21078 = !DILocation(line: 5061, column: 5, scope: !21074)
!21079 = !DILocation(line: 5062, column: 17, scope: !21074)
!21080 = !DILocation(line: 5062, column: 23, scope: !21074)
!21081 = !DILocation(line: 5062, column: 32, scope: !21074)
!21082 = !DILocation(line: 5062, column: 40, scope: !21074)
!21083 = !DILocation(line: 5062, column: 5, scope: !21074)
!21084 = !DILocation(line: 5064, column: 9, scope: !21085)
!21085 = distinct !DILexicalBlock(scope: !21074, file: !3, line: 5064, column: 9)
!21086 = !DILocation(line: 5064, column: 9, scope: !21074)
!21087 = !DILocalVariable(name: "h1", scope: !21088, file: !3, line: 5065, type: !13)
!21088 = distinct !DILexicalBlock(scope: !21085, file: !3, line: 5064, column: 25)
!21089 = !DILocation(line: 5065, column: 17, scope: !21088)
!21090 = !DILocation(line: 5065, column: 22, scope: !21088)
!21091 = !DILocation(line: 5065, column: 38, scope: !21088)
!21092 = !DILocalVariable(name: "h2", scope: !21088, file: !3, line: 5065, type: !13)
!21093 = !DILocation(line: 5065, column: 42, scope: !21088)
!21094 = !DILocation(line: 5065, column: 47, scope: !21088)
!21095 = !DILocation(line: 5065, column: 63, scope: !21088)
!21096 = !DILocation(line: 5066, column: 27, scope: !21088)
!21097 = !DILocation(line: 5066, column: 43, scope: !21088)
!21098 = !DILocation(line: 5066, column: 46, scope: !21088)
!21099 = !DILocation(line: 5066, column: 6, scope: !21088)
!21100 = !DILocation(line: 5066, column: 22, scope: !21088)
!21101 = !DILocation(line: 5066, column: 25, scope: !21088)
!21102 = !DILocation(line: 5067, column: 27, scope: !21088)
!21103 = !DILocation(line: 5067, column: 43, scope: !21088)
!21104 = !DILocation(line: 5067, column: 59, scope: !21088)
!21105 = !DILocation(line: 5067, column: 6, scope: !21088)
!21106 = !DILocation(line: 5068, column: 27, scope: !21088)
!21107 = !DILocation(line: 5068, column: 6, scope: !21088)
!21108 = !DILocation(line: 5068, column: 22, scope: !21088)
!21109 = !DILocation(line: 5068, column: 25, scope: !21088)
!21110 = !DILocation(line: 5069, column: 27, scope: !21088)
!21111 = !DILocation(line: 5069, column: 6, scope: !21088)
!21112 = !DILocation(line: 5069, column: 22, scope: !21088)
!21113 = !DILocation(line: 5069, column: 25, scope: !21088)
!21114 = !DILocation(line: 5070, column: 5, scope: !21088)
!21115 = !DILocation(line: 5072, column: 18, scope: !21116)
!21116 = distinct !DILexicalBlock(scope: !21085, file: !3, line: 5071, column: 10)
!21117 = !DILocation(line: 5072, column: 27, scope: !21116)
!21118 = !DILocation(line: 5072, column: 35, scope: !21116)
!21119 = !DILocation(line: 5072, column: 41, scope: !21116)
!21120 = !DILocation(line: 5072, column: 49, scope: !21116)
!21121 = !DILocation(line: 5072, column: 6, scope: !21116)
!21122 = !DILocation(line: 5073, column: 18, scope: !21116)
!21123 = !DILocation(line: 5073, column: 27, scope: !21116)
!21124 = !DILocation(line: 5073, column: 35, scope: !21116)
!21125 = !DILocation(line: 5073, column: 41, scope: !21116)
!21126 = !DILocation(line: 5073, column: 49, scope: !21116)
!21127 = !DILocation(line: 5073, column: 6, scope: !21116)
!21128 = !DILocation(line: 5077, column: 9, scope: !21129)
!21129 = distinct !DILexicalBlock(scope: !21074, file: !3, line: 5077, column: 9)
!21130 = !DILocation(line: 5077, column: 9, scope: !21074)
!21131 = !DILocation(line: 5077, column: 38, scope: !21129)
!21132 = !DILocation(line: 5077, column: 16, scope: !21129)
!21133 = !DILocation(line: 5078, column: 32, scope: !21129)
!21134 = !DILocation(line: 5078, column: 10, scope: !21129)
!21135 = !DILocation(line: 5080, column: 3, scope: !21047)
!21136 = !DILocation(line: 5081, column: 2, scope: !20855)
!21137 = !DILocation(line: 5082, column: 12, scope: !21138)
!21138 = distinct !DILexicalBlock(scope: !20847, file: !3, line: 5082, column: 11)
!21139 = !DILocation(line: 5082, column: 15, scope: !21138)
!21140 = !DILocation(line: 5082, column: 18, scope: !21138)
!21141 = !DILocation(line: 5082, column: 22, scope: !21138)
!21142 = !DILocation(line: 5082, column: 28, scope: !21138)
!21143 = !DILocation(line: 5082, column: 11, scope: !20847)
!21144 = !DILocation(line: 5084, column: 7, scope: !21145)
!21145 = distinct !DILexicalBlock(scope: !21146, file: !3, line: 5084, column: 7)
!21146 = distinct !DILexicalBlock(scope: !21138, file: !3, line: 5082, column: 34)
!21147 = !DILocation(line: 5084, column: 14, scope: !21145)
!21148 = !DILocation(line: 5084, column: 18, scope: !21145)
!21149 = !DILocation(line: 5084, column: 21, scope: !21145)
!21150 = !DILocation(line: 5084, column: 25, scope: !21145)
!21151 = !DILocation(line: 5084, column: 31, scope: !21145)
!21152 = !DILocation(line: 5084, column: 10, scope: !21145)
!21153 = !DILocation(line: 5084, column: 7, scope: !21146)
!21154 = !DILocation(line: 5085, column: 4, scope: !21155)
!21155 = distinct !DILexicalBlock(scope: !21145, file: !3, line: 5084, column: 37)
!21156 = !DILocation(line: 5085, column: 8, scope: !21155)
!21157 = !DILocation(line: 5085, column: 11, scope: !21155)
!21158 = !DILocation(line: 5086, column: 22, scope: !21155)
!21159 = !DILocation(line: 5086, column: 35, scope: !21155)
!21160 = !DILocation(line: 5086, column: 39, scope: !21155)
!21161 = !DILocation(line: 5086, column: 45, scope: !21155)
!21162 = !DILocation(line: 5086, column: 34, scope: !21155)
!21163 = !DILocation(line: 5086, column: 50, scope: !21155)
!21164 = !DILocation(line: 5086, column: 12, scope: !21155)
!21165 = !DILocation(line: 5086, column: 10, scope: !21155)
!21166 = !DILocation(line: 5087, column: 19, scope: !21155)
!21167 = !DILocation(line: 5087, column: 29, scope: !21155)
!21168 = !DILocation(line: 5087, column: 36, scope: !21155)
!21169 = !DILocation(line: 5087, column: 40, scope: !21155)
!21170 = !DILocation(line: 5087, column: 44, scope: !21155)
!21171 = !DILocation(line: 5087, column: 48, scope: !21155)
!21172 = !DILocation(line: 5087, column: 4, scope: !21155)
!21173 = !DILocation(line: 5088, column: 4, scope: !21155)
!21174 = !DILocation(line: 5088, column: 10, scope: !21155)
!21175 = !DILocation(line: 5088, column: 14, scope: !21155)
!21176 = !DILocation(line: 5088, column: 24, scope: !21155)
!21177 = !DILocation(line: 5088, column: 23, scope: !21155)
!21178 = !DILocation(line: 5089, column: 4, scope: !21155)
!21179 = !DILocation(line: 5089, column: 14, scope: !21155)
!21180 = !DILocation(line: 5089, column: 18, scope: !21155)
!21181 = !DILocation(line: 5090, column: 13, scope: !21155)
!21182 = !DILocation(line: 5090, column: 4, scope: !21155)
!21183 = !DILocation(line: 5090, column: 8, scope: !21155)
!21184 = !DILocation(line: 5090, column: 11, scope: !21155)
!21185 = !DILocation(line: 5091, column: 13, scope: !21155)
!21186 = !DILocation(line: 5091, column: 17, scope: !21155)
!21187 = !DILocation(line: 5091, column: 10, scope: !21155)
!21188 = !DILocation(line: 5092, column: 4, scope: !21155)
!21189 = !DILocation(line: 5092, column: 11, scope: !21155)
!21190 = !DILocation(line: 5092, column: 14, scope: !21155)
!21191 = !DILocation(line: 5093, column: 9, scope: !21155)
!21192 = !DILocation(line: 5093, column: 15, scope: !21155)
!21193 = !DILocation(line: 5093, column: 7, scope: !21155)
!21194 = !DILocation(line: 5094, column: 7, scope: !21155)
!21195 = !DILocation(line: 5095, column: 3, scope: !21155)
!21196 = !DILocation(line: 5096, column: 12, scope: !21197)
!21197 = distinct !DILexicalBlock(scope: !21145, file: !3, line: 5096, column: 12)
!21198 = !DILocation(line: 5096, column: 18, scope: !21197)
!21199 = !DILocation(line: 5096, column: 22, scope: !21197)
!21200 = !DILocation(line: 5096, column: 15, scope: !21197)
!21201 = !DILocation(line: 5096, column: 12, scope: !21145)
!21202 = !DILocation(line: 5097, column: 4, scope: !21203)
!21203 = distinct !DILexicalBlock(scope: !21197, file: !3, line: 5096, column: 26)
!21204 = !DILocation(line: 5097, column: 8, scope: !21203)
!21205 = !DILocation(line: 5097, column: 11, scope: !21203)
!21206 = !DILocation(line: 5098, column: 22, scope: !21203)
!21207 = !DILocation(line: 5098, column: 35, scope: !21203)
!21208 = !DILocation(line: 5098, column: 39, scope: !21203)
!21209 = !DILocation(line: 5098, column: 45, scope: !21203)
!21210 = !DILocation(line: 5098, column: 34, scope: !21203)
!21211 = !DILocation(line: 5098, column: 50, scope: !21203)
!21212 = !DILocation(line: 5098, column: 12, scope: !21203)
!21213 = !DILocation(line: 5098, column: 10, scope: !21203)
!21214 = !DILocation(line: 5099, column: 19, scope: !21203)
!21215 = !DILocation(line: 5099, column: 29, scope: !21203)
!21216 = !DILocation(line: 5099, column: 35, scope: !21203)
!21217 = !DILocation(line: 5099, column: 40, scope: !21203)
!21218 = !DILocation(line: 5099, column: 44, scope: !21203)
!21219 = !DILocation(line: 5099, column: 48, scope: !21203)
!21220 = !DILocation(line: 5099, column: 4, scope: !21203)
!21221 = !DILocation(line: 5100, column: 5, scope: !21203)
!21222 = !DILocation(line: 5100, column: 14, scope: !21203)
!21223 = !DILocation(line: 5100, column: 13, scope: !21203)
!21224 = !DILocation(line: 5101, column: 4, scope: !21203)
!21225 = !DILocation(line: 5101, column: 11, scope: !21203)
!21226 = !DILocation(line: 5101, column: 14, scope: !21203)
!21227 = !DILocation(line: 5102, column: 4, scope: !21203)
!21228 = !DILocation(line: 5102, column: 14, scope: !21203)
!21229 = !DILocation(line: 5102, column: 18, scope: !21203)
!21230 = !DILocation(line: 5103, column: 13, scope: !21203)
!21231 = !DILocation(line: 5103, column: 4, scope: !21203)
!21232 = !DILocation(line: 5103, column: 8, scope: !21203)
!21233 = !DILocation(line: 5103, column: 11, scope: !21203)
!21234 = !DILocation(line: 5104, column: 9, scope: !21203)
!21235 = !DILocation(line: 5104, column: 15, scope: !21203)
!21236 = !DILocation(line: 5104, column: 7, scope: !21203)
!21237 = !DILocation(line: 5105, column: 7, scope: !21203)
!21238 = !DILocation(line: 5106, column: 3, scope: !21203)
!21239 = !DILocation(line: 5107, column: 12, scope: !21240)
!21240 = distinct !DILexicalBlock(scope: !21197, file: !3, line: 5107, column: 12)
!21241 = !DILocation(line: 5107, column: 17, scope: !21240)
!21242 = !DILocation(line: 5107, column: 12, scope: !21197)
!21243 = !DILocation(line: 5108, column: 4, scope: !21244)
!21244 = distinct !DILexicalBlock(scope: !21240, file: !3, line: 5107, column: 25)
!21245 = !DILocation(line: 5108, column: 8, scope: !21244)
!21246 = !DILocation(line: 5108, column: 11, scope: !21244)
!21247 = !DILocation(line: 5109, column: 22, scope: !21244)
!21248 = !DILocation(line: 5109, column: 12, scope: !21244)
!21249 = !DILocation(line: 5109, column: 10, scope: !21244)
!21250 = !DILocation(line: 5110, column: 5, scope: !21244)
!21251 = !DILocation(line: 5110, column: 14, scope: !21244)
!21252 = !DILocation(line: 5110, column: 13, scope: !21244)
!21253 = !DILocation(line: 5111, column: 4, scope: !21244)
!21254 = !DILocation(line: 5111, column: 11, scope: !21244)
!21255 = !DILocation(line: 5111, column: 14, scope: !21244)
!21256 = !DILocation(line: 5113, column: 20, scope: !21244)
!21257 = !DILocation(line: 5113, column: 12, scope: !21244)
!21258 = !DILocation(line: 5113, column: 10, scope: !21244)
!21259 = !DILocation(line: 5114, column: 11, scope: !21244)
!21260 = !DILocation(line: 5114, column: 4, scope: !21244)
!21261 = !DILocation(line: 5114, column: 18, scope: !21244)
!21262 = !DILocation(line: 5115, column: 17, scope: !21244)
!21263 = !DILocation(line: 5115, column: 27, scope: !21244)
!21264 = !DILocation(line: 5115, column: 34, scope: !21244)
!21265 = !DILocation(line: 5115, column: 4, scope: !21244)
!21266 = !DILocation(line: 5116, column: 16, scope: !21244)
!21267 = !DILocation(line: 5116, column: 4, scope: !21244)
!21268 = !DILocation(line: 5116, column: 11, scope: !21244)
!21269 = !DILocation(line: 5116, column: 14, scope: !21244)
!21270 = !DILocation(line: 5117, column: 4, scope: !21244)
!21271 = !DILocation(line: 5117, column: 11, scope: !21244)
!21272 = !DILocation(line: 5117, column: 18, scope: !21244)
!21273 = !DILocation(line: 5118, column: 4, scope: !21244)
!21274 = !DILocation(line: 5118, column: 11, scope: !21244)
!21275 = !DILocation(line: 5118, column: 17, scope: !21244)
!21276 = !DILocation(line: 5119, column: 20, scope: !21244)
!21277 = !DILocation(line: 5119, column: 27, scope: !21244)
!21278 = !DILocation(line: 5119, column: 34, scope: !21244)
!21279 = !DILocation(line: 5119, column: 4, scope: !21244)
!21280 = !DILocation(line: 5119, column: 11, scope: !21244)
!21281 = !DILocation(line: 5119, column: 18, scope: !21244)
!21282 = !DILocation(line: 5121, column: 9, scope: !21244)
!21283 = !DILocation(line: 5121, column: 7, scope: !21244)
!21284 = !DILocation(line: 5122, column: 9, scope: !21244)
!21285 = !DILocation(line: 5122, column: 7, scope: !21244)
!21286 = !DILocation(line: 5123, column: 7, scope: !21244)
!21287 = !DILocation(line: 5124, column: 3, scope: !21244)
!21288 = !DILocation(line: 5126, column: 7, scope: !21289)
!21289 = distinct !DILexicalBlock(scope: !21240, file: !3, line: 5125, column: 8)
!21290 = !DILocation(line: 5129, column: 7, scope: !21291)
!21291 = distinct !DILexicalBlock(scope: !21146, file: !3, line: 5129, column: 7)
!21292 = !DILocation(line: 5129, column: 7, scope: !21146)
!21293 = !DILocation(line: 5130, column: 8, scope: !21294)
!21294 = distinct !DILexicalBlock(scope: !21295, file: !3, line: 5130, column: 8)
!21295 = distinct !DILexicalBlock(scope: !21291, file: !3, line: 5129, column: 11)
!21296 = !DILocation(line: 5130, column: 13, scope: !21294)
!21297 = !DILocation(line: 5130, column: 8, scope: !21295)
!21298 = !DILocation(line: 5131, column: 16, scope: !21299)
!21299 = distinct !DILexicalBlock(scope: !21294, file: !3, line: 5130, column: 21)
!21300 = !DILocation(line: 5131, column: 23, scope: !21299)
!21301 = !DILocation(line: 5131, column: 28, scope: !21299)
!21302 = !DILocation(line: 5131, column: 32, scope: !21299)
!21303 = !DILocation(line: 5131, column: 5, scope: !21299)
!21304 = !DILocation(line: 5132, column: 4, scope: !21299)
!21305 = !DILocation(line: 5134, column: 17, scope: !21306)
!21306 = distinct !DILexicalBlock(scope: !21294, file: !3, line: 5133, column: 9)
!21307 = !DILocation(line: 5134, column: 24, scope: !21306)
!21308 = !DILocation(line: 5134, column: 29, scope: !21306)
!21309 = !DILocation(line: 5134, column: 35, scope: !21306)
!21310 = !DILocation(line: 5134, column: 5, scope: !21306)
!21311 = !DILocation(line: 5135, column: 5, scope: !21306)
!21312 = !DILocation(line: 5135, column: 12, scope: !21306)
!21313 = !DILocation(line: 5135, column: 19, scope: !21306)
!21314 = !DILocation(line: 5137, column: 10, scope: !21315)
!21315 = distinct !DILexicalBlock(scope: !21306, file: !3, line: 5137, column: 9)
!21316 = !DILocation(line: 5137, column: 16, scope: !21315)
!21317 = !DILocation(line: 5137, column: 19, scope: !21315)
!21318 = !DILocation(line: 5137, column: 23, scope: !21315)
!21319 = !DILocation(line: 5137, column: 30, scope: !21315)
!21320 = !DILocation(line: 5137, column: 34, scope: !21315)
!21321 = !DILocation(line: 5137, column: 37, scope: !21315)
!21322 = !DILocation(line: 5137, column: 41, scope: !21315)
!21323 = !DILocation(line: 5137, column: 51, scope: !21315)
!21324 = !DILocation(line: 5137, column: 55, scope: !21315)
!21325 = !DILocation(line: 5137, column: 48, scope: !21315)
!21326 = !DILocation(line: 5137, column: 9, scope: !21306)
!21327 = !DILocation(line: 5138, column: 6, scope: !21315)
!21328 = !DILocation(line: 5138, column: 10, scope: !21315)
!21329 = !DILocation(line: 5138, column: 16, scope: !21315)
!21330 = !DILocation(line: 5141, column: 9, scope: !21331)
!21331 = distinct !DILexicalBlock(scope: !21295, file: !3, line: 5141, column: 8)
!21332 = !DILocation(line: 5141, column: 8, scope: !21295)
!21333 = !DILocation(line: 5142, column: 5, scope: !21334)
!21334 = distinct !DILexicalBlock(scope: !21331, file: !3, line: 5141, column: 16)
!21335 = !DILocation(line: 5142, column: 9, scope: !21334)
!21336 = !DILocation(line: 5142, column: 14, scope: !21334)
!21337 = !DILocation(line: 5143, column: 26, scope: !21334)
!21338 = !DILocation(line: 5143, column: 5, scope: !21334)
!21339 = !DILocation(line: 5144, column: 4, scope: !21334)
!21340 = !DILocation(line: 5146, column: 26, scope: !21341)
!21341 = distinct !DILexicalBlock(scope: !21331, file: !3, line: 5145, column: 9)
!21342 = !DILocation(line: 5146, column: 5, scope: !21341)
!21343 = !DILocation(line: 5148, column: 3, scope: !21295)
!21344 = !DILocation(line: 5149, column: 2, scope: !21146)
!21345 = !DILocation(line: 5151, column: 6, scope: !21346)
!21346 = distinct !DILexicalBlock(scope: !20599, file: !3, line: 5151, column: 6)
!21347 = !DILocation(line: 5151, column: 6, scope: !20599)
!21348 = !DILocation(line: 5152, column: 7, scope: !21349)
!21349 = distinct !DILexicalBlock(scope: !21350, file: !3, line: 5152, column: 7)
!21350 = distinct !DILexicalBlock(scope: !21346, file: !3, line: 5151, column: 10)
!21351 = !DILocation(line: 5152, column: 11, scope: !21349)
!21352 = !DILocation(line: 5152, column: 7, scope: !21350)
!21353 = !DILocation(line: 5153, column: 35, scope: !21354)
!21354 = distinct !DILexicalBlock(scope: !21349, file: !3, line: 5152, column: 17)
!21355 = !DILocation(line: 5153, column: 39, scope: !21354)
!21356 = !DILocation(line: 5153, column: 43, scope: !21354)
!21357 = !DILocation(line: 5153, column: 4, scope: !21354)
!21358 = !DILocation(line: 5154, column: 3, scope: !21354)
!21359 = !DILocation(line: 5156, column: 35, scope: !21360)
!21360 = distinct !DILexicalBlock(scope: !21349, file: !3, line: 5155, column: 8)
!21361 = !DILocation(line: 5156, column: 39, scope: !21360)
!21362 = !DILocation(line: 5156, column: 43, scope: !21360)
!21363 = !DILocation(line: 5156, column: 4, scope: !21360)
!21364 = !DILocation(line: 5159, column: 19, scope: !21350)
!21365 = !DILocation(line: 5159, column: 3, scope: !21350)
!21366 = !DILocation(line: 5161, column: 32, scope: !21367)
!21367 = distinct !DILexicalBlock(scope: !21350, file: !3, line: 5161, column: 7)
!21368 = !DILocation(line: 5161, column: 40, scope: !21367)
!21369 = !DILocation(line: 5161, column: 7, scope: !21367)
!21370 = !DILocation(line: 5161, column: 7, scope: !21350)
!21371 = !DILocation(line: 5162, column: 26, scope: !21367)
!21372 = !DILocation(line: 5162, column: 50, scope: !21367)
!21373 = !DILocation(line: 5162, column: 4, scope: !21367)
!21374 = !DILocation(line: 5164, column: 25, scope: !21350)
!21375 = !DILocation(line: 5164, column: 47, scope: !21350)
!21376 = !DILocation(line: 5164, column: 55, scope: !21350)
!21377 = !DILocation(line: 5164, column: 3, scope: !21350)
!21378 = !DILocation(line: 5165, column: 21, scope: !21350)
!21379 = !DILocation(line: 5165, column: 29, scope: !21350)
!21380 = !DILocation(line: 5165, column: 3, scope: !21350)
!21381 = !DILocation(line: 5167, column: 3, scope: !21350)
!21382 = !DILocation(line: 5170, column: 2, scope: !20599)
!21383 = !DILocation(line: 5171, column: 1, scope: !20599)
!21384 = distinct !DISubprogram(name: "findselectedNurbvert", scope: !3, file: !3, line: 3827, type: !21385, scopeLine: 3828, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!21385 = !DISubroutineType(types: !21386)
!21386 = !{null, !486, !9386, !9387, !9388}
!21387 = !DILocalVariable(name: "editnurb", arg: 1, scope: !21384, file: !3, line: 3827, type: !486)
!21388 = !DILocation(line: 3827, column: 44, scope: !21384)
!21389 = !DILocalVariable(name: "nu", arg: 2, scope: !21384, file: !3, line: 3827, type: !9386)
!21390 = !DILocation(line: 3827, column: 61, scope: !21384)
!21391 = !DILocalVariable(name: "bezt", arg: 3, scope: !21384, file: !3, line: 3827, type: !9387)
!21392 = !DILocation(line: 3827, column: 77, scope: !21384)
!21393 = !DILocalVariable(name: "bp", arg: 4, scope: !21384, file: !3, line: 3827, type: !9388)
!21394 = !DILocation(line: 3827, column: 92, scope: !21384)
!21395 = !DILocalVariable(name: "nu1", scope: !21384, file: !3, line: 3831, type: !3163)
!21396 = !DILocation(line: 3831, column: 8, scope: !21384)
!21397 = !DILocalVariable(name: "bezt1", scope: !21384, file: !3, line: 3832, type: !3104)
!21398 = !DILocation(line: 3832, column: 13, scope: !21384)
!21399 = !DILocalVariable(name: "bp1", scope: !21384, file: !3, line: 3833, type: !3093)
!21400 = !DILocation(line: 3833, column: 10, scope: !21384)
!21401 = !DILocalVariable(name: "a", scope: !21384, file: !3, line: 3834, type: !22)
!21402 = !DILocation(line: 3834, column: 6, scope: !21384)
!21403 = !DILocation(line: 3836, column: 3, scope: !21384)
!21404 = !DILocation(line: 3836, column: 6, scope: !21384)
!21405 = !DILocation(line: 3837, column: 3, scope: !21384)
!21406 = !DILocation(line: 3837, column: 8, scope: !21384)
!21407 = !DILocation(line: 3838, column: 3, scope: !21384)
!21408 = !DILocation(line: 3838, column: 6, scope: !21384)
!21409 = !DILocation(line: 3839, column: 13, scope: !21410)
!21410 = distinct !DILexicalBlock(scope: !21384, file: !3, line: 3839, column: 2)
!21411 = !DILocation(line: 3839, column: 23, scope: !21410)
!21412 = !DILocation(line: 3839, column: 11, scope: !21410)
!21413 = !DILocation(line: 3839, column: 7, scope: !21410)
!21414 = !DILocation(line: 3839, column: 30, scope: !21415)
!21415 = distinct !DILexicalBlock(scope: !21410, file: !3, line: 3839, column: 2)
!21416 = !DILocation(line: 3839, column: 2, scope: !21410)
!21417 = !DILocation(line: 3840, column: 7, scope: !21418)
!21418 = distinct !DILexicalBlock(scope: !21419, file: !3, line: 3840, column: 7)
!21419 = distinct !DILexicalBlock(scope: !21415, file: !3, line: 3839, column: 52)
!21420 = !DILocation(line: 3840, column: 12, scope: !21418)
!21421 = !DILocation(line: 3840, column: 17, scope: !21418)
!21422 = !DILocation(line: 3840, column: 7, scope: !21419)
!21423 = !DILocation(line: 3841, column: 12, scope: !21424)
!21424 = distinct !DILexicalBlock(scope: !21418, file: !3, line: 3840, column: 31)
!21425 = !DILocation(line: 3841, column: 17, scope: !21424)
!21426 = !DILocation(line: 3841, column: 10, scope: !21424)
!21427 = !DILocation(line: 3842, column: 8, scope: !21424)
!21428 = !DILocation(line: 3842, column: 13, scope: !21424)
!21429 = !DILocation(line: 3842, column: 6, scope: !21424)
!21430 = !DILocation(line: 3843, column: 4, scope: !21424)
!21431 = !DILocation(line: 3843, column: 12, scope: !21424)
!21432 = !DILocation(line: 3844, column: 10, scope: !21433)
!21433 = distinct !DILexicalBlock(scope: !21434, file: !3, line: 3844, column: 9)
!21434 = distinct !DILexicalBlock(scope: !21424, file: !3, line: 3843, column: 16)
!21435 = !DILocation(line: 3844, column: 17, scope: !21433)
!21436 = !DILocation(line: 3844, column: 20, scope: !21433)
!21437 = !DILocation(line: 3844, column: 30, scope: !21433)
!21438 = !DILocation(line: 3844, column: 34, scope: !21433)
!21439 = !DILocation(line: 3844, column: 41, scope: !21433)
!21440 = !DILocation(line: 3844, column: 44, scope: !21433)
!21441 = !DILocation(line: 3844, column: 54, scope: !21433)
!21442 = !DILocation(line: 3844, column: 58, scope: !21433)
!21443 = !DILocation(line: 3844, column: 65, scope: !21433)
!21444 = !DILocation(line: 3844, column: 68, scope: !21433)
!21445 = !DILocation(line: 3844, column: 9, scope: !21434)
!21446 = !DILocation(line: 3845, column: 11, scope: !21447)
!21447 = distinct !DILexicalBlock(scope: !21448, file: !3, line: 3845, column: 10)
!21448 = distinct !DILexicalBlock(scope: !21433, file: !3, line: 3844, column: 79)
!21449 = !DILocation(line: 3845, column: 10, scope: !21447)
!21450 = !DILocation(line: 3845, column: 14, scope: !21447)
!21451 = !DILocation(line: 3845, column: 22, scope: !21447)
!21452 = !DILocation(line: 3845, column: 26, scope: !21447)
!21453 = !DILocation(line: 3845, column: 25, scope: !21447)
!21454 = !DILocation(line: 3845, column: 32, scope: !21447)
!21455 = !DILocation(line: 3845, column: 29, scope: !21447)
!21456 = !DILocation(line: 3845, column: 10, scope: !21448)
!21457 = !DILocation(line: 3846, column: 8, scope: !21458)
!21458 = distinct !DILexicalBlock(scope: !21447, file: !3, line: 3845, column: 37)
!21459 = !DILocation(line: 3846, column: 11, scope: !21458)
!21460 = !DILocation(line: 3847, column: 8, scope: !21458)
!21461 = !DILocation(line: 3847, column: 11, scope: !21458)
!21462 = !DILocation(line: 3848, column: 8, scope: !21458)
!21463 = !DILocation(line: 3848, column: 13, scope: !21458)
!21464 = !DILocation(line: 3849, column: 7, scope: !21458)
!21465 = !DILocation(line: 3851, column: 16, scope: !21466)
!21466 = distinct !DILexicalBlock(scope: !21447, file: !3, line: 3851, column: 15)
!21467 = !DILocation(line: 3851, column: 15, scope: !21466)
!21468 = !DILocation(line: 3851, column: 21, scope: !21466)
!21469 = !DILocation(line: 3851, column: 25, scope: !21466)
!21470 = !DILocation(line: 3851, column: 24, scope: !21466)
!21471 = !DILocation(line: 3851, column: 15, scope: !21447)
!21472 = !DILocation(line: 3852, column: 8, scope: !21473)
!21473 = distinct !DILexicalBlock(scope: !21466, file: !3, line: 3851, column: 29)
!21474 = !DILocation(line: 3852, column: 11, scope: !21473)
!21475 = !DILocation(line: 3853, column: 8, scope: !21473)
!21476 = !DILocation(line: 3853, column: 13, scope: !21473)
!21477 = !DILocation(line: 3854, column: 6, scope: !21473)
!21478 = !DILocation(line: 3856, column: 15, scope: !21479)
!21479 = distinct !DILexicalBlock(scope: !21466, file: !3, line: 3855, column: 11)
!21480 = !DILocation(line: 3856, column: 8, scope: !21479)
!21481 = !DILocation(line: 3856, column: 13, scope: !21479)
!21482 = !DILocation(line: 3857, column: 13, scope: !21479)
!21483 = !DILocation(line: 3857, column: 8, scope: !21479)
!21484 = !DILocation(line: 3857, column: 11, scope: !21479)
!21485 = !DILocation(line: 3859, column: 5, scope: !21448)
!21486 = !DILocation(line: 3860, column: 10, scope: !21434)
!21487 = distinct !{!21487, !21430, !21488}
!21488 = !DILocation(line: 3861, column: 4, scope: !21424)
!21489 = !DILocation(line: 3862, column: 3, scope: !21424)
!21490 = !DILocation(line: 3864, column: 10, scope: !21491)
!21491 = distinct !DILexicalBlock(scope: !21418, file: !3, line: 3863, column: 8)
!21492 = !DILocation(line: 3864, column: 15, scope: !21491)
!21493 = !DILocation(line: 3864, column: 8, scope: !21491)
!21494 = !DILocation(line: 3865, column: 8, scope: !21491)
!21495 = !DILocation(line: 3865, column: 13, scope: !21491)
!21496 = !DILocation(line: 3865, column: 21, scope: !21491)
!21497 = !DILocation(line: 3865, column: 26, scope: !21491)
!21498 = !DILocation(line: 3865, column: 19, scope: !21491)
!21499 = !DILocation(line: 3865, column: 6, scope: !21491)
!21500 = !DILocation(line: 3866, column: 4, scope: !21491)
!21501 = !DILocation(line: 3866, column: 12, scope: !21491)
!21502 = !DILocation(line: 3867, column: 9, scope: !21503)
!21503 = distinct !DILexicalBlock(scope: !21504, file: !3, line: 3867, column: 9)
!21504 = distinct !DILexicalBlock(scope: !21491, file: !3, line: 3866, column: 16)
!21505 = !DILocation(line: 3867, column: 14, scope: !21503)
!21506 = !DILocation(line: 3867, column: 17, scope: !21503)
!21507 = !DILocation(line: 3867, column: 9, scope: !21504)
!21508 = !DILocation(line: 3868, column: 11, scope: !21509)
!21509 = distinct !DILexicalBlock(scope: !21510, file: !3, line: 3868, column: 10)
!21510 = distinct !DILexicalBlock(scope: !21503, file: !3, line: 3867, column: 27)
!21511 = !DILocation(line: 3868, column: 10, scope: !21509)
!21512 = !DILocation(line: 3868, column: 14, scope: !21509)
!21513 = !DILocation(line: 3868, column: 22, scope: !21509)
!21514 = !DILocation(line: 3868, column: 26, scope: !21509)
!21515 = !DILocation(line: 3868, column: 25, scope: !21509)
!21516 = !DILocation(line: 3868, column: 32, scope: !21509)
!21517 = !DILocation(line: 3868, column: 29, scope: !21509)
!21518 = !DILocation(line: 3868, column: 10, scope: !21510)
!21519 = !DILocation(line: 3869, column: 8, scope: !21520)
!21520 = distinct !DILexicalBlock(scope: !21509, file: !3, line: 3868, column: 37)
!21521 = !DILocation(line: 3869, column: 11, scope: !21520)
!21522 = !DILocation(line: 3870, column: 8, scope: !21520)
!21523 = !DILocation(line: 3870, column: 13, scope: !21520)
!21524 = !DILocation(line: 3871, column: 8, scope: !21520)
!21525 = !DILocation(line: 3871, column: 11, scope: !21520)
!21526 = !DILocation(line: 3872, column: 7, scope: !21520)
!21527 = !DILocation(line: 3874, column: 16, scope: !21528)
!21528 = distinct !DILexicalBlock(scope: !21509, file: !3, line: 3874, column: 15)
!21529 = !DILocation(line: 3874, column: 15, scope: !21528)
!21530 = !DILocation(line: 3874, column: 21, scope: !21528)
!21531 = !DILocation(line: 3874, column: 25, scope: !21528)
!21532 = !DILocation(line: 3874, column: 24, scope: !21528)
!21533 = !DILocation(line: 3874, column: 15, scope: !21509)
!21534 = !DILocation(line: 3875, column: 8, scope: !21535)
!21535 = distinct !DILexicalBlock(scope: !21528, file: !3, line: 3874, column: 29)
!21536 = !DILocation(line: 3875, column: 11, scope: !21535)
!21537 = !DILocation(line: 3876, column: 8, scope: !21535)
!21538 = !DILocation(line: 3876, column: 13, scope: !21535)
!21539 = !DILocation(line: 3877, column: 6, scope: !21535)
!21540 = !DILocation(line: 3879, column: 13, scope: !21541)
!21541 = distinct !DILexicalBlock(scope: !21528, file: !3, line: 3878, column: 11)
!21542 = !DILocation(line: 3879, column: 8, scope: !21541)
!21543 = !DILocation(line: 3879, column: 11, scope: !21541)
!21544 = !DILocation(line: 3880, column: 13, scope: !21541)
!21545 = !DILocation(line: 3880, column: 8, scope: !21541)
!21546 = !DILocation(line: 3880, column: 11, scope: !21541)
!21547 = !DILocation(line: 3882, column: 5, scope: !21510)
!21548 = !DILocation(line: 3883, column: 8, scope: !21504)
!21549 = distinct !{!21549, !21500, !21550}
!21550 = !DILocation(line: 3884, column: 4, scope: !21491)
!21551 = !DILocation(line: 3886, column: 2, scope: !21419)
!21552 = !DILocation(line: 3839, column: 41, scope: !21415)
!21553 = !DILocation(line: 3839, column: 46, scope: !21415)
!21554 = !DILocation(line: 3839, column: 39, scope: !21415)
!21555 = !DILocation(line: 3839, column: 2, scope: !21415)
!21556 = distinct !{!21556, !21416, !21557}
!21557 = !DILocation(line: 3886, column: 2, scope: !21410)
!21558 = !DILocation(line: 3887, column: 1, scope: !21384)
!21559 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !5794, file: !5794, line: 309, type: !13687, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!21560 = !DILocalVariable(name: "r", arg: 1, scope: !21559, file: !5794, line: 309, type: !3154)
!21561 = !DILocation(line: 309, column: 32, scope: !21559)
!21562 = !DILocalVariable(name: "a", arg: 2, scope: !21559, file: !5794, line: 309, type: !4638)
!21563 = !DILocation(line: 309, column: 50, scope: !21559)
!21564 = !DILocalVariable(name: "b", arg: 3, scope: !21559, file: !5794, line: 309, type: !4638)
!21565 = !DILocation(line: 309, column: 68, scope: !21559)
!21566 = !DILocation(line: 311, column: 9, scope: !21559)
!21567 = !DILocation(line: 311, column: 16, scope: !21559)
!21568 = !DILocation(line: 311, column: 14, scope: !21559)
!21569 = !DILocation(line: 311, column: 2, scope: !21559)
!21570 = !DILocation(line: 311, column: 7, scope: !21559)
!21571 = !DILocation(line: 312, column: 9, scope: !21559)
!21572 = !DILocation(line: 312, column: 16, scope: !21559)
!21573 = !DILocation(line: 312, column: 14, scope: !21559)
!21574 = !DILocation(line: 312, column: 2, scope: !21559)
!21575 = !DILocation(line: 312, column: 7, scope: !21559)
!21576 = !DILocation(line: 313, column: 9, scope: !21559)
!21577 = !DILocation(line: 313, column: 16, scope: !21559)
!21578 = !DILocation(line: 313, column: 14, scope: !21559)
!21579 = !DILocation(line: 313, column: 2, scope: !21559)
!21580 = !DILocation(line: 313, column: 7, scope: !21559)
!21581 = !DILocation(line: 314, column: 1, scope: !21559)
!21582 = distinct !DISubprogram(name: "select_adjacent_cp", scope: !3, file: !3, line: 2945, type: !21583, scopeLine: 2947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!21583 = !DISubroutineType(types: !21584)
!21584 = !{null, !486, !48, !7655, !7655}
!21585 = !DILocalVariable(name: "editnurb", arg: 1, scope: !21582, file: !3, line: 2945, type: !486)
!21586 = !DILocation(line: 2945, column: 42, scope: !21582)
!21587 = !DILocalVariable(name: "next", arg: 2, scope: !21582, file: !3, line: 2945, type: !48)
!21588 = !DILocation(line: 2945, column: 58, scope: !21582)
!21589 = !DILocalVariable(name: "cont", arg: 3, scope: !21582, file: !3, line: 2946, type: !7655)
!21590 = !DILocation(line: 2946, column: 43, scope: !21582)
!21591 = !DILocalVariable(name: "selstatus", arg: 4, scope: !21582, file: !3, line: 2946, type: !7655)
!21592 = !DILocation(line: 2946, column: 60, scope: !21582)
!21593 = !DILocalVariable(name: "nu", scope: !21582, file: !3, line: 2948, type: !3163)
!21594 = !DILocation(line: 2948, column: 8, scope: !21582)
!21595 = !DILocalVariable(name: "bezt", scope: !21582, file: !3, line: 2949, type: !3104)
!21596 = !DILocation(line: 2949, column: 13, scope: !21582)
!21597 = !DILocalVariable(name: "bp", scope: !21582, file: !3, line: 2950, type: !3093)
!21598 = !DILocation(line: 2950, column: 10, scope: !21582)
!21599 = !DILocalVariable(name: "a", scope: !21582, file: !3, line: 2951, type: !22)
!21600 = !DILocation(line: 2951, column: 6, scope: !21582)
!21601 = !DILocalVariable(name: "lastsel", scope: !21582, file: !3, line: 2952, type: !1081)
!21602 = !DILocation(line: 2952, column: 7, scope: !21582)
!21603 = !DILocation(line: 2954, column: 6, scope: !21604)
!21604 = distinct !DILexicalBlock(scope: !21582, file: !3, line: 2954, column: 6)
!21605 = !DILocation(line: 2954, column: 11, scope: !21604)
!21606 = !DILocation(line: 2954, column: 6, scope: !21582)
!21607 = !DILocation(line: 2954, column: 17, scope: !21604)
!21608 = !DILocation(line: 2956, column: 12, scope: !21609)
!21609 = distinct !DILexicalBlock(scope: !21582, file: !3, line: 2956, column: 2)
!21610 = !DILocation(line: 2956, column: 22, scope: !21609)
!21611 = !DILocation(line: 2956, column: 10, scope: !21609)
!21612 = !DILocation(line: 2956, column: 7, scope: !21609)
!21613 = !DILocation(line: 2956, column: 29, scope: !21614)
!21614 = distinct !DILexicalBlock(scope: !21609, file: !3, line: 2956, column: 2)
!21615 = !DILocation(line: 2956, column: 2, scope: !21609)
!21616 = !DILocation(line: 2957, column: 11, scope: !21617)
!21617 = distinct !DILexicalBlock(scope: !21614, file: !3, line: 2956, column: 48)
!21618 = !DILocation(line: 2958, column: 7, scope: !21619)
!21619 = distinct !DILexicalBlock(scope: !21617, file: !3, line: 2958, column: 7)
!21620 = !DILocation(line: 2958, column: 11, scope: !21619)
!21621 = !DILocation(line: 2958, column: 16, scope: !21619)
!21622 = !DILocation(line: 2958, column: 7, scope: !21617)
!21623 = !DILocation(line: 2959, column: 8, scope: !21624)
!21624 = distinct !DILexicalBlock(scope: !21619, file: !3, line: 2958, column: 30)
!21625 = !DILocation(line: 2959, column: 12, scope: !21624)
!21626 = !DILocation(line: 2959, column: 6, scope: !21624)
!21627 = !DILocation(line: 2960, column: 11, scope: !21624)
!21628 = !DILocation(line: 2960, column: 15, scope: !21624)
!21629 = !DILocation(line: 2960, column: 9, scope: !21624)
!21630 = !DILocation(line: 2961, column: 8, scope: !21631)
!21631 = distinct !DILexicalBlock(scope: !21624, file: !3, line: 2961, column: 8)
!21632 = !DILocation(line: 2961, column: 13, scope: !21631)
!21633 = !DILocation(line: 2961, column: 8, scope: !21624)
!21634 = !DILocation(line: 2961, column: 26, scope: !21631)
!21635 = !DILocation(line: 2961, column: 30, scope: !21631)
!21636 = !DILocation(line: 2961, column: 35, scope: !21631)
!21637 = !DILocation(line: 2961, column: 37, scope: !21631)
!21638 = !DILocation(line: 2961, column: 23, scope: !21631)
!21639 = !DILocation(line: 2961, column: 18, scope: !21631)
!21640 = !DILocation(line: 2962, column: 4, scope: !21624)
!21641 = !DILocation(line: 2962, column: 12, scope: !21624)
!21642 = !DILocation(line: 2963, column: 9, scope: !21643)
!21643 = distinct !DILexicalBlock(scope: !21644, file: !3, line: 2963, column: 9)
!21644 = distinct !DILexicalBlock(scope: !21624, file: !3, line: 2962, column: 16)
!21645 = !DILocation(line: 2963, column: 17, scope: !21643)
!21646 = !DILocation(line: 2963, column: 13, scope: !21643)
!21647 = !DILocation(line: 2963, column: 11, scope: !21643)
!21648 = !DILocation(line: 2963, column: 23, scope: !21643)
!21649 = !DILocation(line: 2963, column: 9, scope: !21644)
!21650 = !DILocation(line: 2963, column: 28, scope: !21643)
!21651 = !DILocation(line: 2964, column: 10, scope: !21652)
!21652 = distinct !DILexicalBlock(scope: !21644, file: !3, line: 2964, column: 9)
!21653 = !DILocation(line: 2964, column: 18, scope: !21652)
!21654 = !DILocation(line: 2964, column: 24, scope: !21652)
!21655 = !DILocation(line: 2964, column: 28, scope: !21652)
!21656 = !DILocation(line: 2964, column: 34, scope: !21652)
!21657 = !DILocation(line: 2964, column: 39, scope: !21652)
!21658 = !DILocation(line: 2964, column: 45, scope: !21652)
!21659 = !DILocation(line: 2964, column: 50, scope: !21652)
!21660 = !DILocation(line: 2964, column: 56, scope: !21652)
!21661 = !DILocation(line: 2964, column: 59, scope: !21652)
!21662 = !DILocation(line: 2964, column: 69, scope: !21652)
!21663 = !DILocation(line: 2964, column: 73, scope: !21652)
!21664 = !DILocation(line: 2964, column: 83, scope: !21652)
!21665 = !DILocation(line: 2964, column: 9, scope: !21644)
!21666 = !DILocation(line: 2965, column: 14, scope: !21667)
!21667 = distinct !DILexicalBlock(scope: !21652, file: !3, line: 2964, column: 98)
!21668 = !DILocation(line: 2965, column: 11, scope: !21667)
!21669 = !DILocation(line: 2966, column: 12, scope: !21670)
!21670 = distinct !DILexicalBlock(scope: !21667, file: !3, line: 2966, column: 10)
!21671 = !DILocation(line: 2966, column: 18, scope: !21670)
!21672 = !DILocation(line: 2966, column: 21, scope: !21670)
!21673 = !DILocation(line: 2966, column: 31, scope: !21670)
!21674 = !DILocation(line: 2966, column: 35, scope: !21670)
!21675 = !DILocation(line: 2966, column: 45, scope: !21670)
!21676 = !DILocation(line: 2966, column: 10, scope: !21667)
!21677 = !DILocalVariable(name: "sel", scope: !21678, file: !3, line: 2967, type: !48)
!21678 = distinct !DILexicalBlock(scope: !21670, file: !3, line: 2966, column: 59)
!21679 = !DILocation(line: 2967, column: 13, scope: !21678)
!21680 = !DILocation(line: 2967, column: 36, scope: !21678)
!21681 = !DILocation(line: 2967, column: 42, scope: !21678)
!21682 = !DILocation(line: 2967, column: 19, scope: !21678)
!21683 = !DILocation(line: 2968, column: 12, scope: !21684)
!21684 = distinct !DILexicalBlock(scope: !21678, file: !3, line: 2968, column: 11)
!21685 = !DILocation(line: 2968, column: 16, scope: !21684)
!21686 = !DILocation(line: 2968, column: 22, scope: !21684)
!21687 = !DILocation(line: 2968, column: 26, scope: !21684)
!21688 = !DILocation(line: 2968, column: 31, scope: !21684)
!21689 = !DILocation(line: 2968, column: 11, scope: !21678)
!21690 = !DILocation(line: 2968, column: 46, scope: !21684)
!21691 = !DILocation(line: 2968, column: 38, scope: !21684)
!21692 = !DILocation(line: 2969, column: 6, scope: !21678)
!21693 = !DILocation(line: 2970, column: 5, scope: !21667)
!21694 = !DILocation(line: 2972, column: 14, scope: !21695)
!21695 = distinct !DILexicalBlock(scope: !21652, file: !3, line: 2971, column: 10)
!21696 = !DILocation(line: 2972, column: 11, scope: !21695)
!21697 = !DILocation(line: 2973, column: 14, scope: !21695)
!21698 = !DILocation(line: 2976, column: 14, scope: !21644)
!21699 = !DILocation(line: 2976, column: 21, scope: !21644)
!21700 = !DILocation(line: 2976, column: 32, scope: !21644)
!21701 = !DILocation(line: 2976, column: 28, scope: !21644)
!21702 = !DILocation(line: 2976, column: 26, scope: !21644)
!21703 = !DILocation(line: 2976, column: 19, scope: !21644)
!21704 = !DILocation(line: 2976, column: 10, scope: !21644)
!21705 = distinct !{!21705, !21640, !21706}
!21706 = !DILocation(line: 2977, column: 4, scope: !21624)
!21707 = !DILocation(line: 2978, column: 3, scope: !21624)
!21708 = !DILocation(line: 2980, column: 8, scope: !21709)
!21709 = distinct !DILexicalBlock(scope: !21619, file: !3, line: 2979, column: 8)
!21710 = !DILocation(line: 2980, column: 12, scope: !21709)
!21711 = !DILocation(line: 2980, column: 20, scope: !21709)
!21712 = !DILocation(line: 2980, column: 24, scope: !21709)
!21713 = !DILocation(line: 2980, column: 18, scope: !21709)
!21714 = !DILocation(line: 2980, column: 6, scope: !21709)
!21715 = !DILocation(line: 2981, column: 9, scope: !21709)
!21716 = !DILocation(line: 2981, column: 13, scope: !21709)
!21717 = !DILocation(line: 2981, column: 7, scope: !21709)
!21718 = !DILocation(line: 2982, column: 8, scope: !21719)
!21719 = distinct !DILexicalBlock(scope: !21709, file: !3, line: 2982, column: 8)
!21720 = !DILocation(line: 2982, column: 13, scope: !21719)
!21721 = !DILocation(line: 2982, column: 8, scope: !21709)
!21722 = !DILocation(line: 2982, column: 24, scope: !21719)
!21723 = !DILocation(line: 2982, column: 28, scope: !21719)
!21724 = !DILocation(line: 2982, column: 31, scope: !21719)
!21725 = !DILocation(line: 2982, column: 33, scope: !21719)
!21726 = !DILocation(line: 2982, column: 21, scope: !21719)
!21727 = !DILocation(line: 2982, column: 18, scope: !21719)
!21728 = !DILocation(line: 2983, column: 4, scope: !21709)
!21729 = !DILocation(line: 2983, column: 12, scope: !21709)
!21730 = !DILocation(line: 2984, column: 9, scope: !21731)
!21731 = distinct !DILexicalBlock(scope: !21732, file: !3, line: 2984, column: 9)
!21732 = distinct !DILexicalBlock(scope: !21709, file: !3, line: 2983, column: 16)
!21733 = !DILocation(line: 2984, column: 17, scope: !21731)
!21734 = !DILocation(line: 2984, column: 13, scope: !21731)
!21735 = !DILocation(line: 2984, column: 11, scope: !21731)
!21736 = !DILocation(line: 2984, column: 23, scope: !21731)
!21737 = !DILocation(line: 2984, column: 9, scope: !21732)
!21738 = !DILocation(line: 2984, column: 28, scope: !21731)
!21739 = !DILocation(line: 2985, column: 10, scope: !21740)
!21740 = distinct !DILexicalBlock(scope: !21732, file: !3, line: 2985, column: 9)
!21741 = !DILocation(line: 2985, column: 18, scope: !21740)
!21742 = !DILocation(line: 2985, column: 24, scope: !21740)
!21743 = !DILocation(line: 2985, column: 28, scope: !21740)
!21744 = !DILocation(line: 2985, column: 32, scope: !21740)
!21745 = !DILocation(line: 2985, column: 37, scope: !21740)
!21746 = !DILocation(line: 2985, column: 43, scope: !21740)
!21747 = !DILocation(line: 2985, column: 48, scope: !21740)
!21748 = !DILocation(line: 2985, column: 52, scope: !21740)
!21749 = !DILocation(line: 2985, column: 55, scope: !21740)
!21750 = !DILocation(line: 2985, column: 65, scope: !21740)
!21751 = !DILocation(line: 2985, column: 69, scope: !21740)
!21752 = !DILocation(line: 2985, column: 79, scope: !21740)
!21753 = !DILocation(line: 2985, column: 9, scope: !21732)
!21754 = !DILocation(line: 2986, column: 12, scope: !21755)
!21755 = distinct !DILexicalBlock(scope: !21740, file: !3, line: 2985, column: 94)
!21756 = !DILocation(line: 2986, column: 9, scope: !21755)
!21757 = !DILocation(line: 2987, column: 12, scope: !21758)
!21758 = distinct !DILexicalBlock(scope: !21755, file: !3, line: 2987, column: 10)
!21759 = !DILocation(line: 2987, column: 16, scope: !21758)
!21760 = !DILocation(line: 2987, column: 19, scope: !21758)
!21761 = !DILocation(line: 2987, column: 29, scope: !21758)
!21762 = !DILocation(line: 2987, column: 33, scope: !21758)
!21763 = !DILocation(line: 2987, column: 43, scope: !21758)
!21764 = !DILocation(line: 2987, column: 10, scope: !21755)
!21765 = !DILocalVariable(name: "sel", scope: !21766, file: !3, line: 2988, type: !48)
!21766 = distinct !DILexicalBlock(scope: !21758, file: !3, line: 2987, column: 57)
!21767 = !DILocation(line: 2988, column: 13, scope: !21766)
!21768 = !DILocation(line: 2988, column: 33, scope: !21766)
!21769 = !DILocation(line: 2988, column: 37, scope: !21766)
!21770 = !DILocation(line: 2988, column: 19, scope: !21766)
!21771 = !DILocation(line: 2989, column: 12, scope: !21772)
!21772 = distinct !DILexicalBlock(scope: !21766, file: !3, line: 2989, column: 11)
!21773 = !DILocation(line: 2989, column: 16, scope: !21772)
!21774 = !DILocation(line: 2989, column: 22, scope: !21772)
!21775 = !DILocation(line: 2989, column: 26, scope: !21772)
!21776 = !DILocation(line: 2989, column: 31, scope: !21772)
!21777 = !DILocation(line: 2989, column: 11, scope: !21766)
!21778 = !DILocation(line: 2989, column: 46, scope: !21772)
!21779 = !DILocation(line: 2989, column: 38, scope: !21772)
!21780 = !DILocation(line: 2990, column: 6, scope: !21766)
!21781 = !DILocation(line: 2991, column: 5, scope: !21755)
!21782 = !DILocation(line: 2993, column: 12, scope: !21783)
!21783 = distinct !DILexicalBlock(scope: !21740, file: !3, line: 2992, column: 10)
!21784 = !DILocation(line: 2993, column: 9, scope: !21783)
!21785 = !DILocation(line: 2994, column: 14, scope: !21783)
!21786 = !DILocation(line: 2997, column: 12, scope: !21732)
!21787 = !DILocation(line: 2997, column: 19, scope: !21732)
!21788 = !DILocation(line: 2997, column: 30, scope: !21732)
!21789 = !DILocation(line: 2997, column: 26, scope: !21732)
!21790 = !DILocation(line: 2997, column: 24, scope: !21732)
!21791 = !DILocation(line: 2997, column: 17, scope: !21732)
!21792 = !DILocation(line: 2997, column: 8, scope: !21732)
!21793 = distinct !{!21793, !21728, !21794}
!21794 = !DILocation(line: 2998, column: 4, scope: !21709)
!21795 = !DILocation(line: 3000, column: 2, scope: !21617)
!21796 = !DILocation(line: 2956, column: 38, scope: !21614)
!21797 = !DILocation(line: 2956, column: 42, scope: !21614)
!21798 = !DILocation(line: 2956, column: 36, scope: !21614)
!21799 = !DILocation(line: 2956, column: 2, scope: !21614)
!21800 = distinct !{!21800, !21615, !21801}
!21801 = !DILocation(line: 3000, column: 2, scope: !21609)
!21802 = !DILocation(line: 3001, column: 1, scope: !21582)
!21803 = distinct !DISubprogram(name: "curve_select_random", scope: !3, file: !3, line: 5951, type: !21804, scopeLine: 5952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!21804 = !DISubroutineType(types: !21805)
!21805 = !{null, !486, !204, !1081}
!21806 = !DILocalVariable(name: "editnurb", arg: 1, scope: !21803, file: !3, line: 5951, type: !486)
!21807 = !DILocation(line: 5951, column: 43, scope: !21803)
!21808 = !DILocalVariable(name: "randfac", arg: 2, scope: !21803, file: !3, line: 5951, type: !204)
!21809 = !DILocation(line: 5951, column: 59, scope: !21803)
!21810 = !DILocalVariable(name: "select", arg: 3, scope: !21803, file: !3, line: 5951, type: !1081)
!21811 = !DILocation(line: 5951, column: 73, scope: !21803)
!21812 = !DILocalVariable(name: "nu", scope: !21803, file: !3, line: 5953, type: !3163)
!21813 = !DILocation(line: 5953, column: 8, scope: !21803)
!21814 = !DILocalVariable(name: "bezt", scope: !21803, file: !3, line: 5954, type: !3104)
!21815 = !DILocation(line: 5954, column: 13, scope: !21803)
!21816 = !DILocalVariable(name: "bp", scope: !21803, file: !3, line: 5955, type: !3093)
!21817 = !DILocation(line: 5955, column: 10, scope: !21803)
!21818 = !DILocalVariable(name: "a", scope: !21803, file: !3, line: 5956, type: !22)
!21819 = !DILocation(line: 5956, column: 6, scope: !21803)
!21820 = !DILocation(line: 5958, column: 12, scope: !21821)
!21821 = distinct !DILexicalBlock(scope: !21803, file: !3, line: 5958, column: 2)
!21822 = !DILocation(line: 5958, column: 22, scope: !21821)
!21823 = !DILocation(line: 5958, column: 10, scope: !21821)
!21824 = !DILocation(line: 5958, column: 7, scope: !21821)
!21825 = !DILocation(line: 5958, column: 29, scope: !21826)
!21826 = distinct !DILexicalBlock(scope: !21821, file: !3, line: 5958, column: 2)
!21827 = !DILocation(line: 5958, column: 2, scope: !21821)
!21828 = !DILocation(line: 5959, column: 7, scope: !21829)
!21829 = distinct !DILexicalBlock(scope: !21830, file: !3, line: 5959, column: 7)
!21830 = distinct !DILexicalBlock(scope: !21826, file: !3, line: 5958, column: 48)
!21831 = !DILocation(line: 5959, column: 11, scope: !21829)
!21832 = !DILocation(line: 5959, column: 16, scope: !21829)
!21833 = !DILocation(line: 5959, column: 7, scope: !21830)
!21834 = !DILocation(line: 5960, column: 11, scope: !21835)
!21835 = distinct !DILexicalBlock(scope: !21829, file: !3, line: 5959, column: 30)
!21836 = !DILocation(line: 5960, column: 15, scope: !21835)
!21837 = !DILocation(line: 5960, column: 9, scope: !21835)
!21838 = !DILocation(line: 5961, column: 8, scope: !21835)
!21839 = !DILocation(line: 5961, column: 12, scope: !21835)
!21840 = !DILocation(line: 5961, column: 6, scope: !21835)
!21841 = !DILocation(line: 5962, column: 4, scope: !21835)
!21842 = !DILocation(line: 5962, column: 12, scope: !21835)
!21843 = !DILocation(line: 5963, column: 10, scope: !21844)
!21844 = distinct !DILexicalBlock(scope: !21845, file: !3, line: 5963, column: 9)
!21845 = distinct !DILexicalBlock(scope: !21835, file: !3, line: 5962, column: 16)
!21846 = !DILocation(line: 5963, column: 16, scope: !21844)
!21847 = !DILocation(line: 5963, column: 9, scope: !21845)
!21848 = !DILocation(line: 5964, column: 10, scope: !21849)
!21849 = distinct !DILexicalBlock(scope: !21850, file: !3, line: 5964, column: 10)
!21850 = distinct !DILexicalBlock(scope: !21844, file: !3, line: 5963, column: 22)
!21851 = !DILocation(line: 5964, column: 24, scope: !21849)
!21852 = !DILocation(line: 5964, column: 22, scope: !21849)
!21853 = !DILocation(line: 5964, column: 10, scope: !21850)
!21854 = !DILocation(line: 5965, column: 24, scope: !21855)
!21855 = distinct !DILexicalBlock(scope: !21849, file: !3, line: 5964, column: 33)
!21856 = !DILocation(line: 5965, column: 30, scope: !21855)
!21857 = !DILocation(line: 5965, column: 7, scope: !21855)
!21858 = !DILocation(line: 5966, column: 6, scope: !21855)
!21859 = !DILocation(line: 5967, column: 5, scope: !21850)
!21860 = !DILocation(line: 5968, column: 9, scope: !21845)
!21861 = distinct !{!21861, !21841, !21862}
!21862 = !DILocation(line: 5969, column: 4, scope: !21835)
!21863 = !DILocation(line: 5970, column: 3, scope: !21835)
!21864 = !DILocation(line: 5972, column: 9, scope: !21865)
!21865 = distinct !DILexicalBlock(scope: !21829, file: !3, line: 5971, column: 8)
!21866 = !DILocation(line: 5972, column: 13, scope: !21865)
!21867 = !DILocation(line: 5972, column: 7, scope: !21865)
!21868 = !DILocation(line: 5973, column: 8, scope: !21865)
!21869 = !DILocation(line: 5973, column: 12, scope: !21865)
!21870 = !DILocation(line: 5973, column: 20, scope: !21865)
!21871 = !DILocation(line: 5973, column: 24, scope: !21865)
!21872 = !DILocation(line: 5973, column: 18, scope: !21865)
!21873 = !DILocation(line: 5973, column: 6, scope: !21865)
!21874 = !DILocation(line: 5975, column: 4, scope: !21865)
!21875 = !DILocation(line: 5975, column: 12, scope: !21865)
!21876 = !DILocation(line: 5976, column: 10, scope: !21877)
!21877 = distinct !DILexicalBlock(scope: !21878, file: !3, line: 5976, column: 9)
!21878 = distinct !DILexicalBlock(scope: !21865, file: !3, line: 5975, column: 16)
!21879 = !DILocation(line: 5976, column: 14, scope: !21877)
!21880 = !DILocation(line: 5976, column: 9, scope: !21878)
!21881 = !DILocation(line: 5977, column: 10, scope: !21882)
!21882 = distinct !DILexicalBlock(scope: !21883, file: !3, line: 5977, column: 10)
!21883 = distinct !DILexicalBlock(scope: !21877, file: !3, line: 5976, column: 20)
!21884 = !DILocation(line: 5977, column: 24, scope: !21882)
!21885 = !DILocation(line: 5977, column: 22, scope: !21882)
!21886 = !DILocation(line: 5977, column: 10, scope: !21883)
!21887 = !DILocation(line: 5978, column: 21, scope: !21888)
!21888 = distinct !DILexicalBlock(scope: !21882, file: !3, line: 5977, column: 33)
!21889 = !DILocation(line: 5978, column: 25, scope: !21888)
!21890 = !DILocation(line: 5978, column: 7, scope: !21888)
!21891 = !DILocation(line: 5979, column: 6, scope: !21888)
!21892 = !DILocation(line: 5980, column: 5, scope: !21883)
!21893 = !DILocation(line: 5981, column: 7, scope: !21878)
!21894 = distinct !{!21894, !21874, !21895}
!21895 = !DILocation(line: 5982, column: 4, scope: !21865)
!21896 = !DILocation(line: 5984, column: 2, scope: !21830)
!21897 = !DILocation(line: 5958, column: 38, scope: !21826)
!21898 = !DILocation(line: 5958, column: 42, scope: !21826)
!21899 = !DILocation(line: 5958, column: 36, scope: !21826)
!21900 = !DILocation(line: 5958, column: 2, scope: !21826)
!21901 = distinct !{!21901, !21827, !21902}
!21902 = !DILocation(line: 5984, column: 2, scope: !21821)
!21903 = !DILocation(line: 5985, column: 1, scope: !21803)
!21904 = distinct !DISubprogram(name: "curve_delete_vertices", scope: !3, file: !3, line: 6163, type: !21905, scopeLine: 6164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!21905 = !DISubroutineType(types: !21906)
!21906 = !{!22, !3242}
!21907 = !DILocalVariable(name: "obedit", arg: 1, scope: !21904, file: !3, line: 6163, type: !3242)
!21908 = !DILocation(line: 6163, column: 42, scope: !21904)
!21909 = !DILocation(line: 6165, column: 6, scope: !21910)
!21910 = distinct !DILexicalBlock(scope: !21904, file: !3, line: 6165, column: 6)
!21911 = !DILocation(line: 6165, column: 14, scope: !21910)
!21912 = !DILocation(line: 6165, column: 19, scope: !21910)
!21913 = !DILocation(line: 6165, column: 6, scope: !21904)
!21914 = !DILocation(line: 6166, column: 27, scope: !21915)
!21915 = distinct !DILexicalBlock(scope: !21910, file: !3, line: 6165, column: 31)
!21916 = !DILocation(line: 6166, column: 3, scope: !21915)
!21917 = !DILocation(line: 6167, column: 2, scope: !21915)
!21918 = !DILocation(line: 6169, column: 28, scope: !21919)
!21919 = distinct !DILexicalBlock(scope: !21910, file: !3, line: 6168, column: 7)
!21920 = !DILocation(line: 6169, column: 3, scope: !21919)
!21921 = !DILocation(line: 6172, column: 2, scope: !21904)
!21922 = distinct !DISubprogram(name: "ed_surf_delete_selected", scope: !3, file: !3, line: 1777, type: !3331, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!21923 = !DILocalVariable(name: "obedit", arg: 1, scope: !21922, file: !3, line: 1777, type: !3242)
!21924 = !DILocation(line: 1777, column: 45, scope: !21922)
!21925 = !DILocalVariable(name: "cu", scope: !21922, file: !3, line: 1779, type: !2953)
!21926 = !DILocation(line: 1779, column: 9, scope: !21922)
!21927 = !DILocation(line: 1779, column: 14, scope: !21922)
!21928 = !DILocation(line: 1779, column: 22, scope: !21922)
!21929 = !DILocalVariable(name: "editnurb", scope: !21922, file: !3, line: 1780, type: !486)
!21930 = !DILocation(line: 1780, column: 12, scope: !21922)
!21931 = !DILocation(line: 1780, column: 44, scope: !21922)
!21932 = !DILocation(line: 1780, column: 23, scope: !21922)
!21933 = !DILocalVariable(name: "nu", scope: !21922, file: !3, line: 1781, type: !3163)
!21934 = !DILocation(line: 1781, column: 8, scope: !21922)
!21935 = !DILocalVariable(name: "next", scope: !21922, file: !3, line: 1781, type: !3163)
!21936 = !DILocation(line: 1781, column: 13, scope: !21922)
!21937 = !DILocalVariable(name: "bp", scope: !21922, file: !3, line: 1782, type: !3093)
!21938 = !DILocation(line: 1782, column: 10, scope: !21922)
!21939 = !DILocalVariable(name: "bpn", scope: !21922, file: !3, line: 1782, type: !3093)
!21940 = !DILocation(line: 1782, column: 15, scope: !21922)
!21941 = !DILocalVariable(name: "newbp", scope: !21922, file: !3, line: 1782, type: !3093)
!21942 = !DILocation(line: 1782, column: 21, scope: !21922)
!21943 = !DILocalVariable(name: "a", scope: !21922, file: !3, line: 1783, type: !22)
!21944 = !DILocation(line: 1783, column: 6, scope: !21922)
!21945 = !DILocalVariable(name: "b", scope: !21922, file: !3, line: 1783, type: !22)
!21946 = !DILocation(line: 1783, column: 9, scope: !21922)
!21947 = !DILocalVariable(name: "newu", scope: !21922, file: !3, line: 1783, type: !22)
!21948 = !DILocation(line: 1783, column: 12, scope: !21922)
!21949 = !DILocalVariable(name: "newv", scope: !21922, file: !3, line: 1783, type: !22)
!21950 = !DILocation(line: 1783, column: 18, scope: !21922)
!21951 = !DILocation(line: 1787, column: 7, scope: !21922)
!21952 = !DILocation(line: 1787, column: 17, scope: !21922)
!21953 = !DILocation(line: 1787, column: 5, scope: !21922)
!21954 = !DILocation(line: 1788, column: 2, scope: !21922)
!21955 = !DILocation(line: 1788, column: 9, scope: !21922)
!21956 = !DILocation(line: 1789, column: 10, scope: !21957)
!21957 = distinct !DILexicalBlock(scope: !21922, file: !3, line: 1788, column: 13)
!21958 = !DILocation(line: 1789, column: 14, scope: !21957)
!21959 = !DILocation(line: 1789, column: 8, scope: !21957)
!21960 = !DILocation(line: 1792, column: 8, scope: !21957)
!21961 = !DILocation(line: 1792, column: 12, scope: !21957)
!21962 = !DILocation(line: 1792, column: 6, scope: !21957)
!21963 = !DILocation(line: 1793, column: 7, scope: !21957)
!21964 = !DILocation(line: 1793, column: 11, scope: !21957)
!21965 = !DILocation(line: 1793, column: 19, scope: !21957)
!21966 = !DILocation(line: 1793, column: 23, scope: !21957)
!21967 = !DILocation(line: 1793, column: 17, scope: !21957)
!21968 = !DILocation(line: 1793, column: 5, scope: !21957)
!21969 = !DILocation(line: 1794, column: 3, scope: !21957)
!21970 = !DILocation(line: 1794, column: 10, scope: !21957)
!21971 = !DILocation(line: 1795, column: 5, scope: !21972)
!21972 = distinct !DILexicalBlock(scope: !21957, file: !3, line: 1794, column: 13)
!21973 = !DILocation(line: 1796, column: 8, scope: !21974)
!21974 = distinct !DILexicalBlock(scope: !21972, file: !3, line: 1796, column: 8)
!21975 = !DILocation(line: 1796, column: 12, scope: !21974)
!21976 = !DILocation(line: 1796, column: 15, scope: !21974)
!21977 = !DILocation(line: 1796, column: 8, scope: !21972)
!21978 = !DILocation(line: 1798, column: 4, scope: !21979)
!21979 = distinct !DILexicalBlock(scope: !21974, file: !3, line: 1796, column: 25)
!21980 = !DILocation(line: 1800, column: 5, scope: !21981)
!21981 = distinct !DILexicalBlock(scope: !21974, file: !3, line: 1799, column: 9)
!21982 = !DILocation(line: 1802, column: 6, scope: !21972)
!21983 = distinct !{!21983, !21969, !21984}
!21984 = !DILocation(line: 1803, column: 3, scope: !21957)
!21985 = !DILocation(line: 1804, column: 7, scope: !21986)
!21986 = distinct !DILexicalBlock(scope: !21957, file: !3, line: 1804, column: 7)
!21987 = !DILocation(line: 1804, column: 9, scope: !21986)
!21988 = !DILocation(line: 1804, column: 7, scope: !21957)
!21989 = !DILocation(line: 1805, column: 16, scope: !21990)
!21990 = distinct !DILexicalBlock(scope: !21986, file: !3, line: 1804, column: 15)
!21991 = !DILocation(line: 1805, column: 26, scope: !21990)
!21992 = !DILocation(line: 1805, column: 4, scope: !21990)
!21993 = !DILocation(line: 1806, column: 21, scope: !21990)
!21994 = !DILocation(line: 1806, column: 25, scope: !21990)
!21995 = !DILocation(line: 1806, column: 35, scope: !21990)
!21996 = !DILocation(line: 1806, column: 4, scope: !21990)
!21997 = !DILocation(line: 1807, column: 18, scope: !21990)
!21998 = !DILocation(line: 1807, column: 4, scope: !21990)
!21999 = !DILocation(line: 1807, column: 26, scope: !21990)
!22000 = !DILocation(line: 1808, column: 3, scope: !21990)
!22001 = !DILocation(line: 1810, column: 19, scope: !22002)
!22002 = distinct !DILexicalBlock(scope: !22003, file: !3, line: 1810, column: 8)
!22003 = distinct !DILexicalBlock(scope: !21986, file: !3, line: 1809, column: 8)
!22004 = !DILocation(line: 1810, column: 8, scope: !22002)
!22005 = !DILocation(line: 1810, column: 8, scope: !22003)
!22006 = !DILocation(line: 1812, column: 12, scope: !22007)
!22007 = distinct !DILexicalBlock(scope: !22002, file: !3, line: 1810, column: 39)
!22008 = !DILocation(line: 1812, column: 16, scope: !22007)
!22009 = !DILocation(line: 1812, column: 24, scope: !22007)
!22010 = !DILocation(line: 1812, column: 22, scope: !22007)
!22011 = !DILocation(line: 1812, column: 10, scope: !22007)
!22012 = !DILocation(line: 1813, column: 9, scope: !22013)
!22013 = distinct !DILexicalBlock(scope: !22007, file: !3, line: 1813, column: 9)
!22014 = !DILocation(line: 1813, column: 17, scope: !22013)
!22015 = !DILocation(line: 1813, column: 21, scope: !22013)
!22016 = !DILocation(line: 1813, column: 14, scope: !22013)
!22017 = !DILocation(line: 1813, column: 9, scope: !22007)
!22018 = !DILocation(line: 1815, column: 11, scope: !22019)
!22019 = distinct !DILexicalBlock(scope: !22013, file: !3, line: 1813, column: 28)
!22020 = !DILocation(line: 1815, column: 15, scope: !22019)
!22021 = !DILocation(line: 1815, column: 9, scope: !22019)
!22022 = !DILocation(line: 1816, column: 30, scope: !22019)
!22023 = !DILocation(line: 1816, column: 42, scope: !22019)
!22024 = !DILocation(line: 1816, column: 49, scope: !22019)
!22025 = !DILocation(line: 1816, column: 53, scope: !22019)
!22026 = !DILocation(line: 1816, column: 47, scope: !22019)
!22027 = !DILocation(line: 1816, column: 59, scope: !22019)
!22028 = !DILocation(line: 1816, column: 20, scope: !22019)
!22029 = !DILocation(line: 1816, column: 18, scope: !22019)
!22030 = !DILocation(line: 1816, column: 10, scope: !22019)
!22031 = !DILocation(line: 1817, column: 13, scope: !22032)
!22032 = distinct !DILexicalBlock(scope: !22019, file: !3, line: 1817, column: 6)
!22033 = !DILocation(line: 1817, column: 11, scope: !22032)
!22034 = !DILocation(line: 1817, column: 18, scope: !22035)
!22035 = distinct !DILexicalBlock(scope: !22032, file: !3, line: 1817, column: 6)
!22036 = !DILocation(line: 1817, column: 22, scope: !22035)
!22037 = !DILocation(line: 1817, column: 26, scope: !22035)
!22038 = !DILocation(line: 1817, column: 20, scope: !22035)
!22039 = !DILocation(line: 1817, column: 6, scope: !22032)
!22040 = !DILocation(line: 1818, column: 12, scope: !22041)
!22041 = distinct !DILexicalBlock(scope: !22042, file: !3, line: 1818, column: 11)
!22042 = distinct !DILexicalBlock(scope: !22035, file: !3, line: 1817, column: 38)
!22043 = !DILocation(line: 1818, column: 16, scope: !22041)
!22044 = !DILocation(line: 1818, column: 19, scope: !22041)
!22045 = !DILocation(line: 1818, column: 29, scope: !22041)
!22046 = !DILocation(line: 1818, column: 11, scope: !22042)
!22047 = !DILocation(line: 1819, column: 15, scope: !22048)
!22048 = distinct !DILexicalBlock(scope: !22041, file: !3, line: 1818, column: 35)
!22049 = !DILocation(line: 1819, column: 8, scope: !22048)
!22050 = !DILocation(line: 1819, column: 20, scope: !22048)
!22051 = !DILocation(line: 1819, column: 24, scope: !22048)
!22052 = !DILocation(line: 1819, column: 28, scope: !22048)
!22053 = !DILocation(line: 1819, column: 34, scope: !22048)
!22054 = !DILocation(line: 1820, column: 26, scope: !22048)
!22055 = !DILocation(line: 1820, column: 30, scope: !22048)
!22056 = !DILocation(line: 1820, column: 40, scope: !22048)
!22057 = !DILocation(line: 1820, column: 44, scope: !22048)
!22058 = !DILocation(line: 1820, column: 49, scope: !22048)
!22059 = !DILocation(line: 1820, column: 53, scope: !22048)
!22060 = !DILocation(line: 1820, column: 8, scope: !22048)
!22061 = !DILocation(line: 1821, column: 15, scope: !22048)
!22062 = !DILocation(line: 1821, column: 19, scope: !22048)
!22063 = !DILocation(line: 1821, column: 12, scope: !22048)
!22064 = !DILocation(line: 1822, column: 7, scope: !22048)
!22065 = !DILocation(line: 1824, column: 23, scope: !22066)
!22066 = distinct !DILexicalBlock(scope: !22041, file: !3, line: 1823, column: 12)
!22067 = !DILocation(line: 1824, column: 27, scope: !22066)
!22068 = !DILocation(line: 1824, column: 37, scope: !22066)
!22069 = !DILocation(line: 1824, column: 8, scope: !22066)
!22070 = !DILocation(line: 1826, column: 13, scope: !22042)
!22071 = !DILocation(line: 1826, column: 17, scope: !22042)
!22072 = !DILocation(line: 1826, column: 10, scope: !22042)
!22073 = !DILocation(line: 1827, column: 6, scope: !22042)
!22074 = !DILocation(line: 1817, column: 34, scope: !22035)
!22075 = !DILocation(line: 1817, column: 6, scope: !22035)
!22076 = distinct !{!22076, !22039, !22077}
!22077 = !DILocation(line: 1827, column: 6, scope: !22032)
!22078 = !DILocation(line: 1828, column: 18, scope: !22019)
!22079 = !DILocation(line: 1828, column: 6, scope: !22019)
!22080 = !DILocation(line: 1828, column: 10, scope: !22019)
!22081 = !DILocation(line: 1828, column: 16, scope: !22019)
!22082 = !DILocation(line: 1829, column: 6, scope: !22019)
!22083 = !DILocation(line: 1829, column: 16, scope: !22019)
!22084 = !DILocation(line: 1829, column: 20, scope: !22019)
!22085 = !DILocation(line: 1830, column: 15, scope: !22019)
!22086 = !DILocation(line: 1830, column: 6, scope: !22019)
!22087 = !DILocation(line: 1830, column: 10, scope: !22019)
!22088 = !DILocation(line: 1830, column: 13, scope: !22019)
!22089 = !DILocation(line: 1831, column: 29, scope: !22019)
!22090 = !DILocation(line: 1831, column: 6, scope: !22019)
!22091 = !DILocation(line: 1833, column: 27, scope: !22019)
!22092 = !DILocation(line: 1833, column: 6, scope: !22019)
!22093 = !DILocation(line: 1834, column: 5, scope: !22019)
!22094 = !DILocation(line: 1835, column: 4, scope: !22007)
!22095 = !DILocation(line: 1836, column: 24, scope: !22096)
!22096 = distinct !DILexicalBlock(scope: !22002, file: !3, line: 1836, column: 13)
!22097 = !DILocation(line: 1836, column: 13, scope: !22096)
!22098 = !DILocation(line: 1836, column: 13, scope: !22002)
!22099 = !DILocation(line: 1838, column: 12, scope: !22100)
!22100 = distinct !DILexicalBlock(scope: !22096, file: !3, line: 1836, column: 44)
!22101 = !DILocation(line: 1838, column: 16, scope: !22100)
!22102 = !DILocation(line: 1838, column: 24, scope: !22100)
!22103 = !DILocation(line: 1838, column: 22, scope: !22100)
!22104 = !DILocation(line: 1838, column: 10, scope: !22100)
!22105 = !DILocation(line: 1839, column: 9, scope: !22106)
!22106 = distinct !DILexicalBlock(scope: !22100, file: !3, line: 1839, column: 9)
!22107 = !DILocation(line: 1839, column: 17, scope: !22106)
!22108 = !DILocation(line: 1839, column: 21, scope: !22106)
!22109 = !DILocation(line: 1839, column: 14, scope: !22106)
!22110 = !DILocation(line: 1839, column: 9, scope: !22100)
!22111 = !DILocation(line: 1841, column: 11, scope: !22112)
!22112 = distinct !DILexicalBlock(scope: !22106, file: !3, line: 1839, column: 28)
!22113 = !DILocation(line: 1841, column: 15, scope: !22112)
!22114 = !DILocation(line: 1841, column: 9, scope: !22112)
!22115 = !DILocation(line: 1842, column: 30, scope: !22112)
!22116 = !DILocation(line: 1842, column: 42, scope: !22112)
!22117 = !DILocation(line: 1842, column: 49, scope: !22112)
!22118 = !DILocation(line: 1842, column: 53, scope: !22112)
!22119 = !DILocation(line: 1842, column: 47, scope: !22112)
!22120 = !DILocation(line: 1842, column: 59, scope: !22112)
!22121 = !DILocation(line: 1842, column: 20, scope: !22112)
!22122 = !DILocation(line: 1842, column: 18, scope: !22112)
!22123 = !DILocation(line: 1842, column: 10, scope: !22112)
!22124 = !DILocation(line: 1843, column: 13, scope: !22125)
!22125 = distinct !DILexicalBlock(scope: !22112, file: !3, line: 1843, column: 6)
!22126 = !DILocation(line: 1843, column: 11, scope: !22125)
!22127 = !DILocation(line: 1843, column: 18, scope: !22128)
!22128 = distinct !DILexicalBlock(scope: !22125, file: !3, line: 1843, column: 6)
!22129 = !DILocation(line: 1843, column: 22, scope: !22128)
!22130 = !DILocation(line: 1843, column: 26, scope: !22128)
!22131 = !DILocation(line: 1843, column: 20, scope: !22128)
!22132 = !DILocation(line: 1843, column: 6, scope: !22125)
!22133 = !DILocation(line: 1844, column: 14, scope: !22134)
!22134 = distinct !DILexicalBlock(scope: !22135, file: !3, line: 1844, column: 7)
!22135 = distinct !DILexicalBlock(scope: !22128, file: !3, line: 1843, column: 38)
!22136 = !DILocation(line: 1844, column: 12, scope: !22134)
!22137 = !DILocation(line: 1844, column: 19, scope: !22138)
!22138 = distinct !DILexicalBlock(scope: !22134, file: !3, line: 1844, column: 7)
!22139 = !DILocation(line: 1844, column: 23, scope: !22138)
!22140 = !DILocation(line: 1844, column: 27, scope: !22138)
!22141 = !DILocation(line: 1844, column: 21, scope: !22138)
!22142 = !DILocation(line: 1844, column: 7, scope: !22134)
!22143 = !DILocation(line: 1845, column: 13, scope: !22144)
!22144 = distinct !DILexicalBlock(scope: !22145, file: !3, line: 1845, column: 12)
!22145 = distinct !DILexicalBlock(scope: !22138, file: !3, line: 1844, column: 45)
!22146 = !DILocation(line: 1845, column: 17, scope: !22144)
!22147 = !DILocation(line: 1845, column: 20, scope: !22144)
!22148 = !DILocation(line: 1845, column: 30, scope: !22144)
!22149 = !DILocation(line: 1845, column: 12, scope: !22145)
!22150 = !DILocation(line: 1846, column: 10, scope: !22151)
!22151 = distinct !DILexicalBlock(scope: !22144, file: !3, line: 1845, column: 36)
!22152 = !DILocation(line: 1846, column: 17, scope: !22151)
!22153 = !DILocation(line: 1846, column: 16, scope: !22151)
!22154 = !DILocation(line: 1847, column: 27, scope: !22151)
!22155 = !DILocation(line: 1847, column: 31, scope: !22151)
!22156 = !DILocation(line: 1847, column: 41, scope: !22151)
!22157 = !DILocation(line: 1847, column: 45, scope: !22151)
!22158 = !DILocation(line: 1847, column: 9, scope: !22151)
!22159 = !DILocation(line: 1848, column: 12, scope: !22151)
!22160 = !DILocation(line: 1849, column: 8, scope: !22151)
!22161 = !DILocation(line: 1851, column: 24, scope: !22162)
!22162 = distinct !DILexicalBlock(scope: !22144, file: !3, line: 1850, column: 13)
!22163 = !DILocation(line: 1851, column: 28, scope: !22162)
!22164 = !DILocation(line: 1851, column: 38, scope: !22162)
!22165 = !DILocation(line: 1851, column: 9, scope: !22162)
!22166 = !DILocation(line: 1853, column: 7, scope: !22145)
!22167 = !DILocation(line: 1844, column: 35, scope: !22138)
!22168 = !DILocation(line: 1844, column: 41, scope: !22138)
!22169 = !DILocation(line: 1844, column: 7, scope: !22138)
!22170 = distinct !{!22170, !22142, !22171}
!22171 = !DILocation(line: 1853, column: 7, scope: !22134)
!22172 = !DILocation(line: 1854, column: 6, scope: !22135)
!22173 = !DILocation(line: 1843, column: 34, scope: !22128)
!22174 = !DILocation(line: 1843, column: 6, scope: !22128)
!22175 = distinct !{!22175, !22132, !22176}
!22176 = !DILocation(line: 1854, column: 6, scope: !22125)
!22177 = !DILocation(line: 1855, column: 6, scope: !22112)
!22178 = !DILocation(line: 1855, column: 16, scope: !22112)
!22179 = !DILocation(line: 1855, column: 20, scope: !22112)
!22180 = !DILocation(line: 1856, column: 15, scope: !22112)
!22181 = !DILocation(line: 1856, column: 6, scope: !22112)
!22182 = !DILocation(line: 1856, column: 10, scope: !22112)
!22183 = !DILocation(line: 1856, column: 13, scope: !22112)
!22184 = !DILocation(line: 1857, column: 10, scope: !22185)
!22185 = distinct !DILexicalBlock(scope: !22112, file: !3, line: 1857, column: 10)
!22186 = !DILocation(line: 1857, column: 15, scope: !22185)
!22187 = !DILocation(line: 1857, column: 20, scope: !22185)
!22188 = !DILocation(line: 1857, column: 23, scope: !22185)
!22189 = !DILocation(line: 1857, column: 27, scope: !22185)
!22190 = !DILocation(line: 1857, column: 33, scope: !22185)
!22191 = !DILocation(line: 1857, column: 10, scope: !22112)
!22192 = !DILocation(line: 1858, column: 19, scope: !22193)
!22193 = distinct !DILexicalBlock(scope: !22185, file: !3, line: 1857, column: 38)
!22194 = !DILocation(line: 1858, column: 23, scope: !22193)
!22195 = !DILocation(line: 1858, column: 7, scope: !22193)
!22196 = !DILocation(line: 1858, column: 11, scope: !22193)
!22197 = !DILocation(line: 1858, column: 17, scope: !22193)
!22198 = !DILocation(line: 1859, column: 7, scope: !22193)
!22199 = !DILocation(line: 1859, column: 11, scope: !22193)
!22200 = !DILocation(line: 1859, column: 17, scope: !22193)
!22201 = !DILocalVariable(name: "sw_ap", scope: !22202, file: !3, line: 1860, type: !48)
!22202 = distinct !DILexicalBlock(scope: !22193, file: !3, line: 1860, column: 7)
!22203 = !DILocation(line: 1860, column: 7, scope: !22202)
!22204 = !DILocation(line: 1861, column: 30, scope: !22193)
!22205 = !DILocation(line: 1861, column: 7, scope: !22193)
!22206 = !DILocation(line: 1862, column: 11, scope: !22207)
!22207 = distinct !DILexicalBlock(scope: !22193, file: !3, line: 1862, column: 11)
!22208 = !DILocation(line: 1862, column: 15, scope: !22207)
!22209 = !DILocation(line: 1862, column: 11, scope: !22193)
!22210 = !DILocation(line: 1862, column: 23, scope: !22207)
!22211 = !DILocation(line: 1862, column: 33, scope: !22207)
!22212 = !DILocation(line: 1862, column: 37, scope: !22207)
!22213 = !DILocation(line: 1863, column: 7, scope: !22193)
!22214 = !DILocation(line: 1863, column: 11, scope: !22193)
!22215 = !DILocation(line: 1863, column: 18, scope: !22193)
!22216 = !DILocation(line: 1864, column: 6, scope: !22193)
!22217 = !DILocation(line: 1866, column: 19, scope: !22218)
!22218 = distinct !DILexicalBlock(scope: !22185, file: !3, line: 1865, column: 11)
!22219 = !DILocation(line: 1866, column: 7, scope: !22218)
!22220 = !DILocation(line: 1866, column: 11, scope: !22218)
!22221 = !DILocation(line: 1866, column: 17, scope: !22218)
!22222 = !DILocation(line: 1867, column: 30, scope: !22218)
!22223 = !DILocation(line: 1867, column: 7, scope: !22218)
!22224 = !DILocation(line: 1869, column: 27, scope: !22112)
!22225 = !DILocation(line: 1869, column: 6, scope: !22112)
!22226 = !DILocation(line: 1870, column: 5, scope: !22112)
!22227 = !DILocation(line: 1871, column: 4, scope: !22100)
!22228 = !DILocation(line: 1873, column: 8, scope: !21957)
!22229 = !DILocation(line: 1873, column: 6, scope: !21957)
!22230 = distinct !{!22230, !21954, !22231}
!22231 = !DILocation(line: 1874, column: 2, scope: !21922)
!22232 = !DILocation(line: 1875, column: 1, scope: !21922)
!22233 = distinct !DISubprogram(name: "ed_curve_delete_selected", scope: !3, file: !3, line: 1877, type: !3331, scopeLine: 1878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!22234 = !DILocalVariable(name: "obedit", arg: 1, scope: !22233, file: !3, line: 1877, type: !3242)
!22235 = !DILocation(line: 1877, column: 46, scope: !22233)
!22236 = !DILocalVariable(name: "cu", scope: !22233, file: !3, line: 1879, type: !2953)
!22237 = !DILocation(line: 1879, column: 9, scope: !22233)
!22238 = !DILocation(line: 1879, column: 14, scope: !22233)
!22239 = !DILocation(line: 1879, column: 22, scope: !22233)
!22240 = !DILocalVariable(name: "editnurb", scope: !22233, file: !3, line: 1880, type: !2962)
!22241 = !DILocation(line: 1880, column: 12, scope: !22233)
!22242 = !DILocation(line: 1880, column: 23, scope: !22233)
!22243 = !DILocation(line: 1880, column: 27, scope: !22233)
!22244 = !DILocalVariable(name: "nubase", scope: !22233, file: !3, line: 1881, type: !486)
!22245 = !DILocation(line: 1881, column: 12, scope: !22233)
!22246 = !DILocation(line: 1881, column: 22, scope: !22233)
!22247 = !DILocation(line: 1881, column: 32, scope: !22233)
!22248 = !DILocalVariable(name: "nu", scope: !22233, file: !3, line: 1882, type: !3163)
!22249 = !DILocation(line: 1882, column: 8, scope: !22233)
!22250 = !DILocalVariable(name: "next", scope: !22233, file: !3, line: 1882, type: !3163)
!22251 = !DILocation(line: 1882, column: 13, scope: !22233)
!22252 = !DILocalVariable(name: "bezt", scope: !22233, file: !3, line: 1883, type: !3104)
!22253 = !DILocation(line: 1883, column: 13, scope: !22233)
!22254 = !DILocalVariable(name: "bezt1", scope: !22233, file: !3, line: 1883, type: !3104)
!22255 = !DILocation(line: 1883, column: 20, scope: !22233)
!22256 = !DILocalVariable(name: "bp", scope: !22233, file: !3, line: 1884, type: !3093)
!22257 = !DILocation(line: 1884, column: 10, scope: !22233)
!22258 = !DILocalVariable(name: "bp1", scope: !22233, file: !3, line: 1884, type: !3093)
!22259 = !DILocation(line: 1884, column: 15, scope: !22233)
!22260 = !DILocalVariable(name: "a", scope: !22233, file: !3, line: 1885, type: !22)
!22261 = !DILocation(line: 1885, column: 6, scope: !22233)
!22262 = !DILocalVariable(name: "type", scope: !22233, file: !3, line: 1885, type: !22)
!22263 = !DILocation(line: 1885, column: 9, scope: !22233)
!22264 = !DILocalVariable(name: "nuindex", scope: !22233, file: !3, line: 1885, type: !22)
!22265 = !DILocation(line: 1885, column: 15, scope: !22233)
!22266 = !DILocation(line: 1888, column: 7, scope: !22233)
!22267 = !DILocation(line: 1888, column: 15, scope: !22233)
!22268 = !DILocation(line: 1888, column: 5, scope: !22233)
!22269 = !DILocation(line: 1889, column: 2, scope: !22233)
!22270 = !DILocation(line: 1889, column: 9, scope: !22233)
!22271 = !DILocation(line: 1890, column: 10, scope: !22272)
!22272 = distinct !DILexicalBlock(scope: !22233, file: !3, line: 1889, column: 13)
!22273 = !DILocation(line: 1890, column: 14, scope: !22272)
!22274 = !DILocation(line: 1890, column: 8, scope: !22272)
!22275 = !DILocation(line: 1891, column: 7, scope: !22276)
!22276 = distinct !DILexicalBlock(scope: !22272, file: !3, line: 1891, column: 7)
!22277 = !DILocation(line: 1891, column: 11, scope: !22276)
!22278 = !DILocation(line: 1891, column: 16, scope: !22276)
!22279 = !DILocation(line: 1891, column: 7, scope: !22272)
!22280 = !DILocation(line: 1892, column: 11, scope: !22281)
!22281 = distinct !DILexicalBlock(scope: !22276, file: !3, line: 1891, column: 30)
!22282 = !DILocation(line: 1892, column: 15, scope: !22281)
!22283 = !DILocation(line: 1892, column: 9, scope: !22281)
!22284 = !DILocation(line: 1893, column: 8, scope: !22281)
!22285 = !DILocation(line: 1893, column: 12, scope: !22281)
!22286 = !DILocation(line: 1893, column: 6, scope: !22281)
!22287 = !DILocation(line: 1894, column: 8, scope: !22288)
!22288 = distinct !DILexicalBlock(scope: !22281, file: !3, line: 1894, column: 8)
!22289 = !DILocation(line: 1894, column: 8, scope: !22281)
!22290 = !DILocation(line: 1895, column: 5, scope: !22291)
!22291 = distinct !DILexicalBlock(scope: !22288, file: !3, line: 1894, column: 11)
!22292 = !DILocation(line: 1895, column: 12, scope: !22291)
!22293 = !DILocation(line: 1896, column: 10, scope: !22294)
!22294 = distinct !DILexicalBlock(scope: !22295, file: !3, line: 1896, column: 10)
!22295 = distinct !DILexicalBlock(scope: !22291, file: !3, line: 1895, column: 15)
!22296 = !DILocation(line: 1896, column: 10, scope: !22295)
!22297 = !DILocation(line: 1898, column: 6, scope: !22298)
!22298 = distinct !DILexicalBlock(scope: !22294, file: !3, line: 1896, column: 47)
!22299 = !DILocation(line: 1900, column: 7, scope: !22300)
!22300 = distinct !DILexicalBlock(scope: !22294, file: !3, line: 1899, column: 11)
!22301 = !DILocation(line: 1902, column: 7, scope: !22295)
!22302 = !DILocation(line: 1903, column: 10, scope: !22295)
!22303 = distinct !{!22303, !22290, !22304}
!22304 = !DILocation(line: 1904, column: 5, scope: !22291)
!22305 = !DILocation(line: 1905, column: 9, scope: !22306)
!22306 = distinct !DILexicalBlock(scope: !22291, file: !3, line: 1905, column: 9)
!22307 = !DILocation(line: 1905, column: 11, scope: !22306)
!22308 = !DILocation(line: 1905, column: 9, scope: !22291)
!22309 = !DILocation(line: 1906, column: 10, scope: !22310)
!22310 = distinct !DILexicalBlock(scope: !22311, file: !3, line: 1906, column: 10)
!22311 = distinct !DILexicalBlock(scope: !22306, file: !3, line: 1905, column: 17)
!22312 = !DILocation(line: 1906, column: 14, scope: !22310)
!22313 = !DILocation(line: 1906, column: 23, scope: !22310)
!22314 = !DILocation(line: 1906, column: 20, scope: !22310)
!22315 = !DILocation(line: 1906, column: 10, scope: !22311)
!22316 = !DILocation(line: 1907, column: 7, scope: !22310)
!22317 = !DILocation(line: 1907, column: 11, scope: !22310)
!22318 = !DILocation(line: 1907, column: 17, scope: !22310)
!22319 = !DILocation(line: 1909, column: 18, scope: !22311)
!22320 = !DILocation(line: 1909, column: 26, scope: !22311)
!22321 = !DILocation(line: 1909, column: 6, scope: !22311)
!22322 = !DILocation(line: 1910, column: 23, scope: !22311)
!22323 = !DILocation(line: 1910, column: 33, scope: !22311)
!22324 = !DILocation(line: 1910, column: 6, scope: !22311)
!22325 = !DILocation(line: 1911, column: 20, scope: !22311)
!22326 = !DILocation(line: 1911, column: 6, scope: !22311)
!22327 = !DILocation(line: 1911, column: 28, scope: !22311)
!22328 = !DILocation(line: 1912, column: 5, scope: !22311)
!22329 = !DILocation(line: 1913, column: 4, scope: !22291)
!22330 = !DILocation(line: 1914, column: 3, scope: !22281)
!22331 = !DILocation(line: 1916, column: 9, scope: !22332)
!22332 = distinct !DILexicalBlock(scope: !22276, file: !3, line: 1915, column: 8)
!22333 = !DILocation(line: 1916, column: 13, scope: !22332)
!22334 = !DILocation(line: 1916, column: 7, scope: !22332)
!22335 = !DILocation(line: 1917, column: 8, scope: !22332)
!22336 = !DILocation(line: 1917, column: 12, scope: !22332)
!22337 = !DILocation(line: 1917, column: 20, scope: !22332)
!22338 = !DILocation(line: 1917, column: 24, scope: !22332)
!22339 = !DILocation(line: 1917, column: 18, scope: !22332)
!22340 = !DILocation(line: 1917, column: 6, scope: !22332)
!22341 = !DILocation(line: 1918, column: 8, scope: !22342)
!22342 = distinct !DILexicalBlock(scope: !22332, file: !3, line: 1918, column: 8)
!22343 = !DILocation(line: 1918, column: 8, scope: !22332)
!22344 = !DILocation(line: 1919, column: 5, scope: !22345)
!22345 = distinct !DILexicalBlock(scope: !22342, file: !3, line: 1918, column: 11)
!22346 = !DILocation(line: 1919, column: 12, scope: !22345)
!22347 = !DILocation(line: 1920, column: 10, scope: !22348)
!22348 = distinct !DILexicalBlock(scope: !22349, file: !3, line: 1920, column: 10)
!22349 = distinct !DILexicalBlock(scope: !22345, file: !3, line: 1919, column: 15)
!22350 = !DILocation(line: 1920, column: 14, scope: !22348)
!22351 = !DILocation(line: 1920, column: 17, scope: !22348)
!22352 = !DILocation(line: 1920, column: 10, scope: !22349)
!22353 = !DILocation(line: 1922, column: 6, scope: !22354)
!22354 = distinct !DILexicalBlock(scope: !22348, file: !3, line: 1920, column: 27)
!22355 = !DILocation(line: 1924, column: 7, scope: !22356)
!22356 = distinct !DILexicalBlock(scope: !22348, file: !3, line: 1923, column: 11)
!22357 = !DILocation(line: 1926, column: 7, scope: !22349)
!22358 = !DILocation(line: 1927, column: 8, scope: !22349)
!22359 = distinct !{!22359, !22344, !22360}
!22360 = !DILocation(line: 1928, column: 5, scope: !22345)
!22361 = !DILocation(line: 1929, column: 9, scope: !22362)
!22362 = distinct !DILexicalBlock(scope: !22345, file: !3, line: 1929, column: 9)
!22363 = !DILocation(line: 1929, column: 11, scope: !22362)
!22364 = !DILocation(line: 1929, column: 9, scope: !22345)
!22365 = !DILocation(line: 1930, column: 10, scope: !22366)
!22366 = distinct !DILexicalBlock(scope: !22367, file: !3, line: 1930, column: 10)
!22367 = distinct !DILexicalBlock(scope: !22362, file: !3, line: 1929, column: 17)
!22368 = !DILocation(line: 1930, column: 14, scope: !22366)
!22369 = !DILocation(line: 1930, column: 23, scope: !22366)
!22370 = !DILocation(line: 1930, column: 20, scope: !22366)
!22371 = !DILocation(line: 1930, column: 10, scope: !22367)
!22372 = !DILocation(line: 1931, column: 7, scope: !22366)
!22373 = !DILocation(line: 1931, column: 11, scope: !22366)
!22374 = !DILocation(line: 1931, column: 17, scope: !22366)
!22375 = !DILocation(line: 1933, column: 18, scope: !22367)
!22376 = !DILocation(line: 1933, column: 26, scope: !22367)
!22377 = !DILocation(line: 1933, column: 6, scope: !22367)
!22378 = !DILocation(line: 1934, column: 23, scope: !22367)
!22379 = !DILocation(line: 1934, column: 33, scope: !22367)
!22380 = !DILocation(line: 1934, column: 6, scope: !22367)
!22381 = !DILocation(line: 1935, column: 20, scope: !22367)
!22382 = !DILocation(line: 1935, column: 6, scope: !22367)
!22383 = !DILocation(line: 1935, column: 28, scope: !22367)
!22384 = !DILocation(line: 1936, column: 5, scope: !22367)
!22385 = !DILocation(line: 1937, column: 4, scope: !22345)
!22386 = !DILocation(line: 1947, column: 8, scope: !22272)
!22387 = !DILocation(line: 1947, column: 6, scope: !22272)
!22388 = !DILocation(line: 1948, column: 10, scope: !22272)
!22389 = distinct !{!22389, !22269, !22390}
!22390 = !DILocation(line: 1949, column: 2, scope: !22233)
!22391 = !DILocation(line: 1951, column: 7, scope: !22233)
!22392 = !DILocation(line: 1951, column: 15, scope: !22233)
!22393 = !DILocation(line: 1951, column: 5, scope: !22233)
!22394 = !DILocation(line: 1952, column: 2, scope: !22233)
!22395 = !DILocation(line: 1952, column: 9, scope: !22233)
!22396 = !DILocation(line: 1953, column: 10, scope: !22397)
!22397 = distinct !DILexicalBlock(scope: !22233, file: !3, line: 1952, column: 13)
!22398 = !DILocation(line: 1953, column: 14, scope: !22397)
!22399 = !DILocation(line: 1953, column: 8, scope: !22397)
!22400 = !DILocation(line: 1954, column: 8, scope: !22397)
!22401 = !DILocation(line: 1955, column: 7, scope: !22402)
!22402 = distinct !DILexicalBlock(scope: !22397, file: !3, line: 1955, column: 7)
!22403 = !DILocation(line: 1955, column: 11, scope: !22402)
!22404 = !DILocation(line: 1955, column: 16, scope: !22402)
!22405 = !DILocation(line: 1955, column: 7, scope: !22397)
!22406 = !DILocation(line: 1956, column: 11, scope: !22407)
!22407 = distinct !DILexicalBlock(scope: !22402, file: !3, line: 1955, column: 30)
!22408 = !DILocation(line: 1956, column: 15, scope: !22407)
!22409 = !DILocation(line: 1956, column: 9, scope: !22407)
!22410 = !DILocation(line: 1957, column: 11, scope: !22411)
!22411 = distinct !DILexicalBlock(scope: !22407, file: !3, line: 1957, column: 4)
!22412 = !DILocation(line: 1957, column: 9, scope: !22411)
!22413 = !DILocation(line: 1957, column: 16, scope: !22414)
!22414 = distinct !DILexicalBlock(scope: !22411, file: !3, line: 1957, column: 4)
!22415 = !DILocation(line: 1957, column: 20, scope: !22414)
!22416 = !DILocation(line: 1957, column: 24, scope: !22414)
!22417 = !DILocation(line: 1957, column: 18, scope: !22414)
!22418 = !DILocation(line: 1957, column: 4, scope: !22411)
!22419 = !DILocation(line: 1958, column: 9, scope: !22420)
!22420 = distinct !DILexicalBlock(scope: !22421, file: !3, line: 1958, column: 9)
!22421 = distinct !DILexicalBlock(scope: !22414, file: !3, line: 1957, column: 36)
!22422 = !DILocation(line: 1958, column: 9, scope: !22421)
!22423 = !DILocation(line: 1959, column: 14, scope: !22424)
!22424 = distinct !DILexicalBlock(scope: !22420, file: !3, line: 1958, column: 46)
!22425 = !DILocation(line: 1959, column: 6, scope: !22424)
!22426 = !DILocation(line: 1959, column: 20, scope: !22424)
!22427 = !DILocation(line: 1959, column: 25, scope: !22424)
!22428 = !DILocation(line: 1959, column: 31, scope: !22424)
!22429 = !DILocation(line: 1959, column: 35, scope: !22424)
!22430 = !DILocation(line: 1959, column: 43, scope: !22424)
!22431 = !DILocation(line: 1959, column: 41, scope: !22424)
!22432 = !DILocation(line: 1959, column: 45, scope: !22424)
!22433 = !DILocation(line: 1959, column: 30, scope: !22424)
!22434 = !DILocation(line: 1959, column: 50, scope: !22424)
!22435 = !DILocation(line: 1960, column: 23, scope: !22424)
!22436 = !DILocation(line: 1960, column: 33, scope: !22424)
!22437 = !DILocation(line: 1960, column: 6, scope: !22424)
!22438 = !DILocation(line: 1961, column: 26, scope: !22424)
!22439 = !DILocation(line: 1961, column: 36, scope: !22424)
!22440 = !DILocation(line: 1961, column: 41, scope: !22424)
!22441 = !DILocation(line: 1961, column: 46, scope: !22424)
!22442 = !DILocation(line: 1961, column: 52, scope: !22424)
!22443 = !DILocation(line: 1961, column: 56, scope: !22424)
!22444 = !DILocation(line: 1961, column: 64, scope: !22424)
!22445 = !DILocation(line: 1961, column: 62, scope: !22424)
!22446 = !DILocation(line: 1961, column: 66, scope: !22424)
!22447 = !DILocation(line: 1961, column: 6, scope: !22424)
!22448 = !DILocation(line: 1962, column: 6, scope: !22424)
!22449 = !DILocation(line: 1962, column: 10, scope: !22424)
!22450 = !DILocation(line: 1962, column: 15, scope: !22424)
!22451 = !DILocation(line: 1963, column: 7, scope: !22424)
!22452 = !DILocation(line: 1964, column: 11, scope: !22424)
!22453 = !DILocation(line: 1965, column: 5, scope: !22424)
!22454 = !DILocation(line: 1967, column: 10, scope: !22455)
!22455 = distinct !DILexicalBlock(scope: !22420, file: !3, line: 1966, column: 10)
!22456 = !DILocation(line: 1969, column: 4, scope: !22421)
!22457 = !DILocation(line: 1957, column: 32, scope: !22414)
!22458 = !DILocation(line: 1957, column: 4, scope: !22414)
!22459 = distinct !{!22459, !22418, !22460}
!22460 = !DILocation(line: 1969, column: 4, scope: !22411)
!22461 = !DILocation(line: 1970, column: 8, scope: !22462)
!22462 = distinct !DILexicalBlock(scope: !22407, file: !3, line: 1970, column: 8)
!22463 = !DILocation(line: 1970, column: 8, scope: !22407)
!22464 = !DILocation(line: 1971, column: 26, scope: !22465)
!22465 = distinct !DILexicalBlock(scope: !22462, file: !3, line: 1970, column: 14)
!22466 = !DILocation(line: 1971, column: 39, scope: !22465)
!22467 = !DILocation(line: 1971, column: 43, scope: !22465)
!22468 = !DILocation(line: 1971, column: 38, scope: !22465)
!22469 = !DILocation(line: 1971, column: 50, scope: !22465)
!22470 = !DILocation(line: 1971, column: 13, scope: !22465)
!22471 = !DILocation(line: 1971, column: 11, scope: !22465)
!22472 = !DILocation(line: 1972, column: 12, scope: !22465)
!22473 = !DILocation(line: 1972, column: 5, scope: !22465)
!22474 = !DILocation(line: 1972, column: 19, scope: !22465)
!22475 = !DILocation(line: 1972, column: 23, scope: !22465)
!22476 = !DILocation(line: 1972, column: 30, scope: !22465)
!22477 = !DILocation(line: 1972, column: 34, scope: !22465)
!22478 = !DILocation(line: 1972, column: 29, scope: !22465)
!22479 = !DILocation(line: 1972, column: 41, scope: !22465)
!22480 = !DILocation(line: 1973, column: 25, scope: !22465)
!22481 = !DILocation(line: 1973, column: 35, scope: !22465)
!22482 = !DILocation(line: 1973, column: 39, scope: !22465)
!22483 = !DILocation(line: 1973, column: 45, scope: !22465)
!22484 = !DILocation(line: 1973, column: 52, scope: !22465)
!22485 = !DILocation(line: 1973, column: 56, scope: !22465)
!22486 = !DILocation(line: 1973, column: 5, scope: !22465)
!22487 = !DILocation(line: 1974, column: 5, scope: !22465)
!22488 = !DILocation(line: 1974, column: 15, scope: !22465)
!22489 = !DILocation(line: 1974, column: 19, scope: !22465)
!22490 = !DILocation(line: 1975, column: 16, scope: !22465)
!22491 = !DILocation(line: 1975, column: 5, scope: !22465)
!22492 = !DILocation(line: 1975, column: 9, scope: !22465)
!22493 = !DILocation(line: 1975, column: 14, scope: !22465)
!22494 = !DILocation(line: 1976, column: 27, scope: !22465)
!22495 = !DILocation(line: 1976, column: 5, scope: !22465)
!22496 = !DILocation(line: 1977, column: 4, scope: !22465)
!22497 = !DILocation(line: 1978, column: 3, scope: !22407)
!22498 = !DILocation(line: 1979, column: 12, scope: !22499)
!22499 = distinct !DILexicalBlock(scope: !22402, file: !3, line: 1979, column: 12)
!22500 = !DILocation(line: 1979, column: 16, scope: !22499)
!22501 = !DILocation(line: 1979, column: 22, scope: !22499)
!22502 = !DILocation(line: 1979, column: 12, scope: !22402)
!22503 = !DILocation(line: 1980, column: 9, scope: !22504)
!22504 = distinct !DILexicalBlock(scope: !22499, file: !3, line: 1979, column: 28)
!22505 = !DILocation(line: 1980, column: 13, scope: !22504)
!22506 = !DILocation(line: 1980, column: 7, scope: !22504)
!22507 = !DILocation(line: 1982, column: 11, scope: !22508)
!22508 = distinct !DILexicalBlock(scope: !22504, file: !3, line: 1982, column: 4)
!22509 = !DILocation(line: 1982, column: 9, scope: !22508)
!22510 = !DILocation(line: 1982, column: 16, scope: !22511)
!22511 = distinct !DILexicalBlock(scope: !22508, file: !3, line: 1982, column: 4)
!22512 = !DILocation(line: 1982, column: 20, scope: !22511)
!22513 = !DILocation(line: 1982, column: 24, scope: !22511)
!22514 = !DILocation(line: 1982, column: 18, scope: !22511)
!22515 = !DILocation(line: 1982, column: 4, scope: !22508)
!22516 = !DILocation(line: 1983, column: 9, scope: !22517)
!22517 = distinct !DILexicalBlock(scope: !22518, file: !3, line: 1983, column: 9)
!22518 = distinct !DILexicalBlock(scope: !22511, file: !3, line: 1982, column: 36)
!22519 = !DILocation(line: 1983, column: 13, scope: !22517)
!22520 = !DILocation(line: 1983, column: 16, scope: !22517)
!22521 = !DILocation(line: 1983, column: 9, scope: !22518)
!22522 = !DILocation(line: 1984, column: 14, scope: !22523)
!22523 = distinct !DILexicalBlock(scope: !22517, file: !3, line: 1983, column: 26)
!22524 = !DILocation(line: 1984, column: 6, scope: !22523)
!22525 = !DILocation(line: 1984, column: 18, scope: !22523)
!22526 = !DILocation(line: 1984, column: 21, scope: !22523)
!22527 = !DILocation(line: 1984, column: 27, scope: !22523)
!22528 = !DILocation(line: 1984, column: 31, scope: !22523)
!22529 = !DILocation(line: 1984, column: 39, scope: !22523)
!22530 = !DILocation(line: 1984, column: 37, scope: !22523)
!22531 = !DILocation(line: 1984, column: 41, scope: !22523)
!22532 = !DILocation(line: 1984, column: 26, scope: !22523)
!22533 = !DILocation(line: 1984, column: 46, scope: !22523)
!22534 = !DILocation(line: 1985, column: 21, scope: !22523)
!22535 = !DILocation(line: 1985, column: 31, scope: !22523)
!22536 = !DILocation(line: 1985, column: 6, scope: !22523)
!22537 = !DILocation(line: 1986, column: 24, scope: !22523)
!22538 = !DILocation(line: 1986, column: 34, scope: !22523)
!22539 = !DILocation(line: 1986, column: 37, scope: !22523)
!22540 = !DILocation(line: 1986, column: 42, scope: !22523)
!22541 = !DILocation(line: 1986, column: 46, scope: !22523)
!22542 = !DILocation(line: 1986, column: 50, scope: !22523)
!22543 = !DILocation(line: 1986, column: 58, scope: !22523)
!22544 = !DILocation(line: 1986, column: 56, scope: !22523)
!22545 = !DILocation(line: 1986, column: 60, scope: !22523)
!22546 = !DILocation(line: 1986, column: 6, scope: !22523)
!22547 = !DILocation(line: 1987, column: 6, scope: !22523)
!22548 = !DILocation(line: 1987, column: 10, scope: !22523)
!22549 = !DILocation(line: 1987, column: 15, scope: !22523)
!22550 = !DILocation(line: 1988, column: 7, scope: !22523)
!22551 = !DILocation(line: 1989, column: 11, scope: !22523)
!22552 = !DILocation(line: 1990, column: 5, scope: !22523)
!22553 = !DILocation(line: 1992, column: 8, scope: !22554)
!22554 = distinct !DILexicalBlock(scope: !22517, file: !3, line: 1991, column: 10)
!22555 = !DILocation(line: 1994, column: 4, scope: !22518)
!22556 = !DILocation(line: 1982, column: 32, scope: !22511)
!22557 = !DILocation(line: 1982, column: 4, scope: !22511)
!22558 = distinct !{!22558, !22515, !22559}
!22559 = !DILocation(line: 1994, column: 4, scope: !22508)
!22560 = !DILocation(line: 1995, column: 8, scope: !22561)
!22561 = distinct !DILexicalBlock(scope: !22504, file: !3, line: 1995, column: 8)
!22562 = !DILocation(line: 1995, column: 8, scope: !22504)
!22563 = !DILocation(line: 1996, column: 21, scope: !22564)
!22564 = distinct !DILexicalBlock(scope: !22561, file: !3, line: 1995, column: 14)
!22565 = !DILocation(line: 1996, column: 33, scope: !22564)
!22566 = !DILocation(line: 1996, column: 37, scope: !22564)
!22567 = !DILocation(line: 1996, column: 43, scope: !22564)
!22568 = !DILocation(line: 1996, column: 11, scope: !22564)
!22569 = !DILocation(line: 1996, column: 9, scope: !22564)
!22570 = !DILocation(line: 1997, column: 12, scope: !22564)
!22571 = !DILocation(line: 1997, column: 5, scope: !22564)
!22572 = !DILocation(line: 1997, column: 17, scope: !22564)
!22573 = !DILocation(line: 1997, column: 21, scope: !22564)
!22574 = !DILocation(line: 1997, column: 26, scope: !22564)
!22575 = !DILocation(line: 1997, column: 30, scope: !22564)
!22576 = !DILocation(line: 1997, column: 25, scope: !22564)
!22577 = !DILocation(line: 1997, column: 37, scope: !22564)
!22578 = !DILocation(line: 1998, column: 23, scope: !22564)
!22579 = !DILocation(line: 1998, column: 33, scope: !22564)
!22580 = !DILocation(line: 1998, column: 37, scope: !22564)
!22581 = !DILocation(line: 1998, column: 41, scope: !22564)
!22582 = !DILocation(line: 1998, column: 46, scope: !22564)
!22583 = !DILocation(line: 1998, column: 50, scope: !22564)
!22584 = !DILocation(line: 1998, column: 5, scope: !22564)
!22585 = !DILocation(line: 1999, column: 5, scope: !22564)
!22586 = !DILocation(line: 1999, column: 15, scope: !22564)
!22587 = !DILocation(line: 1999, column: 19, scope: !22564)
!22588 = !DILocation(line: 2000, column: 14, scope: !22564)
!22589 = !DILocation(line: 2000, column: 5, scope: !22564)
!22590 = !DILocation(line: 2000, column: 9, scope: !22564)
!22591 = !DILocation(line: 2000, column: 12, scope: !22564)
!22592 = !DILocation(line: 2009, column: 4, scope: !22564)
!22593 = !DILocation(line: 2010, column: 27, scope: !22504)
!22594 = !DILocation(line: 2010, column: 4, scope: !22504)
!22595 = !DILocation(line: 2011, column: 25, scope: !22504)
!22596 = !DILocation(line: 2011, column: 4, scope: !22504)
!22597 = !DILocation(line: 2012, column: 3, scope: !22504)
!22598 = !DILocation(line: 2013, column: 8, scope: !22397)
!22599 = !DILocation(line: 2013, column: 6, scope: !22397)
!22600 = distinct !{!22600, !22394, !22601}
!22601 = !DILocation(line: 2014, column: 2, scope: !22233)
!22602 = !DILocation(line: 2015, column: 1, scope: !22233)
!22603 = distinct !DISubprogram(name: "keyIndex_delBP", scope: !3, file: !3, line: 384, type: !22604, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!22604 = !DISubroutineType(types: !22605)
!22605 = !{null, !2962, !3093}
!22606 = !DILocalVariable(name: "editnurb", arg: 1, scope: !22603, file: !3, line: 384, type: !2962)
!22607 = !DILocation(line: 384, column: 38, scope: !22603)
!22608 = !DILocalVariable(name: "bp", arg: 2, scope: !22603, file: !3, line: 384, type: !3093)
!22609 = !DILocation(line: 384, column: 56, scope: !22603)
!22610 = !DILocation(line: 386, column: 17, scope: !22603)
!22611 = !DILocation(line: 386, column: 27, scope: !22603)
!22612 = !DILocation(line: 386, column: 2, scope: !22603)
!22613 = !DILocation(line: 387, column: 1, scope: !22603)
!22614 = distinct !DISubprogram(name: "keyIndex_delCV", scope: !3, file: !3, line: 370, type: !22615, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!22615 = !DISubroutineType(types: !22616)
!22616 = !{null, !2962, !56}
!22617 = !DILocalVariable(name: "editnurb", arg: 1, scope: !22614, file: !3, line: 370, type: !2962)
!22618 = !DILocation(line: 370, column: 38, scope: !22614)
!22619 = !DILocalVariable(name: "cv", arg: 2, scope: !22614, file: !3, line: 370, type: !56)
!22620 = !DILocation(line: 370, column: 54, scope: !22614)
!22621 = !DILocation(line: 372, column: 7, scope: !22622)
!22622 = distinct !DILexicalBlock(scope: !22614, file: !3, line: 372, column: 6)
!22623 = !DILocation(line: 372, column: 17, scope: !22622)
!22624 = !DILocation(line: 372, column: 6, scope: !22614)
!22625 = !DILocation(line: 373, column: 3, scope: !22626)
!22626 = distinct !DILexicalBlock(scope: !22622, file: !3, line: 372, column: 27)
!22627 = !DILocation(line: 376, column: 19, scope: !22614)
!22628 = !DILocation(line: 376, column: 29, scope: !22614)
!22629 = !DILocation(line: 376, column: 39, scope: !22614)
!22630 = !DILocation(line: 376, column: 49, scope: !22614)
!22631 = !DILocation(line: 376, column: 2, scope: !22614)
!22632 = !DILocation(line: 377, column: 1, scope: !22614)
!22633 = distinct !DISubprogram(name: "keyIndex_delBezt", scope: !3, file: !3, line: 379, type: !22634, scopeLine: 380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!22634 = !DISubroutineType(types: !22635)
!22635 = !{null, !2962, !3104}
!22636 = !DILocalVariable(name: "editnurb", arg: 1, scope: !22633, file: !3, line: 379, type: !2962)
!22637 = !DILocation(line: 379, column: 40, scope: !22633)
!22638 = !DILocalVariable(name: "bezt", arg: 2, scope: !22633, file: !3, line: 379, type: !3104)
!22639 = !DILocation(line: 379, column: 61, scope: !22633)
!22640 = !DILocation(line: 381, column: 17, scope: !22633)
!22641 = !DILocation(line: 381, column: 27, scope: !22633)
!22642 = !DILocation(line: 381, column: 2, scope: !22633)
!22643 = !DILocation(line: 382, column: 1, scope: !22633)
!22644 = distinct !DISubprogram(name: "dupli_keyIndexHash", scope: !3, file: !3, line: 642, type: !22645, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!22645 = !DISubroutineType(types: !22646)
!22646 = !{!4960, !4960}
!22647 = !DILocalVariable(name: "keyindex", arg: 1, scope: !22644, file: !3, line: 642, type: !4960)
!22648 = !DILocation(line: 642, column: 41, scope: !22644)
!22649 = !DILocalVariable(name: "gh", scope: !22644, file: !3, line: 644, type: !4960)
!22650 = !DILocation(line: 644, column: 9, scope: !22644)
!22651 = !DILocalVariable(name: "hashIter", scope: !22644, file: !3, line: 645, type: !22652)
!22652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22653, size: 64)
!22653 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHashIterator", file: !3196, line: 54, baseType: !22654)
!22654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GHashIterator", file: !3196, line: 50, size: 192, elements: !22655)
!22655 = !{!22656, !22657, !22660}
!22656 = !DIDerivedType(tag: DW_TAG_member, name: "gh", scope: !22654, file: !3196, line: 51, baseType: !4960, size: 64)
!22657 = !DIDerivedType(tag: DW_TAG_member, name: "curEntry", scope: !22654, file: !3196, line: 52, baseType: !22658, size: 64, offset: 64)
!22658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22659, size: 64)
!22659 = !DICompositeType(tag: DW_TAG_structure_type, name: "Entry", file: !3196, line: 52, flags: DIFlagFwdDecl)
!22660 = !DIDerivedType(tag: DW_TAG_member, name: "curBucket", scope: !22654, file: !3196, line: 53, baseType: !278, size: 32, offset: 128)
!22661 = !DILocation(line: 645, column: 17, scope: !22644)
!22662 = !DILocation(line: 647, column: 64, scope: !22644)
!22663 = !DILocation(line: 647, column: 49, scope: !22644)
!22664 = !DILocation(line: 647, column: 7, scope: !22644)
!22665 = !DILocation(line: 647, column: 5, scope: !22644)
!22666 = !DILocation(line: 649, column: 40, scope: !22667)
!22667 = distinct !DILexicalBlock(scope: !22644, file: !3, line: 649, column: 2)
!22668 = !DILocation(line: 649, column: 18, scope: !22667)
!22669 = !DILocation(line: 649, column: 16, scope: !22667)
!22670 = !DILocation(line: 649, column: 7, scope: !22667)
!22671 = !DILocation(line: 650, column: 30, scope: !22672)
!22672 = distinct !DILexicalBlock(scope: !22667, file: !3, line: 649, column: 2)
!22673 = !DILocation(line: 650, column: 7, scope: !22672)
!22674 = !DILocation(line: 650, column: 40, scope: !22672)
!22675 = !DILocation(line: 649, column: 2, scope: !22667)
!22676 = !DILocalVariable(name: "cv", scope: !22677, file: !3, line: 653, type: !56)
!22677 = distinct !DILexicalBlock(scope: !22672, file: !3, line: 652, column: 2)
!22678 = !DILocation(line: 653, column: 9, scope: !22677)
!22679 = !DILocation(line: 653, column: 39, scope: !22677)
!22680 = !DILocation(line: 653, column: 14, scope: !22677)
!22681 = !DILocalVariable(name: "index", scope: !22677, file: !3, line: 654, type: !3503)
!22682 = !DILocation(line: 654, column: 15, scope: !22677)
!22683 = !DILocation(line: 654, column: 50, scope: !22677)
!22684 = !DILocation(line: 654, column: 23, scope: !22677)
!22685 = !DILocalVariable(name: "newIndex", scope: !22677, file: !3, line: 655, type: !3503)
!22686 = !DILocation(line: 655, column: 15, scope: !22677)
!22687 = !DILocation(line: 655, column: 26, scope: !22677)
!22688 = !DILocation(line: 657, column: 10, scope: !22677)
!22689 = !DILocation(line: 657, column: 3, scope: !22677)
!22690 = !DILocation(line: 657, column: 20, scope: !22677)
!22691 = !DILocation(line: 659, column: 20, scope: !22677)
!22692 = !DILocation(line: 659, column: 24, scope: !22677)
!22693 = !DILocation(line: 659, column: 28, scope: !22677)
!22694 = !DILocation(line: 659, column: 3, scope: !22677)
!22695 = !DILocation(line: 660, column: 2, scope: !22677)
!22696 = !DILocation(line: 651, column: 30, scope: !22672)
!22697 = !DILocation(line: 651, column: 7, scope: !22672)
!22698 = !DILocation(line: 649, column: 2, scope: !22672)
!22699 = distinct !{!22699, !22675, !22700}
!22700 = !DILocation(line: 660, column: 2, scope: !22667)
!22701 = !DILocation(line: 662, column: 25, scope: !22644)
!22702 = !DILocation(line: 662, column: 2, scope: !22644)
!22703 = !DILocation(line: 664, column: 9, scope: !22644)
!22704 = !DILocation(line: 664, column: 2, scope: !22644)
!22705 = distinct !DISubprogram(name: "keyIndex_updateNurb", scope: !3, file: !3, line: 463, type: !22706, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!22706 = !DISubroutineType(types: !22707)
!22707 = !{null, !2962, !3163, !3163}
!22708 = !DILocalVariable(name: "editnurb", arg: 1, scope: !22705, file: !3, line: 463, type: !2962)
!22709 = !DILocation(line: 463, column: 43, scope: !22705)
!22710 = !DILocalVariable(name: "nu", arg: 2, scope: !22705, file: !3, line: 463, type: !3163)
!22711 = !DILocation(line: 463, column: 59, scope: !22705)
!22712 = !DILocalVariable(name: "newnu", arg: 3, scope: !22705, file: !3, line: 463, type: !3163)
!22713 = !DILocation(line: 463, column: 69, scope: !22705)
!22714 = !DILocation(line: 465, column: 6, scope: !22715)
!22715 = distinct !DILexicalBlock(scope: !22705, file: !3, line: 465, column: 6)
!22716 = !DILocation(line: 465, column: 10, scope: !22715)
!22717 = !DILocation(line: 465, column: 6, scope: !22705)
!22718 = !DILocation(line: 466, column: 23, scope: !22719)
!22719 = distinct !DILexicalBlock(scope: !22715, file: !3, line: 465, column: 16)
!22720 = !DILocation(line: 466, column: 33, scope: !22719)
!22721 = !DILocation(line: 466, column: 37, scope: !22719)
!22722 = !DILocation(line: 466, column: 43, scope: !22719)
!22723 = !DILocation(line: 466, column: 50, scope: !22719)
!22724 = !DILocation(line: 466, column: 56, scope: !22719)
!22725 = !DILocation(line: 466, column: 63, scope: !22719)
!22726 = !DILocation(line: 466, column: 3, scope: !22719)
!22727 = !DILocation(line: 467, column: 2, scope: !22719)
!22728 = !DILocation(line: 469, column: 21, scope: !22729)
!22729 = distinct !DILexicalBlock(scope: !22715, file: !3, line: 468, column: 7)
!22730 = !DILocation(line: 469, column: 31, scope: !22729)
!22731 = !DILocation(line: 469, column: 35, scope: !22729)
!22732 = !DILocation(line: 469, column: 39, scope: !22729)
!22733 = !DILocation(line: 469, column: 46, scope: !22729)
!22734 = !DILocation(line: 469, column: 50, scope: !22729)
!22735 = !DILocation(line: 469, column: 57, scope: !22729)
!22736 = !DILocation(line: 469, column: 65, scope: !22729)
!22737 = !DILocation(line: 469, column: 72, scope: !22729)
!22738 = !DILocation(line: 469, column: 63, scope: !22729)
!22739 = !DILocation(line: 469, column: 3, scope: !22729)
!22740 = !DILocation(line: 471, column: 1, scope: !22705)
!22741 = distinct !DISubprogram(name: "BLI_ghashIterator_done", scope: !3196, file: !3196, line: 98, type: !22742, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!22742 = !DISubroutineType(types: !22743)
!22743 = !{!1081, !22652}
!22744 = !DILocalVariable(name: "ghi", arg: 1, scope: !22741, file: !3196, line: 98, type: !22652)
!22745 = !DILocation(line: 98, column: 57, scope: !22741)
!22746 = !DILocation(line: 98, column: 78, scope: !22741)
!22747 = !DILocation(line: 98, column: 83, scope: !22741)
!22748 = !DILocation(line: 98, column: 77, scope: !22741)
!22749 = !DILocation(line: 98, column: 70, scope: !22741)
!22750 = distinct !DISubprogram(name: "BLI_ghashIterator_getKey", scope: !3196, file: !3196, line: 95, type: !22751, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!22751 = !DISubroutineType(types: !22752)
!22752 = !{!56, !22652}
!22753 = !DILocalVariable(name: "ghi", arg: 1, scope: !22750, file: !3196, line: 95, type: !22652)
!22754 = !DILocation(line: 95, column: 59, scope: !22750)
!22755 = !DILocation(line: 95, column: 99, scope: !22750)
!22756 = !DILocation(line: 95, column: 104, scope: !22750)
!22757 = !DILocation(line: 95, column: 115, scope: !22750)
!22758 = !DILocation(line: 95, column: 70, scope: !22750)
!22759 = distinct !DISubprogram(name: "BLI_ghashIterator_getValue", scope: !3196, file: !3196, line: 96, type: !22751, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!22760 = !DILocalVariable(name: "ghi", arg: 1, scope: !22759, file: !3196, line: 96, type: !22652)
!22761 = !DILocation(line: 96, column: 61, scope: !22759)
!22762 = !DILocation(line: 96, column: 99, scope: !22759)
!22763 = !DILocation(line: 96, column: 104, scope: !22759)
!22764 = !DILocation(line: 96, column: 115, scope: !22759)
!22765 = !DILocation(line: 96, column: 70, scope: !22759)
!22766 = distinct !DISubprogram(name: "keyIndex_updateCV", scope: !3, file: !3, line: 428, type: !22767, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!22767 = !DISubroutineType(types: !22768)
!22768 = !{null, !2962, !343, !343, !22, !22}
!22769 = !DILocalVariable(name: "editnurb", arg: 1, scope: !22766, file: !3, line: 428, type: !2962)
!22770 = !DILocation(line: 428, column: 41, scope: !22766)
!22771 = !DILocalVariable(name: "cv", arg: 2, scope: !22766, file: !3, line: 428, type: !343)
!22772 = !DILocation(line: 428, column: 57, scope: !22766)
!22773 = !DILocalVariable(name: "newcv", arg: 3, scope: !22766, file: !3, line: 429, type: !343)
!22774 = !DILocation(line: 429, column: 37, scope: !22766)
!22775 = !DILocalVariable(name: "count", arg: 4, scope: !22766, file: !3, line: 429, type: !22)
!22776 = !DILocation(line: 429, column: 48, scope: !22766)
!22777 = !DILocalVariable(name: "size", arg: 5, scope: !22766, file: !3, line: 429, type: !22)
!22778 = !DILocation(line: 429, column: 59, scope: !22766)
!22779 = !DILocalVariable(name: "i", scope: !22766, file: !3, line: 431, type: !22)
!22780 = !DILocation(line: 431, column: 6, scope: !22766)
!22781 = !DILocalVariable(name: "index", scope: !22766, file: !3, line: 432, type: !3503)
!22782 = !DILocation(line: 432, column: 14, scope: !22766)
!22783 = !DILocation(line: 434, column: 6, scope: !22784)
!22784 = distinct !DILexicalBlock(scope: !22766, file: !3, line: 434, column: 6)
!22785 = !DILocation(line: 434, column: 16, scope: !22784)
!22786 = !DILocation(line: 434, column: 25, scope: !22784)
!22787 = !DILocation(line: 434, column: 6, scope: !22766)
!22788 = !DILocation(line: 436, column: 3, scope: !22789)
!22789 = distinct !DILexicalBlock(scope: !22784, file: !3, line: 434, column: 34)
!22790 = !DILocation(line: 439, column: 9, scope: !22791)
!22791 = distinct !DILexicalBlock(scope: !22766, file: !3, line: 439, column: 2)
!22792 = !DILocation(line: 439, column: 7, scope: !22791)
!22793 = !DILocation(line: 439, column: 14, scope: !22794)
!22794 = distinct !DILexicalBlock(scope: !22791, file: !3, line: 439, column: 2)
!22795 = !DILocation(line: 439, column: 18, scope: !22794)
!22796 = !DILocation(line: 439, column: 16, scope: !22794)
!22797 = !DILocation(line: 439, column: 2, scope: !22791)
!22798 = !DILocation(line: 440, column: 25, scope: !22799)
!22799 = distinct !DILexicalBlock(scope: !22794, file: !3, line: 439, column: 30)
!22800 = !DILocation(line: 440, column: 35, scope: !22799)
!22801 = !DILocation(line: 440, column: 11, scope: !22799)
!22802 = !DILocation(line: 440, column: 9, scope: !22799)
!22803 = !DILocation(line: 442, column: 7, scope: !22804)
!22804 = distinct !DILexicalBlock(scope: !22799, file: !3, line: 442, column: 7)
!22805 = !DILocation(line: 442, column: 7, scope: !22799)
!22806 = !DILocation(line: 443, column: 21, scope: !22807)
!22807 = distinct !DILexicalBlock(scope: !22804, file: !3, line: 442, column: 14)
!22808 = !DILocation(line: 443, column: 31, scope: !22807)
!22809 = !DILocation(line: 443, column: 41, scope: !22807)
!22810 = !DILocation(line: 443, column: 48, scope: !22807)
!22811 = !DILocation(line: 443, column: 4, scope: !22807)
!22812 = !DILocation(line: 444, column: 3, scope: !22807)
!22813 = !DILocation(line: 446, column: 12, scope: !22799)
!22814 = !DILocation(line: 446, column: 9, scope: !22799)
!22815 = !DILocation(line: 447, column: 9, scope: !22799)
!22816 = !DILocation(line: 447, column: 6, scope: !22799)
!22817 = !DILocation(line: 448, column: 2, scope: !22799)
!22818 = !DILocation(line: 439, column: 26, scope: !22794)
!22819 = !DILocation(line: 439, column: 2, scope: !22794)
!22820 = distinct !{!22820, !22797, !22821}
!22821 = !DILocation(line: 448, column: 2, scope: !22791)
!22822 = !DILocation(line: 449, column: 1, scope: !22766)
!22823 = distinct !DISubprogram(name: "zero_v3", scope: !5794, file: !5794, line: 43, type: !22824, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1881, retainedNodes: !3205)
!22824 = !DISubroutineType(types: !22825)
!22825 = !{null, !3154}
!22826 = !DILocalVariable(name: "r", arg: 1, scope: !22823, file: !5794, line: 43, type: !3154)
!22827 = !DILocation(line: 43, column: 28, scope: !22823)
!22828 = !DILocation(line: 45, column: 2, scope: !22823)
!22829 = !DILocation(line: 45, column: 7, scope: !22823)
!22830 = !DILocation(line: 46, column: 2, scope: !22823)
!22831 = !DILocation(line: 46, column: 7, scope: !22823)
!22832 = !DILocation(line: 47, column: 2, scope: !22823)
!22833 = !DILocation(line: 47, column: 7, scope: !22823)
!22834 = !DILocation(line: 48, column: 1, scope: !22823)
