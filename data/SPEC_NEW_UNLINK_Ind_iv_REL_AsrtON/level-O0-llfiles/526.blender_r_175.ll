; ModuleID = 'blender/source/blender/blenkernel/intern/image.c'
source_filename = "blender/source/blender/blenkernel/intern/image.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type { i32, i32, i8* }
%struct.EvaluationContext = type opaque
%struct.MainLock = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type { %struct.RenderResult*, %struct.RenderResult*, i32, i32, i16, i16, i32*, float*, float*, %struct.rcti, i32, i32, %struct.ListBase, %struct.rcti, %struct.RenderLayer*, i32, i32, i32, i8* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.RenderLayer = type { %struct.RenderLayer*, %struct.RenderLayer*, [74 x i8], i32, i32, i32, i32, i32, i32, %struct.Material*, %struct.Group*, float*, float*, float*, i32*, i32, i32, i8*, %struct.ListBase }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.AnimData = type opaque
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type opaque
%struct.bSound = type opaque
%struct.rctf = type { float, float, float, float }
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type { %struct.ID, %struct.BrushClone, %struct.CurveMapping*, %struct.MTex, %struct.MTex, %struct.Brush*, %struct.ImBuf*, %struct.PreviewImage*, %struct.ColorBand*, %struct.PaintCurve*, [1024 x i8], float, i16, i16, float, i32, i32, i32, float, i32, i32, i32, i32, float, float, [3 x float], float, [3 x float], i32, float, float, i32, i32, i32, i8, i8, i8, i8, float, float, float, float, float, i32, i32, i32, float, float, i32, i32, float, [3 x float], [3 x float], [2 x float], [2 x float], [2 x float], [2 x float] }
%struct.BrushClone = type { %struct.Image*, [2 x float], float, float }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ImBuf = type { %struct.ImBuf*, %struct.ImBuf*, i32, i32, i8, i32, i32, i32, i32*, float*, [2 x double], i32, i32, i32, i32, i32**, i32*, float*, float, [20 x %struct.ImBuf*], i32, i32, i32, i32, %struct.ImMetaData*, i8*, i32, [1024 x i8], [1024 x i8], %struct.MEM_CacheLimiterHandle_s*, i32, i8*, i32, i32, %struct.ColorSpace*, %struct.ColorSpace*, i32*, %struct.ColormanageCache*, i32, %struct.rcti, %struct.DDSData }
%struct.ImMetaData = type opaque
%struct.MEM_CacheLimiterHandle_s = type opaque
%struct.ColorSpace = type opaque
%struct.ColormanageCache = type opaque
%struct.DDSData = type { i32, i32, i8*, i32 }
%struct.PaintCurve = type { %struct.ID, %struct.PaintCurvePoint*, i32, i32 }
%struct.PaintCurvePoint = type { %struct.BezTriple, float }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.Palette = type { %struct.ID, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type { i32, [64 x i8], [64 x i8], [256 x i8], i32, void (%struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.Scene*, i8*, void (i8*, i32, i8*)*)*, i32 (%struct.bContext*, %struct.bNodeTreeType*)*, void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*)*, i32 (%struct.bNodeTree*, %struct.bNodeLink*)*, void (%struct.bNodeTree*, %struct.bNode*)*, %struct.ExtensionRNA }
%struct.bContext = type opaque
%struct.bNodeLink = type { %struct.bNodeLink*, %struct.bNodeLink*, %struct.bNode*, %struct.bNode*, %struct.bNodeSocket*, %struct.bNodeSocket*, i32, i32 }
%struct.bNode = type { %struct.bNode*, %struct.bNode*, %struct.bNode*, %struct.IDProperty*, %struct.bNodeType*, [64 x i8], [64 x i8], i32, i16, i16, i16, i16, i16, i16, i16, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.bNode*, %struct.ID*, i8*, %struct.bNode*, %struct.ListBase, float, float, float, float, float, float, float, i32, [64 x i8], i16, i16, float, float, i16, i16, i8*, %struct.rctf, %struct.rctf, %struct.rctf, i16, i16, i32, %struct.uiBlock* }
%struct.bNodeType = type { i8*, i8*, i16, [64 x i8], i32, [64 x i8], [256 x i8], i32, float, float, float, float, float, float, i16, i16, i16, %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate*, [64 x i8], void (%struct.bContext*, %struct.ARegion*, %struct.SpaceNode*, %struct.bNodeTree*, %struct.bNode*, i32)*, void (%struct.bContext*, %struct.bNodeTree*, %struct.bNode*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.SpaceNode*, %struct.ImBuf*, %struct.bNode*, i32, i32)*, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, {}*, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)*, {}*, void (%struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)*, void (%struct.bContext*, %struct.PointerRNA*)*, void (%struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.bNode*)*, i32 (%struct.bNodeType*, %struct.bNodeTree*)*, i32 (%struct.bNode*, %struct.bNodeTree*)*, {}*, i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)*, void (i8*)*, void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)*, i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)*, %struct.ExtensionRNA }
%struct.bNodeSocketTemplate = type { i32, i32, [64 x i8], float, float, float, float, float, float, i32, i32, %struct.bNodeSocket*, [64 x i8] }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type opaque
%struct.wmTimer = type opaque
%struct.SpaceNode = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, %struct.ID*, %struct.ID*, i16, i16, float, float, float, float, float, [2 x float], %struct.ListBase, %struct.bNodeTree*, %struct.bNodeTree*, [64 x i8], i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.bGPdata* }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.uiLayout = type opaque
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.bNodeExecContext = type opaque
%struct.bNodeExecData = type opaque
%struct.bNodeStack = type { [4 x float], float, float, i8*, i16, i16, i16, i16, i16, i16, [2 x i16] }
%struct.GPUMaterial = type opaque
%struct.GPUNodeStack = type opaque
%struct.uiBlock = type opaque
%struct.bNodeSocket = type { %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.IDProperty*, [64 x i8], [64 x i8], i8*, i16, i16, i16, i16, %struct.bNodeSocketType*, [64 x i8], float, float, i8*, i16, i16, i32, i8*, i32, i32, %struct.bNodeSocket*, %struct.bNodeLink*, %struct.bNodeStack }
%struct.bNodeSocketType = type { [64 x i8], void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*, %struct.PointerRNA*, i8*)*, void (%struct.bContext*, %struct.PointerRNA*, %struct.PointerRNA*, float*)*, void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*)*, void (%struct.bContext*, %struct.PointerRNA*, float*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)*, %struct.ExtensionRNA, %struct.ExtensionRNA, i32, i32 }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type { %struct.GHash* }
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Ipo = type opaque
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.Group = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RenderSlot = type { [64 x i8] }
%struct.Render = type opaque
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.Key = type opaque
%struct.MSelect = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MLoop = type { i32, i32 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.BMEditMesh = type opaque
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.MovieCacheIter = type opaque
%struct.ImageCacheKey = type { i32 }
%struct.StampData = type { [512 x i8], [512 x i8], [512 x i8], [512 x i8], [512 x i8], [512 x i8], [80 x i8], [80 x i8], [80 x i8], [80 x i8], [80 x i8] }
%struct.ColorManagedDisplay = type opaque
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.RenderStats = type { i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i8, double, double, i8*, i8*, [64 x i8], float, float }
%struct.Camera = type { %struct.ID, %struct.AnimData*, i8, i8, i16, float, float, float, float, float, float, float, float, float, float, float, %struct.Ipo*, %struct.Object*, i8, [7 x i8] }
%struct.wmWindowManager = type { %struct.ID, %struct.wmWindow*, %struct.wmWindow*, %struct.ListBase, i32, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ReportList, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.ListBase, %struct.wmTimer*, i8, [7 x i8] }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.wmEvent = type opaque
%struct.wmSubWindow = type opaque
%struct.wmGesture = type opaque
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmKeyConfig = type { %struct.wmKeyConfig*, %struct.wmKeyConfig*, [64 x i8], [64 x i8], %struct.ListBase, i32, i32 }
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.SpaceType = type opaque
%struct.View3D = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], [4 x float], float, float, i8, [3 x i8], i32, i32, i16, i16, %struct.Object*, %struct.Object*, %struct.rctf, %struct.ListBase, %struct.BGpic*, %struct.View3D*, [64 x i8], i32, i32, i16, i16, i16, i16, i16, i16, float, float, float, float, [3 x float], [3 x float], i16, i16, i16, i8, i8, i8, i8, [2 x i8], %struct.ListBase, %struct.ListBase, %struct.ListBase, i8, i8, i8, [5 x i8], i8*, %struct.Material*, %struct.bGPdata* }
%struct.BGpic = type { %struct.BGpic*, %struct.BGpic*, %struct.Image*, %struct.ImageUser, %struct.MovieClip*, %struct.MovieClipUser, float, float, float, float, i16, i16, i16, i16 }
%struct.MovieClipUser = type { i32, i16, i16 }
%struct.SpaceImage = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, i32, %struct.Image*, %struct.ImageUser, %struct.CurveMapping*, %struct.Scopes, %struct.Histogram, %struct.bGPdata*, [2 x float], float, float, float, float, float, i8, i8, i16, i16, i16, i8, i8, i8, i8, %struct.MaskSpaceInfo }
%struct.Scopes = type { i32, i32, i32, float, i32, float, float, i32, float, i32, [3 x [2 x float]], %struct.Histogram, float*, float*, float*, float*, i32, i32 }
%struct.Histogram = type { i32, i32, [256 x float], [256 x float], [256 x float], [256 x float], [256 x float], float, float, i16, i16, i32, [2 x [2 x float]] }
%struct.MaskSpaceInfo = type { %struct.Mask*, i8, i8, i8, [5 x i8] }
%struct.RenderPass = type { %struct.RenderPass*, %struct.RenderPass*, i32, i32, [64 x i8], [8 x i8], float*, i32, i32, i32 }
%struct.ImagePool = type { %struct.ListBase }
%struct.ImagePoolEntry = type { %struct.ImagePoolEntry*, %struct.ImagePoolEntry*, %struct.Image*, %struct.ImBuf*, i32, i32 }

@image_spin = internal global i32 0, align 4, !dbg !0
@G = external dso_local global %struct.Global, align 8
@.str = private unnamed_addr constant [5 x i8] c".exr\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c".cin\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c".dpx\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c".hdr\00", align 1
@imb_ext_movie = external dso_local global [0 x i8*], align 8
@.str.4 = private unnamed_addr constant [28 x i8] c"memory save for pack error\0A\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.5 = private unnamed_addr constant [11 x i8] c"PackedFile\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"\0Atotal image memory len: %.3f MB\0A\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"%s len: %.3f MB\0A\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"TGA\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"IRIS\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"JPEG\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"IRIZ\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"RAWTGA\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"AVIRAW\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"AVIJPEG\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"PNG\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"QUICKTIME\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"BMP\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"MPEG\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"FRAMESERVER\00", align 1
@blf_mono_font_render = external dso_local global i32, align 4
@.str.20 = private unnamed_addr constant [5 x i8] c"File\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"Note\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"Date\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"Marker\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"Time\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"Frame\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"Camera\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"Lens\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"Scene\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"Strip\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"RenderTime\00", align 1
@.str.31 = private unnamed_addr constant [17 x i8] c"not an anim: %s\0A\00", align 1
@.str.32 = private unnamed_addr constant [29 x i8] c"anim file doesn't exist: %s\0A\00", align 1
@.str.33 = private unnamed_addr constant [50 x i8] c"ERROR: Image not available. Keeping packed image\0A\00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c"Image Pool\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.35 = private unnamed_addr constant [17 x i8] c"Image Pool Entry\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@.str.36 = private unnamed_addr constant [22 x i8] c"Image Datablock Cache\00", align 1
@MEM_allocN_len = external dso_local global i64 (i8*)*, align 8
@.str.37 = private unnamed_addr constant [5 x i8] c".rgb\00", align 1
@.str.38 = private unnamed_addr constant [5 x i8] c".png\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c".tga\00", align 1
@.str.40 = private unnamed_addr constant [5 x i8] c".bmp\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c".jpg\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c".jpeg\00", align 1
@imb_ext_image = external dso_local global [0 x i8*], align 8
@imb_ext_image_qt = external dso_local global [0 x i8*], align 8
@.str.43 = private unnamed_addr constant [8 x i8] c"File %s\00", align 1
@.str.44 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.45 = private unnamed_addr constant [11 x i8] c"<untitled>\00", align 1
@.str.46 = private unnamed_addr constant [30 x i8] c"%04d/%02d/%02d %02d:%02d:%02d\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"Date %s\00", align 1
@.str.48 = private unnamed_addr constant [7 x i8] c"<none>\00", align 1
@.str.49 = private unnamed_addr constant [10 x i8] c"Marker %s\00", align 1
@.str.50 = private unnamed_addr constant [12 x i8] c"Timecode %s\00", align 1
@.str.51 = private unnamed_addr constant [13 x i8] c"Frame %%0%di\00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"%%0%di\00", align 1
@.str.53 = private unnamed_addr constant [10 x i8] c"Camera %s\00", align 1
@.str.54 = private unnamed_addr constant [5 x i8] c"%.2f\00", align 1
@.str.55 = private unnamed_addr constant [8 x i8] c"Lens %s\00", align 1
@.str.56 = private unnamed_addr constant [9 x i8] c"Scene %s\00", align 1
@.str.57 = private unnamed_addr constant [9 x i8] c"Strip %s\00", align 1
@.str.58 = private unnamed_addr constant [14 x i8] c"RenderTime %s\00", align 1
@.str.59 = private unnamed_addr constant [30 x i8] c"error, multi is normal image\0A\00", align 1
@.str.60 = private unnamed_addr constant [14 x i8] c"<packed data>\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_images_init() #0 !dbg !2980 {
entry:
  call void @BLI_spin_init(i32* @image_spin), !dbg !2984
  ret void, !dbg !2985
}

declare dso_local void @BLI_spin_init(i32*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_images_exit() #0 !dbg !2986 {
entry:
  call void @BLI_spin_end(i32* @image_spin), !dbg !2987
  ret void, !dbg !2988
}

declare dso_local void @BLI_spin_end(i32*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_de_interlace(%struct.Image* %ima, i32 %odd) #0 !dbg !2989 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %odd.addr = alloca i32, align 4
  %ibuf = alloca %struct.ImBuf*, align 8
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !2992, metadata !DIExpression()), !dbg !2993
  store i32 %odd, i32* %odd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %odd.addr, metadata !2994, metadata !DIExpression()), !dbg !2995
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !2996, metadata !DIExpression()), !dbg !2999
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3000
  %call = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %0, %struct.ImageUser* null, i8** null), !dbg !3001
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !2999
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3002
  %tobool = icmp ne %struct.ImBuf* %1, null, !dbg !3002
  br i1 %tobool, label %if.then, label %if.end3, !dbg !3004

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %odd.addr, align 4, !dbg !3005
  %tobool1 = icmp ne i32 %2, 0, !dbg !3005
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !3008

if.then2:                                         ; preds = %if.then
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3009
  call void @de_interlace_st(%struct.ImBuf* %3), !dbg !3010
  br label %if.end, !dbg !3010

if.else:                                          ; preds = %if.then
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3011
  call void @de_interlace_ng(%struct.ImBuf* %4), !dbg !3012
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end3, !dbg !3013

if.end3:                                          ; preds = %if.end, %entry
  %5 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3014
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3015
  call void @BKE_image_release_ibuf(%struct.Image* %5, %struct.ImBuf* %6, i8* null), !dbg !3016
  ret void, !dbg !3017
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %ima, %struct.ImageUser* %iuser, i8** %lock_r) #0 !dbg !3018 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %lock_r.addr = alloca i8**, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !3022, metadata !DIExpression()), !dbg !3023
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !3024, metadata !DIExpression()), !dbg !3025
  store i8** %lock_r, i8*** %lock_r.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %lock_r.addr, metadata !3026, metadata !DIExpression()), !dbg !3027
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !3028, metadata !DIExpression()), !dbg !3029
  call void @BLI_spin_lock(i32* @image_spin), !dbg !3030
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3031
  %1 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !3032
  %2 = load i8**, i8*** %lock_r.addr, align 8, !dbg !3033
  %call = call %struct.ImBuf* @image_acquire_ibuf(%struct.Image* %0, %struct.ImageUser* %1, i8** %2), !dbg !3034
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !3035
  call void @BLI_spin_unlock(i32* @image_spin), !dbg !3036
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3037
  ret %struct.ImBuf* %3, !dbg !3038
}

; Function Attrs: noinline nounwind uwtable
define internal void @de_interlace_st(%struct.ImBuf* %ibuf) #0 !dbg !3039 {
entry:
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %tbuf1 = alloca %struct.ImBuf*, align 8
  %tbuf2 = alloca %struct.ImBuf*, align 8
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !3042, metadata !DIExpression()), !dbg !3043
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %tbuf1, metadata !3044, metadata !DIExpression()), !dbg !3045
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %tbuf2, metadata !3046, metadata !DIExpression()), !dbg !3047
  %0 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3048
  %cmp = icmp eq %struct.ImBuf* %0, null, !dbg !3050
  br i1 %cmp, label %if.then, label %if.end, !dbg !3051

if.then:                                          ; preds = %entry
  br label %return, !dbg !3052

if.end:                                           ; preds = %entry
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3053
  %flags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %1, i32 0, i32 6, !dbg !3055
  %2 = load i32, i32* %flags, align 8, !dbg !3055
  %and = and i32 %2, 4, !dbg !3056
  %tobool = icmp ne i32 %and, 0, !dbg !3056
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !3057

if.then1:                                         ; preds = %if.end
  br label %return, !dbg !3058

if.end2:                                          ; preds = %if.end
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3059
  %flags3 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %3, i32 0, i32 6, !dbg !3060
  %4 = load i32, i32* %flags3, align 8, !dbg !3061
  %or = or i32 %4, 4, !dbg !3061
  store i32 %or, i32* %flags3, align 8, !dbg !3061
  %5 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3062
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %5, i32 0, i32 8, !dbg !3064
  %6 = load i32*, i32** %rect, align 8, !dbg !3064
  %tobool4 = icmp ne i32* %6, null, !dbg !3062
  br i1 %tobool4, label %if.then5, label %if.end22, !dbg !3065

if.then5:                                         ; preds = %if.end2
  %7 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3066
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %7, i32 0, i32 2, !dbg !3068
  %8 = load i32, i32* %x, align 8, !dbg !3068
  %9 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3069
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %9, i32 0, i32 3, !dbg !3070
  %10 = load i32, i32* %y, align 4, !dbg !3070
  %shr = ashr i32 %10, 1, !dbg !3071
  %call = call %struct.ImBuf* @IMB_allocImBuf(i32 %8, i32 %shr, i8 zeroext 32, i32 1), !dbg !3072
  store %struct.ImBuf* %call, %struct.ImBuf** %tbuf1, align 8, !dbg !3073
  %11 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3074
  %x6 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %11, i32 0, i32 2, !dbg !3075
  %12 = load i32, i32* %x6, align 8, !dbg !3075
  %13 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3076
  %y7 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %13, i32 0, i32 3, !dbg !3077
  %14 = load i32, i32* %y7, align 4, !dbg !3077
  %shr8 = ashr i32 %14, 1, !dbg !3078
  %call9 = call %struct.ImBuf* @IMB_allocImBuf(i32 %12, i32 %shr8, i8 zeroext 32, i32 1), !dbg !3079
  store %struct.ImBuf* %call9, %struct.ImBuf** %tbuf2, align 8, !dbg !3080
  %15 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3081
  %x10 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %15, i32 0, i32 2, !dbg !3082
  %16 = load i32, i32* %x10, align 8, !dbg !3083
  %mul = mul nsw i32 %16, 2, !dbg !3083
  store i32 %mul, i32* %x10, align 8, !dbg !3083
  %17 = load %struct.ImBuf*, %struct.ImBuf** %tbuf1, align 8, !dbg !3084
  %18 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3085
  %19 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3086
  %x11 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %19, i32 0, i32 2, !dbg !3087
  %20 = load i32, i32* %x11, align 8, !dbg !3087
  %21 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3088
  %y12 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %21, i32 0, i32 3, !dbg !3089
  %22 = load i32, i32* %y12, align 4, !dbg !3089
  call void @IMB_rectcpy(%struct.ImBuf* %17, %struct.ImBuf* %18, i32 0, i32 0, i32 0, i32 0, i32 %20, i32 %22), !dbg !3090
  %23 = load %struct.ImBuf*, %struct.ImBuf** %tbuf2, align 8, !dbg !3091
  %24 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3092
  %25 = load %struct.ImBuf*, %struct.ImBuf** %tbuf2, align 8, !dbg !3093
  %x13 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %25, i32 0, i32 2, !dbg !3094
  %26 = load i32, i32* %x13, align 8, !dbg !3094
  %27 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3095
  %x14 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %27, i32 0, i32 2, !dbg !3096
  %28 = load i32, i32* %x14, align 8, !dbg !3096
  %29 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3097
  %y15 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %29, i32 0, i32 3, !dbg !3098
  %30 = load i32, i32* %y15, align 4, !dbg !3098
  call void @IMB_rectcpy(%struct.ImBuf* %23, %struct.ImBuf* %24, i32 0, i32 0, i32 %26, i32 0, i32 %28, i32 %30), !dbg !3099
  %31 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3100
  %x16 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %31, i32 0, i32 2, !dbg !3101
  %32 = load i32, i32* %x16, align 8, !dbg !3102
  %div = sdiv i32 %32, 2, !dbg !3102
  store i32 %div, i32* %x16, align 8, !dbg !3102
  %33 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3103
  %34 = load %struct.ImBuf*, %struct.ImBuf** %tbuf2, align 8, !dbg !3104
  %35 = load %struct.ImBuf*, %struct.ImBuf** %tbuf2, align 8, !dbg !3105
  %x17 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %35, i32 0, i32 2, !dbg !3106
  %36 = load i32, i32* %x17, align 8, !dbg !3106
  %37 = load %struct.ImBuf*, %struct.ImBuf** %tbuf2, align 8, !dbg !3107
  %y18 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %37, i32 0, i32 3, !dbg !3108
  %38 = load i32, i32* %y18, align 4, !dbg !3108
  call void @IMB_rectcpy(%struct.ImBuf* %33, %struct.ImBuf* %34, i32 0, i32 0, i32 0, i32 0, i32 %36, i32 %38), !dbg !3109
  %39 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3110
  %40 = load %struct.ImBuf*, %struct.ImBuf** %tbuf1, align 8, !dbg !3111
  %41 = load %struct.ImBuf*, %struct.ImBuf** %tbuf2, align 8, !dbg !3112
  %y19 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %41, i32 0, i32 3, !dbg !3113
  %42 = load i32, i32* %y19, align 4, !dbg !3113
  %43 = load %struct.ImBuf*, %struct.ImBuf** %tbuf1, align 8, !dbg !3114
  %x20 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %43, i32 0, i32 2, !dbg !3115
  %44 = load i32, i32* %x20, align 8, !dbg !3115
  %45 = load %struct.ImBuf*, %struct.ImBuf** %tbuf1, align 8, !dbg !3116
  %y21 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %45, i32 0, i32 3, !dbg !3117
  %46 = load i32, i32* %y21, align 4, !dbg !3117
  call void @IMB_rectcpy(%struct.ImBuf* %39, %struct.ImBuf* %40, i32 0, i32 %42, i32 0, i32 0, i32 %44, i32 %46), !dbg !3118
  %47 = load %struct.ImBuf*, %struct.ImBuf** %tbuf1, align 8, !dbg !3119
  call void @IMB_freeImBuf(%struct.ImBuf* %47), !dbg !3120
  %48 = load %struct.ImBuf*, %struct.ImBuf** %tbuf2, align 8, !dbg !3121
  call void @IMB_freeImBuf(%struct.ImBuf* %48), !dbg !3122
  br label %if.end22, !dbg !3123

if.end22:                                         ; preds = %if.then5, %if.end2
  %49 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3124
  %y23 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %49, i32 0, i32 3, !dbg !3125
  %50 = load i32, i32* %y23, align 4, !dbg !3126
  %div24 = sdiv i32 %50, 2, !dbg !3126
  store i32 %div24, i32* %y23, align 4, !dbg !3126
  br label %return, !dbg !3127

return:                                           ; preds = %if.end22, %if.then1, %if.then
  ret void, !dbg !3127
}

; Function Attrs: noinline nounwind uwtable
define internal void @de_interlace_ng(%struct.ImBuf* %ibuf) #0 !dbg !3128 {
entry:
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %tbuf1 = alloca %struct.ImBuf*, align 8
  %tbuf2 = alloca %struct.ImBuf*, align 8
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !3129, metadata !DIExpression()), !dbg !3130
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %tbuf1, metadata !3131, metadata !DIExpression()), !dbg !3132
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %tbuf2, metadata !3133, metadata !DIExpression()), !dbg !3134
  %0 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3135
  %cmp = icmp eq %struct.ImBuf* %0, null, !dbg !3137
  br i1 %cmp, label %if.then, label %if.end, !dbg !3138

if.then:                                          ; preds = %entry
  br label %return, !dbg !3139

if.end:                                           ; preds = %entry
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3140
  %flags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %1, i32 0, i32 6, !dbg !3142
  %2 = load i32, i32* %flags, align 8, !dbg !3142
  %and = and i32 %2, 4, !dbg !3143
  %tobool = icmp ne i32 %and, 0, !dbg !3143
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !3144

if.then1:                                         ; preds = %if.end
  br label %return, !dbg !3145

if.end2:                                          ; preds = %if.end
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3146
  %flags3 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %3, i32 0, i32 6, !dbg !3147
  %4 = load i32, i32* %flags3, align 8, !dbg !3148
  %or = or i32 %4, 4, !dbg !3148
  store i32 %or, i32* %flags3, align 8, !dbg !3148
  %5 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3149
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %5, i32 0, i32 8, !dbg !3151
  %6 = load i32*, i32** %rect, align 8, !dbg !3151
  %tobool4 = icmp ne i32* %6, null, !dbg !3149
  br i1 %tobool4, label %if.then5, label %if.end22, !dbg !3152

if.then5:                                         ; preds = %if.end2
  %7 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3153
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %7, i32 0, i32 2, !dbg !3155
  %8 = load i32, i32* %x, align 8, !dbg !3155
  %9 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3156
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %9, i32 0, i32 3, !dbg !3157
  %10 = load i32, i32* %y, align 4, !dbg !3157
  %shr = ashr i32 %10, 1, !dbg !3158
  %call = call %struct.ImBuf* @IMB_allocImBuf(i32 %8, i32 %shr, i8 zeroext 32, i32 1), !dbg !3159
  store %struct.ImBuf* %call, %struct.ImBuf** %tbuf1, align 8, !dbg !3160
  %11 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3161
  %x6 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %11, i32 0, i32 2, !dbg !3162
  %12 = load i32, i32* %x6, align 8, !dbg !3162
  %13 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3163
  %y7 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %13, i32 0, i32 3, !dbg !3164
  %14 = load i32, i32* %y7, align 4, !dbg !3164
  %shr8 = ashr i32 %14, 1, !dbg !3165
  %call9 = call %struct.ImBuf* @IMB_allocImBuf(i32 %12, i32 %shr8, i8 zeroext 32, i32 1), !dbg !3166
  store %struct.ImBuf* %call9, %struct.ImBuf** %tbuf2, align 8, !dbg !3167
  %15 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3168
  %x10 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %15, i32 0, i32 2, !dbg !3169
  %16 = load i32, i32* %x10, align 8, !dbg !3170
  %mul = mul nsw i32 %16, 2, !dbg !3170
  store i32 %mul, i32* %x10, align 8, !dbg !3170
  %17 = load %struct.ImBuf*, %struct.ImBuf** %tbuf1, align 8, !dbg !3171
  %18 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3172
  %19 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3173
  %x11 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %19, i32 0, i32 2, !dbg !3174
  %20 = load i32, i32* %x11, align 8, !dbg !3174
  %21 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3175
  %y12 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %21, i32 0, i32 3, !dbg !3176
  %22 = load i32, i32* %y12, align 4, !dbg !3176
  call void @IMB_rectcpy(%struct.ImBuf* %17, %struct.ImBuf* %18, i32 0, i32 0, i32 0, i32 0, i32 %20, i32 %22), !dbg !3177
  %23 = load %struct.ImBuf*, %struct.ImBuf** %tbuf2, align 8, !dbg !3178
  %24 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3179
  %25 = load %struct.ImBuf*, %struct.ImBuf** %tbuf2, align 8, !dbg !3180
  %x13 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %25, i32 0, i32 2, !dbg !3181
  %26 = load i32, i32* %x13, align 8, !dbg !3181
  %27 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3182
  %x14 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %27, i32 0, i32 2, !dbg !3183
  %28 = load i32, i32* %x14, align 8, !dbg !3183
  %29 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3184
  %y15 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %29, i32 0, i32 3, !dbg !3185
  %30 = load i32, i32* %y15, align 4, !dbg !3185
  call void @IMB_rectcpy(%struct.ImBuf* %23, %struct.ImBuf* %24, i32 0, i32 0, i32 %26, i32 0, i32 %28, i32 %30), !dbg !3186
  %31 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3187
  %x16 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %31, i32 0, i32 2, !dbg !3188
  %32 = load i32, i32* %x16, align 8, !dbg !3189
  %div = sdiv i32 %32, 2, !dbg !3189
  store i32 %div, i32* %x16, align 8, !dbg !3189
  %33 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3190
  %34 = load %struct.ImBuf*, %struct.ImBuf** %tbuf1, align 8, !dbg !3191
  %35 = load %struct.ImBuf*, %struct.ImBuf** %tbuf1, align 8, !dbg !3192
  %x17 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %35, i32 0, i32 2, !dbg !3193
  %36 = load i32, i32* %x17, align 8, !dbg !3193
  %37 = load %struct.ImBuf*, %struct.ImBuf** %tbuf1, align 8, !dbg !3194
  %y18 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %37, i32 0, i32 3, !dbg !3195
  %38 = load i32, i32* %y18, align 4, !dbg !3195
  call void @IMB_rectcpy(%struct.ImBuf* %33, %struct.ImBuf* %34, i32 0, i32 0, i32 0, i32 0, i32 %36, i32 %38), !dbg !3196
  %39 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3197
  %40 = load %struct.ImBuf*, %struct.ImBuf** %tbuf2, align 8, !dbg !3198
  %41 = load %struct.ImBuf*, %struct.ImBuf** %tbuf2, align 8, !dbg !3199
  %y19 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %41, i32 0, i32 3, !dbg !3200
  %42 = load i32, i32* %y19, align 4, !dbg !3200
  %43 = load %struct.ImBuf*, %struct.ImBuf** %tbuf2, align 8, !dbg !3201
  %x20 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %43, i32 0, i32 2, !dbg !3202
  %44 = load i32, i32* %x20, align 8, !dbg !3202
  %45 = load %struct.ImBuf*, %struct.ImBuf** %tbuf2, align 8, !dbg !3203
  %y21 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %45, i32 0, i32 3, !dbg !3204
  %46 = load i32, i32* %y21, align 4, !dbg !3204
  call void @IMB_rectcpy(%struct.ImBuf* %39, %struct.ImBuf* %40, i32 0, i32 %42, i32 0, i32 0, i32 %44, i32 %46), !dbg !3205
  %47 = load %struct.ImBuf*, %struct.ImBuf** %tbuf1, align 8, !dbg !3206
  call void @IMB_freeImBuf(%struct.ImBuf* %47), !dbg !3207
  %48 = load %struct.ImBuf*, %struct.ImBuf** %tbuf2, align 8, !dbg !3208
  call void @IMB_freeImBuf(%struct.ImBuf* %48), !dbg !3209
  br label %if.end22, !dbg !3210

if.end22:                                         ; preds = %if.then5, %if.end2
  %49 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3211
  %y23 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %49, i32 0, i32 3, !dbg !3212
  %50 = load i32, i32* %y23, align 4, !dbg !3213
  %div24 = sdiv i32 %50, 2, !dbg !3213
  store i32 %div24, i32* %y23, align 4, !dbg !3213
  br label %return, !dbg !3214

return:                                           ; preds = %if.end22, %if.then1, %if.then
  ret void, !dbg !3214
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_release_ibuf(%struct.Image* %ima, %struct.ImBuf* %ibuf, i8* %lock) #0 !dbg !3215 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %lock.addr = alloca i8*, align 8
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !3218, metadata !DIExpression()), !dbg !3219
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !3220, metadata !DIExpression()), !dbg !3221
  store i8* %lock, i8** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %lock.addr, metadata !3222, metadata !DIExpression()), !dbg !3223
  %0 = load i8*, i8** %lock.addr, align 8, !dbg !3224
  %tobool = icmp ne i8* %0, null, !dbg !3224
  br i1 %tobool, label %if.then, label %if.end5, !dbg !3226

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %lock.addr, align 8, !dbg !3227
  %2 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3230
  %3 = bitcast %struct.Image* %2 to i8*, !dbg !3230
  %cmp = icmp eq i8* %1, %3, !dbg !3231
  br i1 %cmp, label %if.then1, label %if.else, !dbg !3232

if.then1:                                         ; preds = %if.then
  call void @BLI_unlock_thread(i32 2), !dbg !3233
  br label %if.end4, !dbg !3235

if.else:                                          ; preds = %if.then
  %4 = load i8*, i8** %lock.addr, align 8, !dbg !3236
  %tobool2 = icmp ne i8* %4, null, !dbg !3236
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !3238

if.then3:                                         ; preds = %if.else
  %5 = load i8*, i8** %lock.addr, align 8, !dbg !3239
  %6 = bitcast i8* %5 to %struct.Render*, !dbg !3239
  call void @RE_ReleaseResultImage(%struct.Render* %6), !dbg !3241
  call void @BLI_unlock_thread(i32 2), !dbg !3242
  br label %if.end, !dbg !3243

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then1
  br label %if.end5, !dbg !3244

if.end5:                                          ; preds = %if.end4, %entry
  %7 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3245
  %tobool6 = icmp ne %struct.ImBuf* %7, null, !dbg !3245
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !3247

if.then7:                                         ; preds = %if.end5
  call void @BLI_spin_lock(i32* @image_spin), !dbg !3248
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3250
  call void @IMB_freeImBuf(%struct.ImBuf* %8), !dbg !3251
  call void @BLI_spin_unlock(i32* @image_spin), !dbg !3252
  br label %if.end8, !dbg !3253

if.end8:                                          ; preds = %if.then7, %if.end5
  ret void, !dbg !3254
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_free_buffers(%struct.Image* %ima) #0 !dbg !3255 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !3258, metadata !DIExpression()), !dbg !3259
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3260
  call void @image_free_cached_frames(%struct.Image* %0), !dbg !3261
  %1 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3262
  %anim = getelementptr inbounds %struct.Image, %struct.Image* %1, i32 0, i32 4, !dbg !3264
  %2 = load %struct.anim*, %struct.anim** %anim, align 8, !dbg !3264
  %tobool = icmp ne %struct.anim* %2, null, !dbg !3262
  br i1 %tobool, label %if.then, label %if.end, !dbg !3265

if.then:                                          ; preds = %entry
  %3 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3266
  %anim1 = getelementptr inbounds %struct.Image, %struct.Image* %3, i32 0, i32 4, !dbg !3267
  %4 = load %struct.anim*, %struct.anim** %anim1, align 8, !dbg !3267
  call void @IMB_free_anim(%struct.anim* %4), !dbg !3268
  br label %if.end, !dbg !3268

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3269
  %anim2 = getelementptr inbounds %struct.Image, %struct.Image* %5, i32 0, i32 4, !dbg !3270
  store %struct.anim* null, %struct.anim** %anim2, align 8, !dbg !3271
  %6 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3272
  %rr = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 5, !dbg !3274
  %7 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !3274
  %tobool3 = icmp ne %struct.RenderResult* %7, null, !dbg !3272
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !3275

if.then4:                                         ; preds = %if.end
  %8 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3276
  %rr5 = getelementptr inbounds %struct.Image, %struct.Image* %8, i32 0, i32 5, !dbg !3278
  %9 = load %struct.RenderResult*, %struct.RenderResult** %rr5, align 8, !dbg !3278
  call void @RE_FreeRenderResult(%struct.RenderResult* %9), !dbg !3279
  %10 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3280
  %rr6 = getelementptr inbounds %struct.Image, %struct.Image* %10, i32 0, i32 5, !dbg !3281
  store %struct.RenderResult* null, %struct.RenderResult** %rr6, align 8, !dbg !3282
  br label %if.end7, !dbg !3283

if.end7:                                          ; preds = %if.then4, %if.end
  %11 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3284
  call void @GPU_free_image(%struct.Image* %11), !dbg !3285
  %12 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3286
  %ok = getelementptr inbounds %struct.Image, %struct.Image* %12, i32 0, i32 9, !dbg !3287
  store i16 1, i16* %ok, align 4, !dbg !3288
  ret void, !dbg !3289
}

; Function Attrs: noinline nounwind uwtable
define internal void @image_free_cached_frames(%struct.Image* %image) #0 !dbg !3290 {
entry:
  %image.addr = alloca %struct.Image*, align 8
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !3291, metadata !DIExpression()), !dbg !3292
  %0 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !3293
  %cache = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 2, !dbg !3295
  %1 = load %struct.MovieCache*, %struct.MovieCache** %cache, align 8, !dbg !3295
  %tobool = icmp ne %struct.MovieCache* %1, null, !dbg !3293
  br i1 %tobool, label %if.then, label %if.end, !dbg !3296

if.then:                                          ; preds = %entry
  %2 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !3297
  %cache1 = getelementptr inbounds %struct.Image, %struct.Image* %2, i32 0, i32 2, !dbg !3299
  %3 = load %struct.MovieCache*, %struct.MovieCache** %cache1, align 8, !dbg !3299
  call void @IMB_moviecache_free(%struct.MovieCache* %3), !dbg !3300
  %4 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !3301
  %cache2 = getelementptr inbounds %struct.Image, %struct.Image* %4, i32 0, i32 2, !dbg !3302
  store %struct.MovieCache* null, %struct.MovieCache** %cache2, align 8, !dbg !3303
  br label %if.end, !dbg !3304

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3305
}

declare dso_local void @IMB_free_anim(%struct.anim*) #1

declare dso_local void @RE_FreeRenderResult(%struct.RenderResult*) #1

declare dso_local void @GPU_free_image(%struct.Image*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_free(%struct.Image* %ima) #0 !dbg !3306 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %a = alloca i32, align 4
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !3307, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3309, metadata !DIExpression()), !dbg !3310
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3311
  call void @BKE_image_free_buffers(%struct.Image* %0), !dbg !3312
  %1 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3313
  %packedfile = getelementptr inbounds %struct.Image, %struct.Image* %1, i32 0, i32 22, !dbg !3315
  %2 = load %struct.PackedFile*, %struct.PackedFile** %packedfile, align 8, !dbg !3315
  %tobool = icmp ne %struct.PackedFile* %2, null, !dbg !3313
  br i1 %tobool, label %if.then, label %if.end, !dbg !3316

if.then:                                          ; preds = %entry
  %3 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3317
  %packedfile1 = getelementptr inbounds %struct.Image, %struct.Image* %3, i32 0, i32 22, !dbg !3319
  %4 = load %struct.PackedFile*, %struct.PackedFile** %packedfile1, align 8, !dbg !3319
  call void @freePackedFile(%struct.PackedFile* %4), !dbg !3320
  %5 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3321
  %packedfile2 = getelementptr inbounds %struct.Image, %struct.Image* %5, i32 0, i32 22, !dbg !3322
  store %struct.PackedFile* null, %struct.PackedFile** %packedfile2, align 8, !dbg !3323
  br label %if.end, !dbg !3324

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3325
  %id = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 0, !dbg !3326
  call void @BKE_icon_delete(%struct.ID* %id), !dbg !3327
  %7 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3328
  %id3 = getelementptr inbounds %struct.Image, %struct.Image* %7, i32 0, i32 0, !dbg !3329
  %icon_id = getelementptr inbounds %struct.ID, %struct.ID* %id3, i32 0, i32 7, !dbg !3330
  store i32 0, i32* %icon_id, align 8, !dbg !3331
  %8 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3332
  %preview = getelementptr inbounds %struct.Image, %struct.Image* %8, i32 0, i32 23, !dbg !3333
  call void @BKE_previewimg_free(%struct.PreviewImage** %preview), !dbg !3334
  store i32 0, i32* %a, align 4, !dbg !3335
  br label %for.cond, !dbg !3337

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %a, align 4, !dbg !3338
  %cmp = icmp slt i32 %9, 8, !dbg !3340
  br i1 %cmp, label %for.body, label %for.end, !dbg !3341

for.body:                                         ; preds = %for.cond
  %10 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3342
  %renders = getelementptr inbounds %struct.Image, %struct.Image* %10, i32 0, i32 6, !dbg !3345
  %11 = load i32, i32* %a, align 4, !dbg !3346
  %idxprom = sext i32 %11 to i64, !dbg !3342
  %arrayidx = getelementptr inbounds [8 x %struct.RenderResult*], [8 x %struct.RenderResult*]* %renders, i64 0, i64 %idxprom, !dbg !3342
  %12 = load %struct.RenderResult*, %struct.RenderResult** %arrayidx, align 8, !dbg !3342
  %tobool4 = icmp ne %struct.RenderResult* %12, null, !dbg !3342
  br i1 %tobool4, label %if.then5, label %if.end12, !dbg !3347

if.then5:                                         ; preds = %for.body
  %13 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3348
  %renders6 = getelementptr inbounds %struct.Image, %struct.Image* %13, i32 0, i32 6, !dbg !3350
  %14 = load i32, i32* %a, align 4, !dbg !3351
  %idxprom7 = sext i32 %14 to i64, !dbg !3348
  %arrayidx8 = getelementptr inbounds [8 x %struct.RenderResult*], [8 x %struct.RenderResult*]* %renders6, i64 0, i64 %idxprom7, !dbg !3348
  %15 = load %struct.RenderResult*, %struct.RenderResult** %arrayidx8, align 8, !dbg !3348
  call void @RE_FreeRenderResult(%struct.RenderResult* %15), !dbg !3352
  %16 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3353
  %renders9 = getelementptr inbounds %struct.Image, %struct.Image* %16, i32 0, i32 6, !dbg !3354
  %17 = load i32, i32* %a, align 4, !dbg !3355
  %idxprom10 = sext i32 %17 to i64, !dbg !3353
  %arrayidx11 = getelementptr inbounds [8 x %struct.RenderResult*], [8 x %struct.RenderResult*]* %renders9, i64 0, i64 %idxprom10, !dbg !3353
  store %struct.RenderResult* null, %struct.RenderResult** %arrayidx11, align 8, !dbg !3356
  br label %if.end12, !dbg !3357

if.end12:                                         ; preds = %if.then5, %for.body
  br label %for.inc, !dbg !3358

for.inc:                                          ; preds = %if.end12
  %18 = load i32, i32* %a, align 4, !dbg !3359
  %inc = add nsw i32 %18, 1, !dbg !3359
  store i32 %inc, i32* %a, align 4, !dbg !3359
  br label %for.cond, !dbg !3360, !llvm.loop !3361

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3363
}

declare dso_local void @freePackedFile(%struct.PackedFile*) #1

declare dso_local void @BKE_icon_delete(%struct.ID*) #1

declare dso_local void @BKE_previewimg_free(%struct.PreviewImage**) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Image* @BKE_image_copy(%struct.Main* %bmain, %struct.Image* %ima) #0 !dbg !3364 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %nima = alloca %struct.Image*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !3428, metadata !DIExpression()), !dbg !3429
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !3430, metadata !DIExpression()), !dbg !3431
  call void @llvm.dbg.declare(metadata %struct.Image** %nima, metadata !3432, metadata !DIExpression()), !dbg !3433
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !3434
  %1 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3435
  %id = getelementptr inbounds %struct.Image, %struct.Image* %1, i32 0, i32 0, !dbg !3436
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !3437
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !3435
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !3438
  %2 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3439
  %source = getelementptr inbounds %struct.Image, %struct.Image* %2, i32 0, i32 11, !dbg !3440
  %3 = load i16, i16* %source, align 8, !dbg !3440
  %4 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3441
  %type = getelementptr inbounds %struct.Image, %struct.Image* %4, i32 0, i32 12, !dbg !3442
  %5 = load i16, i16* %type, align 2, !dbg !3442
  %call = call %struct.Image* @image_alloc(%struct.Main* %0, i8* %add.ptr, i16 signext %3, i16 signext %5), !dbg !3443
  store %struct.Image* %call, %struct.Image** %nima, align 8, !dbg !3433
  %6 = load %struct.Image*, %struct.Image** %nima, align 8, !dbg !3444
  %name1 = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 1, !dbg !3445
  %arraydecay2 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name1, i64 0, i64 0, !dbg !3444
  %7 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3446
  %name3 = getelementptr inbounds %struct.Image, %struct.Image* %7, i32 0, i32 1, !dbg !3447
  %arraydecay4 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name3, i64 0, i64 0, !dbg !3446
  %call5 = call i8* @BLI_strncpy(i8* %arraydecay2, i8* %arraydecay4, i64 1024), !dbg !3448
  %8 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3449
  %flag = getelementptr inbounds %struct.Image, %struct.Image* %8, i32 0, i32 10, !dbg !3450
  %9 = load i16, i16* %flag, align 2, !dbg !3450
  %10 = load %struct.Image*, %struct.Image** %nima, align 8, !dbg !3451
  %flag6 = getelementptr inbounds %struct.Image, %struct.Image* %10, i32 0, i32 10, !dbg !3452
  store i16 %9, i16* %flag6, align 2, !dbg !3453
  %11 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3454
  %tpageflag = getelementptr inbounds %struct.Image, %struct.Image* %11, i32 0, i32 14, !dbg !3455
  %12 = load i16, i16* %tpageflag, align 8, !dbg !3455
  %13 = load %struct.Image*, %struct.Image** %nima, align 8, !dbg !3456
  %tpageflag7 = getelementptr inbounds %struct.Image, %struct.Image* %13, i32 0, i32 14, !dbg !3457
  store i16 %12, i16* %tpageflag7, align 8, !dbg !3458
  %14 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3459
  %gen_x = getelementptr inbounds %struct.Image, %struct.Image* %14, i32 0, i32 28, !dbg !3460
  %15 = load i32, i32* %gen_x, align 4, !dbg !3460
  %16 = load %struct.Image*, %struct.Image** %nima, align 8, !dbg !3461
  %gen_x8 = getelementptr inbounds %struct.Image, %struct.Image* %16, i32 0, i32 28, !dbg !3462
  store i32 %15, i32* %gen_x8, align 4, !dbg !3463
  %17 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3464
  %gen_y = getelementptr inbounds %struct.Image, %struct.Image* %17, i32 0, i32 29, !dbg !3465
  %18 = load i32, i32* %gen_y, align 8, !dbg !3465
  %19 = load %struct.Image*, %struct.Image** %nima, align 8, !dbg !3466
  %gen_y9 = getelementptr inbounds %struct.Image, %struct.Image* %19, i32 0, i32 29, !dbg !3467
  store i32 %18, i32* %gen_y9, align 8, !dbg !3468
  %20 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3469
  %gen_type = getelementptr inbounds %struct.Image, %struct.Image* %20, i32 0, i32 30, !dbg !3470
  %21 = load i8, i8* %gen_type, align 4, !dbg !3470
  %22 = load %struct.Image*, %struct.Image** %nima, align 8, !dbg !3471
  %gen_type10 = getelementptr inbounds %struct.Image, %struct.Image* %22, i32 0, i32 30, !dbg !3472
  store i8 %21, i8* %gen_type10, align 4, !dbg !3473
  %23 = load %struct.Image*, %struct.Image** %nima, align 8, !dbg !3474
  %gen_color = getelementptr inbounds %struct.Image, %struct.Image* %23, i32 0, i32 33, !dbg !3475
  %arraydecay11 = getelementptr inbounds [4 x float], [4 x float]* %gen_color, i64 0, i64 0, !dbg !3474
  %24 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3476
  %gen_color12 = getelementptr inbounds %struct.Image, %struct.Image* %24, i32 0, i32 33, !dbg !3477
  %arraydecay13 = getelementptr inbounds [4 x float], [4 x float]* %gen_color12, i64 0, i64 0, !dbg !3476
  call void @copy_v4_v4(float* %arraydecay11, float* %arraydecay13), !dbg !3478
  %25 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3479
  %animspeed = getelementptr inbounds %struct.Image, %struct.Image* %25, i32 0, i32 26, !dbg !3480
  %26 = load i16, i16* %animspeed, align 8, !dbg !3480
  %27 = load %struct.Image*, %struct.Image** %nima, align 8, !dbg !3481
  %animspeed14 = getelementptr inbounds %struct.Image, %struct.Image* %27, i32 0, i32 26, !dbg !3482
  store i16 %26, i16* %animspeed14, align 8, !dbg !3483
  %28 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3484
  %aspx = getelementptr inbounds %struct.Image, %struct.Image* %28, i32 0, i32 34, !dbg !3485
  %29 = load float, float* %aspx, align 8, !dbg !3485
  %30 = load %struct.Image*, %struct.Image** %nima, align 8, !dbg !3486
  %aspx15 = getelementptr inbounds %struct.Image, %struct.Image* %30, i32 0, i32 34, !dbg !3487
  store float %29, float* %aspx15, align 8, !dbg !3488
  %31 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3489
  %aspy = getelementptr inbounds %struct.Image, %struct.Image* %31, i32 0, i32 35, !dbg !3490
  %32 = load float, float* %aspy, align 4, !dbg !3490
  %33 = load %struct.Image*, %struct.Image** %nima, align 8, !dbg !3491
  %aspy16 = getelementptr inbounds %struct.Image, %struct.Image* %33, i32 0, i32 35, !dbg !3492
  store float %32, float* %aspy16, align 4, !dbg !3493
  %34 = load %struct.Image*, %struct.Image** %nima, align 8, !dbg !3494
  %colorspace_settings = getelementptr inbounds %struct.Image, %struct.Image* %34, i32 0, i32 36, !dbg !3495
  %35 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3496
  %colorspace_settings17 = getelementptr inbounds %struct.Image, %struct.Image* %35, i32 0, i32 36, !dbg !3497
  call void @BKE_color_managed_colorspace_settings_copy(%struct.ColorManagedColorspaceSettings* %colorspace_settings, %struct.ColorManagedColorspaceSettings* %colorspace_settings17), !dbg !3498
  %36 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3499
  %packedfile = getelementptr inbounds %struct.Image, %struct.Image* %36, i32 0, i32 22, !dbg !3501
  %37 = load %struct.PackedFile*, %struct.PackedFile** %packedfile, align 8, !dbg !3501
  %tobool = icmp ne %struct.PackedFile* %37, null, !dbg !3499
  br i1 %tobool, label %if.then, label %if.end, !dbg !3502

if.then:                                          ; preds = %entry
  %38 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3503
  %packedfile18 = getelementptr inbounds %struct.Image, %struct.Image* %38, i32 0, i32 22, !dbg !3504
  %39 = load %struct.PackedFile*, %struct.PackedFile** %packedfile18, align 8, !dbg !3504
  %call19 = call %struct.PackedFile* @dupPackedFile(%struct.PackedFile* %39), !dbg !3505
  %40 = load %struct.Image*, %struct.Image** %nima, align 8, !dbg !3506
  %packedfile20 = getelementptr inbounds %struct.Image, %struct.Image* %40, i32 0, i32 22, !dbg !3507
  store %struct.PackedFile* %call19, %struct.PackedFile** %packedfile20, align 8, !dbg !3508
  br label %if.end, !dbg !3506

if.end:                                           ; preds = %if.then, %entry
  %41 = load %struct.Image*, %struct.Image** %nima, align 8, !dbg !3509
  ret %struct.Image* %41, !dbg !3510
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.Image* @image_alloc(%struct.Main* %bmain, i8* %name, i16 signext %source, i16 signext %type) #0 !dbg !3511 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %name.addr = alloca i8*, align 8
  %source.addr = alloca i16, align 2
  %type.addr = alloca i16, align 2
  %ima = alloca %struct.Image*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !3514, metadata !DIExpression()), !dbg !3515
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3516, metadata !DIExpression()), !dbg !3517
  store i16 %source, i16* %source.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %source.addr, metadata !3518, metadata !DIExpression()), !dbg !3519
  store i16 %type, i16* %type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %type.addr, metadata !3520, metadata !DIExpression()), !dbg !3521
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !3522, metadata !DIExpression()), !dbg !3523
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !3524
  %1 = load i8*, i8** %name.addr, align 8, !dbg !3525
  %call = call i8* @BKE_libblock_alloc(%struct.Main* %0, i16 signext 19785, i8* %1), !dbg !3526
  %2 = bitcast i8* %call to %struct.Image*, !dbg !3526
  store %struct.Image* %2, %struct.Image** %ima, align 8, !dbg !3527
  %3 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !3528
  %tobool = icmp ne %struct.Image* %3, null, !dbg !3528
  br i1 %tobool, label %if.then, label %if.end7, !dbg !3530

if.then:                                          ; preds = %entry
  %4 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !3531
  %ok = getelementptr inbounds %struct.Image, %struct.Image* %4, i32 0, i32 9, !dbg !3533
  store i16 1, i16* %ok, align 4, !dbg !3534
  %5 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !3535
  %yrep = getelementptr inbounds %struct.Image, %struct.Image* %5, i32 0, i32 17, !dbg !3536
  store i16 1, i16* %yrep, align 2, !dbg !3537
  %6 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !3538
  %xrep = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 16, !dbg !3539
  store i16 1, i16* %xrep, align 4, !dbg !3540
  %7 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !3541
  %aspy = getelementptr inbounds %struct.Image, %struct.Image* %7, i32 0, i32 35, !dbg !3542
  store float 1.000000e+00, float* %aspy, align 4, !dbg !3543
  %8 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !3544
  %aspx = getelementptr inbounds %struct.Image, %struct.Image* %8, i32 0, i32 34, !dbg !3545
  store float 1.000000e+00, float* %aspx, align 8, !dbg !3546
  %9 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !3547
  %gen_x = getelementptr inbounds %struct.Image, %struct.Image* %9, i32 0, i32 28, !dbg !3548
  store i32 1024, i32* %gen_x, align 4, !dbg !3549
  %10 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !3550
  %gen_y = getelementptr inbounds %struct.Image, %struct.Image* %10, i32 0, i32 29, !dbg !3551
  store i32 1024, i32* %gen_y, align 8, !dbg !3552
  %11 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !3553
  %gen_type = getelementptr inbounds %struct.Image, %struct.Image* %11, i32 0, i32 30, !dbg !3554
  store i8 1, i8* %gen_type, align 4, !dbg !3555
  %12 = load i16, i16* %source.addr, align 2, !dbg !3556
  %13 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !3557
  %source1 = getelementptr inbounds %struct.Image, %struct.Image* %13, i32 0, i32 11, !dbg !3558
  store i16 %12, i16* %source1, align 8, !dbg !3559
  %14 = load i16, i16* %type.addr, align 2, !dbg !3560
  %15 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !3561
  %type2 = getelementptr inbounds %struct.Image, %struct.Image* %15, i32 0, i32 12, !dbg !3562
  store i16 %14, i16* %type2, align 2, !dbg !3563
  %16 = load i16, i16* %source.addr, align 2, !dbg !3564
  %conv = sext i16 %16 to i32, !dbg !3564
  %cmp = icmp eq i32 %conv, 5, !dbg !3566
  br i1 %cmp, label %if.then4, label %if.end, !dbg !3567

if.then4:                                         ; preds = %if.then
  %17 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !3568
  %flag = getelementptr inbounds %struct.Image, %struct.Image* %17, i32 0, i32 10, !dbg !3569
  %18 = load i16, i16* %flag, align 2, !dbg !3570
  %conv5 = sext i16 %18 to i32, !dbg !3570
  %or = or i32 %conv5, 2048, !dbg !3570
  %conv6 = trunc i32 %or to i16, !dbg !3570
  store i16 %conv6, i16* %flag, align 2, !dbg !3570
  br label %if.end, !dbg !3568

if.end:                                           ; preds = %if.then4, %if.then
  %19 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !3571
  %colorspace_settings = getelementptr inbounds %struct.Image, %struct.Image* %19, i32 0, i32 36, !dbg !3572
  call void @BKE_color_managed_colorspace_settings_init(%struct.ColorManagedColorspaceSettings* %colorspace_settings), !dbg !3573
  br label %if.end7, !dbg !3574

if.end7:                                          ; preds = %if.end, %entry
  %20 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !3575
  ret %struct.Image* %20, !dbg !3576
}

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #1

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_v4(float* %r, float* %a) #0 !dbg !3577 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3583, metadata !DIExpression()), !dbg !3584
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3585, metadata !DIExpression()), !dbg !3586
  %0 = load float*, float** %a.addr, align 8, !dbg !3587
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3587
  %1 = load float, float* %arrayidx, align 4, !dbg !3587
  %2 = load float*, float** %r.addr, align 8, !dbg !3588
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3588
  store float %1, float* %arrayidx1, align 4, !dbg !3589
  %3 = load float*, float** %a.addr, align 8, !dbg !3590
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !3590
  %4 = load float, float* %arrayidx2, align 4, !dbg !3590
  %5 = load float*, float** %r.addr, align 8, !dbg !3591
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !3591
  store float %4, float* %arrayidx3, align 4, !dbg !3592
  %6 = load float*, float** %a.addr, align 8, !dbg !3593
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !3593
  %7 = load float, float* %arrayidx4, align 4, !dbg !3593
  %8 = load float*, float** %r.addr, align 8, !dbg !3594
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !3594
  store float %7, float* %arrayidx5, align 4, !dbg !3595
  %9 = load float*, float** %a.addr, align 8, !dbg !3596
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 3, !dbg !3596
  %10 = load float, float* %arrayidx6, align 4, !dbg !3596
  %11 = load float*, float** %r.addr, align 8, !dbg !3597
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 3, !dbg !3597
  store float %10, float* %arrayidx7, align 4, !dbg !3598
  ret void, !dbg !3599
}

declare dso_local void @BKE_color_managed_colorspace_settings_copy(%struct.ColorManagedColorspaceSettings*, %struct.ColorManagedColorspaceSettings*) #1

declare dso_local %struct.PackedFile* @dupPackedFile(%struct.PackedFile*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_make_local(%struct.Image* %ima) #0 !dbg !3600 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %bmain = alloca %struct.Main*, align 8
  %tex = alloca %struct.Tex*, align 8
  %brush = alloca %struct.Brush*, align 8
  %me = alloca %struct.Mesh*, align 8
  %is_local = alloca i8, align 1
  %is_lib = alloca i8, align 1
  %tface = alloca %struct.MTFace*, align 8
  %a = alloca i32, align 4
  %i = alloca i32, align 4
  %mtpoly67 = alloca %struct.MTexPoly*, align 8
  %a68 = alloca i32, align 4
  %i69 = alloca i32, align 4
  %ima_new = alloca %struct.Image*, align 8
  %tface187 = alloca %struct.MTFace*, align 8
  %a188 = alloca i32, align 4
  %i189 = alloca i32, align 4
  %mtpoly241 = alloca %struct.MTexPoly*, align 8
  %a242 = alloca i32, align 4
  %i243 = alloca i32, align 4
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !3603, metadata !DIExpression()), !dbg !3604
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !3605, metadata !DIExpression()), !dbg !3606
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !3607
  store %struct.Main* %0, %struct.Main** %bmain, align 8, !dbg !3606
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex, metadata !3608, metadata !DIExpression()), !dbg !3611
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !3612, metadata !DIExpression()), !dbg !3615
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !3616, metadata !DIExpression()), !dbg !3806
  call void @llvm.dbg.declare(metadata i8* %is_local, metadata !3807, metadata !DIExpression()), !dbg !3808
  store i8 0, i8* %is_local, align 1, !dbg !3808
  call void @llvm.dbg.declare(metadata i8* %is_lib, metadata !3809, metadata !DIExpression()), !dbg !3810
  store i8 0, i8* %is_lib, align 1, !dbg !3810
  %1 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3811
  %id = getelementptr inbounds %struct.Image, %struct.Image* %1, i32 0, i32 0, !dbg !3813
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !3814
  %2 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !3814
  %cmp = icmp eq %struct.Library* %2, null, !dbg !3815
  br i1 %cmp, label %if.then, label %if.end, !dbg !3816

if.then:                                          ; preds = %entry
  br label %if.end296, !dbg !3817

if.end:                                           ; preds = %entry
  %3 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3818
  %tex1 = getelementptr inbounds %struct.Main, %struct.Main* %3, i32 0, i32 18, !dbg !3820
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %tex1, i32 0, i32 0, !dbg !3821
  %4 = load i8*, i8** %first, align 8, !dbg !3821
  %5 = bitcast i8* %4 to %struct.Tex*, !dbg !3818
  store %struct.Tex* %5, %struct.Tex** %tex, align 8, !dbg !3822
  br label %for.cond, !dbg !3823

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !3824
  %tobool = icmp ne %struct.Tex* %6, null, !dbg !3826
  br i1 %tobool, label %for.body, label %for.end, !dbg !3826

for.body:                                         ; preds = %for.cond
  %7 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !3827
  %ima2 = getelementptr inbounds %struct.Tex, %struct.Tex* %7, i32 0, i32 54, !dbg !3830
  %8 = load %struct.Image*, %struct.Image** %ima2, align 8, !dbg !3830
  %9 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3831
  %cmp3 = icmp eq %struct.Image* %8, %9, !dbg !3832
  br i1 %cmp3, label %if.then4, label %if.end10, !dbg !3833

if.then4:                                         ; preds = %for.body
  %10 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !3834
  %id5 = getelementptr inbounds %struct.Tex, %struct.Tex* %10, i32 0, i32 0, !dbg !3837
  %lib6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 3, !dbg !3838
  %11 = load %struct.Library*, %struct.Library** %lib6, align 8, !dbg !3838
  %tobool7 = icmp ne %struct.Library* %11, null, !dbg !3834
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !3839

if.then8:                                         ; preds = %if.then4
  store i8 1, i8* %is_lib, align 1, !dbg !3840
  br label %if.end9, !dbg !3841

if.else:                                          ; preds = %if.then4
  store i8 1, i8* %is_local, align 1, !dbg !3842
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then8
  br label %if.end10, !dbg !3843

if.end10:                                         ; preds = %if.end9, %for.body
  br label %for.inc, !dbg !3844

for.inc:                                          ; preds = %if.end10
  %12 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !3845
  %id11 = getelementptr inbounds %struct.Tex, %struct.Tex* %12, i32 0, i32 0, !dbg !3846
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id11, i32 0, i32 0, !dbg !3847
  %13 = load i8*, i8** %next, align 8, !dbg !3847
  %14 = bitcast i8* %13 to %struct.Tex*, !dbg !3845
  store %struct.Tex* %14, %struct.Tex** %tex, align 8, !dbg !3848
  br label %for.cond, !dbg !3849, !llvm.loop !3850

for.end:                                          ; preds = %for.cond
  %15 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3852
  %brush12 = getelementptr inbounds %struct.Main, %struct.Main* %15, i32 0, i32 36, !dbg !3854
  %first13 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %brush12, i32 0, i32 0, !dbg !3855
  %16 = load i8*, i8** %first13, align 8, !dbg !3855
  %17 = bitcast i8* %16 to %struct.Brush*, !dbg !3852
  store %struct.Brush* %17, %struct.Brush** %brush, align 8, !dbg !3856
  br label %for.cond14, !dbg !3857

for.cond14:                                       ; preds = %for.inc26, %for.end
  %18 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !3858
  %tobool15 = icmp ne %struct.Brush* %18, null, !dbg !3860
  br i1 %tobool15, label %for.body16, label %for.end29, !dbg !3860

for.body16:                                       ; preds = %for.cond14
  %19 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !3861
  %clone = getelementptr inbounds %struct.Brush, %struct.Brush* %19, i32 0, i32 1, !dbg !3864
  %image = getelementptr inbounds %struct.BrushClone, %struct.BrushClone* %clone, i32 0, i32 0, !dbg !3865
  %20 = load %struct.Image*, %struct.Image** %image, align 8, !dbg !3865
  %21 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3866
  %cmp17 = icmp eq %struct.Image* %20, %21, !dbg !3867
  br i1 %cmp17, label %if.then18, label %if.end25, !dbg !3868

if.then18:                                        ; preds = %for.body16
  %22 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !3869
  %id19 = getelementptr inbounds %struct.Brush, %struct.Brush* %22, i32 0, i32 0, !dbg !3872
  %lib20 = getelementptr inbounds %struct.ID, %struct.ID* %id19, i32 0, i32 3, !dbg !3873
  %23 = load %struct.Library*, %struct.Library** %lib20, align 8, !dbg !3873
  %tobool21 = icmp ne %struct.Library* %23, null, !dbg !3869
  br i1 %tobool21, label %if.then22, label %if.else23, !dbg !3874

if.then22:                                        ; preds = %if.then18
  store i8 1, i8* %is_lib, align 1, !dbg !3875
  br label %if.end24, !dbg !3876

if.else23:                                        ; preds = %if.then18
  store i8 1, i8* %is_local, align 1, !dbg !3877
  br label %if.end24

if.end24:                                         ; preds = %if.else23, %if.then22
  br label %if.end25, !dbg !3878

if.end25:                                         ; preds = %if.end24, %for.body16
  br label %for.inc26, !dbg !3879

for.inc26:                                        ; preds = %if.end25
  %24 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !3880
  %id27 = getelementptr inbounds %struct.Brush, %struct.Brush* %24, i32 0, i32 0, !dbg !3881
  %next28 = getelementptr inbounds %struct.ID, %struct.ID* %id27, i32 0, i32 0, !dbg !3882
  %25 = load i8*, i8** %next28, align 8, !dbg !3882
  %26 = bitcast i8* %25 to %struct.Brush*, !dbg !3880
  store %struct.Brush* %26, %struct.Brush** %brush, align 8, !dbg !3883
  br label %for.cond14, !dbg !3884, !llvm.loop !3885

for.end29:                                        ; preds = %for.cond14
  %27 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3887
  %mesh = getelementptr inbounds %struct.Main, %struct.Main* %27, i32 0, i32 14, !dbg !3889
  %first30 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mesh, i32 0, i32 0, !dbg !3890
  %28 = load i8*, i8** %first30, align 8, !dbg !3890
  %29 = bitcast i8* %28 to %struct.Mesh*, !dbg !3887
  store %struct.Mesh* %29, %struct.Mesh** %me, align 8, !dbg !3891
  br label %for.cond31, !dbg !3892

for.cond31:                                       ; preds = %for.inc108, %for.end29
  %30 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3893
  %tobool32 = icmp ne %struct.Mesh* %30, null, !dbg !3895
  br i1 %tobool32, label %for.body33, label %for.end111, !dbg !3895

for.body33:                                       ; preds = %for.cond31
  %31 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3896
  %mtface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %31, i32 0, i32 13, !dbg !3899
  %32 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !3899
  %tobool34 = icmp ne %struct.MTFace* %32, null, !dbg !3896
  br i1 %tobool34, label %if.then35, label %if.end64, !dbg !3900

if.then35:                                        ; preds = %for.body33
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tface, metadata !3901, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3904, metadata !DIExpression()), !dbg !3905
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3906, metadata !DIExpression()), !dbg !3907
  store i32 0, i32* %i, align 4, !dbg !3908
  br label %for.cond36, !dbg !3910

for.cond36:                                       ; preds = %for.inc61, %if.then35
  %33 = load i32, i32* %i, align 4, !dbg !3911
  %34 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3913
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %34, i32 0, i32 23, !dbg !3914
  %totlayer = getelementptr inbounds %struct.CustomData, %struct.CustomData* %fdata, i32 0, i32 2, !dbg !3915
  %35 = load i32, i32* %totlayer, align 4, !dbg !3915
  %cmp37 = icmp slt i32 %33, %35, !dbg !3916
  br i1 %cmp37, label %for.body38, label %for.end63, !dbg !3917

for.body38:                                       ; preds = %for.cond36
  %36 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3918
  %fdata39 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %36, i32 0, i32 23, !dbg !3921
  %layers = getelementptr inbounds %struct.CustomData, %struct.CustomData* %fdata39, i32 0, i32 0, !dbg !3922
  %37 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers, align 8, !dbg !3922
  %38 = load i32, i32* %i, align 4, !dbg !3923
  %idxprom = sext i32 %38 to i64, !dbg !3918
  %arrayidx = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %37, i64 %idxprom, !dbg !3918
  %type = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx, i32 0, i32 0, !dbg !3924
  %39 = load i32, i32* %type, align 8, !dbg !3924
  %cmp40 = icmp eq i32 %39, 5, !dbg !3925
  br i1 %cmp40, label %if.then41, label %if.end60, !dbg !3926

if.then41:                                        ; preds = %for.body38
  %40 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3927
  %fdata42 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %40, i32 0, i32 23, !dbg !3929
  %layers43 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %fdata42, i32 0, i32 0, !dbg !3930
  %41 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers43, align 8, !dbg !3930
  %42 = load i32, i32* %i, align 4, !dbg !3931
  %idxprom44 = sext i32 %42 to i64, !dbg !3927
  %arrayidx45 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %41, i64 %idxprom44, !dbg !3927
  %data = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx45, i32 0, i32 9, !dbg !3932
  %43 = load i8*, i8** %data, align 8, !dbg !3932
  %44 = bitcast i8* %43 to %struct.MTFace*, !dbg !3933
  store %struct.MTFace* %44, %struct.MTFace** %tface, align 8, !dbg !3934
  store i32 0, i32* %a, align 4, !dbg !3935
  br label %for.cond46, !dbg !3937

for.cond46:                                       ; preds = %for.inc58, %if.then41
  %45 = load i32, i32* %a, align 4, !dbg !3938
  %46 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3940
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %46, i32 0, i32 28, !dbg !3941
  %47 = load i32, i32* %totface, align 8, !dbg !3941
  %cmp47 = icmp slt i32 %45, %47, !dbg !3942
  br i1 %cmp47, label %for.body48, label %for.end59, !dbg !3943

for.body48:                                       ; preds = %for.cond46
  %48 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !3944
  %tpage = getelementptr inbounds %struct.MTFace, %struct.MTFace* %48, i32 0, i32 1, !dbg !3947
  %49 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !3947
  %50 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3948
  %cmp49 = icmp eq %struct.Image* %49, %50, !dbg !3949
  br i1 %cmp49, label %if.then50, label %if.end57, !dbg !3950

if.then50:                                        ; preds = %for.body48
  %51 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3951
  %id51 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %51, i32 0, i32 0, !dbg !3954
  %lib52 = getelementptr inbounds %struct.ID, %struct.ID* %id51, i32 0, i32 3, !dbg !3955
  %52 = load %struct.Library*, %struct.Library** %lib52, align 8, !dbg !3955
  %tobool53 = icmp ne %struct.Library* %52, null, !dbg !3951
  br i1 %tobool53, label %if.then54, label %if.else55, !dbg !3956

if.then54:                                        ; preds = %if.then50
  store i8 1, i8* %is_lib, align 1, !dbg !3957
  br label %if.end56, !dbg !3958

if.else55:                                        ; preds = %if.then50
  store i8 1, i8* %is_local, align 1, !dbg !3959
  br label %if.end56

if.end56:                                         ; preds = %if.else55, %if.then54
  br label %if.end57, !dbg !3960

if.end57:                                         ; preds = %if.end56, %for.body48
  br label %for.inc58, !dbg !3961

for.inc58:                                        ; preds = %if.end57
  %53 = load i32, i32* %a, align 4, !dbg !3962
  %inc = add nsw i32 %53, 1, !dbg !3962
  store i32 %inc, i32* %a, align 4, !dbg !3962
  %54 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !3963
  %incdec.ptr = getelementptr inbounds %struct.MTFace, %struct.MTFace* %54, i32 1, !dbg !3963
  store %struct.MTFace* %incdec.ptr, %struct.MTFace** %tface, align 8, !dbg !3963
  br label %for.cond46, !dbg !3964, !llvm.loop !3965

for.end59:                                        ; preds = %for.cond46
  br label %if.end60, !dbg !3967

if.end60:                                         ; preds = %for.end59, %for.body38
  br label %for.inc61, !dbg !3968

for.inc61:                                        ; preds = %if.end60
  %55 = load i32, i32* %i, align 4, !dbg !3969
  %inc62 = add nsw i32 %55, 1, !dbg !3969
  store i32 %inc62, i32* %i, align 4, !dbg !3969
  br label %for.cond36, !dbg !3970, !llvm.loop !3971

for.end63:                                        ; preds = %for.cond36
  br label %if.end64, !dbg !3973

if.end64:                                         ; preds = %for.end63, %for.body33
  %56 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3974
  %mtpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %56, i32 0, i32 8, !dbg !3976
  %57 = load %struct.MTexPoly*, %struct.MTexPoly** %mtpoly, align 8, !dbg !3976
  %tobool65 = icmp ne %struct.MTexPoly* %57, null, !dbg !3974
  br i1 %tobool65, label %if.then66, label %if.end107, !dbg !3977

if.then66:                                        ; preds = %if.end64
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %mtpoly67, metadata !3978, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.declare(metadata i32* %a68, metadata !3981, metadata !DIExpression()), !dbg !3982
  call void @llvm.dbg.declare(metadata i32* %i69, metadata !3983, metadata !DIExpression()), !dbg !3984
  store i32 0, i32* %i69, align 4, !dbg !3985
  br label %for.cond70, !dbg !3987

for.cond70:                                       ; preds = %for.inc104, %if.then66
  %58 = load i32, i32* %i69, align 4, !dbg !3988
  %59 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3990
  %pdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %59, i32 0, i32 24, !dbg !3991
  %totlayer71 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %pdata, i32 0, i32 2, !dbg !3992
  %60 = load i32, i32* %totlayer71, align 4, !dbg !3992
  %cmp72 = icmp slt i32 %58, %60, !dbg !3993
  br i1 %cmp72, label %for.body73, label %for.end106, !dbg !3994

for.body73:                                       ; preds = %for.cond70
  %61 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3995
  %pdata74 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %61, i32 0, i32 24, !dbg !3998
  %layers75 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %pdata74, i32 0, i32 0, !dbg !3999
  %62 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers75, align 8, !dbg !3999
  %63 = load i32, i32* %i69, align 4, !dbg !4000
  %idxprom76 = sext i32 %63 to i64, !dbg !3995
  %arrayidx77 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %62, i64 %idxprom76, !dbg !3995
  %type78 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx77, i32 0, i32 0, !dbg !4001
  %64 = load i32, i32* %type78, align 8, !dbg !4001
  %cmp79 = icmp eq i32 %64, 15, !dbg !4002
  br i1 %cmp79, label %if.then80, label %if.end103, !dbg !4003

if.then80:                                        ; preds = %for.body73
  %65 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4004
  %pdata81 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %65, i32 0, i32 24, !dbg !4006
  %layers82 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %pdata81, i32 0, i32 0, !dbg !4007
  %66 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers82, align 8, !dbg !4007
  %67 = load i32, i32* %i69, align 4, !dbg !4008
  %idxprom83 = sext i32 %67 to i64, !dbg !4004
  %arrayidx84 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %66, i64 %idxprom83, !dbg !4004
  %data85 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx84, i32 0, i32 9, !dbg !4009
  %68 = load i8*, i8** %data85, align 8, !dbg !4009
  %69 = bitcast i8* %68 to %struct.MTexPoly*, !dbg !4010
  store %struct.MTexPoly* %69, %struct.MTexPoly** %mtpoly67, align 8, !dbg !4011
  store i32 0, i32* %a68, align 4, !dbg !4012
  br label %for.cond86, !dbg !4014

for.cond86:                                       ; preds = %for.inc99, %if.then80
  %70 = load i32, i32* %a68, align 4, !dbg !4015
  %71 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4017
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %71, i32 0, i32 30, !dbg !4018
  %72 = load i32, i32* %totpoly, align 8, !dbg !4018
  %cmp87 = icmp slt i32 %70, %72, !dbg !4019
  br i1 %cmp87, label %for.body88, label %for.end102, !dbg !4020

for.body88:                                       ; preds = %for.cond86
  %73 = load %struct.MTexPoly*, %struct.MTexPoly** %mtpoly67, align 8, !dbg !4021
  %tpage89 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %73, i32 0, i32 0, !dbg !4024
  %74 = load %struct.Image*, %struct.Image** %tpage89, align 8, !dbg !4024
  %75 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4025
  %cmp90 = icmp eq %struct.Image* %74, %75, !dbg !4026
  br i1 %cmp90, label %if.then91, label %if.end98, !dbg !4027

if.then91:                                        ; preds = %for.body88
  %76 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4028
  %id92 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %76, i32 0, i32 0, !dbg !4031
  %lib93 = getelementptr inbounds %struct.ID, %struct.ID* %id92, i32 0, i32 3, !dbg !4032
  %77 = load %struct.Library*, %struct.Library** %lib93, align 8, !dbg !4032
  %tobool94 = icmp ne %struct.Library* %77, null, !dbg !4028
  br i1 %tobool94, label %if.then95, label %if.else96, !dbg !4033

if.then95:                                        ; preds = %if.then91
  store i8 1, i8* %is_lib, align 1, !dbg !4034
  br label %if.end97, !dbg !4035

if.else96:                                        ; preds = %if.then91
  store i8 1, i8* %is_local, align 1, !dbg !4036
  br label %if.end97

if.end97:                                         ; preds = %if.else96, %if.then95
  br label %if.end98, !dbg !4037

if.end98:                                         ; preds = %if.end97, %for.body88
  br label %for.inc99, !dbg !4038

for.inc99:                                        ; preds = %if.end98
  %78 = load i32, i32* %a68, align 4, !dbg !4039
  %inc100 = add nsw i32 %78, 1, !dbg !4039
  store i32 %inc100, i32* %a68, align 4, !dbg !4039
  %79 = load %struct.MTexPoly*, %struct.MTexPoly** %mtpoly67, align 8, !dbg !4040
  %incdec.ptr101 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %79, i32 1, !dbg !4040
  store %struct.MTexPoly* %incdec.ptr101, %struct.MTexPoly** %mtpoly67, align 8, !dbg !4040
  br label %for.cond86, !dbg !4041, !llvm.loop !4042

for.end102:                                       ; preds = %for.cond86
  br label %if.end103, !dbg !4044

if.end103:                                        ; preds = %for.end102, %for.body73
  br label %for.inc104, !dbg !4045

for.inc104:                                       ; preds = %if.end103
  %80 = load i32, i32* %i69, align 4, !dbg !4046
  %inc105 = add nsw i32 %80, 1, !dbg !4046
  store i32 %inc105, i32* %i69, align 4, !dbg !4046
  br label %for.cond70, !dbg !4047, !llvm.loop !4048

for.end106:                                       ; preds = %for.cond70
  br label %if.end107, !dbg !4050

if.end107:                                        ; preds = %for.end106, %if.end64
  br label %for.inc108, !dbg !4051

for.inc108:                                       ; preds = %if.end107
  %81 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4052
  %id109 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %81, i32 0, i32 0, !dbg !4053
  %next110 = getelementptr inbounds %struct.ID, %struct.ID* %id109, i32 0, i32 0, !dbg !4054
  %82 = load i8*, i8** %next110, align 8, !dbg !4054
  %83 = bitcast i8* %82 to %struct.Mesh*, !dbg !4052
  store %struct.Mesh* %83, %struct.Mesh** %me, align 8, !dbg !4055
  br label %for.cond31, !dbg !4056, !llvm.loop !4057

for.end111:                                       ; preds = %for.cond31
  %84 = load i8, i8* %is_local, align 1, !dbg !4059
  %conv = zext i8 %84 to i32, !dbg !4059
  %tobool112 = icmp ne i32 %conv, 0, !dbg !4059
  br i1 %tobool112, label %land.lhs.true, label %if.else118, !dbg !4061

land.lhs.true:                                    ; preds = %for.end111
  %85 = load i8, i8* %is_lib, align 1, !dbg !4062
  %conv113 = zext i8 %85 to i32, !dbg !4062
  %cmp114 = icmp eq i32 %conv113, 0, !dbg !4063
  br i1 %cmp114, label %if.then116, label %if.else118, !dbg !4064

if.then116:                                       ; preds = %land.lhs.true
  %86 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !4065
  %87 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4067
  %id117 = getelementptr inbounds %struct.Image, %struct.Image* %87, i32 0, i32 0, !dbg !4068
  call void @id_clear_lib_data(%struct.Main* %86, %struct.ID* %id117), !dbg !4069
  %88 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4070
  call void @extern_local_image(%struct.Image* %88), !dbg !4071
  br label %if.end296, !dbg !4072

if.else118:                                       ; preds = %land.lhs.true, %for.end111
  %89 = load i8, i8* %is_local, align 1, !dbg !4073
  %conv119 = zext i8 %89 to i32, !dbg !4073
  %tobool120 = icmp ne i32 %conv119, 0, !dbg !4073
  br i1 %tobool120, label %land.lhs.true121, label %if.end295, !dbg !4075

land.lhs.true121:                                 ; preds = %if.else118
  %90 = load i8, i8* %is_lib, align 1, !dbg !4076
  %conv122 = zext i8 %90 to i32, !dbg !4076
  %tobool123 = icmp ne i32 %conv122, 0, !dbg !4076
  br i1 %tobool123, label %if.then124, label %if.end295, !dbg !4077

if.then124:                                       ; preds = %land.lhs.true121
  call void @llvm.dbg.declare(metadata %struct.Image** %ima_new, metadata !4078, metadata !DIExpression()), !dbg !4080
  %91 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !4081
  %92 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4082
  %call = call %struct.Image* @BKE_image_copy(%struct.Main* %91, %struct.Image* %92), !dbg !4083
  store %struct.Image* %call, %struct.Image** %ima_new, align 8, !dbg !4080
  %93 = load %struct.Image*, %struct.Image** %ima_new, align 8, !dbg !4084
  %id125 = getelementptr inbounds %struct.Image, %struct.Image* %93, i32 0, i32 0, !dbg !4085
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id125, i32 0, i32 6, !dbg !4086
  store i32 0, i32* %us, align 4, !dbg !4087
  %94 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !4088
  %95 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4089
  %id126 = getelementptr inbounds %struct.Image, %struct.Image* %95, i32 0, i32 0, !dbg !4090
  %lib127 = getelementptr inbounds %struct.ID, %struct.ID* %id126, i32 0, i32 3, !dbg !4091
  %96 = load %struct.Library*, %struct.Library** %lib127, align 8, !dbg !4091
  %97 = load %struct.Image*, %struct.Image** %ima_new, align 8, !dbg !4092
  %id128 = getelementptr inbounds %struct.Image, %struct.Image* %97, i32 0, i32 0, !dbg !4093
  call void @BKE_id_lib_local_paths(%struct.Main* %94, %struct.Library* %96, %struct.ID* %id128), !dbg !4094
  %98 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !4095
  %tex129 = getelementptr inbounds %struct.Main, %struct.Main* %98, i32 0, i32 18, !dbg !4096
  %first130 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %tex129, i32 0, i32 0, !dbg !4097
  %99 = load i8*, i8** %first130, align 8, !dbg !4097
  %100 = bitcast i8* %99 to %struct.Tex*, !dbg !4095
  store %struct.Tex* %100, %struct.Tex** %tex, align 8, !dbg !4098
  br label %while.cond, !dbg !4099

while.cond:                                       ; preds = %if.end148, %if.then124
  %101 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !4100
  %tobool131 = icmp ne %struct.Tex* %101, null, !dbg !4099
  br i1 %tobool131, label %while.body, label %while.end, !dbg !4099

while.body:                                       ; preds = %while.cond
  %102 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !4101
  %id132 = getelementptr inbounds %struct.Tex, %struct.Tex* %102, i32 0, i32 0, !dbg !4104
  %lib133 = getelementptr inbounds %struct.ID, %struct.ID* %id132, i32 0, i32 3, !dbg !4105
  %103 = load %struct.Library*, %struct.Library** %lib133, align 8, !dbg !4105
  %cmp134 = icmp eq %struct.Library* %103, null, !dbg !4106
  br i1 %cmp134, label %if.then136, label %if.end148, !dbg !4107

if.then136:                                       ; preds = %while.body
  %104 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !4108
  %ima137 = getelementptr inbounds %struct.Tex, %struct.Tex* %104, i32 0, i32 54, !dbg !4111
  %105 = load %struct.Image*, %struct.Image** %ima137, align 8, !dbg !4111
  %106 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4112
  %cmp138 = icmp eq %struct.Image* %105, %106, !dbg !4113
  br i1 %cmp138, label %if.then140, label %if.end147, !dbg !4114

if.then140:                                       ; preds = %if.then136
  %107 = load %struct.Image*, %struct.Image** %ima_new, align 8, !dbg !4115
  %108 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !4117
  %ima141 = getelementptr inbounds %struct.Tex, %struct.Tex* %108, i32 0, i32 54, !dbg !4118
  store %struct.Image* %107, %struct.Image** %ima141, align 8, !dbg !4119
  %109 = load %struct.Image*, %struct.Image** %ima_new, align 8, !dbg !4120
  %id142 = getelementptr inbounds %struct.Image, %struct.Image* %109, i32 0, i32 0, !dbg !4121
  %us143 = getelementptr inbounds %struct.ID, %struct.ID* %id142, i32 0, i32 6, !dbg !4122
  %110 = load i32, i32* %us143, align 4, !dbg !4123
  %inc144 = add nsw i32 %110, 1, !dbg !4123
  store i32 %inc144, i32* %us143, align 4, !dbg !4123
  %111 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4124
  %id145 = getelementptr inbounds %struct.Image, %struct.Image* %111, i32 0, i32 0, !dbg !4125
  %us146 = getelementptr inbounds %struct.ID, %struct.ID* %id145, i32 0, i32 6, !dbg !4126
  %112 = load i32, i32* %us146, align 4, !dbg !4127
  %dec = add nsw i32 %112, -1, !dbg !4127
  store i32 %dec, i32* %us146, align 4, !dbg !4127
  br label %if.end147, !dbg !4128

if.end147:                                        ; preds = %if.then140, %if.then136
  br label %if.end148, !dbg !4129

if.end148:                                        ; preds = %if.end147, %while.body
  %113 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !4130
  %id149 = getelementptr inbounds %struct.Tex, %struct.Tex* %113, i32 0, i32 0, !dbg !4131
  %next150 = getelementptr inbounds %struct.ID, %struct.ID* %id149, i32 0, i32 0, !dbg !4132
  %114 = load i8*, i8** %next150, align 8, !dbg !4132
  %115 = bitcast i8* %114 to %struct.Tex*, !dbg !4130
  store %struct.Tex* %115, %struct.Tex** %tex, align 8, !dbg !4133
  br label %while.cond, !dbg !4099, !llvm.loop !4134

while.end:                                        ; preds = %while.cond
  %116 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !4136
  %brush151 = getelementptr inbounds %struct.Main, %struct.Main* %116, i32 0, i32 36, !dbg !4137
  %first152 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %brush151, i32 0, i32 0, !dbg !4138
  %117 = load i8*, i8** %first152, align 8, !dbg !4138
  %118 = bitcast i8* %117 to %struct.Brush*, !dbg !4136
  store %struct.Brush* %118, %struct.Brush** %brush, align 8, !dbg !4139
  br label %while.cond153, !dbg !4140

while.cond153:                                    ; preds = %if.end175, %while.end
  %119 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !4141
  %tobool154 = icmp ne %struct.Brush* %119, null, !dbg !4140
  br i1 %tobool154, label %while.body155, label %while.end178, !dbg !4140

while.body155:                                    ; preds = %while.cond153
  %120 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !4142
  %id156 = getelementptr inbounds %struct.Brush, %struct.Brush* %120, i32 0, i32 0, !dbg !4145
  %lib157 = getelementptr inbounds %struct.ID, %struct.ID* %id156, i32 0, i32 3, !dbg !4146
  %121 = load %struct.Library*, %struct.Library** %lib157, align 8, !dbg !4146
  %cmp158 = icmp eq %struct.Library* %121, null, !dbg !4147
  br i1 %cmp158, label %if.then160, label %if.end175, !dbg !4148

if.then160:                                       ; preds = %while.body155
  %122 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !4149
  %clone161 = getelementptr inbounds %struct.Brush, %struct.Brush* %122, i32 0, i32 1, !dbg !4152
  %image162 = getelementptr inbounds %struct.BrushClone, %struct.BrushClone* %clone161, i32 0, i32 0, !dbg !4153
  %123 = load %struct.Image*, %struct.Image** %image162, align 8, !dbg !4153
  %124 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4154
  %cmp163 = icmp eq %struct.Image* %123, %124, !dbg !4155
  br i1 %cmp163, label %if.then165, label %if.end174, !dbg !4156

if.then165:                                       ; preds = %if.then160
  %125 = load %struct.Image*, %struct.Image** %ima_new, align 8, !dbg !4157
  %126 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !4159
  %clone166 = getelementptr inbounds %struct.Brush, %struct.Brush* %126, i32 0, i32 1, !dbg !4160
  %image167 = getelementptr inbounds %struct.BrushClone, %struct.BrushClone* %clone166, i32 0, i32 0, !dbg !4161
  store %struct.Image* %125, %struct.Image** %image167, align 8, !dbg !4162
  %127 = load %struct.Image*, %struct.Image** %ima_new, align 8, !dbg !4163
  %id168 = getelementptr inbounds %struct.Image, %struct.Image* %127, i32 0, i32 0, !dbg !4164
  %us169 = getelementptr inbounds %struct.ID, %struct.ID* %id168, i32 0, i32 6, !dbg !4165
  %128 = load i32, i32* %us169, align 4, !dbg !4166
  %inc170 = add nsw i32 %128, 1, !dbg !4166
  store i32 %inc170, i32* %us169, align 4, !dbg !4166
  %129 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4167
  %id171 = getelementptr inbounds %struct.Image, %struct.Image* %129, i32 0, i32 0, !dbg !4168
  %us172 = getelementptr inbounds %struct.ID, %struct.ID* %id171, i32 0, i32 6, !dbg !4169
  %130 = load i32, i32* %us172, align 4, !dbg !4170
  %dec173 = add nsw i32 %130, -1, !dbg !4170
  store i32 %dec173, i32* %us172, align 4, !dbg !4170
  br label %if.end174, !dbg !4171

if.end174:                                        ; preds = %if.then165, %if.then160
  br label %if.end175, !dbg !4172

if.end175:                                        ; preds = %if.end174, %while.body155
  %131 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !4173
  %id176 = getelementptr inbounds %struct.Brush, %struct.Brush* %131, i32 0, i32 0, !dbg !4174
  %next177 = getelementptr inbounds %struct.ID, %struct.ID* %id176, i32 0, i32 0, !dbg !4175
  %132 = load i8*, i8** %next177, align 8, !dbg !4175
  %133 = bitcast i8* %132 to %struct.Brush*, !dbg !4173
  store %struct.Brush* %133, %struct.Brush** %brush, align 8, !dbg !4176
  br label %while.cond153, !dbg !4140, !llvm.loop !4177

while.end178:                                     ; preds = %while.cond153
  %134 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !4179
  %mesh179 = getelementptr inbounds %struct.Main, %struct.Main* %134, i32 0, i32 14, !dbg !4180
  %first180 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mesh179, i32 0, i32 0, !dbg !4181
  %135 = load i8*, i8** %first180, align 8, !dbg !4181
  %136 = bitcast i8* %135 to %struct.Mesh*, !dbg !4179
  store %struct.Mesh* %136, %struct.Mesh** %me, align 8, !dbg !4182
  br label %while.cond181, !dbg !4183

while.cond181:                                    ; preds = %if.end291, %while.end178
  %137 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4184
  %tobool182 = icmp ne %struct.Mesh* %137, null, !dbg !4183
  br i1 %tobool182, label %while.body183, label %while.end294, !dbg !4183

while.body183:                                    ; preds = %while.cond181
  %138 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4185
  %mtface184 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %138, i32 0, i32 13, !dbg !4188
  %139 = load %struct.MTFace*, %struct.MTFace** %mtface184, align 8, !dbg !4188
  %tobool185 = icmp ne %struct.MTFace* %139, null, !dbg !4185
  br i1 %tobool185, label %if.then186, label %if.end237, !dbg !4189

if.then186:                                       ; preds = %while.body183
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tface187, metadata !4190, metadata !DIExpression()), !dbg !4192
  call void @llvm.dbg.declare(metadata i32* %a188, metadata !4193, metadata !DIExpression()), !dbg !4194
  call void @llvm.dbg.declare(metadata i32* %i189, metadata !4195, metadata !DIExpression()), !dbg !4196
  store i32 0, i32* %i189, align 4, !dbg !4197
  br label %for.cond190, !dbg !4199

for.cond190:                                      ; preds = %for.inc234, %if.then186
  %140 = load i32, i32* %i189, align 4, !dbg !4200
  %141 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4202
  %fdata191 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %141, i32 0, i32 23, !dbg !4203
  %totlayer192 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %fdata191, i32 0, i32 2, !dbg !4204
  %142 = load i32, i32* %totlayer192, align 4, !dbg !4204
  %cmp193 = icmp slt i32 %140, %142, !dbg !4205
  br i1 %cmp193, label %for.body195, label %for.end236, !dbg !4206

for.body195:                                      ; preds = %for.cond190
  %143 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4207
  %fdata196 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %143, i32 0, i32 23, !dbg !4210
  %layers197 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %fdata196, i32 0, i32 0, !dbg !4211
  %144 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers197, align 8, !dbg !4211
  %145 = load i32, i32* %i189, align 4, !dbg !4212
  %idxprom198 = sext i32 %145 to i64, !dbg !4207
  %arrayidx199 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %144, i64 %idxprom198, !dbg !4207
  %type200 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx199, i32 0, i32 0, !dbg !4213
  %146 = load i32, i32* %type200, align 8, !dbg !4213
  %cmp201 = icmp eq i32 %146, 5, !dbg !4214
  br i1 %cmp201, label %if.then203, label %if.end233, !dbg !4215

if.then203:                                       ; preds = %for.body195
  %147 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4216
  %fdata204 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %147, i32 0, i32 23, !dbg !4218
  %layers205 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %fdata204, i32 0, i32 0, !dbg !4219
  %148 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers205, align 8, !dbg !4219
  %149 = load i32, i32* %i189, align 4, !dbg !4220
  %idxprom206 = sext i32 %149 to i64, !dbg !4216
  %arrayidx207 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %148, i64 %idxprom206, !dbg !4216
  %data208 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx207, i32 0, i32 9, !dbg !4221
  %150 = load i8*, i8** %data208, align 8, !dbg !4221
  %151 = bitcast i8* %150 to %struct.MTFace*, !dbg !4222
  store %struct.MTFace* %151, %struct.MTFace** %tface187, align 8, !dbg !4223
  store i32 0, i32* %a188, align 4, !dbg !4224
  br label %for.cond209, !dbg !4226

for.cond209:                                      ; preds = %for.inc229, %if.then203
  %152 = load i32, i32* %a188, align 4, !dbg !4227
  %153 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4229
  %totface210 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %153, i32 0, i32 28, !dbg !4230
  %154 = load i32, i32* %totface210, align 8, !dbg !4230
  %cmp211 = icmp slt i32 %152, %154, !dbg !4231
  br i1 %cmp211, label %for.body213, label %for.end232, !dbg !4232

for.body213:                                      ; preds = %for.cond209
  %155 = load %struct.MTFace*, %struct.MTFace** %tface187, align 8, !dbg !4233
  %tpage214 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %155, i32 0, i32 1, !dbg !4236
  %156 = load %struct.Image*, %struct.Image** %tpage214, align 8, !dbg !4236
  %157 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4237
  %cmp215 = icmp eq %struct.Image* %156, %157, !dbg !4238
  br i1 %cmp215, label %if.then217, label %if.end228, !dbg !4239

if.then217:                                       ; preds = %for.body213
  %158 = load %struct.Image*, %struct.Image** %ima_new, align 8, !dbg !4240
  %159 = load %struct.MTFace*, %struct.MTFace** %tface187, align 8, !dbg !4242
  %tpage218 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %159, i32 0, i32 1, !dbg !4243
  store %struct.Image* %158, %struct.Image** %tpage218, align 8, !dbg !4244
  %160 = load %struct.Image*, %struct.Image** %ima_new, align 8, !dbg !4245
  %id219 = getelementptr inbounds %struct.Image, %struct.Image* %160, i32 0, i32 0, !dbg !4247
  %us220 = getelementptr inbounds %struct.ID, %struct.ID* %id219, i32 0, i32 6, !dbg !4248
  %161 = load i32, i32* %us220, align 4, !dbg !4248
  %cmp221 = icmp eq i32 %161, 0, !dbg !4249
  br i1 %cmp221, label %if.then223, label %if.end227, !dbg !4250

if.then223:                                       ; preds = %if.then217
  %162 = load %struct.MTFace*, %struct.MTFace** %tface187, align 8, !dbg !4251
  %tpage224 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %162, i32 0, i32 1, !dbg !4253
  %163 = load %struct.Image*, %struct.Image** %tpage224, align 8, !dbg !4253
  %id225 = getelementptr inbounds %struct.Image, %struct.Image* %163, i32 0, i32 0, !dbg !4254
  %us226 = getelementptr inbounds %struct.ID, %struct.ID* %id225, i32 0, i32 6, !dbg !4255
  store i32 1, i32* %us226, align 4, !dbg !4256
  br label %if.end227, !dbg !4257

if.end227:                                        ; preds = %if.then223, %if.then217
  %164 = load %struct.Image*, %struct.Image** %ima_new, align 8, !dbg !4258
  %165 = bitcast %struct.Image* %164 to %struct.ID*, !dbg !4259
  call void @id_lib_extern(%struct.ID* %165), !dbg !4260
  br label %if.end228, !dbg !4261

if.end228:                                        ; preds = %if.end227, %for.body213
  br label %for.inc229, !dbg !4262

for.inc229:                                       ; preds = %if.end228
  %166 = load i32, i32* %a188, align 4, !dbg !4263
  %inc230 = add nsw i32 %166, 1, !dbg !4263
  store i32 %inc230, i32* %a188, align 4, !dbg !4263
  %167 = load %struct.MTFace*, %struct.MTFace** %tface187, align 8, !dbg !4264
  %incdec.ptr231 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %167, i32 1, !dbg !4264
  store %struct.MTFace* %incdec.ptr231, %struct.MTFace** %tface187, align 8, !dbg !4264
  br label %for.cond209, !dbg !4265, !llvm.loop !4266

for.end232:                                       ; preds = %for.cond209
  br label %if.end233, !dbg !4268

if.end233:                                        ; preds = %for.end232, %for.body195
  br label %for.inc234, !dbg !4269

for.inc234:                                       ; preds = %if.end233
  %168 = load i32, i32* %i189, align 4, !dbg !4270
  %inc235 = add nsw i32 %168, 1, !dbg !4270
  store i32 %inc235, i32* %i189, align 4, !dbg !4270
  br label %for.cond190, !dbg !4271, !llvm.loop !4272

for.end236:                                       ; preds = %for.cond190
  br label %if.end237, !dbg !4274

if.end237:                                        ; preds = %for.end236, %while.body183
  %169 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4275
  %mtpoly238 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %169, i32 0, i32 8, !dbg !4277
  %170 = load %struct.MTexPoly*, %struct.MTexPoly** %mtpoly238, align 8, !dbg !4277
  %tobool239 = icmp ne %struct.MTexPoly* %170, null, !dbg !4275
  br i1 %tobool239, label %if.then240, label %if.end291, !dbg !4278

if.then240:                                       ; preds = %if.end237
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %mtpoly241, metadata !4279, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.declare(metadata i32* %a242, metadata !4282, metadata !DIExpression()), !dbg !4283
  call void @llvm.dbg.declare(metadata i32* %i243, metadata !4284, metadata !DIExpression()), !dbg !4285
  store i32 0, i32* %i243, align 4, !dbg !4286
  br label %for.cond244, !dbg !4288

for.cond244:                                      ; preds = %for.inc288, %if.then240
  %171 = load i32, i32* %i243, align 4, !dbg !4289
  %172 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4291
  %pdata245 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %172, i32 0, i32 24, !dbg !4292
  %totlayer246 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %pdata245, i32 0, i32 2, !dbg !4293
  %173 = load i32, i32* %totlayer246, align 4, !dbg !4293
  %cmp247 = icmp slt i32 %171, %173, !dbg !4294
  br i1 %cmp247, label %for.body249, label %for.end290, !dbg !4295

for.body249:                                      ; preds = %for.cond244
  %174 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4296
  %pdata250 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %174, i32 0, i32 24, !dbg !4299
  %layers251 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %pdata250, i32 0, i32 0, !dbg !4300
  %175 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers251, align 8, !dbg !4300
  %176 = load i32, i32* %i243, align 4, !dbg !4301
  %idxprom252 = sext i32 %176 to i64, !dbg !4296
  %arrayidx253 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %175, i64 %idxprom252, !dbg !4296
  %type254 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx253, i32 0, i32 0, !dbg !4302
  %177 = load i32, i32* %type254, align 8, !dbg !4302
  %cmp255 = icmp eq i32 %177, 15, !dbg !4303
  br i1 %cmp255, label %if.then257, label %if.end287, !dbg !4304

if.then257:                                       ; preds = %for.body249
  %178 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4305
  %pdata258 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %178, i32 0, i32 24, !dbg !4307
  %layers259 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %pdata258, i32 0, i32 0, !dbg !4308
  %179 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers259, align 8, !dbg !4308
  %180 = load i32, i32* %i243, align 4, !dbg !4309
  %idxprom260 = sext i32 %180 to i64, !dbg !4305
  %arrayidx261 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %179, i64 %idxprom260, !dbg !4305
  %data262 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx261, i32 0, i32 9, !dbg !4310
  %181 = load i8*, i8** %data262, align 8, !dbg !4310
  %182 = bitcast i8* %181 to %struct.MTexPoly*, !dbg !4311
  store %struct.MTexPoly* %182, %struct.MTexPoly** %mtpoly241, align 8, !dbg !4312
  store i32 0, i32* %a242, align 4, !dbg !4313
  br label %for.cond263, !dbg !4315

for.cond263:                                      ; preds = %for.inc283, %if.then257
  %183 = load i32, i32* %a242, align 4, !dbg !4316
  %184 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4318
  %totpoly264 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %184, i32 0, i32 30, !dbg !4319
  %185 = load i32, i32* %totpoly264, align 8, !dbg !4319
  %cmp265 = icmp slt i32 %183, %185, !dbg !4320
  br i1 %cmp265, label %for.body267, label %for.end286, !dbg !4321

for.body267:                                      ; preds = %for.cond263
  %186 = load %struct.MTexPoly*, %struct.MTexPoly** %mtpoly241, align 8, !dbg !4322
  %tpage268 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %186, i32 0, i32 0, !dbg !4325
  %187 = load %struct.Image*, %struct.Image** %tpage268, align 8, !dbg !4325
  %188 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4326
  %cmp269 = icmp eq %struct.Image* %187, %188, !dbg !4327
  br i1 %cmp269, label %if.then271, label %if.end282, !dbg !4328

if.then271:                                       ; preds = %for.body267
  %189 = load %struct.Image*, %struct.Image** %ima_new, align 8, !dbg !4329
  %190 = load %struct.MTexPoly*, %struct.MTexPoly** %mtpoly241, align 8, !dbg !4331
  %tpage272 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %190, i32 0, i32 0, !dbg !4332
  store %struct.Image* %189, %struct.Image** %tpage272, align 8, !dbg !4333
  %191 = load %struct.Image*, %struct.Image** %ima_new, align 8, !dbg !4334
  %id273 = getelementptr inbounds %struct.Image, %struct.Image* %191, i32 0, i32 0, !dbg !4336
  %us274 = getelementptr inbounds %struct.ID, %struct.ID* %id273, i32 0, i32 6, !dbg !4337
  %192 = load i32, i32* %us274, align 4, !dbg !4337
  %cmp275 = icmp eq i32 %192, 0, !dbg !4338
  br i1 %cmp275, label %if.then277, label %if.end281, !dbg !4339

if.then277:                                       ; preds = %if.then271
  %193 = load %struct.MTexPoly*, %struct.MTexPoly** %mtpoly241, align 8, !dbg !4340
  %tpage278 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %193, i32 0, i32 0, !dbg !4342
  %194 = load %struct.Image*, %struct.Image** %tpage278, align 8, !dbg !4342
  %id279 = getelementptr inbounds %struct.Image, %struct.Image* %194, i32 0, i32 0, !dbg !4343
  %us280 = getelementptr inbounds %struct.ID, %struct.ID* %id279, i32 0, i32 6, !dbg !4344
  store i32 1, i32* %us280, align 4, !dbg !4345
  br label %if.end281, !dbg !4346

if.end281:                                        ; preds = %if.then277, %if.then271
  %195 = load %struct.Image*, %struct.Image** %ima_new, align 8, !dbg !4347
  %196 = bitcast %struct.Image* %195 to %struct.ID*, !dbg !4348
  call void @id_lib_extern(%struct.ID* %196), !dbg !4349
  br label %if.end282, !dbg !4350

if.end282:                                        ; preds = %if.end281, %for.body267
  br label %for.inc283, !dbg !4351

for.inc283:                                       ; preds = %if.end282
  %197 = load i32, i32* %a242, align 4, !dbg !4352
  %inc284 = add nsw i32 %197, 1, !dbg !4352
  store i32 %inc284, i32* %a242, align 4, !dbg !4352
  %198 = load %struct.MTexPoly*, %struct.MTexPoly** %mtpoly241, align 8, !dbg !4353
  %incdec.ptr285 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %198, i32 1, !dbg !4353
  store %struct.MTexPoly* %incdec.ptr285, %struct.MTexPoly** %mtpoly241, align 8, !dbg !4353
  br label %for.cond263, !dbg !4354, !llvm.loop !4355

for.end286:                                       ; preds = %for.cond263
  br label %if.end287, !dbg !4357

if.end287:                                        ; preds = %for.end286, %for.body249
  br label %for.inc288, !dbg !4358

for.inc288:                                       ; preds = %if.end287
  %199 = load i32, i32* %i243, align 4, !dbg !4359
  %inc289 = add nsw i32 %199, 1, !dbg !4359
  store i32 %inc289, i32* %i243, align 4, !dbg !4359
  br label %for.cond244, !dbg !4360, !llvm.loop !4361

for.end290:                                       ; preds = %for.cond244
  br label %if.end291, !dbg !4363

if.end291:                                        ; preds = %for.end290, %if.end237
  %200 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4364
  %id292 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %200, i32 0, i32 0, !dbg !4365
  %next293 = getelementptr inbounds %struct.ID, %struct.ID* %id292, i32 0, i32 0, !dbg !4366
  %201 = load i8*, i8** %next293, align 8, !dbg !4366
  %202 = bitcast i8* %201 to %struct.Mesh*, !dbg !4364
  store %struct.Mesh* %202, %struct.Mesh** %me, align 8, !dbg !4367
  br label %while.cond181, !dbg !4183, !llvm.loop !4368

while.end294:                                     ; preds = %while.cond181
  br label %if.end295, !dbg !4370

if.end295:                                        ; preds = %while.end294, %land.lhs.true121, %if.else118
  br label %if.end296

if.end296:                                        ; preds = %if.then, %if.end295, %if.then116
  ret void, !dbg !4371
}

declare dso_local void @id_clear_lib_data(%struct.Main*, %struct.ID*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @extern_local_image(%struct.Image* %UNUSED_ima) #0 !dbg !4372 {
entry:
  %UNUSED_ima.addr = alloca %struct.Image*, align 8
  store %struct.Image* %UNUSED_ima, %struct.Image** %UNUSED_ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %UNUSED_ima.addr, metadata !4373, metadata !DIExpression()), !dbg !4374
  ret void, !dbg !4375
}

declare dso_local void @BKE_id_lib_local_paths(%struct.Main*, %struct.Library*, %struct.ID*) #1

declare dso_local void @id_lib_extern(%struct.ID*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_merge(%struct.Image* %dest, %struct.Image* %source) #0 !dbg !4376 {
entry:
  %dest.addr = alloca %struct.Image*, align 8
  %source.addr = alloca %struct.Image*, align 8
  %iter = alloca %struct.MovieCacheIter*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %key = alloca %struct.ImageCacheKey*, align 8
  store %struct.Image* %dest, %struct.Image** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %dest.addr, metadata !4379, metadata !DIExpression()), !dbg !4380
  store %struct.Image* %source, %struct.Image** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %source.addr, metadata !4381, metadata !DIExpression()), !dbg !4382
  %0 = load %struct.Image*, %struct.Image** %dest.addr, align 8, !dbg !4383
  %tobool = icmp ne %struct.Image* %0, null, !dbg !4383
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !4385

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.Image*, %struct.Image** %source.addr, align 8, !dbg !4386
  %tobool1 = icmp ne %struct.Image* %1, null, !dbg !4386
  br i1 %tobool1, label %land.lhs.true2, label %if.end10, !dbg !4387

land.lhs.true2:                                   ; preds = %land.lhs.true
  %2 = load %struct.Image*, %struct.Image** %dest.addr, align 8, !dbg !4388
  %3 = load %struct.Image*, %struct.Image** %source.addr, align 8, !dbg !4389
  %cmp = icmp ne %struct.Image* %2, %3, !dbg !4390
  br i1 %cmp, label %if.then, label %if.end10, !dbg !4391

if.then:                                          ; preds = %land.lhs.true2
  call void @BLI_spin_lock(i32* @image_spin), !dbg !4392
  %4 = load %struct.Image*, %struct.Image** %source.addr, align 8, !dbg !4394
  %cache = getelementptr inbounds %struct.Image, %struct.Image* %4, i32 0, i32 2, !dbg !4396
  %5 = load %struct.MovieCache*, %struct.MovieCache** %cache, align 8, !dbg !4396
  %cmp3 = icmp ne %struct.MovieCache* %5, null, !dbg !4397
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !4398

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.MovieCacheIter** %iter, metadata !4399, metadata !DIExpression()), !dbg !4403
  %6 = load %struct.Image*, %struct.Image** %source.addr, align 8, !dbg !4404
  %cache5 = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 2, !dbg !4405
  %7 = load %struct.MovieCache*, %struct.MovieCache** %cache5, align 8, !dbg !4405
  %call = call %struct.MovieCacheIter* @IMB_moviecacheIter_new(%struct.MovieCache* %7), !dbg !4406
  store %struct.MovieCacheIter* %call, %struct.MovieCacheIter** %iter, align 8, !dbg !4407
  br label %while.cond, !dbg !4408

while.cond:                                       ; preds = %while.body, %if.then4
  %8 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !4409
  %call6 = call zeroext i8 @IMB_moviecacheIter_done(%struct.MovieCacheIter* %8), !dbg !4410
  %tobool7 = icmp ne i8 %call6, 0, !dbg !4411
  %lnot = xor i1 %tobool7, true, !dbg !4411
  br i1 %lnot, label %while.body, label %while.end, !dbg !4408

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !4412, metadata !DIExpression()), !dbg !4414
  %9 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !4415
  %call8 = call %struct.ImBuf* @IMB_moviecacheIter_getImBuf(%struct.MovieCacheIter* %9), !dbg !4416
  store %struct.ImBuf* %call8, %struct.ImBuf** %ibuf, align 8, !dbg !4414
  call void @llvm.dbg.declare(metadata %struct.ImageCacheKey** %key, metadata !4417, metadata !DIExpression()), !dbg !4418
  %10 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !4419
  %call9 = call i8* @IMB_moviecacheIter_getUserKey(%struct.MovieCacheIter* %10), !dbg !4420
  %11 = bitcast i8* %call9 to %struct.ImageCacheKey*, !dbg !4420
  store %struct.ImageCacheKey* %11, %struct.ImageCacheKey** %key, align 8, !dbg !4418
  %12 = load %struct.Image*, %struct.Image** %dest.addr, align 8, !dbg !4421
  %13 = load %struct.ImageCacheKey*, %struct.ImageCacheKey** %key, align 8, !dbg !4422
  %index = getelementptr inbounds %struct.ImageCacheKey, %struct.ImageCacheKey* %13, i32 0, i32 0, !dbg !4423
  %14 = load i32, i32* %index, align 4, !dbg !4423
  %15 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4424
  call void @imagecache_put(%struct.Image* %12, i32 %14, %struct.ImBuf* %15), !dbg !4425
  %16 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !4426
  call void @IMB_moviecacheIter_step(%struct.MovieCacheIter* %16), !dbg !4427
  br label %while.cond, !dbg !4408, !llvm.loop !4428

while.end:                                        ; preds = %while.cond
  %17 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !4430
  call void @IMB_moviecacheIter_free(%struct.MovieCacheIter* %17), !dbg !4431
  br label %if.end, !dbg !4432

if.end:                                           ; preds = %while.end, %if.then
  call void @BLI_spin_unlock(i32* @image_spin), !dbg !4433
  %18 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !4434
  %19 = load %struct.Image*, %struct.Image** %source.addr, align 8, !dbg !4435
  %20 = bitcast %struct.Image* %19 to i8*, !dbg !4435
  call void @BKE_libblock_free(%struct.Main* %18, i8* %20), !dbg !4436
  br label %if.end10, !dbg !4437

if.end10:                                         ; preds = %if.end, %land.lhs.true2, %land.lhs.true, %entry
  ret void, !dbg !4438
}

declare dso_local void @BLI_spin_lock(i32*) #1

declare dso_local %struct.MovieCacheIter* @IMB_moviecacheIter_new(%struct.MovieCache*) #1

declare dso_local zeroext i8 @IMB_moviecacheIter_done(%struct.MovieCacheIter*) #1

declare dso_local %struct.ImBuf* @IMB_moviecacheIter_getImBuf(%struct.MovieCacheIter*) #1

declare dso_local i8* @IMB_moviecacheIter_getUserKey(%struct.MovieCacheIter*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @imagecache_put(%struct.Image* %image, i32 %index, %struct.ImBuf* %ibuf) #0 !dbg !4439 {
entry:
  %image.addr = alloca %struct.Image*, align 8
  %index.addr = alloca i32, align 4
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %key = alloca %struct.ImageCacheKey, align 4
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !4442, metadata !DIExpression()), !dbg !4443
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4444, metadata !DIExpression()), !dbg !4445
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !4446, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.declare(metadata %struct.ImageCacheKey* %key, metadata !4448, metadata !DIExpression()), !dbg !4449
  %0 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !4450
  %cache = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 2, !dbg !4452
  %1 = load %struct.MovieCache*, %struct.MovieCache** %cache, align 8, !dbg !4452
  %cmp = icmp eq %struct.MovieCache* %1, null, !dbg !4453
  br i1 %cmp, label %if.then, label %if.end, !dbg !4454

if.then:                                          ; preds = %entry
  %call = call %struct.MovieCache* @IMB_moviecache_create(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i64 0, i64 0), i32 4, i32 (i8*)* @imagecache_hashhash, i8 (i8*, i8*)* @imagecache_hashcmp), !dbg !4455
  %2 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !4457
  %cache1 = getelementptr inbounds %struct.Image, %struct.Image* %2, i32 0, i32 2, !dbg !4458
  store %struct.MovieCache* %call, %struct.MovieCache** %cache1, align 8, !dbg !4459
  %3 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !4460
  %cache2 = getelementptr inbounds %struct.Image, %struct.Image* %3, i32 0, i32 2, !dbg !4461
  %4 = load %struct.MovieCache*, %struct.MovieCache** %cache2, align 8, !dbg !4461
  call void @IMB_moviecache_set_getdata_callback(%struct.MovieCache* %4, void (i8*, i32*, i32*, i32*)* @imagecache_keydata), !dbg !4462
  br label %if.end, !dbg !4463

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %index.addr, align 4, !dbg !4464
  %index3 = getelementptr inbounds %struct.ImageCacheKey, %struct.ImageCacheKey* %key, i32 0, i32 0, !dbg !4465
  store i32 %5, i32* %index3, align 4, !dbg !4466
  %6 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !4467
  %cache4 = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 2, !dbg !4468
  %7 = load %struct.MovieCache*, %struct.MovieCache** %cache4, align 8, !dbg !4468
  %8 = bitcast %struct.ImageCacheKey* %key to i8*, !dbg !4469
  %9 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4470
  call void @IMB_moviecache_put(%struct.MovieCache* %7, i8* %8, %struct.ImBuf* %9), !dbg !4471
  ret void, !dbg !4472
}

declare dso_local void @IMB_moviecacheIter_step(%struct.MovieCacheIter*) #1

declare dso_local void @IMB_moviecacheIter_free(%struct.MovieCacheIter*) #1

declare dso_local void @BLI_spin_unlock(i32*) #1

declare dso_local void @BKE_libblock_free(%struct.Main*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_image_scale(%struct.Image* %image, i32 %width, i32 %height) #0 !dbg !4473 {
entry:
  %image.addr = alloca %struct.Image*, align 8
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %ibuf = alloca %struct.ImBuf*, align 8
  %lock = alloca i8*, align 8
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !4476, metadata !DIExpression()), !dbg !4477
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !4478, metadata !DIExpression()), !dbg !4479
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !4480, metadata !DIExpression()), !dbg !4481
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !4482, metadata !DIExpression()), !dbg !4483
  call void @llvm.dbg.declare(metadata i8** %lock, metadata !4484, metadata !DIExpression()), !dbg !4485
  %0 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !4486
  %call = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %0, %struct.ImageUser* null, i8** %lock), !dbg !4487
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !4488
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4489
  %tobool = icmp ne %struct.ImBuf* %1, null, !dbg !4489
  br i1 %tobool, label %if.then, label %if.end, !dbg !4491

if.then:                                          ; preds = %entry
  %2 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4492
  %3 = load i32, i32* %width.addr, align 4, !dbg !4494
  %4 = load i32, i32* %height.addr, align 4, !dbg !4495
  %call1 = call %struct.ImBuf* @IMB_scaleImBuf(%struct.ImBuf* %2, i32 %3, i32 %4), !dbg !4496
  %5 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4497
  %userflags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %5, i32 0, i32 23, !dbg !4498
  %6 = load i32, i32* %userflags, align 4, !dbg !4499
  %or = or i32 %6, 2, !dbg !4499
  store i32 %or, i32* %userflags, align 4, !dbg !4499
  br label %if.end, !dbg !4500

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !4501
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4502
  %9 = load i8*, i8** %lock, align 8, !dbg !4503
  call void @BKE_image_release_ibuf(%struct.Image* %7, %struct.ImBuf* %8, i8* %9), !dbg !4504
  %10 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4505
  %cmp = icmp ne %struct.ImBuf* %10, null, !dbg !4506
  %conv = zext i1 %cmp to i32, !dbg !4506
  %conv2 = trunc i32 %conv to i8, !dbg !4507
  ret i8 %conv2, !dbg !4508
}

declare dso_local %struct.ImBuf* @IMB_scaleImBuf(%struct.ImBuf*, i32, i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_image_alpha_mode_from_extension_ex(i8* %filepath) #0 !dbg !4509 {
entry:
  %retval = alloca i8, align 1
  %filepath.addr = alloca i8*, align 8
  store i8* %filepath, i8** %filepath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filepath.addr, metadata !4512, metadata !DIExpression()), !dbg !4513
  %0 = load i8*, i8** %filepath.addr, align 8, !dbg !4514
  %call = call zeroext i8 (i8*, ...) @BLI_testextensie_n(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* null), !dbg !4516
  %tobool = icmp ne i8 %call, 0, !dbg !4516
  br i1 %tobool, label %if.then, label %if.else, !dbg !4517

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !4518
  br label %return, !dbg !4518

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !4520
  br label %return, !dbg !4520

return:                                           ; preds = %if.else, %if.then
  %1 = load i8, i8* %retval, align 1, !dbg !4522
  ret i8 %1, !dbg !4522
}

declare dso_local zeroext i8 @BLI_testextensie_n(i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_alpha_mode_from_extension(%struct.Image* %image) #0 !dbg !4523 {
entry:
  %image.addr = alloca %struct.Image*, align 8
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !4524, metadata !DIExpression()), !dbg !4525
  %0 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !4526
  %name = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 1, !dbg !4527
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !4526
  %call = call zeroext i8 @BKE_image_alpha_mode_from_extension_ex(i8* %arraydecay), !dbg !4528
  %1 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !4529
  %alpha_mode = getelementptr inbounds %struct.Image, %struct.Image* %1, i32 0, i32 37, !dbg !4530
  store i8 %call, i8* %alpha_mode, align 8, !dbg !4531
  ret void, !dbg !4532
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Image* @BKE_image_load(%struct.Main* %bmain, i8* %filepath) #0 !dbg !4533 {
entry:
  %retval = alloca %struct.Image*, align 8
  %bmain.addr = alloca %struct.Main*, align 8
  %filepath.addr = alloca i8*, align 8
  %ima = alloca %struct.Image*, align 8
  %file = alloca i32, align 4
  %len = alloca i32, align 4
  %libname = alloca i8*, align 8
  %str = alloca [1024 x i8], align 16
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !4536, metadata !DIExpression()), !dbg !4537
  store i8* %filepath, i8** %filepath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filepath.addr, metadata !4538, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !4540, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.declare(metadata i32* %file, metadata !4542, metadata !DIExpression()), !dbg !4543
  call void @llvm.dbg.declare(metadata i32* %len, metadata !4544, metadata !DIExpression()), !dbg !4545
  call void @llvm.dbg.declare(metadata i8** %libname, metadata !4546, metadata !DIExpression()), !dbg !4547
  call void @llvm.dbg.declare(metadata [1024 x i8]* %str, metadata !4548, metadata !DIExpression()), !dbg !4549
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !4550
  %0 = load i8*, i8** %filepath.addr, align 8, !dbg !4551
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %0, i64 1024), !dbg !4552
  %arraydecay1 = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !4553
  %1 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4554
  %name = getelementptr inbounds %struct.Main, %struct.Main* %1, i32 0, i32 2, !dbg !4555
  %arraydecay2 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !4554
  %call3 = call zeroext i8 @BLI_path_abs(i8* %arraydecay1, i8* %arraydecay2), !dbg !4556
  %arraydecay4 = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !4557
  %call5 = call i32 @BLI_open(i8* %arraydecay4, i32 0, i32 0), !dbg !4558
  store i32 %call5, i32* %file, align 4, !dbg !4559
  %2 = load i32, i32* %file, align 4, !dbg !4560
  %cmp = icmp eq i32 %2, -1, !dbg !4562
  br i1 %cmp, label %if.then, label %if.end, !dbg !4563

if.then:                                          ; preds = %entry
  store %struct.Image* null, %struct.Image** %retval, align 8, !dbg !4564
  br label %return, !dbg !4564

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %file, align 4, !dbg !4565
  %call6 = call i32 @close(i32 %3), !dbg !4566
  %4 = load i8*, i8** %filepath.addr, align 8, !dbg !4567
  %call7 = call i64 @strlen(i8* %4) #6, !dbg !4568
  %conv = trunc i64 %call7 to i32, !dbg !4568
  store i32 %conv, i32* %len, align 4, !dbg !4569
  br label %while.cond, !dbg !4570

while.cond:                                       ; preds = %while.body, %if.end
  %5 = load i32, i32* %len, align 4, !dbg !4571
  %cmp8 = icmp sgt i32 %5, 0, !dbg !4572
  br i1 %cmp8, label %land.lhs.true, label %land.end, !dbg !4573

land.lhs.true:                                    ; preds = %while.cond
  %6 = load i8*, i8** %filepath.addr, align 8, !dbg !4574
  %7 = load i32, i32* %len, align 4, !dbg !4575
  %sub = sub nsw i32 %7, 1, !dbg !4576
  %idxprom = sext i32 %sub to i64, !dbg !4574
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 %idxprom, !dbg !4574
  %8 = load i8, i8* %arrayidx, align 1, !dbg !4574
  %conv10 = zext i8 %8 to i32, !dbg !4574
  %cmp11 = icmp ne i32 %conv10, 47, !dbg !4577
  br i1 %cmp11, label %land.rhs, label %land.end, !dbg !4578

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i8*, i8** %filepath.addr, align 8, !dbg !4579
  %10 = load i32, i32* %len, align 4, !dbg !4580
  %sub13 = sub nsw i32 %10, 1, !dbg !4581
  %idxprom14 = sext i32 %sub13 to i64, !dbg !4579
  %arrayidx15 = getelementptr inbounds i8, i8* %9, i64 %idxprom14, !dbg !4579
  %11 = load i8, i8* %arrayidx15, align 1, !dbg !4579
  %conv16 = zext i8 %11 to i32, !dbg !4579
  %cmp17 = icmp ne i32 %conv16, 92, !dbg !4582
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond
  %12 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp17, %land.rhs ], !dbg !4583
  br i1 %12, label %while.body, label %while.end, !dbg !4570

while.body:                                       ; preds = %land.end
  %13 = load i32, i32* %len, align 4, !dbg !4584
  %dec = add nsw i32 %13, -1, !dbg !4584
  store i32 %dec, i32* %len, align 4, !dbg !4584
  br label %while.cond, !dbg !4570, !llvm.loop !4585

while.end:                                        ; preds = %land.end
  %14 = load i8*, i8** %filepath.addr, align 8, !dbg !4586
  %15 = load i32, i32* %len, align 4, !dbg !4587
  %idx.ext = sext i32 %15 to i64, !dbg !4588
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %idx.ext, !dbg !4588
  store i8* %add.ptr, i8** %libname, align 8, !dbg !4589
  %16 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4590
  %17 = load i8*, i8** %libname, align 8, !dbg !4591
  %call19 = call %struct.Image* @image_alloc(%struct.Main* %16, i8* %17, i16 signext 1, i16 signext 0), !dbg !4592
  store %struct.Image* %call19, %struct.Image** %ima, align 8, !dbg !4593
  %18 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4594
  %name20 = getelementptr inbounds %struct.Image, %struct.Image* %18, i32 0, i32 1, !dbg !4595
  %arraydecay21 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name20, i64 0, i64 0, !dbg !4594
  %19 = load i8*, i8** %filepath.addr, align 8, !dbg !4596
  %call22 = call i8* @BLI_strncpy(i8* %arraydecay21, i8* %19, i64 1024), !dbg !4597
  %20 = load i8*, i8** %filepath.addr, align 8, !dbg !4598
  %call23 = call zeroext i8 @BLI_testextensie_array(i8* %20, i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @imb_ext_movie, i64 0, i64 0)), !dbg !4600
  %tobool = icmp ne i8 %call23, 0, !dbg !4600
  br i1 %tobool, label %if.then24, label %if.end25, !dbg !4601

if.then24:                                        ; preds = %while.end
  %21 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4602
  %source = getelementptr inbounds %struct.Image, %struct.Image* %21, i32 0, i32 11, !dbg !4603
  store i16 3, i16* %source, align 8, !dbg !4604
  br label %if.end25, !dbg !4602

if.end25:                                         ; preds = %if.then24, %while.end
  %22 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4605
  call void @image_init_color_management(%struct.Image* %22), !dbg !4606
  %23 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4607
  store %struct.Image* %23, %struct.Image** %retval, align 8, !dbg !4608
  br label %return, !dbg !4608

return:                                           ; preds = %if.end25, %if.then
  %24 = load %struct.Image*, %struct.Image** %retval, align 8, !dbg !4609
  ret %struct.Image* %24, !dbg !4609
}

declare dso_local zeroext i8 @BLI_path_abs(i8*, i8*) #1

declare dso_local i32 @BLI_open(i8*, i32, i32) #1

declare dso_local i32 @close(i32) #1

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #3

declare dso_local zeroext i8 @BLI_testextensie_array(i8*, i8**) #1

; Function Attrs: noinline nounwind uwtable
define internal void @image_init_color_management(%struct.Image* %ima) #0 !dbg !4610 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %name = alloca [1024 x i8], align 16
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !4611, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !4613, metadata !DIExpression()), !dbg !4614
  call void @llvm.dbg.declare(metadata [1024 x i8]* %name, metadata !4615, metadata !DIExpression()), !dbg !4616
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4617
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !4618
  call void @BKE_image_user_file_path(%struct.ImageUser* null, %struct.Image* %0, i8* %arraydecay), !dbg !4619
  %arraydecay1 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !4620
  %1 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4621
  %colorspace_settings = getelementptr inbounds %struct.Image, %struct.Image* %1, i32 0, i32 36, !dbg !4622
  %name2 = getelementptr inbounds %struct.ColorManagedColorspaceSettings, %struct.ColorManagedColorspaceSettings* %colorspace_settings, i32 0, i32 0, !dbg !4623
  %arraydecay3 = getelementptr inbounds [64 x i8], [64 x i8]* %name2, i64 0, i64 0, !dbg !4621
  %call = call %struct.ImBuf* @IMB_loadiffname(i8* %arraydecay1, i32 8194, i8* %arraydecay3), !dbg !4624
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !4625
  %2 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4626
  %tobool = icmp ne %struct.ImBuf* %2, null, !dbg !4626
  br i1 %tobool, label %if.then, label %if.end7, !dbg !4628

if.then:                                          ; preds = %entry
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4629
  %flags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %3, i32 0, i32 6, !dbg !4632
  %4 = load i32, i32* %flags, align 8, !dbg !4632
  %and = and i32 %4, 4096, !dbg !4633
  %tobool4 = icmp ne i32 %and, 0, !dbg !4633
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !4634

if.then5:                                         ; preds = %if.then
  %5 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4635
  %alpha_mode = getelementptr inbounds %struct.Image, %struct.Image* %5, i32 0, i32 37, !dbg !4636
  store i8 1, i8* %alpha_mode, align 8, !dbg !4637
  br label %if.end, !dbg !4635

if.else:                                          ; preds = %if.then
  %6 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4638
  %alpha_mode6 = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 37, !dbg !4639
  store i8 0, i8* %alpha_mode6, align 8, !dbg !4640
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %7 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4641
  call void @IMB_freeImBuf(%struct.ImBuf* %7), !dbg !4642
  br label %if.end7, !dbg !4643

if.end7:                                          ; preds = %if.end, %entry
  ret void, !dbg !4644
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Image* @BKE_image_load_exists(i8* %filepath) #0 !dbg !4645 {
entry:
  %retval = alloca %struct.Image*, align 8
  %filepath.addr = alloca i8*, align 8
  %ima = alloca %struct.Image*, align 8
  %str = alloca [1024 x i8], align 16
  %strtest = alloca [1024 x i8], align 16
  store i8* %filepath, i8** %filepath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filepath.addr, metadata !4648, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !4650, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.declare(metadata [1024 x i8]* %str, metadata !4652, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.declare(metadata [1024 x i8]* %strtest, metadata !4654, metadata !DIExpression()), !dbg !4655
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !4656
  %0 = load i8*, i8** %filepath.addr, align 8, !dbg !4657
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %0, i64 1024), !dbg !4658
  %arraydecay1 = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !4659
  %1 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !4660
  %name = getelementptr inbounds %struct.Main, %struct.Main* %1, i32 0, i32 2, !dbg !4661
  %arraydecay2 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !4662
  %call3 = call zeroext i8 @BLI_path_abs(i8* %arraydecay1, i8* %arraydecay2), !dbg !4663
  %2 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !4664
  %image = getelementptr inbounds %struct.Main, %struct.Main* %2, i32 0, i32 19, !dbg !4666
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %image, i32 0, i32 0, !dbg !4667
  %3 = load i8*, i8** %first, align 8, !dbg !4667
  %4 = bitcast i8* %3 to %struct.Image*, !dbg !4668
  store %struct.Image* %4, %struct.Image** %ima, align 8, !dbg !4669
  br label %for.cond, !dbg !4670

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4671
  %tobool = icmp ne %struct.Image* %5, null, !dbg !4673
  br i1 %tobool, label %for.body, label %for.end, !dbg !4673

for.body:                                         ; preds = %for.cond
  %6 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4674
  %source = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 11, !dbg !4677
  %7 = load i16, i16* %source, align 8, !dbg !4677
  %conv = sext i16 %7 to i32, !dbg !4674
  %cmp = icmp ne i32 %conv, 5, !dbg !4678
  br i1 %cmp, label %land.lhs.true, label %if.end46, !dbg !4679

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4680
  %source5 = getelementptr inbounds %struct.Image, %struct.Image* %8, i32 0, i32 11, !dbg !4681
  %9 = load i16, i16* %source5, align 8, !dbg !4681
  %conv6 = sext i16 %9 to i32, !dbg !4680
  %cmp7 = icmp ne i32 %conv6, 4, !dbg !4682
  br i1 %cmp7, label %if.then, label %if.end46, !dbg !4683

if.then:                                          ; preds = %land.lhs.true
  %arraydecay9 = getelementptr inbounds [1024 x i8], [1024 x i8]* %strtest, i64 0, i64 0, !dbg !4684
  %10 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4686
  %name10 = getelementptr inbounds %struct.Image, %struct.Image* %10, i32 0, i32 1, !dbg !4687
  %arraydecay11 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name10, i64 0, i64 0, !dbg !4686
  %call12 = call i8* @BLI_strncpy(i8* %arraydecay9, i8* %arraydecay11, i64 1024), !dbg !4688
  %arraydecay13 = getelementptr inbounds [1024 x i8], [1024 x i8]* %strtest, i64 0, i64 0, !dbg !4689
  %11 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4690
  %id = getelementptr inbounds %struct.Image, %struct.Image* %11, i32 0, i32 0, !dbg !4690
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !4690
  %12 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !4690
  %tobool14 = icmp ne %struct.Library* %12, null, !dbg !4690
  br i1 %tobool14, label %cond.true, label %cond.false, !dbg !4690

cond.true:                                        ; preds = %if.then
  %13 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4690
  %id15 = getelementptr inbounds %struct.Image, %struct.Image* %13, i32 0, i32 0, !dbg !4690
  %lib16 = getelementptr inbounds %struct.ID, %struct.ID* %id15, i32 0, i32 3, !dbg !4690
  %14 = load %struct.Library*, %struct.Library** %lib16, align 8, !dbg !4690
  %filepath17 = getelementptr inbounds %struct.Library, %struct.Library* %14, i32 0, i32 4, !dbg !4690
  %arraydecay18 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath17, i64 0, i64 0, !dbg !4690
  br label %cond.end, !dbg !4690

cond.false:                                       ; preds = %if.then
  %15 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !4690
  %name19 = getelementptr inbounds %struct.Main, %struct.Main* %15, i32 0, i32 2, !dbg !4690
  %arraydecay20 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name19, i64 0, i64 0, !dbg !4690
  br label %cond.end, !dbg !4690

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay18, %cond.true ], [ %arraydecay20, %cond.false ], !dbg !4690
  %call21 = call zeroext i8 @BLI_path_abs(i8* %arraydecay13, i8* %cond), !dbg !4691
  %arraydecay22 = getelementptr inbounds [1024 x i8], [1024 x i8]* %strtest, i64 0, i64 0, !dbg !4692
  %arraydecay23 = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !4694
  %call24 = call i32 @strcmp(i8* %arraydecay22, i8* %arraydecay23) #6, !dbg !4695
  %cmp25 = icmp eq i32 %call24, 0, !dbg !4696
  br i1 %cmp25, label %if.then27, label %if.end45, !dbg !4697

if.then27:                                        ; preds = %cond.end
  %16 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4698
  %anim = getelementptr inbounds %struct.Image, %struct.Image* %16, i32 0, i32 4, !dbg !4701
  %17 = load %struct.anim*, %struct.anim** %anim, align 8, !dbg !4701
  %cmp28 = icmp eq %struct.anim* %17, null, !dbg !4702
  br i1 %cmp28, label %if.then33, label %lor.lhs.false, !dbg !4703

lor.lhs.false:                                    ; preds = %if.then27
  %18 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4704
  %id30 = getelementptr inbounds %struct.Image, %struct.Image* %18, i32 0, i32 0, !dbg !4705
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id30, i32 0, i32 6, !dbg !4706
  %19 = load i32, i32* %us, align 4, !dbg !4706
  %cmp31 = icmp eq i32 %19, 0, !dbg !4707
  br i1 %cmp31, label %if.then33, label %if.end44, !dbg !4708

if.then33:                                        ; preds = %lor.lhs.false, %if.then27
  %20 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4709
  %name34 = getelementptr inbounds %struct.Image, %struct.Image* %20, i32 0, i32 1, !dbg !4711
  %arraydecay35 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name34, i64 0, i64 0, !dbg !4709
  %21 = load i8*, i8** %filepath.addr, align 8, !dbg !4712
  %call36 = call i8* @BLI_strncpy(i8* %arraydecay35, i8* %21, i64 1024), !dbg !4713
  %22 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4714
  %id37 = getelementptr inbounds %struct.Image, %struct.Image* %22, i32 0, i32 0, !dbg !4715
  %us38 = getelementptr inbounds %struct.ID, %struct.ID* %id37, i32 0, i32 6, !dbg !4716
  %23 = load i32, i32* %us38, align 4, !dbg !4717
  %inc = add nsw i32 %23, 1, !dbg !4717
  store i32 %inc, i32* %us38, align 4, !dbg !4717
  %24 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4718
  %ok = getelementptr inbounds %struct.Image, %struct.Image* %24, i32 0, i32 9, !dbg !4720
  %25 = load i16, i16* %ok, align 4, !dbg !4720
  %conv39 = sext i16 %25 to i32, !dbg !4718
  %cmp40 = icmp eq i32 %conv39, 0, !dbg !4721
  br i1 %cmp40, label %if.then42, label %if.end, !dbg !4722

if.then42:                                        ; preds = %if.then33
  %26 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4723
  %ok43 = getelementptr inbounds %struct.Image, %struct.Image* %26, i32 0, i32 9, !dbg !4724
  store i16 1, i16* %ok43, align 4, !dbg !4725
  br label %if.end, !dbg !4723

if.end:                                           ; preds = %if.then42, %if.then33
  %27 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4726
  store %struct.Image* %27, %struct.Image** %retval, align 8, !dbg !4727
  br label %return, !dbg !4727

if.end44:                                         ; preds = %lor.lhs.false
  br label %if.end45, !dbg !4728

if.end45:                                         ; preds = %if.end44, %cond.end
  br label %if.end46, !dbg !4729

if.end46:                                         ; preds = %if.end45, %land.lhs.true, %for.body
  br label %for.inc, !dbg !4730

for.inc:                                          ; preds = %if.end46
  %28 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4731
  %id47 = getelementptr inbounds %struct.Image, %struct.Image* %28, i32 0, i32 0, !dbg !4732
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id47, i32 0, i32 0, !dbg !4733
  %29 = load i8*, i8** %next, align 8, !dbg !4733
  %30 = bitcast i8* %29 to %struct.Image*, !dbg !4731
  store %struct.Image* %30, %struct.Image** %ima, align 8, !dbg !4734
  br label %for.cond, !dbg !4735, !llvm.loop !4736

for.end:                                          ; preds = %for.cond
  %31 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !4738
  %32 = load i8*, i8** %filepath.addr, align 8, !dbg !4739
  %call48 = call %struct.Image* @BKE_image_load(%struct.Main* %31, i8* %32), !dbg !4740
  store %struct.Image* %call48, %struct.Image** %retval, align 8, !dbg !4741
  br label %return, !dbg !4741

return:                                           ; preds = %for.end, %if.end
  %33 = load %struct.Image*, %struct.Image** %retval, align 8, !dbg !4742
  ret %struct.Image* %33, !dbg !4742
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Image* @BKE_image_add_generated(%struct.Main* %bmain, i32 %width, i32 %height, i8* %name, i32 %depth, i32 %floatbuf, i16 signext %gen_type, float* %color) #0 !dbg !4743 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %depth.addr = alloca i32, align 4
  %floatbuf.addr = alloca i32, align 4
  %gen_type.addr = alloca i16, align 2
  %color.addr = alloca float*, align 8
  %ima = alloca %struct.Image*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !4746, metadata !DIExpression()), !dbg !4747
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !4748, metadata !DIExpression()), !dbg !4749
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !4750, metadata !DIExpression()), !dbg !4751
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4752, metadata !DIExpression()), !dbg !4753
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !4754, metadata !DIExpression()), !dbg !4755
  store i32 %floatbuf, i32* %floatbuf.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %floatbuf.addr, metadata !4756, metadata !DIExpression()), !dbg !4757
  store i16 %gen_type, i16* %gen_type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %gen_type.addr, metadata !4758, metadata !DIExpression()), !dbg !4759
  store float* %color, float** %color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %color.addr, metadata !4760, metadata !DIExpression()), !dbg !4761
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !4762, metadata !DIExpression()), !dbg !4763
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4764
  %1 = load i8*, i8** %name.addr, align 8, !dbg !4765
  %call = call %struct.Image* @image_alloc(%struct.Main* %0, i8* %1, i16 signext 4, i16 signext 2), !dbg !4766
  store %struct.Image* %call, %struct.Image** %ima, align 8, !dbg !4763
  %2 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4767
  %tobool = icmp ne %struct.Image* %2, null, !dbg !4767
  br i1 %tobool, label %if.then, label %if.end, !dbg !4769

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !4770, metadata !DIExpression()), !dbg !4772
  %3 = load i32, i32* %width.addr, align 4, !dbg !4773
  %4 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4774
  %gen_x = getelementptr inbounds %struct.Image, %struct.Image* %4, i32 0, i32 28, !dbg !4775
  store i32 %3, i32* %gen_x, align 4, !dbg !4776
  %5 = load i32, i32* %height.addr, align 4, !dbg !4777
  %6 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4778
  %gen_y = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 29, !dbg !4779
  store i32 %5, i32* %gen_y, align 8, !dbg !4780
  %7 = load i16, i16* %gen_type.addr, align 2, !dbg !4781
  %conv = trunc i16 %7 to i8, !dbg !4781
  %8 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4782
  %gen_type1 = getelementptr inbounds %struct.Image, %struct.Image* %8, i32 0, i32 30, !dbg !4783
  store i8 %conv, i8* %gen_type1, align 4, !dbg !4784
  %9 = load i32, i32* %floatbuf.addr, align 4, !dbg !4785
  %tobool2 = icmp ne i32 %9, 0, !dbg !4785
  %10 = zext i1 %tobool2 to i64, !dbg !4785
  %cond = select i1 %tobool2, i32 1, i32 0, !dbg !4785
  %11 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4786
  %gen_flag = getelementptr inbounds %struct.Image, %struct.Image* %11, i32 0, i32 31, !dbg !4787
  %12 = load i8, i8* %gen_flag, align 1, !dbg !4788
  %conv3 = zext i8 %12 to i32, !dbg !4788
  %or = or i32 %conv3, %cond, !dbg !4788
  %conv4 = trunc i32 %or to i8, !dbg !4788
  store i8 %conv4, i8* %gen_flag, align 1, !dbg !4788
  %13 = load i32, i32* %depth.addr, align 4, !dbg !4789
  %conv5 = trunc i32 %13 to i16, !dbg !4789
  %14 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4790
  %gen_depth = getelementptr inbounds %struct.Image, %struct.Image* %14, i32 0, i32 32, !dbg !4791
  store i16 %conv5, i16* %gen_depth, align 2, !dbg !4792
  %15 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4793
  %gen_color = getelementptr inbounds %struct.Image, %struct.Image* %15, i32 0, i32 33, !dbg !4794
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %gen_color, i64 0, i64 0, !dbg !4793
  %16 = load float*, float** %color.addr, align 8, !dbg !4795
  call void @copy_v4_v4(float* %arraydecay, float* %16), !dbg !4796
  %17 = load i32, i32* %width.addr, align 4, !dbg !4797
  %18 = load i32, i32* %height.addr, align 4, !dbg !4798
  %19 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4799
  %name6 = getelementptr inbounds %struct.Image, %struct.Image* %19, i32 0, i32 1, !dbg !4800
  %arraydecay7 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name6, i64 0, i64 0, !dbg !4799
  %20 = load i32, i32* %depth.addr, align 4, !dbg !4801
  %21 = load i32, i32* %floatbuf.addr, align 4, !dbg !4802
  %22 = load i16, i16* %gen_type.addr, align 2, !dbg !4803
  %23 = load float*, float** %color.addr, align 8, !dbg !4804
  %24 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4805
  %colorspace_settings = getelementptr inbounds %struct.Image, %struct.Image* %24, i32 0, i32 36, !dbg !4806
  %call8 = call %struct.ImBuf* @add_ibuf_size(i32 %17, i32 %18, i8* %arraydecay7, i32 %20, i32 %21, i16 signext %22, float* %23, %struct.ColorManagedColorspaceSettings* %colorspace_settings), !dbg !4807
  store %struct.ImBuf* %call8, %struct.ImBuf** %ibuf, align 8, !dbg !4808
  %25 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4809
  %26 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4810
  call void @image_assign_ibuf(%struct.Image* %25, %struct.ImBuf* %26, i32 2146430959, i32 0), !dbg !4811
  %27 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4812
  call void @IMB_freeImBuf(%struct.ImBuf* %27), !dbg !4813
  %28 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4814
  %ok = getelementptr inbounds %struct.Image, %struct.Image* %28, i32 0, i32 9, !dbg !4815
  store i16 2, i16* %ok, align 4, !dbg !4816
  br label %if.end, !dbg !4817

if.end:                                           ; preds = %if.then, %entry
  %29 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4818
  ret %struct.Image* %29, !dbg !4819
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @add_ibuf_size(i32 %width, i32 %height, i8* %name, i32 %depth, i32 %floatbuf, i16 signext %gen_type, float* %color, %struct.ColorManagedColorspaceSettings* %colorspace_settings) #0 !dbg !4820 {
entry:
  %retval = alloca %struct.ImBuf*, align 8
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %depth.addr = alloca i32, align 4
  %floatbuf.addr = alloca i32, align 4
  %gen_type.addr = alloca i16, align 2
  %color.addr = alloca float*, align 8
  %colorspace_settings.addr = alloca %struct.ColorManagedColorspaceSettings*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %rect = alloca i8*, align 8
  %rect_float = alloca float*, align 8
  %colorspace = alloca i8*, align 8
  %colorspace23 = alloca i8*, align 8
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !4824, metadata !DIExpression()), !dbg !4825
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !4826, metadata !DIExpression()), !dbg !4827
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4828, metadata !DIExpression()), !dbg !4829
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !4830, metadata !DIExpression()), !dbg !4831
  store i32 %floatbuf, i32* %floatbuf.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %floatbuf.addr, metadata !4832, metadata !DIExpression()), !dbg !4833
  store i16 %gen_type, i16* %gen_type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %gen_type.addr, metadata !4834, metadata !DIExpression()), !dbg !4835
  store float* %color, float** %color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %color.addr, metadata !4836, metadata !DIExpression()), !dbg !4837
  store %struct.ColorManagedColorspaceSettings* %colorspace_settings, %struct.ColorManagedColorspaceSettings** %colorspace_settings.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ColorManagedColorspaceSettings** %colorspace_settings.addr, metadata !4838, metadata !DIExpression()), !dbg !4839
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !4840, metadata !DIExpression()), !dbg !4841
  call void @llvm.dbg.declare(metadata i8** %rect, metadata !4842, metadata !DIExpression()), !dbg !4843
  store i8* null, i8** %rect, align 8, !dbg !4843
  call void @llvm.dbg.declare(metadata float** %rect_float, metadata !4844, metadata !DIExpression()), !dbg !4845
  store float* null, float** %rect_float, align 8, !dbg !4845
  %0 = load i32, i32* %floatbuf.addr, align 4, !dbg !4846
  %tobool = icmp ne i32 %0, 0, !dbg !4846
  br i1 %tobool, label %if.then, label %if.else, !dbg !4848

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %width.addr, align 4, !dbg !4849
  %2 = load i32, i32* %height.addr, align 4, !dbg !4851
  %3 = load i32, i32* %depth.addr, align 4, !dbg !4852
  %conv = trunc i32 %3 to i8, !dbg !4852
  %call = call %struct.ImBuf* @IMB_allocImBuf(i32 %1, i32 %2, i8 zeroext %conv, i32 32), !dbg !4853
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !4854
  %4 = load %struct.ColorManagedColorspaceSettings*, %struct.ColorManagedColorspaceSettings** %colorspace_settings.addr, align 8, !dbg !4855
  %name1 = getelementptr inbounds %struct.ColorManagedColorspaceSettings, %struct.ColorManagedColorspaceSettings* %4, i32 0, i32 0, !dbg !4857
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %name1, i64 0, i64 0, !dbg !4855
  %5 = load i8, i8* %arrayidx, align 1, !dbg !4855
  %conv2 = zext i8 %5 to i32, !dbg !4855
  %cmp = icmp eq i32 %conv2, 0, !dbg !4858
  br i1 %cmp, label %if.then4, label %if.end, !dbg !4859

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %colorspace, metadata !4860, metadata !DIExpression()), !dbg !4862
  %call5 = call i8* @IMB_colormanagement_role_colorspace_name_get(i32 5), !dbg !4863
  store i8* %call5, i8** %colorspace, align 8, !dbg !4862
  %6 = load %struct.ColorManagedColorspaceSettings*, %struct.ColorManagedColorspaceSettings** %colorspace_settings.addr, align 8, !dbg !4864
  %name6 = getelementptr inbounds %struct.ColorManagedColorspaceSettings, %struct.ColorManagedColorspaceSettings* %6, i32 0, i32 0, !dbg !4865
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name6, i64 0, i64 0, !dbg !4864
  %7 = load i8*, i8** %colorspace, align 8, !dbg !4866
  %call7 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %7, i64 64), !dbg !4867
  br label %if.end, !dbg !4868

if.end:                                           ; preds = %if.then4, %if.then
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4869
  %cmp8 = icmp ne %struct.ImBuf* %8, null, !dbg !4871
  br i1 %cmp8, label %if.then10, label %if.end14, !dbg !4872

if.then10:                                        ; preds = %if.end
  %9 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4873
  %rect_float11 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %9, i32 0, i32 9, !dbg !4875
  %10 = load float*, float** %rect_float11, align 8, !dbg !4875
  store float* %10, float** %rect_float, align 8, !dbg !4876
  %11 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4877
  %12 = load %struct.ColorManagedColorspaceSettings*, %struct.ColorManagedColorspaceSettings** %colorspace_settings.addr, align 8, !dbg !4878
  %name12 = getelementptr inbounds %struct.ColorManagedColorspaceSettings, %struct.ColorManagedColorspaceSettings* %12, i32 0, i32 0, !dbg !4879
  %arraydecay13 = getelementptr inbounds [64 x i8], [64 x i8]* %name12, i64 0, i64 0, !dbg !4878
  call void @IMB_colormanagement_check_is_data(%struct.ImBuf* %11, i8* %arraydecay13), !dbg !4880
  br label %if.end14, !dbg !4881

if.end14:                                         ; preds = %if.then10, %if.end
  br label %if.end36, !dbg !4882

if.else:                                          ; preds = %entry
  %13 = load i32, i32* %width.addr, align 4, !dbg !4883
  %14 = load i32, i32* %height.addr, align 4, !dbg !4885
  %15 = load i32, i32* %depth.addr, align 4, !dbg !4886
  %conv15 = trunc i32 %15 to i8, !dbg !4886
  %call16 = call %struct.ImBuf* @IMB_allocImBuf(i32 %13, i32 %14, i8 zeroext %conv15, i32 1), !dbg !4887
  store %struct.ImBuf* %call16, %struct.ImBuf** %ibuf, align 8, !dbg !4888
  %16 = load %struct.ColorManagedColorspaceSettings*, %struct.ColorManagedColorspaceSettings** %colorspace_settings.addr, align 8, !dbg !4889
  %name17 = getelementptr inbounds %struct.ColorManagedColorspaceSettings, %struct.ColorManagedColorspaceSettings* %16, i32 0, i32 0, !dbg !4891
  %arrayidx18 = getelementptr inbounds [64 x i8], [64 x i8]* %name17, i64 0, i64 0, !dbg !4889
  %17 = load i8, i8* %arrayidx18, align 1, !dbg !4889
  %conv19 = zext i8 %17 to i32, !dbg !4889
  %cmp20 = icmp eq i32 %conv19, 0, !dbg !4892
  br i1 %cmp20, label %if.then22, label %if.end28, !dbg !4893

if.then22:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8** %colorspace23, metadata !4894, metadata !DIExpression()), !dbg !4896
  %call24 = call i8* @IMB_colormanagement_role_colorspace_name_get(i32 4), !dbg !4897
  store i8* %call24, i8** %colorspace23, align 8, !dbg !4896
  %18 = load %struct.ColorManagedColorspaceSettings*, %struct.ColorManagedColorspaceSettings** %colorspace_settings.addr, align 8, !dbg !4898
  %name25 = getelementptr inbounds %struct.ColorManagedColorspaceSettings, %struct.ColorManagedColorspaceSettings* %18, i32 0, i32 0, !dbg !4899
  %arraydecay26 = getelementptr inbounds [64 x i8], [64 x i8]* %name25, i64 0, i64 0, !dbg !4898
  %19 = load i8*, i8** %colorspace23, align 8, !dbg !4900
  %call27 = call i8* @BLI_strncpy(i8* %arraydecay26, i8* %19, i64 64), !dbg !4901
  br label %if.end28, !dbg !4902

if.end28:                                         ; preds = %if.then22, %if.else
  %20 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4903
  %cmp29 = icmp ne %struct.ImBuf* %20, null, !dbg !4905
  br i1 %cmp29, label %if.then31, label %if.end35, !dbg !4906

if.then31:                                        ; preds = %if.end28
  %21 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4907
  %rect32 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %21, i32 0, i32 8, !dbg !4909
  %22 = load i32*, i32** %rect32, align 8, !dbg !4909
  %23 = bitcast i32* %22 to i8*, !dbg !4910
  store i8* %23, i8** %rect, align 8, !dbg !4911
  %24 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4912
  %25 = load %struct.ColorManagedColorspaceSettings*, %struct.ColorManagedColorspaceSettings** %colorspace_settings.addr, align 8, !dbg !4913
  %name33 = getelementptr inbounds %struct.ColorManagedColorspaceSettings, %struct.ColorManagedColorspaceSettings* %25, i32 0, i32 0, !dbg !4914
  %arraydecay34 = getelementptr inbounds [64 x i8], [64 x i8]* %name33, i64 0, i64 0, !dbg !4913
  call void @IMB_colormanagement_assign_rect_colorspace(%struct.ImBuf* %24, i8* %arraydecay34), !dbg !4915
  br label %if.end35, !dbg !4916

if.end35:                                         ; preds = %if.then31, %if.end28
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end14
  %26 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4917
  %tobool37 = icmp ne %struct.ImBuf* %26, null, !dbg !4917
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !4919

if.then38:                                        ; preds = %if.end36
  store %struct.ImBuf* null, %struct.ImBuf** %retval, align 8, !dbg !4920
  br label %return, !dbg !4920

if.end39:                                         ; preds = %if.end36
  %27 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4922
  %name40 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %27, i32 0, i32 27, !dbg !4923
  %arraydecay41 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name40, i64 0, i64 0, !dbg !4922
  %28 = load i8*, i8** %name.addr, align 8, !dbg !4924
  %call42 = call i8* @BLI_strncpy(i8* %arraydecay41, i8* %28, i64 1024), !dbg !4925
  %29 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4926
  %userflags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %29, i32 0, i32 23, !dbg !4927
  %30 = load i32, i32* %userflags, align 4, !dbg !4928
  %or = or i32 %30, 2, !dbg !4928
  store i32 %or, i32* %userflags, align 4, !dbg !4928
  %31 = load i16, i16* %gen_type.addr, align 2, !dbg !4929
  %conv43 = sext i16 %31 to i32, !dbg !4929
  switch i32 %conv43, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb44
  ], !dbg !4930

sw.bb:                                            ; preds = %if.end39
  %32 = load i8*, i8** %rect, align 8, !dbg !4931
  %33 = load float*, float** %rect_float, align 8, !dbg !4933
  %34 = load i32, i32* %width.addr, align 4, !dbg !4934
  %35 = load i32, i32* %height.addr, align 4, !dbg !4935
  call void @BKE_image_buf_fill_checker(i8* %32, float* %33, i32 %34, i32 %35), !dbg !4936
  br label %sw.epilog, !dbg !4937

sw.bb44:                                          ; preds = %if.end39
  %36 = load i8*, i8** %rect, align 8, !dbg !4938
  %37 = load float*, float** %rect_float, align 8, !dbg !4939
  %38 = load i32, i32* %width.addr, align 4, !dbg !4940
  %39 = load i32, i32* %height.addr, align 4, !dbg !4941
  call void @BKE_image_buf_fill_checker_color(i8* %36, float* %37, i32 %38, i32 %39), !dbg !4942
  br label %sw.epilog, !dbg !4943

sw.default:                                       ; preds = %if.end39
  %40 = load i8*, i8** %rect, align 8, !dbg !4944
  %41 = load float*, float** %rect_float, align 8, !dbg !4945
  %42 = load i32, i32* %width.addr, align 4, !dbg !4946
  %43 = load i32, i32* %height.addr, align 4, !dbg !4947
  %44 = load float*, float** %color.addr, align 8, !dbg !4948
  call void @BKE_image_buf_fill_color(i8* %40, float* %41, i32 %42, i32 %43, float* %44), !dbg !4949
  br label %sw.epilog, !dbg !4950

sw.epilog:                                        ; preds = %sw.default, %sw.bb44, %sw.bb
  %45 = load float*, float** %rect_float, align 8, !dbg !4951
  %tobool45 = icmp ne float* %45, null, !dbg !4951
  br i1 %tobool45, label %if.then46, label %if.end49, !dbg !4953

if.then46:                                        ; preds = %sw.epilog
  %46 = load float*, float** %rect_float, align 8, !dbg !4954
  %47 = load float*, float** %rect_float, align 8, !dbg !4956
  %48 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4957
  %channels = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %48, i32 0, i32 5, !dbg !4958
  %49 = load i32, i32* %channels, align 4, !dbg !4958
  %50 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4959
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %50, i32 0, i32 2, !dbg !4960
  %51 = load i32, i32* %x, align 8, !dbg !4960
  %52 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4961
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %52, i32 0, i32 3, !dbg !4962
  %53 = load i32, i32* %y, align 4, !dbg !4962
  %54 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4963
  %x47 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %54, i32 0, i32 2, !dbg !4964
  %55 = load i32, i32* %x47, align 8, !dbg !4964
  %56 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4965
  %x48 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %56, i32 0, i32 2, !dbg !4966
  %57 = load i32, i32* %x48, align 8, !dbg !4966
  call void @IMB_buffer_float_from_float(float* %46, float* %47, i32 %49, i32 1, i32 2, i8 zeroext 1, i32 %51, i32 %53, i32 %55, i32 %57), !dbg !4967
  br label %if.end49, !dbg !4968

if.end49:                                         ; preds = %if.then46, %sw.epilog
  %58 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4969
  store %struct.ImBuf* %58, %struct.ImBuf** %retval, align 8, !dbg !4970
  br label %return, !dbg !4970

return:                                           ; preds = %if.end49, %if.then38
  %59 = load %struct.ImBuf*, %struct.ImBuf** %retval, align 8, !dbg !4971
  ret %struct.ImBuf* %59, !dbg !4971
}

; Function Attrs: noinline nounwind uwtable
define internal void @image_assign_ibuf(%struct.Image* %ima, %struct.ImBuf* %ibuf, i32 %index, i32 %frame) #0 !dbg !4972 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %index.addr = alloca i32, align 4
  %frame.addr = alloca i32, align 4
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !4975, metadata !DIExpression()), !dbg !4976
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !4977, metadata !DIExpression()), !dbg !4978
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4979, metadata !DIExpression()), !dbg !4980
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !4981, metadata !DIExpression()), !dbg !4982
  %0 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4983
  %tobool = icmp ne %struct.ImBuf* %0, null, !dbg !4983
  br i1 %tobool, label %if.then, label %if.end2, !dbg !4985

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %index.addr, align 4, !dbg !4986
  %cmp = icmp ne i32 %1, 2146430959, !dbg !4989
  br i1 %cmp, label %if.then1, label %if.end, !dbg !4990

if.then1:                                         ; preds = %if.then
  %2 = load i32, i32* %frame.addr, align 4, !dbg !4991
  %shl = shl i32 %2, 10, !dbg !4991
  %3 = load i32, i32* %index.addr, align 4, !dbg !4991
  %add = add nsw i32 %shl, %3, !dbg !4991
  store i32 %add, i32* %index.addr, align 4, !dbg !4992
  br label %if.end, !dbg !4993

if.end:                                           ; preds = %if.then1, %if.then
  %4 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !4994
  %5 = load i32, i32* %index.addr, align 4, !dbg !4995
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4996
  call void @imagecache_put(%struct.Image* %4, i32 %5, %struct.ImBuf* %6), !dbg !4997
  br label %if.end2, !dbg !4998

if.end2:                                          ; preds = %if.end, %entry
  ret void, !dbg !4999
}

declare dso_local void @IMB_freeImBuf(%struct.ImBuf*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Image* @BKE_image_add_from_imbuf(%struct.ImBuf* %ibuf) #0 !dbg !5000 {
entry:
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %ima = alloca %struct.Image*, align 8
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !5003, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !5005, metadata !DIExpression()), !dbg !5006
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !5007
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5008
  %name = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %1, i32 0, i32 27, !dbg !5009
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !5008
  %call = call i8* @BLI_path_basename(i8* %arraydecay), !dbg !5010
  %call1 = call %struct.Image* @image_alloc(%struct.Main* %0, i8* %call, i16 signext 1, i16 signext 0), !dbg !5011
  store %struct.Image* %call1, %struct.Image** %ima, align 8, !dbg !5012
  %2 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5013
  %tobool = icmp ne %struct.Image* %2, null, !dbg !5013
  br i1 %tobool, label %if.then, label %if.end, !dbg !5015

if.then:                                          ; preds = %entry
  %3 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5016
  %name2 = getelementptr inbounds %struct.Image, %struct.Image* %3, i32 0, i32 1, !dbg !5018
  %arraydecay3 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name2, i64 0, i64 0, !dbg !5016
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5019
  %name4 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %4, i32 0, i32 27, !dbg !5020
  %arraydecay5 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name4, i64 0, i64 0, !dbg !5019
  %call6 = call i8* @BLI_strncpy(i8* %arraydecay3, i8* %arraydecay5, i64 1024), !dbg !5021
  %5 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5022
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5023
  call void @image_assign_ibuf(%struct.Image* %5, %struct.ImBuf* %6, i32 2146430959, i32 0), !dbg !5024
  %7 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5025
  %ok = getelementptr inbounds %struct.Image, %struct.Image* %7, i32 0, i32 9, !dbg !5026
  store i16 2, i16* %ok, align 4, !dbg !5027
  br label %if.end, !dbg !5028

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5029
  ret %struct.Image* %8, !dbg !5030
}

declare dso_local i8* @BLI_path_basename(i8*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_memorypack(%struct.Image* %ima) #0 !dbg !5031 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %pf = alloca %struct.PackedFile*, align 8
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !5032, metadata !DIExpression()), !dbg !5033
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !5034, metadata !DIExpression()), !dbg !5035
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5036
  %call = call %struct.ImBuf* @image_get_cached_ibuf_for_index_frame(%struct.Image* %0, i32 2146430959, i32 0), !dbg !5037
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !5035
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5038
  %cmp = icmp eq %struct.ImBuf* %1, null, !dbg !5040
  br i1 %cmp, label %if.then, label %if.end, !dbg !5041

if.then:                                          ; preds = %entry
  br label %return, !dbg !5042

if.end:                                           ; preds = %entry
  %2 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5043
  %packedfile = getelementptr inbounds %struct.Image, %struct.Image* %2, i32 0, i32 22, !dbg !5045
  %3 = load %struct.PackedFile*, %struct.PackedFile** %packedfile, align 8, !dbg !5045
  %tobool = icmp ne %struct.PackedFile* %3, null, !dbg !5043
  br i1 %tobool, label %if.then1, label %if.end4, !dbg !5046

if.then1:                                         ; preds = %if.end
  %4 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5047
  %packedfile2 = getelementptr inbounds %struct.Image, %struct.Image* %4, i32 0, i32 22, !dbg !5049
  %5 = load %struct.PackedFile*, %struct.PackedFile** %packedfile2, align 8, !dbg !5049
  call void @freePackedFile(%struct.PackedFile* %5), !dbg !5050
  %6 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5051
  %packedfile3 = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 22, !dbg !5052
  store %struct.PackedFile* null, %struct.PackedFile** %packedfile3, align 8, !dbg !5053
  br label %if.end4, !dbg !5054

if.end4:                                          ; preds = %if.then1, %if.end
  %7 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5055
  %ftype = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %7, i32 0, i32 26, !dbg !5056
  store i32 1073741824, i32* %ftype, align 8, !dbg !5057
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5058
  %planes = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %8, i32 0, i32 4, !dbg !5059
  store i8 32, i8* %planes, align 8, !dbg !5060
  %9 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5061
  %10 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5062
  %name = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %10, i32 0, i32 27, !dbg !5063
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !5062
  %call5 = call signext i16 @IMB_saveiff(%struct.ImBuf* %9, i8* %arraydecay, i32 17), !dbg !5064
  %11 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5065
  %encodedbuffer = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %11, i32 0, i32 31, !dbg !5067
  %12 = load i8*, i8** %encodedbuffer, align 8, !dbg !5067
  %cmp6 = icmp eq i8* %12, null, !dbg !5068
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !5069

if.then7:                                         ; preds = %if.end4
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0)), !dbg !5070
  br label %if.end19, !dbg !5072

if.else:                                          ; preds = %if.end4
  call void @llvm.dbg.declare(metadata %struct.PackedFile** %pf, metadata !5073, metadata !DIExpression()), !dbg !5077
  %13 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5078
  %call9 = call i8* %13(i64 16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0)), !dbg !5078
  %14 = bitcast i8* %call9 to %struct.PackedFile*, !dbg !5078
  store %struct.PackedFile* %14, %struct.PackedFile** %pf, align 8, !dbg !5077
  %15 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5079
  %encodedbuffer10 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %15, i32 0, i32 31, !dbg !5080
  %16 = load i8*, i8** %encodedbuffer10, align 8, !dbg !5080
  %17 = load %struct.PackedFile*, %struct.PackedFile** %pf, align 8, !dbg !5081
  %data = getelementptr inbounds %struct.PackedFile, %struct.PackedFile* %17, i32 0, i32 2, !dbg !5082
  store i8* %16, i8** %data, align 8, !dbg !5083
  %18 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5084
  %encodedsize = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %18, i32 0, i32 32, !dbg !5085
  %19 = load i32, i32* %encodedsize, align 8, !dbg !5085
  %20 = load %struct.PackedFile*, %struct.PackedFile** %pf, align 8, !dbg !5086
  %size = getelementptr inbounds %struct.PackedFile, %struct.PackedFile* %20, i32 0, i32 0, !dbg !5087
  store i32 %19, i32* %size, align 8, !dbg !5088
  %21 = load %struct.PackedFile*, %struct.PackedFile** %pf, align 8, !dbg !5089
  %22 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5090
  %packedfile11 = getelementptr inbounds %struct.Image, %struct.Image* %22, i32 0, i32 22, !dbg !5091
  store %struct.PackedFile* %21, %struct.PackedFile** %packedfile11, align 8, !dbg !5092
  %23 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5093
  %encodedbuffer12 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %23, i32 0, i32 31, !dbg !5094
  store i8* null, i8** %encodedbuffer12, align 8, !dbg !5095
  %24 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5096
  %encodedsize13 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %24, i32 0, i32 32, !dbg !5097
  store i32 0, i32* %encodedsize13, align 8, !dbg !5098
  %25 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5099
  %userflags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %25, i32 0, i32 23, !dbg !5100
  %26 = load i32, i32* %userflags, align 4, !dbg !5101
  %and = and i32 %26, -3, !dbg !5101
  store i32 %and, i32* %userflags, align 4, !dbg !5101
  %27 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5102
  %source = getelementptr inbounds %struct.Image, %struct.Image* %27, i32 0, i32 11, !dbg !5104
  %28 = load i16, i16* %source, align 8, !dbg !5104
  %conv = sext i16 %28 to i32, !dbg !5102
  %cmp14 = icmp eq i32 %conv, 4, !dbg !5105
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !5106

if.then16:                                        ; preds = %if.else
  %29 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5107
  %source17 = getelementptr inbounds %struct.Image, %struct.Image* %29, i32 0, i32 11, !dbg !5109
  store i16 1, i16* %source17, align 8, !dbg !5110
  %30 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5111
  %type = getelementptr inbounds %struct.Image, %struct.Image* %30, i32 0, i32 12, !dbg !5112
  store i16 0, i16* %type, align 2, !dbg !5113
  br label %if.end18, !dbg !5114

if.end18:                                         ; preds = %if.then16, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then7
  %31 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5115
  call void @IMB_freeImBuf(%struct.ImBuf* %31), !dbg !5116
  br label %return, !dbg !5117

return:                                           ; preds = %if.end19, %if.then
  ret void, !dbg !5117
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @image_get_cached_ibuf_for_index_frame(%struct.Image* %ima, i32 %index, i32 %frame) #0 !dbg !5118 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %index.addr = alloca i32, align 4
  %frame.addr = alloca i32, align 4
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !5121, metadata !DIExpression()), !dbg !5122
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5123, metadata !DIExpression()), !dbg !5124
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !5125, metadata !DIExpression()), !dbg !5126
  %0 = load i32, i32* %index.addr, align 4, !dbg !5127
  %cmp = icmp ne i32 %0, 2146430959, !dbg !5129
  br i1 %cmp, label %if.then, label %if.end, !dbg !5130

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %frame.addr, align 4, !dbg !5131
  %shl = shl i32 %1, 10, !dbg !5131
  %2 = load i32, i32* %index.addr, align 4, !dbg !5131
  %add = add nsw i32 %shl, %2, !dbg !5131
  store i32 %add, i32* %index.addr, align 4, !dbg !5133
  br label %if.end, !dbg !5134

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5135
  %4 = load i32, i32* %index.addr, align 4, !dbg !5136
  %call = call %struct.ImBuf* @imagecache_get(%struct.Image* %3, i32 %4), !dbg !5137
  ret %struct.ImBuf* %call, !dbg !5138
}

declare dso_local signext i16 @IMB_saveiff(%struct.ImBuf*, i8*, i32) #1

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_tag_time(%struct.Image* %ima) #0 !dbg !5139 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !5140, metadata !DIExpression()), !dbg !5141
  %call = call double @PIL_check_seconds_timer(), !dbg !5142
  %conv = fptosi double %call to i32, !dbg !5143
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5144
  %lastused = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 25, !dbg !5145
  store i32 %conv, i32* %lastused, align 4, !dbg !5146
  ret void, !dbg !5147
}

declare dso_local double @PIL_check_seconds_timer() #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_print_memlist() #0 !dbg !5148 {
entry:
  %ima = alloca %struct.Image*, align 8
  %size = alloca i64, align 8
  %totsize = alloca i64, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !5149, metadata !DIExpression()), !dbg !5150
  call void @llvm.dbg.declare(metadata i64* %size, metadata !5151, metadata !DIExpression()), !dbg !5154
  call void @llvm.dbg.declare(metadata i64* %totsize, metadata !5155, metadata !DIExpression()), !dbg !5156
  store i64 0, i64* %totsize, align 8, !dbg !5156
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !5157
  %image = getelementptr inbounds %struct.Main, %struct.Main* %0, i32 0, i32 19, !dbg !5159
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %image, i32 0, i32 0, !dbg !5160
  %1 = load i8*, i8** %first, align 8, !dbg !5160
  %2 = bitcast i8* %1 to %struct.Image*, !dbg !5161
  store %struct.Image* %2, %struct.Image** %ima, align 8, !dbg !5162
  br label %for.cond, !dbg !5163

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5164
  %tobool = icmp ne %struct.Image* %3, null, !dbg !5166
  br i1 %tobool, label %for.body, label %for.end, !dbg !5166

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5167
  %call = call i64 @image_mem_size(%struct.Image* %4), !dbg !5168
  %5 = load i64, i64* %totsize, align 8, !dbg !5169
  %add = add i64 %5, %call, !dbg !5169
  store i64 %add, i64* %totsize, align 8, !dbg !5169
  br label %for.inc, !dbg !5170

for.inc:                                          ; preds = %for.body
  %6 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5171
  %id = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 0, !dbg !5172
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 0, !dbg !5173
  %7 = load i8*, i8** %next, align 8, !dbg !5173
  %8 = bitcast i8* %7 to %struct.Image*, !dbg !5171
  store %struct.Image* %8, %struct.Image** %ima, align 8, !dbg !5174
  br label %for.cond, !dbg !5175, !llvm.loop !5176

for.end:                                          ; preds = %for.cond
  %9 = load i64, i64* %totsize, align 8, !dbg !5178
  %conv = uitofp i64 %9 to double, !dbg !5179
  %div = fdiv double %conv, 0x4130000000000000, !dbg !5180
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0), double %div), !dbg !5181
  %10 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !5182
  %image2 = getelementptr inbounds %struct.Main, %struct.Main* %10, i32 0, i32 19, !dbg !5184
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %image2, i32 0, i32 0, !dbg !5185
  %11 = load i8*, i8** %first3, align 8, !dbg !5185
  %12 = bitcast i8* %11 to %struct.Image*, !dbg !5186
  store %struct.Image* %12, %struct.Image** %ima, align 8, !dbg !5187
  br label %for.cond4, !dbg !5188

for.cond4:                                        ; preds = %for.inc13, %for.end
  %13 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5189
  %tobool5 = icmp ne %struct.Image* %13, null, !dbg !5191
  br i1 %tobool5, label %for.body6, label %for.end16, !dbg !5191

for.body6:                                        ; preds = %for.cond4
  %14 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5192
  %call7 = call i64 @image_mem_size(%struct.Image* %14), !dbg !5194
  store i64 %call7, i64* %size, align 8, !dbg !5195
  %15 = load i64, i64* %size, align 8, !dbg !5196
  %tobool8 = icmp ne i64 %15, 0, !dbg !5196
  br i1 %tobool8, label %if.then, label %if.end, !dbg !5198

if.then:                                          ; preds = %for.body6
  %16 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5199
  %id9 = getelementptr inbounds %struct.Image, %struct.Image* %16, i32 0, i32 0, !dbg !5200
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id9, i32 0, i32 4, !dbg !5201
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !5199
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !5202
  %17 = load i64, i64* %size, align 8, !dbg !5203
  %conv10 = uitofp i64 %17 to double, !dbg !5204
  %div11 = fdiv double %conv10, 0x4130000000000000, !dbg !5205
  %call12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* %add.ptr, double %div11), !dbg !5206
  br label %if.end, !dbg !5206

if.end:                                           ; preds = %if.then, %for.body6
  br label %for.inc13, !dbg !5207

for.inc13:                                        ; preds = %if.end
  %18 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5208
  %id14 = getelementptr inbounds %struct.Image, %struct.Image* %18, i32 0, i32 0, !dbg !5209
  %next15 = getelementptr inbounds %struct.ID, %struct.ID* %id14, i32 0, i32 0, !dbg !5210
  %19 = load i8*, i8** %next15, align 8, !dbg !5210
  %20 = bitcast i8* %19 to %struct.Image*, !dbg !5208
  store %struct.Image* %20, %struct.Image** %ima, align 8, !dbg !5211
  br label %for.cond4, !dbg !5212, !llvm.loop !5213

for.end16:                                        ; preds = %for.cond4
  ret void, !dbg !5215
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @image_mem_size(%struct.Image* %image) #0 !dbg !5216 {
entry:
  %retval = alloca i64, align 8
  %image.addr = alloca %struct.Image*, align 8
  %size = alloca i64, align 8
  %iter = alloca %struct.MovieCacheIter*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %ibufm = alloca %struct.ImBuf*, align 8
  %level = alloca i32, align 4
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !5219, metadata !DIExpression()), !dbg !5220
  call void @llvm.dbg.declare(metadata i64* %size, metadata !5221, metadata !DIExpression()), !dbg !5222
  store i64 0, i64* %size, align 8, !dbg !5222
  %0 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !5223
  %source = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 11, !dbg !5225
  %1 = load i16, i16* %source, align 8, !dbg !5225
  %conv = sext i16 %1 to i32, !dbg !5223
  %cmp = icmp eq i32 %conv, 5, !dbg !5226
  br i1 %cmp, label %if.then, label %if.end, !dbg !5227

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !5228
  br label %return, !dbg !5228

if.end:                                           ; preds = %entry
  call void @BLI_spin_lock(i32* @image_spin), !dbg !5229
  %2 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !5230
  %cache = getelementptr inbounds %struct.Image, %struct.Image* %2, i32 0, i32 2, !dbg !5232
  %3 = load %struct.MovieCache*, %struct.MovieCache** %cache, align 8, !dbg !5232
  %cmp2 = icmp ne %struct.MovieCache* %3, null, !dbg !5233
  br i1 %cmp2, label %if.then4, label %if.end38, !dbg !5234

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.MovieCacheIter** %iter, metadata !5235, metadata !DIExpression()), !dbg !5237
  %4 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !5238
  %cache5 = getelementptr inbounds %struct.Image, %struct.Image* %4, i32 0, i32 2, !dbg !5239
  %5 = load %struct.MovieCache*, %struct.MovieCache** %cache5, align 8, !dbg !5239
  %call = call %struct.MovieCacheIter* @IMB_moviecacheIter_new(%struct.MovieCache* %5), !dbg !5240
  store %struct.MovieCacheIter* %call, %struct.MovieCacheIter** %iter, align 8, !dbg !5237
  br label %while.cond, !dbg !5241

while.cond:                                       ; preds = %for.end, %if.then4
  %6 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !5242
  %call6 = call zeroext i8 @IMB_moviecacheIter_done(%struct.MovieCacheIter* %6), !dbg !5243
  %tobool = icmp ne i8 %call6, 0, !dbg !5244
  %lnot = xor i1 %tobool, true, !dbg !5244
  br i1 %lnot, label %while.body, label %while.end, !dbg !5241

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !5245, metadata !DIExpression()), !dbg !5247
  %7 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !5248
  %call7 = call %struct.ImBuf* @IMB_moviecacheIter_getImBuf(%struct.MovieCacheIter* %7), !dbg !5249
  store %struct.ImBuf* %call7, %struct.ImBuf** %ibuf, align 8, !dbg !5247
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibufm, metadata !5250, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.declare(metadata i32* %level, metadata !5252, metadata !DIExpression()), !dbg !5253
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5254
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %8, i32 0, i32 8, !dbg !5256
  %9 = load i32*, i32** %rect, align 8, !dbg !5256
  %tobool8 = icmp ne i32* %9, null, !dbg !5254
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !5257

if.then9:                                         ; preds = %while.body
  %10 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !5258
  %11 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5260
  %rect10 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %11, i32 0, i32 8, !dbg !5261
  %12 = load i32*, i32** %rect10, align 8, !dbg !5261
  %13 = bitcast i32* %12 to i8*, !dbg !5260
  %call11 = call i64 %10(i8* %13), !dbg !5258
  %14 = load i64, i64* %size, align 8, !dbg !5262
  %add = add i64 %14, %call11, !dbg !5262
  store i64 %add, i64* %size, align 8, !dbg !5262
  br label %if.end12, !dbg !5263

if.end12:                                         ; preds = %if.then9, %while.body
  %15 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5264
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %15, i32 0, i32 9, !dbg !5266
  %16 = load float*, float** %rect_float, align 8, !dbg !5266
  %tobool13 = icmp ne float* %16, null, !dbg !5264
  br i1 %tobool13, label %if.then14, label %if.end18, !dbg !5267

if.then14:                                        ; preds = %if.end12
  %17 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !5268
  %18 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5270
  %rect_float15 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %18, i32 0, i32 9, !dbg !5271
  %19 = load float*, float** %rect_float15, align 8, !dbg !5271
  %20 = bitcast float* %19 to i8*, !dbg !5270
  %call16 = call i64 %17(i8* %20), !dbg !5268
  %21 = load i64, i64* %size, align 8, !dbg !5272
  %add17 = add i64 %21, %call16, !dbg !5272
  store i64 %add17, i64* %size, align 8, !dbg !5272
  br label %if.end18, !dbg !5273

if.end18:                                         ; preds = %if.then14, %if.end12
  store i32 0, i32* %level, align 4, !dbg !5274
  br label %for.cond, !dbg !5276

for.cond:                                         ; preds = %for.inc, %if.end18
  %22 = load i32, i32* %level, align 4, !dbg !5277
  %cmp19 = icmp slt i32 %22, 20, !dbg !5279
  br i1 %cmp19, label %for.body, label %for.end, !dbg !5280

for.body:                                         ; preds = %for.cond
  %23 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5281
  %mipmap = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %23, i32 0, i32 19, !dbg !5283
  %24 = load i32, i32* %level, align 4, !dbg !5284
  %idxprom = sext i32 %24 to i64, !dbg !5281
  %arrayidx = getelementptr inbounds [20 x %struct.ImBuf*], [20 x %struct.ImBuf*]* %mipmap, i64 0, i64 %idxprom, !dbg !5281
  %25 = load %struct.ImBuf*, %struct.ImBuf** %arrayidx, align 8, !dbg !5281
  store %struct.ImBuf* %25, %struct.ImBuf** %ibufm, align 8, !dbg !5285
  %26 = load %struct.ImBuf*, %struct.ImBuf** %ibufm, align 8, !dbg !5286
  %tobool21 = icmp ne %struct.ImBuf* %26, null, !dbg !5286
  br i1 %tobool21, label %if.then22, label %if.end37, !dbg !5288

if.then22:                                        ; preds = %for.body
  %27 = load %struct.ImBuf*, %struct.ImBuf** %ibufm, align 8, !dbg !5289
  %rect23 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %27, i32 0, i32 8, !dbg !5292
  %28 = load i32*, i32** %rect23, align 8, !dbg !5292
  %tobool24 = icmp ne i32* %28, null, !dbg !5289
  br i1 %tobool24, label %if.then25, label %if.end29, !dbg !5293

if.then25:                                        ; preds = %if.then22
  %29 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !5294
  %30 = load %struct.ImBuf*, %struct.ImBuf** %ibufm, align 8, !dbg !5296
  %rect26 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %30, i32 0, i32 8, !dbg !5297
  %31 = load i32*, i32** %rect26, align 8, !dbg !5297
  %32 = bitcast i32* %31 to i8*, !dbg !5296
  %call27 = call i64 %29(i8* %32), !dbg !5294
  %33 = load i64, i64* %size, align 8, !dbg !5298
  %add28 = add i64 %33, %call27, !dbg !5298
  store i64 %add28, i64* %size, align 8, !dbg !5298
  br label %if.end29, !dbg !5299

if.end29:                                         ; preds = %if.then25, %if.then22
  %34 = load %struct.ImBuf*, %struct.ImBuf** %ibufm, align 8, !dbg !5300
  %rect_float30 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %34, i32 0, i32 9, !dbg !5302
  %35 = load float*, float** %rect_float30, align 8, !dbg !5302
  %tobool31 = icmp ne float* %35, null, !dbg !5300
  br i1 %tobool31, label %if.then32, label %if.end36, !dbg !5303

if.then32:                                        ; preds = %if.end29
  %36 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !5304
  %37 = load %struct.ImBuf*, %struct.ImBuf** %ibufm, align 8, !dbg !5306
  %rect_float33 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %37, i32 0, i32 9, !dbg !5307
  %38 = load float*, float** %rect_float33, align 8, !dbg !5307
  %39 = bitcast float* %38 to i8*, !dbg !5306
  %call34 = call i64 %36(i8* %39), !dbg !5304
  %40 = load i64, i64* %size, align 8, !dbg !5308
  %add35 = add i64 %40, %call34, !dbg !5308
  store i64 %add35, i64* %size, align 8, !dbg !5308
  br label %if.end36, !dbg !5309

if.end36:                                         ; preds = %if.then32, %if.end29
  br label %if.end37, !dbg !5310

if.end37:                                         ; preds = %if.end36, %for.body
  br label %for.inc, !dbg !5311

for.inc:                                          ; preds = %if.end37
  %41 = load i32, i32* %level, align 4, !dbg !5312
  %inc = add nsw i32 %41, 1, !dbg !5312
  store i32 %inc, i32* %level, align 4, !dbg !5312
  br label %for.cond, !dbg !5313, !llvm.loop !5314

for.end:                                          ; preds = %for.cond
  %42 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !5316
  call void @IMB_moviecacheIter_step(%struct.MovieCacheIter* %42), !dbg !5317
  br label %while.cond, !dbg !5241, !llvm.loop !5318

while.end:                                        ; preds = %while.cond
  %43 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !5320
  call void @IMB_moviecacheIter_free(%struct.MovieCacheIter* %43), !dbg !5321
  br label %if.end38, !dbg !5322

if.end38:                                         ; preds = %while.end, %if.end
  call void @BLI_spin_unlock(i32* @image_spin), !dbg !5323
  %44 = load i64, i64* %size, align 8, !dbg !5324
  store i64 %44, i64* %retval, align 8, !dbg !5325
  br label %return, !dbg !5325

return:                                           ; preds = %if.end38, %if.then
  %45 = load i64, i64* %retval, align 8, !dbg !5326
  ret i64 %45, !dbg !5326
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_free_all_textures() #0 !dbg !5327 {
entry:
  %tex = alloca %struct.Tex*, align 8
  %ima = alloca %struct.Image*, align 8
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex, metadata !5328, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !5330, metadata !DIExpression()), !dbg !5331
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !5332
  %image = getelementptr inbounds %struct.Main, %struct.Main* %0, i32 0, i32 19, !dbg !5334
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %image, i32 0, i32 0, !dbg !5335
  %1 = load i8*, i8** %first, align 8, !dbg !5335
  %2 = bitcast i8* %1 to %struct.Image*, !dbg !5336
  store %struct.Image* %2, %struct.Image** %ima, align 8, !dbg !5337
  br label %for.cond, !dbg !5338

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5339
  %tobool = icmp ne %struct.Image* %3, null, !dbg !5341
  br i1 %tobool, label %for.body, label %for.end, !dbg !5341

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5342
  %id = getelementptr inbounds %struct.Image, %struct.Image* %4, i32 0, i32 0, !dbg !5343
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !5344
  %5 = load i16, i16* %flag, align 2, !dbg !5345
  %conv = sext i16 %5 to i32, !dbg !5345
  %and = and i32 %conv, -1025, !dbg !5345
  %conv1 = trunc i32 %and to i16, !dbg !5345
  store i16 %conv1, i16* %flag, align 2, !dbg !5345
  br label %for.inc, !dbg !5342

for.inc:                                          ; preds = %for.body
  %6 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5346
  %id2 = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 0, !dbg !5347
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 0, !dbg !5348
  %7 = load i8*, i8** %next, align 8, !dbg !5348
  %8 = bitcast i8* %7 to %struct.Image*, !dbg !5346
  store %struct.Image* %8, %struct.Image** %ima, align 8, !dbg !5349
  br label %for.cond, !dbg !5350, !llvm.loop !5351

for.end:                                          ; preds = %for.cond
  %9 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !5353
  %tex3 = getelementptr inbounds %struct.Main, %struct.Main* %9, i32 0, i32 18, !dbg !5355
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %tex3, i32 0, i32 0, !dbg !5356
  %10 = load i8*, i8** %first4, align 8, !dbg !5356
  %11 = bitcast i8* %10 to %struct.Tex*, !dbg !5357
  store %struct.Tex* %11, %struct.Tex** %tex, align 8, !dbg !5358
  br label %for.cond5, !dbg !5359

for.cond5:                                        ; preds = %for.inc15, %for.end
  %12 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !5360
  %tobool6 = icmp ne %struct.Tex* %12, null, !dbg !5362
  br i1 %tobool6, label %for.body7, label %for.end18, !dbg !5362

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !5363
  %ima8 = getelementptr inbounds %struct.Tex, %struct.Tex* %13, i32 0, i32 54, !dbg !5365
  %14 = load %struct.Image*, %struct.Image** %ima8, align 8, !dbg !5365
  %tobool9 = icmp ne %struct.Image* %14, null, !dbg !5363
  br i1 %tobool9, label %if.then, label %if.end, !dbg !5366

if.then:                                          ; preds = %for.body7
  %15 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !5367
  %ima10 = getelementptr inbounds %struct.Tex, %struct.Tex* %15, i32 0, i32 54, !dbg !5368
  %16 = load %struct.Image*, %struct.Image** %ima10, align 8, !dbg !5368
  %id11 = getelementptr inbounds %struct.Image, %struct.Image* %16, i32 0, i32 0, !dbg !5369
  %flag12 = getelementptr inbounds %struct.ID, %struct.ID* %id11, i32 0, i32 5, !dbg !5370
  %17 = load i16, i16* %flag12, align 2, !dbg !5371
  %conv13 = sext i16 %17 to i32, !dbg !5371
  %or = or i32 %conv13, 1024, !dbg !5371
  %conv14 = trunc i32 %or to i16, !dbg !5371
  store i16 %conv14, i16* %flag12, align 2, !dbg !5371
  br label %if.end, !dbg !5367

if.end:                                           ; preds = %if.then, %for.body7
  br label %for.inc15, !dbg !5365

for.inc15:                                        ; preds = %if.end
  %18 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !5372
  %id16 = getelementptr inbounds %struct.Tex, %struct.Tex* %18, i32 0, i32 0, !dbg !5373
  %next17 = getelementptr inbounds %struct.ID, %struct.ID* %id16, i32 0, i32 0, !dbg !5374
  %19 = load i8*, i8** %next17, align 8, !dbg !5374
  %20 = bitcast i8* %19 to %struct.Tex*, !dbg !5372
  store %struct.Tex* %20, %struct.Tex** %tex, align 8, !dbg !5375
  br label %for.cond5, !dbg !5376, !llvm.loop !5377

for.end18:                                        ; preds = %for.cond5
  %21 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !5379
  %image19 = getelementptr inbounds %struct.Main, %struct.Main* %21, i32 0, i32 19, !dbg !5381
  %first20 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %image19, i32 0, i32 0, !dbg !5382
  %22 = load i8*, i8** %first20, align 8, !dbg !5382
  %23 = bitcast i8* %22 to %struct.Image*, !dbg !5383
  store %struct.Image* %23, %struct.Image** %ima, align 8, !dbg !5384
  br label %for.cond21, !dbg !5385

for.cond21:                                       ; preds = %for.inc33, %for.end18
  %24 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5386
  %tobool22 = icmp ne %struct.Image* %24, null, !dbg !5388
  br i1 %tobool22, label %for.body23, label %for.end36, !dbg !5388

for.body23:                                       ; preds = %for.cond21
  %25 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5389
  %cache = getelementptr inbounds %struct.Image, %struct.Image* %25, i32 0, i32 2, !dbg !5392
  %26 = load %struct.MovieCache*, %struct.MovieCache** %cache, align 8, !dbg !5392
  %tobool24 = icmp ne %struct.MovieCache* %26, null, !dbg !5389
  br i1 %tobool24, label %land.lhs.true, label %if.end32, !dbg !5393

land.lhs.true:                                    ; preds = %for.body23
  %27 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5394
  %id25 = getelementptr inbounds %struct.Image, %struct.Image* %27, i32 0, i32 0, !dbg !5395
  %flag26 = getelementptr inbounds %struct.ID, %struct.ID* %id25, i32 0, i32 5, !dbg !5396
  %28 = load i16, i16* %flag26, align 2, !dbg !5396
  %conv27 = sext i16 %28 to i32, !dbg !5394
  %and28 = and i32 %conv27, 1024, !dbg !5397
  %tobool29 = icmp ne i32 %and28, 0, !dbg !5397
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !5398

if.then30:                                        ; preds = %land.lhs.true
  %29 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5399
  %cache31 = getelementptr inbounds %struct.Image, %struct.Image* %29, i32 0, i32 2, !dbg !5401
  %30 = load %struct.MovieCache*, %struct.MovieCache** %cache31, align 8, !dbg !5401
  call void @IMB_moviecache_cleanup(%struct.MovieCache* %30, i8 (%struct.ImBuf*, i8*, i8*)* @imagecache_check_dirty, i8* null), !dbg !5402
  br label %if.end32, !dbg !5403

if.end32:                                         ; preds = %if.then30, %land.lhs.true, %for.body23
  br label %for.inc33, !dbg !5404

for.inc33:                                        ; preds = %if.end32
  %31 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5405
  %id34 = getelementptr inbounds %struct.Image, %struct.Image* %31, i32 0, i32 0, !dbg !5406
  %next35 = getelementptr inbounds %struct.ID, %struct.ID* %id34, i32 0, i32 0, !dbg !5407
  %32 = load i8*, i8** %next35, align 8, !dbg !5407
  %33 = bitcast i8* %32 to %struct.Image*, !dbg !5405
  store %struct.Image* %33, %struct.Image** %ima, align 8, !dbg !5408
  br label %for.cond21, !dbg !5409, !llvm.loop !5410

for.end36:                                        ; preds = %for.cond21
  ret void, !dbg !5412
}

declare dso_local void @IMB_moviecache_cleanup(%struct.MovieCache*, i8 (%struct.ImBuf*, i8*, i8*)*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @imagecache_check_dirty(%struct.ImBuf* %ibuf, i8* %UNUSED_userkey, i8* %UNUSED_userdata) #0 !dbg !5413 {
entry:
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %UNUSED_userkey.addr = alloca i8*, align 8
  %UNUSED_userdata.addr = alloca i8*, align 8
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !5416, metadata !DIExpression()), !dbg !5417
  store i8* %UNUSED_userkey, i8** %UNUSED_userkey.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_userkey.addr, metadata !5418, metadata !DIExpression()), !dbg !5419
  store i8* %UNUSED_userdata, i8** %UNUSED_userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_userdata.addr, metadata !5420, metadata !DIExpression()), !dbg !5421
  %0 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5422
  %userflags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %0, i32 0, i32 23, !dbg !5423
  %1 = load i32, i32* %userflags, align 4, !dbg !5423
  %and = and i32 %1, 2, !dbg !5424
  %cmp = icmp eq i32 %and, 0, !dbg !5425
  %conv = zext i1 %cmp to i32, !dbg !5425
  %conv1 = trunc i32 %conv to i8, !dbg !5426
  ret i8 %conv1, !dbg !5427
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_free_anim_ibufs(%struct.Image* %ima, i32 %except_frame) #0 !dbg !5428 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %except_frame.addr = alloca i32, align 4
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !5429, metadata !DIExpression()), !dbg !5430
  store i32 %except_frame, i32* %except_frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %except_frame.addr, metadata !5431, metadata !DIExpression()), !dbg !5432
  call void @BLI_spin_lock(i32* @image_spin), !dbg !5433
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5434
  %cache = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 2, !dbg !5436
  %1 = load %struct.MovieCache*, %struct.MovieCache** %cache, align 8, !dbg !5436
  %cmp = icmp ne %struct.MovieCache* %1, null, !dbg !5437
  br i1 %cmp, label %if.then, label %if.end, !dbg !5438

if.then:                                          ; preds = %entry
  %2 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !5439
  %cache1 = getelementptr inbounds %struct.Image, %struct.Image* %2, i32 0, i32 2, !dbg !5441
  %3 = load %struct.MovieCache*, %struct.MovieCache** %cache1, align 8, !dbg !5441
  %4 = bitcast i32* %except_frame.addr to i8*, !dbg !5442
  call void @IMB_moviecache_cleanup(%struct.MovieCache* %3, i8 (%struct.ImBuf*, i8*, i8*)* @imagecache_check_free_anim, i8* %4), !dbg !5443
  br label %if.end, !dbg !5444

if.end:                                           ; preds = %if.then, %entry
  call void @BLI_spin_unlock(i32* @image_spin), !dbg !5445
  ret void, !dbg !5446
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @imagecache_check_free_anim(%struct.ImBuf* %ibuf, i8* %UNUSED_userkey, i8* %userdata) #0 !dbg !5447 {
entry:
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %UNUSED_userkey.addr = alloca i8*, align 8
  %userdata.addr = alloca i8*, align 8
  %except_frame = alloca i32, align 4
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !5448, metadata !DIExpression()), !dbg !5449
  store i8* %UNUSED_userkey, i8** %UNUSED_userkey.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_userkey.addr, metadata !5450, metadata !DIExpression()), !dbg !5451
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !5452, metadata !DIExpression()), !dbg !5453
  call void @llvm.dbg.declare(metadata i32* %except_frame, metadata !5454, metadata !DIExpression()), !dbg !5455
  %0 = load i8*, i8** %userdata.addr, align 8, !dbg !5456
  %1 = bitcast i8* %0 to i32*, !dbg !5457
  %2 = load i32, i32* %1, align 4, !dbg !5458
  store i32 %2, i32* %except_frame, align 4, !dbg !5455
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5459
  %userflags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %3, i32 0, i32 23, !dbg !5460
  %4 = load i32, i32* %userflags, align 4, !dbg !5460
  %and = and i32 %4, 2, !dbg !5461
  %cmp = icmp eq i32 %and, 0, !dbg !5462
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !5463

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5464
  %index = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %5, i32 0, i32 22, !dbg !5465
  %6 = load i32, i32* %index, align 8, !dbg !5465
  %cmp1 = icmp ne i32 %6, 2146430959, !dbg !5466
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !5467

land.rhs:                                         ; preds = %land.lhs.true
  %7 = load i32, i32* %except_frame, align 4, !dbg !5468
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5469
  %index2 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %8, i32 0, i32 22, !dbg !5469
  %9 = load i32, i32* %index2, align 8, !dbg !5469
  %shr = ashr i32 %9, 10, !dbg !5469
  %cmp3 = icmp ne i32 %7, %shr, !dbg !5470
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !5471
  %land.ext = zext i1 %10 to i32, !dbg !5467
  %conv = trunc i32 %land.ext to i8, !dbg !5472
  ret i8 %conv, !dbg !5473
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_all_free_anim_ibufs(i32 %cfra) #0 !dbg !5474 {
entry:
  %cfra.addr = alloca i32, align 4
  %ima = alloca %struct.Image*, align 8
  store i32 %cfra, i32* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra.addr, metadata !5477, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !5479, metadata !DIExpression()), !dbg !5480
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !5481
  %image = getelementptr inbounds %struct.Main, %struct.Main* %0, i32 0, i32 19, !dbg !5483
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %image, i32 0, i32 0, !dbg !5484
  %1 = load i8*, i8** %first, align 8, !dbg !5484
  %2 = bitcast i8* %1 to %struct.Image*, !dbg !5485
  store %struct.Image* %2, %struct.Image** %ima, align 8, !dbg !5486
  br label %for.cond, !dbg !5487

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5488
  %tobool = icmp ne %struct.Image* %3, null, !dbg !5490
  br i1 %tobool, label %for.body, label %for.end, !dbg !5490

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5491
  %call = call zeroext i8 @BKE_image_is_animated(%struct.Image* %4), !dbg !5493
  %tobool1 = icmp ne i8 %call, 0, !dbg !5493
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5494

if.then:                                          ; preds = %for.body
  %5 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5495
  %6 = load i32, i32* %cfra.addr, align 4, !dbg !5496
  call void @BKE_image_free_anim_ibufs(%struct.Image* %5, i32 %6), !dbg !5497
  br label %if.end, !dbg !5497

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5498

for.inc:                                          ; preds = %if.end
  %7 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5499
  %id = getelementptr inbounds %struct.Image, %struct.Image* %7, i32 0, i32 0, !dbg !5500
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 0, !dbg !5501
  %8 = load i8*, i8** %next, align 8, !dbg !5501
  %9 = bitcast i8* %8 to %struct.Image*, !dbg !5499
  store %struct.Image* %9, %struct.Image** %ima, align 8, !dbg !5502
  br label %for.cond, !dbg !5503, !llvm.loop !5504

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5506
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_image_is_animated(%struct.Image* %image) #0 !dbg !5507 {
entry:
  %image.addr = alloca %struct.Image*, align 8
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !5510, metadata !DIExpression()), !dbg !5511
  %0 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !5512
  %source = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 11, !dbg !5512
  %1 = load i16, i16* %source, align 8, !dbg !5512
  %conv = sext i16 %1 to i32, !dbg !5512
  %cmp = icmp eq i32 %conv, 3, !dbg !5512
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !5512

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !5512
  %source2 = getelementptr inbounds %struct.Image, %struct.Image* %2, i32 0, i32 11, !dbg !5512
  %3 = load i16, i16* %source2, align 8, !dbg !5512
  %conv3 = sext i16 %3 to i32, !dbg !5512
  %cmp4 = icmp eq i32 %conv3, 2, !dbg !5512
  br label %lor.end, !dbg !5512

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp4, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32, !dbg !5512
  %conv6 = trunc i32 %lor.ext to i8, !dbg !5512
  ret i8 %conv6, !dbg !5513
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_imtype_to_ftype(i8 zeroext %imtype) #0 !dbg !5514 {
entry:
  %retval = alloca i32, align 4
  %imtype.addr = alloca i8, align 1
  store i8 %imtype, i8* %imtype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %imtype.addr, metadata !5517, metadata !DIExpression()), !dbg !5518
  %0 = load i8, i8* %imtype.addr, align 1, !dbg !5519
  %conv = zext i8 %0 to i32, !dbg !5519
  %cmp = icmp eq i32 %conv, 0, !dbg !5521
  br i1 %cmp, label %if.then, label %if.else, !dbg !5522

if.then:                                          ; preds = %entry
  store i32 268435456, i32* %retval, align 4, !dbg !5523
  br label %return, !dbg !5523

if.else:                                          ; preds = %entry
  %1 = load i8, i8* %imtype.addr, align 1, !dbg !5524
  %conv2 = zext i8 %1 to i32, !dbg !5524
  %cmp3 = icmp eq i32 %conv2, 14, !dbg !5526
  br i1 %cmp3, label %if.then5, label %if.else6, !dbg !5527

if.then5:                                         ; preds = %if.else
  store i32 268435457, i32* %retval, align 4, !dbg !5528
  br label %return, !dbg !5528

if.else6:                                         ; preds = %if.else
  %2 = load i8, i8* %imtype.addr, align 1, !dbg !5529
  %conv7 = zext i8 %2 to i32, !dbg !5529
  %cmp8 = icmp eq i32 %conv7, 1, !dbg !5531
  br i1 %cmp8, label %if.then10, label %if.else11, !dbg !5532

if.then10:                                        ; preds = %if.else6
  store i32 474, i32* %retval, align 4, !dbg !5533
  br label %return, !dbg !5533

if.else11:                                        ; preds = %if.else6
  %3 = load i8, i8* %imtype.addr, align 1, !dbg !5534
  %conv12 = zext i8 %3 to i32, !dbg !5534
  %cmp13 = icmp eq i32 %conv12, 17, !dbg !5536
  br i1 %cmp13, label %if.then15, label %if.else16, !dbg !5537

if.then15:                                        ; preds = %if.else11
  store i32 1073741839, i32* %retval, align 4, !dbg !5538
  br label %return, !dbg !5538

if.else16:                                        ; preds = %if.else11
  %4 = load i8, i8* %imtype.addr, align 1, !dbg !5539
  %conv17 = zext i8 %4 to i32, !dbg !5539
  %cmp18 = icmp eq i32 %conv17, 20, !dbg !5541
  br i1 %cmp18, label %if.then20, label %if.else21, !dbg !5542

if.then20:                                        ; preds = %if.else16
  store i32 67108864, i32* %retval, align 4, !dbg !5543
  br label %return, !dbg !5543

if.else21:                                        ; preds = %if.else16
  %5 = load i8, i8* %imtype.addr, align 1, !dbg !5544
  %conv22 = zext i8 %5 to i32, !dbg !5544
  %cmp23 = icmp eq i32 %conv22, 23, !dbg !5546
  br i1 %cmp23, label %if.then28, label %lor.lhs.false, !dbg !5547

lor.lhs.false:                                    ; preds = %if.else21
  %6 = load i8, i8* %imtype.addr, align 1, !dbg !5548
  %conv25 = zext i8 %6 to i32, !dbg !5548
  %cmp26 = icmp eq i32 %conv25, 28, !dbg !5549
  br i1 %cmp26, label %if.then28, label %if.else29, !dbg !5550

if.then28:                                        ; preds = %lor.lhs.false, %if.else21
  store i32 4194304, i32* %retval, align 4, !dbg !5551
  br label %return, !dbg !5551

if.else29:                                        ; preds = %lor.lhs.false
  store i32 134217818, i32* %retval, align 4, !dbg !5552
  br label %return, !dbg !5552

return:                                           ; preds = %if.else29, %if.then28, %if.then20, %if.then15, %if.then10, %if.then5, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !5553
  ret i32 %7, !dbg !5553
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_ftype_to_imtype(i32 %ftype) #0 !dbg !5554 {
entry:
  %retval = alloca i8, align 1
  %ftype.addr = alloca i32, align 4
  store i32 %ftype, i32* %ftype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ftype.addr, metadata !5558, metadata !DIExpression()), !dbg !5559
  %0 = load i32, i32* %ftype.addr, align 4, !dbg !5560
  %cmp = icmp eq i32 %0, 0, !dbg !5562
  br i1 %cmp, label %if.then, label %if.else, !dbg !5563

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !5564
  br label %return, !dbg !5564

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %ftype.addr, align 4, !dbg !5565
  %cmp1 = icmp eq i32 %1, 474, !dbg !5567
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !5568

if.then2:                                         ; preds = %if.else
  store i8 1, i8* %retval, align 1, !dbg !5569
  br label %return, !dbg !5569

if.else3:                                         ; preds = %if.else
  %2 = load i32, i32* %ftype.addr, align 4, !dbg !5570
  %and = and i32 %2, 1073741824, !dbg !5572
  %tobool = icmp ne i32 %and, 0, !dbg !5572
  br i1 %tobool, label %if.then4, label %if.else5, !dbg !5573

if.then4:                                         ; preds = %if.else3
  store i8 17, i8* %retval, align 1, !dbg !5574
  br label %return, !dbg !5574

if.else5:                                         ; preds = %if.else3
  %3 = load i32, i32* %ftype.addr, align 4, !dbg !5575
  %and6 = and i32 %3, 67108864, !dbg !5577
  %tobool7 = icmp ne i32 %and6, 0, !dbg !5577
  br i1 %tobool7, label %if.then8, label %if.else9, !dbg !5578

if.then8:                                         ; preds = %if.else5
  store i8 20, i8* %retval, align 1, !dbg !5579
  br label %return, !dbg !5579

if.else9:                                         ; preds = %if.else5
  %4 = load i32, i32* %ftype.addr, align 4, !dbg !5580
  %and10 = and i32 %4, 4194304, !dbg !5582
  %tobool11 = icmp ne i32 %and10, 0, !dbg !5582
  br i1 %tobool11, label %if.then12, label %if.else13, !dbg !5583

if.then12:                                        ; preds = %if.else9
  store i8 23, i8* %retval, align 1, !dbg !5584
  br label %return, !dbg !5584

if.else13:                                        ; preds = %if.else9
  %5 = load i32, i32* %ftype.addr, align 4, !dbg !5585
  %and14 = and i32 %5, 268435456, !dbg !5587
  %tobool15 = icmp ne i32 %and14, 0, !dbg !5587
  br i1 %tobool15, label %if.then16, label %if.else17, !dbg !5588

if.then16:                                        ; preds = %if.else13
  store i8 0, i8* %retval, align 1, !dbg !5589
  br label %return, !dbg !5589

if.else17:                                        ; preds = %if.else13
  %6 = load i32, i32* %ftype.addr, align 4, !dbg !5590
  %and18 = and i32 %6, 268435457, !dbg !5592
  %tobool19 = icmp ne i32 %and18, 0, !dbg !5592
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !5593

if.then20:                                        ; preds = %if.else17
  store i8 14, i8* %retval, align 1, !dbg !5594
  br label %return, !dbg !5594

if.else21:                                        ; preds = %if.else17
  store i8 4, i8* %retval, align 1, !dbg !5595
  br label %return, !dbg !5595

return:                                           ; preds = %if.else21, %if.then20, %if.then16, %if.then12, %if.then8, %if.then4, %if.then2, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !5596
  ret i8 %7, !dbg !5596
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_imtype_is_movie(i8 zeroext %imtype) #0 !dbg !5597 {
entry:
  %retval = alloca i8, align 1
  %imtype.addr = alloca i8, align 1
  store i8 %imtype, i8* %imtype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %imtype.addr, metadata !5600, metadata !DIExpression()), !dbg !5601
  %0 = load i8, i8* %imtype.addr, align 1, !dbg !5602
  %conv = zext i8 %0 to i32, !dbg !5602
  switch i32 %conv, label %sw.epilog [
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 19, label %sw.bb
    i32 24, label %sw.bb
    i32 31, label %sw.bb
    i32 33, label %sw.bb
    i32 32, label %sw.bb
    i32 25, label %sw.bb
  ], !dbg !5603

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i8 1, i8* %retval, align 1, !dbg !5604
  br label %return, !dbg !5604

sw.epilog:                                        ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !5606
  br label %return, !dbg !5606

return:                                           ; preds = %sw.epilog, %sw.bb
  %1 = load i8, i8* %retval, align 1, !dbg !5607
  ret i8 %1, !dbg !5607
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_imtype_supports_zbuf(i8 zeroext %imtype) #0 !dbg !5608 {
entry:
  %retval = alloca i32, align 4
  %imtype.addr = alloca i8, align 1
  store i8 %imtype, i8* %imtype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %imtype.addr, metadata !5609, metadata !DIExpression()), !dbg !5610
  %0 = load i8, i8* %imtype.addr, align 1, !dbg !5611
  %conv = zext i8 %0 to i32, !dbg !5611
  switch i32 %conv, label %sw.epilog [
    i32 7, label %sw.bb
    i32 23, label %sw.bb
  ], !dbg !5612

sw.bb:                                            ; preds = %entry, %entry
  store i32 1, i32* %retval, align 4, !dbg !5613
  br label %return, !dbg !5613

sw.epilog:                                        ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5615
  br label %return, !dbg !5615

return:                                           ; preds = %sw.epilog, %sw.bb
  %1 = load i32, i32* %retval, align 4, !dbg !5616
  ret i32 %1, !dbg !5616
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_imtype_supports_compress(i8 zeroext %imtype) #0 !dbg !5617 {
entry:
  %retval = alloca i32, align 4
  %imtype.addr = alloca i8, align 1
  store i8 %imtype, i8* %imtype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %imtype.addr, metadata !5618, metadata !DIExpression()), !dbg !5619
  %0 = load i8, i8* %imtype.addr, align 1, !dbg !5620
  %conv = zext i8 %0 to i32, !dbg !5620
  switch i32 %conv, label %sw.epilog [
    i32 17, label %sw.bb
  ], !dbg !5621

sw.bb:                                            ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !5622
  br label %return, !dbg !5622

sw.epilog:                                        ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5624
  br label %return, !dbg !5624

return:                                           ; preds = %sw.epilog, %sw.bb
  %1 = load i32, i32* %retval, align 4, !dbg !5625
  ret i32 %1, !dbg !5625
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_imtype_supports_quality(i8 zeroext %imtype) #0 !dbg !5626 {
entry:
  %retval = alloca i32, align 4
  %imtype.addr = alloca i8, align 1
  store i8 %imtype, i8* %imtype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %imtype.addr, metadata !5627, metadata !DIExpression()), !dbg !5628
  %0 = load i8, i8* %imtype.addr, align 1, !dbg !5629
  %conv = zext i8 %0 to i32, !dbg !5629
  switch i32 %conv, label %sw.epilog [
    i32 4, label %sw.bb
    i32 30, label %sw.bb
    i32 16, label %sw.bb
  ], !dbg !5630

sw.bb:                                            ; preds = %entry, %entry, %entry
  store i32 1, i32* %retval, align 4, !dbg !5631
  br label %return, !dbg !5631

sw.epilog:                                        ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5633
  br label %return, !dbg !5633

return:                                           ; preds = %sw.epilog, %sw.bb
  %1 = load i32, i32* %retval, align 4, !dbg !5634
  ret i32 %1, !dbg !5634
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_imtype_requires_linear_float(i8 zeroext %imtype) #0 !dbg !5635 {
entry:
  %retval = alloca i32, align 4
  %imtype.addr = alloca i8, align 1
  store i8 %imtype, i8* %imtype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %imtype.addr, metadata !5636, metadata !DIExpression()), !dbg !5637
  %0 = load i8, i8* %imtype.addr, align 1, !dbg !5638
  %conv = zext i8 %0 to i32, !dbg !5638
  switch i32 %conv, label %sw.epilog [
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 21, label %sw.bb
    i32 23, label %sw.bb
    i32 28, label %sw.bb
  ], !dbg !5639

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store i32 1, i32* %retval, align 4, !dbg !5640
  br label %return, !dbg !5640

sw.epilog:                                        ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5642
  br label %return, !dbg !5642

return:                                           ; preds = %sw.epilog, %sw.bb
  %1 = load i32, i32* %retval, align 4, !dbg !5643
  ret i32 %1, !dbg !5643
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_imtype_valid_channels(i8 zeroext %imtype, i8 zeroext %write_file) #0 !dbg !5644 {
entry:
  %imtype.addr = alloca i8, align 1
  %write_file.addr = alloca i8, align 1
  %chan_flag = alloca i8, align 1
  store i8 %imtype, i8* %imtype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %imtype.addr, metadata !5647, metadata !DIExpression()), !dbg !5648
  store i8 %write_file, i8* %write_file.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %write_file.addr, metadata !5649, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.declare(metadata i8* %chan_flag, metadata !5651, metadata !DIExpression()), !dbg !5652
  store i8 2, i8* %chan_flag, align 1, !dbg !5652
  %0 = load i8, i8* %imtype.addr, align 1, !dbg !5653
  %conv = zext i8 %0 to i32, !dbg !5653
  switch i32 %conv, label %sw.epilog [
    i32 20, label %sw.bb
    i32 0, label %sw.bb1
    i32 1, label %sw.bb1
    i32 17, label %sw.bb1
    i32 21, label %sw.bb1
    i32 22, label %sw.bb1
    i32 23, label %sw.bb1
    i32 28, label %sw.bb1
    i32 29, label %sw.bb1
    i32 30, label %sw.bb1
    i32 19, label %sw.bb1
    i32 27, label %sw.bb1
  ], !dbg !5654

sw.bb:                                            ; preds = %entry
  %1 = load i8, i8* %write_file.addr, align 1, !dbg !5655
  %tobool = icmp ne i8 %1, 0, !dbg !5655
  br i1 %tobool, label %if.then, label %if.end, !dbg !5658

if.then:                                          ; preds = %sw.bb
  br label %sw.epilog, !dbg !5659

if.end:                                           ; preds = %sw.bb
  br label %sw.bb1, !dbg !5655

sw.bb1:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %if.end
  %2 = load i8, i8* %chan_flag, align 1, !dbg !5660
  %conv2 = zext i8 %2 to i32, !dbg !5660
  %or = or i32 %conv2, 4, !dbg !5660
  %conv3 = trunc i32 %or to i8, !dbg !5660
  store i8 %conv3, i8* %chan_flag, align 1, !dbg !5660
  br label %sw.epilog, !dbg !5661

sw.epilog:                                        ; preds = %entry, %sw.bb1, %if.then
  %3 = load i8, i8* %imtype.addr, align 1, !dbg !5662
  %conv4 = zext i8 %3 to i32, !dbg !5662
  switch i32 %conv4, label %sw.epilog9 [
    i32 17, label %sw.bb5
    i32 4, label %sw.bb5
    i32 0, label %sw.bb5
    i32 14, label %sw.bb5
    i32 22, label %sw.bb5
    i32 1, label %sw.bb5
  ], !dbg !5663

sw.bb5:                                           ; preds = %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog
  %4 = load i8, i8* %chan_flag, align 1, !dbg !5664
  %conv6 = zext i8 %4 to i32, !dbg !5664
  %or7 = or i32 %conv6, 1, !dbg !5664
  %conv8 = trunc i32 %or7 to i8, !dbg !5664
  store i8 %conv8, i8* %chan_flag, align 1, !dbg !5664
  br label %sw.epilog9, !dbg !5666

sw.epilog9:                                       ; preds = %sw.epilog, %sw.bb5
  %5 = load i8, i8* %chan_flag, align 1, !dbg !5667
  ret i8 %5, !dbg !5668
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_imtype_valid_depths(i8 zeroext %imtype) #0 !dbg !5669 {
entry:
  %retval = alloca i8, align 1
  %imtype.addr = alloca i8, align 1
  store i8 %imtype, i8* %imtype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %imtype.addr, metadata !5672, metadata !DIExpression()), !dbg !5673
  %0 = load i8, i8* %imtype.addr, align 1, !dbg !5674
  %conv = zext i8 %0 to i32, !dbg !5674
  switch i32 %conv, label %sw.default [
    i32 21, label %sw.bb
    i32 22, label %sw.bb1
    i32 23, label %sw.bb2
    i32 28, label %sw.bb3
    i32 27, label %sw.bb4
    i32 26, label %sw.bb5
    i32 30, label %sw.bb6
    i32 17, label %sw.bb7
  ], !dbg !5675

sw.bb:                                            ; preds = %entry
  store i8 64, i8* %retval, align 1, !dbg !5676
  br label %return, !dbg !5676

sw.bb1:                                           ; preds = %entry
  store i8 18, i8* %retval, align 1, !dbg !5678
  br label %return, !dbg !5678

sw.bb2:                                           ; preds = %entry
  store i8 80, i8* %retval, align 1, !dbg !5679
  br label %return, !dbg !5679

sw.bb3:                                           ; preds = %entry
  store i8 64, i8* %retval, align 1, !dbg !5680
  br label %return, !dbg !5680

sw.bb4:                                           ; preds = %entry
  store i8 30, i8* %retval, align 1, !dbg !5681
  br label %return, !dbg !5681

sw.bb5:                                           ; preds = %entry
  store i8 4, i8* %retval, align 1, !dbg !5682
  br label %return, !dbg !5682

sw.bb6:                                           ; preds = %entry
  store i8 26, i8* %retval, align 1, !dbg !5683
  br label %return, !dbg !5683

sw.bb7:                                           ; preds = %entry
  store i8 18, i8* %retval, align 1, !dbg !5684
  br label %return, !dbg !5684

sw.default:                                       ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !5685
  br label %return, !dbg !5685

return:                                           ; preds = %sw.default, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8, i8* %retval, align 1, !dbg !5686
  ret i8 %1, !dbg !5686
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_imtype_from_arg(i8* %imtype_arg) #0 !dbg !5687 {
entry:
  %retval = alloca i8, align 1
  %imtype_arg.addr = alloca i8*, align 8
  store i8* %imtype_arg, i8** %imtype_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %imtype_arg.addr, metadata !5688, metadata !DIExpression()), !dbg !5689
  %0 = load i8*, i8** %imtype_arg.addr, align 8, !dbg !5690
  %call = call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5692
  %tobool = icmp ne i32 %call, 0, !dbg !5692
  br i1 %tobool, label %if.else, label %if.then, !dbg !5693

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !5694
  br label %return, !dbg !5694

if.else:                                          ; preds = %entry
  %1 = load i8*, i8** %imtype_arg.addr, align 8, !dbg !5695
  %call1 = call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5697
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5697
  br i1 %tobool2, label %if.else4, label %if.then3, !dbg !5698

if.then3:                                         ; preds = %if.else
  store i8 1, i8* %retval, align 1, !dbg !5699
  br label %return, !dbg !5699

if.else4:                                         ; preds = %if.else
  %2 = load i8*, i8** %imtype_arg.addr, align 8, !dbg !5700
  %call5 = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !5702
  %tobool6 = icmp ne i32 %call5, 0, !dbg !5702
  br i1 %tobool6, label %if.else8, label %if.then7, !dbg !5703

if.then7:                                         ; preds = %if.else4
  store i8 4, i8* %retval, align 1, !dbg !5704
  br label %return, !dbg !5704

if.else8:                                         ; preds = %if.else4
  %3 = load i8*, i8** %imtype_arg.addr, align 8, !dbg !5705
  %call9 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !5707
  %tobool10 = icmp ne i32 %call9, 0, !dbg !5707
  br i1 %tobool10, label %if.else12, label %if.then11, !dbg !5708

if.then11:                                        ; preds = %if.else8
  store i8 7, i8* %retval, align 1, !dbg !5709
  br label %return, !dbg !5709

if.else12:                                        ; preds = %if.else8
  %4 = load i8*, i8** %imtype_arg.addr, align 8, !dbg !5710
  %call13 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !5712
  %tobool14 = icmp ne i32 %call13, 0, !dbg !5712
  br i1 %tobool14, label %if.else16, label %if.then15, !dbg !5713

if.then15:                                        ; preds = %if.else12
  store i8 14, i8* %retval, align 1, !dbg !5714
  br label %return, !dbg !5714

if.else16:                                        ; preds = %if.else12
  %5 = load i8*, i8** %imtype_arg.addr, align 8, !dbg !5715
  %call17 = call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !5717
  %tobool18 = icmp ne i32 %call17, 0, !dbg !5717
  br i1 %tobool18, label %if.else20, label %if.then19, !dbg !5718

if.then19:                                        ; preds = %if.else16
  store i8 15, i8* %retval, align 1, !dbg !5719
  br label %return, !dbg !5719

if.else20:                                        ; preds = %if.else16
  %6 = load i8*, i8** %imtype_arg.addr, align 8, !dbg !5720
  %call21 = call i32 @strcmp(i8* %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !5722
  %tobool22 = icmp ne i32 %call21, 0, !dbg !5722
  br i1 %tobool22, label %if.else24, label %if.then23, !dbg !5723

if.then23:                                        ; preds = %if.else20
  store i8 16, i8* %retval, align 1, !dbg !5724
  br label %return, !dbg !5724

if.else24:                                        ; preds = %if.else20
  %7 = load i8*, i8** %imtype_arg.addr, align 8, !dbg !5725
  %call25 = call i32 @strcmp(i8* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !5727
  %tobool26 = icmp ne i32 %call25, 0, !dbg !5727
  br i1 %tobool26, label %if.else28, label %if.then27, !dbg !5728

if.then27:                                        ; preds = %if.else24
  store i8 17, i8* %retval, align 1, !dbg !5729
  br label %return, !dbg !5729

if.else28:                                        ; preds = %if.else24
  %8 = load i8*, i8** %imtype_arg.addr, align 8, !dbg !5730
  %call29 = call i32 @strcmp(i8* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !5732
  %tobool30 = icmp ne i32 %call29, 0, !dbg !5732
  br i1 %tobool30, label %if.else32, label %if.then31, !dbg !5733

if.then31:                                        ; preds = %if.else28
  store i8 19, i8* %retval, align 1, !dbg !5734
  br label %return, !dbg !5734

if.else32:                                        ; preds = %if.else28
  %9 = load i8*, i8** %imtype_arg.addr, align 8, !dbg !5735
  %call33 = call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !5737
  %tobool34 = icmp ne i32 %call33, 0, !dbg !5737
  br i1 %tobool34, label %if.else36, label %if.then35, !dbg !5738

if.then35:                                        ; preds = %if.else32
  store i8 20, i8* %retval, align 1, !dbg !5739
  br label %return, !dbg !5739

if.else36:                                        ; preds = %if.else32
  %10 = load i8*, i8** %imtype_arg.addr, align 8, !dbg !5740
  %call37 = call i32 @strcmp(i8* %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #6, !dbg !5742
  %tobool38 = icmp ne i32 %call37, 0, !dbg !5742
  br i1 %tobool38, label %if.else40, label %if.then39, !dbg !5743

if.then39:                                        ; preds = %if.else36
  store i8 24, i8* %retval, align 1, !dbg !5744
  br label %return, !dbg !5744

if.else40:                                        ; preds = %if.else36
  %11 = load i8*, i8** %imtype_arg.addr, align 8, !dbg !5745
  %call41 = call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !5747
  %tobool42 = icmp ne i32 %call41, 0, !dbg !5747
  br i1 %tobool42, label %if.else44, label %if.then43, !dbg !5748

if.then43:                                        ; preds = %if.else40
  store i8 25, i8* %retval, align 1, !dbg !5749
  br label %return, !dbg !5749

if.else44:                                        ; preds = %if.else40
  store i8 -1, i8* %retval, align 1, !dbg !5750
  br label %return, !dbg !5750

return:                                           ; preds = %if.else44, %if.then43, %if.then39, %if.then35, %if.then31, %if.then27, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3, %if.then
  %12 = load i8, i8* %retval, align 1, !dbg !5751
  ret i8 %12, !dbg !5751
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_add_image_extension(i8* %string, %struct.ImageFormatData* %im_format) #0 !dbg !5752 {
entry:
  %string.addr = alloca i8*, align 8
  %im_format.addr = alloca %struct.ImageFormatData*, align 8
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !5758, metadata !DIExpression()), !dbg !5759
  store %struct.ImageFormatData* %im_format, %struct.ImageFormatData** %im_format.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageFormatData** %im_format.addr, metadata !5760, metadata !DIExpression()), !dbg !5761
  %0 = load i8*, i8** %string.addr, align 8, !dbg !5762
  %1 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !5763
  %imtype = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %1, i32 0, i32 0, !dbg !5764
  %2 = load i8, i8* %imtype, align 8, !dbg !5764
  %3 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !5765
  %call = call zeroext i8 @do_add_image_extension(i8* %0, i8 zeroext %2, %struct.ImageFormatData* %3), !dbg !5766
  %conv = zext i8 %call to i32, !dbg !5766
  ret i32 %conv, !dbg !5767
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @do_add_image_extension(i8* %string, i8 zeroext %imtype, %struct.ImageFormatData* %im_format) #0 !dbg !5768 {
entry:
  %retval = alloca i8, align 1
  %string.addr = alloca i8*, align 8
  %imtype.addr = alloca i8, align 1
  %im_format.addr = alloca %struct.ImageFormatData*, align 8
  %extension = alloca i8*, align 8
  %extension_test = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !5771, metadata !DIExpression()), !dbg !5772
  store i8 %imtype, i8* %imtype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %imtype.addr, metadata !5773, metadata !DIExpression()), !dbg !5774
  store %struct.ImageFormatData* %im_format, %struct.ImageFormatData** %im_format.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageFormatData** %im_format.addr, metadata !5775, metadata !DIExpression()), !dbg !5776
  call void @llvm.dbg.declare(metadata i8** %extension, metadata !5777, metadata !DIExpression()), !dbg !5778
  store i8* null, i8** %extension, align 8, !dbg !5778
  call void @llvm.dbg.declare(metadata i8** %extension_test, metadata !5779, metadata !DIExpression()), !dbg !5780
  %0 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !5781
  %1 = load i8, i8* %imtype.addr, align 1, !dbg !5782
  %conv = zext i8 %1 to i32, !dbg !5782
  %cmp = icmp eq i32 %conv, 1, !dbg !5784
  br i1 %cmp, label %if.then, label %if.else, !dbg !5785

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %string.addr, align 8, !dbg !5786
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i64 0, i64 0), i8** %extension_test, align 8, !dbg !5789
  %call = call zeroext i8 @BLI_testextensie(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i64 0, i64 0)), !dbg !5790
  %tobool = icmp ne i8 %call, 0, !dbg !5790
  br i1 %tobool, label %if.end, label %if.then2, !dbg !5791

if.then2:                                         ; preds = %if.then
  %3 = load i8*, i8** %extension_test, align 8, !dbg !5792
  store i8* %3, i8** %extension, align 8, !dbg !5793
  br label %if.end, !dbg !5794

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end66, !dbg !5795

if.else:                                          ; preds = %entry
  %4 = load i8, i8* %imtype.addr, align 1, !dbg !5796
  %conv3 = zext i8 %4 to i32, !dbg !5796
  %cmp4 = icmp eq i32 %conv3, 7, !dbg !5798
  br i1 %cmp4, label %if.then6, label %if.else11, !dbg !5799

if.then6:                                         ; preds = %if.else
  %5 = load i8*, i8** %string.addr, align 8, !dbg !5800
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i64 0, i64 0), i8** %extension_test, align 8, !dbg !5803
  %call7 = call zeroext i8 @BLI_testextensie(i8* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i64 0, i64 0)), !dbg !5804
  %tobool8 = icmp ne i8 %call7, 0, !dbg !5804
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !5805

if.then9:                                         ; preds = %if.then6
  %6 = load i8*, i8** %extension_test, align 8, !dbg !5806
  store i8* %6, i8** %extension, align 8, !dbg !5807
  br label %if.end10, !dbg !5808

if.end10:                                         ; preds = %if.then9, %if.then6
  br label %if.end65, !dbg !5809

if.else11:                                        ; preds = %if.else
  %7 = load i8, i8* %imtype.addr, align 1, !dbg !5810
  %conv12 = zext i8 %7 to i32, !dbg !5810
  %cmp13 = icmp eq i32 %conv12, 17, !dbg !5810
  br i1 %cmp13, label %if.then30, label %lor.lhs.false, !dbg !5810

lor.lhs.false:                                    ; preds = %if.else11
  %8 = load i8, i8* %imtype.addr, align 1, !dbg !5810
  %conv15 = zext i8 %8 to i32, !dbg !5810
  %cmp16 = icmp eq i32 %conv15, 24, !dbg !5810
  br i1 %cmp16, label %if.then30, label %lor.lhs.false18, !dbg !5810

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %9 = load i8, i8* %imtype.addr, align 1, !dbg !5810
  %conv19 = zext i8 %9 to i32, !dbg !5810
  %cmp20 = icmp eq i32 %conv19, 31, !dbg !5810
  br i1 %cmp20, label %if.then30, label %lor.lhs.false22, !dbg !5810

lor.lhs.false22:                                  ; preds = %lor.lhs.false18
  %10 = load i8, i8* %imtype.addr, align 1, !dbg !5810
  %conv23 = zext i8 %10 to i32, !dbg !5810
  %cmp24 = icmp eq i32 %conv23, 33, !dbg !5810
  br i1 %cmp24, label %if.then30, label %lor.lhs.false26, !dbg !5810

lor.lhs.false26:                                  ; preds = %lor.lhs.false22
  %11 = load i8, i8* %imtype.addr, align 1, !dbg !5810
  %conv27 = zext i8 %11 to i32, !dbg !5810
  %cmp28 = icmp eq i32 %conv27, 32, !dbg !5810
  br i1 %cmp28, label %if.then30, label %if.else35, !dbg !5812

if.then30:                                        ; preds = %lor.lhs.false26, %lor.lhs.false22, %lor.lhs.false18, %lor.lhs.false, %if.else11
  %12 = load i8*, i8** %string.addr, align 8, !dbg !5813
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i64 0, i64 0), i8** %extension_test, align 8, !dbg !5816
  %call31 = call zeroext i8 @BLI_testextensie(i8* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i64 0, i64 0)), !dbg !5817
  %tobool32 = icmp ne i8 %call31, 0, !dbg !5817
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !5818

if.then33:                                        ; preds = %if.then30
  %13 = load i8*, i8** %extension_test, align 8, !dbg !5819
  store i8* %13, i8** %extension, align 8, !dbg !5820
  br label %if.end34, !dbg !5821

if.end34:                                         ; preds = %if.then33, %if.then30
  br label %if.end64, !dbg !5822

if.else35:                                        ; preds = %lor.lhs.false26
  %14 = load i8, i8* %imtype.addr, align 1, !dbg !5823
  %conv36 = zext i8 %14 to i32, !dbg !5823
  %cmp37 = icmp eq i32 %conv36, 0, !dbg !5823
  br i1 %cmp37, label %if.then43, label %lor.lhs.false39, !dbg !5823

lor.lhs.false39:                                  ; preds = %if.else35
  %15 = load i8, i8* %imtype.addr, align 1, !dbg !5823
  %conv40 = zext i8 %15 to i32, !dbg !5823
  %cmp41 = icmp eq i32 %conv40, 14, !dbg !5823
  br i1 %cmp41, label %if.then43, label %if.else48, !dbg !5825

if.then43:                                        ; preds = %lor.lhs.false39, %if.else35
  %16 = load i8*, i8** %string.addr, align 8, !dbg !5826
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i8** %extension_test, align 8, !dbg !5829
  %call44 = call zeroext i8 @BLI_testextensie(i8* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)), !dbg !5830
  %tobool45 = icmp ne i8 %call44, 0, !dbg !5830
  br i1 %tobool45, label %if.end47, label %if.then46, !dbg !5831

if.then46:                                        ; preds = %if.then43
  %17 = load i8*, i8** %extension_test, align 8, !dbg !5832
  store i8* %17, i8** %extension, align 8, !dbg !5833
  br label %if.end47, !dbg !5834

if.end47:                                         ; preds = %if.then46, %if.then43
  br label %if.end63, !dbg !5835

if.else48:                                        ; preds = %lor.lhs.false39
  %18 = load i8, i8* %imtype.addr, align 1, !dbg !5836
  %conv49 = zext i8 %18 to i32, !dbg !5836
  %cmp50 = icmp eq i32 %conv49, 20, !dbg !5838
  br i1 %cmp50, label %if.then52, label %if.else57, !dbg !5839

if.then52:                                        ; preds = %if.else48
  %19 = load i8*, i8** %string.addr, align 8, !dbg !5840
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i64 0, i64 0), i8** %extension_test, align 8, !dbg !5843
  %call53 = call zeroext i8 @BLI_testextensie(i8* %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i64 0, i64 0)), !dbg !5844
  %tobool54 = icmp ne i8 %call53, 0, !dbg !5844
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !5845

if.then55:                                        ; preds = %if.then52
  %20 = load i8*, i8** %extension_test, align 8, !dbg !5846
  store i8* %20, i8** %extension, align 8, !dbg !5847
  br label %if.end56, !dbg !5848

if.end56:                                         ; preds = %if.then55, %if.then52
  br label %if.end62, !dbg !5849

if.else57:                                        ; preds = %if.else48
  %21 = load i8*, i8** %string.addr, align 8, !dbg !5850
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i64 0, i64 0), i8** %extension_test, align 8, !dbg !5853
  %call58 = call zeroext i8 (i8*, ...) @BLI_testextensie_n(i8* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0), i8* null), !dbg !5854
  %tobool59 = icmp ne i8 %call58, 0, !dbg !5854
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !5855

if.then60:                                        ; preds = %if.else57
  %22 = load i8*, i8** %extension_test, align 8, !dbg !5856
  store i8* %22, i8** %extension, align 8, !dbg !5857
  br label %if.end61, !dbg !5858

if.end61:                                         ; preds = %if.then60, %if.else57
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.end56
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.end47
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.end34
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.end10
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end
  %23 = load i8*, i8** %extension, align 8, !dbg !5859
  %tobool67 = icmp ne i8* %23, null, !dbg !5859
  br i1 %tobool67, label %if.then68, label %if.else82, !dbg !5861

if.then68:                                        ; preds = %if.end66
  %24 = load i8*, i8** %string.addr, align 8, !dbg !5862
  %call69 = call zeroext i8 @BLI_testextensie_array(i8* %24, i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @imb_ext_image, i64 0, i64 0)), !dbg !5865
  %conv70 = zext i8 %call69 to i32, !dbg !5865
  %tobool71 = icmp ne i32 %conv70, 0, !dbg !5865
  br i1 %tobool71, label %if.then78, label %lor.lhs.false72, !dbg !5866

lor.lhs.false72:                                  ; preds = %if.then68
  %25 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 17), align 8, !dbg !5867
  %conv73 = zext i8 %25 to i32, !dbg !5868
  %tobool74 = icmp ne i32 %conv73, 0, !dbg !5868
  br i1 %tobool74, label %land.lhs.true, label %if.else80, !dbg !5869

land.lhs.true:                                    ; preds = %lor.lhs.false72
  %26 = load i8*, i8** %string.addr, align 8, !dbg !5870
  %call75 = call zeroext i8 @BLI_testextensie_array(i8* %26, i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @imb_ext_image_qt, i64 0, i64 0)), !dbg !5871
  %conv76 = zext i8 %call75 to i32, !dbg !5871
  %tobool77 = icmp ne i32 %conv76, 0, !dbg !5871
  br i1 %tobool77, label %if.then78, label %if.else80, !dbg !5872

if.then78:                                        ; preds = %land.lhs.true, %if.then68
  %27 = load i8*, i8** %string.addr, align 8, !dbg !5873
  %28 = load i8*, i8** %extension, align 8, !dbg !5875
  %call79 = call zeroext i8 @BLI_replace_extension(i8* %27, i64 1024, i8* %28), !dbg !5876
  store i8 %call79, i8* %retval, align 1, !dbg !5877
  br label %return, !dbg !5877

if.else80:                                        ; preds = %land.lhs.true, %lor.lhs.false72
  %29 = load i8*, i8** %string.addr, align 8, !dbg !5878
  %30 = load i8*, i8** %extension, align 8, !dbg !5880
  %call81 = call zeroext i8 @BLI_ensure_extension(i8* %29, i64 1024, i8* %30), !dbg !5881
  store i8 %call81, i8* %retval, align 1, !dbg !5882
  br label %return, !dbg !5882

if.else82:                                        ; preds = %if.end66
  store i8 0, i8* %retval, align 1, !dbg !5883
  br label %return, !dbg !5883

return:                                           ; preds = %if.else82, %if.else80, %if.then78
  %31 = load i8, i8* %retval, align 1, !dbg !5885
  ret i8 %31, !dbg !5885
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_add_image_extension_from_type(i8* %string, i8 zeroext %imtype) #0 !dbg !5886 {
entry:
  %string.addr = alloca i8*, align 8
  %imtype.addr = alloca i8, align 1
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !5889, metadata !DIExpression()), !dbg !5890
  store i8 %imtype, i8* %imtype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %imtype.addr, metadata !5891, metadata !DIExpression()), !dbg !5892
  %0 = load i8*, i8** %string.addr, align 8, !dbg !5893
  %1 = load i8, i8* %imtype.addr, align 1, !dbg !5894
  %call = call zeroext i8 @do_add_image_extension(i8* %0, i8 zeroext %1, %struct.ImageFormatData* null), !dbg !5895
  %conv = zext i8 %call to i32, !dbg !5895
  ret i32 %conv, !dbg !5896
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_imformat_defaults(%struct.ImageFormatData* %im_format) #0 !dbg !5897 {
entry:
  %im_format.addr = alloca %struct.ImageFormatData*, align 8
  store %struct.ImageFormatData* %im_format, %struct.ImageFormatData** %im_format.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageFormatData** %im_format.addr, metadata !5901, metadata !DIExpression()), !dbg !5902
  %0 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !5903
  %1 = bitcast %struct.ImageFormatData* %0 to i8*, !dbg !5904
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 248, i1 false), !dbg !5904
  %2 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !5905
  %planes = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %2, i32 0, i32 2, !dbg !5906
  store i8 32, i8* %planes, align 2, !dbg !5907
  %3 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !5908
  %imtype = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %3, i32 0, i32 0, !dbg !5909
  store i8 17, i8* %imtype, align 8, !dbg !5910
  %4 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !5911
  %depth = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %4, i32 0, i32 1, !dbg !5912
  store i8 2, i8* %depth, align 1, !dbg !5913
  %5 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !5914
  %quality = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %5, i32 0, i32 4, !dbg !5915
  store i8 90, i8* %quality, align 4, !dbg !5916
  %6 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !5917
  %compress = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %6, i32 0, i32 5, !dbg !5918
  store i8 15, i8* %compress, align 1, !dbg !5919
  %7 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !5920
  %display_settings = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %7, i32 0, i32 15, !dbg !5921
  call void @BKE_color_managed_display_settings_init(%struct.ColorManagedDisplaySettings* %display_settings), !dbg !5922
  %8 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !5923
  %view_settings = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %8, i32 0, i32 14, !dbg !5924
  call void @BKE_color_managed_view_settings_init(%struct.ColorManagedViewSettings* %view_settings), !dbg !5925
  ret void, !dbg !5926
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare dso_local void @BKE_color_managed_display_settings_init(%struct.ColorManagedDisplaySettings*) #1

declare dso_local void @BKE_color_managed_view_settings_init(%struct.ColorManagedViewSettings*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_imbuf_to_image_format(%struct.ImageFormatData* %im_format, %struct.ImBuf* %imbuf) #0 !dbg !5927 {
entry:
  %im_format.addr = alloca %struct.ImageFormatData*, align 8
  %imbuf.addr = alloca %struct.ImBuf*, align 8
  %ftype = alloca i32, align 4
  %custom_flags = alloca i32, align 4
  store %struct.ImageFormatData* %im_format, %struct.ImageFormatData** %im_format.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageFormatData** %im_format.addr, metadata !5933, metadata !DIExpression()), !dbg !5934
  store %struct.ImBuf* %imbuf, %struct.ImBuf** %imbuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %imbuf.addr, metadata !5935, metadata !DIExpression()), !dbg !5936
  call void @llvm.dbg.declare(metadata i32* %ftype, metadata !5937, metadata !DIExpression()), !dbg !5938
  %0 = load %struct.ImBuf*, %struct.ImBuf** %imbuf.addr, align 8, !dbg !5939
  %ftype1 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %0, i32 0, i32 26, !dbg !5940
  %1 = load i32, i32* %ftype1, align 8, !dbg !5940
  %and = and i32 %1, -2048, !dbg !5941
  store i32 %and, i32* %ftype, align 4, !dbg !5938
  call void @llvm.dbg.declare(metadata i32* %custom_flags, metadata !5942, metadata !DIExpression()), !dbg !5943
  %2 = load %struct.ImBuf*, %struct.ImBuf** %imbuf.addr, align 8, !dbg !5944
  %ftype2 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %2, i32 0, i32 26, !dbg !5945
  %3 = load i32, i32* %ftype2, align 8, !dbg !5945
  %and3 = and i32 %3, 2047, !dbg !5946
  store i32 %and3, i32* %custom_flags, align 4, !dbg !5943
  %4 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !5947
  call void @BKE_imformat_defaults(%struct.ImageFormatData* %4), !dbg !5948
  %5 = load i32, i32* %ftype, align 4, !dbg !5949
  %cmp = icmp eq i32 %5, 474, !dbg !5951
  br i1 %cmp, label %if.then, label %if.else, !dbg !5952

if.then:                                          ; preds = %entry
  %6 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !5953
  %imtype = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %6, i32 0, i32 0, !dbg !5954
  store i8 1, i8* %imtype, align 8, !dbg !5955
  br label %if.end28, !dbg !5953

if.else:                                          ; preds = %entry
  %7 = load i32, i32* %ftype, align 4, !dbg !5956
  %cmp4 = icmp eq i32 %7, 1073741824, !dbg !5958
  br i1 %cmp4, label %if.then5, label %if.else9, !dbg !5959

if.then5:                                         ; preds = %if.else
  %8 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !5960
  %imtype6 = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %8, i32 0, i32 0, !dbg !5962
  store i8 17, i8* %imtype6, align 8, !dbg !5963
  %9 = load i32, i32* %custom_flags, align 4, !dbg !5964
  %and7 = and i32 %9, 1024, !dbg !5966
  %tobool = icmp ne i32 %and7, 0, !dbg !5966
  br i1 %tobool, label %if.then8, label %if.end, !dbg !5967

if.then8:                                         ; preds = %if.then5
  %10 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !5968
  %depth = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %10, i32 0, i32 1, !dbg !5969
  store i8 16, i8* %depth, align 1, !dbg !5970
  br label %if.end, !dbg !5968

if.end:                                           ; preds = %if.then8, %if.then5
  br label %if.end27, !dbg !5971

if.else9:                                         ; preds = %if.else
  %11 = load i32, i32* %ftype, align 4, !dbg !5972
  %cmp10 = icmp eq i32 %11, 67108864, !dbg !5974
  br i1 %cmp10, label %if.then11, label %if.else13, !dbg !5975

if.then11:                                        ; preds = %if.else9
  %12 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !5976
  %imtype12 = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %12, i32 0, i32 0, !dbg !5977
  store i8 20, i8* %imtype12, align 8, !dbg !5978
  br label %if.end26, !dbg !5976

if.else13:                                        ; preds = %if.else9
  %13 = load i32, i32* %ftype, align 4, !dbg !5979
  %cmp14 = icmp eq i32 %13, 268435456, !dbg !5981
  br i1 %cmp14, label %if.then15, label %if.else17, !dbg !5982

if.then15:                                        ; preds = %if.else13
  %14 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !5983
  %imtype16 = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %14, i32 0, i32 0, !dbg !5985
  store i8 0, i8* %imtype16, align 8, !dbg !5986
  br label %if.end25, !dbg !5987

if.else17:                                        ; preds = %if.else13
  %15 = load i32, i32* %ftype, align 4, !dbg !5988
  %cmp18 = icmp eq i32 %15, 268435457, !dbg !5990
  br i1 %cmp18, label %if.then19, label %if.else21, !dbg !5991

if.then19:                                        ; preds = %if.else17
  %16 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !5992
  %imtype20 = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %16, i32 0, i32 0, !dbg !5994
  store i8 14, i8* %imtype20, align 8, !dbg !5995
  br label %if.end24, !dbg !5996

if.else21:                                        ; preds = %if.else17
  %17 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !5997
  %imtype22 = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %17, i32 0, i32 0, !dbg !5999
  store i8 4, i8* %imtype22, align 8, !dbg !6000
  %18 = load i32, i32* %custom_flags, align 4, !dbg !6001
  %and23 = and i32 %18, 255, !dbg !6002
  %conv = trunc i32 %and23 to i8, !dbg !6001
  %19 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !6003
  %quality = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %19, i32 0, i32 4, !dbg !6004
  store i8 %conv, i8* %quality, align 4, !dbg !6005
  br label %if.end24

if.end24:                                         ; preds = %if.else21, %if.then19
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then15
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then11
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then
  %20 = load %struct.ImBuf*, %struct.ImBuf** %imbuf.addr, align 8, !dbg !6006
  %channels = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %20, i32 0, i32 5, !dbg !6007
  %21 = load i32, i32* %channels, align 4, !dbg !6007
  switch i32 %21, label %sw.default [
    i32 0, label %sw.bb
    i32 4, label %sw.bb
    i32 3, label %sw.bb29
    i32 1, label %sw.bb31
  ], !dbg !6008

sw.bb:                                            ; preds = %if.end28, %if.end28
  %22 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !6009
  %planes = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %22, i32 0, i32 2, !dbg !6011
  store i8 32, i8* %planes, align 2, !dbg !6012
  br label %sw.epilog, !dbg !6013

sw.bb29:                                          ; preds = %if.end28
  %23 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !6014
  %planes30 = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %23, i32 0, i32 2, !dbg !6015
  store i8 24, i8* %planes30, align 2, !dbg !6016
  br label %sw.epilog, !dbg !6017

sw.bb31:                                          ; preds = %if.end28
  %24 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !6018
  %planes32 = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %24, i32 0, i32 2, !dbg !6019
  store i8 8, i8* %planes32, align 2, !dbg !6020
  br label %sw.epilog, !dbg !6021

sw.default:                                       ; preds = %if.end28
  %25 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !6022
  %planes33 = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %25, i32 0, i32 2, !dbg !6023
  store i8 24, i8* %planes33, align 2, !dbg !6024
  br label %sw.epilog, !dbg !6025

sw.epilog:                                        ; preds = %sw.default, %sw.bb31, %sw.bb29, %sw.bb
  ret void, !dbg !6026
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_stamp_buf(%struct.Scene* %scene, %struct.Object* %camera, i8* %rect, float* %rectf, i32 %width, i32 %height, i32 %channels) #0 !dbg !6027 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %camera.addr = alloca %struct.Object*, align 8
  %rect.addr = alloca i8*, align 8
  %rectf.addr = alloca float*, align 8
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %channels.addr = alloca i32, align 4
  %stamp_data = alloca %struct.StampData, align 1
  %w = alloca float, align 4
  %h = alloca float, align 4
  %pad = alloca float, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %y_ofs = alloca i32, align 4
  %h_fixed = alloca float, align 4
  %mono = alloca i32, align 4
  %display = alloca %struct.ColorManagedDisplay*, align 8
  %display_device = alloca i8*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6034, metadata !DIExpression()), !dbg !6035
  store %struct.Object* %camera, %struct.Object** %camera.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %camera.addr, metadata !6036, metadata !DIExpression()), !dbg !6037
  store i8* %rect, i8** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rect.addr, metadata !6038, metadata !DIExpression()), !dbg !6039
  store float* %rectf, float** %rectf.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rectf.addr, metadata !6040, metadata !DIExpression()), !dbg !6041
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !6042, metadata !DIExpression()), !dbg !6043
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !6044, metadata !DIExpression()), !dbg !6045
  store i32 %channels, i32* %channels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channels.addr, metadata !6046, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.declare(metadata %struct.StampData* %stamp_data, metadata !6048, metadata !DIExpression()), !dbg !6068
  call void @llvm.dbg.declare(metadata float* %w, metadata !6069, metadata !DIExpression()), !dbg !6070
  call void @llvm.dbg.declare(metadata float* %h, metadata !6071, metadata !DIExpression()), !dbg !6072
  call void @llvm.dbg.declare(metadata float* %pad, metadata !6073, metadata !DIExpression()), !dbg !6074
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6075, metadata !DIExpression()), !dbg !6076
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6077, metadata !DIExpression()), !dbg !6078
  call void @llvm.dbg.declare(metadata i32* %y_ofs, metadata !6079, metadata !DIExpression()), !dbg !6080
  call void @llvm.dbg.declare(metadata float* %h_fixed, metadata !6081, metadata !DIExpression()), !dbg !6082
  call void @llvm.dbg.declare(metadata i32* %mono, metadata !6083, metadata !DIExpression()), !dbg !6084
  %0 = load i32, i32* @blf_mono_font_render, align 4, !dbg !6085
  store i32 %0, i32* %mono, align 4, !dbg !6084
  call void @llvm.dbg.declare(metadata %struct.ColorManagedDisplay** %display, metadata !6086, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.declare(metadata i8** %display_device, metadata !6090, metadata !DIExpression()), !dbg !6091
  %1 = load i8*, i8** %rect.addr, align 8, !dbg !6092
  %tobool = icmp ne i8* %1, null, !dbg !6092
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6094

land.lhs.true:                                    ; preds = %entry
  %2 = load float*, float** %rectf.addr, align 8, !dbg !6095
  %tobool1 = icmp ne float* %2, null, !dbg !6095
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6096

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !6097

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6098
  %display_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %3, i32 0, i32 45, !dbg !6099
  %display_device2 = getelementptr inbounds %struct.ColorManagedDisplaySettings, %struct.ColorManagedDisplaySettings* %display_settings, i32 0, i32 0, !dbg !6100
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %display_device2, i64 0, i64 0, !dbg !6098
  store i8* %arraydecay, i8** %display_device, align 8, !dbg !6101
  %4 = load i8*, i8** %display_device, align 8, !dbg !6102
  %call = call %struct.ColorManagedDisplay* @IMB_colormanagement_display_get_named(i8* %4), !dbg !6103
  store %struct.ColorManagedDisplay* %call, %struct.ColorManagedDisplay** %display, align 8, !dbg !6104
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6105
  %6 = load %struct.Object*, %struct.Object** %camera.addr, align 8, !dbg !6106
  call void @stampdata(%struct.Scene* %5, %struct.Object* %6, %struct.StampData* %stamp_data, i32 1), !dbg !6107
  %7 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6108
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %7, i32 0, i32 22, !dbg !6110
  %stamp_font_id = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 86, !dbg !6111
  %8 = load i16, i16* %stamp_font_id, align 4, !dbg !6111
  %conv = sext i16 %8 to i32, !dbg !6108
  %cmp = icmp slt i32 %conv, 8, !dbg !6112
  br i1 %cmp, label %if.then4, label %if.end7, !dbg !6113

if.then4:                                         ; preds = %if.end
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6114
  %r5 = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 22, !dbg !6115
  %stamp_font_id6 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r5, i32 0, i32 86, !dbg !6116
  store i16 12, i16* %stamp_font_id6, align 4, !dbg !6117
  br label %if.end7, !dbg !6114

if.end7:                                          ; preds = %if.then4, %if.end
  %10 = load i32, i32* %mono, align 4, !dbg !6118
  %11 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6119
  %r8 = getelementptr inbounds %struct.Scene, %struct.Scene* %11, i32 0, i32 22, !dbg !6120
  %stamp_font_id9 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r8, i32 0, i32 86, !dbg !6121
  %12 = load i16, i16* %stamp_font_id9, align 4, !dbg !6121
  %conv10 = sext i16 %12 to i32, !dbg !6119
  call void @BLF_size(i32 %10, i32 %conv10, i32 72), !dbg !6122
  %13 = load i32, i32* %mono, align 4, !dbg !6123
  %14 = load float*, float** %rectf.addr, align 8, !dbg !6124
  %15 = load i8*, i8** %rect.addr, align 8, !dbg !6125
  %16 = load i32, i32* %width.addr, align 4, !dbg !6126
  %17 = load i32, i32* %height.addr, align 4, !dbg !6127
  %18 = load i32, i32* %channels.addr, align 4, !dbg !6128
  %19 = load %struct.ColorManagedDisplay*, %struct.ColorManagedDisplay** %display, align 8, !dbg !6129
  call void @BLF_buffer(i32 %13, float* %14, i8* %15, i32 %16, i32 %17, i32 %18, %struct.ColorManagedDisplay* %19), !dbg !6130
  %20 = load i32, i32* %mono, align 4, !dbg !6131
  %21 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6132
  %r11 = getelementptr inbounds %struct.Scene, %struct.Scene* %21, i32 0, i32 22, !dbg !6133
  %fg_stamp = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r11, i32 0, i32 89, !dbg !6134
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %fg_stamp, i64 0, i64 0, !dbg !6132
  %22 = load float, float* %arrayidx, align 8, !dbg !6132
  %23 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6135
  %r12 = getelementptr inbounds %struct.Scene, %struct.Scene* %23, i32 0, i32 22, !dbg !6136
  %fg_stamp13 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r12, i32 0, i32 89, !dbg !6137
  %arrayidx14 = getelementptr inbounds [4 x float], [4 x float]* %fg_stamp13, i64 0, i64 1, !dbg !6135
  %24 = load float, float* %arrayidx14, align 4, !dbg !6135
  %25 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6138
  %r15 = getelementptr inbounds %struct.Scene, %struct.Scene* %25, i32 0, i32 22, !dbg !6139
  %fg_stamp16 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r15, i32 0, i32 89, !dbg !6140
  %arrayidx17 = getelementptr inbounds [4 x float], [4 x float]* %fg_stamp16, i64 0, i64 2, !dbg !6138
  %26 = load float, float* %arrayidx17, align 8, !dbg !6138
  call void @BLF_buffer_col(i32 %20, float %22, float %24, float %26, float 1.000000e+00), !dbg !6141
  %27 = load i32, i32* %mono, align 4, !dbg !6142
  %call18 = call float @BLF_width_max(i32 %27), !dbg !6143
  store float %call18, float* %pad, align 4, !dbg !6144
  %28 = load i32, i32* %mono, align 4, !dbg !6145
  %call19 = call float @BLF_height_max(i32 %28), !dbg !6146
  store float %call19, float* %h_fixed, align 4, !dbg !6147
  %29 = load i32, i32* %mono, align 4, !dbg !6148
  %call20 = call float @BLF_descender(i32 %29), !dbg !6149
  %fneg = fneg float %call20, !dbg !6150
  %conv21 = fptosi float %fneg to i32, !dbg !6150
  store i32 %conv21, i32* %y_ofs, align 4, !dbg !6151
  store i32 0, i32* %x, align 4, !dbg !6152
  %30 = load i32, i32* %height.addr, align 4, !dbg !6153
  store i32 %30, i32* %y, align 4, !dbg !6154
  %file = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 0, !dbg !6155
  %arrayidx22 = getelementptr inbounds [512 x i8], [512 x i8]* %file, i64 0, i64 0, !dbg !6155
  %31 = load i8, i8* %arrayidx22, align 1, !dbg !6155
  %conv23 = zext i8 %31 to i32, !dbg !6155
  %tobool24 = icmp ne i32 %conv23, 0, !dbg !6155
  br i1 %tobool24, label %land.lhs.true25, label %if.end48, !dbg !6155

land.lhs.true25:                                  ; preds = %if.end7
  %32 = load float, float* %h_fixed, align 4, !dbg !6155
  store float %32, float* %h, align 4, !dbg !6155
  %33 = load i32, i32* %mono, align 4, !dbg !6155
  %file26 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 0, !dbg !6155
  %arraydecay27 = getelementptr inbounds [512 x i8], [512 x i8]* %file26, i64 0, i64 0, !dbg !6155
  %call28 = call float @BLF_width(i32 %33, i8* %arraydecay27, i64 512), !dbg !6155
  store float %call28, float* %w, align 4, !dbg !6155
  %tobool29 = fcmp une float %call28, 0.000000e+00, !dbg !6155
  br i1 %tobool29, label %if.then30, label %if.end48, !dbg !6157

if.then30:                                        ; preds = %land.lhs.true25
  %34 = load float, float* %h, align 4, !dbg !6158
  %35 = load i32, i32* %y, align 4, !dbg !6160
  %conv31 = sitofp i32 %35 to float, !dbg !6160
  %sub = fsub float %conv31, %34, !dbg !6160
  %conv32 = fptosi float %sub to i32, !dbg !6160
  store i32 %conv32, i32* %y, align 4, !dbg !6160
  %36 = load i8*, i8** %rect.addr, align 8, !dbg !6161
  %37 = load float*, float** %rectf.addr, align 8, !dbg !6162
  %38 = load i32, i32* %width.addr, align 4, !dbg !6163
  %39 = load i32, i32* %height.addr, align 4, !dbg !6164
  %40 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6165
  %r33 = getelementptr inbounds %struct.Scene, %struct.Scene* %40, i32 0, i32 22, !dbg !6166
  %bg_stamp = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r33, i32 0, i32 90, !dbg !6167
  %arraydecay34 = getelementptr inbounds [4 x float], [4 x float]* %bg_stamp, i64 0, i64 0, !dbg !6165
  %41 = load %struct.ColorManagedDisplay*, %struct.ColorManagedDisplay** %display, align 8, !dbg !6168
  %42 = load i32, i32* %x, align 4, !dbg !6169
  %sub35 = sub nsw i32 %42, 2, !dbg !6170
  %43 = load i32, i32* %y, align 4, !dbg !6171
  %sub36 = sub nsw i32 %43, 1, !dbg !6172
  %44 = load float, float* %w, align 4, !dbg !6173
  %add = fadd float %44, 2.000000e+00, !dbg !6174
  %conv37 = fptosi float %add to i32, !dbg !6173
  %45 = load i32, i32* %y, align 4, !dbg !6175
  %conv38 = sitofp i32 %45 to float, !dbg !6175
  %46 = load float, float* %h, align 4, !dbg !6176
  %add39 = fadd float %conv38, %46, !dbg !6177
  %add40 = fadd float %add39, 1.000000e+00, !dbg !6178
  %conv41 = fptosi float %add40 to i32, !dbg !6175
  call void @buf_rectfill_area(i8* %36, float* %37, i32 %38, i32 %39, float* %arraydecay34, %struct.ColorManagedDisplay* %41, i32 %sub35, i32 %sub36, i32 %conv37, i32 %conv41), !dbg !6179
  %47 = load i32, i32* %mono, align 4, !dbg !6180
  %48 = load i32, i32* %x, align 4, !dbg !6181
  %conv42 = sitofp i32 %48 to float, !dbg !6181
  %49 = load i32, i32* %y, align 4, !dbg !6182
  %50 = load i32, i32* %y_ofs, align 4, !dbg !6183
  %add43 = add nsw i32 %49, %50, !dbg !6184
  %conv44 = sitofp i32 %add43 to float, !dbg !6182
  call void @BLF_position(i32 %47, float %conv42, float %conv44, float 0.000000e+00), !dbg !6185
  %51 = load i32, i32* %mono, align 4, !dbg !6186
  %file45 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 0, !dbg !6187
  %arraydecay46 = getelementptr inbounds [512 x i8], [512 x i8]* %file45, i64 0, i64 0, !dbg !6188
  call void @BLF_draw_buffer(i32 %51, i8* %arraydecay46), !dbg !6189
  %52 = load i32, i32* %y, align 4, !dbg !6190
  %sub47 = sub nsw i32 %52, 2, !dbg !6190
  store i32 %sub47, i32* %y, align 4, !dbg !6190
  br label %if.end48, !dbg !6191

if.end48:                                         ; preds = %if.then30, %land.lhs.true25, %if.end7
  %note = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 1, !dbg !6192
  %arrayidx49 = getelementptr inbounds [512 x i8], [512 x i8]* %note, i64 0, i64 0, !dbg !6192
  %53 = load i8, i8* %arrayidx49, align 1, !dbg !6192
  %conv50 = zext i8 %53 to i32, !dbg !6192
  %tobool51 = icmp ne i32 %conv50, 0, !dbg !6192
  br i1 %tobool51, label %land.lhs.true52, label %if.end77, !dbg !6192

land.lhs.true52:                                  ; preds = %if.end48
  %54 = load float, float* %h_fixed, align 4, !dbg !6192
  store float %54, float* %h, align 4, !dbg !6192
  %55 = load i32, i32* %mono, align 4, !dbg !6192
  %note53 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 1, !dbg !6192
  %arraydecay54 = getelementptr inbounds [512 x i8], [512 x i8]* %note53, i64 0, i64 0, !dbg !6192
  %call55 = call float @BLF_width(i32 %55, i8* %arraydecay54, i64 512), !dbg !6192
  store float %call55, float* %w, align 4, !dbg !6192
  %tobool56 = fcmp une float %call55, 0.000000e+00, !dbg !6192
  br i1 %tobool56, label %if.then57, label %if.end77, !dbg !6194

if.then57:                                        ; preds = %land.lhs.true52
  %56 = load float, float* %h, align 4, !dbg !6195
  %57 = load i32, i32* %y, align 4, !dbg !6197
  %conv58 = sitofp i32 %57 to float, !dbg !6197
  %sub59 = fsub float %conv58, %56, !dbg !6197
  %conv60 = fptosi float %sub59 to i32, !dbg !6197
  store i32 %conv60, i32* %y, align 4, !dbg !6197
  %58 = load i8*, i8** %rect.addr, align 8, !dbg !6198
  %59 = load float*, float** %rectf.addr, align 8, !dbg !6199
  %60 = load i32, i32* %width.addr, align 4, !dbg !6200
  %61 = load i32, i32* %height.addr, align 4, !dbg !6201
  %62 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6202
  %r61 = getelementptr inbounds %struct.Scene, %struct.Scene* %62, i32 0, i32 22, !dbg !6203
  %bg_stamp62 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r61, i32 0, i32 90, !dbg !6204
  %arraydecay63 = getelementptr inbounds [4 x float], [4 x float]* %bg_stamp62, i64 0, i64 0, !dbg !6202
  %63 = load %struct.ColorManagedDisplay*, %struct.ColorManagedDisplay** %display, align 8, !dbg !6205
  %64 = load i32, i32* %y, align 4, !dbg !6206
  %sub64 = sub nsw i32 %64, 1, !dbg !6207
  %65 = load float, float* %w, align 4, !dbg !6208
  %add65 = fadd float %65, 2.000000e+00, !dbg !6209
  %conv66 = fptosi float %add65 to i32, !dbg !6208
  %66 = load i32, i32* %y, align 4, !dbg !6210
  %conv67 = sitofp i32 %66 to float, !dbg !6210
  %67 = load float, float* %h, align 4, !dbg !6211
  %add68 = fadd float %conv67, %67, !dbg !6212
  %add69 = fadd float %add68, 1.000000e+00, !dbg !6213
  %conv70 = fptosi float %add69 to i32, !dbg !6210
  call void @buf_rectfill_area(i8* %58, float* %59, i32 %60, i32 %61, float* %arraydecay63, %struct.ColorManagedDisplay* %63, i32 0, i32 %sub64, i32 %conv66, i32 %conv70), !dbg !6214
  %68 = load i32, i32* %mono, align 4, !dbg !6215
  %69 = load i32, i32* %x, align 4, !dbg !6216
  %conv71 = sitofp i32 %69 to float, !dbg !6216
  %70 = load i32, i32* %y, align 4, !dbg !6217
  %71 = load i32, i32* %y_ofs, align 4, !dbg !6218
  %add72 = add nsw i32 %70, %71, !dbg !6219
  %conv73 = sitofp i32 %add72 to float, !dbg !6217
  call void @BLF_position(i32 %68, float %conv71, float %conv73, float 0.000000e+00), !dbg !6220
  %72 = load i32, i32* %mono, align 4, !dbg !6221
  %note74 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 1, !dbg !6222
  %arraydecay75 = getelementptr inbounds [512 x i8], [512 x i8]* %note74, i64 0, i64 0, !dbg !6223
  call void @BLF_draw_buffer(i32 %72, i8* %arraydecay75), !dbg !6224
  %73 = load i32, i32* %y, align 4, !dbg !6225
  %sub76 = sub nsw i32 %73, 2, !dbg !6225
  store i32 %sub76, i32* %y, align 4, !dbg !6225
  br label %if.end77, !dbg !6226

if.end77:                                         ; preds = %if.then57, %land.lhs.true52, %if.end48
  %date = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 2, !dbg !6227
  %arrayidx78 = getelementptr inbounds [512 x i8], [512 x i8]* %date, i64 0, i64 0, !dbg !6227
  %74 = load i8, i8* %arrayidx78, align 1, !dbg !6227
  %conv79 = zext i8 %74 to i32, !dbg !6227
  %tobool80 = icmp ne i32 %conv79, 0, !dbg !6227
  br i1 %tobool80, label %land.lhs.true81, label %if.end106, !dbg !6227

land.lhs.true81:                                  ; preds = %if.end77
  %75 = load float, float* %h_fixed, align 4, !dbg !6227
  store float %75, float* %h, align 4, !dbg !6227
  %76 = load i32, i32* %mono, align 4, !dbg !6227
  %date82 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 2, !dbg !6227
  %arraydecay83 = getelementptr inbounds [512 x i8], [512 x i8]* %date82, i64 0, i64 0, !dbg !6227
  %call84 = call float @BLF_width(i32 %76, i8* %arraydecay83, i64 512), !dbg !6227
  store float %call84, float* %w, align 4, !dbg !6227
  %tobool85 = fcmp une float %call84, 0.000000e+00, !dbg !6227
  br i1 %tobool85, label %if.then86, label %if.end106, !dbg !6229

if.then86:                                        ; preds = %land.lhs.true81
  %77 = load float, float* %h, align 4, !dbg !6230
  %78 = load i32, i32* %y, align 4, !dbg !6232
  %conv87 = sitofp i32 %78 to float, !dbg !6232
  %sub88 = fsub float %conv87, %77, !dbg !6232
  %conv89 = fptosi float %sub88 to i32, !dbg !6232
  store i32 %conv89, i32* %y, align 4, !dbg !6232
  %79 = load i8*, i8** %rect.addr, align 8, !dbg !6233
  %80 = load float*, float** %rectf.addr, align 8, !dbg !6234
  %81 = load i32, i32* %width.addr, align 4, !dbg !6235
  %82 = load i32, i32* %height.addr, align 4, !dbg !6236
  %83 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6237
  %r90 = getelementptr inbounds %struct.Scene, %struct.Scene* %83, i32 0, i32 22, !dbg !6238
  %bg_stamp91 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r90, i32 0, i32 90, !dbg !6239
  %arraydecay92 = getelementptr inbounds [4 x float], [4 x float]* %bg_stamp91, i64 0, i64 0, !dbg !6237
  %84 = load %struct.ColorManagedDisplay*, %struct.ColorManagedDisplay** %display, align 8, !dbg !6240
  %85 = load i32, i32* %y, align 4, !dbg !6241
  %sub93 = sub nsw i32 %85, 1, !dbg !6242
  %86 = load float, float* %w, align 4, !dbg !6243
  %add94 = fadd float %86, 2.000000e+00, !dbg !6244
  %conv95 = fptosi float %add94 to i32, !dbg !6243
  %87 = load i32, i32* %y, align 4, !dbg !6245
  %conv96 = sitofp i32 %87 to float, !dbg !6245
  %88 = load float, float* %h, align 4, !dbg !6246
  %add97 = fadd float %conv96, %88, !dbg !6247
  %add98 = fadd float %add97, 1.000000e+00, !dbg !6248
  %conv99 = fptosi float %add98 to i32, !dbg !6245
  call void @buf_rectfill_area(i8* %79, float* %80, i32 %81, i32 %82, float* %arraydecay92, %struct.ColorManagedDisplay* %84, i32 0, i32 %sub93, i32 %conv95, i32 %conv99), !dbg !6249
  %89 = load i32, i32* %mono, align 4, !dbg !6250
  %90 = load i32, i32* %x, align 4, !dbg !6251
  %conv100 = sitofp i32 %90 to float, !dbg !6251
  %91 = load i32, i32* %y, align 4, !dbg !6252
  %92 = load i32, i32* %y_ofs, align 4, !dbg !6253
  %add101 = add nsw i32 %91, %92, !dbg !6254
  %conv102 = sitofp i32 %add101 to float, !dbg !6252
  call void @BLF_position(i32 %89, float %conv100, float %conv102, float 0.000000e+00), !dbg !6255
  %93 = load i32, i32* %mono, align 4, !dbg !6256
  %date103 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 2, !dbg !6257
  %arraydecay104 = getelementptr inbounds [512 x i8], [512 x i8]* %date103, i64 0, i64 0, !dbg !6258
  call void @BLF_draw_buffer(i32 %93, i8* %arraydecay104), !dbg !6259
  %94 = load i32, i32* %y, align 4, !dbg !6260
  %sub105 = sub nsw i32 %94, 2, !dbg !6260
  store i32 %sub105, i32* %y, align 4, !dbg !6260
  br label %if.end106, !dbg !6261

if.end106:                                        ; preds = %if.then86, %land.lhs.true81, %if.end77
  %rendertime = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 10, !dbg !6262
  %arrayidx107 = getelementptr inbounds [80 x i8], [80 x i8]* %rendertime, i64 0, i64 0, !dbg !6262
  %95 = load i8, i8* %arrayidx107, align 1, !dbg !6262
  %conv108 = zext i8 %95 to i32, !dbg !6262
  %tobool109 = icmp ne i32 %conv108, 0, !dbg !6262
  br i1 %tobool109, label %land.lhs.true110, label %if.end134, !dbg !6262

land.lhs.true110:                                 ; preds = %if.end106
  %96 = load float, float* %h_fixed, align 4, !dbg !6262
  store float %96, float* %h, align 4, !dbg !6262
  %97 = load i32, i32* %mono, align 4, !dbg !6262
  %rendertime111 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 10, !dbg !6262
  %arraydecay112 = getelementptr inbounds [80 x i8], [80 x i8]* %rendertime111, i64 0, i64 0, !dbg !6262
  %call113 = call float @BLF_width(i32 %97, i8* %arraydecay112, i64 80), !dbg !6262
  store float %call113, float* %w, align 4, !dbg !6262
  %tobool114 = fcmp une float %call113, 0.000000e+00, !dbg !6262
  br i1 %tobool114, label %if.then115, label %if.end134, !dbg !6264

if.then115:                                       ; preds = %land.lhs.true110
  %98 = load float, float* %h, align 4, !dbg !6265
  %99 = load i32, i32* %y, align 4, !dbg !6267
  %conv116 = sitofp i32 %99 to float, !dbg !6267
  %sub117 = fsub float %conv116, %98, !dbg !6267
  %conv118 = fptosi float %sub117 to i32, !dbg !6267
  store i32 %conv118, i32* %y, align 4, !dbg !6267
  %100 = load i8*, i8** %rect.addr, align 8, !dbg !6268
  %101 = load float*, float** %rectf.addr, align 8, !dbg !6269
  %102 = load i32, i32* %width.addr, align 4, !dbg !6270
  %103 = load i32, i32* %height.addr, align 4, !dbg !6271
  %104 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6272
  %r119 = getelementptr inbounds %struct.Scene, %struct.Scene* %104, i32 0, i32 22, !dbg !6273
  %bg_stamp120 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r119, i32 0, i32 90, !dbg !6274
  %arraydecay121 = getelementptr inbounds [4 x float], [4 x float]* %bg_stamp120, i64 0, i64 0, !dbg !6272
  %105 = load %struct.ColorManagedDisplay*, %struct.ColorManagedDisplay** %display, align 8, !dbg !6275
  %106 = load i32, i32* %y, align 4, !dbg !6276
  %sub122 = sub nsw i32 %106, 1, !dbg !6277
  %107 = load float, float* %w, align 4, !dbg !6278
  %add123 = fadd float %107, 2.000000e+00, !dbg !6279
  %conv124 = fptosi float %add123 to i32, !dbg !6278
  %108 = load i32, i32* %y, align 4, !dbg !6280
  %conv125 = sitofp i32 %108 to float, !dbg !6280
  %109 = load float, float* %h, align 4, !dbg !6281
  %add126 = fadd float %conv125, %109, !dbg !6282
  %add127 = fadd float %add126, 1.000000e+00, !dbg !6283
  %conv128 = fptosi float %add127 to i32, !dbg !6280
  call void @buf_rectfill_area(i8* %100, float* %101, i32 %102, i32 %103, float* %arraydecay121, %struct.ColorManagedDisplay* %105, i32 0, i32 %sub122, i32 %conv124, i32 %conv128), !dbg !6284
  %110 = load i32, i32* %mono, align 4, !dbg !6285
  %111 = load i32, i32* %x, align 4, !dbg !6286
  %conv129 = sitofp i32 %111 to float, !dbg !6286
  %112 = load i32, i32* %y, align 4, !dbg !6287
  %113 = load i32, i32* %y_ofs, align 4, !dbg !6288
  %add130 = add nsw i32 %112, %113, !dbg !6289
  %conv131 = sitofp i32 %add130 to float, !dbg !6287
  call void @BLF_position(i32 %110, float %conv129, float %conv131, float 0.000000e+00), !dbg !6290
  %114 = load i32, i32* %mono, align 4, !dbg !6291
  %rendertime132 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 10, !dbg !6292
  %arraydecay133 = getelementptr inbounds [80 x i8], [80 x i8]* %rendertime132, i64 0, i64 0, !dbg !6293
  call void @BLF_draw_buffer(i32 %114, i8* %arraydecay133), !dbg !6294
  br label %if.end134, !dbg !6295

if.end134:                                        ; preds = %if.then115, %land.lhs.true110, %if.end106
  store i32 0, i32* %x, align 4, !dbg !6296
  store i32 0, i32* %y, align 4, !dbg !6297
  %marker = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 3, !dbg !6298
  %arrayidx135 = getelementptr inbounds [512 x i8], [512 x i8]* %marker, i64 0, i64 0, !dbg !6298
  %115 = load i8, i8* %arrayidx135, align 1, !dbg !6298
  %conv136 = zext i8 %115 to i32, !dbg !6298
  %tobool137 = icmp ne i32 %conv136, 0, !dbg !6298
  br i1 %tobool137, label %land.lhs.true138, label %if.end164, !dbg !6298

land.lhs.true138:                                 ; preds = %if.end134
  %116 = load float, float* %h_fixed, align 4, !dbg !6298
  store float %116, float* %h, align 4, !dbg !6298
  %117 = load i32, i32* %mono, align 4, !dbg !6298
  %marker139 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 3, !dbg !6298
  %arraydecay140 = getelementptr inbounds [512 x i8], [512 x i8]* %marker139, i64 0, i64 0, !dbg !6298
  %call141 = call float @BLF_width(i32 %117, i8* %arraydecay140, i64 512), !dbg !6298
  store float %call141, float* %w, align 4, !dbg !6298
  %tobool142 = fcmp une float %call141, 0.000000e+00, !dbg !6298
  br i1 %tobool142, label %if.then143, label %if.end164, !dbg !6300

if.then143:                                       ; preds = %land.lhs.true138
  %118 = load i8*, i8** %rect.addr, align 8, !dbg !6301
  %119 = load float*, float** %rectf.addr, align 8, !dbg !6303
  %120 = load i32, i32* %width.addr, align 4, !dbg !6304
  %121 = load i32, i32* %height.addr, align 4, !dbg !6305
  %122 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6306
  %r144 = getelementptr inbounds %struct.Scene, %struct.Scene* %122, i32 0, i32 22, !dbg !6307
  %bg_stamp145 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r144, i32 0, i32 90, !dbg !6308
  %arraydecay146 = getelementptr inbounds [4 x float], [4 x float]* %bg_stamp145, i64 0, i64 0, !dbg !6306
  %123 = load %struct.ColorManagedDisplay*, %struct.ColorManagedDisplay** %display, align 8, !dbg !6309
  %124 = load i32, i32* %x, align 4, !dbg !6310
  %sub147 = sub nsw i32 %124, 2, !dbg !6311
  %125 = load i32, i32* %y, align 4, !dbg !6312
  %sub148 = sub nsw i32 %125, 1, !dbg !6313
  %126 = load float, float* %w, align 4, !dbg !6314
  %add149 = fadd float %126, 2.000000e+00, !dbg !6315
  %conv150 = fptosi float %add149 to i32, !dbg !6314
  %127 = load i32, i32* %y, align 4, !dbg !6316
  %conv151 = sitofp i32 %127 to float, !dbg !6316
  %128 = load float, float* %h, align 4, !dbg !6317
  %add152 = fadd float %conv151, %128, !dbg !6318
  %add153 = fadd float %add152, 1.000000e+00, !dbg !6319
  %conv154 = fptosi float %add153 to i32, !dbg !6316
  call void @buf_rectfill_area(i8* %118, float* %119, i32 %120, i32 %121, float* %arraydecay146, %struct.ColorManagedDisplay* %123, i32 %sub147, i32 %sub148, i32 %conv150, i32 %conv154), !dbg !6320
  %129 = load i32, i32* %mono, align 4, !dbg !6321
  %130 = load i32, i32* %x, align 4, !dbg !6322
  %conv155 = sitofp i32 %130 to float, !dbg !6322
  %131 = load i32, i32* %y, align 4, !dbg !6323
  %132 = load i32, i32* %y_ofs, align 4, !dbg !6324
  %add156 = add nsw i32 %131, %132, !dbg !6325
  %conv157 = sitofp i32 %add156 to float, !dbg !6323
  call void @BLF_position(i32 %129, float %conv155, float %conv157, float 0.000000e+00), !dbg !6326
  %133 = load i32, i32* %mono, align 4, !dbg !6327
  %marker158 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 3, !dbg !6328
  %arraydecay159 = getelementptr inbounds [512 x i8], [512 x i8]* %marker158, i64 0, i64 0, !dbg !6329
  call void @BLF_draw_buffer(i32 %133, i8* %arraydecay159), !dbg !6330
  %134 = load float, float* %w, align 4, !dbg !6331
  %135 = load float, float* %pad, align 4, !dbg !6332
  %add160 = fadd float %134, %135, !dbg !6333
  %136 = load i32, i32* %x, align 4, !dbg !6334
  %conv161 = sitofp i32 %136 to float, !dbg !6334
  %add162 = fadd float %conv161, %add160, !dbg !6334
  %conv163 = fptosi float %add162 to i32, !dbg !6334
  store i32 %conv163, i32* %x, align 4, !dbg !6334
  br label %if.end164, !dbg !6335

if.end164:                                        ; preds = %if.then143, %land.lhs.true138, %if.end134
  %time = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 4, !dbg !6336
  %arrayidx165 = getelementptr inbounds [512 x i8], [512 x i8]* %time, i64 0, i64 0, !dbg !6336
  %137 = load i8, i8* %arrayidx165, align 1, !dbg !6336
  %conv166 = zext i8 %137 to i32, !dbg !6336
  %tobool167 = icmp ne i32 %conv166, 0, !dbg !6336
  br i1 %tobool167, label %land.lhs.true168, label %if.end195, !dbg !6336

land.lhs.true168:                                 ; preds = %if.end164
  %138 = load float, float* %h_fixed, align 4, !dbg !6336
  store float %138, float* %h, align 4, !dbg !6336
  %139 = load i32, i32* %mono, align 4, !dbg !6336
  %time169 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 4, !dbg !6336
  %arraydecay170 = getelementptr inbounds [512 x i8], [512 x i8]* %time169, i64 0, i64 0, !dbg !6336
  %call171 = call float @BLF_width(i32 %139, i8* %arraydecay170, i64 512), !dbg !6336
  store float %call171, float* %w, align 4, !dbg !6336
  %tobool172 = fcmp une float %call171, 0.000000e+00, !dbg !6336
  br i1 %tobool172, label %if.then173, label %if.end195, !dbg !6338

if.then173:                                       ; preds = %land.lhs.true168
  %140 = load i8*, i8** %rect.addr, align 8, !dbg !6339
  %141 = load float*, float** %rectf.addr, align 8, !dbg !6341
  %142 = load i32, i32* %width.addr, align 4, !dbg !6342
  %143 = load i32, i32* %height.addr, align 4, !dbg !6343
  %144 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6344
  %r174 = getelementptr inbounds %struct.Scene, %struct.Scene* %144, i32 0, i32 22, !dbg !6345
  %bg_stamp175 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r174, i32 0, i32 90, !dbg !6346
  %arraydecay176 = getelementptr inbounds [4 x float], [4 x float]* %bg_stamp175, i64 0, i64 0, !dbg !6344
  %145 = load %struct.ColorManagedDisplay*, %struct.ColorManagedDisplay** %display, align 8, !dbg !6347
  %146 = load i32, i32* %x, align 4, !dbg !6348
  %sub177 = sub nsw i32 %146, 2, !dbg !6349
  %147 = load i32, i32* %y, align 4, !dbg !6350
  %148 = load i32, i32* %x, align 4, !dbg !6351
  %conv178 = sitofp i32 %148 to float, !dbg !6351
  %149 = load float, float* %w, align 4, !dbg !6352
  %add179 = fadd float %conv178, %149, !dbg !6353
  %add180 = fadd float %add179, 2.000000e+00, !dbg !6354
  %conv181 = fptosi float %add180 to i32, !dbg !6351
  %150 = load i32, i32* %y, align 4, !dbg !6355
  %conv182 = sitofp i32 %150 to float, !dbg !6355
  %151 = load float, float* %h, align 4, !dbg !6356
  %add183 = fadd float %conv182, %151, !dbg !6357
  %add184 = fadd float %add183, 1.000000e+00, !dbg !6358
  %conv185 = fptosi float %add184 to i32, !dbg !6355
  call void @buf_rectfill_area(i8* %140, float* %141, i32 %142, i32 %143, float* %arraydecay176, %struct.ColorManagedDisplay* %145, i32 %sub177, i32 %147, i32 %conv181, i32 %conv185), !dbg !6359
  %152 = load i32, i32* %mono, align 4, !dbg !6360
  %153 = load i32, i32* %x, align 4, !dbg !6361
  %conv186 = sitofp i32 %153 to float, !dbg !6361
  %154 = load i32, i32* %y, align 4, !dbg !6362
  %155 = load i32, i32* %y_ofs, align 4, !dbg !6363
  %add187 = add nsw i32 %154, %155, !dbg !6364
  %conv188 = sitofp i32 %add187 to float, !dbg !6362
  call void @BLF_position(i32 %152, float %conv186, float %conv188, float 0.000000e+00), !dbg !6365
  %156 = load i32, i32* %mono, align 4, !dbg !6366
  %time189 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 4, !dbg !6367
  %arraydecay190 = getelementptr inbounds [512 x i8], [512 x i8]* %time189, i64 0, i64 0, !dbg !6368
  call void @BLF_draw_buffer(i32 %156, i8* %arraydecay190), !dbg !6369
  %157 = load float, float* %w, align 4, !dbg !6370
  %158 = load float, float* %pad, align 4, !dbg !6371
  %add191 = fadd float %157, %158, !dbg !6372
  %159 = load i32, i32* %x, align 4, !dbg !6373
  %conv192 = sitofp i32 %159 to float, !dbg !6373
  %add193 = fadd float %conv192, %add191, !dbg !6373
  %conv194 = fptosi float %add193 to i32, !dbg !6373
  store i32 %conv194, i32* %x, align 4, !dbg !6373
  br label %if.end195, !dbg !6374

if.end195:                                        ; preds = %if.then173, %land.lhs.true168, %if.end164
  %frame = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 5, !dbg !6375
  %arrayidx196 = getelementptr inbounds [512 x i8], [512 x i8]* %frame, i64 0, i64 0, !dbg !6375
  %160 = load i8, i8* %arrayidx196, align 1, !dbg !6375
  %conv197 = zext i8 %160 to i32, !dbg !6375
  %tobool198 = icmp ne i32 %conv197, 0, !dbg !6375
  br i1 %tobool198, label %land.lhs.true199, label %if.end227, !dbg !6375

land.lhs.true199:                                 ; preds = %if.end195
  %161 = load float, float* %h_fixed, align 4, !dbg !6375
  store float %161, float* %h, align 4, !dbg !6375
  %162 = load i32, i32* %mono, align 4, !dbg !6375
  %frame200 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 5, !dbg !6375
  %arraydecay201 = getelementptr inbounds [512 x i8], [512 x i8]* %frame200, i64 0, i64 0, !dbg !6375
  %call202 = call float @BLF_width(i32 %162, i8* %arraydecay201, i64 512), !dbg !6375
  store float %call202, float* %w, align 4, !dbg !6375
  %tobool203 = fcmp une float %call202, 0.000000e+00, !dbg !6375
  br i1 %tobool203, label %if.then204, label %if.end227, !dbg !6377

if.then204:                                       ; preds = %land.lhs.true199
  %163 = load i8*, i8** %rect.addr, align 8, !dbg !6378
  %164 = load float*, float** %rectf.addr, align 8, !dbg !6380
  %165 = load i32, i32* %width.addr, align 4, !dbg !6381
  %166 = load i32, i32* %height.addr, align 4, !dbg !6382
  %167 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6383
  %r205 = getelementptr inbounds %struct.Scene, %struct.Scene* %167, i32 0, i32 22, !dbg !6384
  %bg_stamp206 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r205, i32 0, i32 90, !dbg !6385
  %arraydecay207 = getelementptr inbounds [4 x float], [4 x float]* %bg_stamp206, i64 0, i64 0, !dbg !6383
  %168 = load %struct.ColorManagedDisplay*, %struct.ColorManagedDisplay** %display, align 8, !dbg !6386
  %169 = load i32, i32* %x, align 4, !dbg !6387
  %sub208 = sub nsw i32 %169, 2, !dbg !6388
  %170 = load i32, i32* %y, align 4, !dbg !6389
  %sub209 = sub nsw i32 %170, 1, !dbg !6390
  %171 = load i32, i32* %x, align 4, !dbg !6391
  %conv210 = sitofp i32 %171 to float, !dbg !6391
  %172 = load float, float* %w, align 4, !dbg !6392
  %add211 = fadd float %conv210, %172, !dbg !6393
  %add212 = fadd float %add211, 2.000000e+00, !dbg !6394
  %conv213 = fptosi float %add212 to i32, !dbg !6391
  %173 = load i32, i32* %y, align 4, !dbg !6395
  %conv214 = sitofp i32 %173 to float, !dbg !6395
  %174 = load float, float* %h, align 4, !dbg !6396
  %add215 = fadd float %conv214, %174, !dbg !6397
  %add216 = fadd float %add215, 1.000000e+00, !dbg !6398
  %conv217 = fptosi float %add216 to i32, !dbg !6395
  call void @buf_rectfill_area(i8* %163, float* %164, i32 %165, i32 %166, float* %arraydecay207, %struct.ColorManagedDisplay* %168, i32 %sub208, i32 %sub209, i32 %conv213, i32 %conv217), !dbg !6399
  %175 = load i32, i32* %mono, align 4, !dbg !6400
  %176 = load i32, i32* %x, align 4, !dbg !6401
  %conv218 = sitofp i32 %176 to float, !dbg !6401
  %177 = load i32, i32* %y, align 4, !dbg !6402
  %178 = load i32, i32* %y_ofs, align 4, !dbg !6403
  %add219 = add nsw i32 %177, %178, !dbg !6404
  %conv220 = sitofp i32 %add219 to float, !dbg !6402
  call void @BLF_position(i32 %175, float %conv218, float %conv220, float 0.000000e+00), !dbg !6405
  %179 = load i32, i32* %mono, align 4, !dbg !6406
  %frame221 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 5, !dbg !6407
  %arraydecay222 = getelementptr inbounds [512 x i8], [512 x i8]* %frame221, i64 0, i64 0, !dbg !6408
  call void @BLF_draw_buffer(i32 %179, i8* %arraydecay222), !dbg !6409
  %180 = load float, float* %w, align 4, !dbg !6410
  %181 = load float, float* %pad, align 4, !dbg !6411
  %add223 = fadd float %180, %181, !dbg !6412
  %182 = load i32, i32* %x, align 4, !dbg !6413
  %conv224 = sitofp i32 %182 to float, !dbg !6413
  %add225 = fadd float %conv224, %add223, !dbg !6413
  %conv226 = fptosi float %add225 to i32, !dbg !6413
  store i32 %conv226, i32* %x, align 4, !dbg !6413
  br label %if.end227, !dbg !6414

if.end227:                                        ; preds = %if.then204, %land.lhs.true199, %if.end195
  %camera228 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 6, !dbg !6415
  %arrayidx229 = getelementptr inbounds [80 x i8], [80 x i8]* %camera228, i64 0, i64 0, !dbg !6415
  %183 = load i8, i8* %arrayidx229, align 1, !dbg !6415
  %conv230 = zext i8 %183 to i32, !dbg !6415
  %tobool231 = icmp ne i32 %conv230, 0, !dbg !6415
  br i1 %tobool231, label %land.lhs.true232, label %if.end260, !dbg !6415

land.lhs.true232:                                 ; preds = %if.end227
  %184 = load float, float* %h_fixed, align 4, !dbg !6415
  store float %184, float* %h, align 4, !dbg !6415
  %185 = load i32, i32* %mono, align 4, !dbg !6415
  %camera233 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 6, !dbg !6415
  %arraydecay234 = getelementptr inbounds [80 x i8], [80 x i8]* %camera233, i64 0, i64 0, !dbg !6415
  %call235 = call float @BLF_width(i32 %185, i8* %arraydecay234, i64 80), !dbg !6415
  store float %call235, float* %w, align 4, !dbg !6415
  %tobool236 = fcmp une float %call235, 0.000000e+00, !dbg !6415
  br i1 %tobool236, label %if.then237, label %if.end260, !dbg !6417

if.then237:                                       ; preds = %land.lhs.true232
  %186 = load i8*, i8** %rect.addr, align 8, !dbg !6418
  %187 = load float*, float** %rectf.addr, align 8, !dbg !6420
  %188 = load i32, i32* %width.addr, align 4, !dbg !6421
  %189 = load i32, i32* %height.addr, align 4, !dbg !6422
  %190 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6423
  %r238 = getelementptr inbounds %struct.Scene, %struct.Scene* %190, i32 0, i32 22, !dbg !6424
  %bg_stamp239 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r238, i32 0, i32 90, !dbg !6425
  %arraydecay240 = getelementptr inbounds [4 x float], [4 x float]* %bg_stamp239, i64 0, i64 0, !dbg !6423
  %191 = load %struct.ColorManagedDisplay*, %struct.ColorManagedDisplay** %display, align 8, !dbg !6426
  %192 = load i32, i32* %x, align 4, !dbg !6427
  %sub241 = sub nsw i32 %192, 2, !dbg !6428
  %193 = load i32, i32* %y, align 4, !dbg !6429
  %sub242 = sub nsw i32 %193, 1, !dbg !6430
  %194 = load i32, i32* %x, align 4, !dbg !6431
  %conv243 = sitofp i32 %194 to float, !dbg !6431
  %195 = load float, float* %w, align 4, !dbg !6432
  %add244 = fadd float %conv243, %195, !dbg !6433
  %add245 = fadd float %add244, 2.000000e+00, !dbg !6434
  %conv246 = fptosi float %add245 to i32, !dbg !6431
  %196 = load i32, i32* %y, align 4, !dbg !6435
  %conv247 = sitofp i32 %196 to float, !dbg !6435
  %197 = load float, float* %h, align 4, !dbg !6436
  %add248 = fadd float %conv247, %197, !dbg !6437
  %add249 = fadd float %add248, 1.000000e+00, !dbg !6438
  %conv250 = fptosi float %add249 to i32, !dbg !6435
  call void @buf_rectfill_area(i8* %186, float* %187, i32 %188, i32 %189, float* %arraydecay240, %struct.ColorManagedDisplay* %191, i32 %sub241, i32 %sub242, i32 %conv246, i32 %conv250), !dbg !6439
  %198 = load i32, i32* %mono, align 4, !dbg !6440
  %199 = load i32, i32* %x, align 4, !dbg !6441
  %conv251 = sitofp i32 %199 to float, !dbg !6441
  %200 = load i32, i32* %y, align 4, !dbg !6442
  %201 = load i32, i32* %y_ofs, align 4, !dbg !6443
  %add252 = add nsw i32 %200, %201, !dbg !6444
  %conv253 = sitofp i32 %add252 to float, !dbg !6442
  call void @BLF_position(i32 %198, float %conv251, float %conv253, float 0.000000e+00), !dbg !6445
  %202 = load i32, i32* %mono, align 4, !dbg !6446
  %camera254 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 6, !dbg !6447
  %arraydecay255 = getelementptr inbounds [80 x i8], [80 x i8]* %camera254, i64 0, i64 0, !dbg !6448
  call void @BLF_draw_buffer(i32 %202, i8* %arraydecay255), !dbg !6449
  %203 = load float, float* %w, align 4, !dbg !6450
  %204 = load float, float* %pad, align 4, !dbg !6451
  %add256 = fadd float %203, %204, !dbg !6452
  %205 = load i32, i32* %x, align 4, !dbg !6453
  %conv257 = sitofp i32 %205 to float, !dbg !6453
  %add258 = fadd float %conv257, %add256, !dbg !6453
  %conv259 = fptosi float %add258 to i32, !dbg !6453
  store i32 %conv259, i32* %x, align 4, !dbg !6453
  br label %if.end260, !dbg !6454

if.end260:                                        ; preds = %if.then237, %land.lhs.true232, %if.end227
  %cameralens = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 7, !dbg !6455
  %arrayidx261 = getelementptr inbounds [80 x i8], [80 x i8]* %cameralens, i64 0, i64 0, !dbg !6455
  %206 = load i8, i8* %arrayidx261, align 1, !dbg !6455
  %conv262 = zext i8 %206 to i32, !dbg !6455
  %tobool263 = icmp ne i32 %conv262, 0, !dbg !6455
  br i1 %tobool263, label %land.lhs.true264, label %if.end288, !dbg !6455

land.lhs.true264:                                 ; preds = %if.end260
  %207 = load float, float* %h_fixed, align 4, !dbg !6455
  store float %207, float* %h, align 4, !dbg !6455
  %208 = load i32, i32* %mono, align 4, !dbg !6455
  %cameralens265 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 7, !dbg !6455
  %arraydecay266 = getelementptr inbounds [80 x i8], [80 x i8]* %cameralens265, i64 0, i64 0, !dbg !6455
  %call267 = call float @BLF_width(i32 %208, i8* %arraydecay266, i64 80), !dbg !6455
  store float %call267, float* %w, align 4, !dbg !6455
  %tobool268 = fcmp une float %call267, 0.000000e+00, !dbg !6455
  br i1 %tobool268, label %if.then269, label %if.end288, !dbg !6457

if.then269:                                       ; preds = %land.lhs.true264
  %209 = load i8*, i8** %rect.addr, align 8, !dbg !6458
  %210 = load float*, float** %rectf.addr, align 8, !dbg !6460
  %211 = load i32, i32* %width.addr, align 4, !dbg !6461
  %212 = load i32, i32* %height.addr, align 4, !dbg !6462
  %213 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6463
  %r270 = getelementptr inbounds %struct.Scene, %struct.Scene* %213, i32 0, i32 22, !dbg !6464
  %bg_stamp271 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r270, i32 0, i32 90, !dbg !6465
  %arraydecay272 = getelementptr inbounds [4 x float], [4 x float]* %bg_stamp271, i64 0, i64 0, !dbg !6463
  %214 = load %struct.ColorManagedDisplay*, %struct.ColorManagedDisplay** %display, align 8, !dbg !6466
  %215 = load i32, i32* %x, align 4, !dbg !6467
  %sub273 = sub nsw i32 %215, 2, !dbg !6468
  %216 = load i32, i32* %y, align 4, !dbg !6469
  %sub274 = sub nsw i32 %216, 1, !dbg !6470
  %217 = load i32, i32* %x, align 4, !dbg !6471
  %conv275 = sitofp i32 %217 to float, !dbg !6471
  %218 = load float, float* %w, align 4, !dbg !6472
  %add276 = fadd float %conv275, %218, !dbg !6473
  %add277 = fadd float %add276, 2.000000e+00, !dbg !6474
  %conv278 = fptosi float %add277 to i32, !dbg !6471
  %219 = load i32, i32* %y, align 4, !dbg !6475
  %conv279 = sitofp i32 %219 to float, !dbg !6475
  %220 = load float, float* %h, align 4, !dbg !6476
  %add280 = fadd float %conv279, %220, !dbg !6477
  %add281 = fadd float %add280, 1.000000e+00, !dbg !6478
  %conv282 = fptosi float %add281 to i32, !dbg !6475
  call void @buf_rectfill_area(i8* %209, float* %210, i32 %211, i32 %212, float* %arraydecay272, %struct.ColorManagedDisplay* %214, i32 %sub273, i32 %sub274, i32 %conv278, i32 %conv282), !dbg !6479
  %221 = load i32, i32* %mono, align 4, !dbg !6480
  %222 = load i32, i32* %x, align 4, !dbg !6481
  %conv283 = sitofp i32 %222 to float, !dbg !6481
  %223 = load i32, i32* %y, align 4, !dbg !6482
  %224 = load i32, i32* %y_ofs, align 4, !dbg !6483
  %add284 = add nsw i32 %223, %224, !dbg !6484
  %conv285 = sitofp i32 %add284 to float, !dbg !6482
  call void @BLF_position(i32 %221, float %conv283, float %conv285, float 0.000000e+00), !dbg !6485
  %225 = load i32, i32* %mono, align 4, !dbg !6486
  %cameralens286 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 7, !dbg !6487
  %arraydecay287 = getelementptr inbounds [80 x i8], [80 x i8]* %cameralens286, i64 0, i64 0, !dbg !6488
  call void @BLF_draw_buffer(i32 %225, i8* %arraydecay287), !dbg !6489
  br label %if.end288, !dbg !6490

if.end288:                                        ; preds = %if.then269, %land.lhs.true264, %if.end260
  %scene289 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 8, !dbg !6491
  %arrayidx290 = getelementptr inbounds [80 x i8], [80 x i8]* %scene289, i64 0, i64 0, !dbg !6491
  %226 = load i8, i8* %arrayidx290, align 1, !dbg !6491
  %conv291 = zext i8 %226 to i32, !dbg !6491
  %tobool292 = icmp ne i32 %conv291, 0, !dbg !6491
  br i1 %tobool292, label %land.lhs.true293, label %if.end321, !dbg !6491

land.lhs.true293:                                 ; preds = %if.end288
  %227 = load float, float* %h_fixed, align 4, !dbg !6491
  store float %227, float* %h, align 4, !dbg !6491
  %228 = load i32, i32* %mono, align 4, !dbg !6491
  %scene294 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 8, !dbg !6491
  %arraydecay295 = getelementptr inbounds [80 x i8], [80 x i8]* %scene294, i64 0, i64 0, !dbg !6491
  %call296 = call float @BLF_width(i32 %228, i8* %arraydecay295, i64 80), !dbg !6491
  store float %call296, float* %w, align 4, !dbg !6491
  %tobool297 = fcmp une float %call296, 0.000000e+00, !dbg !6491
  br i1 %tobool297, label %if.then298, label %if.end321, !dbg !6493

if.then298:                                       ; preds = %land.lhs.true293
  %229 = load i32, i32* %width.addr, align 4, !dbg !6494
  %conv299 = sitofp i32 %229 to float, !dbg !6494
  %230 = load float, float* %w, align 4, !dbg !6496
  %sub300 = fsub float %conv299, %230, !dbg !6497
  %sub301 = fsub float %sub300, 2.000000e+00, !dbg !6498
  %conv302 = fptosi float %sub301 to i32, !dbg !6494
  store i32 %conv302, i32* %x, align 4, !dbg !6499
  %231 = load i8*, i8** %rect.addr, align 8, !dbg !6500
  %232 = load float*, float** %rectf.addr, align 8, !dbg !6501
  %233 = load i32, i32* %width.addr, align 4, !dbg !6502
  %234 = load i32, i32* %height.addr, align 4, !dbg !6503
  %235 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6504
  %r303 = getelementptr inbounds %struct.Scene, %struct.Scene* %235, i32 0, i32 22, !dbg !6505
  %bg_stamp304 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r303, i32 0, i32 90, !dbg !6506
  %arraydecay305 = getelementptr inbounds [4 x float], [4 x float]* %bg_stamp304, i64 0, i64 0, !dbg !6504
  %236 = load %struct.ColorManagedDisplay*, %struct.ColorManagedDisplay** %display, align 8, !dbg !6507
  %237 = load i32, i32* %x, align 4, !dbg !6508
  %sub306 = sub nsw i32 %237, 2, !dbg !6509
  %238 = load i32, i32* %y, align 4, !dbg !6510
  %sub307 = sub nsw i32 %238, 1, !dbg !6511
  %239 = load i32, i32* %x, align 4, !dbg !6512
  %conv308 = sitofp i32 %239 to float, !dbg !6512
  %240 = load float, float* %w, align 4, !dbg !6513
  %add309 = fadd float %conv308, %240, !dbg !6514
  %add310 = fadd float %add309, 2.000000e+00, !dbg !6515
  %conv311 = fptosi float %add310 to i32, !dbg !6512
  %241 = load i32, i32* %y, align 4, !dbg !6516
  %conv312 = sitofp i32 %241 to float, !dbg !6516
  %242 = load float, float* %h, align 4, !dbg !6517
  %add313 = fadd float %conv312, %242, !dbg !6518
  %add314 = fadd float %add313, 1.000000e+00, !dbg !6519
  %conv315 = fptosi float %add314 to i32, !dbg !6516
  call void @buf_rectfill_area(i8* %231, float* %232, i32 %233, i32 %234, float* %arraydecay305, %struct.ColorManagedDisplay* %236, i32 %sub306, i32 %sub307, i32 %conv311, i32 %conv315), !dbg !6520
  %243 = load i32, i32* %mono, align 4, !dbg !6521
  %244 = load i32, i32* %x, align 4, !dbg !6522
  %conv316 = sitofp i32 %244 to float, !dbg !6522
  %245 = load i32, i32* %y, align 4, !dbg !6523
  %246 = load i32, i32* %y_ofs, align 4, !dbg !6524
  %add317 = add nsw i32 %245, %246, !dbg !6525
  %conv318 = sitofp i32 %add317 to float, !dbg !6523
  call void @BLF_position(i32 %243, float %conv316, float %conv318, float 0.000000e+00), !dbg !6526
  %247 = load i32, i32* %mono, align 4, !dbg !6527
  %scene319 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 8, !dbg !6528
  %arraydecay320 = getelementptr inbounds [80 x i8], [80 x i8]* %scene319, i64 0, i64 0, !dbg !6529
  call void @BLF_draw_buffer(i32 %247, i8* %arraydecay320), !dbg !6530
  br label %if.end321, !dbg !6531

if.end321:                                        ; preds = %if.then298, %land.lhs.true293, %if.end288
  %strip = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 9, !dbg !6532
  %arrayidx322 = getelementptr inbounds [80 x i8], [80 x i8]* %strip, i64 0, i64 0, !dbg !6532
  %248 = load i8, i8* %arrayidx322, align 1, !dbg !6532
  %conv323 = zext i8 %248 to i32, !dbg !6532
  %tobool324 = icmp ne i32 %conv323, 0, !dbg !6532
  br i1 %tobool324, label %land.lhs.true325, label %if.end356, !dbg !6532

land.lhs.true325:                                 ; preds = %if.end321
  %249 = load float, float* %h_fixed, align 4, !dbg !6532
  store float %249, float* %h, align 4, !dbg !6532
  %250 = load i32, i32* %mono, align 4, !dbg !6532
  %strip326 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 9, !dbg !6532
  %arraydecay327 = getelementptr inbounds [80 x i8], [80 x i8]* %strip326, i64 0, i64 0, !dbg !6532
  %call328 = call float @BLF_width(i32 %250, i8* %arraydecay327, i64 80), !dbg !6532
  store float %call328, float* %w, align 4, !dbg !6532
  %tobool329 = fcmp une float %call328, 0.000000e+00, !dbg !6532
  br i1 %tobool329, label %if.then330, label %if.end356, !dbg !6534

if.then330:                                       ; preds = %land.lhs.true325
  %251 = load i32, i32* %width.addr, align 4, !dbg !6535
  %conv331 = sitofp i32 %251 to float, !dbg !6535
  %252 = load float, float* %w, align 4, !dbg !6537
  %sub332 = fsub float %conv331, %252, !dbg !6538
  %253 = load float, float* %pad, align 4, !dbg !6539
  %sub333 = fsub float %sub332, %253, !dbg !6540
  %conv334 = fptosi float %sub333 to i32, !dbg !6535
  store i32 %conv334, i32* %x, align 4, !dbg !6541
  %254 = load i32, i32* %height.addr, align 4, !dbg !6542
  %conv335 = sitofp i32 %254 to float, !dbg !6542
  %255 = load float, float* %h, align 4, !dbg !6543
  %sub336 = fsub float %conv335, %255, !dbg !6544
  %conv337 = fptosi float %sub336 to i32, !dbg !6542
  store i32 %conv337, i32* %y, align 4, !dbg !6545
  %256 = load i8*, i8** %rect.addr, align 8, !dbg !6546
  %257 = load float*, float** %rectf.addr, align 8, !dbg !6547
  %258 = load i32, i32* %width.addr, align 4, !dbg !6548
  %259 = load i32, i32* %height.addr, align 4, !dbg !6549
  %260 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6550
  %r338 = getelementptr inbounds %struct.Scene, %struct.Scene* %260, i32 0, i32 22, !dbg !6551
  %bg_stamp339 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r338, i32 0, i32 90, !dbg !6552
  %arraydecay340 = getelementptr inbounds [4 x float], [4 x float]* %bg_stamp339, i64 0, i64 0, !dbg !6550
  %261 = load %struct.ColorManagedDisplay*, %struct.ColorManagedDisplay** %display, align 8, !dbg !6553
  %262 = load i32, i32* %x, align 4, !dbg !6554
  %sub341 = sub nsw i32 %262, 2, !dbg !6555
  %263 = load i32, i32* %y, align 4, !dbg !6556
  %sub342 = sub nsw i32 %263, 1, !dbg !6557
  %264 = load i32, i32* %x, align 4, !dbg !6558
  %conv343 = sitofp i32 %264 to float, !dbg !6558
  %265 = load float, float* %w, align 4, !dbg !6559
  %add344 = fadd float %conv343, %265, !dbg !6560
  %add345 = fadd float %add344, 2.000000e+00, !dbg !6561
  %conv346 = fptosi float %add345 to i32, !dbg !6558
  %266 = load i32, i32* %y, align 4, !dbg !6562
  %conv347 = sitofp i32 %266 to float, !dbg !6562
  %267 = load float, float* %h, align 4, !dbg !6563
  %add348 = fadd float %conv347, %267, !dbg !6564
  %add349 = fadd float %add348, 1.000000e+00, !dbg !6565
  %conv350 = fptosi float %add349 to i32, !dbg !6562
  call void @buf_rectfill_area(i8* %256, float* %257, i32 %258, i32 %259, float* %arraydecay340, %struct.ColorManagedDisplay* %261, i32 %sub341, i32 %sub342, i32 %conv346, i32 %conv350), !dbg !6566
  %268 = load i32, i32* %mono, align 4, !dbg !6567
  %269 = load i32, i32* %x, align 4, !dbg !6568
  %conv351 = sitofp i32 %269 to float, !dbg !6568
  %270 = load i32, i32* %y, align 4, !dbg !6569
  %271 = load i32, i32* %y_ofs, align 4, !dbg !6570
  %add352 = add nsw i32 %270, %271, !dbg !6571
  %conv353 = sitofp i32 %add352 to float, !dbg !6569
  call void @BLF_position(i32 %268, float %conv351, float %conv353, float 0.000000e+00), !dbg !6572
  %272 = load i32, i32* %mono, align 4, !dbg !6573
  %strip354 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 9, !dbg !6574
  %arraydecay355 = getelementptr inbounds [80 x i8], [80 x i8]* %strip354, i64 0, i64 0, !dbg !6575
  call void @BLF_draw_buffer(i32 %272, i8* %arraydecay355), !dbg !6576
  br label %if.end356, !dbg !6577

if.end356:                                        ; preds = %if.then330, %land.lhs.true325, %if.end321
  %273 = load i32, i32* %mono, align 4, !dbg !6578
  call void @BLF_buffer(i32 %273, float* null, i8* null, i32 0, i32 0, i32 0, %struct.ColorManagedDisplay* null), !dbg !6579
  br label %return, !dbg !6580

return:                                           ; preds = %if.end356, %if.then
  ret void, !dbg !6580
}

declare dso_local %struct.ColorManagedDisplay* @IMB_colormanagement_display_get_named(i8*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @stampdata(%struct.Scene* %scene, %struct.Object* %camera, %struct.StampData* %stamp_data, i32 %do_prefix) #0 !dbg !6581 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %camera.addr = alloca %struct.Object*, align 8
  %stamp_data.addr = alloca %struct.StampData*, align 8
  %do_prefix.addr = alloca i32, align 4
  %text = alloca [256 x i8], align 16
  %tl = alloca %struct.tm*, align 8
  %t = alloca i64, align 8
  %name43 = alloca i8*, align 8
  %timecode_style = alloca i16, align 2
  %fmtstr = alloca [32 x i8], align 16
  %digits = alloca i32, align 4
  %seq = alloca %struct.Sequence*, align 8
  %re = alloca %struct.Render*, align 8
  %stats = alloca %struct.RenderStats*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6586, metadata !DIExpression()), !dbg !6587
  store %struct.Object* %camera, %struct.Object** %camera.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %camera.addr, metadata !6588, metadata !DIExpression()), !dbg !6589
  store %struct.StampData* %stamp_data, %struct.StampData** %stamp_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StampData** %stamp_data.addr, metadata !6590, metadata !DIExpression()), !dbg !6591
  store i32 %do_prefix, i32* %do_prefix.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %do_prefix.addr, metadata !6592, metadata !DIExpression()), !dbg !6593
  call void @llvm.dbg.declare(metadata [256 x i8]* %text, metadata !6594, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.declare(metadata %struct.tm** %tl, metadata !6596, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.declare(metadata i64* %t, metadata !6614, metadata !DIExpression()), !dbg !6618
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6619
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 22, !dbg !6621
  %stamp = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 85, !dbg !6622
  %1 = load i32, i32* %stamp, align 8, !dbg !6622
  %and = and i32 %1, 256, !dbg !6623
  %tobool = icmp ne i32 %and, 0, !dbg !6623
  br i1 %tobool, label %if.then, label %if.else, !dbg !6624

if.then:                                          ; preds = %entry
  %2 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6625
  %file = getelementptr inbounds %struct.StampData, %struct.StampData* %2, i32 0, i32 0, !dbg !6627
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %file, i64 0, i64 0, !dbg !6625
  %3 = load i32, i32* %do_prefix.addr, align 4, !dbg !6628
  %tobool1 = icmp ne i32 %3, 0, !dbg !6628
  %4 = zext i1 %tobool1 to i64, !dbg !6628
  %cond = select i1 %tobool1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i64 0, i64 0), !dbg !6628
  %5 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 3), align 8, !dbg !6629
  %conv = zext i8 %5 to i32, !dbg !6630
  %tobool2 = icmp ne i32 %conv, 0, !dbg !6630
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !6630

cond.true:                                        ; preds = %if.then
  %6 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !6631
  %name = getelementptr inbounds %struct.Main, %struct.Main* %6, i32 0, i32 2, !dbg !6632
  %arraydecay3 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !6633
  br label %cond.end, !dbg !6630

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !6630

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond4 = phi i8* [ %arraydecay3, %cond.true ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.45, i64 0, i64 0), %cond.false ], !dbg !6630
  %call = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay, i64 512, i8* %cond, i8* %cond4), !dbg !6634
  br label %if.end, !dbg !6635

if.else:                                          ; preds = %entry
  %7 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6636
  %file5 = getelementptr inbounds %struct.StampData, %struct.StampData* %7, i32 0, i32 0, !dbg !6638
  %arrayidx = getelementptr inbounds [512 x i8], [512 x i8]* %file5, i64 0, i64 0, !dbg !6636
  store i8 0, i8* %arrayidx, align 1, !dbg !6639
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  %8 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6640
  %r6 = getelementptr inbounds %struct.Scene, %struct.Scene* %8, i32 0, i32 22, !dbg !6642
  %stamp7 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r6, i32 0, i32 85, !dbg !6643
  %9 = load i32, i32* %stamp7, align 8, !dbg !6643
  %and8 = and i32 %9, 32, !dbg !6644
  %tobool9 = icmp ne i32 %and8, 0, !dbg !6644
  br i1 %tobool9, label %if.then10, label %if.else15, !dbg !6645

if.then10:                                        ; preds = %if.end
  %10 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6646
  %note = getelementptr inbounds %struct.StampData, %struct.StampData* %10, i32 0, i32 1, !dbg !6648
  %arraydecay11 = getelementptr inbounds [512 x i8], [512 x i8]* %note, i64 0, i64 0, !dbg !6646
  %11 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6649
  %r12 = getelementptr inbounds %struct.Scene, %struct.Scene* %11, i32 0, i32 22, !dbg !6650
  %stamp_udata = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r12, i32 0, i32 88, !dbg !6651
  %arraydecay13 = getelementptr inbounds [768 x i8], [768 x i8]* %stamp_udata, i64 0, i64 0, !dbg !6649
  %call14 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay11, i64 512, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i64 0, i64 0), i8* %arraydecay13), !dbg !6652
  br label %if.end18, !dbg !6653

if.else15:                                        ; preds = %if.end
  %12 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6654
  %note16 = getelementptr inbounds %struct.StampData, %struct.StampData* %12, i32 0, i32 1, !dbg !6656
  %arrayidx17 = getelementptr inbounds [512 x i8], [512 x i8]* %note16, i64 0, i64 0, !dbg !6654
  store i8 0, i8* %arrayidx17, align 1, !dbg !6657
  br label %if.end18

if.end18:                                         ; preds = %if.else15, %if.then10
  %13 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6658
  %r19 = getelementptr inbounds %struct.Scene, %struct.Scene* %13, i32 0, i32 22, !dbg !6660
  %stamp20 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r19, i32 0, i32 85, !dbg !6661
  %14 = load i32, i32* %stamp20, align 8, !dbg !6661
  %and21 = and i32 %14, 4, !dbg !6662
  %tobool22 = icmp ne i32 %and21, 0, !dbg !6662
  br i1 %tobool22, label %if.then23, label %if.else34, !dbg !6663

if.then23:                                        ; preds = %if.end18
  %call24 = call i64 @time(i64* null) #7, !dbg !6664
  store i64 %call24, i64* %t, align 8, !dbg !6666
  %call25 = call %struct.tm* @localtime(i64* %t) #7, !dbg !6667
  store %struct.tm* %call25, %struct.tm** %tl, align 8, !dbg !6668
  %arraydecay26 = getelementptr inbounds [256 x i8], [256 x i8]* %text, i64 0, i64 0, !dbg !6669
  %15 = load %struct.tm*, %struct.tm** %tl, align 8, !dbg !6670
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %15, i32 0, i32 5, !dbg !6671
  %16 = load i32, i32* %tm_year, align 4, !dbg !6671
  %add = add nsw i32 %16, 1900, !dbg !6672
  %17 = load %struct.tm*, %struct.tm** %tl, align 8, !dbg !6673
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %17, i32 0, i32 4, !dbg !6674
  %18 = load i32, i32* %tm_mon, align 8, !dbg !6674
  %add27 = add nsw i32 %18, 1, !dbg !6675
  %19 = load %struct.tm*, %struct.tm** %tl, align 8, !dbg !6676
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %19, i32 0, i32 3, !dbg !6677
  %20 = load i32, i32* %tm_mday, align 4, !dbg !6677
  %21 = load %struct.tm*, %struct.tm** %tl, align 8, !dbg !6678
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %21, i32 0, i32 2, !dbg !6679
  %22 = load i32, i32* %tm_hour, align 8, !dbg !6679
  %23 = load %struct.tm*, %struct.tm** %tl, align 8, !dbg !6680
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %23, i32 0, i32 1, !dbg !6681
  %24 = load i32, i32* %tm_min, align 4, !dbg !6681
  %25 = load %struct.tm*, %struct.tm** %tl, align 8, !dbg !6682
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %25, i32 0, i32 0, !dbg !6683
  %26 = load i32, i32* %tm_sec, align 8, !dbg !6683
  %call28 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay26, i64 256, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.46, i64 0, i64 0), i32 %add, i32 %add27, i32 %20, i32 %22, i32 %24, i32 %26), !dbg !6684
  %27 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6685
  %date = getelementptr inbounds %struct.StampData, %struct.StampData* %27, i32 0, i32 2, !dbg !6686
  %arraydecay29 = getelementptr inbounds [512 x i8], [512 x i8]* %date, i64 0, i64 0, !dbg !6685
  %28 = load i32, i32* %do_prefix.addr, align 4, !dbg !6687
  %tobool30 = icmp ne i32 %28, 0, !dbg !6687
  %29 = zext i1 %tobool30 to i64, !dbg !6687
  %cond31 = select i1 %tobool30, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i64 0, i64 0), !dbg !6687
  %arraydecay32 = getelementptr inbounds [256 x i8], [256 x i8]* %text, i64 0, i64 0, !dbg !6688
  %call33 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay29, i64 512, i8* %cond31, i8* %arraydecay32), !dbg !6689
  br label %if.end37, !dbg !6690

if.else34:                                        ; preds = %if.end18
  %30 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6691
  %date35 = getelementptr inbounds %struct.StampData, %struct.StampData* %30, i32 0, i32 2, !dbg !6693
  %arrayidx36 = getelementptr inbounds [512 x i8], [512 x i8]* %date35, i64 0, i64 0, !dbg !6691
  store i8 0, i8* %arrayidx36, align 1, !dbg !6694
  br label %if.end37

if.end37:                                         ; preds = %if.else34, %if.then23
  %31 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6695
  %r38 = getelementptr inbounds %struct.Scene, %struct.Scene* %31, i32 0, i32 22, !dbg !6697
  %stamp39 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r38, i32 0, i32 85, !dbg !6698
  %32 = load i32, i32* %stamp39, align 8, !dbg !6698
  %and40 = and i32 %32, 128, !dbg !6699
  %tobool41 = icmp ne i32 %and40, 0, !dbg !6699
  br i1 %tobool41, label %if.then42, label %if.else59, !dbg !6700

if.then42:                                        ; preds = %if.end37
  call void @llvm.dbg.declare(metadata i8** %name43, metadata !6701, metadata !DIExpression()), !dbg !6703
  %33 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6704
  %34 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6705
  %r44 = getelementptr inbounds %struct.Scene, %struct.Scene* %34, i32 0, i32 22, !dbg !6705
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r44, i32 0, i32 5, !dbg !6705
  %35 = load i32, i32* %cfra, align 8, !dbg !6705
  %call45 = call i8* @BKE_scene_find_last_marker_name(%struct.Scene* %33, i32 %35), !dbg !6706
  store i8* %call45, i8** %name43, align 8, !dbg !6703
  %36 = load i8*, i8** %name43, align 8, !dbg !6707
  %tobool46 = icmp ne i8* %36, null, !dbg !6707
  br i1 %tobool46, label %if.then47, label %if.else50, !dbg !6709

if.then47:                                        ; preds = %if.then42
  %arraydecay48 = getelementptr inbounds [256 x i8], [256 x i8]* %text, i64 0, i64 0, !dbg !6710
  %37 = load i8*, i8** %name43, align 8, !dbg !6711
  %call49 = call i8* @BLI_strncpy(i8* %arraydecay48, i8* %37, i64 256), !dbg !6712
  br label %if.end53, !dbg !6712

if.else50:                                        ; preds = %if.then42
  %arraydecay51 = getelementptr inbounds [256 x i8], [256 x i8]* %text, i64 0, i64 0, !dbg !6713
  %call52 = call i8* @BLI_strncpy(i8* %arraydecay51, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i64 0, i64 0), i64 256), !dbg !6714
  br label %if.end53

if.end53:                                         ; preds = %if.else50, %if.then47
  %38 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6715
  %marker = getelementptr inbounds %struct.StampData, %struct.StampData* %38, i32 0, i32 3, !dbg !6716
  %arraydecay54 = getelementptr inbounds [512 x i8], [512 x i8]* %marker, i64 0, i64 0, !dbg !6715
  %39 = load i32, i32* %do_prefix.addr, align 4, !dbg !6717
  %tobool55 = icmp ne i32 %39, 0, !dbg !6717
  %40 = zext i1 %tobool55 to i64, !dbg !6717
  %cond56 = select i1 %tobool55, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i64 0, i64 0), !dbg !6717
  %arraydecay57 = getelementptr inbounds [256 x i8], [256 x i8]* %text, i64 0, i64 0, !dbg !6718
  %call58 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay54, i64 512, i8* %cond56, i8* %arraydecay57), !dbg !6719
  br label %if.end62, !dbg !6720

if.else59:                                        ; preds = %if.end37
  %41 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6721
  %marker60 = getelementptr inbounds %struct.StampData, %struct.StampData* %41, i32 0, i32 3, !dbg !6723
  %arrayidx61 = getelementptr inbounds [512 x i8], [512 x i8]* %marker60, i64 0, i64 0, !dbg !6721
  store i8 0, i8* %arrayidx61, align 1, !dbg !6724
  br label %if.end62

if.end62:                                         ; preds = %if.else59, %if.end53
  %42 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6725
  %r63 = getelementptr inbounds %struct.Scene, %struct.Scene* %42, i32 0, i32 22, !dbg !6727
  %stamp64 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r63, i32 0, i32 85, !dbg !6728
  %43 = load i32, i32* %stamp64, align 8, !dbg !6728
  %and65 = and i32 %43, 1, !dbg !6729
  %tobool66 = icmp ne i32 %and65, 0, !dbg !6729
  br i1 %tobool66, label %if.then67, label %if.else90, !dbg !6730

if.then67:                                        ; preds = %if.end62
  call void @llvm.dbg.declare(metadata i16* %timecode_style, metadata !6731, metadata !DIExpression()), !dbg !6734
  store i16 2, i16* %timecode_style, align 2, !dbg !6734
  %arraydecay68 = getelementptr inbounds [256 x i8], [256 x i8]* %text, i64 0, i64 0, !dbg !6735
  %44 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6736
  %r69 = getelementptr inbounds %struct.Scene, %struct.Scene* %44, i32 0, i32 22, !dbg !6736
  %frs_sec_base = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r69, i32 0, i32 65, !dbg !6736
  %45 = load float, float* %frs_sec_base, align 4, !dbg !6736
  %conv70 = fpext float %45 to double, !dbg !6736
  %46 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6736
  %r71 = getelementptr inbounds %struct.Scene, %struct.Scene* %46, i32 0, i32 22, !dbg !6736
  %cfra72 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r71, i32 0, i32 5, !dbg !6736
  %47 = load i32, i32* %cfra72, align 8, !dbg !6736
  %conv73 = sitofp i32 %47 to double, !dbg !6736
  %mul = fmul double %conv70, %conv73, !dbg !6736
  %48 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6736
  %r74 = getelementptr inbounds %struct.Scene, %struct.Scene* %48, i32 0, i32 22, !dbg !6736
  %frs_sec = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r74, i32 0, i32 55, !dbg !6736
  %49 = load i16, i16* %frs_sec, align 4, !dbg !6736
  %conv75 = sitofp i16 %49 to double, !dbg !6736
  %div = fdiv double %mul, %conv75, !dbg !6736
  %conv76 = fptrunc double %div to float, !dbg !6736
  %50 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6737
  %r77 = getelementptr inbounds %struct.Scene, %struct.Scene* %50, i32 0, i32 22, !dbg !6737
  %frs_sec78 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r77, i32 0, i32 55, !dbg !6737
  %51 = load i16, i16* %frs_sec78, align 4, !dbg !6737
  %conv79 = sitofp i16 %51 to double, !dbg !6737
  %52 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6737
  %r80 = getelementptr inbounds %struct.Scene, %struct.Scene* %52, i32 0, i32 22, !dbg !6737
  %frs_sec_base81 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r80, i32 0, i32 65, !dbg !6737
  %53 = load float, float* %frs_sec_base81, align 4, !dbg !6737
  %conv82 = fpext float %53 to double, !dbg !6737
  %div83 = fdiv double %conv79, %conv82, !dbg !6737
  %call84 = call i64 @BLI_timecode_string_from_time(i8* %arraydecay68, i64 256, i32 0, float %conv76, double %div83, i16 signext 2), !dbg !6738
  %54 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6739
  %time = getelementptr inbounds %struct.StampData, %struct.StampData* %54, i32 0, i32 4, !dbg !6740
  %arraydecay85 = getelementptr inbounds [512 x i8], [512 x i8]* %time, i64 0, i64 0, !dbg !6739
  %55 = load i32, i32* %do_prefix.addr, align 4, !dbg !6741
  %tobool86 = icmp ne i32 %55, 0, !dbg !6741
  %56 = zext i1 %tobool86 to i64, !dbg !6741
  %cond87 = select i1 %tobool86, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i64 0, i64 0), !dbg !6741
  %arraydecay88 = getelementptr inbounds [256 x i8], [256 x i8]* %text, i64 0, i64 0, !dbg !6742
  %call89 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay85, i64 512, i8* %cond87, i8* %arraydecay88), !dbg !6743
  br label %if.end93, !dbg !6744

if.else90:                                        ; preds = %if.end62
  %57 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6745
  %time91 = getelementptr inbounds %struct.StampData, %struct.StampData* %57, i32 0, i32 4, !dbg !6747
  %arrayidx92 = getelementptr inbounds [512 x i8], [512 x i8]* %time91, i64 0, i64 0, !dbg !6745
  store i8 0, i8* %arrayidx92, align 1, !dbg !6748
  br label %if.end93

if.end93:                                         ; preds = %if.else90, %if.then67
  %58 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6749
  %r94 = getelementptr inbounds %struct.Scene, %struct.Scene* %58, i32 0, i32 22, !dbg !6751
  %stamp95 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r94, i32 0, i32 85, !dbg !6752
  %59 = load i32, i32* %stamp95, align 8, !dbg !6752
  %and96 = and i32 %59, 2, !dbg !6753
  %tobool97 = icmp ne i32 %and96, 0, !dbg !6753
  br i1 %tobool97, label %if.then98, label %if.else118, !dbg !6754

if.then98:                                        ; preds = %if.end93
  call void @llvm.dbg.declare(metadata [32 x i8]* %fmtstr, metadata !6755, metadata !DIExpression()), !dbg !6757
  call void @llvm.dbg.declare(metadata i32* %digits, metadata !6758, metadata !DIExpression()), !dbg !6759
  store i32 1, i32* %digits, align 4, !dbg !6759
  %60 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6760
  %r99 = getelementptr inbounds %struct.Scene, %struct.Scene* %60, i32 0, i32 22, !dbg !6762
  %efra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r99, i32 0, i32 7, !dbg !6763
  %61 = load i32, i32* %efra, align 8, !dbg !6763
  %cmp = icmp sgt i32 %61, 9, !dbg !6764
  br i1 %cmp, label %if.then101, label %if.end108, !dbg !6765

if.then101:                                       ; preds = %if.then98
  %62 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6766
  %r102 = getelementptr inbounds %struct.Scene, %struct.Scene* %62, i32 0, i32 22, !dbg !6767
  %efra103 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r102, i32 0, i32 7, !dbg !6768
  %63 = load i32, i32* %efra103, align 8, !dbg !6768
  %conv104 = sitofp i32 %63 to double, !dbg !6766
  %call105 = call double @log10(double %conv104) #7, !dbg !6769
  %conv106 = fptosi double %call105 to i32, !dbg !6770
  %add107 = add nsw i32 1, %conv106, !dbg !6771
  store i32 %add107, i32* %digits, align 4, !dbg !6772
  br label %if.end108, !dbg !6773

if.end108:                                        ; preds = %if.then101, %if.then98
  %arraydecay109 = getelementptr inbounds [32 x i8], [32 x i8]* %fmtstr, i64 0, i64 0, !dbg !6774
  %64 = load i32, i32* %do_prefix.addr, align 4, !dbg !6775
  %tobool110 = icmp ne i32 %64, 0, !dbg !6775
  %65 = zext i1 %tobool110 to i64, !dbg !6775
  %cond111 = select i1 %tobool110, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i64 0, i64 0), !dbg !6775
  %66 = load i32, i32* %digits, align 4, !dbg !6776
  %call112 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay109, i64 32, i8* %cond111, i32 %66), !dbg !6777
  %67 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6778
  %frame = getelementptr inbounds %struct.StampData, %struct.StampData* %67, i32 0, i32 5, !dbg !6779
  %arraydecay113 = getelementptr inbounds [512 x i8], [512 x i8]* %frame, i64 0, i64 0, !dbg !6778
  %arraydecay114 = getelementptr inbounds [32 x i8], [32 x i8]* %fmtstr, i64 0, i64 0, !dbg !6780
  %68 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6781
  %r115 = getelementptr inbounds %struct.Scene, %struct.Scene* %68, i32 0, i32 22, !dbg !6782
  %cfra116 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r115, i32 0, i32 5, !dbg !6783
  %69 = load i32, i32* %cfra116, align 8, !dbg !6783
  %call117 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay113, i64 512, i8* %arraydecay114, i32 %69), !dbg !6784
  br label %if.end121, !dbg !6785

if.else118:                                       ; preds = %if.end93
  %70 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6786
  %frame119 = getelementptr inbounds %struct.StampData, %struct.StampData* %70, i32 0, i32 5, !dbg !6788
  %arrayidx120 = getelementptr inbounds [512 x i8], [512 x i8]* %frame119, i64 0, i64 0, !dbg !6786
  store i8 0, i8* %arrayidx120, align 1, !dbg !6789
  br label %if.end121

if.end121:                                        ; preds = %if.else118, %if.end108
  %71 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6790
  %r122 = getelementptr inbounds %struct.Scene, %struct.Scene* %71, i32 0, i32 22, !dbg !6792
  %stamp123 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r122, i32 0, i32 85, !dbg !6793
  %72 = load i32, i32* %stamp123, align 8, !dbg !6793
  %and124 = and i32 %72, 8, !dbg !6794
  %tobool125 = icmp ne i32 %and124, 0, !dbg !6794
  br i1 %tobool125, label %if.then126, label %if.else139, !dbg !6795

if.then126:                                       ; preds = %if.end121
  %73 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6796
  %camera127 = getelementptr inbounds %struct.StampData, %struct.StampData* %73, i32 0, i32 6, !dbg !6798
  %arraydecay128 = getelementptr inbounds [80 x i8], [80 x i8]* %camera127, i64 0, i64 0, !dbg !6796
  %74 = load i32, i32* %do_prefix.addr, align 4, !dbg !6799
  %tobool129 = icmp ne i32 %74, 0, !dbg !6799
  %75 = zext i1 %tobool129 to i64, !dbg !6799
  %cond130 = select i1 %tobool129, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i64 0, i64 0), !dbg !6799
  %76 = load %struct.Object*, %struct.Object** %camera.addr, align 8, !dbg !6800
  %tobool131 = icmp ne %struct.Object* %76, null, !dbg !6800
  br i1 %tobool131, label %cond.true132, label %cond.false135, !dbg !6800

cond.true132:                                     ; preds = %if.then126
  %77 = load %struct.Object*, %struct.Object** %camera.addr, align 8, !dbg !6801
  %id = getelementptr inbounds %struct.Object, %struct.Object* %77, i32 0, i32 0, !dbg !6802
  %name133 = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !6803
  %arraydecay134 = getelementptr inbounds [66 x i8], [66 x i8]* %name133, i64 0, i64 0, !dbg !6801
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay134, i64 2, !dbg !6804
  br label %cond.end136, !dbg !6800

cond.false135:                                    ; preds = %if.then126
  br label %cond.end136, !dbg !6800

cond.end136:                                      ; preds = %cond.false135, %cond.true132
  %cond137 = phi i8* [ %add.ptr, %cond.true132 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i64 0, i64 0), %cond.false135 ], !dbg !6800
  %call138 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay128, i64 80, i8* %cond130, i8* %cond137), !dbg !6805
  br label %if.end142, !dbg !6806

if.else139:                                       ; preds = %if.end121
  %78 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6807
  %camera140 = getelementptr inbounds %struct.StampData, %struct.StampData* %78, i32 0, i32 6, !dbg !6809
  %arrayidx141 = getelementptr inbounds [80 x i8], [80 x i8]* %camera140, i64 0, i64 0, !dbg !6807
  store i8 0, i8* %arrayidx141, align 1, !dbg !6810
  br label %if.end142

if.end142:                                        ; preds = %if.else139, %cond.end136
  %79 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6811
  %r143 = getelementptr inbounds %struct.Scene, %struct.Scene* %79, i32 0, i32 22, !dbg !6813
  %stamp144 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r143, i32 0, i32 85, !dbg !6814
  %80 = load i32, i32* %stamp144, align 8, !dbg !6814
  %and145 = and i32 %80, 2048, !dbg !6815
  %tobool146 = icmp ne i32 %and145, 0, !dbg !6815
  br i1 %tobool146, label %if.then147, label %if.else165, !dbg !6816

if.then147:                                       ; preds = %if.end142
  %81 = load %struct.Object*, %struct.Object** %camera.addr, align 8, !dbg !6817
  %tobool148 = icmp ne %struct.Object* %81, null, !dbg !6817
  br i1 %tobool148, label %land.lhs.true, label %if.else156, !dbg !6820

land.lhs.true:                                    ; preds = %if.then147
  %82 = load %struct.Object*, %struct.Object** %camera.addr, align 8, !dbg !6821
  %type = getelementptr inbounds %struct.Object, %struct.Object* %82, i32 0, i32 3, !dbg !6822
  %83 = load i16, i16* %type, align 8, !dbg !6822
  %conv149 = sext i16 %83 to i32, !dbg !6821
  %cmp150 = icmp eq i32 %conv149, 11, !dbg !6823
  br i1 %cmp150, label %if.then152, label %if.else156, !dbg !6824

if.then152:                                       ; preds = %land.lhs.true
  %arraydecay153 = getelementptr inbounds [256 x i8], [256 x i8]* %text, i64 0, i64 0, !dbg !6825
  %84 = load %struct.Object*, %struct.Object** %camera.addr, align 8, !dbg !6827
  %data = getelementptr inbounds %struct.Object, %struct.Object* %84, i32 0, i32 19, !dbg !6828
  %85 = load i8*, i8** %data, align 8, !dbg !6828
  %86 = bitcast i8* %85 to %struct.Camera*, !dbg !6829
  %lens = getelementptr inbounds %struct.Camera, %struct.Camera* %86, i32 0, i32 8, !dbg !6830
  %87 = load float, float* %lens, align 8, !dbg !6830
  %conv154 = fpext float %87 to double, !dbg !6831
  %call155 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay153, i64 256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54, i64 0, i64 0), double %conv154), !dbg !6832
  br label %if.end159, !dbg !6833

if.else156:                                       ; preds = %land.lhs.true, %if.then147
  %arraydecay157 = getelementptr inbounds [256 x i8], [256 x i8]* %text, i64 0, i64 0, !dbg !6834
  %call158 = call i8* @BLI_strncpy(i8* %arraydecay157, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i64 0, i64 0), i64 256), !dbg !6836
  br label %if.end159

if.end159:                                        ; preds = %if.else156, %if.then152
  %88 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6837
  %cameralens = getelementptr inbounds %struct.StampData, %struct.StampData* %88, i32 0, i32 7, !dbg !6838
  %arraydecay160 = getelementptr inbounds [80 x i8], [80 x i8]* %cameralens, i64 0, i64 0, !dbg !6837
  %89 = load i32, i32* %do_prefix.addr, align 4, !dbg !6839
  %tobool161 = icmp ne i32 %89, 0, !dbg !6839
  %90 = zext i1 %tobool161 to i64, !dbg !6839
  %cond162 = select i1 %tobool161, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i64 0, i64 0), !dbg !6839
  %arraydecay163 = getelementptr inbounds [256 x i8], [256 x i8]* %text, i64 0, i64 0, !dbg !6840
  %call164 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay160, i64 80, i8* %cond162, i8* %arraydecay163), !dbg !6841
  br label %if.end168, !dbg !6842

if.else165:                                       ; preds = %if.end142
  %91 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6843
  %cameralens166 = getelementptr inbounds %struct.StampData, %struct.StampData* %91, i32 0, i32 7, !dbg !6845
  %arrayidx167 = getelementptr inbounds [80 x i8], [80 x i8]* %cameralens166, i64 0, i64 0, !dbg !6843
  store i8 0, i8* %arrayidx167, align 1, !dbg !6846
  br label %if.end168

if.end168:                                        ; preds = %if.else165, %if.end159
  %92 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6847
  %r169 = getelementptr inbounds %struct.Scene, %struct.Scene* %92, i32 0, i32 22, !dbg !6849
  %stamp170 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r169, i32 0, i32 85, !dbg !6850
  %93 = load i32, i32* %stamp170, align 8, !dbg !6850
  %and171 = and i32 %93, 16, !dbg !6851
  %tobool172 = icmp ne i32 %and171, 0, !dbg !6851
  br i1 %tobool172, label %if.then173, label %if.else183, !dbg !6852

if.then173:                                       ; preds = %if.end168
  %94 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6853
  %scene174 = getelementptr inbounds %struct.StampData, %struct.StampData* %94, i32 0, i32 8, !dbg !6855
  %arraydecay175 = getelementptr inbounds [80 x i8], [80 x i8]* %scene174, i64 0, i64 0, !dbg !6853
  %95 = load i32, i32* %do_prefix.addr, align 4, !dbg !6856
  %tobool176 = icmp ne i32 %95, 0, !dbg !6856
  %96 = zext i1 %tobool176 to i64, !dbg !6856
  %cond177 = select i1 %tobool176, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i64 0, i64 0), !dbg !6856
  %97 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6857
  %id178 = getelementptr inbounds %struct.Scene, %struct.Scene* %97, i32 0, i32 0, !dbg !6858
  %name179 = getelementptr inbounds %struct.ID, %struct.ID* %id178, i32 0, i32 4, !dbg !6859
  %arraydecay180 = getelementptr inbounds [66 x i8], [66 x i8]* %name179, i64 0, i64 0, !dbg !6857
  %add.ptr181 = getelementptr inbounds i8, i8* %arraydecay180, i64 2, !dbg !6860
  %call182 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay175, i64 80, i8* %cond177, i8* %add.ptr181), !dbg !6861
  br label %if.end186, !dbg !6862

if.else183:                                       ; preds = %if.end168
  %98 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6863
  %scene184 = getelementptr inbounds %struct.StampData, %struct.StampData* %98, i32 0, i32 8, !dbg !6865
  %arrayidx185 = getelementptr inbounds [80 x i8], [80 x i8]* %scene184, i64 0, i64 0, !dbg !6863
  store i8 0, i8* %arrayidx185, align 1, !dbg !6866
  br label %if.end186

if.end186:                                        ; preds = %if.else183, %if.then173
  %99 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6867
  %r187 = getelementptr inbounds %struct.Scene, %struct.Scene* %99, i32 0, i32 22, !dbg !6869
  %stamp188 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r187, i32 0, i32 85, !dbg !6870
  %100 = load i32, i32* %stamp188, align 8, !dbg !6870
  %and189 = and i32 %100, 512, !dbg !6871
  %tobool190 = icmp ne i32 %and189, 0, !dbg !6871
  br i1 %tobool190, label %if.then191, label %if.else211, !dbg !6872

if.then191:                                       ; preds = %if.end186
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq, metadata !6873, metadata !DIExpression()), !dbg !6875
  %101 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6876
  %102 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6877
  %r192 = getelementptr inbounds %struct.Scene, %struct.Scene* %102, i32 0, i32 22, !dbg !6878
  %cfra193 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r192, i32 0, i32 5, !dbg !6879
  %103 = load i32, i32* %cfra193, align 8, !dbg !6879
  %call194 = call %struct.Sequence* @BKE_sequencer_foreground_frame_get(%struct.Scene* %101, i32 %103), !dbg !6880
  store %struct.Sequence* %call194, %struct.Sequence** %seq, align 8, !dbg !6875
  %104 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !6881
  %tobool195 = icmp ne %struct.Sequence* %104, null, !dbg !6881
  br i1 %tobool195, label %if.then196, label %if.else202, !dbg !6883

if.then196:                                       ; preds = %if.then191
  %arraydecay197 = getelementptr inbounds [256 x i8], [256 x i8]* %text, i64 0, i64 0, !dbg !6884
  %105 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !6885
  %name198 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %105, i32 0, i32 4, !dbg !6886
  %arraydecay199 = getelementptr inbounds [64 x i8], [64 x i8]* %name198, i64 0, i64 0, !dbg !6885
  %add.ptr200 = getelementptr inbounds i8, i8* %arraydecay199, i64 2, !dbg !6887
  %call201 = call i8* @BLI_strncpy(i8* %arraydecay197, i8* %add.ptr200, i64 256), !dbg !6888
  br label %if.end205, !dbg !6888

if.else202:                                       ; preds = %if.then191
  %arraydecay203 = getelementptr inbounds [256 x i8], [256 x i8]* %text, i64 0, i64 0, !dbg !6889
  %call204 = call i8* @BLI_strncpy(i8* %arraydecay203, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i64 0, i64 0), i64 256), !dbg !6890
  br label %if.end205

if.end205:                                        ; preds = %if.else202, %if.then196
  %106 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6891
  %strip = getelementptr inbounds %struct.StampData, %struct.StampData* %106, i32 0, i32 9, !dbg !6892
  %arraydecay206 = getelementptr inbounds [80 x i8], [80 x i8]* %strip, i64 0, i64 0, !dbg !6891
  %107 = load i32, i32* %do_prefix.addr, align 4, !dbg !6893
  %tobool207 = icmp ne i32 %107, 0, !dbg !6893
  %108 = zext i1 %tobool207 to i64, !dbg !6893
  %cond208 = select i1 %tobool207, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i64 0, i64 0), !dbg !6893
  %arraydecay209 = getelementptr inbounds [256 x i8], [256 x i8]* %text, i64 0, i64 0, !dbg !6894
  %call210 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay206, i64 80, i8* %cond208, i8* %arraydecay209), !dbg !6895
  br label %if.end214, !dbg !6896

if.else211:                                       ; preds = %if.end186
  %109 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6897
  %strip212 = getelementptr inbounds %struct.StampData, %struct.StampData* %109, i32 0, i32 9, !dbg !6899
  %arrayidx213 = getelementptr inbounds [80 x i8], [80 x i8]* %strip212, i64 0, i64 0, !dbg !6897
  store i8 0, i8* %arrayidx213, align 1, !dbg !6900
  br label %if.end214

if.end214:                                        ; preds = %if.else211, %if.end205
  call void @llvm.dbg.declare(metadata %struct.Render** %re, metadata !6901, metadata !DIExpression()), !dbg !6906
  %110 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6907
  %id215 = getelementptr inbounds %struct.Scene, %struct.Scene* %110, i32 0, i32 0, !dbg !6908
  %name216 = getelementptr inbounds %struct.ID, %struct.ID* %id215, i32 0, i32 4, !dbg !6909
  %arraydecay217 = getelementptr inbounds [66 x i8], [66 x i8]* %name216, i64 0, i64 0, !dbg !6907
  %call218 = call %struct.Render* @RE_GetRender(i8* %arraydecay217), !dbg !6910
  store %struct.Render* %call218, %struct.Render** %re, align 8, !dbg !6906
  call void @llvm.dbg.declare(metadata %struct.RenderStats** %stats, metadata !6911, metadata !DIExpression()), !dbg !6937
  %111 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !6938
  %tobool219 = icmp ne %struct.Render* %111, null, !dbg !6938
  br i1 %tobool219, label %cond.true220, label %cond.false222, !dbg !6938

cond.true220:                                     ; preds = %if.end214
  %112 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !6939
  %call221 = call %struct.RenderStats* @RE_GetStats(%struct.Render* %112), !dbg !6940
  br label %cond.end223, !dbg !6938

cond.false222:                                    ; preds = %if.end214
  br label %cond.end223, !dbg !6938

cond.end223:                                      ; preds = %cond.false222, %cond.true220
  %cond224 = phi %struct.RenderStats* [ %call221, %cond.true220 ], [ null, %cond.false222 ], !dbg !6938
  store %struct.RenderStats* %cond224, %struct.RenderStats** %stats, align 8, !dbg !6937
  %113 = load %struct.RenderStats*, %struct.RenderStats** %stats, align 8, !dbg !6941
  %tobool225 = icmp ne %struct.RenderStats* %113, null, !dbg !6941
  br i1 %tobool225, label %land.lhs.true226, label %if.else238, !dbg !6943

land.lhs.true226:                                 ; preds = %cond.end223
  %114 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6944
  %r227 = getelementptr inbounds %struct.Scene, %struct.Scene* %114, i32 0, i32 22, !dbg !6945
  %stamp228 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r227, i32 0, i32 85, !dbg !6946
  %115 = load i32, i32* %stamp228, align 8, !dbg !6946
  %and229 = and i32 %115, 1024, !dbg !6947
  %tobool230 = icmp ne i32 %and229, 0, !dbg !6947
  br i1 %tobool230, label %if.then231, label %if.else238, !dbg !6948

if.then231:                                       ; preds = %land.lhs.true226
  %116 = load %struct.RenderStats*, %struct.RenderStats** %stats, align 8, !dbg !6949
  %lastframetime = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %116, i32 0, i32 15, !dbg !6951
  %117 = load double, double* %lastframetime, align 8, !dbg !6951
  %arraydecay232 = getelementptr inbounds [256 x i8], [256 x i8]* %text, i64 0, i64 0, !dbg !6952
  call void @BLI_timestr(double %117, i8* %arraydecay232, i64 256), !dbg !6953
  %118 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6954
  %rendertime = getelementptr inbounds %struct.StampData, %struct.StampData* %118, i32 0, i32 10, !dbg !6955
  %arraydecay233 = getelementptr inbounds [80 x i8], [80 x i8]* %rendertime, i64 0, i64 0, !dbg !6954
  %119 = load i32, i32* %do_prefix.addr, align 4, !dbg !6956
  %tobool234 = icmp ne i32 %119, 0, !dbg !6956
  %120 = zext i1 %tobool234 to i64, !dbg !6956
  %cond235 = select i1 %tobool234, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i64 0, i64 0), !dbg !6956
  %arraydecay236 = getelementptr inbounds [256 x i8], [256 x i8]* %text, i64 0, i64 0, !dbg !6957
  %call237 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay233, i64 80, i8* %cond235, i8* %arraydecay236), !dbg !6958
  br label %if.end241, !dbg !6959

if.else238:                                       ; preds = %land.lhs.true226, %cond.end223
  %121 = load %struct.StampData*, %struct.StampData** %stamp_data.addr, align 8, !dbg !6960
  %rendertime239 = getelementptr inbounds %struct.StampData, %struct.StampData* %121, i32 0, i32 10, !dbg !6962
  %arrayidx240 = getelementptr inbounds [80 x i8], [80 x i8]* %rendertime239, i64 0, i64 0, !dbg !6960
  store i8 0, i8* %arrayidx240, align 1, !dbg !6963
  br label %if.end241

if.end241:                                        ; preds = %if.else238, %if.then231
  ret void, !dbg !6964
}

declare dso_local void @BLF_size(i32, i32, i32) #1

declare dso_local void @BLF_buffer(i32, float*, i8*, i32, i32, i32, %struct.ColorManagedDisplay*) #1

declare dso_local void @BLF_buffer_col(i32, float, float, float, float) #1

declare dso_local float @BLF_width_max(i32) #1

declare dso_local float @BLF_height_max(i32) #1

declare dso_local float @BLF_descender(i32) #1

declare dso_local float @BLF_width(i32, i8*, i64) #1

declare dso_local void @buf_rectfill_area(i8*, float*, i32, i32, float*, %struct.ColorManagedDisplay*, i32, i32, i32, i32) #1

declare dso_local void @BLF_position(i32, float, float, float) #1

declare dso_local void @BLF_draw_buffer(i32, i8*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_imbuf_stamp_info(%struct.Scene* %scene, %struct.Object* %camera, %struct.ImBuf* %ibuf) #0 !dbg !6965 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %camera.addr = alloca %struct.Object*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %stamp_data = alloca %struct.StampData, align 1
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6968, metadata !DIExpression()), !dbg !6969
  store %struct.Object* %camera, %struct.Object** %camera.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %camera.addr, metadata !6970, metadata !DIExpression()), !dbg !6971
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !6972, metadata !DIExpression()), !dbg !6973
  call void @llvm.dbg.declare(metadata %struct.StampData* %stamp_data, metadata !6974, metadata !DIExpression()), !dbg !6975
  %0 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6976
  %tobool = icmp ne %struct.ImBuf* %0, null, !dbg !6976
  br i1 %tobool, label %if.end, label %if.then, !dbg !6978

if.then:                                          ; preds = %entry
  br label %if.end76, !dbg !6979

if.end:                                           ; preds = %entry
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6980
  %2 = load %struct.Object*, %struct.Object** %camera.addr, align 8, !dbg !6981
  call void @stampdata(%struct.Scene* %1, %struct.Object* %2, %struct.StampData* %stamp_data, i32 0), !dbg !6982
  %file = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 0, !dbg !6983
  %arrayidx = getelementptr inbounds [512 x i8], [512 x i8]* %file, i64 0, i64 0, !dbg !6985
  %3 = load i8, i8* %arrayidx, align 1, !dbg !6985
  %tobool1 = icmp ne i8 %3, 0, !dbg !6985
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !6986

if.then2:                                         ; preds = %if.end
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6987
  %file3 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 0, !dbg !6988
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %file3, i64 0, i64 0, !dbg !6989
  %call = call zeroext i8 @IMB_metadata_change_field(%struct.ImBuf* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0), i8* %arraydecay), !dbg !6990
  br label %if.end4, !dbg !6990

if.end4:                                          ; preds = %if.then2, %if.end
  %note = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 1, !dbg !6991
  %arrayidx5 = getelementptr inbounds [512 x i8], [512 x i8]* %note, i64 0, i64 0, !dbg !6993
  %5 = load i8, i8* %arrayidx5, align 1, !dbg !6993
  %tobool6 = icmp ne i8 %5, 0, !dbg !6993
  br i1 %tobool6, label %if.then7, label %if.end11, !dbg !6994

if.then7:                                         ; preds = %if.end4
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !6995
  %note8 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 1, !dbg !6996
  %arraydecay9 = getelementptr inbounds [512 x i8], [512 x i8]* %note8, i64 0, i64 0, !dbg !6997
  %call10 = call zeroext i8 @IMB_metadata_change_field(%struct.ImBuf* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i8* %arraydecay9), !dbg !6998
  br label %if.end11, !dbg !6998

if.end11:                                         ; preds = %if.then7, %if.end4
  %date = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 2, !dbg !6999
  %arrayidx12 = getelementptr inbounds [512 x i8], [512 x i8]* %date, i64 0, i64 0, !dbg !7001
  %7 = load i8, i8* %arrayidx12, align 1, !dbg !7001
  %tobool13 = icmp ne i8 %7, 0, !dbg !7001
  br i1 %tobool13, label %if.then14, label %if.end18, !dbg !7002

if.then14:                                        ; preds = %if.end11
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7003
  %date15 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 2, !dbg !7004
  %arraydecay16 = getelementptr inbounds [512 x i8], [512 x i8]* %date15, i64 0, i64 0, !dbg !7005
  %call17 = call zeroext i8 @IMB_metadata_change_field(%struct.ImBuf* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay16), !dbg !7006
  br label %if.end18, !dbg !7006

if.end18:                                         ; preds = %if.then14, %if.end11
  %marker = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 3, !dbg !7007
  %arrayidx19 = getelementptr inbounds [512 x i8], [512 x i8]* %marker, i64 0, i64 0, !dbg !7009
  %9 = load i8, i8* %arrayidx19, align 1, !dbg !7009
  %tobool20 = icmp ne i8 %9, 0, !dbg !7009
  br i1 %tobool20, label %if.then21, label %if.end25, !dbg !7010

if.then21:                                        ; preds = %if.end18
  %10 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7011
  %marker22 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 3, !dbg !7012
  %arraydecay23 = getelementptr inbounds [512 x i8], [512 x i8]* %marker22, i64 0, i64 0, !dbg !7013
  %call24 = call zeroext i8 @IMB_metadata_change_field(%struct.ImBuf* %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i8* %arraydecay23), !dbg !7014
  br label %if.end25, !dbg !7014

if.end25:                                         ; preds = %if.then21, %if.end18
  %time = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 4, !dbg !7015
  %arrayidx26 = getelementptr inbounds [512 x i8], [512 x i8]* %time, i64 0, i64 0, !dbg !7017
  %11 = load i8, i8* %arrayidx26, align 1, !dbg !7017
  %tobool27 = icmp ne i8 %11, 0, !dbg !7017
  br i1 %tobool27, label %if.then28, label %if.end32, !dbg !7018

if.then28:                                        ; preds = %if.end25
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7019
  %time29 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 4, !dbg !7020
  %arraydecay30 = getelementptr inbounds [512 x i8], [512 x i8]* %time29, i64 0, i64 0, !dbg !7021
  %call31 = call zeroext i8 @IMB_metadata_change_field(%struct.ImBuf* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i8* %arraydecay30), !dbg !7022
  br label %if.end32, !dbg !7022

if.end32:                                         ; preds = %if.then28, %if.end25
  %frame = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 5, !dbg !7023
  %arrayidx33 = getelementptr inbounds [512 x i8], [512 x i8]* %frame, i64 0, i64 0, !dbg !7025
  %13 = load i8, i8* %arrayidx33, align 1, !dbg !7025
  %tobool34 = icmp ne i8 %13, 0, !dbg !7025
  br i1 %tobool34, label %if.then35, label %if.end39, !dbg !7026

if.then35:                                        ; preds = %if.end32
  %14 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7027
  %frame36 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 5, !dbg !7028
  %arraydecay37 = getelementptr inbounds [512 x i8], [512 x i8]* %frame36, i64 0, i64 0, !dbg !7029
  %call38 = call zeroext i8 @IMB_metadata_change_field(%struct.ImBuf* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0), i8* %arraydecay37), !dbg !7030
  br label %if.end39, !dbg !7030

if.end39:                                         ; preds = %if.then35, %if.end32
  %camera40 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 6, !dbg !7031
  %arrayidx41 = getelementptr inbounds [80 x i8], [80 x i8]* %camera40, i64 0, i64 0, !dbg !7033
  %15 = load i8, i8* %arrayidx41, align 1, !dbg !7033
  %tobool42 = icmp ne i8 %15, 0, !dbg !7033
  br i1 %tobool42, label %if.then43, label %if.end47, !dbg !7034

if.then43:                                        ; preds = %if.end39
  %16 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7035
  %camera44 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 6, !dbg !7036
  %arraydecay45 = getelementptr inbounds [80 x i8], [80 x i8]* %camera44, i64 0, i64 0, !dbg !7037
  %call46 = call zeroext i8 @IMB_metadata_change_field(%struct.ImBuf* %16, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0), i8* %arraydecay45), !dbg !7038
  br label %if.end47, !dbg !7038

if.end47:                                         ; preds = %if.then43, %if.end39
  %cameralens = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 7, !dbg !7039
  %arrayidx48 = getelementptr inbounds [80 x i8], [80 x i8]* %cameralens, i64 0, i64 0, !dbg !7041
  %17 = load i8, i8* %arrayidx48, align 1, !dbg !7041
  %tobool49 = icmp ne i8 %17, 0, !dbg !7041
  br i1 %tobool49, label %if.then50, label %if.end54, !dbg !7042

if.then50:                                        ; preds = %if.end47
  %18 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7043
  %cameralens51 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 7, !dbg !7044
  %arraydecay52 = getelementptr inbounds [80 x i8], [80 x i8]* %cameralens51, i64 0, i64 0, !dbg !7045
  %call53 = call zeroext i8 @IMB_metadata_change_field(%struct.ImBuf* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i64 0, i64 0), i8* %arraydecay52), !dbg !7046
  br label %if.end54, !dbg !7046

if.end54:                                         ; preds = %if.then50, %if.end47
  %scene55 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 8, !dbg !7047
  %arrayidx56 = getelementptr inbounds [80 x i8], [80 x i8]* %scene55, i64 0, i64 0, !dbg !7049
  %19 = load i8, i8* %arrayidx56, align 1, !dbg !7049
  %tobool57 = icmp ne i8 %19, 0, !dbg !7049
  br i1 %tobool57, label %if.then58, label %if.end62, !dbg !7050

if.then58:                                        ; preds = %if.end54
  %20 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7051
  %scene59 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 8, !dbg !7052
  %arraydecay60 = getelementptr inbounds [80 x i8], [80 x i8]* %scene59, i64 0, i64 0, !dbg !7053
  %call61 = call zeroext i8 @IMB_metadata_change_field(%struct.ImBuf* %20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), i8* %arraydecay60), !dbg !7054
  br label %if.end62, !dbg !7054

if.end62:                                         ; preds = %if.then58, %if.end54
  %strip = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 9, !dbg !7055
  %arrayidx63 = getelementptr inbounds [80 x i8], [80 x i8]* %strip, i64 0, i64 0, !dbg !7057
  %21 = load i8, i8* %arrayidx63, align 1, !dbg !7057
  %tobool64 = icmp ne i8 %21, 0, !dbg !7057
  br i1 %tobool64, label %if.then65, label %if.end69, !dbg !7058

if.then65:                                        ; preds = %if.end62
  %22 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7059
  %strip66 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 9, !dbg !7060
  %arraydecay67 = getelementptr inbounds [80 x i8], [80 x i8]* %strip66, i64 0, i64 0, !dbg !7061
  %call68 = call zeroext i8 @IMB_metadata_change_field(%struct.ImBuf* %22, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i8* %arraydecay67), !dbg !7062
  br label %if.end69, !dbg !7062

if.end69:                                         ; preds = %if.then65, %if.end62
  %rendertime = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 10, !dbg !7063
  %arrayidx70 = getelementptr inbounds [80 x i8], [80 x i8]* %rendertime, i64 0, i64 0, !dbg !7065
  %23 = load i8, i8* %arrayidx70, align 1, !dbg !7065
  %tobool71 = icmp ne i8 %23, 0, !dbg !7065
  br i1 %tobool71, label %if.then72, label %if.end76, !dbg !7066

if.then72:                                        ; preds = %if.end69
  %24 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7067
  %rendertime73 = getelementptr inbounds %struct.StampData, %struct.StampData* %stamp_data, i32 0, i32 10, !dbg !7068
  %arraydecay74 = getelementptr inbounds [80 x i8], [80 x i8]* %rendertime73, i64 0, i64 0, !dbg !7069
  %call75 = call zeroext i8 @IMB_metadata_change_field(%struct.ImBuf* %24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i8* %arraydecay74), !dbg !7070
  br label %if.end76, !dbg !7070

if.end76:                                         ; preds = %if.then, %if.then72, %if.end69
  ret void, !dbg !7071
}

declare dso_local zeroext i8 @IMB_metadata_change_field(%struct.ImBuf*, i8*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_imbuf_alpha_test(%struct.ImBuf* %ibuf) #0 !dbg !7072 {
entry:
  %retval = alloca i8, align 1
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %tot = alloca i32, align 4
  %buf = alloca float*, align 8
  %buf6 = alloca i8*, align 8
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !7075, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !7077, metadata !DIExpression()), !dbg !7078
  %0 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7079
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %0, i32 0, i32 9, !dbg !7081
  %1 = load float*, float** %rect_float, align 8, !dbg !7081
  %tobool = icmp ne float* %1, null, !dbg !7079
  br i1 %tobool, label %if.then, label %if.else, !dbg !7082

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %buf, metadata !7083, metadata !DIExpression()), !dbg !7085
  %2 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7086
  %rect_float1 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %2, i32 0, i32 9, !dbg !7087
  %3 = load float*, float** %rect_float1, align 8, !dbg !7087
  store float* %3, float** %buf, align 8, !dbg !7085
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7088
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %4, i32 0, i32 2, !dbg !7090
  %5 = load i32, i32* %x, align 8, !dbg !7090
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7091
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %6, i32 0, i32 3, !dbg !7092
  %7 = load i32, i32* %y, align 4, !dbg !7092
  %mul = mul nsw i32 %5, %7, !dbg !7093
  store i32 %mul, i32* %tot, align 4, !dbg !7094
  br label %for.cond, !dbg !7095

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i32, i32* %tot, align 4, !dbg !7096
  %dec = add nsw i32 %8, -1, !dbg !7096
  store i32 %dec, i32* %tot, align 4, !dbg !7096
  %tobool2 = icmp ne i32 %8, 0, !dbg !7098
  br i1 %tobool2, label %for.body, label %for.end, !dbg !7098

for.body:                                         ; preds = %for.cond
  %9 = load float*, float** %buf, align 8, !dbg !7099
  %arrayidx = getelementptr inbounds float, float* %9, i64 3, !dbg !7099
  %10 = load float, float* %arrayidx, align 4, !dbg !7099
  %cmp = fcmp olt float %10, 1.000000e+00, !dbg !7102
  br i1 %cmp, label %if.then3, label %if.end, !dbg !7103

if.then3:                                         ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !7104
  br label %return, !dbg !7104

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7106

for.inc:                                          ; preds = %if.end
  %11 = load float*, float** %buf, align 8, !dbg !7107
  %add.ptr = getelementptr inbounds float, float* %11, i64 4, !dbg !7107
  store float* %add.ptr, float** %buf, align 8, !dbg !7107
  br label %for.cond, !dbg !7108, !llvm.loop !7109

for.end:                                          ; preds = %for.cond
  br label %if.end24, !dbg !7111

if.else:                                          ; preds = %entry
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7112
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %12, i32 0, i32 8, !dbg !7114
  %13 = load i32*, i32** %rect, align 8, !dbg !7114
  %tobool4 = icmp ne i32* %13, null, !dbg !7112
  br i1 %tobool4, label %if.then5, label %if.end23, !dbg !7115

if.then5:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8** %buf6, metadata !7116, metadata !DIExpression()), !dbg !7118
  %14 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7119
  %rect7 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %14, i32 0, i32 8, !dbg !7120
  %15 = load i32*, i32** %rect7, align 8, !dbg !7120
  %16 = bitcast i32* %15 to i8*, !dbg !7121
  store i8* %16, i8** %buf6, align 8, !dbg !7118
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7122
  %x8 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %17, i32 0, i32 2, !dbg !7124
  %18 = load i32, i32* %x8, align 8, !dbg !7124
  %19 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7125
  %y9 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %19, i32 0, i32 3, !dbg !7126
  %20 = load i32, i32* %y9, align 4, !dbg !7126
  %mul10 = mul nsw i32 %18, %20, !dbg !7127
  store i32 %mul10, i32* %tot, align 4, !dbg !7128
  br label %for.cond11, !dbg !7129

for.cond11:                                       ; preds = %for.inc20, %if.then5
  %21 = load i32, i32* %tot, align 4, !dbg !7130
  %dec12 = add nsw i32 %21, -1, !dbg !7130
  store i32 %dec12, i32* %tot, align 4, !dbg !7130
  %tobool13 = icmp ne i32 %21, 0, !dbg !7132
  br i1 %tobool13, label %for.body14, label %for.end22, !dbg !7132

for.body14:                                       ; preds = %for.cond11
  %22 = load i8*, i8** %buf6, align 8, !dbg !7133
  %arrayidx15 = getelementptr inbounds i8, i8* %22, i64 3, !dbg !7133
  %23 = load i8, i8* %arrayidx15, align 1, !dbg !7133
  %conv = zext i8 %23 to i32, !dbg !7133
  %cmp16 = icmp ne i32 %conv, 255, !dbg !7136
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !7137

if.then18:                                        ; preds = %for.body14
  store i8 1, i8* %retval, align 1, !dbg !7138
  br label %return, !dbg !7138

if.end19:                                         ; preds = %for.body14
  br label %for.inc20, !dbg !7140

for.inc20:                                        ; preds = %if.end19
  %24 = load i8*, i8** %buf6, align 8, !dbg !7141
  %add.ptr21 = getelementptr inbounds i8, i8* %24, i64 4, !dbg !7141
  store i8* %add.ptr21, i8** %buf6, align 8, !dbg !7141
  br label %for.cond11, !dbg !7142, !llvm.loop !7143

for.end22:                                        ; preds = %for.cond11
  br label %if.end23, !dbg !7145

if.end23:                                         ; preds = %for.end22, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %for.end
  store i8 0, i8* %retval, align 1, !dbg !7146
  br label %return, !dbg !7146

return:                                           ; preds = %if.end24, %if.then18, %if.then3
  %25 = load i8, i8* %retval, align 1, !dbg !7147
  ret i8 %25, !dbg !7147
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_imbuf_write(%struct.ImBuf* %ibuf, i8* %name, %struct.ImageFormatData* %imf) #0 !dbg !7148 {
entry:
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %name.addr = alloca i8*, align 8
  %imf.addr = alloca %struct.ImageFormatData*, align 8
  %imtype = alloca i8, align 1
  %compress = alloca i8, align 1
  %quality = alloca i8, align 1
  %ok = alloca i32, align 4
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !7151, metadata !DIExpression()), !dbg !7152
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7153, metadata !DIExpression()), !dbg !7154
  store %struct.ImageFormatData* %imf, %struct.ImageFormatData** %imf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageFormatData** %imf.addr, metadata !7155, metadata !DIExpression()), !dbg !7156
  call void @llvm.dbg.declare(metadata i8* %imtype, metadata !7157, metadata !DIExpression()), !dbg !7158
  %0 = load %struct.ImageFormatData*, %struct.ImageFormatData** %imf.addr, align 8, !dbg !7159
  %imtype1 = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %0, i32 0, i32 0, !dbg !7160
  %1 = load i8, i8* %imtype1, align 8, !dbg !7160
  store i8 %1, i8* %imtype, align 1, !dbg !7158
  call void @llvm.dbg.declare(metadata i8* %compress, metadata !7161, metadata !DIExpression()), !dbg !7162
  %2 = load %struct.ImageFormatData*, %struct.ImageFormatData** %imf.addr, align 8, !dbg !7163
  %compress2 = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %2, i32 0, i32 5, !dbg !7164
  %3 = load i8, i8* %compress2, align 1, !dbg !7164
  store i8 %3, i8* %compress, align 1, !dbg !7162
  call void @llvm.dbg.declare(metadata i8* %quality, metadata !7165, metadata !DIExpression()), !dbg !7166
  %4 = load %struct.ImageFormatData*, %struct.ImageFormatData** %imf.addr, align 8, !dbg !7167
  %quality3 = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %4, i32 0, i32 4, !dbg !7168
  %5 = load i8, i8* %quality3, align 4, !dbg !7168
  store i8 %5, i8* %quality, align 1, !dbg !7166
  call void @llvm.dbg.declare(metadata i32* %ok, metadata !7169, metadata !DIExpression()), !dbg !7170
  %6 = load i8, i8* %imtype, align 1, !dbg !7171
  %conv = zext i8 %6 to i32, !dbg !7171
  %cmp = icmp eq i32 %conv, 1, !dbg !7173
  br i1 %cmp, label %if.then, label %if.else, !dbg !7174

if.then:                                          ; preds = %entry
  %7 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7175
  %ftype = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %7, i32 0, i32 26, !dbg !7177
  store i32 474, i32* %ftype, align 8, !dbg !7178
  br label %if.end69, !dbg !7179

if.else:                                          ; preds = %entry
  %8 = load i8, i8* %imtype, align 1, !dbg !7180
  %conv5 = zext i8 %8 to i32, !dbg !7180
  %cmp6 = icmp eq i32 %conv5, 17, !dbg !7180
  br i1 %cmp6, label %if.then23, label %lor.lhs.false, !dbg !7180

lor.lhs.false:                                    ; preds = %if.else
  %9 = load i8, i8* %imtype, align 1, !dbg !7180
  %conv8 = zext i8 %9 to i32, !dbg !7180
  %cmp9 = icmp eq i32 %conv8, 24, !dbg !7180
  br i1 %cmp9, label %if.then23, label %lor.lhs.false11, !dbg !7180

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %10 = load i8, i8* %imtype, align 1, !dbg !7180
  %conv12 = zext i8 %10 to i32, !dbg !7180
  %cmp13 = icmp eq i32 %conv12, 31, !dbg !7180
  br i1 %cmp13, label %if.then23, label %lor.lhs.false15, !dbg !7180

lor.lhs.false15:                                  ; preds = %lor.lhs.false11
  %11 = load i8, i8* %imtype, align 1, !dbg !7180
  %conv16 = zext i8 %11 to i32, !dbg !7180
  %cmp17 = icmp eq i32 %conv16, 33, !dbg !7180
  br i1 %cmp17, label %if.then23, label %lor.lhs.false19, !dbg !7180

lor.lhs.false19:                                  ; preds = %lor.lhs.false15
  %12 = load i8, i8* %imtype, align 1, !dbg !7180
  %conv20 = zext i8 %12 to i32, !dbg !7180
  %cmp21 = icmp eq i32 %conv20, 32, !dbg !7180
  br i1 %cmp21, label %if.then23, label %if.else38, !dbg !7182

if.then23:                                        ; preds = %lor.lhs.false19, %lor.lhs.false15, %lor.lhs.false11, %lor.lhs.false, %if.else
  %13 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7183
  %ftype24 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %13, i32 0, i32 26, !dbg !7185
  store i32 1073741824, i32* %ftype24, align 8, !dbg !7186
  %14 = load i8, i8* %imtype, align 1, !dbg !7187
  %conv25 = zext i8 %14 to i32, !dbg !7187
  %cmp26 = icmp eq i32 %conv25, 17, !dbg !7189
  br i1 %cmp26, label %if.then28, label %if.end37, !dbg !7190

if.then28:                                        ; preds = %if.then23
  %15 = load %struct.ImageFormatData*, %struct.ImageFormatData** %imf.addr, align 8, !dbg !7191
  %depth = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %15, i32 0, i32 1, !dbg !7194
  %16 = load i8, i8* %depth, align 1, !dbg !7194
  %conv29 = zext i8 %16 to i32, !dbg !7191
  %cmp30 = icmp eq i32 %conv29, 16, !dbg !7195
  br i1 %cmp30, label %if.then32, label %if.end, !dbg !7196

if.then32:                                        ; preds = %if.then28
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7197
  %ftype33 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %17, i32 0, i32 26, !dbg !7198
  %18 = load i32, i32* %ftype33, align 8, !dbg !7199
  %or = or i32 %18, 1024, !dbg !7199
  store i32 %or, i32* %ftype33, align 8, !dbg !7199
  br label %if.end, !dbg !7197

if.end:                                           ; preds = %if.then32, %if.then28
  %19 = load i8, i8* %compress, align 1, !dbg !7200
  %conv34 = zext i8 %19 to i32, !dbg !7200
  %20 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7201
  %ftype35 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %20, i32 0, i32 26, !dbg !7202
  %21 = load i32, i32* %ftype35, align 8, !dbg !7203
  %or36 = or i32 %21, %conv34, !dbg !7203
  store i32 %or36, i32* %ftype35, align 8, !dbg !7203
  br label %if.end37, !dbg !7204

if.end37:                                         ; preds = %if.end, %if.then23
  br label %if.end68, !dbg !7205

if.else38:                                        ; preds = %lor.lhs.false19
  %22 = load i8, i8* %imtype, align 1, !dbg !7206
  %conv39 = zext i8 %22 to i32, !dbg !7206
  %cmp40 = icmp eq i32 %conv39, 20, !dbg !7208
  br i1 %cmp40, label %if.then42, label %if.else44, !dbg !7209

if.then42:                                        ; preds = %if.else38
  %23 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7210
  %ftype43 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %23, i32 0, i32 26, !dbg !7212
  store i32 67108864, i32* %ftype43, align 8, !dbg !7213
  br label %if.end67, !dbg !7214

if.else44:                                        ; preds = %if.else38
  %24 = load i8, i8* %imtype, align 1, !dbg !7215
  %conv45 = zext i8 %24 to i32, !dbg !7215
  %cmp46 = icmp eq i32 %conv45, 0, !dbg !7217
  br i1 %cmp46, label %if.then48, label %if.else50, !dbg !7218

if.then48:                                        ; preds = %if.else44
  %25 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7219
  %ftype49 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %25, i32 0, i32 26, !dbg !7221
  store i32 268435456, i32* %ftype49, align 8, !dbg !7222
  br label %if.end66, !dbg !7223

if.else50:                                        ; preds = %if.else44
  %26 = load i8, i8* %imtype, align 1, !dbg !7224
  %conv51 = zext i8 %26 to i32, !dbg !7224
  %cmp52 = icmp eq i32 %conv51, 14, !dbg !7226
  br i1 %cmp52, label %if.then54, label %if.else56, !dbg !7227

if.then54:                                        ; preds = %if.else50
  %27 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7228
  %ftype55 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %27, i32 0, i32 26, !dbg !7230
  store i32 268435457, i32* %ftype55, align 8, !dbg !7231
  br label %if.end65, !dbg !7232

if.else56:                                        ; preds = %if.else50
  %28 = load i8, i8* %quality, align 1, !dbg !7233
  %conv57 = zext i8 %28 to i32, !dbg !7233
  %cmp58 = icmp slt i32 %conv57, 10, !dbg !7236
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !7237

if.then60:                                        ; preds = %if.else56
  store i8 90, i8* %quality, align 1, !dbg !7238
  br label %if.end61, !dbg !7239

if.end61:                                         ; preds = %if.then60, %if.else56
  %29 = load i8, i8* %quality, align 1, !dbg !7240
  %conv62 = zext i8 %29 to i32, !dbg !7240
  %or63 = or i32 134217728, %conv62, !dbg !7241
  %30 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7242
  %ftype64 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %30, i32 0, i32 26, !dbg !7243
  store i32 %or63, i32* %ftype64, align 8, !dbg !7244
  br label %if.end65

if.end65:                                         ; preds = %if.end61, %if.then54
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then48
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then42
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.end37
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then
  %31 = load i8*, i8** %name.addr, align 8, !dbg !7245
  call void @BLI_make_existing_file(i8* %31), !dbg !7246
  %32 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7247
  %33 = load i8*, i8** %name.addr, align 8, !dbg !7248
  %call = call signext i16 @IMB_saveiff(%struct.ImBuf* %32, i8* %33, i32 73), !dbg !7249
  %conv70 = sext i16 %call to i32, !dbg !7249
  store i32 %conv70, i32* %ok, align 4, !dbg !7250
  %34 = load i32, i32* %ok, align 4, !dbg !7251
  %cmp71 = icmp eq i32 %34, 0, !dbg !7253
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !7254

if.then73:                                        ; preds = %if.end69
  %35 = load i8*, i8** %name.addr, align 8, !dbg !7255
  call void @perror(i8* %35), !dbg !7257
  br label %if.end74, !dbg !7258

if.end74:                                         ; preds = %if.then73, %if.end69
  %36 = load i32, i32* %ok, align 4, !dbg !7259
  ret i32 %36, !dbg !7260
}

declare dso_local void @BLI_make_existing_file(i8*) #1

declare dso_local void @perror(i8*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_imbuf_write_as(%struct.ImBuf* %ibuf, i8* %name, %struct.ImageFormatData* %imf, i8 zeroext %save_copy) #0 !dbg !7261 {
entry:
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %name.addr = alloca i8*, align 8
  %imf.addr = alloca %struct.ImageFormatData*, align 8
  %save_copy.addr = alloca i8, align 1
  %ibuf_back = alloca %struct.ImBuf, align 8
  %ok = alloca i32, align 4
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !7265, metadata !DIExpression()), !dbg !7266
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7267, metadata !DIExpression()), !dbg !7268
  store %struct.ImageFormatData* %imf, %struct.ImageFormatData** %imf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageFormatData** %imf.addr, metadata !7269, metadata !DIExpression()), !dbg !7270
  store i8 %save_copy, i8* %save_copy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %save_copy.addr, metadata !7271, metadata !DIExpression()), !dbg !7272
  call void @llvm.dbg.declare(metadata %struct.ImBuf* %ibuf_back, metadata !7273, metadata !DIExpression()), !dbg !7274
  %0 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7275
  %1 = bitcast %struct.ImBuf* %ibuf_back to i8*, !dbg !7276
  %2 = bitcast %struct.ImBuf* %0 to i8*, !dbg !7276
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 2480, i1 false), !dbg !7276
  call void @llvm.dbg.declare(metadata i32* %ok, metadata !7277, metadata !DIExpression()), !dbg !7278
  %3 = load %struct.ImageFormatData*, %struct.ImageFormatData** %imf.addr, align 8, !dbg !7279
  %planes = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %3, i32 0, i32 2, !dbg !7280
  %4 = load i8, i8* %planes, align 2, !dbg !7280
  %5 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7281
  %planes1 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %5, i32 0, i32 4, !dbg !7282
  store i8 %4, i8* %planes1, align 8, !dbg !7283
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7284
  %7 = load i8*, i8** %name.addr, align 8, !dbg !7285
  %8 = load %struct.ImageFormatData*, %struct.ImageFormatData** %imf.addr, align 8, !dbg !7286
  %call = call i32 @BKE_imbuf_write(%struct.ImBuf* %6, i8* %7, %struct.ImageFormatData* %8), !dbg !7287
  store i32 %call, i32* %ok, align 4, !dbg !7288
  %9 = load i8, i8* %save_copy.addr, align 1, !dbg !7289
  %tobool = icmp ne i8 %9, 0, !dbg !7289
  br i1 %tobool, label %if.then, label %if.end, !dbg !7291

if.then:                                          ; preds = %entry
  %planes2 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %ibuf_back, i32 0, i32 4, !dbg !7292
  %10 = load i8, i8* %planes2, align 8, !dbg !7292
  %11 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7294
  %planes3 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %11, i32 0, i32 4, !dbg !7295
  store i8 %10, i8* %planes3, align 8, !dbg !7296
  %ftype = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %ibuf_back, i32 0, i32 26, !dbg !7297
  %12 = load i32, i32* %ftype, align 8, !dbg !7297
  %13 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7298
  %ftype4 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %13, i32 0, i32 26, !dbg !7299
  store i32 %12, i32* %ftype4, align 8, !dbg !7300
  br label %if.end, !dbg !7301

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %ok, align 4, !dbg !7302
  ret i32 %14, !dbg !7303
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_imbuf_write_stamp(%struct.Scene* %scene, %struct.Object* %camera, %struct.ImBuf* %ibuf, i8* %name, %struct.ImageFormatData* %imf) #0 !dbg !7304 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %camera.addr = alloca %struct.Object*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %name.addr = alloca i8*, align 8
  %imf.addr = alloca %struct.ImageFormatData*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7307, metadata !DIExpression()), !dbg !7308
  store %struct.Object* %camera, %struct.Object** %camera.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %camera.addr, metadata !7309, metadata !DIExpression()), !dbg !7310
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !7311, metadata !DIExpression()), !dbg !7312
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7313, metadata !DIExpression()), !dbg !7314
  store %struct.ImageFormatData* %imf, %struct.ImageFormatData** %imf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageFormatData** %imf.addr, metadata !7315, metadata !DIExpression()), !dbg !7316
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7317
  %tobool = icmp ne %struct.Scene* %0, null, !dbg !7317
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7319

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7320
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %1, i32 0, i32 22, !dbg !7321
  %stamp = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 85, !dbg !7322
  %2 = load i32, i32* %stamp, align 8, !dbg !7322
  %and = and i32 %2, 4031, !dbg !7323
  %tobool1 = icmp ne i32 %and, 0, !dbg !7323
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7324

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7325
  %4 = load %struct.Object*, %struct.Object** %camera.addr, align 8, !dbg !7326
  %5 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7327
  call void @BKE_imbuf_stamp_info(%struct.Scene* %3, %struct.Object* %4, %struct.ImBuf* %5), !dbg !7328
  br label %if.end, !dbg !7328

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7329
  %7 = load i8*, i8** %name.addr, align 8, !dbg !7330
  %8 = load %struct.ImageFormatData*, %struct.ImageFormatData** %imf.addr, align 8, !dbg !7331
  %call = call i32 @BKE_imbuf_write(%struct.ImBuf* %6, i8* %7, %struct.ImageFormatData* %8), !dbg !7332
  ret i32 %call, !dbg !7333
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_makepicstring(i8* %string, i8* %base, i8* %relbase, i32 %frame, %struct.ImageFormatData* %im_format, i8 zeroext %use_ext, i8 zeroext %use_frames) #0 !dbg !7334 {
entry:
  %string.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %relbase.addr = alloca i8*, align 8
  %frame.addr = alloca i32, align 4
  %im_format.addr = alloca %struct.ImageFormatData*, align 8
  %use_ext.addr = alloca i8, align 1
  %use_frames.addr = alloca i8, align 1
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !7337, metadata !DIExpression()), !dbg !7338
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !7339, metadata !DIExpression()), !dbg !7340
  store i8* %relbase, i8** %relbase.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %relbase.addr, metadata !7341, metadata !DIExpression()), !dbg !7342
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !7343, metadata !DIExpression()), !dbg !7344
  store %struct.ImageFormatData* %im_format, %struct.ImageFormatData** %im_format.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageFormatData** %im_format.addr, metadata !7345, metadata !DIExpression()), !dbg !7346
  store i8 %use_ext, i8* %use_ext.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_ext.addr, metadata !7347, metadata !DIExpression()), !dbg !7348
  store i8 %use_frames, i8* %use_frames.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_frames.addr, metadata !7349, metadata !DIExpression()), !dbg !7350
  %0 = load i8*, i8** %string.addr, align 8, !dbg !7351
  %1 = load i8*, i8** %base.addr, align 8, !dbg !7352
  %2 = load i8*, i8** %relbase.addr, align 8, !dbg !7353
  %3 = load i32, i32* %frame.addr, align 4, !dbg !7354
  %4 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !7355
  %imtype = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %4, i32 0, i32 0, !dbg !7356
  %5 = load i8, i8* %imtype, align 8, !dbg !7356
  %6 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !7357
  %7 = load i8, i8* %use_ext.addr, align 1, !dbg !7358
  %conv = zext i8 %7 to i16, !dbg !7358
  %8 = load i8, i8* %use_frames.addr, align 1, !dbg !7359
  %conv1 = zext i8 %8 to i16, !dbg !7359
  call void @do_makepicstring(i8* %0, i8* %1, i8* %2, i32 %3, i8 zeroext %5, %struct.ImageFormatData* %6, i16 signext %conv, i16 signext %conv1), !dbg !7360
  ret void, !dbg !7361
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_makepicstring(i8* %string, i8* %base, i8* %relbase, i32 %frame, i8 zeroext %imtype, %struct.ImageFormatData* %im_format, i16 signext %use_ext, i16 signext %use_frames) #0 !dbg !7362 {
entry:
  %string.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %relbase.addr = alloca i8*, align 8
  %frame.addr = alloca i32, align 4
  %imtype.addr = alloca i8, align 1
  %im_format.addr = alloca %struct.ImageFormatData*, align 8
  %use_ext.addr = alloca i16, align 2
  %use_frames.addr = alloca i16, align 2
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !7365, metadata !DIExpression()), !dbg !7366
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !7367, metadata !DIExpression()), !dbg !7368
  store i8* %relbase, i8** %relbase.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %relbase.addr, metadata !7369, metadata !DIExpression()), !dbg !7370
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !7371, metadata !DIExpression()), !dbg !7372
  store i8 %imtype, i8* %imtype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %imtype.addr, metadata !7373, metadata !DIExpression()), !dbg !7374
  store %struct.ImageFormatData* %im_format, %struct.ImageFormatData** %im_format.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageFormatData** %im_format.addr, metadata !7375, metadata !DIExpression()), !dbg !7376
  store i16 %use_ext, i16* %use_ext.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %use_ext.addr, metadata !7377, metadata !DIExpression()), !dbg !7378
  store i16 %use_frames, i16* %use_frames.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %use_frames.addr, metadata !7379, metadata !DIExpression()), !dbg !7380
  %0 = load i8*, i8** %string.addr, align 8, !dbg !7381
  %cmp = icmp eq i8* %0, null, !dbg !7383
  br i1 %cmp, label %if.then, label %if.end, !dbg !7384

if.then:                                          ; preds = %entry
  br label %if.end8, !dbg !7385

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %string.addr, align 8, !dbg !7386
  %2 = load i8*, i8** %base.addr, align 8, !dbg !7387
  %call = call i8* @BLI_strncpy(i8* %1, i8* %2, i64 1014), !dbg !7388
  %3 = load i8*, i8** %string.addr, align 8, !dbg !7389
  %4 = load i8*, i8** %relbase.addr, align 8, !dbg !7390
  %call1 = call zeroext i8 @BLI_path_abs(i8* %3, i8* %4), !dbg !7391
  %5 = load i16, i16* %use_frames.addr, align 2, !dbg !7392
  %tobool = icmp ne i16 %5, 0, !dbg !7392
  br i1 %tobool, label %if.then2, label %if.end4, !dbg !7394

if.then2:                                         ; preds = %if.end
  %6 = load i8*, i8** %string.addr, align 8, !dbg !7395
  %7 = load i32, i32* %frame.addr, align 4, !dbg !7396
  %call3 = call zeroext i8 @BLI_path_frame(i8* %6, i32 %7, i32 4), !dbg !7397
  br label %if.end4, !dbg !7397

if.end4:                                          ; preds = %if.then2, %if.end
  %8 = load i16, i16* %use_ext.addr, align 2, !dbg !7398
  %tobool5 = icmp ne i16 %8, 0, !dbg !7398
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !7400

if.then6:                                         ; preds = %if.end4
  %9 = load i8*, i8** %string.addr, align 8, !dbg !7401
  %10 = load i8, i8* %imtype.addr, align 1, !dbg !7402
  %11 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !7403
  %call7 = call zeroext i8 @do_add_image_extension(i8* %9, i8 zeroext %10, %struct.ImageFormatData* %11), !dbg !7404
  br label %if.end8, !dbg !7404

if.end8:                                          ; preds = %if.then, %if.then6, %if.end4
  ret void, !dbg !7405
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_makepicstring_from_type(i8* %string, i8* %base, i8* %relbase, i32 %frame, i8 zeroext %imtype, i8 zeroext %use_ext, i8 zeroext %use_frames) #0 !dbg !7406 {
entry:
  %string.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %relbase.addr = alloca i8*, align 8
  %frame.addr = alloca i32, align 4
  %imtype.addr = alloca i8, align 1
  %use_ext.addr = alloca i8, align 1
  %use_frames.addr = alloca i8, align 1
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !7409, metadata !DIExpression()), !dbg !7410
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !7411, metadata !DIExpression()), !dbg !7412
  store i8* %relbase, i8** %relbase.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %relbase.addr, metadata !7413, metadata !DIExpression()), !dbg !7414
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !7415, metadata !DIExpression()), !dbg !7416
  store i8 %imtype, i8* %imtype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %imtype.addr, metadata !7417, metadata !DIExpression()), !dbg !7418
  store i8 %use_ext, i8* %use_ext.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_ext.addr, metadata !7419, metadata !DIExpression()), !dbg !7420
  store i8 %use_frames, i8* %use_frames.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_frames.addr, metadata !7421, metadata !DIExpression()), !dbg !7422
  %0 = load i8*, i8** %string.addr, align 8, !dbg !7423
  %1 = load i8*, i8** %base.addr, align 8, !dbg !7424
  %2 = load i8*, i8** %relbase.addr, align 8, !dbg !7425
  %3 = load i32, i32* %frame.addr, align 4, !dbg !7426
  %4 = load i8, i8* %imtype.addr, align 1, !dbg !7427
  %5 = load i8, i8* %use_ext.addr, align 1, !dbg !7428
  %conv = zext i8 %5 to i16, !dbg !7428
  %6 = load i8, i8* %use_frames.addr, align 1, !dbg !7429
  %conv1 = zext i8 %6 to i16, !dbg !7429
  call void @do_makepicstring(i8* %0, i8* %1, i8* %2, i32 %3, i8 zeroext %4, %struct.ImageFormatData* null, i16 signext %conv, i16 signext %conv1), !dbg !7430
  ret void, !dbg !7431
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.anim* @openanim(i8* %name, i32 %flags, i32 %streamindex, i8* %colorspace) #0 !dbg !7432 {
entry:
  %retval = alloca %struct.anim*, align 8
  %name.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %streamindex.addr = alloca i32, align 4
  %colorspace.addr = alloca i8*, align 8
  %anim = alloca %struct.anim*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7435, metadata !DIExpression()), !dbg !7436
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7437, metadata !DIExpression()), !dbg !7438
  store i32 %streamindex, i32* %streamindex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %streamindex.addr, metadata !7439, metadata !DIExpression()), !dbg !7440
  store i8* %colorspace, i8** %colorspace.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %colorspace.addr, metadata !7441, metadata !DIExpression()), !dbg !7442
  call void @llvm.dbg.declare(metadata %struct.anim** %anim, metadata !7443, metadata !DIExpression()), !dbg !7444
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !7445, metadata !DIExpression()), !dbg !7446
  %0 = load i8*, i8** %name.addr, align 8, !dbg !7447
  %1 = load i32, i32* %flags.addr, align 4, !dbg !7448
  %2 = load i32, i32* %streamindex.addr, align 4, !dbg !7449
  %3 = load i8*, i8** %colorspace.addr, align 8, !dbg !7450
  %call = call %struct.anim* @IMB_open_anim(i8* %0, i32 %1, i32 %2, i8* %3), !dbg !7451
  store %struct.anim* %call, %struct.anim** %anim, align 8, !dbg !7452
  %4 = load %struct.anim*, %struct.anim** %anim, align 8, !dbg !7453
  %cmp = icmp eq %struct.anim* %4, null, !dbg !7455
  br i1 %cmp, label %if.then, label %if.end, !dbg !7456

if.then:                                          ; preds = %entry
  store %struct.anim* null, %struct.anim** %retval, align 8, !dbg !7457
  br label %return, !dbg !7457

if.end:                                           ; preds = %entry
  %5 = load %struct.anim*, %struct.anim** %anim, align 8, !dbg !7458
  %call1 = call %struct.ImBuf* @IMB_anim_absolute(%struct.anim* %5, i32 0, i32 0, i32 0), !dbg !7459
  store %struct.ImBuf* %call1, %struct.ImBuf** %ibuf, align 8, !dbg !7460
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7461
  %cmp2 = icmp eq %struct.ImBuf* %6, null, !dbg !7463
  br i1 %cmp2, label %if.then3, label %if.end9, !dbg !7464

if.then3:                                         ; preds = %if.end
  %7 = load i8*, i8** %name.addr, align 8, !dbg !7465
  %call4 = call i32 @BLI_exists(i8* %7), !dbg !7468
  %tobool = icmp ne i32 %call4, 0, !dbg !7468
  br i1 %tobool, label %if.then5, label %if.else, !dbg !7469

if.then5:                                         ; preds = %if.then3
  %8 = load i8*, i8** %name.addr, align 8, !dbg !7470
  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31, i64 0, i64 0), i8* %8), !dbg !7471
  br label %if.end8, !dbg !7471

if.else:                                          ; preds = %if.then3
  %9 = load i8*, i8** %name.addr, align 8, !dbg !7472
  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.32, i64 0, i64 0), i8* %9), !dbg !7473
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then5
  %10 = load %struct.anim*, %struct.anim** %anim, align 8, !dbg !7474
  call void @IMB_free_anim(%struct.anim* %10), !dbg !7475
  store %struct.anim* null, %struct.anim** %retval, align 8, !dbg !7476
  br label %return, !dbg !7476

if.end9:                                          ; preds = %if.end
  %11 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7477
  call void @IMB_freeImBuf(%struct.ImBuf* %11), !dbg !7478
  %12 = load %struct.anim*, %struct.anim** %anim, align 8, !dbg !7479
  store %struct.anim* %12, %struct.anim** %retval, align 8, !dbg !7480
  br label %return, !dbg !7480

return:                                           ; preds = %if.end9, %if.end8, %if.then
  %13 = load %struct.anim*, %struct.anim** %retval, align 8, !dbg !7481
  ret %struct.anim* %13, !dbg !7481
}

declare dso_local %struct.anim* @IMB_open_anim(i8*, i32, i32, i8*) #1

declare dso_local %struct.ImBuf* @IMB_anim_absolute(%struct.anim*, i32, i32, i32) #1

declare dso_local i32 @BLI_exists(i8*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Image* @BKE_image_verify_viewer(i32 %type, i8* %name) #0 !dbg !7482 {
entry:
  %type.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %ima = alloca %struct.Image*, align 8
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7485, metadata !DIExpression()), !dbg !7486
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7487, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !7489, metadata !DIExpression()), !dbg !7490
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !7491
  %image = getelementptr inbounds %struct.Main, %struct.Main* %0, i32 0, i32 19, !dbg !7493
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %image, i32 0, i32 0, !dbg !7494
  %1 = load i8*, i8** %first, align 8, !dbg !7494
  %2 = bitcast i8* %1 to %struct.Image*, !dbg !7495
  store %struct.Image* %2, %struct.Image** %ima, align 8, !dbg !7496
  br label %for.cond, !dbg !7497

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7498
  %tobool = icmp ne %struct.Image* %3, null, !dbg !7500
  br i1 %tobool, label %for.body, label %for.end, !dbg !7500

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7501
  %source = getelementptr inbounds %struct.Image, %struct.Image* %4, i32 0, i32 11, !dbg !7503
  %5 = load i16, i16* %source, align 8, !dbg !7503
  %conv = sext i16 %5 to i32, !dbg !7501
  %cmp = icmp eq i32 %conv, 5, !dbg !7504
  br i1 %cmp, label %if.then, label %if.end7, !dbg !7505

if.then:                                          ; preds = %for.body
  %6 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7506
  %type2 = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 12, !dbg !7508
  %7 = load i16, i16* %type2, align 2, !dbg !7508
  %conv3 = sext i16 %7 to i32, !dbg !7506
  %8 = load i32, i32* %type.addr, align 4, !dbg !7509
  %cmp4 = icmp eq i32 %conv3, %8, !dbg !7510
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !7511

if.then6:                                         ; preds = %if.then
  br label %for.end, !dbg !7512

if.end:                                           ; preds = %if.then
  br label %if.end7, !dbg !7509

if.end7:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !7513

for.inc:                                          ; preds = %if.end7
  %9 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7514
  %id = getelementptr inbounds %struct.Image, %struct.Image* %9, i32 0, i32 0, !dbg !7515
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 0, !dbg !7516
  %10 = load i8*, i8** %next, align 8, !dbg !7516
  %11 = bitcast i8* %10 to %struct.Image*, !dbg !7514
  store %struct.Image* %11, %struct.Image** %ima, align 8, !dbg !7517
  br label %for.cond, !dbg !7518, !llvm.loop !7519

for.end:                                          ; preds = %if.then6, %for.cond
  %12 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7521
  %cmp8 = icmp eq %struct.Image* %12, null, !dbg !7523
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !7524

if.then10:                                        ; preds = %for.end
  %13 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !7525
  %14 = load i8*, i8** %name.addr, align 8, !dbg !7526
  %15 = load i32, i32* %type.addr, align 4, !dbg !7527
  %conv11 = trunc i32 %15 to i16, !dbg !7527
  %call = call %struct.Image* @image_alloc(%struct.Main* %13, i8* %14, i16 signext 5, i16 signext %conv11), !dbg !7528
  store %struct.Image* %call, %struct.Image** %ima, align 8, !dbg !7529
  br label %if.end12, !dbg !7530

if.end12:                                         ; preds = %if.then10, %for.end
  %16 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7531
  %id13 = getelementptr inbounds %struct.Image, %struct.Image* %16, i32 0, i32 0, !dbg !7533
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id13, i32 0, i32 6, !dbg !7534
  %17 = load i32, i32* %us, align 4, !dbg !7534
  %cmp14 = icmp eq i32 %17, 0, !dbg !7535
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !7536

if.then16:                                        ; preds = %if.end12
  %18 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7537
  %id17 = getelementptr inbounds %struct.Image, %struct.Image* %18, i32 0, i32 0, !dbg !7538
  call void @id_us_plus(%struct.ID* %id17), !dbg !7539
  br label %if.end18, !dbg !7539

if.end18:                                         ; preds = %if.then16, %if.end12
  %19 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7540
  ret %struct.Image* %19, !dbg !7541
}

declare dso_local void @id_us_plus(%struct.ID*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_assign_ibuf(%struct.Image* %ima, %struct.ImBuf* %ibuf) #0 !dbg !7542 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !7545, metadata !DIExpression()), !dbg !7546
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !7547, metadata !DIExpression()), !dbg !7548
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !7549
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7550
  call void @image_assign_ibuf(%struct.Image* %0, %struct.ImBuf* %1, i32 2146430959, i32 0), !dbg !7551
  ret void, !dbg !7552
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_walk_all_users(%struct.Main* %mainp, i8* %customdata, void (%struct.Image*, %struct.ImageUser*, i8*)* %callback) #0 !dbg !7553 {
entry:
  %mainp.addr = alloca %struct.Main*, align 8
  %customdata.addr = alloca i8*, align 8
  %callback.addr = alloca void (%struct.Image*, %struct.ImageUser*, i8*)*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %tex = alloca %struct.Tex*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %v3d = alloca %struct.View3D*, align 8
  %bgpic = alloca %struct.BGpic*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  %node = alloca %struct.bNode*, align 8
  %ima68 = alloca %struct.Image*, align 8
  %iuser70 = alloca %struct.ImageUser*, align 8
  store %struct.Main* %mainp, %struct.Main** %mainp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %mainp.addr, metadata !7561, metadata !DIExpression()), !dbg !7562
  store i8* %customdata, i8** %customdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %customdata.addr, metadata !7563, metadata !DIExpression()), !dbg !7564
  store void (%struct.Image*, %struct.ImageUser*, i8*)* %callback, void (%struct.Image*, %struct.ImageUser*, i8*)** %callback.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.Image*, %struct.ImageUser*, i8*)** %callback.addr, metadata !7565, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !7567, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !7680, metadata !DIExpression()), !dbg !7683
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex, metadata !7684, metadata !DIExpression()), !dbg !7685
  %0 = load %struct.Main*, %struct.Main** %mainp.addr, align 8, !dbg !7686
  %tex1 = getelementptr inbounds %struct.Main, %struct.Main* %0, i32 0, i32 18, !dbg !7688
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %tex1, i32 0, i32 0, !dbg !7689
  %1 = load i8*, i8** %first, align 8, !dbg !7689
  %2 = bitcast i8* %1 to %struct.Tex*, !dbg !7686
  store %struct.Tex* %2, %struct.Tex** %tex, align 8, !dbg !7690
  br label %for.cond, !dbg !7691

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7692
  %tobool = icmp ne %struct.Tex* %3, null, !dbg !7694
  br i1 %tobool, label %for.body, label %for.end, !dbg !7694

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7695
  %type = getelementptr inbounds %struct.Tex, %struct.Tex* %4, i32 0, i32 32, !dbg !7698
  %5 = load i16, i16* %type, align 8, !dbg !7698
  %conv = sext i16 %5 to i32, !dbg !7695
  %cmp = icmp eq i32 %conv, 8, !dbg !7699
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7700

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7701
  %ima = getelementptr inbounds %struct.Tex, %struct.Tex* %6, i32 0, i32 54, !dbg !7702
  %7 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !7702
  %tobool3 = icmp ne %struct.Image* %7, null, !dbg !7701
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7703

if.then:                                          ; preds = %land.lhs.true
  %8 = load void (%struct.Image*, %struct.ImageUser*, i8*)*, void (%struct.Image*, %struct.ImageUser*, i8*)** %callback.addr, align 8, !dbg !7704
  %9 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7706
  %ima4 = getelementptr inbounds %struct.Tex, %struct.Tex* %9, i32 0, i32 54, !dbg !7707
  %10 = load %struct.Image*, %struct.Image** %ima4, align 8, !dbg !7707
  %11 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7708
  %iuser = getelementptr inbounds %struct.Tex, %struct.Tex* %11, i32 0, i32 51, !dbg !7709
  %12 = load i8*, i8** %customdata.addr, align 8, !dbg !7710
  call void %8(%struct.Image* %10, %struct.ImageUser* %iuser, i8* %12), !dbg !7704
  br label %if.end, !dbg !7711

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !7712

for.inc:                                          ; preds = %if.end
  %13 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7713
  %id = getelementptr inbounds %struct.Tex, %struct.Tex* %13, i32 0, i32 0, !dbg !7714
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 0, !dbg !7715
  %14 = load i8*, i8** %next, align 8, !dbg !7715
  %15 = bitcast i8* %14 to %struct.Tex*, !dbg !7713
  store %struct.Tex* %15, %struct.Tex** %tex, align 8, !dbg !7716
  br label %for.cond, !dbg !7717, !llvm.loop !7718

for.end:                                          ; preds = %for.cond
  %16 = load %struct.Main*, %struct.Main** %mainp.addr, align 8, !dbg !7720
  %wm5 = getelementptr inbounds %struct.Main, %struct.Main* %16, i32 0, i32 40, !dbg !7722
  %first6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %wm5, i32 0, i32 0, !dbg !7723
  %17 = load i8*, i8** %first6, align 8, !dbg !7723
  %18 = bitcast i8* %17 to %struct.wmWindowManager*, !dbg !7720
  store %struct.wmWindowManager* %18, %struct.wmWindowManager** %wm, align 8, !dbg !7724
  br label %for.cond7, !dbg !7725

for.cond7:                                        ; preds = %for.inc85, %for.end
  %19 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !7726
  %tobool8 = icmp ne %struct.wmWindowManager* %19, null, !dbg !7728
  br i1 %tobool8, label %for.body9, label %for.end88, !dbg !7728

for.body9:                                        ; preds = %for.cond7
  %20 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !7729
  %windows = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %20, i32 0, i32 3, !dbg !7732
  %first10 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %windows, i32 0, i32 0, !dbg !7733
  %21 = load i8*, i8** %first10, align 8, !dbg !7733
  %22 = bitcast i8* %21 to %struct.wmWindow*, !dbg !7729
  store %struct.wmWindow* %22, %struct.wmWindow** %win, align 8, !dbg !7734
  br label %for.cond11, !dbg !7735

for.cond11:                                       ; preds = %for.inc82, %for.body9
  %23 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7736
  %tobool12 = icmp ne %struct.wmWindow* %23, null, !dbg !7738
  br i1 %tobool12, label %for.body13, label %for.end84, !dbg !7738

for.body13:                                       ; preds = %for.cond11
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !7739, metadata !DIExpression()), !dbg !7789
  %24 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7790
  %screen = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %24, i32 0, i32 3, !dbg !7792
  %25 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !7792
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %25, i32 0, i32 3, !dbg !7793
  %first14 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !7794
  %26 = load i8*, i8** %first14, align 8, !dbg !7794
  %27 = bitcast i8* %26 to %struct.ScrArea*, !dbg !7790
  store %struct.ScrArea* %27, %struct.ScrArea** %sa, align 8, !dbg !7795
  br label %for.cond15, !dbg !7796

for.cond15:                                       ; preds = %for.inc79, %for.body13
  %28 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7797
  %tobool16 = icmp ne %struct.ScrArea* %28, null, !dbg !7799
  br i1 %tobool16, label %for.body17, label %for.end81, !dbg !7799

for.body17:                                       ; preds = %for.cond15
  %29 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7800
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %29, i32 0, i32 8, !dbg !7803
  %30 = load i8, i8* %spacetype, align 8, !dbg !7803
  %conv18 = zext i8 %30 to i32, !dbg !7800
  %cmp19 = icmp eq i32 %conv18, 1, !dbg !7804
  br i1 %cmp19, label %if.then21, label %if.else, !dbg !7805

if.then21:                                        ; preds = %for.body17
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d, metadata !7806, metadata !DIExpression()), !dbg !7890
  %31 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7891
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %31, i32 0, i32 19, !dbg !7892
  %first22 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !7893
  %32 = load i8*, i8** %first22, align 8, !dbg !7893
  %33 = bitcast i8* %32 to %struct.View3D*, !dbg !7891
  store %struct.View3D* %33, %struct.View3D** %v3d, align 8, !dbg !7890
  call void @llvm.dbg.declare(metadata %struct.BGpic** %bgpic, metadata !7894, metadata !DIExpression()), !dbg !7897
  %34 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !7898
  %bgpicbase = getelementptr inbounds %struct.View3D, %struct.View3D* %34, i32 0, i32 18, !dbg !7900
  %first23 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %bgpicbase, i32 0, i32 0, !dbg !7901
  %35 = load i8*, i8** %first23, align 8, !dbg !7901
  %36 = bitcast i8* %35 to %struct.BGpic*, !dbg !7898
  store %struct.BGpic* %36, %struct.BGpic** %bgpic, align 8, !dbg !7902
  br label %for.cond24, !dbg !7903

for.cond24:                                       ; preds = %for.inc29, %if.then21
  %37 = load %struct.BGpic*, %struct.BGpic** %bgpic, align 8, !dbg !7904
  %tobool25 = icmp ne %struct.BGpic* %37, null, !dbg !7906
  br i1 %tobool25, label %for.body26, label %for.end31, !dbg !7906

for.body26:                                       ; preds = %for.cond24
  %38 = load void (%struct.Image*, %struct.ImageUser*, i8*)*, void (%struct.Image*, %struct.ImageUser*, i8*)** %callback.addr, align 8, !dbg !7907
  %39 = load %struct.BGpic*, %struct.BGpic** %bgpic, align 8, !dbg !7909
  %ima27 = getelementptr inbounds %struct.BGpic, %struct.BGpic* %39, i32 0, i32 2, !dbg !7910
  %40 = load %struct.Image*, %struct.Image** %ima27, align 8, !dbg !7910
  %41 = load %struct.BGpic*, %struct.BGpic** %bgpic, align 8, !dbg !7911
  %iuser28 = getelementptr inbounds %struct.BGpic, %struct.BGpic* %41, i32 0, i32 3, !dbg !7912
  %42 = load i8*, i8** %customdata.addr, align 8, !dbg !7913
  call void %38(%struct.Image* %40, %struct.ImageUser* %iuser28, i8* %42), !dbg !7907
  br label %for.inc29, !dbg !7914

for.inc29:                                        ; preds = %for.body26
  %43 = load %struct.BGpic*, %struct.BGpic** %bgpic, align 8, !dbg !7915
  %next30 = getelementptr inbounds %struct.BGpic, %struct.BGpic* %43, i32 0, i32 0, !dbg !7916
  %44 = load %struct.BGpic*, %struct.BGpic** %next30, align 8, !dbg !7916
  store %struct.BGpic* %44, %struct.BGpic** %bgpic, align 8, !dbg !7917
  br label %for.cond24, !dbg !7918, !llvm.loop !7919

for.end31:                                        ; preds = %for.cond24
  br label %if.end78, !dbg !7921

if.else:                                          ; preds = %for.body17
  %45 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7922
  %spacetype32 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %45, i32 0, i32 8, !dbg !7924
  %46 = load i8, i8* %spacetype32, align 8, !dbg !7924
  %conv33 = zext i8 %46 to i32, !dbg !7922
  %cmp34 = icmp eq i32 %conv33, 6, !dbg !7925
  br i1 %cmp34, label %if.then36, label %if.else40, !dbg !7926

if.then36:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !7927, metadata !DIExpression()), !dbg !8008
  %47 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8009
  %spacedata37 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %47, i32 0, i32 19, !dbg !8010
  %first38 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata37, i32 0, i32 0, !dbg !8011
  %48 = load i8*, i8** %first38, align 8, !dbg !8011
  %49 = bitcast i8* %48 to %struct.SpaceImage*, !dbg !8009
  store %struct.SpaceImage* %49, %struct.SpaceImage** %sima, align 8, !dbg !8008
  %50 = load void (%struct.Image*, %struct.ImageUser*, i8*)*, void (%struct.Image*, %struct.ImageUser*, i8*)** %callback.addr, align 8, !dbg !8012
  %51 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !8013
  %image = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %51, i32 0, i32 5, !dbg !8014
  %52 = load %struct.Image*, %struct.Image** %image, align 8, !dbg !8014
  %53 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !8015
  %iuser39 = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %53, i32 0, i32 6, !dbg !8016
  %54 = load i8*, i8** %customdata.addr, align 8, !dbg !8017
  call void %50(%struct.Image* %52, %struct.ImageUser* %iuser39, i8* %54), !dbg !8012
  br label %if.end77, !dbg !8018

if.else40:                                        ; preds = %if.else
  %55 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8019
  %spacetype41 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %55, i32 0, i32 8, !dbg !8021
  %56 = load i8, i8* %spacetype41, align 8, !dbg !8021
  %conv42 = zext i8 %56 to i32, !dbg !8019
  %cmp43 = icmp eq i32 %conv42, 16, !dbg !8022
  br i1 %cmp43, label %if.then45, label %if.end76, !dbg !8023

if.then45:                                        ; preds = %if.else40
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !8024, metadata !DIExpression()), !dbg !8028
  %57 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8029
  %spacedata46 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %57, i32 0, i32 19, !dbg !8030
  %first47 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata46, i32 0, i32 0, !dbg !8031
  %58 = load i8*, i8** %first47, align 8, !dbg !8031
  %59 = bitcast i8* %58 to %struct.SpaceNode*, !dbg !8029
  store %struct.SpaceNode* %59, %struct.SpaceNode** %snode, align 8, !dbg !8028
  %60 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !8032
  %nodetree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %60, i32 0, i32 18, !dbg !8034
  %61 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !8034
  %tobool48 = icmp ne %struct.bNodeTree* %61, null, !dbg !8032
  br i1 %tobool48, label %land.lhs.true49, label %if.end75, !dbg !8035

land.lhs.true49:                                  ; preds = %if.then45
  %62 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !8036
  %nodetree50 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %62, i32 0, i32 18, !dbg !8037
  %63 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree50, align 8, !dbg !8037
  %type51 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %63, i32 0, i32 9, !dbg !8038
  %64 = load i32, i32* %type51, align 8, !dbg !8038
  %cmp52 = icmp eq i32 %64, 1, !dbg !8039
  br i1 %cmp52, label %if.then54, label %if.end75, !dbg !8040

if.then54:                                        ; preds = %land.lhs.true49
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !8041, metadata !DIExpression()), !dbg !8043
  %65 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !8044
  %nodetree55 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %65, i32 0, i32 18, !dbg !8046
  %66 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree55, align 8, !dbg !8046
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %66, i32 0, i32 7, !dbg !8047
  %first56 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !8048
  %67 = load i8*, i8** %first56, align 8, !dbg !8048
  %68 = bitcast i8* %67 to %struct.bNode*, !dbg !8044
  store %struct.bNode* %68, %struct.bNode** %node, align 8, !dbg !8049
  br label %for.cond57, !dbg !8050

for.cond57:                                       ; preds = %for.inc72, %if.then54
  %69 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8051
  %tobool58 = icmp ne %struct.bNode* %69, null, !dbg !8053
  br i1 %tobool58, label %for.body59, label %for.end74, !dbg !8053

for.body59:                                       ; preds = %for.cond57
  %70 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8054
  %id60 = getelementptr inbounds %struct.bNode, %struct.bNode* %70, i32 0, i32 20, !dbg !8057
  %71 = load %struct.ID*, %struct.ID** %id60, align 8, !dbg !8057
  %tobool61 = icmp ne %struct.ID* %71, null, !dbg !8054
  br i1 %tobool61, label %land.lhs.true62, label %if.end71, !dbg !8058

land.lhs.true62:                                  ; preds = %for.body59
  %72 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8059
  %type63 = getelementptr inbounds %struct.bNode, %struct.bNode* %72, i32 0, i32 8, !dbg !8060
  %73 = load i16, i16* %type63, align 4, !dbg !8060
  %conv64 = sext i16 %73 to i32, !dbg !8059
  %cmp65 = icmp eq i32 %conv64, 220, !dbg !8061
  br i1 %cmp65, label %if.then67, label %if.end71, !dbg !8062

if.then67:                                        ; preds = %land.lhs.true62
  call void @llvm.dbg.declare(metadata %struct.Image** %ima68, metadata !8063, metadata !DIExpression()), !dbg !8065
  %74 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8066
  %id69 = getelementptr inbounds %struct.bNode, %struct.bNode* %74, i32 0, i32 20, !dbg !8067
  %75 = load %struct.ID*, %struct.ID** %id69, align 8, !dbg !8067
  %76 = bitcast %struct.ID* %75 to %struct.Image*, !dbg !8068
  store %struct.Image* %76, %struct.Image** %ima68, align 8, !dbg !8065
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser70, metadata !8069, metadata !DIExpression()), !dbg !8070
  %77 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8071
  %storage = getelementptr inbounds %struct.bNode, %struct.bNode* %77, i32 0, i32 21, !dbg !8072
  %78 = load i8*, i8** %storage, align 8, !dbg !8072
  %79 = bitcast i8* %78 to %struct.ImageUser*, !dbg !8071
  store %struct.ImageUser* %79, %struct.ImageUser** %iuser70, align 8, !dbg !8070
  %80 = load void (%struct.Image*, %struct.ImageUser*, i8*)*, void (%struct.Image*, %struct.ImageUser*, i8*)** %callback.addr, align 8, !dbg !8073
  %81 = load %struct.Image*, %struct.Image** %ima68, align 8, !dbg !8074
  %82 = load %struct.ImageUser*, %struct.ImageUser** %iuser70, align 8, !dbg !8075
  %83 = load i8*, i8** %customdata.addr, align 8, !dbg !8076
  call void %80(%struct.Image* %81, %struct.ImageUser* %82, i8* %83), !dbg !8073
  br label %if.end71, !dbg !8077

if.end71:                                         ; preds = %if.then67, %land.lhs.true62, %for.body59
  br label %for.inc72, !dbg !8078

for.inc72:                                        ; preds = %if.end71
  %84 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8079
  %next73 = getelementptr inbounds %struct.bNode, %struct.bNode* %84, i32 0, i32 0, !dbg !8080
  %85 = load %struct.bNode*, %struct.bNode** %next73, align 8, !dbg !8080
  store %struct.bNode* %85, %struct.bNode** %node, align 8, !dbg !8081
  br label %for.cond57, !dbg !8082, !llvm.loop !8083

for.end74:                                        ; preds = %for.cond57
  br label %if.end75, !dbg !8085

if.end75:                                         ; preds = %for.end74, %land.lhs.true49, %if.then45
  br label %if.end76, !dbg !8086

if.end76:                                         ; preds = %if.end75, %if.else40
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then36
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %for.end31
  br label %for.inc79, !dbg !8087

for.inc79:                                        ; preds = %if.end78
  %86 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8088
  %next80 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %86, i32 0, i32 0, !dbg !8089
  %87 = load %struct.ScrArea*, %struct.ScrArea** %next80, align 8, !dbg !8089
  store %struct.ScrArea* %87, %struct.ScrArea** %sa, align 8, !dbg !8090
  br label %for.cond15, !dbg !8091, !llvm.loop !8092

for.end81:                                        ; preds = %for.cond15
  br label %for.inc82, !dbg !8094

for.inc82:                                        ; preds = %for.end81
  %88 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !8095
  %next83 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %88, i32 0, i32 0, !dbg !8096
  %89 = load %struct.wmWindow*, %struct.wmWindow** %next83, align 8, !dbg !8096
  store %struct.wmWindow* %89, %struct.wmWindow** %win, align 8, !dbg !8097
  br label %for.cond11, !dbg !8098, !llvm.loop !8099

for.end84:                                        ; preds = %for.cond11
  br label %for.inc85, !dbg !8101

for.inc85:                                        ; preds = %for.end84
  %90 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !8102
  %id86 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %90, i32 0, i32 0, !dbg !8103
  %next87 = getelementptr inbounds %struct.ID, %struct.ID* %id86, i32 0, i32 0, !dbg !8104
  %91 = load i8*, i8** %next87, align 8, !dbg !8104
  %92 = bitcast i8* %91 to %struct.wmWindowManager*, !dbg !8102
  store %struct.wmWindowManager* %92, %struct.wmWindowManager** %wm, align 8, !dbg !8105
  br label %for.cond7, !dbg !8106, !llvm.loop !8107

for.end88:                                        ; preds = %for.cond7
  ret void, !dbg !8109
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_signal(%struct.Image* %ima, %struct.ImageUser* %iuser, i32 %signal) #0 !dbg !8110 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %signal.addr = alloca i32, align 4
  %ibuf = alloca %struct.ImBuf*, align 8
  %pf = alloca %struct.PackedFile*, align 8
  %scene = alloca %struct.Scene*, align 8
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !8113, metadata !DIExpression()), !dbg !8114
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !8115, metadata !DIExpression()), !dbg !8116
  store i32 %signal, i32* %signal.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %signal.addr, metadata !8117, metadata !DIExpression()), !dbg !8118
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8119
  %cmp = icmp eq %struct.Image* %0, null, !dbg !8121
  br i1 %cmp, label %if.then, label %if.end, !dbg !8122

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !8123

if.end:                                           ; preds = %entry
  call void @BLI_spin_lock(i32* @image_spin), !dbg !8124
  %1 = load i32, i32* %signal.addr, align 4, !dbg !8125
  switch i32 %1, label %sw.epilog [
    i32 1, label %sw.bb
    i32 5, label %sw.bb3
    i32 0, label %sw.bb36
    i32 6, label %sw.bb59
    i32 7, label %sw.bb81
  ], !dbg !8126

sw.bb:                                            ; preds = %if.end
  %2 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8127
  call void @BKE_image_free_buffers(%struct.Image* %2), !dbg !8129
  %3 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8130
  %tobool = icmp ne %struct.ImageUser* %3, null, !dbg !8130
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !8132

if.then1:                                         ; preds = %sw.bb
  %4 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8133
  %ok = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %4, i32 0, i32 7, !dbg !8134
  store i8 1, i8* %ok, align 2, !dbg !8135
  br label %if.end2, !dbg !8133

if.end2:                                          ; preds = %if.then1, %sw.bb
  br label %sw.epilog, !dbg !8136

sw.bb3:                                           ; preds = %if.end
  %5 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8137
  %type = getelementptr inbounds %struct.Image, %struct.Image* %5, i32 0, i32 12, !dbg !8139
  %6 = load i16, i16* %type, align 2, !dbg !8139
  %conv = sext i16 %6 to i32, !dbg !8137
  %cmp4 = icmp eq i32 %conv, 2, !dbg !8140
  br i1 %cmp4, label %if.then6, label %if.end13, !dbg !8141

if.then6:                                         ; preds = %sw.bb3
  %7 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8142
  %source = getelementptr inbounds %struct.Image, %struct.Image* %7, i32 0, i32 11, !dbg !8144
  %8 = load i16, i16* %source, align 8, !dbg !8144
  %conv7 = sext i16 %8 to i32, !dbg !8142
  %cmp8 = icmp ne i32 %conv7, 4, !dbg !8145
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !8146

if.then10:                                        ; preds = %if.then6
  %9 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8147
  %type11 = getelementptr inbounds %struct.Image, %struct.Image* %9, i32 0, i32 12, !dbg !8148
  store i16 0, i16* %type11, align 2, !dbg !8149
  br label %if.end12, !dbg !8147

if.end12:                                         ; preds = %if.then10, %if.then6
  br label %if.end13, !dbg !8150

if.end13:                                         ; preds = %if.end12, %sw.bb3
  %10 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8151
  %source14 = getelementptr inbounds %struct.Image, %struct.Image* %10, i32 0, i32 11, !dbg !8153
  %11 = load i16, i16* %source14, align 8, !dbg !8153
  %conv15 = sext i16 %11 to i32, !dbg !8151
  %cmp16 = icmp eq i32 %conv15, 4, !dbg !8154
  br i1 %cmp16, label %if.then18, label %if.end30, !dbg !8155

if.then18:                                        ; preds = %if.end13
  %12 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8156
  %gen_x = getelementptr inbounds %struct.Image, %struct.Image* %12, i32 0, i32 28, !dbg !8159
  %13 = load i32, i32* %gen_x, align 4, !dbg !8159
  %cmp19 = icmp eq i32 %13, 0, !dbg !8160
  br i1 %cmp19, label %if.then23, label %lor.lhs.false, !dbg !8161

lor.lhs.false:                                    ; preds = %if.then18
  %14 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8162
  %gen_y = getelementptr inbounds %struct.Image, %struct.Image* %14, i32 0, i32 29, !dbg !8163
  %15 = load i32, i32* %gen_y, align 8, !dbg !8163
  %cmp21 = icmp eq i32 %15, 0, !dbg !8164
  br i1 %cmp21, label %if.then23, label %if.end29, !dbg !8165

if.then23:                                        ; preds = %lor.lhs.false, %if.then18
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !8166, metadata !DIExpression()), !dbg !8168
  %16 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8169
  %call = call %struct.ImBuf* @image_get_cached_ibuf_for_index_frame(%struct.Image* %16, i32 2146430959, i32 0), !dbg !8170
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !8168
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8171
  %tobool24 = icmp ne %struct.ImBuf* %17, null, !dbg !8171
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !8173

if.then25:                                        ; preds = %if.then23
  %18 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8174
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %18, i32 0, i32 2, !dbg !8176
  %19 = load i32, i32* %x, align 8, !dbg !8176
  %20 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8177
  %gen_x26 = getelementptr inbounds %struct.Image, %struct.Image* %20, i32 0, i32 28, !dbg !8178
  store i32 %19, i32* %gen_x26, align 4, !dbg !8179
  %21 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8180
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %21, i32 0, i32 3, !dbg !8181
  %22 = load i32, i32* %y, align 4, !dbg !8181
  %23 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8182
  %gen_y27 = getelementptr inbounds %struct.Image, %struct.Image* %23, i32 0, i32 29, !dbg !8183
  store i32 %22, i32* %gen_y27, align 8, !dbg !8184
  %24 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8185
  call void @IMB_freeImBuf(%struct.ImBuf* %24), !dbg !8186
  br label %if.end28, !dbg !8187

if.end28:                                         ; preds = %if.then25, %if.then23
  br label %if.end29, !dbg !8188

if.end29:                                         ; preds = %if.end28, %lor.lhs.false
  %25 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8189
  %name = getelementptr inbounds %struct.Image, %struct.Image* %25, i32 0, i32 1, !dbg !8190
  %arrayidx = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !8189
  store i8 0, i8* %arrayidx, align 8, !dbg !8191
  br label %if.end30, !dbg !8192

if.end30:                                         ; preds = %if.end29, %if.end13
  %26 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8193
  call void @BKE_image_free_buffers(%struct.Image* %26), !dbg !8194
  %27 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8195
  %ok31 = getelementptr inbounds %struct.Image, %struct.Image* %27, i32 0, i32 9, !dbg !8196
  store i16 1, i16* %ok31, align 4, !dbg !8197
  %28 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8198
  %tobool32 = icmp ne %struct.ImageUser* %28, null, !dbg !8198
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !8200

if.then33:                                        ; preds = %if.end30
  %29 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8201
  %ok34 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %29, i32 0, i32 7, !dbg !8202
  store i8 1, i8* %ok34, align 2, !dbg !8203
  br label %if.end35, !dbg !8201

if.end35:                                         ; preds = %if.then33, %if.end30
  %30 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !8204
  %31 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8205
  %32 = bitcast %struct.Image* %31 to i8*, !dbg !8205
  call void @BKE_image_walk_all_users(%struct.Main* %30, i8* %32, void (%struct.Image*, %struct.ImageUser*, i8*)* @image_tag_frame_recalc), !dbg !8206
  br label %sw.epilog, !dbg !8207

sw.bb36:                                          ; preds = %if.end
  %33 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8208
  %packedfile = getelementptr inbounds %struct.Image, %struct.Image* %33, i32 0, i32 22, !dbg !8210
  %34 = load %struct.PackedFile*, %struct.PackedFile** %packedfile, align 8, !dbg !8210
  %tobool37 = icmp ne %struct.PackedFile* %34, null, !dbg !8208
  br i1 %tobool37, label %if.then38, label %if.else53, !dbg !8211

if.then38:                                        ; preds = %sw.bb36
  call void @llvm.dbg.declare(metadata %struct.PackedFile** %pf, metadata !8212, metadata !DIExpression()), !dbg !8214
  %35 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8215
  %name39 = getelementptr inbounds %struct.Image, %struct.Image* %35, i32 0, i32 1, !dbg !8216
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %name39, i64 0, i64 0, !dbg !8215
  %36 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8217
  %id = getelementptr inbounds %struct.Image, %struct.Image* %36, i32 0, i32 0, !dbg !8217
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !8217
  %37 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !8217
  %tobool40 = icmp ne %struct.Library* %37, null, !dbg !8217
  br i1 %tobool40, label %cond.true, label %cond.false, !dbg !8217

cond.true:                                        ; preds = %if.then38
  %38 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8217
  %id41 = getelementptr inbounds %struct.Image, %struct.Image* %38, i32 0, i32 0, !dbg !8217
  %lib42 = getelementptr inbounds %struct.ID, %struct.ID* %id41, i32 0, i32 3, !dbg !8217
  %39 = load %struct.Library*, %struct.Library** %lib42, align 8, !dbg !8217
  %filepath = getelementptr inbounds %struct.Library, %struct.Library* %39, i32 0, i32 4, !dbg !8217
  %arraydecay43 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !8217
  br label %cond.end, !dbg !8217

cond.false:                                       ; preds = %if.then38
  %40 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !8217
  %name44 = getelementptr inbounds %struct.Main, %struct.Main* %40, i32 0, i32 2, !dbg !8217
  %arraydecay45 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name44, i64 0, i64 0, !dbg !8217
  br label %cond.end, !dbg !8217

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay43, %cond.true ], [ %arraydecay45, %cond.false ], !dbg !8217
  %call46 = call %struct.PackedFile* @newPackedFile(%struct.ReportList* null, i8* %arraydecay, i8* %cond), !dbg !8218
  store %struct.PackedFile* %call46, %struct.PackedFile** %pf, align 8, !dbg !8219
  %41 = load %struct.PackedFile*, %struct.PackedFile** %pf, align 8, !dbg !8220
  %tobool47 = icmp ne %struct.PackedFile* %41, null, !dbg !8220
  br i1 %tobool47, label %if.then48, label %if.else, !dbg !8222

if.then48:                                        ; preds = %cond.end
  %42 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8223
  %packedfile49 = getelementptr inbounds %struct.Image, %struct.Image* %42, i32 0, i32 22, !dbg !8225
  %43 = load %struct.PackedFile*, %struct.PackedFile** %packedfile49, align 8, !dbg !8225
  call void @freePackedFile(%struct.PackedFile* %43), !dbg !8226
  %44 = load %struct.PackedFile*, %struct.PackedFile** %pf, align 8, !dbg !8227
  %45 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8228
  %packedfile50 = getelementptr inbounds %struct.Image, %struct.Image* %45, i32 0, i32 22, !dbg !8229
  store %struct.PackedFile* %44, %struct.PackedFile** %packedfile50, align 8, !dbg !8230
  %46 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8231
  call void @BKE_image_free_buffers(%struct.Image* %46), !dbg !8232
  br label %if.end52, !dbg !8233

if.else:                                          ; preds = %cond.end
  %call51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.33, i64 0, i64 0)), !dbg !8234
  br label %if.end52

if.end52:                                         ; preds = %if.else, %if.then48
  br label %if.end54, !dbg !8236

if.else53:                                        ; preds = %sw.bb36
  %47 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8237
  call void @BKE_image_free_buffers(%struct.Image* %47), !dbg !8238
  br label %if.end54

if.end54:                                         ; preds = %if.else53, %if.end52
  %48 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8239
  %tobool55 = icmp ne %struct.ImageUser* %48, null, !dbg !8239
  br i1 %tobool55, label %if.then56, label %if.end58, !dbg !8241

if.then56:                                        ; preds = %if.end54
  %49 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8242
  %ok57 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %49, i32 0, i32 7, !dbg !8243
  store i8 1, i8* %ok57, align 2, !dbg !8244
  br label %if.end58, !dbg !8242

if.end58:                                         ; preds = %if.then56, %if.end54
  br label %sw.epilog, !dbg !8245

sw.bb59:                                          ; preds = %if.end
  %50 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8246
  %tobool60 = icmp ne %struct.ImageUser* %50, null, !dbg !8246
  br i1 %tobool60, label %if.then61, label %if.end80, !dbg !8248

if.then61:                                        ; preds = %sw.bb59
  %51 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8249
  %ok62 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %51, i32 0, i32 7, !dbg !8251
  store i8 1, i8* %ok62, align 2, !dbg !8252
  %52 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8253
  %source63 = getelementptr inbounds %struct.Image, %struct.Image* %52, i32 0, i32 11, !dbg !8255
  %53 = load i16, i16* %source63, align 8, !dbg !8255
  %conv64 = sext i16 %53 to i32, !dbg !8253
  %cmp65 = icmp eq i32 %conv64, 1, !dbg !8256
  br i1 %cmp65, label %if.then72, label %lor.lhs.false67, !dbg !8257

lor.lhs.false67:                                  ; preds = %if.then61
  %54 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8258
  %source68 = getelementptr inbounds %struct.Image, %struct.Image* %54, i32 0, i32 11, !dbg !8259
  %55 = load i16, i16* %source68, align 8, !dbg !8259
  %conv69 = sext i16 %55 to i32, !dbg !8258
  %cmp70 = icmp eq i32 %conv69, 2, !dbg !8260
  br i1 %cmp70, label %if.then72, label %if.end79, !dbg !8261

if.then72:                                        ; preds = %lor.lhs.false67, %if.then61
  %56 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8262
  %type73 = getelementptr inbounds %struct.Image, %struct.Image* %56, i32 0, i32 12, !dbg !8265
  %57 = load i16, i16* %type73, align 2, !dbg !8265
  %conv74 = sext i16 %57 to i32, !dbg !8262
  %cmp75 = icmp eq i32 %conv74, 1, !dbg !8266
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !8267

if.then77:                                        ; preds = %if.then72
  %58 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8268
  %multi_index = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %58, i32 0, i32 9, !dbg !8270
  store i16 0, i16* %multi_index, align 4, !dbg !8271
  %59 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8272
  %pass = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %59, i32 0, i32 11, !dbg !8273
  store i16 0, i16* %pass, align 8, !dbg !8274
  %60 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8275
  %layer = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %60, i32 0, i32 10, !dbg !8276
  store i16 0, i16* %layer, align 2, !dbg !8277
  br label %if.end78, !dbg !8278

if.end78:                                         ; preds = %if.then77, %if.then72
  br label %if.end79, !dbg !8279

if.end79:                                         ; preds = %if.end78, %lor.lhs.false67
  br label %if.end80, !dbg !8280

if.end80:                                         ; preds = %if.end79, %sw.bb59
  br label %sw.epilog, !dbg !8281

sw.bb81:                                          ; preds = %if.end
  %61 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8282
  call void @BKE_image_free_buffers(%struct.Image* %61), !dbg !8283
  %62 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8284
  %ok82 = getelementptr inbounds %struct.Image, %struct.Image* %62, i32 0, i32 9, !dbg !8285
  store i16 1, i16* %ok82, align 4, !dbg !8286
  %63 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8287
  %tobool83 = icmp ne %struct.ImageUser* %63, null, !dbg !8287
  br i1 %tobool83, label %if.then84, label %if.end86, !dbg !8289

if.then84:                                        ; preds = %sw.bb81
  %64 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8290
  %ok85 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %64, i32 0, i32 7, !dbg !8291
  store i8 1, i8* %ok85, align 2, !dbg !8292
  br label %if.end86, !dbg !8290

if.end86:                                         ; preds = %if.then84, %sw.bb81
  br label %sw.epilog, !dbg !8293

sw.epilog:                                        ; preds = %if.end, %if.end86, %if.end80, %if.end58, %if.end35, %if.end2
  call void @BLI_spin_unlock(i32* @image_spin), !dbg !8294
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !8295, metadata !DIExpression()), !dbg !8297
  %65 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !8298
  %scene87 = getelementptr inbounds %struct.Main, %struct.Main* %65, i32 0, i32 11, !dbg !8300
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %scene87, i32 0, i32 0, !dbg !8301
  %66 = load i8*, i8** %first, align 8, !dbg !8301
  %67 = bitcast i8* %66 to %struct.Scene*, !dbg !8302
  store %struct.Scene* %67, %struct.Scene** %scene, align 8, !dbg !8303
  br label %for.cond, !dbg !8304

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %68 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8305
  %tobool88 = icmp ne %struct.Scene* %68, null, !dbg !8307
  br i1 %tobool88, label %for.body, label %for.end, !dbg !8307

for.body:                                         ; preds = %for.cond
  %69 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8308
  %nodetree = getelementptr inbounds %struct.Scene, %struct.Scene* %69, i32 0, i32 18, !dbg !8311
  %70 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !8311
  %tobool89 = icmp ne %struct.bNodeTree* %70, null, !dbg !8308
  br i1 %tobool89, label %if.then90, label %if.end94, !dbg !8312

if.then90:                                        ; preds = %for.body
  %71 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8313
  %nodetree91 = getelementptr inbounds %struct.Scene, %struct.Scene* %71, i32 0, i32 18, !dbg !8315
  %72 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree91, align 8, !dbg !8315
  %73 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8316
  %id92 = getelementptr inbounds %struct.Image, %struct.Image* %73, i32 0, i32 0, !dbg !8317
  %call93 = call zeroext i8 @nodeUpdateID(%struct.bNodeTree* %72, %struct.ID* %id92), !dbg !8318
  br label %if.end94, !dbg !8319

if.end94:                                         ; preds = %if.then90, %for.body
  br label %for.inc, !dbg !8320

for.inc:                                          ; preds = %if.end94
  %74 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8321
  %id95 = getelementptr inbounds %struct.Scene, %struct.Scene* %74, i32 0, i32 0, !dbg !8322
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id95, i32 0, i32 0, !dbg !8323
  %75 = load i8*, i8** %next, align 8, !dbg !8323
  %76 = bitcast i8* %75 to %struct.Scene*, !dbg !8321
  store %struct.Scene* %76, %struct.Scene** %scene, align 8, !dbg !8324
  br label %for.cond, !dbg !8325, !llvm.loop !8326

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !8328
}

; Function Attrs: noinline nounwind uwtable
define internal void @image_tag_frame_recalc(%struct.Image* %ima, %struct.ImageUser* %iuser, i8* %customdata) #0 !dbg !8329 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %customdata.addr = alloca i8*, align 8
  %changed_image = alloca %struct.Image*, align 8
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !8330, metadata !DIExpression()), !dbg !8331
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !8332, metadata !DIExpression()), !dbg !8333
  store i8* %customdata, i8** %customdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %customdata.addr, metadata !8334, metadata !DIExpression()), !dbg !8335
  call void @llvm.dbg.declare(metadata %struct.Image** %changed_image, metadata !8336, metadata !DIExpression()), !dbg !8337
  %0 = load i8*, i8** %customdata.addr, align 8, !dbg !8338
  %1 = bitcast i8* %0 to %struct.Image*, !dbg !8338
  store %struct.Image* %1, %struct.Image** %changed_image, align 8, !dbg !8337
  %2 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8339
  %3 = load %struct.Image*, %struct.Image** %changed_image, align 8, !dbg !8341
  %cmp = icmp eq %struct.Image* %2, %3, !dbg !8342
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8343

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8344
  %call = call zeroext i8 @BKE_image_is_animated(%struct.Image* %4), !dbg !8345
  %conv = zext i8 %call to i32, !dbg !8345
  %tobool = icmp ne i32 %conv, 0, !dbg !8345
  br i1 %tobool, label %if.then, label %if.end, !dbg !8346

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8347
  %flag = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %5, i32 0, i32 12, !dbg !8349
  %6 = load i16, i16* %flag, align 2, !dbg !8350
  %conv1 = sext i16 %6 to i32, !dbg !8350
  %or = or i32 %conv1, 8, !dbg !8350
  %conv2 = trunc i32 %or to i16, !dbg !8350
  store i16 %conv2, i16* %flag, align 2, !dbg !8350
  br label %if.end, !dbg !8351

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !8352
}

declare dso_local %struct.PackedFile* @newPackedFile(%struct.ReportList*, i8*, i8*) #1

declare dso_local zeroext i8 @nodeUpdateID(%struct.bNodeTree*, %struct.ID*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.RenderPass* @BKE_image_multilayer_index(%struct.RenderResult* %rr, %struct.ImageUser* %iuser) #0 !dbg !8353 {
entry:
  %retval = alloca %struct.RenderPass*, align 8
  %rr.addr = alloca %struct.RenderResult*, align 8
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %rl = alloca %struct.RenderLayer*, align 8
  %rpass = alloca %struct.RenderPass*, align 8
  %index = alloca i16, align 2
  %rl_index = alloca i16, align 2
  %rp_index = alloca i16, align 2
  store %struct.RenderResult* %rr, %struct.RenderResult** %rr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr.addr, metadata !8371, metadata !DIExpression()), !dbg !8372
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !8373, metadata !DIExpression()), !dbg !8374
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl, metadata !8375, metadata !DIExpression()), !dbg !8377
  call void @llvm.dbg.declare(metadata %struct.RenderPass** %rpass, metadata !8378, metadata !DIExpression()), !dbg !8381
  store %struct.RenderPass* null, %struct.RenderPass** %rpass, align 8, !dbg !8381
  %0 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !8382
  %cmp = icmp eq %struct.RenderResult* %0, null, !dbg !8384
  br i1 %cmp, label %if.then, label %if.end, !dbg !8385

if.then:                                          ; preds = %entry
  store %struct.RenderPass* null, %struct.RenderPass** %retval, align 8, !dbg !8386
  br label %return, !dbg !8386

if.end:                                           ; preds = %entry
  %1 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8387
  %tobool = icmp ne %struct.ImageUser* %1, null, !dbg !8387
  br i1 %tobool, label %if.then1, label %if.end28, !dbg !8389

if.then1:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16* %index, metadata !8390, metadata !DIExpression()), !dbg !8392
  store i16 0, i16* %index, align 2, !dbg !8392
  call void @llvm.dbg.declare(metadata i16* %rl_index, metadata !8393, metadata !DIExpression()), !dbg !8394
  store i16 0, i16* %rl_index, align 2, !dbg !8394
  call void @llvm.dbg.declare(metadata i16* %rp_index, metadata !8395, metadata !DIExpression()), !dbg !8396
  %2 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !8397
  %layers = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %2, i32 0, i32 12, !dbg !8399
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers, i32 0, i32 0, !dbg !8400
  %3 = load i8*, i8** %first, align 8, !dbg !8400
  %4 = bitcast i8* %3 to %struct.RenderLayer*, !dbg !8397
  store %struct.RenderLayer* %4, %struct.RenderLayer** %rl, align 8, !dbg !8401
  br label %for.cond, !dbg !8402

for.cond:                                         ; preds = %for.inc20, %if.then1
  %5 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !8403
  %tobool2 = icmp ne %struct.RenderLayer* %5, null, !dbg !8405
  br i1 %tobool2, label %for.body, label %for.end23, !dbg !8405

for.body:                                         ; preds = %for.cond
  store i16 0, i16* %rp_index, align 2, !dbg !8406
  %6 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !8408
  %passes = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %6, i32 0, i32 18, !dbg !8410
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %passes, i32 0, i32 0, !dbg !8411
  %7 = load i8*, i8** %first3, align 8, !dbg !8411
  %8 = bitcast i8* %7 to %struct.RenderPass*, !dbg !8408
  store %struct.RenderPass* %8, %struct.RenderPass** %rpass, align 8, !dbg !8412
  br label %for.cond4, !dbg !8413

for.cond4:                                        ; preds = %for.inc, %for.body
  %9 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !8414
  %tobool5 = icmp ne %struct.RenderPass* %9, null, !dbg !8416
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !8416

for.body6:                                        ; preds = %for.cond4
  %10 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8417
  %layer = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %10, i32 0, i32 10, !dbg !8419
  %11 = load i16, i16* %layer, align 2, !dbg !8419
  %conv = sext i16 %11 to i32, !dbg !8417
  %12 = load i16, i16* %rl_index, align 2, !dbg !8420
  %conv7 = sext i16 %12 to i32, !dbg !8420
  %cmp8 = icmp eq i32 %conv, %conv7, !dbg !8421
  br i1 %cmp8, label %land.lhs.true, label %if.end15, !dbg !8422

land.lhs.true:                                    ; preds = %for.body6
  %13 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8423
  %pass = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %13, i32 0, i32 11, !dbg !8424
  %14 = load i16, i16* %pass, align 8, !dbg !8424
  %conv10 = sext i16 %14 to i32, !dbg !8423
  %15 = load i16, i16* %rp_index, align 2, !dbg !8425
  %conv11 = sext i16 %15 to i32, !dbg !8425
  %cmp12 = icmp eq i32 %conv10, %conv11, !dbg !8426
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !8427

if.then14:                                        ; preds = %land.lhs.true
  br label %for.end, !dbg !8428

if.end15:                                         ; preds = %land.lhs.true, %for.body6
  br label %for.inc, !dbg !8425

for.inc:                                          ; preds = %if.end15
  %16 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !8429
  %next = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %16, i32 0, i32 0, !dbg !8430
  %17 = load %struct.RenderPass*, %struct.RenderPass** %next, align 8, !dbg !8430
  store %struct.RenderPass* %17, %struct.RenderPass** %rpass, align 8, !dbg !8431
  %18 = load i16, i16* %index, align 2, !dbg !8432
  %inc = add i16 %18, 1, !dbg !8432
  store i16 %inc, i16* %index, align 2, !dbg !8432
  %19 = load i16, i16* %rp_index, align 2, !dbg !8433
  %inc16 = add i16 %19, 1, !dbg !8433
  store i16 %inc16, i16* %rp_index, align 2, !dbg !8433
  br label %for.cond4, !dbg !8434, !llvm.loop !8435

for.end:                                          ; preds = %if.then14, %for.cond4
  %20 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !8437
  %tobool17 = icmp ne %struct.RenderPass* %20, null, !dbg !8437
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !8439

if.then18:                                        ; preds = %for.end
  br label %for.end23, !dbg !8440

if.end19:                                         ; preds = %for.end
  br label %for.inc20, !dbg !8441

for.inc20:                                        ; preds = %if.end19
  %21 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !8442
  %next21 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %21, i32 0, i32 0, !dbg !8443
  %22 = load %struct.RenderLayer*, %struct.RenderLayer** %next21, align 8, !dbg !8443
  store %struct.RenderLayer* %22, %struct.RenderLayer** %rl, align 8, !dbg !8444
  %23 = load i16, i16* %rl_index, align 2, !dbg !8445
  %inc22 = add i16 %23, 1, !dbg !8445
  store i16 %inc22, i16* %rl_index, align 2, !dbg !8445
  br label %for.cond, !dbg !8446, !llvm.loop !8447

for.end23:                                        ; preds = %if.then18, %for.cond
  %24 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !8449
  %tobool24 = icmp ne %struct.RenderPass* %24, null, !dbg !8449
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !8451

if.then25:                                        ; preds = %for.end23
  %25 = load i16, i16* %index, align 2, !dbg !8452
  %26 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8453
  %multi_index = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %26, i32 0, i32 9, !dbg !8454
  store i16 %25, i16* %multi_index, align 4, !dbg !8455
  br label %if.end27, !dbg !8453

if.else:                                          ; preds = %for.end23
  %27 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8456
  %multi_index26 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %27, i32 0, i32 9, !dbg !8457
  store i16 0, i16* %multi_index26, align 4, !dbg !8458
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then25
  br label %if.end28, !dbg !8459

if.end28:                                         ; preds = %if.end27, %if.end
  %28 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !8460
  %cmp29 = icmp eq %struct.RenderPass* %28, null, !dbg !8462
  br i1 %cmp29, label %if.then31, label %if.end39, !dbg !8463

if.then31:                                        ; preds = %if.end28
  %29 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !8464
  %layers32 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %29, i32 0, i32 12, !dbg !8466
  %first33 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers32, i32 0, i32 0, !dbg !8467
  %30 = load i8*, i8** %first33, align 8, !dbg !8467
  %31 = bitcast i8* %30 to %struct.RenderLayer*, !dbg !8464
  store %struct.RenderLayer* %31, %struct.RenderLayer** %rl, align 8, !dbg !8468
  %32 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !8469
  %tobool34 = icmp ne %struct.RenderLayer* %32, null, !dbg !8469
  br i1 %tobool34, label %if.then35, label %if.end38, !dbg !8471

if.then35:                                        ; preds = %if.then31
  %33 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !8472
  %passes36 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %33, i32 0, i32 18, !dbg !8473
  %first37 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %passes36, i32 0, i32 0, !dbg !8474
  %34 = load i8*, i8** %first37, align 8, !dbg !8474
  %35 = bitcast i8* %34 to %struct.RenderPass*, !dbg !8472
  store %struct.RenderPass* %35, %struct.RenderPass** %rpass, align 8, !dbg !8475
  br label %if.end38, !dbg !8476

if.end38:                                         ; preds = %if.then35, %if.then31
  br label %if.end39, !dbg !8477

if.end39:                                         ; preds = %if.end38, %if.end28
  %36 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !8478
  store %struct.RenderPass* %36, %struct.RenderPass** %retval, align 8, !dbg !8479
  br label %return, !dbg !8479

return:                                           ; preds = %if.end39, %if.then
  %37 = load %struct.RenderPass*, %struct.RenderPass** %retval, align 8, !dbg !8480
  ret %struct.RenderPass* %37, !dbg !8480
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.RenderResult* @BKE_image_acquire_renderresult(%struct.Scene* %scene, %struct.Image* %ima) #0 !dbg !8481 {
entry:
  %retval = alloca %struct.RenderResult*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !8484, metadata !DIExpression()), !dbg !8485
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !8486, metadata !DIExpression()), !dbg !8487
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8488
  %rr = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 5, !dbg !8490
  %1 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !8490
  %tobool = icmp ne %struct.RenderResult* %1, null, !dbg !8488
  br i1 %tobool, label %if.then, label %if.else, !dbg !8491

if.then:                                          ; preds = %entry
  %2 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8492
  %rr1 = getelementptr inbounds %struct.Image, %struct.Image* %2, i32 0, i32 5, !dbg !8494
  %3 = load %struct.RenderResult*, %struct.RenderResult** %rr1, align 8, !dbg !8494
  store %struct.RenderResult* %3, %struct.RenderResult** %retval, align 8, !dbg !8495
  br label %return, !dbg !8495

if.else:                                          ; preds = %entry
  %4 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8496
  %type = getelementptr inbounds %struct.Image, %struct.Image* %4, i32 0, i32 12, !dbg !8498
  %5 = load i16, i16* %type, align 2, !dbg !8498
  %conv = sext i16 %5 to i32, !dbg !8496
  %cmp = icmp eq i32 %conv, 4, !dbg !8499
  br i1 %cmp, label %if.then3, label %if.else12, !dbg !8500

if.then3:                                         ; preds = %if.else
  %6 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8501
  %render_slot = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 7, !dbg !8504
  %7 = load i16, i16* %render_slot, align 8, !dbg !8504
  %conv4 = sext i16 %7 to i32, !dbg !8501
  %8 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8505
  %last_render_slot = getelementptr inbounds %struct.Image, %struct.Image* %8, i32 0, i32 8, !dbg !8506
  %9 = load i16, i16* %last_render_slot, align 2, !dbg !8506
  %conv5 = sext i16 %9 to i32, !dbg !8505
  %cmp6 = icmp eq i32 %conv4, %conv5, !dbg !8507
  br i1 %cmp6, label %if.then8, label %if.else10, !dbg !8508

if.then8:                                         ; preds = %if.then3
  %10 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8509
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %10, i32 0, i32 0, !dbg !8510
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !8511
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !8509
  %call = call %struct.Render* @RE_GetRender(i8* %arraydecay), !dbg !8512
  %call9 = call %struct.RenderResult* @RE_AcquireResultRead(%struct.Render* %call), !dbg !8513
  store %struct.RenderResult* %call9, %struct.RenderResult** %retval, align 8, !dbg !8514
  br label %return, !dbg !8514

if.else10:                                        ; preds = %if.then3
  %11 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8515
  %renders = getelementptr inbounds %struct.Image, %struct.Image* %11, i32 0, i32 6, !dbg !8516
  %12 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8517
  %render_slot11 = getelementptr inbounds %struct.Image, %struct.Image* %12, i32 0, i32 7, !dbg !8518
  %13 = load i16, i16* %render_slot11, align 8, !dbg !8518
  %idxprom = sext i16 %13 to i64, !dbg !8515
  %arrayidx = getelementptr inbounds [8 x %struct.RenderResult*], [8 x %struct.RenderResult*]* %renders, i64 0, i64 %idxprom, !dbg !8515
  %14 = load %struct.RenderResult*, %struct.RenderResult** %arrayidx, align 8, !dbg !8515
  store %struct.RenderResult* %14, %struct.RenderResult** %retval, align 8, !dbg !8519
  br label %return, !dbg !8519

if.else12:                                        ; preds = %if.else
  store %struct.RenderResult* null, %struct.RenderResult** %retval, align 8, !dbg !8520
  br label %return, !dbg !8520

return:                                           ; preds = %if.else12, %if.else10, %if.then8, %if.then
  %15 = load %struct.RenderResult*, %struct.RenderResult** %retval, align 8, !dbg !8521
  ret %struct.RenderResult* %15, !dbg !8521
}

declare dso_local %struct.RenderResult* @RE_AcquireResultRead(%struct.Render*) #1

declare dso_local %struct.Render* @RE_GetRender(i8*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_release_renderresult(%struct.Scene* %scene, %struct.Image* %ima) #0 !dbg !8522 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !8525, metadata !DIExpression()), !dbg !8526
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !8527, metadata !DIExpression()), !dbg !8528
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8529
  %rr = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 5, !dbg !8531
  %1 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !8531
  %tobool = icmp ne %struct.RenderResult* %1, null, !dbg !8529
  br i1 %tobool, label %if.then, label %if.else, !dbg !8532

if.then:                                          ; preds = %entry
  br label %if.end9, !dbg !8533

if.else:                                          ; preds = %entry
  %2 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8535
  %type = getelementptr inbounds %struct.Image, %struct.Image* %2, i32 0, i32 12, !dbg !8537
  %3 = load i16, i16* %type, align 2, !dbg !8537
  %conv = sext i16 %3 to i32, !dbg !8535
  %cmp = icmp eq i32 %conv, 4, !dbg !8538
  br i1 %cmp, label %if.then2, label %if.end8, !dbg !8539

if.then2:                                         ; preds = %if.else
  %4 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8540
  %render_slot = getelementptr inbounds %struct.Image, %struct.Image* %4, i32 0, i32 7, !dbg !8543
  %5 = load i16, i16* %render_slot, align 8, !dbg !8543
  %conv3 = sext i16 %5 to i32, !dbg !8540
  %6 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8544
  %last_render_slot = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 8, !dbg !8545
  %7 = load i16, i16* %last_render_slot, align 2, !dbg !8545
  %conv4 = sext i16 %7 to i32, !dbg !8544
  %cmp5 = icmp eq i32 %conv3, %conv4, !dbg !8546
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !8547

if.then7:                                         ; preds = %if.then2
  %8 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8548
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %8, i32 0, i32 0, !dbg !8549
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !8550
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !8548
  %call = call %struct.Render* @RE_GetRender(i8* %arraydecay), !dbg !8551
  call void @RE_ReleaseResult(%struct.Render* %call), !dbg !8552
  br label %if.end, !dbg !8552

if.end:                                           ; preds = %if.then7, %if.then2
  br label %if.end8, !dbg !8553

if.end8:                                          ; preds = %if.end, %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.then
  ret void, !dbg !8554
}

declare dso_local void @RE_ReleaseResult(%struct.Render*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_backup_render(%struct.Scene* %scene, %struct.Image* %ima) #0 !dbg !8555 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %re = alloca %struct.Render*, align 8
  %slot = alloca i32, align 4
  %last = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !8556, metadata !DIExpression()), !dbg !8557
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !8558, metadata !DIExpression()), !dbg !8559
  call void @llvm.dbg.declare(metadata %struct.Render** %re, metadata !8560, metadata !DIExpression()), !dbg !8561
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8562
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 0, !dbg !8563
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !8564
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !8562
  %call = call %struct.Render* @RE_GetRender(i8* %arraydecay), !dbg !8565
  store %struct.Render* %call, %struct.Render** %re, align 8, !dbg !8561
  call void @llvm.dbg.declare(metadata i32* %slot, metadata !8566, metadata !DIExpression()), !dbg !8567
  %1 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8568
  %render_slot = getelementptr inbounds %struct.Image, %struct.Image* %1, i32 0, i32 7, !dbg !8569
  %2 = load i16, i16* %render_slot, align 8, !dbg !8569
  %conv = sext i16 %2 to i32, !dbg !8568
  store i32 %conv, i32* %slot, align 4, !dbg !8567
  call void @llvm.dbg.declare(metadata i32* %last, metadata !8570, metadata !DIExpression()), !dbg !8571
  %3 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8572
  %last_render_slot = getelementptr inbounds %struct.Image, %struct.Image* %3, i32 0, i32 8, !dbg !8573
  %4 = load i16, i16* %last_render_slot, align 2, !dbg !8573
  %conv1 = sext i16 %4 to i32, !dbg !8572
  store i32 %conv1, i32* %last, align 4, !dbg !8571
  %5 = load i32, i32* %slot, align 4, !dbg !8574
  %6 = load i32, i32* %last, align 4, !dbg !8576
  %cmp = icmp ne i32 %5, %6, !dbg !8577
  br i1 %cmp, label %if.then, label %if.end16, !dbg !8578

if.then:                                          ; preds = %entry
  %7 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8579
  %renders = getelementptr inbounds %struct.Image, %struct.Image* %7, i32 0, i32 6, !dbg !8582
  %8 = load i32, i32* %slot, align 4, !dbg !8583
  %idxprom = sext i32 %8 to i64, !dbg !8579
  %arrayidx = getelementptr inbounds [8 x %struct.RenderResult*], [8 x %struct.RenderResult*]* %renders, i64 0, i64 %idxprom, !dbg !8579
  %9 = load %struct.RenderResult*, %struct.RenderResult** %arrayidx, align 8, !dbg !8579
  %tobool = icmp ne %struct.RenderResult* %9, null, !dbg !8579
  br i1 %tobool, label %if.then3, label %if.end, !dbg !8584

if.then3:                                         ; preds = %if.then
  %10 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8585
  %renders4 = getelementptr inbounds %struct.Image, %struct.Image* %10, i32 0, i32 6, !dbg !8587
  %11 = load i32, i32* %slot, align 4, !dbg !8588
  %idxprom5 = sext i32 %11 to i64, !dbg !8585
  %arrayidx6 = getelementptr inbounds [8 x %struct.RenderResult*], [8 x %struct.RenderResult*]* %renders4, i64 0, i64 %idxprom5, !dbg !8585
  %12 = load %struct.RenderResult*, %struct.RenderResult** %arrayidx6, align 8, !dbg !8585
  call void @RE_FreeRenderResult(%struct.RenderResult* %12), !dbg !8589
  %13 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8590
  %renders7 = getelementptr inbounds %struct.Image, %struct.Image* %13, i32 0, i32 6, !dbg !8591
  %14 = load i32, i32* %slot, align 4, !dbg !8592
  %idxprom8 = sext i32 %14 to i64, !dbg !8590
  %arrayidx9 = getelementptr inbounds [8 x %struct.RenderResult*], [8 x %struct.RenderResult*]* %renders7, i64 0, i64 %idxprom8, !dbg !8590
  store %struct.RenderResult* null, %struct.RenderResult** %arrayidx9, align 8, !dbg !8593
  br label %if.end, !dbg !8594

if.end:                                           ; preds = %if.then3, %if.then
  %15 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8595
  %renders10 = getelementptr inbounds %struct.Image, %struct.Image* %15, i32 0, i32 6, !dbg !8596
  %16 = load i32, i32* %last, align 4, !dbg !8597
  %idxprom11 = sext i32 %16 to i64, !dbg !8595
  %arrayidx12 = getelementptr inbounds [8 x %struct.RenderResult*], [8 x %struct.RenderResult*]* %renders10, i64 0, i64 %idxprom11, !dbg !8595
  store %struct.RenderResult* null, %struct.RenderResult** %arrayidx12, align 8, !dbg !8598
  %17 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !8599
  %18 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8600
  %renders13 = getelementptr inbounds %struct.Image, %struct.Image* %18, i32 0, i32 6, !dbg !8601
  %19 = load i32, i32* %last, align 4, !dbg !8602
  %idxprom14 = sext i32 %19 to i64, !dbg !8600
  %arrayidx15 = getelementptr inbounds [8 x %struct.RenderResult*], [8 x %struct.RenderResult*]* %renders13, i64 0, i64 %idxprom14, !dbg !8600
  call void @RE_SwapResult(%struct.Render* %17, %struct.RenderResult** %arrayidx15), !dbg !8603
  br label %if.end16, !dbg !8604

if.end16:                                         ; preds = %if.end, %entry
  %20 = load i32, i32* %slot, align 4, !dbg !8605
  %conv17 = trunc i32 %20 to i16, !dbg !8605
  %21 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8606
  %last_render_slot18 = getelementptr inbounds %struct.Image, %struct.Image* %21, i32 0, i32 8, !dbg !8607
  store i16 %conv17, i16* %last_render_slot18, align 2, !dbg !8608
  ret void, !dbg !8609
}

declare dso_local void @RE_SwapResult(%struct.Render*, %struct.RenderResult**) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @image_acquire_ibuf(%struct.Image* %ima, %struct.ImageUser* %iuser, i8** %lock_r) #0 !dbg !8610 {
entry:
  %retval = alloca %struct.ImBuf*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %lock_r.addr = alloca i8**, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %frame = alloca i32, align 4
  %index = alloca i32, align 4
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !8613, metadata !DIExpression()), !dbg !8614
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !8615, metadata !DIExpression()), !dbg !8616
  store i8** %lock_r, i8*** %lock_r.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %lock_r.addr, metadata !8617, metadata !DIExpression()), !dbg !8618
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !8619, metadata !DIExpression()), !dbg !8620
  store %struct.ImBuf* null, %struct.ImBuf** %ibuf, align 8, !dbg !8620
  call void @llvm.dbg.declare(metadata i32* %frame, metadata !8621, metadata !DIExpression()), !dbg !8622
  store i32 0, i32* %frame, align 4, !dbg !8622
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8623, metadata !DIExpression()), !dbg !8624
  store i32 0, i32* %index, align 4, !dbg !8624
  %0 = load i8**, i8*** %lock_r.addr, align 8, !dbg !8625
  %tobool = icmp ne i8** %0, null, !dbg !8625
  br i1 %tobool, label %if.then, label %if.end, !dbg !8627

if.then:                                          ; preds = %entry
  %1 = load i8**, i8*** %lock_r.addr, align 8, !dbg !8628
  store i8* null, i8** %1, align 8, !dbg !8629
  br label %if.end, !dbg !8630

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8631
  %3 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8633
  %call = call zeroext i8 @image_quick_test(%struct.Image* %2, %struct.ImageUser* %3), !dbg !8634
  %tobool1 = icmp ne i8 %call, 0, !dbg !8634
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !8635

if.then2:                                         ; preds = %if.end
  store %struct.ImBuf* null, %struct.ImBuf** %retval, align 8, !dbg !8636
  br label %return, !dbg !8636

if.end3:                                          ; preds = %if.end
  %4 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8637
  %5 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8638
  %call4 = call %struct.ImBuf* @image_get_cached_ibuf(%struct.Image* %4, %struct.ImageUser* %5, i32* %frame, i32* %index), !dbg !8639
  store %struct.ImBuf* %call4, %struct.ImBuf** %ibuf, align 8, !dbg !8640
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8641
  %cmp = icmp eq %struct.ImBuf* %6, null, !dbg !8643
  br i1 %cmp, label %if.then5, label %if.end125, !dbg !8644

if.then5:                                         ; preds = %if.end3
  %7 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8645
  %source = getelementptr inbounds %struct.Image, %struct.Image* %7, i32 0, i32 11, !dbg !8648
  %8 = load i16, i16* %source, align 8, !dbg !8648
  %conv = sext i16 %8 to i32, !dbg !8645
  %cmp6 = icmp eq i32 %conv, 3, !dbg !8649
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !8650

if.then8:                                         ; preds = %if.then5
  %9 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8651
  %10 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8653
  %11 = load i32, i32* %frame, align 4, !dbg !8654
  %call9 = call %struct.ImBuf* @image_load_movie_file(%struct.Image* %9, %struct.ImageUser* %10, i32 %11), !dbg !8655
  store %struct.ImBuf* %call9, %struct.ImBuf** %ibuf, align 8, !dbg !8656
  br label %if.end112, !dbg !8657

if.else:                                          ; preds = %if.then5
  %12 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8658
  %source10 = getelementptr inbounds %struct.Image, %struct.Image* %12, i32 0, i32 11, !dbg !8660
  %13 = load i16, i16* %source10, align 8, !dbg !8660
  %conv11 = sext i16 %13 to i32, !dbg !8658
  %cmp12 = icmp eq i32 %conv11, 2, !dbg !8661
  br i1 %cmp12, label %if.then14, label %if.else28, !dbg !8662

if.then14:                                        ; preds = %if.else
  %14 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8663
  %type = getelementptr inbounds %struct.Image, %struct.Image* %14, i32 0, i32 12, !dbg !8666
  %15 = load i16, i16* %type, align 2, !dbg !8666
  %conv15 = sext i16 %15 to i32, !dbg !8663
  %cmp16 = icmp eq i32 %conv15, 0, !dbg !8667
  br i1 %cmp16, label %if.then18, label %if.end20, !dbg !8668

if.then18:                                        ; preds = %if.then14
  %16 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8669
  %17 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8671
  %18 = load i32, i32* %frame, align 4, !dbg !8672
  %call19 = call %struct.ImBuf* @image_load_sequence_file(%struct.Image* %16, %struct.ImageUser* %17, i32 %18), !dbg !8673
  store %struct.ImBuf* %call19, %struct.ImBuf** %ibuf, align 8, !dbg !8674
  br label %if.end20, !dbg !8675

if.end20:                                         ; preds = %if.then18, %if.then14
  %19 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8676
  %type21 = getelementptr inbounds %struct.Image, %struct.Image* %19, i32 0, i32 12, !dbg !8678
  %20 = load i16, i16* %type21, align 2, !dbg !8678
  %conv22 = sext i16 %20 to i32, !dbg !8676
  %cmp23 = icmp eq i32 %conv22, 1, !dbg !8679
  br i1 %cmp23, label %if.then25, label %if.end27, !dbg !8680

if.then25:                                        ; preds = %if.end20
  %21 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8681
  %22 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8683
  %23 = load i32, i32* %frame, align 4, !dbg !8684
  %call26 = call %struct.ImBuf* @image_load_sequence_multilayer(%struct.Image* %21, %struct.ImageUser* %22, i32 %23), !dbg !8685
  store %struct.ImBuf* %call26, %struct.ImBuf** %ibuf, align 8, !dbg !8686
  br label %if.end27, !dbg !8687

if.end27:                                         ; preds = %if.then25, %if.end20
  br label %if.end111, !dbg !8688

if.else28:                                        ; preds = %if.else
  %24 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8689
  %source29 = getelementptr inbounds %struct.Image, %struct.Image* %24, i32 0, i32 11, !dbg !8691
  %25 = load i16, i16* %source29, align 8, !dbg !8691
  %conv30 = sext i16 %25 to i32, !dbg !8689
  %cmp31 = icmp eq i32 %conv30, 1, !dbg !8692
  br i1 %cmp31, label %if.then33, label %if.else48, !dbg !8693

if.then33:                                        ; preds = %if.else28
  %26 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8694
  %type34 = getelementptr inbounds %struct.Image, %struct.Image* %26, i32 0, i32 12, !dbg !8697
  %27 = load i16, i16* %type34, align 2, !dbg !8697
  %conv35 = sext i16 %27 to i32, !dbg !8694
  %cmp36 = icmp eq i32 %conv35, 0, !dbg !8698
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !8699

if.then38:                                        ; preds = %if.then33
  %28 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8700
  %29 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8701
  %30 = load i32, i32* %frame, align 4, !dbg !8702
  %call39 = call %struct.ImBuf* @image_load_image_file(%struct.Image* %28, %struct.ImageUser* %29, i32 %30), !dbg !8703
  store %struct.ImBuf* %call39, %struct.ImBuf** %ibuf, align 8, !dbg !8704
  br label %if.end40, !dbg !8705

if.end40:                                         ; preds = %if.then38, %if.then33
  %31 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8706
  %type41 = getelementptr inbounds %struct.Image, %struct.Image* %31, i32 0, i32 12, !dbg !8708
  %32 = load i16, i16* %type41, align 2, !dbg !8708
  %conv42 = sext i16 %32 to i32, !dbg !8706
  %cmp43 = icmp eq i32 %conv42, 1, !dbg !8709
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !8710

if.then45:                                        ; preds = %if.end40
  %33 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8711
  %34 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8712
  %call46 = call %struct.ImBuf* @image_get_ibuf_multilayer(%struct.Image* %33, %struct.ImageUser* %34), !dbg !8713
  store %struct.ImBuf* %call46, %struct.ImBuf** %ibuf, align 8, !dbg !8714
  br label %if.end47, !dbg !8715

if.end47:                                         ; preds = %if.then45, %if.end40
  br label %if.end110, !dbg !8716

if.else48:                                        ; preds = %if.else28
  %35 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8717
  %source49 = getelementptr inbounds %struct.Image, %struct.Image* %35, i32 0, i32 11, !dbg !8719
  %36 = load i16, i16* %source49, align 8, !dbg !8719
  %conv50 = sext i16 %36 to i32, !dbg !8717
  %cmp51 = icmp eq i32 %conv50, 4, !dbg !8720
  br i1 %cmp51, label %if.then53, label %if.else80, !dbg !8721

if.then53:                                        ; preds = %if.else48
  %37 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8722
  %gen_x = getelementptr inbounds %struct.Image, %struct.Image* %37, i32 0, i32 28, !dbg !8725
  %38 = load i32, i32* %gen_x, align 4, !dbg !8725
  %cmp54 = icmp eq i32 %38, 0, !dbg !8726
  br i1 %cmp54, label %if.then56, label %if.end58, !dbg !8727

if.then56:                                        ; preds = %if.then53
  %39 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8728
  %gen_x57 = getelementptr inbounds %struct.Image, %struct.Image* %39, i32 0, i32 28, !dbg !8729
  store i32 1024, i32* %gen_x57, align 4, !dbg !8730
  br label %if.end58, !dbg !8728

if.end58:                                         ; preds = %if.then56, %if.then53
  %40 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8731
  %gen_y = getelementptr inbounds %struct.Image, %struct.Image* %40, i32 0, i32 29, !dbg !8733
  %41 = load i32, i32* %gen_y, align 8, !dbg !8733
  %cmp59 = icmp eq i32 %41, 0, !dbg !8734
  br i1 %cmp59, label %if.then61, label %if.end63, !dbg !8735

if.then61:                                        ; preds = %if.end58
  %42 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8736
  %gen_y62 = getelementptr inbounds %struct.Image, %struct.Image* %42, i32 0, i32 29, !dbg !8737
  store i32 1024, i32* %gen_y62, align 8, !dbg !8738
  br label %if.end63, !dbg !8736

if.end63:                                         ; preds = %if.then61, %if.end58
  %43 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8739
  %gen_depth = getelementptr inbounds %struct.Image, %struct.Image* %43, i32 0, i32 32, !dbg !8741
  %44 = load i16, i16* %gen_depth, align 2, !dbg !8741
  %conv64 = sext i16 %44 to i32, !dbg !8739
  %cmp65 = icmp eq i32 %conv64, 0, !dbg !8742
  br i1 %cmp65, label %if.then67, label %if.end69, !dbg !8743

if.then67:                                        ; preds = %if.end63
  %45 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8744
  %gen_depth68 = getelementptr inbounds %struct.Image, %struct.Image* %45, i32 0, i32 32, !dbg !8745
  store i16 24, i16* %gen_depth68, align 2, !dbg !8746
  br label %if.end69, !dbg !8744

if.end69:                                         ; preds = %if.then67, %if.end63
  %46 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8747
  %gen_x70 = getelementptr inbounds %struct.Image, %struct.Image* %46, i32 0, i32 28, !dbg !8748
  %47 = load i32, i32* %gen_x70, align 4, !dbg !8748
  %48 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8749
  %gen_y71 = getelementptr inbounds %struct.Image, %struct.Image* %48, i32 0, i32 29, !dbg !8750
  %49 = load i32, i32* %gen_y71, align 8, !dbg !8750
  %50 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8751
  %name = getelementptr inbounds %struct.Image, %struct.Image* %50, i32 0, i32 1, !dbg !8752
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !8751
  %51 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8753
  %gen_depth72 = getelementptr inbounds %struct.Image, %struct.Image* %51, i32 0, i32 32, !dbg !8754
  %52 = load i16, i16* %gen_depth72, align 2, !dbg !8754
  %conv73 = sext i16 %52 to i32, !dbg !8753
  %53 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8755
  %gen_flag = getelementptr inbounds %struct.Image, %struct.Image* %53, i32 0, i32 31, !dbg !8756
  %54 = load i8, i8* %gen_flag, align 1, !dbg !8756
  %conv74 = zext i8 %54 to i32, !dbg !8755
  %and = and i32 %conv74, 1, !dbg !8757
  %cmp75 = icmp ne i32 %and, 0, !dbg !8758
  %conv76 = zext i1 %cmp75 to i32, !dbg !8758
  %55 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8759
  %gen_type = getelementptr inbounds %struct.Image, %struct.Image* %55, i32 0, i32 30, !dbg !8760
  %56 = load i8, i8* %gen_type, align 4, !dbg !8760
  %conv77 = zext i8 %56 to i16, !dbg !8759
  %57 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8761
  %gen_color = getelementptr inbounds %struct.Image, %struct.Image* %57, i32 0, i32 33, !dbg !8762
  %arraydecay78 = getelementptr inbounds [4 x float], [4 x float]* %gen_color, i64 0, i64 0, !dbg !8761
  %58 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8763
  %colorspace_settings = getelementptr inbounds %struct.Image, %struct.Image* %58, i32 0, i32 36, !dbg !8764
  %call79 = call %struct.ImBuf* @add_ibuf_size(i32 %47, i32 %49, i8* %arraydecay, i32 %conv73, i32 %conv76, i16 signext %conv77, float* %arraydecay78, %struct.ColorManagedColorspaceSettings* %colorspace_settings), !dbg !8765
  store %struct.ImBuf* %call79, %struct.ImBuf** %ibuf, align 8, !dbg !8766
  %59 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8767
  %60 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8768
  call void @image_assign_ibuf(%struct.Image* %59, %struct.ImBuf* %60, i32 2146430959, i32 0), !dbg !8769
  %61 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8770
  %ok = getelementptr inbounds %struct.Image, %struct.Image* %61, i32 0, i32 9, !dbg !8771
  store i16 2, i16* %ok, align 4, !dbg !8772
  br label %if.end109, !dbg !8773

if.else80:                                        ; preds = %if.else48
  %62 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8774
  %source81 = getelementptr inbounds %struct.Image, %struct.Image* %62, i32 0, i32 11, !dbg !8776
  %63 = load i16, i16* %source81, align 8, !dbg !8776
  %conv82 = sext i16 %63 to i32, !dbg !8774
  %cmp83 = icmp eq i32 %conv82, 5, !dbg !8777
  br i1 %cmp83, label %if.then85, label %if.end108, !dbg !8778

if.then85:                                        ; preds = %if.else80
  %64 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8779
  %type86 = getelementptr inbounds %struct.Image, %struct.Image* %64, i32 0, i32 12, !dbg !8782
  %65 = load i16, i16* %type86, align 2, !dbg !8782
  %conv87 = sext i16 %65 to i32, !dbg !8779
  %cmp88 = icmp eq i32 %conv87, 4, !dbg !8783
  br i1 %cmp88, label %if.then90, label %if.else92, !dbg !8784

if.then90:                                        ; preds = %if.then85
  %66 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8785
  %67 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8787
  %68 = load i8**, i8*** %lock_r.addr, align 8, !dbg !8788
  %call91 = call %struct.ImBuf* @image_get_render_result(%struct.Image* %66, %struct.ImageUser* %67, i8** %68), !dbg !8789
  store %struct.ImBuf* %call91, %struct.ImBuf** %ibuf, align 8, !dbg !8790
  br label %if.end107, !dbg !8791

if.else92:                                        ; preds = %if.then85
  %69 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8792
  %type93 = getelementptr inbounds %struct.Image, %struct.Image* %69, i32 0, i32 12, !dbg !8794
  %70 = load i16, i16* %type93, align 2, !dbg !8794
  %conv94 = sext i16 %70 to i32, !dbg !8792
  %cmp95 = icmp eq i32 %conv94, 5, !dbg !8795
  br i1 %cmp95, label %if.then97, label %if.end106, !dbg !8796

if.then97:                                        ; preds = %if.else92
  %71 = load i8**, i8*** %lock_r.addr, align 8, !dbg !8797
  %tobool98 = icmp ne i8** %71, null, !dbg !8797
  br i1 %tobool98, label %if.then99, label %if.end105, !dbg !8800

if.then99:                                        ; preds = %if.then97
  call void @BLI_lock_thread(i32 2), !dbg !8801
  %72 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8803
  %73 = bitcast %struct.Image* %72 to i8*, !dbg !8803
  %74 = load i8**, i8*** %lock_r.addr, align 8, !dbg !8804
  store i8* %73, i8** %74, align 8, !dbg !8805
  store i32 0, i32* %frame, align 4, !dbg !8806
  %75 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8807
  %76 = load i32, i32* %frame, align 4, !dbg !8808
  %call100 = call %struct.ImBuf* @image_get_cached_ibuf_for_index_frame(%struct.Image* %75, i32 0, i32 %76), !dbg !8809
  store %struct.ImBuf* %call100, %struct.ImBuf** %ibuf, align 8, !dbg !8810
  %77 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8811
  %tobool101 = icmp ne %struct.ImBuf* %77, null, !dbg !8811
  br i1 %tobool101, label %if.end104, label %if.then102, !dbg !8813

if.then102:                                       ; preds = %if.then99
  %call103 = call %struct.ImBuf* @IMB_allocImBuf(i32 256, i32 256, i8 zeroext 32, i32 1), !dbg !8814
  store %struct.ImBuf* %call103, %struct.ImBuf** %ibuf, align 8, !dbg !8816
  %78 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8817
  %79 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8818
  %80 = load i32, i32* %frame, align 4, !dbg !8819
  call void @image_assign_ibuf(%struct.Image* %78, %struct.ImBuf* %79, i32 0, i32 %80), !dbg !8820
  br label %if.end104, !dbg !8821

if.end104:                                        ; preds = %if.then102, %if.then99
  br label %if.end105, !dbg !8822

if.end105:                                        ; preds = %if.end104, %if.then97
  br label %if.end106, !dbg !8823

if.end106:                                        ; preds = %if.end105, %if.else92
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.then90
  br label %if.end108, !dbg !8824

if.end108:                                        ; preds = %if.end107, %if.else80
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.end69
  br label %if.end110

if.end110:                                        ; preds = %if.end109, %if.end47
  br label %if.end111

if.end111:                                        ; preds = %if.end110, %if.end27
  br label %if.end112

if.end112:                                        ; preds = %if.end111, %if.then8
  %81 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8825
  %cmp113 = icmp ne %struct.ImBuf* %81, null, !dbg !8827
  br i1 %cmp113, label %land.lhs.true, label %if.end124, !dbg !8828

land.lhs.true:                                    ; preds = %if.end112
  %82 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8829
  %source115 = getelementptr inbounds %struct.Image, %struct.Image* %82, i32 0, i32 11, !dbg !8829
  %83 = load i16, i16* %source115, align 8, !dbg !8829
  %conv116 = sext i16 %83 to i32, !dbg !8829
  %cmp117 = icmp eq i32 %conv116, 3, !dbg !8829
  br i1 %cmp117, label %if.end124, label %lor.lhs.false, !dbg !8829

lor.lhs.false:                                    ; preds = %land.lhs.true
  %84 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8829
  %source119 = getelementptr inbounds %struct.Image, %struct.Image* %84, i32 0, i32 11, !dbg !8829
  %85 = load i16, i16* %source119, align 8, !dbg !8829
  %conv120 = sext i16 %85 to i32, !dbg !8829
  %cmp121 = icmp eq i32 %conv120, 2, !dbg !8829
  br i1 %cmp121, label %if.end124, label %if.then123, !dbg !8830

if.then123:                                       ; preds = %lor.lhs.false
  %86 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8831
  %userflags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %86, i32 0, i32 23, !dbg !8833
  %87 = load i32, i32* %userflags, align 4, !dbg !8834
  %or = or i32 %87, 32, !dbg !8834
  store i32 %or, i32* %userflags, align 4, !dbg !8834
  br label %if.end124, !dbg !8835

if.end124:                                        ; preds = %if.then123, %lor.lhs.false, %land.lhs.true, %if.end112
  br label %if.end125, !dbg !8836

if.end125:                                        ; preds = %if.end124, %if.end3
  %88 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8837
  call void @BKE_image_tag_time(%struct.Image* %88), !dbg !8838
  %89 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8839
  store %struct.ImBuf* %89, %struct.ImBuf** %retval, align 8, !dbg !8840
  br label %return, !dbg !8840

return:                                           ; preds = %if.end125, %if.then2
  %90 = load %struct.ImBuf*, %struct.ImBuf** %retval, align 8, !dbg !8841
  ret %struct.ImBuf* %90, !dbg !8841
}

declare dso_local void @BLI_unlock_thread(i32) #1

declare dso_local void @RE_ReleaseResultImage(%struct.Render*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_image_has_ibuf(%struct.Image* %ima, %struct.ImageUser* %iuser) #0 !dbg !8842 {
entry:
  %retval = alloca i8, align 1
  %ima.addr = alloca %struct.Image*, align 8
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !8845, metadata !DIExpression()), !dbg !8846
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !8847, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !8849, metadata !DIExpression()), !dbg !8850
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8851
  %1 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8853
  %call = call zeroext i8 @image_quick_test(%struct.Image* %0, %struct.ImageUser* %1), !dbg !8854
  %tobool = icmp ne i8 %call, 0, !dbg !8854
  br i1 %tobool, label %if.end, label %if.then, !dbg !8855

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !8856
  br label %return, !dbg !8856

if.end:                                           ; preds = %entry
  call void @BLI_spin_lock(i32* @image_spin), !dbg !8857
  %2 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8858
  %3 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8859
  %call1 = call %struct.ImBuf* @image_get_cached_ibuf(%struct.Image* %2, %struct.ImageUser* %3, i32* null, i32* null), !dbg !8860
  store %struct.ImBuf* %call1, %struct.ImBuf** %ibuf, align 8, !dbg !8861
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8862
  %tobool2 = icmp ne %struct.ImBuf* %4, null, !dbg !8862
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !8864

if.then3:                                         ; preds = %if.end
  %5 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8865
  %6 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8866
  %call4 = call %struct.ImBuf* @image_acquire_ibuf(%struct.Image* %5, %struct.ImageUser* %6, i8** null), !dbg !8867
  store %struct.ImBuf* %call4, %struct.ImBuf** %ibuf, align 8, !dbg !8868
  br label %if.end5, !dbg !8869

if.end5:                                          ; preds = %if.then3, %if.end
  call void @BLI_spin_unlock(i32* @image_spin), !dbg !8870
  %7 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8871
  call void @IMB_freeImBuf(%struct.ImBuf* %7), !dbg !8872
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8873
  %cmp = icmp ne %struct.ImBuf* %8, null, !dbg !8874
  %conv = zext i1 %cmp to i32, !dbg !8874
  %conv6 = trunc i32 %conv to i8, !dbg !8873
  store i8 %conv6, i8* %retval, align 1, !dbg !8875
  br label %return, !dbg !8875

return:                                           ; preds = %if.end5, %if.then
  %9 = load i8, i8* %retval, align 1, !dbg !8876
  ret i8 %9, !dbg !8876
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @image_quick_test(%struct.Image* %ima, %struct.ImageUser* %iuser) #0 !dbg !8877 {
entry:
  %retval = alloca i8, align 1
  %ima.addr = alloca %struct.Image*, align 8
  %iuser.addr = alloca %struct.ImageUser*, align 8
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !8878, metadata !DIExpression()), !dbg !8879
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !8880, metadata !DIExpression()), !dbg !8881
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8882
  %cmp = icmp eq %struct.Image* %0, null, !dbg !8884
  br i1 %cmp, label %if.then, label %if.end, !dbg !8885

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !8886
  br label %return, !dbg !8886

if.end:                                           ; preds = %entry
  %1 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8887
  %tobool = icmp ne %struct.ImageUser* %1, null, !dbg !8887
  br i1 %tobool, label %if.then1, label %if.else, !dbg !8889

if.then1:                                         ; preds = %if.end
  %2 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8890
  %ok = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %2, i32 0, i32 7, !dbg !8893
  %3 = load i8, i8* %ok, align 2, !dbg !8893
  %conv = zext i8 %3 to i32, !dbg !8890
  %cmp2 = icmp eq i32 %conv, 0, !dbg !8894
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !8895

if.then4:                                         ; preds = %if.then1
  store i8 0, i8* %retval, align 1, !dbg !8896
  br label %return, !dbg !8896

if.end5:                                          ; preds = %if.then1
  br label %if.end12, !dbg !8897

if.else:                                          ; preds = %if.end
  %4 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8898
  %ok6 = getelementptr inbounds %struct.Image, %struct.Image* %4, i32 0, i32 9, !dbg !8900
  %5 = load i16, i16* %ok6, align 4, !dbg !8900
  %conv7 = sext i16 %5 to i32, !dbg !8898
  %cmp8 = icmp eq i32 %conv7, 0, !dbg !8901
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !8902

if.then10:                                        ; preds = %if.else
  store i8 0, i8* %retval, align 1, !dbg !8903
  br label %return, !dbg !8903

if.end11:                                         ; preds = %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  store i8 1, i8* %retval, align 1, !dbg !8904
  br label %return, !dbg !8904

return:                                           ; preds = %if.end12, %if.then10, %if.then4, %if.then
  %6 = load i8, i8* %retval, align 1, !dbg !8905
  ret i8 %6, !dbg !8905
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @image_get_cached_ibuf(%struct.Image* %ima, %struct.ImageUser* %iuser, i32* %r_frame, i32* %r_index) #0 !dbg !8906 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %r_frame.addr = alloca i32*, align 8
  %r_index.addr = alloca i32*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %frame = alloca i32, align 4
  %index = alloca i32, align 4
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !8909, metadata !DIExpression()), !dbg !8910
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !8911, metadata !DIExpression()), !dbg !8912
  store i32* %r_frame, i32** %r_frame.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_frame.addr, metadata !8913, metadata !DIExpression()), !dbg !8914
  store i32* %r_index, i32** %r_index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_index.addr, metadata !8915, metadata !DIExpression()), !dbg !8916
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !8917, metadata !DIExpression()), !dbg !8918
  store %struct.ImBuf* null, %struct.ImBuf** %ibuf, align 8, !dbg !8918
  call void @llvm.dbg.declare(metadata i32* %frame, metadata !8919, metadata !DIExpression()), !dbg !8920
  store i32 0, i32* %frame, align 4, !dbg !8920
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8921, metadata !DIExpression()), !dbg !8922
  store i32 0, i32* %index, align 4, !dbg !8922
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8923
  %source = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 11, !dbg !8925
  %1 = load i16, i16* %source, align 8, !dbg !8925
  %conv = sext i16 %1 to i32, !dbg !8923
  %cmp = icmp eq i32 %conv, 3, !dbg !8926
  br i1 %cmp, label %if.then, label %if.else, !dbg !8927

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8928
  %tobool = icmp ne %struct.ImageUser* %2, null, !dbg !8928
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8928

cond.true:                                        ; preds = %if.then
  %3 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8930
  %framenr = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %3, i32 0, i32 1, !dbg !8931
  %4 = load i32, i32* %framenr, align 8, !dbg !8931
  br label %cond.end, !dbg !8928

cond.false:                                       ; preds = %if.then
  %5 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8932
  %lastframe = getelementptr inbounds %struct.Image, %struct.Image* %5, i32 0, i32 13, !dbg !8933
  %6 = load i32, i32* %lastframe, align 4, !dbg !8933
  br label %cond.end, !dbg !8928

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ %6, %cond.false ], !dbg !8928
  store i32 %cond, i32* %frame, align 4, !dbg !8934
  %7 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8935
  %8 = load i32, i32* %frame, align 4, !dbg !8936
  %call = call %struct.ImBuf* @image_get_cached_ibuf_for_index_frame(%struct.Image* %7, i32 0, i32 %8), !dbg !8937
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !8938
  %9 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8939
  %lastframe2 = getelementptr inbounds %struct.Image, %struct.Image* %9, i32 0, i32 13, !dbg !8941
  %10 = load i32, i32* %lastframe2, align 4, !dbg !8941
  %11 = load i32, i32* %frame, align 4, !dbg !8942
  %cmp3 = icmp ne i32 %10, %11, !dbg !8943
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !8944

if.then5:                                         ; preds = %cond.end
  %12 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8945
  %tpageflag = getelementptr inbounds %struct.Image, %struct.Image* %12, i32 0, i32 14, !dbg !8946
  %13 = load i16, i16* %tpageflag, align 8, !dbg !8947
  %conv6 = sext i16 %13 to i32, !dbg !8947
  %or = or i32 %conv6, 64, !dbg !8947
  %conv7 = trunc i32 %or to i16, !dbg !8947
  store i16 %conv7, i16* %tpageflag, align 8, !dbg !8947
  br label %if.end, !dbg !8945

if.end:                                           ; preds = %if.then5, %cond.end
  %14 = load i32, i32* %frame, align 4, !dbg !8948
  %15 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8949
  %lastframe8 = getelementptr inbounds %struct.Image, %struct.Image* %15, i32 0, i32 13, !dbg !8950
  store i32 %14, i32* %lastframe8, align 4, !dbg !8951
  br label %if.end103, !dbg !8952

if.else:                                          ; preds = %entry
  %16 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8953
  %source9 = getelementptr inbounds %struct.Image, %struct.Image* %16, i32 0, i32 11, !dbg !8955
  %17 = load i16, i16* %source9, align 8, !dbg !8955
  %conv10 = sext i16 %17 to i32, !dbg !8953
  %cmp11 = icmp eq i32 %conv10, 2, !dbg !8956
  br i1 %cmp11, label %if.then13, label %if.else58, !dbg !8957

if.then13:                                        ; preds = %if.else
  %18 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8958
  %type = getelementptr inbounds %struct.Image, %struct.Image* %18, i32 0, i32 12, !dbg !8961
  %19 = load i16, i16* %type, align 2, !dbg !8961
  %conv14 = sext i16 %19 to i32, !dbg !8958
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !8962
  br i1 %cmp15, label %if.then17, label %if.else36, !dbg !8963

if.then17:                                        ; preds = %if.then13
  %20 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8964
  %tobool18 = icmp ne %struct.ImageUser* %20, null, !dbg !8964
  br i1 %tobool18, label %cond.true19, label %cond.false21, !dbg !8964

cond.true19:                                      ; preds = %if.then17
  %21 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8966
  %framenr20 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %21, i32 0, i32 1, !dbg !8967
  %22 = load i32, i32* %framenr20, align 8, !dbg !8967
  br label %cond.end23, !dbg !8964

cond.false21:                                     ; preds = %if.then17
  %23 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8968
  %lastframe22 = getelementptr inbounds %struct.Image, %struct.Image* %23, i32 0, i32 13, !dbg !8969
  %24 = load i32, i32* %lastframe22, align 4, !dbg !8969
  br label %cond.end23, !dbg !8964

cond.end23:                                       ; preds = %cond.false21, %cond.true19
  %cond24 = phi i32 [ %22, %cond.true19 ], [ %24, %cond.false21 ], !dbg !8964
  store i32 %cond24, i32* %frame, align 4, !dbg !8970
  %25 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8971
  %26 = load i32, i32* %frame, align 4, !dbg !8972
  %call25 = call %struct.ImBuf* @image_get_cached_ibuf_for_index_frame(%struct.Image* %25, i32 0, i32 %26), !dbg !8973
  store %struct.ImBuf* %call25, %struct.ImBuf** %ibuf, align 8, !dbg !8974
  %27 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8975
  %lastframe26 = getelementptr inbounds %struct.Image, %struct.Image* %27, i32 0, i32 13, !dbg !8977
  %28 = load i32, i32* %lastframe26, align 4, !dbg !8977
  %29 = load i32, i32* %frame, align 4, !dbg !8978
  %cmp27 = icmp ne i32 %28, %29, !dbg !8979
  br i1 %cmp27, label %if.then29, label %if.end34, !dbg !8980

if.then29:                                        ; preds = %cond.end23
  %30 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8981
  %tpageflag30 = getelementptr inbounds %struct.Image, %struct.Image* %30, i32 0, i32 14, !dbg !8983
  %31 = load i16, i16* %tpageflag30, align 8, !dbg !8984
  %conv31 = sext i16 %31 to i32, !dbg !8984
  %or32 = or i32 %conv31, 64, !dbg !8984
  %conv33 = trunc i32 %or32 to i16, !dbg !8984
  store i16 %conv33, i16* %tpageflag30, align 8, !dbg !8984
  br label %if.end34, !dbg !8985

if.end34:                                         ; preds = %if.then29, %cond.end23
  %32 = load i32, i32* %frame, align 4, !dbg !8986
  %33 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8987
  %lastframe35 = getelementptr inbounds %struct.Image, %struct.Image* %33, i32 0, i32 13, !dbg !8988
  store i32 %32, i32* %lastframe35, align 4, !dbg !8989
  br label %if.end57, !dbg !8990

if.else36:                                        ; preds = %if.then13
  %34 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !8991
  %type37 = getelementptr inbounds %struct.Image, %struct.Image* %34, i32 0, i32 12, !dbg !8993
  %35 = load i16, i16* %type37, align 2, !dbg !8993
  %conv38 = sext i16 %35 to i32, !dbg !8991
  %cmp39 = icmp eq i32 %conv38, 1, !dbg !8994
  br i1 %cmp39, label %if.then41, label %if.end56, !dbg !8995

if.then41:                                        ; preds = %if.else36
  %36 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8996
  %tobool42 = icmp ne %struct.ImageUser* %36, null, !dbg !8996
  br i1 %tobool42, label %cond.true43, label %cond.false45, !dbg !8996

cond.true43:                                      ; preds = %if.then41
  %37 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !8998
  %framenr44 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %37, i32 0, i32 1, !dbg !8999
  %38 = load i32, i32* %framenr44, align 8, !dbg !8999
  br label %cond.end47, !dbg !8996

cond.false45:                                     ; preds = %if.then41
  %39 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9000
  %lastframe46 = getelementptr inbounds %struct.Image, %struct.Image* %39, i32 0, i32 13, !dbg !9001
  %40 = load i32, i32* %lastframe46, align 4, !dbg !9001
  br label %cond.end47, !dbg !8996

cond.end47:                                       ; preds = %cond.false45, %cond.true43
  %cond48 = phi i32 [ %38, %cond.true43 ], [ %40, %cond.false45 ], !dbg !8996
  store i32 %cond48, i32* %frame, align 4, !dbg !9002
  %41 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9003
  %tobool49 = icmp ne %struct.ImageUser* %41, null, !dbg !9003
  br i1 %tobool49, label %cond.true50, label %cond.false52, !dbg !9003

cond.true50:                                      ; preds = %cond.end47
  %42 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9004
  %multi_index = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %42, i32 0, i32 9, !dbg !9005
  %43 = load i16, i16* %multi_index, align 4, !dbg !9005
  %conv51 = sext i16 %43 to i32, !dbg !9004
  br label %cond.end53, !dbg !9003

cond.false52:                                     ; preds = %cond.end47
  br label %cond.end53, !dbg !9003

cond.end53:                                       ; preds = %cond.false52, %cond.true50
  %cond54 = phi i32 [ %conv51, %cond.true50 ], [ 2146430959, %cond.false52 ], !dbg !9003
  store i32 %cond54, i32* %index, align 4, !dbg !9006
  %44 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9007
  %45 = load i32, i32* %index, align 4, !dbg !9008
  %46 = load i32, i32* %frame, align 4, !dbg !9009
  %call55 = call %struct.ImBuf* @image_get_cached_ibuf_for_index_frame(%struct.Image* %44, i32 %45, i32 %46), !dbg !9010
  store %struct.ImBuf* %call55, %struct.ImBuf** %ibuf, align 8, !dbg !9011
  br label %if.end56, !dbg !9012

if.end56:                                         ; preds = %cond.end53, %if.else36
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.end34
  br label %if.end102, !dbg !9013

if.else58:                                        ; preds = %if.else
  %47 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9014
  %source59 = getelementptr inbounds %struct.Image, %struct.Image* %47, i32 0, i32 11, !dbg !9016
  %48 = load i16, i16* %source59, align 8, !dbg !9016
  %conv60 = sext i16 %48 to i32, !dbg !9014
  %cmp61 = icmp eq i32 %conv60, 1, !dbg !9017
  br i1 %cmp61, label %if.then63, label %if.else86, !dbg !9018

if.then63:                                        ; preds = %if.else58
  %49 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9019
  %type64 = getelementptr inbounds %struct.Image, %struct.Image* %49, i32 0, i32 12, !dbg !9022
  %50 = load i16, i16* %type64, align 2, !dbg !9022
  %conv65 = sext i16 %50 to i32, !dbg !9019
  %cmp66 = icmp eq i32 %conv65, 0, !dbg !9023
  br i1 %cmp66, label %if.then68, label %if.else70, !dbg !9024

if.then68:                                        ; preds = %if.then63
  %51 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9025
  %call69 = call %struct.ImBuf* @image_get_cached_ibuf_for_index_frame(%struct.Image* %51, i32 2146430959, i32 0), !dbg !9026
  store %struct.ImBuf* %call69, %struct.ImBuf** %ibuf, align 8, !dbg !9027
  br label %if.end85, !dbg !9028

if.else70:                                        ; preds = %if.then63
  %52 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9029
  %type71 = getelementptr inbounds %struct.Image, %struct.Image* %52, i32 0, i32 12, !dbg !9031
  %53 = load i16, i16* %type71, align 2, !dbg !9031
  %conv72 = sext i16 %53 to i32, !dbg !9029
  %cmp73 = icmp eq i32 %conv72, 1, !dbg !9032
  br i1 %cmp73, label %if.then75, label %if.end84, !dbg !9033

if.then75:                                        ; preds = %if.else70
  %54 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9034
  %55 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9035
  %tobool76 = icmp ne %struct.ImageUser* %55, null, !dbg !9035
  br i1 %tobool76, label %cond.true77, label %cond.false80, !dbg !9035

cond.true77:                                      ; preds = %if.then75
  %56 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9036
  %multi_index78 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %56, i32 0, i32 9, !dbg !9037
  %57 = load i16, i16* %multi_index78, align 4, !dbg !9037
  %conv79 = sext i16 %57 to i32, !dbg !9036
  br label %cond.end81, !dbg !9035

cond.false80:                                     ; preds = %if.then75
  br label %cond.end81, !dbg !9035

cond.end81:                                       ; preds = %cond.false80, %cond.true77
  %cond82 = phi i32 [ %conv79, %cond.true77 ], [ 2146430959, %cond.false80 ], !dbg !9035
  %call83 = call %struct.ImBuf* @image_get_cached_ibuf_for_index_frame(%struct.Image* %54, i32 %cond82, i32 0), !dbg !9038
  store %struct.ImBuf* %call83, %struct.ImBuf** %ibuf, align 8, !dbg !9039
  br label %if.end84, !dbg !9040

if.end84:                                         ; preds = %cond.end81, %if.else70
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.then68
  br label %if.end101, !dbg !9041

if.else86:                                        ; preds = %if.else58
  %58 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9042
  %source87 = getelementptr inbounds %struct.Image, %struct.Image* %58, i32 0, i32 11, !dbg !9044
  %59 = load i16, i16* %source87, align 8, !dbg !9044
  %conv88 = sext i16 %59 to i32, !dbg !9042
  %cmp89 = icmp eq i32 %conv88, 4, !dbg !9045
  br i1 %cmp89, label %if.then91, label %if.else93, !dbg !9046

if.then91:                                        ; preds = %if.else86
  %60 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9047
  %call92 = call %struct.ImBuf* @image_get_cached_ibuf_for_index_frame(%struct.Image* %60, i32 2146430959, i32 0), !dbg !9049
  store %struct.ImBuf* %call92, %struct.ImBuf** %ibuf, align 8, !dbg !9050
  br label %if.end100, !dbg !9051

if.else93:                                        ; preds = %if.else86
  %61 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9052
  %source94 = getelementptr inbounds %struct.Image, %struct.Image* %61, i32 0, i32 11, !dbg !9054
  %62 = load i16, i16* %source94, align 8, !dbg !9054
  %conv95 = sext i16 %62 to i32, !dbg !9052
  %cmp96 = icmp eq i32 %conv95, 5, !dbg !9055
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !9056

if.then98:                                        ; preds = %if.else93
  br label %if.end99, !dbg !9057

if.end99:                                         ; preds = %if.then98, %if.else93
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.then91
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.end85
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.end57
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.end
  %63 = load i32*, i32** %r_frame.addr, align 8, !dbg !9059
  %tobool104 = icmp ne i32* %63, null, !dbg !9059
  br i1 %tobool104, label %if.then105, label %if.end106, !dbg !9061

if.then105:                                       ; preds = %if.end103
  %64 = load i32, i32* %frame, align 4, !dbg !9062
  %65 = load i32*, i32** %r_frame.addr, align 8, !dbg !9063
  store i32 %64, i32* %65, align 4, !dbg !9064
  br label %if.end106, !dbg !9065

if.end106:                                        ; preds = %if.then105, %if.end103
  %66 = load i32*, i32** %r_index.addr, align 8, !dbg !9066
  %tobool107 = icmp ne i32* %66, null, !dbg !9066
  br i1 %tobool107, label %if.then108, label %if.end109, !dbg !9068

if.then108:                                       ; preds = %if.end106
  %67 = load i32, i32* %index, align 4, !dbg !9069
  %68 = load i32*, i32** %r_index.addr, align 8, !dbg !9070
  store i32 %67, i32* %68, align 4, !dbg !9071
  br label %if.end109, !dbg !9072

if.end109:                                        ; preds = %if.then108, %if.end106
  %69 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9073
  ret %struct.ImBuf* %69, !dbg !9074
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ImagePool* @BKE_image_pool_new() #0 !dbg !9075 {
entry:
  %pool = alloca %struct.ImagePool*, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool, metadata !9082, metadata !DIExpression()), !dbg !9085
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9086
  %call = call i8* %0(i64 16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0)), !dbg !9086
  %1 = bitcast i8* %call to %struct.ImagePool*, !dbg !9086
  store %struct.ImagePool* %1, %struct.ImagePool** %pool, align 8, !dbg !9085
  %2 = load %struct.ImagePool*, %struct.ImagePool** %pool, align 8, !dbg !9087
  ret %struct.ImagePool* %2, !dbg !9088
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_pool_free(%struct.ImagePool* %pool) #0 !dbg !9089 {
entry:
  %pool.addr = alloca %struct.ImagePool*, align 8
  %entry1 = alloca %struct.ImagePoolEntry*, align 8
  %next_entry = alloca %struct.ImagePoolEntry*, align 8
  store %struct.ImagePool* %pool, %struct.ImagePool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool.addr, metadata !9092, metadata !DIExpression()), !dbg !9093
  call void @llvm.dbg.declare(metadata %struct.ImagePoolEntry** %entry1, metadata !9094, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.declare(metadata %struct.ImagePoolEntry** %next_entry, metadata !9107, metadata !DIExpression()), !dbg !9108
  call void @BLI_spin_lock(i32* @image_spin), !dbg !9109
  %0 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !9110
  %image_buffers = getelementptr inbounds %struct.ImagePool, %struct.ImagePool* %0, i32 0, i32 0, !dbg !9112
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %image_buffers, i32 0, i32 0, !dbg !9113
  %1 = load i8*, i8** %first, align 8, !dbg !9113
  %2 = bitcast i8* %1 to %struct.ImagePoolEntry*, !dbg !9110
  store %struct.ImagePoolEntry* %2, %struct.ImagePoolEntry** %entry1, align 8, !dbg !9114
  br label %for.cond, !dbg !9115

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.ImagePoolEntry*, %struct.ImagePoolEntry** %entry1, align 8, !dbg !9116
  %tobool = icmp ne %struct.ImagePoolEntry* %3, null, !dbg !9118
  br i1 %tobool, label %for.body, label %for.end, !dbg !9118

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ImagePoolEntry*, %struct.ImagePoolEntry** %entry1, align 8, !dbg !9119
  %next = getelementptr inbounds %struct.ImagePoolEntry, %struct.ImagePoolEntry* %4, i32 0, i32 0, !dbg !9121
  %5 = load %struct.ImagePoolEntry*, %struct.ImagePoolEntry** %next, align 8, !dbg !9121
  store %struct.ImagePoolEntry* %5, %struct.ImagePoolEntry** %next_entry, align 8, !dbg !9122
  %6 = load %struct.ImagePoolEntry*, %struct.ImagePoolEntry** %entry1, align 8, !dbg !9123
  %ibuf = getelementptr inbounds %struct.ImagePoolEntry, %struct.ImagePoolEntry* %6, i32 0, i32 3, !dbg !9125
  %7 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9125
  %tobool2 = icmp ne %struct.ImBuf* %7, null, !dbg !9123
  br i1 %tobool2, label %if.then, label %if.end, !dbg !9126

if.then:                                          ; preds = %for.body
  %8 = load %struct.ImagePoolEntry*, %struct.ImagePoolEntry** %entry1, align 8, !dbg !9127
  %ibuf3 = getelementptr inbounds %struct.ImagePoolEntry, %struct.ImagePoolEntry* %8, i32 0, i32 3, !dbg !9128
  %9 = load %struct.ImBuf*, %struct.ImBuf** %ibuf3, align 8, !dbg !9128
  call void @IMB_freeImBuf(%struct.ImBuf* %9), !dbg !9129
  br label %if.end, !dbg !9129

if.end:                                           ; preds = %if.then, %for.body
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9130
  %11 = load %struct.ImagePoolEntry*, %struct.ImagePoolEntry** %entry1, align 8, !dbg !9131
  %12 = bitcast %struct.ImagePoolEntry* %11 to i8*, !dbg !9131
  call void %10(i8* %12), !dbg !9130
  br label %for.inc, !dbg !9132

for.inc:                                          ; preds = %if.end
  %13 = load %struct.ImagePoolEntry*, %struct.ImagePoolEntry** %next_entry, align 8, !dbg !9133
  store %struct.ImagePoolEntry* %13, %struct.ImagePoolEntry** %entry1, align 8, !dbg !9134
  br label %for.cond, !dbg !9135, !llvm.loop !9136

for.end:                                          ; preds = %for.cond
  call void @BLI_spin_unlock(i32* @image_spin), !dbg !9138
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9139
  %15 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !9140
  %16 = bitcast %struct.ImagePool* %15 to i8*, !dbg !9140
  call void %14(i8* %16), !dbg !9139
  ret void, !dbg !9141
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ImBuf* @BKE_image_pool_acquire_ibuf(%struct.Image* %ima, %struct.ImageUser* %iuser, %struct.ImagePool* %pool) #0 !dbg !9142 {
entry:
  %retval = alloca %struct.ImBuf*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %pool.addr = alloca %struct.ImagePool*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %index = alloca i32, align 4
  %frame = alloca i32, align 4
  %found = alloca i8, align 1
  %entry11 = alloca %struct.ImagePoolEntry*, align 8
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !9145, metadata !DIExpression()), !dbg !9146
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !9147, metadata !DIExpression()), !dbg !9148
  store %struct.ImagePool* %pool, %struct.ImagePool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool.addr, metadata !9149, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !9151, metadata !DIExpression()), !dbg !9152
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9153, metadata !DIExpression()), !dbg !9154
  call void @llvm.dbg.declare(metadata i32* %frame, metadata !9155, metadata !DIExpression()), !dbg !9156
  call void @llvm.dbg.declare(metadata i8* %found, metadata !9157, metadata !DIExpression()), !dbg !9158
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9159
  %1 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9161
  %call = call zeroext i8 @image_quick_test(%struct.Image* %0, %struct.ImageUser* %1), !dbg !9162
  %tobool = icmp ne i8 %call, 0, !dbg !9162
  br i1 %tobool, label %if.end, label %if.then, !dbg !9163

if.then:                                          ; preds = %entry
  store %struct.ImBuf* null, %struct.ImBuf** %retval, align 8, !dbg !9164
  br label %return, !dbg !9164

if.end:                                           ; preds = %entry
  %2 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !9165
  %cmp = icmp eq %struct.ImagePool* %2, null, !dbg !9167
  br i1 %cmp, label %if.then1, label %if.end3, !dbg !9168

if.then1:                                         ; preds = %if.end
  %3 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9169
  %4 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9171
  %call2 = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %3, %struct.ImageUser* %4, i8** null), !dbg !9172
  store %struct.ImBuf* %call2, %struct.ImBuf** %retval, align 8, !dbg !9173
  br label %return, !dbg !9173

if.end3:                                          ; preds = %if.end
  %5 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9174
  %6 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9175
  call void @image_get_frame_and_index(%struct.Image* %5, %struct.ImageUser* %6, i32* %frame, i32* %index), !dbg !9176
  %7 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !9177
  %8 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9178
  %9 = load i32, i32* %frame, align 4, !dbg !9179
  %10 = load i32, i32* %index, align 4, !dbg !9180
  %call4 = call %struct.ImBuf* @image_pool_find_entry(%struct.ImagePool* %7, %struct.Image* %8, i32 %9, i32 %10, i8* %found), !dbg !9181
  store %struct.ImBuf* %call4, %struct.ImBuf** %ibuf, align 8, !dbg !9182
  %11 = load i8, i8* %found, align 1, !dbg !9183
  %tobool5 = icmp ne i8 %11, 0, !dbg !9183
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !9185

if.then6:                                         ; preds = %if.end3
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9186
  store %struct.ImBuf* %12, %struct.ImBuf** %retval, align 8, !dbg !9187
  br label %return, !dbg !9187

if.end7:                                          ; preds = %if.end3
  call void @BLI_spin_lock(i32* @image_spin), !dbg !9188
  %13 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !9189
  %14 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9190
  %15 = load i32, i32* %frame, align 4, !dbg !9191
  %16 = load i32, i32* %index, align 4, !dbg !9192
  %call8 = call %struct.ImBuf* @image_pool_find_entry(%struct.ImagePool* %13, %struct.Image* %14, i32 %15, i32 %16, i8* %found), !dbg !9193
  store %struct.ImBuf* %call8, %struct.ImBuf** %ibuf, align 8, !dbg !9194
  %17 = load i8, i8* %found, align 1, !dbg !9195
  %tobool9 = icmp ne i8 %17, 0, !dbg !9195
  br i1 %tobool9, label %if.end17, label %if.then10, !dbg !9197

if.then10:                                        ; preds = %if.end7
  call void @llvm.dbg.declare(metadata %struct.ImagePoolEntry** %entry11, metadata !9198, metadata !DIExpression()), !dbg !9200
  %18 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9201
  %19 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9202
  %call12 = call %struct.ImBuf* @image_acquire_ibuf(%struct.Image* %18, %struct.ImageUser* %19, i8** null), !dbg !9203
  store %struct.ImBuf* %call12, %struct.ImBuf** %ibuf, align 8, !dbg !9204
  %20 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9205
  %call13 = call i8* %20(i64 40, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.35, i64 0, i64 0)), !dbg !9205
  %21 = bitcast i8* %call13 to %struct.ImagePoolEntry*, !dbg !9205
  store %struct.ImagePoolEntry* %21, %struct.ImagePoolEntry** %entry11, align 8, !dbg !9206
  %22 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9207
  %23 = load %struct.ImagePoolEntry*, %struct.ImagePoolEntry** %entry11, align 8, !dbg !9208
  %image = getelementptr inbounds %struct.ImagePoolEntry, %struct.ImagePoolEntry* %23, i32 0, i32 2, !dbg !9209
  store %struct.Image* %22, %struct.Image** %image, align 8, !dbg !9210
  %24 = load i32, i32* %frame, align 4, !dbg !9211
  %25 = load %struct.ImagePoolEntry*, %struct.ImagePoolEntry** %entry11, align 8, !dbg !9212
  %frame14 = getelementptr inbounds %struct.ImagePoolEntry, %struct.ImagePoolEntry* %25, i32 0, i32 5, !dbg !9213
  store i32 %24, i32* %frame14, align 4, !dbg !9214
  %26 = load i32, i32* %index, align 4, !dbg !9215
  %27 = load %struct.ImagePoolEntry*, %struct.ImagePoolEntry** %entry11, align 8, !dbg !9216
  %index15 = getelementptr inbounds %struct.ImagePoolEntry, %struct.ImagePoolEntry* %27, i32 0, i32 4, !dbg !9217
  store i32 %26, i32* %index15, align 8, !dbg !9218
  %28 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9219
  %29 = load %struct.ImagePoolEntry*, %struct.ImagePoolEntry** %entry11, align 8, !dbg !9220
  %ibuf16 = getelementptr inbounds %struct.ImagePoolEntry, %struct.ImagePoolEntry* %29, i32 0, i32 3, !dbg !9221
  store %struct.ImBuf* %28, %struct.ImBuf** %ibuf16, align 8, !dbg !9222
  %30 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !9223
  %image_buffers = getelementptr inbounds %struct.ImagePool, %struct.ImagePool* %30, i32 0, i32 0, !dbg !9224
  %31 = load %struct.ImagePoolEntry*, %struct.ImagePoolEntry** %entry11, align 8, !dbg !9225
  %32 = bitcast %struct.ImagePoolEntry* %31 to i8*, !dbg !9225
  call void @BLI_addtail(%struct.ListBase* %image_buffers, i8* %32), !dbg !9226
  br label %if.end17, !dbg !9227

if.end17:                                         ; preds = %if.then10, %if.end7
  call void @BLI_spin_unlock(i32* @image_spin), !dbg !9228
  %33 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9229
  store %struct.ImBuf* %33, %struct.ImBuf** %retval, align 8, !dbg !9230
  br label %return, !dbg !9230

return:                                           ; preds = %if.end17, %if.then6, %if.then1, %if.then
  %34 = load %struct.ImBuf*, %struct.ImBuf** %retval, align 8, !dbg !9231
  ret %struct.ImBuf* %34, !dbg !9231
}

; Function Attrs: noinline nounwind uwtable
define internal void @image_get_frame_and_index(%struct.Image* %ima, %struct.ImageUser* %iuser, i32* %r_frame, i32* %r_index) #0 !dbg !9232 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %r_frame.addr = alloca i32*, align 8
  %r_index.addr = alloca i32*, align 8
  %frame = alloca i32, align 4
  %index = alloca i32, align 4
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !9235, metadata !DIExpression()), !dbg !9236
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !9237, metadata !DIExpression()), !dbg !9238
  store i32* %r_frame, i32** %r_frame.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_frame.addr, metadata !9239, metadata !DIExpression()), !dbg !9240
  store i32* %r_index, i32** %r_index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_index.addr, metadata !9241, metadata !DIExpression()), !dbg !9242
  call void @llvm.dbg.declare(metadata i32* %frame, metadata !9243, metadata !DIExpression()), !dbg !9244
  store i32 0, i32* %frame, align 4, !dbg !9244
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9245, metadata !DIExpression()), !dbg !9246
  store i32 0, i32* %index, align 4, !dbg !9246
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9247
  %source = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 11, !dbg !9249
  %1 = load i16, i16* %source, align 8, !dbg !9249
  %conv = sext i16 %1 to i32, !dbg !9247
  %cmp = icmp eq i32 %conv, 3, !dbg !9250
  br i1 %cmp, label %if.then, label %if.else, !dbg !9251

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9252
  %tobool = icmp ne %struct.ImageUser* %2, null, !dbg !9252
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9252

cond.true:                                        ; preds = %if.then
  %3 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9254
  %framenr = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %3, i32 0, i32 1, !dbg !9255
  %4 = load i32, i32* %framenr, align 8, !dbg !9255
  br label %cond.end, !dbg !9252

cond.false:                                       ; preds = %if.then
  %5 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9256
  %lastframe = getelementptr inbounds %struct.Image, %struct.Image* %5, i32 0, i32 13, !dbg !9257
  %6 = load i32, i32* %lastframe, align 4, !dbg !9257
  br label %cond.end, !dbg !9252

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ %6, %cond.false ], !dbg !9252
  store i32 %cond, i32* %frame, align 4, !dbg !9258
  br label %if.end39, !dbg !9259

if.else:                                          ; preds = %entry
  %7 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9260
  %source2 = getelementptr inbounds %struct.Image, %struct.Image* %7, i32 0, i32 11, !dbg !9262
  %8 = load i16, i16* %source2, align 8, !dbg !9262
  %conv3 = sext i16 %8 to i32, !dbg !9260
  %cmp4 = icmp eq i32 %conv3, 2, !dbg !9263
  br i1 %cmp4, label %if.then6, label %if.end38, !dbg !9264

if.then6:                                         ; preds = %if.else
  %9 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9265
  %type = getelementptr inbounds %struct.Image, %struct.Image* %9, i32 0, i32 12, !dbg !9268
  %10 = load i16, i16* %type, align 2, !dbg !9268
  %conv7 = sext i16 %10 to i32, !dbg !9265
  %cmp8 = icmp eq i32 %conv7, 0, !dbg !9269
  br i1 %cmp8, label %if.then10, label %if.else18, !dbg !9270

if.then10:                                        ; preds = %if.then6
  %11 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9271
  %tobool11 = icmp ne %struct.ImageUser* %11, null, !dbg !9271
  br i1 %tobool11, label %cond.true12, label %cond.false14, !dbg !9271

cond.true12:                                      ; preds = %if.then10
  %12 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9273
  %framenr13 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %12, i32 0, i32 1, !dbg !9274
  %13 = load i32, i32* %framenr13, align 8, !dbg !9274
  br label %cond.end16, !dbg !9271

cond.false14:                                     ; preds = %if.then10
  %14 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9275
  %lastframe15 = getelementptr inbounds %struct.Image, %struct.Image* %14, i32 0, i32 13, !dbg !9276
  %15 = load i32, i32* %lastframe15, align 4, !dbg !9276
  br label %cond.end16, !dbg !9271

cond.end16:                                       ; preds = %cond.false14, %cond.true12
  %cond17 = phi i32 [ %13, %cond.true12 ], [ %15, %cond.false14 ], !dbg !9271
  store i32 %cond17, i32* %frame, align 4, !dbg !9277
  br label %if.end37, !dbg !9278

if.else18:                                        ; preds = %if.then6
  %16 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9279
  %type19 = getelementptr inbounds %struct.Image, %struct.Image* %16, i32 0, i32 12, !dbg !9281
  %17 = load i16, i16* %type19, align 2, !dbg !9281
  %conv20 = sext i16 %17 to i32, !dbg !9279
  %cmp21 = icmp eq i32 %conv20, 1, !dbg !9282
  br i1 %cmp21, label %if.then23, label %if.end, !dbg !9283

if.then23:                                        ; preds = %if.else18
  %18 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9284
  %tobool24 = icmp ne %struct.ImageUser* %18, null, !dbg !9284
  br i1 %tobool24, label %cond.true25, label %cond.false27, !dbg !9284

cond.true25:                                      ; preds = %if.then23
  %19 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9286
  %framenr26 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %19, i32 0, i32 1, !dbg !9287
  %20 = load i32, i32* %framenr26, align 8, !dbg !9287
  br label %cond.end29, !dbg !9284

cond.false27:                                     ; preds = %if.then23
  %21 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9288
  %lastframe28 = getelementptr inbounds %struct.Image, %struct.Image* %21, i32 0, i32 13, !dbg !9289
  %22 = load i32, i32* %lastframe28, align 4, !dbg !9289
  br label %cond.end29, !dbg !9284

cond.end29:                                       ; preds = %cond.false27, %cond.true25
  %cond30 = phi i32 [ %20, %cond.true25 ], [ %22, %cond.false27 ], !dbg !9284
  store i32 %cond30, i32* %frame, align 4, !dbg !9290
  %23 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9291
  %tobool31 = icmp ne %struct.ImageUser* %23, null, !dbg !9291
  br i1 %tobool31, label %cond.true32, label %cond.false34, !dbg !9291

cond.true32:                                      ; preds = %cond.end29
  %24 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9292
  %multi_index = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %24, i32 0, i32 9, !dbg !9293
  %25 = load i16, i16* %multi_index, align 4, !dbg !9293
  %conv33 = sext i16 %25 to i32, !dbg !9292
  br label %cond.end35, !dbg !9291

cond.false34:                                     ; preds = %cond.end29
  br label %cond.end35, !dbg !9291

cond.end35:                                       ; preds = %cond.false34, %cond.true32
  %cond36 = phi i32 [ %conv33, %cond.true32 ], [ 2146430959, %cond.false34 ], !dbg !9291
  store i32 %cond36, i32* %index, align 4, !dbg !9294
  br label %if.end, !dbg !9295

if.end:                                           ; preds = %cond.end35, %if.else18
  br label %if.end37

if.end37:                                         ; preds = %if.end, %cond.end16
  br label %if.end38, !dbg !9296

if.end38:                                         ; preds = %if.end37, %if.else
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %cond.end
  %26 = load i32, i32* %frame, align 4, !dbg !9297
  %27 = load i32*, i32** %r_frame.addr, align 8, !dbg !9298
  store i32 %26, i32* %27, align 4, !dbg !9299
  %28 = load i32, i32* %index, align 4, !dbg !9300
  %29 = load i32*, i32** %r_index.addr, align 8, !dbg !9301
  store i32 %28, i32* %29, align 4, !dbg !9302
  ret void, !dbg !9303
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @image_pool_find_entry(%struct.ImagePool* %pool, %struct.Image* %image, i32 %frame, i32 %index, i8* %found) #0 !dbg !9304 {
entry:
  %retval = alloca %struct.ImBuf*, align 8
  %pool.addr = alloca %struct.ImagePool*, align 8
  %image.addr = alloca %struct.Image*, align 8
  %frame.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %found.addr = alloca i8*, align 8
  %entry1 = alloca %struct.ImagePoolEntry*, align 8
  store %struct.ImagePool* %pool, %struct.ImagePool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool.addr, metadata !9307, metadata !DIExpression()), !dbg !9308
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !9309, metadata !DIExpression()), !dbg !9310
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !9311, metadata !DIExpression()), !dbg !9312
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9313, metadata !DIExpression()), !dbg !9314
  store i8* %found, i8** %found.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %found.addr, metadata !9315, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.declare(metadata %struct.ImagePoolEntry** %entry1, metadata !9317, metadata !DIExpression()), !dbg !9318
  %0 = load i8*, i8** %found.addr, align 8, !dbg !9319
  store i8 0, i8* %0, align 1, !dbg !9320
  %1 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !9321
  %image_buffers = getelementptr inbounds %struct.ImagePool, %struct.ImagePool* %1, i32 0, i32 0, !dbg !9323
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %image_buffers, i32 0, i32 0, !dbg !9324
  %2 = load i8*, i8** %first, align 8, !dbg !9324
  %3 = bitcast i8* %2 to %struct.ImagePoolEntry*, !dbg !9321
  store %struct.ImagePoolEntry* %3, %struct.ImagePoolEntry** %entry1, align 8, !dbg !9325
  br label %for.cond, !dbg !9326

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.ImagePoolEntry*, %struct.ImagePoolEntry** %entry1, align 8, !dbg !9327
  %tobool = icmp ne %struct.ImagePoolEntry* %4, null, !dbg !9329
  br i1 %tobool, label %for.body, label %for.end, !dbg !9329

for.body:                                         ; preds = %for.cond
  %5 = load %struct.ImagePoolEntry*, %struct.ImagePoolEntry** %entry1, align 8, !dbg !9330
  %image2 = getelementptr inbounds %struct.ImagePoolEntry, %struct.ImagePoolEntry* %5, i32 0, i32 2, !dbg !9333
  %6 = load %struct.Image*, %struct.Image** %image2, align 8, !dbg !9333
  %7 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !9334
  %cmp = icmp eq %struct.Image* %6, %7, !dbg !9335
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9336

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.ImagePoolEntry*, %struct.ImagePoolEntry** %entry1, align 8, !dbg !9337
  %frame3 = getelementptr inbounds %struct.ImagePoolEntry, %struct.ImagePoolEntry* %8, i32 0, i32 5, !dbg !9338
  %9 = load i32, i32* %frame3, align 4, !dbg !9338
  %10 = load i32, i32* %frame.addr, align 4, !dbg !9339
  %cmp4 = icmp eq i32 %9, %10, !dbg !9340
  br i1 %cmp4, label %land.lhs.true5, label %if.end, !dbg !9341

land.lhs.true5:                                   ; preds = %land.lhs.true
  %11 = load %struct.ImagePoolEntry*, %struct.ImagePoolEntry** %entry1, align 8, !dbg !9342
  %index6 = getelementptr inbounds %struct.ImagePoolEntry, %struct.ImagePoolEntry* %11, i32 0, i32 4, !dbg !9343
  %12 = load i32, i32* %index6, align 8, !dbg !9343
  %13 = load i32, i32* %index.addr, align 4, !dbg !9344
  %cmp7 = icmp eq i32 %12, %13, !dbg !9345
  br i1 %cmp7, label %if.then, label %if.end, !dbg !9346

if.then:                                          ; preds = %land.lhs.true5
  %14 = load i8*, i8** %found.addr, align 8, !dbg !9347
  store i8 1, i8* %14, align 1, !dbg !9349
  %15 = load %struct.ImagePoolEntry*, %struct.ImagePoolEntry** %entry1, align 8, !dbg !9350
  %ibuf = getelementptr inbounds %struct.ImagePoolEntry, %struct.ImagePoolEntry* %15, i32 0, i32 3, !dbg !9351
  %16 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9351
  store %struct.ImBuf* %16, %struct.ImBuf** %retval, align 8, !dbg !9352
  br label %return, !dbg !9352

if.end:                                           ; preds = %land.lhs.true5, %land.lhs.true, %for.body
  br label %for.inc, !dbg !9353

for.inc:                                          ; preds = %if.end
  %17 = load %struct.ImagePoolEntry*, %struct.ImagePoolEntry** %entry1, align 8, !dbg !9354
  %next = getelementptr inbounds %struct.ImagePoolEntry, %struct.ImagePoolEntry* %17, i32 0, i32 0, !dbg !9355
  %18 = load %struct.ImagePoolEntry*, %struct.ImagePoolEntry** %next, align 8, !dbg !9355
  store %struct.ImagePoolEntry* %18, %struct.ImagePoolEntry** %entry1, align 8, !dbg !9356
  br label %for.cond, !dbg !9357, !llvm.loop !9358

for.end:                                          ; preds = %for.cond
  store %struct.ImBuf* null, %struct.ImBuf** %retval, align 8, !dbg !9360
  br label %return, !dbg !9360

return:                                           ; preds = %for.end, %if.then
  %19 = load %struct.ImBuf*, %struct.ImBuf** %retval, align 8, !dbg !9361
  ret %struct.ImBuf* %19, !dbg !9361
}

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_pool_release_ibuf(%struct.Image* %ima, %struct.ImBuf* %ibuf, %struct.ImagePool* %pool) #0 !dbg !9362 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %pool.addr = alloca %struct.ImagePool*, align 8
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !9365, metadata !DIExpression()), !dbg !9366
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !9367, metadata !DIExpression()), !dbg !9368
  store %struct.ImagePool* %pool, %struct.ImagePool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool.addr, metadata !9369, metadata !DIExpression()), !dbg !9370
  %0 = load %struct.ImagePool*, %struct.ImagePool** %pool.addr, align 8, !dbg !9371
  %cmp = icmp eq %struct.ImagePool* %0, null, !dbg !9373
  br i1 %cmp, label %if.then, label %if.end, !dbg !9374

if.then:                                          ; preds = %entry
  %1 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9375
  %2 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !9377
  call void @BKE_image_release_ibuf(%struct.Image* %1, %struct.ImBuf* %2, i8* null), !dbg !9378
  br label %if.end, !dbg !9379

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9380
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_image_user_frame_get(%struct.ImageUser* %iuser, i32 %cfra, i32 %fieldnr, i8* %r_is_in_range) #0 !dbg !9381 {
entry:
  %retval = alloca i32, align 4
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %cfra.addr = alloca i32, align 4
  %fieldnr.addr = alloca i32, align 4
  %r_is_in_range.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %framenr = alloca i32, align 4
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !9386, metadata !DIExpression()), !dbg !9387
  store i32 %cfra, i32* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra.addr, metadata !9388, metadata !DIExpression()), !dbg !9389
  store i32 %fieldnr, i32* %fieldnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fieldnr.addr, metadata !9390, metadata !DIExpression()), !dbg !9391
  store i8* %r_is_in_range, i8** %r_is_in_range.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_is_in_range.addr, metadata !9392, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9394, metadata !DIExpression()), !dbg !9395
  %0 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9396
  %fie_ima = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %0, i32 0, i32 5, !dbg !9397
  %1 = load i8, i8* %fie_ima, align 8, !dbg !9397
  %conv = zext i8 %1 to i32, !dbg !9396
  %2 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9398
  %frames = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %2, i32 0, i32 2, !dbg !9399
  %3 = load i32, i32* %frames, align 4, !dbg !9399
  %mul = mul nsw i32 %conv, %3, !dbg !9400
  %div = sdiv i32 %mul, 2, !dbg !9401
  store i32 %div, i32* %len, align 4, !dbg !9395
  %4 = load i8*, i8** %r_is_in_range.addr, align 8, !dbg !9402
  %tobool = icmp ne i8* %4, null, !dbg !9402
  br i1 %tobool, label %if.then, label %if.end, !dbg !9404

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %r_is_in_range.addr, align 8, !dbg !9405
  store i8 0, i8* %5, align 1, !dbg !9407
  br label %if.end, !dbg !9408

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %len, align 4, !dbg !9409
  %cmp = icmp eq i32 %6, 0, !dbg !9411
  br i1 %cmp, label %if.then2, label %if.else, !dbg !9412

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9413
  br label %return, !dbg !9413

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %framenr, metadata !9415, metadata !DIExpression()), !dbg !9417
  %7 = load i32, i32* %cfra.addr, align 4, !dbg !9418
  %8 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9419
  %sfra = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %8, i32 0, i32 4, !dbg !9420
  %9 = load i32, i32* %sfra, align 4, !dbg !9420
  %sub = sub nsw i32 %7, %9, !dbg !9421
  %add = add nsw i32 %sub, 1, !dbg !9422
  store i32 %add, i32* %cfra.addr, align 4, !dbg !9423
  %10 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9424
  %cycl = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %10, i32 0, i32 6, !dbg !9426
  %11 = load i8, i8* %cycl, align 1, !dbg !9426
  %tobool3 = icmp ne i8 %11, 0, !dbg !9424
  br i1 %tobool3, label %if.then4, label %if.end17, !dbg !9427

if.then4:                                         ; preds = %if.else
  %12 = load i32, i32* %cfra.addr, align 4, !dbg !9428
  %13 = load i32, i32* %len, align 4, !dbg !9430
  %rem = srem i32 %12, %13, !dbg !9431
  store i32 %rem, i32* %cfra.addr, align 4, !dbg !9432
  %14 = load i32, i32* %cfra.addr, align 4, !dbg !9433
  %cmp5 = icmp slt i32 %14, 0, !dbg !9435
  br i1 %cmp5, label %if.then7, label %if.end9, !dbg !9436

if.then7:                                         ; preds = %if.then4
  %15 = load i32, i32* %len, align 4, !dbg !9437
  %16 = load i32, i32* %cfra.addr, align 4, !dbg !9438
  %add8 = add nsw i32 %16, %15, !dbg !9438
  store i32 %add8, i32* %cfra.addr, align 4, !dbg !9438
  br label %if.end9, !dbg !9439

if.end9:                                          ; preds = %if.then7, %if.then4
  %17 = load i32, i32* %cfra.addr, align 4, !dbg !9440
  %cmp10 = icmp eq i32 %17, 0, !dbg !9442
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !9443

if.then12:                                        ; preds = %if.end9
  %18 = load i32, i32* %len, align 4, !dbg !9444
  store i32 %18, i32* %cfra.addr, align 4, !dbg !9445
  br label %if.end13, !dbg !9446

if.end13:                                         ; preds = %if.then12, %if.end9
  %19 = load i8*, i8** %r_is_in_range.addr, align 8, !dbg !9447
  %tobool14 = icmp ne i8* %19, null, !dbg !9447
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !9449

if.then15:                                        ; preds = %if.end13
  %20 = load i8*, i8** %r_is_in_range.addr, align 8, !dbg !9450
  store i8 1, i8* %20, align 1, !dbg !9452
  br label %if.end16, !dbg !9453

if.end16:                                         ; preds = %if.then15, %if.end13
  br label %if.end17, !dbg !9454

if.end17:                                         ; preds = %if.end16, %if.else
  %21 = load i32, i32* %cfra.addr, align 4, !dbg !9455
  %cmp18 = icmp slt i32 %21, 0, !dbg !9457
  br i1 %cmp18, label %if.then20, label %if.else21, !dbg !9458

if.then20:                                        ; preds = %if.end17
  store i32 0, i32* %cfra.addr, align 4, !dbg !9459
  br label %if.end30, !dbg !9461

if.else21:                                        ; preds = %if.end17
  %22 = load i32, i32* %cfra.addr, align 4, !dbg !9462
  %23 = load i32, i32* %len, align 4, !dbg !9464
  %cmp22 = icmp sgt i32 %22, %23, !dbg !9465
  br i1 %cmp22, label %if.then24, label %if.else25, !dbg !9466

if.then24:                                        ; preds = %if.else21
  %24 = load i32, i32* %len, align 4, !dbg !9467
  store i32 %24, i32* %cfra.addr, align 4, !dbg !9469
  br label %if.end29, !dbg !9470

if.else25:                                        ; preds = %if.else21
  %25 = load i8*, i8** %r_is_in_range.addr, align 8, !dbg !9471
  %tobool26 = icmp ne i8* %25, null, !dbg !9471
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !9474

if.then27:                                        ; preds = %if.else25
  %26 = load i8*, i8** %r_is_in_range.addr, align 8, !dbg !9475
  store i8 1, i8* %26, align 1, !dbg !9477
  br label %if.end28, !dbg !9478

if.end28:                                         ; preds = %if.then27, %if.else25
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then24
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then20
  %27 = load i32, i32* %cfra.addr, align 4, !dbg !9479
  %mul31 = mul nsw i32 2, %27, !dbg !9480
  store i32 %mul31, i32* %cfra.addr, align 4, !dbg !9481
  %28 = load i32, i32* %fieldnr.addr, align 4, !dbg !9482
  %tobool32 = icmp ne i32 %28, 0, !dbg !9482
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !9484

if.then33:                                        ; preds = %if.end30
  %29 = load i32, i32* %cfra.addr, align 4, !dbg !9485
  %inc = add nsw i32 %29, 1, !dbg !9485
  store i32 %inc, i32* %cfra.addr, align 4, !dbg !9485
  br label %if.end34, !dbg !9486

if.end34:                                         ; preds = %if.then33, %if.end30
  %30 = load i32, i32* %cfra.addr, align 4, !dbg !9487
  %31 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9488
  %fie_ima35 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %31, i32 0, i32 5, !dbg !9489
  %32 = load i8, i8* %fie_ima35, align 8, !dbg !9489
  %conv36 = zext i8 %32 to i32, !dbg !9488
  %add37 = add nsw i32 %30, %conv36, !dbg !9490
  %sub38 = sub nsw i32 %add37, 2, !dbg !9491
  %33 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9492
  %fie_ima39 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %33, i32 0, i32 5, !dbg !9493
  %34 = load i8, i8* %fie_ima39, align 8, !dbg !9493
  %conv40 = zext i8 %34 to i32, !dbg !9492
  %div41 = sdiv i32 %sub38, %conv40, !dbg !9494
  store i32 %div41, i32* %framenr, align 4, !dbg !9495
  %35 = load i32, i32* %framenr, align 4, !dbg !9496
  %36 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9498
  %frames42 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %36, i32 0, i32 2, !dbg !9499
  %37 = load i32, i32* %frames42, align 4, !dbg !9499
  %cmp43 = icmp sgt i32 %35, %37, !dbg !9500
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !9501

if.then45:                                        ; preds = %if.end34
  %38 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9502
  %frames46 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %38, i32 0, i32 2, !dbg !9503
  %39 = load i32, i32* %frames46, align 4, !dbg !9503
  store i32 %39, i32* %framenr, align 4, !dbg !9504
  br label %if.end47, !dbg !9505

if.end47:                                         ; preds = %if.then45, %if.end34
  %40 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9506
  %cycl48 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %40, i32 0, i32 6, !dbg !9508
  %41 = load i8, i8* %cycl48, align 1, !dbg !9508
  %tobool49 = icmp ne i8 %41, 0, !dbg !9506
  br i1 %tobool49, label %if.then50, label %if.end59, !dbg !9509

if.then50:                                        ; preds = %if.end47
  %42 = load i32, i32* %framenr, align 4, !dbg !9510
  %43 = load i32, i32* %len, align 4, !dbg !9512
  %rem51 = srem i32 %42, %43, !dbg !9513
  store i32 %rem51, i32* %framenr, align 4, !dbg !9514
  br label %while.cond, !dbg !9515

while.cond:                                       ; preds = %while.body, %if.then50
  %44 = load i32, i32* %framenr, align 4, !dbg !9516
  %cmp52 = icmp slt i32 %44, 0, !dbg !9517
  br i1 %cmp52, label %while.body, label %while.end, !dbg !9515

while.body:                                       ; preds = %while.cond
  %45 = load i32, i32* %len, align 4, !dbg !9518
  %46 = load i32, i32* %framenr, align 4, !dbg !9519
  %add54 = add nsw i32 %46, %45, !dbg !9519
  store i32 %add54, i32* %framenr, align 4, !dbg !9519
  br label %while.cond, !dbg !9515, !llvm.loop !9520

while.end:                                        ; preds = %while.cond
  %47 = load i32, i32* %framenr, align 4, !dbg !9521
  %cmp55 = icmp eq i32 %47, 0, !dbg !9523
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !9524

if.then57:                                        ; preds = %while.end
  %48 = load i32, i32* %len, align 4, !dbg !9525
  store i32 %48, i32* %framenr, align 4, !dbg !9526
  br label %if.end58, !dbg !9527

if.end58:                                         ; preds = %if.then57, %while.end
  br label %if.end59, !dbg !9528

if.end59:                                         ; preds = %if.end58, %if.end47
  %49 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9529
  %offset = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %49, i32 0, i32 3, !dbg !9530
  %50 = load i32, i32* %offset, align 8, !dbg !9530
  %51 = load i32, i32* %framenr, align 4, !dbg !9531
  %add60 = add nsw i32 %51, %50, !dbg !9531
  store i32 %add60, i32* %framenr, align 4, !dbg !9531
  %52 = load i32, i32* %framenr, align 4, !dbg !9532
  store i32 %52, i32* %retval, align 4, !dbg !9533
  br label %return, !dbg !9533

return:                                           ; preds = %if.end59, %if.then2
  %53 = load i32, i32* %retval, align 4, !dbg !9534
  ret i32 %53, !dbg !9534
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_user_frame_calc(%struct.ImageUser* %iuser, i32 %cfra, i32 %fieldnr) #0 !dbg !9535 {
entry:
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %cfra.addr = alloca i32, align 4
  %fieldnr.addr = alloca i32, align 4
  %is_in_range = alloca i8, align 1
  %framenr = alloca i32, align 4
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !9538, metadata !DIExpression()), !dbg !9539
  store i32 %cfra, i32* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra.addr, metadata !9540, metadata !DIExpression()), !dbg !9541
  store i32 %fieldnr, i32* %fieldnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fieldnr.addr, metadata !9542, metadata !DIExpression()), !dbg !9543
  %0 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9544
  %tobool = icmp ne %struct.ImageUser* %0, null, !dbg !9544
  br i1 %tobool, label %if.then, label %if.end28, !dbg !9546

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %is_in_range, metadata !9547, metadata !DIExpression()), !dbg !9549
  call void @llvm.dbg.declare(metadata i32* %framenr, metadata !9550, metadata !DIExpression()), !dbg !9551
  %1 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9552
  %2 = load i32, i32* %cfra.addr, align 4, !dbg !9553
  %3 = load i32, i32* %fieldnr.addr, align 4, !dbg !9554
  %call = call i32 @BKE_image_user_frame_get(%struct.ImageUser* %1, i32 %2, i32 %3, i8* %is_in_range), !dbg !9555
  store i32 %call, i32* %framenr, align 4, !dbg !9551
  %4 = load i8, i8* %is_in_range, align 1, !dbg !9556
  %tobool1 = icmp ne i8 %4, 0, !dbg !9556
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !9558

if.then2:                                         ; preds = %if.then
  %5 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9559
  %flag = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %5, i32 0, i32 12, !dbg !9561
  %6 = load i16, i16* %flag, align 2, !dbg !9562
  %conv = sext i16 %6 to i32, !dbg !9562
  %or = or i32 %conv, 1024, !dbg !9562
  %conv3 = trunc i32 %or to i16, !dbg !9562
  store i16 %conv3, i16* %flag, align 2, !dbg !9562
  br label %if.end, !dbg !9563

if.else:                                          ; preds = %if.then
  %7 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9564
  %flag4 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %7, i32 0, i32 12, !dbg !9566
  %8 = load i16, i16* %flag4, align 2, !dbg !9567
  %conv5 = sext i16 %8 to i32, !dbg !9567
  %and = and i32 %conv5, -1025, !dbg !9567
  %conv6 = trunc i32 %and to i16, !dbg !9567
  store i16 %conv6, i16* %flag4, align 2, !dbg !9567
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %9 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9568
  %flag7 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %9, i32 0, i32 12, !dbg !9570
  %10 = load i16, i16* %flag7, align 2, !dbg !9570
  %conv8 = sext i16 %10 to i32, !dbg !9568
  %and9 = and i32 %conv8, 1, !dbg !9571
  %tobool10 = icmp ne i32 %and9, 0, !dbg !9571
  br i1 %tobool10, label %if.then11, label %if.end20, !dbg !9572

if.then11:                                        ; preds = %if.end
  %11 = load i32, i32* %framenr, align 4, !dbg !9573
  %12 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9575
  %framenr12 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %12, i32 0, i32 1, !dbg !9576
  %13 = load i32, i32* %framenr12, align 8, !dbg !9576
  %cmp = icmp ne i32 %11, %13, !dbg !9577
  br i1 %cmp, label %if.then14, label %if.end19, !dbg !9578

if.then14:                                        ; preds = %if.then11
  %14 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9579
  %flag15 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %14, i32 0, i32 12, !dbg !9580
  %15 = load i16, i16* %flag15, align 2, !dbg !9581
  %conv16 = sext i16 %15 to i32, !dbg !9581
  %or17 = or i32 %conv16, 2, !dbg !9581
  %conv18 = trunc i32 %or17 to i16, !dbg !9581
  store i16 %conv18, i16* %flag15, align 2, !dbg !9581
  br label %if.end19, !dbg !9579

if.end19:                                         ; preds = %if.then14, %if.then11
  br label %if.end20, !dbg !9576

if.end20:                                         ; preds = %if.end19, %if.end
  %16 = load i32, i32* %framenr, align 4, !dbg !9582
  %17 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9583
  %framenr21 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %17, i32 0, i32 1, !dbg !9584
  store i32 %16, i32* %framenr21, align 8, !dbg !9585
  %18 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9586
  %ok = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %18, i32 0, i32 7, !dbg !9588
  %19 = load i8, i8* %ok, align 2, !dbg !9588
  %conv22 = zext i8 %19 to i32, !dbg !9586
  %cmp23 = icmp eq i32 %conv22, 0, !dbg !9589
  br i1 %cmp23, label %if.then25, label %if.end27, !dbg !9590

if.then25:                                        ; preds = %if.end20
  %20 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9591
  %ok26 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %20, i32 0, i32 7, !dbg !9592
  store i8 1, i8* %ok26, align 2, !dbg !9593
  br label %if.end27, !dbg !9591

if.end27:                                         ; preds = %if.then25, %if.end20
  br label %if.end28, !dbg !9594

if.end28:                                         ; preds = %if.end27, %entry
  ret void, !dbg !9595
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_user_check_frame_calc(%struct.ImageUser* %iuser, i32 %cfra, i32 %fieldnr) #0 !dbg !9596 {
entry:
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %cfra.addr = alloca i32, align 4
  %fieldnr.addr = alloca i32, align 4
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !9597, metadata !DIExpression()), !dbg !9598
  store i32 %cfra, i32* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra.addr, metadata !9599, metadata !DIExpression()), !dbg !9600
  store i32 %fieldnr, i32* %fieldnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fieldnr.addr, metadata !9601, metadata !DIExpression()), !dbg !9602
  %0 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9603
  %flag = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %0, i32 0, i32 12, !dbg !9605
  %1 = load i16, i16* %flag, align 2, !dbg !9605
  %conv = sext i16 %1 to i32, !dbg !9603
  %and = and i32 %conv, 1, !dbg !9606
  %tobool = icmp ne i32 %and, 0, !dbg !9606
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !9607

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9608
  %flag1 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %2, i32 0, i32 12, !dbg !9609
  %3 = load i16, i16* %flag1, align 2, !dbg !9609
  %conv2 = sext i16 %3 to i32, !dbg !9608
  %and3 = and i32 %conv2, 8, !dbg !9610
  %tobool4 = icmp ne i32 %and3, 0, !dbg !9610
  br i1 %tobool4, label %if.then, label %if.end, !dbg !9611

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9612
  %5 = load i32, i32* %cfra.addr, align 4, !dbg !9614
  %6 = load i32, i32* %fieldnr.addr, align 4, !dbg !9615
  call void @BKE_image_user_frame_calc(%struct.ImageUser* %4, i32 %5, i32 %6), !dbg !9616
  %7 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9617
  %flag5 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %7, i32 0, i32 12, !dbg !9618
  %8 = load i16, i16* %flag5, align 2, !dbg !9619
  %conv6 = sext i16 %8 to i32, !dbg !9619
  %and7 = and i32 %conv6, -9, !dbg !9619
  %conv8 = trunc i32 %and7 to i16, !dbg !9619
  store i16 %conv8, i16* %flag5, align 2, !dbg !9619
  br label %if.end, !dbg !9620

if.end:                                           ; preds = %if.then, %lor.lhs.false
  ret void, !dbg !9621
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_update_frame(%struct.Main* %bmain, i32 %cfra) #0 !dbg !9622 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %cfra.addr = alloca i32, align 4
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !9625, metadata !DIExpression()), !dbg !9626
  store i32 %cfra, i32* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra.addr, metadata !9627, metadata !DIExpression()), !dbg !9628
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9629
  %1 = bitcast i32* %cfra.addr to i8*, !dbg !9630
  call void @BKE_image_walk_all_users(%struct.Main* %0, i8* %1, void (%struct.Image*, %struct.ImageUser*, i8*)* @image_update_frame), !dbg !9631
  ret void, !dbg !9632
}

; Function Attrs: noinline nounwind uwtable
define internal void @image_update_frame(%struct.Image* %UNUSED_ima, %struct.ImageUser* %iuser, i8* %customdata) #0 !dbg !9633 {
entry:
  %UNUSED_ima.addr = alloca %struct.Image*, align 8
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %customdata.addr = alloca i8*, align 8
  %cfra = alloca i32, align 4
  store %struct.Image* %UNUSED_ima, %struct.Image** %UNUSED_ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %UNUSED_ima.addr, metadata !9637, metadata !DIExpression()), !dbg !9638
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !9639, metadata !DIExpression()), !dbg !9640
  store i8* %customdata, i8** %customdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %customdata.addr, metadata !9641, metadata !DIExpression()), !dbg !9642
  call void @llvm.dbg.declare(metadata i32* %cfra, metadata !9643, metadata !DIExpression()), !dbg !9644
  %0 = load i8*, i8** %customdata.addr, align 8, !dbg !9645
  %1 = bitcast i8* %0 to i32*, !dbg !9646
  %2 = load i32, i32* %1, align 4, !dbg !9647
  store i32 %2, i32* %cfra, align 4, !dbg !9644
  %3 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9648
  %4 = load i32, i32* %cfra, align 4, !dbg !9649
  call void @BKE_image_user_check_frame_calc(%struct.ImageUser* %3, i32 %4, i32 0), !dbg !9650
  ret void, !dbg !9651
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_user_file_path(%struct.ImageUser* %iuser, %struct.Image* %ima, i8* %filepath) #0 !dbg !9652 {
entry:
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %filepath.addr = alloca i8*, align 8
  %head = alloca [1024 x i8], align 16
  %tail = alloca [1024 x i8], align 16
  %numlen = alloca i16, align 2
  %frame = alloca i32, align 4
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !9655, metadata !DIExpression()), !dbg !9656
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !9657, metadata !DIExpression()), !dbg !9658
  store i8* %filepath, i8** %filepath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filepath.addr, metadata !9659, metadata !DIExpression()), !dbg !9660
  %0 = load i8*, i8** %filepath.addr, align 8, !dbg !9661
  %1 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9662
  %name = getelementptr inbounds %struct.Image, %struct.Image* %1, i32 0, i32 1, !dbg !9663
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !9662
  %call = call i8* @BLI_strncpy(i8* %0, i8* %arraydecay, i64 1024), !dbg !9664
  %2 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9665
  %source = getelementptr inbounds %struct.Image, %struct.Image* %2, i32 0, i32 11, !dbg !9667
  %3 = load i16, i16* %source, align 8, !dbg !9667
  %conv = sext i16 %3 to i32, !dbg !9665
  %cmp = icmp eq i32 %conv, 2, !dbg !9668
  br i1 %cmp, label %if.then, label %if.end, !dbg !9669

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1024 x i8]* %head, metadata !9670, metadata !DIExpression()), !dbg !9672
  call void @llvm.dbg.declare(metadata [1024 x i8]* %tail, metadata !9673, metadata !DIExpression()), !dbg !9674
  call void @llvm.dbg.declare(metadata i16* %numlen, metadata !9675, metadata !DIExpression()), !dbg !9676
  call void @llvm.dbg.declare(metadata i32* %frame, metadata !9677, metadata !DIExpression()), !dbg !9678
  %4 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9679
  %tobool = icmp ne %struct.ImageUser* %4, null, !dbg !9679
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9679

cond.true:                                        ; preds = %if.then
  %5 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9680
  %framenr = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %5, i32 0, i32 1, !dbg !9681
  %6 = load i32, i32* %framenr, align 8, !dbg !9681
  br label %cond.end, !dbg !9679

cond.false:                                       ; preds = %if.then
  %7 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9682
  %lastframe = getelementptr inbounds %struct.Image, %struct.Image* %7, i32 0, i32 13, !dbg !9683
  %8 = load i32, i32* %lastframe, align 4, !dbg !9683
  br label %cond.end, !dbg !9679

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %6, %cond.true ], [ %8, %cond.false ], !dbg !9679
  store i32 %cond, i32* %frame, align 4, !dbg !9678
  %9 = load i8*, i8** %filepath.addr, align 8, !dbg !9684
  %arraydecay2 = getelementptr inbounds [1024 x i8], [1024 x i8]* %head, i64 0, i64 0, !dbg !9685
  %arraydecay3 = getelementptr inbounds [1024 x i8], [1024 x i8]* %tail, i64 0, i64 0, !dbg !9686
  %call4 = call i32 @BLI_stringdec(i8* %9, i8* %arraydecay2, i8* %arraydecay3, i16* %numlen), !dbg !9687
  %10 = load i8*, i8** %filepath.addr, align 8, !dbg !9688
  %arraydecay5 = getelementptr inbounds [1024 x i8], [1024 x i8]* %head, i64 0, i64 0, !dbg !9689
  %arraydecay6 = getelementptr inbounds [1024 x i8], [1024 x i8]* %tail, i64 0, i64 0, !dbg !9690
  %11 = load i16, i16* %numlen, align 2, !dbg !9691
  %12 = load i32, i32* %frame, align 4, !dbg !9692
  call void @BLI_stringenc(i8* %10, i8* %arraydecay5, i8* %arraydecay6, i16 zeroext %11, i32 %12), !dbg !9693
  br label %if.end, !dbg !9694

if.end:                                           ; preds = %cond.end, %entry
  %13 = load i8*, i8** %filepath.addr, align 8, !dbg !9695
  %14 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9696
  %id = getelementptr inbounds %struct.Image, %struct.Image* %14, i32 0, i32 0, !dbg !9696
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !9696
  %15 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !9696
  %tobool7 = icmp ne %struct.Library* %15, null, !dbg !9696
  br i1 %tobool7, label %cond.true8, label %cond.false13, !dbg !9696

cond.true8:                                       ; preds = %if.end
  %16 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !9696
  %id9 = getelementptr inbounds %struct.Image, %struct.Image* %16, i32 0, i32 0, !dbg !9696
  %lib10 = getelementptr inbounds %struct.ID, %struct.ID* %id9, i32 0, i32 3, !dbg !9696
  %17 = load %struct.Library*, %struct.Library** %lib10, align 8, !dbg !9696
  %filepath11 = getelementptr inbounds %struct.Library, %struct.Library* %17, i32 0, i32 4, !dbg !9696
  %arraydecay12 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath11, i64 0, i64 0, !dbg !9696
  br label %cond.end16, !dbg !9696

cond.false13:                                     ; preds = %if.end
  %18 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !9696
  %name14 = getelementptr inbounds %struct.Main, %struct.Main* %18, i32 0, i32 2, !dbg !9696
  %arraydecay15 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name14, i64 0, i64 0, !dbg !9696
  br label %cond.end16, !dbg !9696

cond.end16:                                       ; preds = %cond.false13, %cond.true8
  %cond17 = phi i8* [ %arraydecay12, %cond.true8 ], [ %arraydecay15, %cond.false13 ], !dbg !9696
  %call18 = call zeroext i8 @BLI_path_abs(i8* %13, i8* %cond17), !dbg !9697
  ret void, !dbg !9698
}

declare dso_local i32 @BLI_stringdec(i8*, i8*, i8*, i16*) #1

declare dso_local void @BLI_stringenc(i8*, i8*, i8*, i16 zeroext, i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_image_has_alpha(%struct.Image* %image) #0 !dbg !9699 {
entry:
  %retval = alloca i8, align 1
  %image.addr = alloca %struct.Image*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %lock = alloca i8*, align 8
  %planes = alloca i32, align 4
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !9702, metadata !DIExpression()), !dbg !9703
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !9704, metadata !DIExpression()), !dbg !9705
  call void @llvm.dbg.declare(metadata i8** %lock, metadata !9706, metadata !DIExpression()), !dbg !9707
  call void @llvm.dbg.declare(metadata i32* %planes, metadata !9708, metadata !DIExpression()), !dbg !9709
  %0 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !9710
  %call = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %0, %struct.ImageUser* null, i8** %lock), !dbg !9711
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !9712
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9713
  %tobool = icmp ne %struct.ImBuf* %1, null, !dbg !9713
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9713

cond.true:                                        ; preds = %entry
  %2 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9714
  %planes1 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %2, i32 0, i32 4, !dbg !9715
  %3 = load i8, i8* %planes1, align 8, !dbg !9715
  %conv = zext i8 %3 to i32, !dbg !9714
  br label %cond.end, !dbg !9713

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9713

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 0, %cond.false ], !dbg !9713
  store i32 %cond, i32* %planes, align 4, !dbg !9716
  %4 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !9717
  %5 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9718
  %6 = load i8*, i8** %lock, align 8, !dbg !9719
  call void @BKE_image_release_ibuf(%struct.Image* %4, %struct.ImBuf* %5, i8* %6), !dbg !9720
  %7 = load i32, i32* %planes, align 4, !dbg !9721
  %cmp = icmp eq i32 %7, 32, !dbg !9723
  br i1 %cmp, label %if.then, label %if.else, !dbg !9724

if.then:                                          ; preds = %cond.end
  store i8 1, i8* %retval, align 1, !dbg !9725
  br label %return, !dbg !9725

if.else:                                          ; preds = %cond.end
  store i8 0, i8* %retval, align 1, !dbg !9726
  br label %return, !dbg !9726

return:                                           ; preds = %if.else, %if.then
  %8 = load i8, i8* %retval, align 1, !dbg !9727
  ret i8 %8, !dbg !9727
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_get_size(%struct.Image* %image, %struct.ImageUser* %iuser, i32* %width, i32* %height) #0 !dbg !9728 {
entry:
  %image.addr = alloca %struct.Image*, align 8
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %width.addr = alloca i32*, align 8
  %height.addr = alloca i32*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %lock = alloca i8*, align 8
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !9729, metadata !DIExpression()), !dbg !9730
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !9731, metadata !DIExpression()), !dbg !9732
  store i32* %width, i32** %width.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %width.addr, metadata !9733, metadata !DIExpression()), !dbg !9734
  store i32* %height, i32** %height.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %height.addr, metadata !9735, metadata !DIExpression()), !dbg !9736
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !9737, metadata !DIExpression()), !dbg !9738
  store %struct.ImBuf* null, %struct.ImBuf** %ibuf, align 8, !dbg !9738
  call void @llvm.dbg.declare(metadata i8** %lock, metadata !9739, metadata !DIExpression()), !dbg !9740
  %0 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !9741
  %1 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9742
  %call = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %0, %struct.ImageUser* %1, i8** %lock), !dbg !9743
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !9744
  %2 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9745
  %tobool = icmp ne %struct.ImBuf* %2, null, !dbg !9745
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !9747

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9748
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %3, i32 0, i32 2, !dbg !9749
  %4 = load i32, i32* %x, align 8, !dbg !9749
  %cmp = icmp sgt i32 %4, 0, !dbg !9750
  br i1 %cmp, label %land.lhs.true1, label %if.else, !dbg !9751

land.lhs.true1:                                   ; preds = %land.lhs.true
  %5 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9752
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %5, i32 0, i32 3, !dbg !9753
  %6 = load i32, i32* %y, align 4, !dbg !9753
  %cmp2 = icmp sgt i32 %6, 0, !dbg !9754
  br i1 %cmp2, label %if.then, label %if.else, !dbg !9755

if.then:                                          ; preds = %land.lhs.true1
  %7 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9756
  %x3 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %7, i32 0, i32 2, !dbg !9758
  %8 = load i32, i32* %x3, align 8, !dbg !9758
  %9 = load i32*, i32** %width.addr, align 8, !dbg !9759
  store i32 %8, i32* %9, align 4, !dbg !9760
  %10 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9761
  %y4 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %10, i32 0, i32 3, !dbg !9762
  %11 = load i32, i32* %y4, align 4, !dbg !9762
  %12 = load i32*, i32** %height.addr, align 8, !dbg !9763
  store i32 %11, i32* %12, align 4, !dbg !9764
  br label %if.end, !dbg !9765

if.else:                                          ; preds = %land.lhs.true1, %land.lhs.true, %entry
  %13 = load i32*, i32** %width.addr, align 8, !dbg !9766
  store i32 256, i32* %13, align 4, !dbg !9768
  %14 = load i32*, i32** %height.addr, align 8, !dbg !9769
  store i32 256, i32* %14, align 4, !dbg !9770
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !9771
  %16 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9772
  %17 = load i8*, i8** %lock, align 8, !dbg !9773
  call void @BKE_image_release_ibuf(%struct.Image* %15, %struct.ImBuf* %16, i8* %17), !dbg !9774
  ret void, !dbg !9775
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_get_size_fl(%struct.Image* %image, %struct.ImageUser* %iuser, float* %size) #0 !dbg !9776 {
entry:
  %image.addr = alloca %struct.Image*, align 8
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %size.addr = alloca float*, align 8
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !9779, metadata !DIExpression()), !dbg !9780
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !9781, metadata !DIExpression()), !dbg !9782
  store float* %size, float** %size.addr, align 8
  call void @llvm.dbg.declare(metadata float** %size.addr, metadata !9783, metadata !DIExpression()), !dbg !9784
  call void @llvm.dbg.declare(metadata i32* %width, metadata !9785, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.declare(metadata i32* %height, metadata !9787, metadata !DIExpression()), !dbg !9788
  %0 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !9789
  %1 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !9790
  call void @BKE_image_get_size(%struct.Image* %0, %struct.ImageUser* %1, i32* %width, i32* %height), !dbg !9791
  %2 = load i32, i32* %width, align 4, !dbg !9792
  %conv = sitofp i32 %2 to float, !dbg !9793
  %3 = load float*, float** %size.addr, align 8, !dbg !9794
  %arrayidx = getelementptr inbounds float, float* %3, i64 0, !dbg !9794
  store float %conv, float* %arrayidx, align 4, !dbg !9795
  %4 = load i32, i32* %height, align 4, !dbg !9796
  %conv1 = sitofp i32 %4 to float, !dbg !9797
  %5 = load float*, float** %size.addr, align 8, !dbg !9798
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1, !dbg !9798
  store float %conv1, float* %arrayidx2, align 4, !dbg !9799
  ret void, !dbg !9800
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_get_aspect(%struct.Image* %image, float* %aspx, float* %aspy) #0 !dbg !9801 {
entry:
  %image.addr = alloca %struct.Image*, align 8
  %aspx.addr = alloca float*, align 8
  %aspy.addr = alloca float*, align 8
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !9804, metadata !DIExpression()), !dbg !9805
  store float* %aspx, float** %aspx.addr, align 8
  call void @llvm.dbg.declare(metadata float** %aspx.addr, metadata !9806, metadata !DIExpression()), !dbg !9807
  store float* %aspy, float** %aspy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %aspy.addr, metadata !9808, metadata !DIExpression()), !dbg !9809
  %0 = load float*, float** %aspx.addr, align 8, !dbg !9810
  store float 1.000000e+00, float* %0, align 4, !dbg !9811
  %1 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !9812
  %tobool = icmp ne %struct.Image* %1, null, !dbg !9812
  br i1 %tobool, label %if.then, label %if.else, !dbg !9814

if.then:                                          ; preds = %entry
  %2 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !9815
  %aspy1 = getelementptr inbounds %struct.Image, %struct.Image* %2, i32 0, i32 35, !dbg !9816
  %3 = load float, float* %aspy1, align 4, !dbg !9816
  %4 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !9817
  %aspx2 = getelementptr inbounds %struct.Image, %struct.Image* %4, i32 0, i32 34, !dbg !9818
  %5 = load float, float* %aspx2, align 8, !dbg !9818
  %div = fdiv float %3, %5, !dbg !9819
  %6 = load float*, float** %aspy.addr, align 8, !dbg !9820
  store float %div, float* %6, align 4, !dbg !9821
  br label %if.end, !dbg !9822

if.else:                                          ; preds = %entry
  %7 = load float*, float** %aspy.addr, align 8, !dbg !9823
  store float 1.000000e+00, float* %7, align 4, !dbg !9824
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9825
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BKE_image_get_pixels_for_frame(%struct.Image* %image, i32 %frame) #0 !dbg !9826 {
entry:
  %retval = alloca i8*, align 8
  %image.addr = alloca %struct.Image*, align 8
  %frame.addr = alloca i32, align 4
  %iuser = alloca %struct.ImageUser, align 8
  %lock = alloca i8*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %pixels = alloca i8*, align 8
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !9829, metadata !DIExpression()), !dbg !9830
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !9831, metadata !DIExpression()), !dbg !9832
  call void @llvm.dbg.declare(metadata %struct.ImageUser* %iuser, metadata !9833, metadata !DIExpression()), !dbg !9834
  %0 = bitcast %struct.ImageUser* %iuser to i8*, !dbg !9834
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 40, i1 false), !dbg !9834
  call void @llvm.dbg.declare(metadata i8** %lock, metadata !9835, metadata !DIExpression()), !dbg !9836
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !9837, metadata !DIExpression()), !dbg !9838
  call void @llvm.dbg.declare(metadata i8** %pixels, metadata !9839, metadata !DIExpression()), !dbg !9840
  store i8* null, i8** %pixels, align 8, !dbg !9840
  %1 = load i32, i32* %frame.addr, align 4, !dbg !9841
  %framenr = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %iuser, i32 0, i32 1, !dbg !9842
  store i32 %1, i32* %framenr, align 8, !dbg !9843
  %ok = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %iuser, i32 0, i32 7, !dbg !9844
  store i8 1, i8* %ok, align 2, !dbg !9845
  %2 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !9846
  %call = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %2, %struct.ImageUser* %iuser, i8** %lock), !dbg !9847
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !9848
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9849
  %tobool = icmp ne %struct.ImBuf* %3, null, !dbg !9849
  br i1 %tobool, label %if.then, label %if.end4, !dbg !9851

if.then:                                          ; preds = %entry
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9852
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %4, i32 0, i32 8, !dbg !9854
  %5 = load i32*, i32** %rect, align 8, !dbg !9854
  %6 = bitcast i32* %5 to i8*, !dbg !9855
  store i8* %6, i8** %pixels, align 8, !dbg !9856
  %7 = load i8*, i8** %pixels, align 8, !dbg !9857
  %tobool1 = icmp ne i8* %7, null, !dbg !9857
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !9859

if.then2:                                         ; preds = %if.then
  %8 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !9860
  %9 = load i8*, i8** %pixels, align 8, !dbg !9861
  %call3 = call i8* %8(i8* %9), !dbg !9860
  store i8* %call3, i8** %pixels, align 8, !dbg !9862
  br label %if.end, !dbg !9863

if.end:                                           ; preds = %if.then2, %if.then
  %10 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !9864
  %11 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9865
  %12 = load i8*, i8** %lock, align 8, !dbg !9866
  call void @BKE_image_release_ibuf(%struct.Image* %10, %struct.ImBuf* %11, i8* %12), !dbg !9867
  br label %if.end4, !dbg !9868

if.end4:                                          ; preds = %if.end, %entry
  %13 = load i8*, i8** %pixels, align 8, !dbg !9869
  %tobool5 = icmp ne i8* %13, null, !dbg !9869
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !9871

if.then6:                                         ; preds = %if.end4
  store i8* null, i8** %retval, align 8, !dbg !9872
  br label %return, !dbg !9872

if.end7:                                          ; preds = %if.end4
  %14 = load i8*, i8** %pixels, align 8, !dbg !9873
  store i8* %14, i8** %retval, align 8, !dbg !9874
  br label %return, !dbg !9874

return:                                           ; preds = %if.end7, %if.then6
  %15 = load i8*, i8** %retval, align 8, !dbg !9875
  ret i8* %15, !dbg !9875
}

; Function Attrs: noinline nounwind uwtable
define dso_local float* @BKE_image_get_float_pixels_for_frame(%struct.Image* %image, i32 %frame) #0 !dbg !9876 {
entry:
  %retval = alloca float*, align 8
  %image.addr = alloca %struct.Image*, align 8
  %frame.addr = alloca i32, align 4
  %iuser = alloca %struct.ImageUser, align 8
  %lock = alloca i8*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %pixels = alloca float*, align 8
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !9879, metadata !DIExpression()), !dbg !9880
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !9881, metadata !DIExpression()), !dbg !9882
  call void @llvm.dbg.declare(metadata %struct.ImageUser* %iuser, metadata !9883, metadata !DIExpression()), !dbg !9884
  %0 = bitcast %struct.ImageUser* %iuser to i8*, !dbg !9884
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 40, i1 false), !dbg !9884
  call void @llvm.dbg.declare(metadata i8** %lock, metadata !9885, metadata !DIExpression()), !dbg !9886
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !9887, metadata !DIExpression()), !dbg !9888
  call void @llvm.dbg.declare(metadata float** %pixels, metadata !9889, metadata !DIExpression()), !dbg !9890
  store float* null, float** %pixels, align 8, !dbg !9890
  %1 = load i32, i32* %frame.addr, align 4, !dbg !9891
  %framenr = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %iuser, i32 0, i32 1, !dbg !9892
  store i32 %1, i32* %framenr, align 8, !dbg !9893
  %ok = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %iuser, i32 0, i32 7, !dbg !9894
  store i8 1, i8* %ok, align 2, !dbg !9895
  %2 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !9896
  %call = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %2, %struct.ImageUser* %iuser, i8** %lock), !dbg !9897
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !9898
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9899
  %tobool = icmp ne %struct.ImBuf* %3, null, !dbg !9899
  br i1 %tobool, label %if.then, label %if.end4, !dbg !9901

if.then:                                          ; preds = %entry
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9902
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %4, i32 0, i32 9, !dbg !9904
  %5 = load float*, float** %rect_float, align 8, !dbg !9904
  store float* %5, float** %pixels, align 8, !dbg !9905
  %6 = load float*, float** %pixels, align 8, !dbg !9906
  %tobool1 = icmp ne float* %6, null, !dbg !9906
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !9908

if.then2:                                         ; preds = %if.then
  %7 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !9909
  %8 = load float*, float** %pixels, align 8, !dbg !9910
  %9 = bitcast float* %8 to i8*, !dbg !9910
  %call3 = call i8* %7(i8* %9), !dbg !9909
  %10 = bitcast i8* %call3 to float*, !dbg !9909
  store float* %10, float** %pixels, align 8, !dbg !9911
  br label %if.end, !dbg !9912

if.end:                                           ; preds = %if.then2, %if.then
  %11 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !9913
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9914
  %13 = load i8*, i8** %lock, align 8, !dbg !9915
  call void @BKE_image_release_ibuf(%struct.Image* %11, %struct.ImBuf* %12, i8* %13), !dbg !9916
  br label %if.end4, !dbg !9917

if.end4:                                          ; preds = %if.end, %entry
  %14 = load float*, float** %pixels, align 8, !dbg !9918
  %tobool5 = icmp ne float* %14, null, !dbg !9918
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !9920

if.then6:                                         ; preds = %if.end4
  store float* null, float** %retval, align 8, !dbg !9921
  br label %return, !dbg !9921

if.end7:                                          ; preds = %if.end4
  %15 = load float*, float** %pixels, align 8, !dbg !9922
  store float* %15, float** %retval, align 8, !dbg !9923
  br label %return, !dbg !9923

return:                                           ; preds = %if.end7, %if.then6
  %16 = load float*, float** %retval, align 8, !dbg !9924
  ret float* %16, !dbg !9924
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_image_sequence_guess_offset(%struct.Image* %image) #0 !dbg !9925 {
entry:
  %image.addr = alloca %struct.Image*, align 8
  %numlen = alloca i16, align 2
  %head = alloca [1024 x i8], align 16
  %tail = alloca [1024 x i8], align 16
  %num = alloca [1024 x i8], align 16
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !9928, metadata !DIExpression()), !dbg !9929
  call void @llvm.dbg.declare(metadata i16* %numlen, metadata !9930, metadata !DIExpression()), !dbg !9931
  call void @llvm.dbg.declare(metadata [1024 x i8]* %head, metadata !9932, metadata !DIExpression()), !dbg !9933
  call void @llvm.dbg.declare(metadata [1024 x i8]* %tail, metadata !9934, metadata !DIExpression()), !dbg !9935
  call void @llvm.dbg.declare(metadata [1024 x i8]* %num, metadata !9936, metadata !DIExpression()), !dbg !9937
  %0 = bitcast [1024 x i8]* %num to i8*, !dbg !9937
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 1024, i1 false), !dbg !9937
  %1 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !9938
  %name = getelementptr inbounds %struct.Image, %struct.Image* %1, i32 0, i32 1, !dbg !9939
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !9938
  %arraydecay1 = getelementptr inbounds [1024 x i8], [1024 x i8]* %head, i64 0, i64 0, !dbg !9940
  %arraydecay2 = getelementptr inbounds [1024 x i8], [1024 x i8]* %tail, i64 0, i64 0, !dbg !9941
  %call = call i32 @BLI_stringdec(i8* %arraydecay, i8* %arraydecay1, i8* %arraydecay2, i16* %numlen), !dbg !9942
  %arraydecay3 = getelementptr inbounds [1024 x i8], [1024 x i8]* %num, i64 0, i64 0, !dbg !9943
  %2 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !9944
  %name4 = getelementptr inbounds %struct.Image, %struct.Image* %2, i32 0, i32 1, !dbg !9945
  %arraydecay5 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name4, i64 0, i64 0, !dbg !9944
  %arraydecay6 = getelementptr inbounds [1024 x i8], [1024 x i8]* %head, i64 0, i64 0, !dbg !9946
  %call7 = call i64 @strlen(i8* %arraydecay6) #6, !dbg !9947
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay5, i64 %call7, !dbg !9948
  %3 = load i16, i16* %numlen, align 2, !dbg !9949
  %conv = zext i16 %3 to i32, !dbg !9949
  %add = add nsw i32 %conv, 1, !dbg !9950
  %conv8 = sext i32 %add to i64, !dbg !9949
  %call9 = call i8* @BLI_strncpy(i8* %arraydecay3, i8* %add.ptr, i64 %conv8), !dbg !9951
  %arraydecay10 = getelementptr inbounds [1024 x i8], [1024 x i8]* %num, i64 0, i64 0, !dbg !9952
  %call11 = call i32 @atoi(i8* %arraydecay10) #6, !dbg !9953
  ret i32 %call11, !dbg !9954
}

; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_image_is_dirty(%struct.Image* %image) #0 !dbg !9955 {
entry:
  %image.addr = alloca %struct.Image*, align 8
  %is_dirty = alloca i8, align 1
  %iter = alloca %struct.MovieCacheIter*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !9956, metadata !DIExpression()), !dbg !9957
  call void @llvm.dbg.declare(metadata i8* %is_dirty, metadata !9958, metadata !DIExpression()), !dbg !9959
  store i8 0, i8* %is_dirty, align 1, !dbg !9959
  call void @BLI_spin_lock(i32* @image_spin), !dbg !9960
  %0 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !9961
  %cache = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 2, !dbg !9963
  %1 = load %struct.MovieCache*, %struct.MovieCache** %cache, align 8, !dbg !9963
  %cmp = icmp ne %struct.MovieCache* %1, null, !dbg !9964
  br i1 %cmp, label %if.then, label %if.end6, !dbg !9965

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MovieCacheIter** %iter, metadata !9966, metadata !DIExpression()), !dbg !9968
  %2 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !9969
  %cache1 = getelementptr inbounds %struct.Image, %struct.Image* %2, i32 0, i32 2, !dbg !9970
  %3 = load %struct.MovieCache*, %struct.MovieCache** %cache1, align 8, !dbg !9970
  %call = call %struct.MovieCacheIter* @IMB_moviecacheIter_new(%struct.MovieCache* %3), !dbg !9971
  store %struct.MovieCacheIter* %call, %struct.MovieCacheIter** %iter, align 8, !dbg !9968
  br label %while.cond, !dbg !9972

while.cond:                                       ; preds = %if.end, %if.then
  %4 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !9973
  %call2 = call zeroext i8 @IMB_moviecacheIter_done(%struct.MovieCacheIter* %4), !dbg !9974
  %tobool = icmp ne i8 %call2, 0, !dbg !9975
  %lnot = xor i1 %tobool, true, !dbg !9975
  br i1 %lnot, label %while.body, label %while.end, !dbg !9972

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !9976, metadata !DIExpression()), !dbg !9978
  %5 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !9979
  %call3 = call %struct.ImBuf* @IMB_moviecacheIter_getImBuf(%struct.MovieCacheIter* %5), !dbg !9980
  store %struct.ImBuf* %call3, %struct.ImBuf** %ibuf, align 8, !dbg !9978
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9981
  %userflags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %6, i32 0, i32 23, !dbg !9983
  %7 = load i32, i32* %userflags, align 4, !dbg !9983
  %and = and i32 %7, 2, !dbg !9984
  %tobool4 = icmp ne i32 %and, 0, !dbg !9984
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !9985

if.then5:                                         ; preds = %while.body
  store i8 1, i8* %is_dirty, align 1, !dbg !9986
  br label %while.end, !dbg !9988

if.end:                                           ; preds = %while.body
  %8 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !9989
  call void @IMB_moviecacheIter_step(%struct.MovieCacheIter* %8), !dbg !9990
  br label %while.cond, !dbg !9972, !llvm.loop !9991

while.end:                                        ; preds = %if.then5, %while.cond
  %9 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !9993
  call void @IMB_moviecacheIter_free(%struct.MovieCacheIter* %9), !dbg !9994
  br label %if.end6, !dbg !9995

if.end6:                                          ; preds = %while.end, %entry
  call void @BLI_spin_unlock(i32* @image_spin), !dbg !9996
  %10 = load i8, i8* %is_dirty, align 1, !dbg !9997
  ret i8 %10, !dbg !9998
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_image_file_format_set(%struct.Image* %image, i32 %ftype) #0 !dbg !9999 {
entry:
  %image.addr = alloca %struct.Image*, align 8
  %ftype.addr = alloca i32, align 4
  %iter = alloca %struct.MovieCacheIter*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !10000, metadata !DIExpression()), !dbg !10001
  store i32 %ftype, i32* %ftype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ftype.addr, metadata !10002, metadata !DIExpression()), !dbg !10003
  call void @BLI_spin_lock(i32* @image_spin), !dbg !10004
  %0 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !10005
  %cache = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 2, !dbg !10007
  %1 = load %struct.MovieCache*, %struct.MovieCache** %cache, align 8, !dbg !10007
  %cmp = icmp ne %struct.MovieCache* %1, null, !dbg !10008
  br i1 %cmp, label %if.then, label %if.end, !dbg !10009

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MovieCacheIter** %iter, metadata !10010, metadata !DIExpression()), !dbg !10012
  %2 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !10013
  %cache1 = getelementptr inbounds %struct.Image, %struct.Image* %2, i32 0, i32 2, !dbg !10014
  %3 = load %struct.MovieCache*, %struct.MovieCache** %cache1, align 8, !dbg !10014
  %call = call %struct.MovieCacheIter* @IMB_moviecacheIter_new(%struct.MovieCache* %3), !dbg !10015
  store %struct.MovieCacheIter* %call, %struct.MovieCacheIter** %iter, align 8, !dbg !10012
  br label %while.cond, !dbg !10016

while.cond:                                       ; preds = %while.body, %if.then
  %4 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !10017
  %call2 = call zeroext i8 @IMB_moviecacheIter_done(%struct.MovieCacheIter* %4), !dbg !10018
  %tobool = icmp ne i8 %call2, 0, !dbg !10019
  %lnot = xor i1 %tobool, true, !dbg !10019
  br i1 %lnot, label %while.body, label %while.end, !dbg !10016

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !10020, metadata !DIExpression()), !dbg !10022
  %5 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !10023
  %call3 = call %struct.ImBuf* @IMB_moviecacheIter_getImBuf(%struct.MovieCacheIter* %5), !dbg !10024
  store %struct.ImBuf* %call3, %struct.ImBuf** %ibuf, align 8, !dbg !10022
  %6 = load i32, i32* %ftype.addr, align 4, !dbg !10025
  %7 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10026
  %ftype4 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %7, i32 0, i32 26, !dbg !10027
  store i32 %6, i32* %ftype4, align 8, !dbg !10028
  %8 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !10029
  call void @IMB_moviecacheIter_step(%struct.MovieCacheIter* %8), !dbg !10030
  br label %while.cond, !dbg !10016, !llvm.loop !10031

while.end:                                        ; preds = %while.cond
  %9 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !10033
  call void @IMB_moviecacheIter_free(%struct.MovieCacheIter* %9), !dbg !10034
  br label %if.end, !dbg !10035

if.end:                                           ; preds = %while.end, %entry
  call void @BLI_spin_unlock(i32* @image_spin), !dbg !10036
  ret void, !dbg !10037
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_image_has_loaded_ibuf(%struct.Image* %image) #0 !dbg !10038 {
entry:
  %image.addr = alloca %struct.Image*, align 8
  %has_loaded_ibuf = alloca i8, align 1
  %iter = alloca %struct.MovieCacheIter*, align 8
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !10039, metadata !DIExpression()), !dbg !10040
  call void @llvm.dbg.declare(metadata i8* %has_loaded_ibuf, metadata !10041, metadata !DIExpression()), !dbg !10042
  store i8 0, i8* %has_loaded_ibuf, align 1, !dbg !10042
  call void @BLI_spin_lock(i32* @image_spin), !dbg !10043
  %0 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !10044
  %cache = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 2, !dbg !10046
  %1 = load %struct.MovieCache*, %struct.MovieCache** %cache, align 8, !dbg !10046
  %cmp = icmp ne %struct.MovieCache* %1, null, !dbg !10047
  br i1 %cmp, label %if.then, label %if.end, !dbg !10048

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MovieCacheIter** %iter, metadata !10049, metadata !DIExpression()), !dbg !10051
  %2 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !10052
  %cache1 = getelementptr inbounds %struct.Image, %struct.Image* %2, i32 0, i32 2, !dbg !10053
  %3 = load %struct.MovieCache*, %struct.MovieCache** %cache1, align 8, !dbg !10053
  %call = call %struct.MovieCacheIter* @IMB_moviecacheIter_new(%struct.MovieCache* %3), !dbg !10054
  store %struct.MovieCacheIter* %call, %struct.MovieCacheIter** %iter, align 8, !dbg !10051
  br label %while.cond, !dbg !10055

while.cond:                                       ; preds = %if.then
  %4 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !10056
  %call2 = call zeroext i8 @IMB_moviecacheIter_done(%struct.MovieCacheIter* %4), !dbg !10057
  %tobool = icmp ne i8 %call2, 0, !dbg !10058
  %lnot = xor i1 %tobool, true, !dbg !10058
  br i1 %lnot, label %while.body, label %while.end, !dbg !10055

while.body:                                       ; preds = %while.cond
  store i8 1, i8* %has_loaded_ibuf, align 1, !dbg !10059
  br label %while.end, !dbg !10061

while.end:                                        ; preds = %while.body, %while.cond
  %5 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !10062
  call void @IMB_moviecacheIter_free(%struct.MovieCacheIter* %5), !dbg !10063
  br label %if.end, !dbg !10064

if.end:                                           ; preds = %while.end, %entry
  call void @BLI_spin_unlock(i32* @image_spin), !dbg !10065
  %6 = load i8, i8* %has_loaded_ibuf, align 1, !dbg !10066
  ret i8 %6, !dbg !10067
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ImBuf* @BKE_image_get_ibuf_with_name(%struct.Image* %image, i8* %name) #0 !dbg !10068 {
entry:
  %image.addr = alloca %struct.Image*, align 8
  %name.addr = alloca i8*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %iter = alloca %struct.MovieCacheIter*, align 8
  %current_ibuf = alloca %struct.ImBuf*, align 8
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !10071, metadata !DIExpression()), !dbg !10072
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10073, metadata !DIExpression()), !dbg !10074
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !10075, metadata !DIExpression()), !dbg !10076
  store %struct.ImBuf* null, %struct.ImBuf** %ibuf, align 8, !dbg !10076
  call void @BLI_spin_lock(i32* @image_spin), !dbg !10077
  %0 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !10078
  %cache = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 2, !dbg !10080
  %1 = load %struct.MovieCache*, %struct.MovieCache** %cache, align 8, !dbg !10080
  %cmp = icmp ne %struct.MovieCache* %1, null, !dbg !10081
  br i1 %cmp, label %if.then, label %if.end8, !dbg !10082

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MovieCacheIter** %iter, metadata !10083, metadata !DIExpression()), !dbg !10085
  %2 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !10086
  %cache1 = getelementptr inbounds %struct.Image, %struct.Image* %2, i32 0, i32 2, !dbg !10087
  %3 = load %struct.MovieCache*, %struct.MovieCache** %cache1, align 8, !dbg !10087
  %call = call %struct.MovieCacheIter* @IMB_moviecacheIter_new(%struct.MovieCache* %3), !dbg !10088
  store %struct.MovieCacheIter* %call, %struct.MovieCacheIter** %iter, align 8, !dbg !10085
  br label %while.cond, !dbg !10089

while.cond:                                       ; preds = %if.end, %if.then
  %4 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !10090
  %call2 = call zeroext i8 @IMB_moviecacheIter_done(%struct.MovieCacheIter* %4), !dbg !10091
  %tobool = icmp ne i8 %call2, 0, !dbg !10092
  %lnot = xor i1 %tobool, true, !dbg !10092
  br i1 %lnot, label %while.body, label %while.end, !dbg !10089

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %current_ibuf, metadata !10093, metadata !DIExpression()), !dbg !10095
  %5 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !10096
  %call3 = call %struct.ImBuf* @IMB_moviecacheIter_getImBuf(%struct.MovieCacheIter* %5), !dbg !10097
  store %struct.ImBuf* %call3, %struct.ImBuf** %current_ibuf, align 8, !dbg !10095
  %6 = load %struct.ImBuf*, %struct.ImBuf** %current_ibuf, align 8, !dbg !10098
  %name4 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %6, i32 0, i32 27, !dbg !10098
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %name4, i64 0, i64 0, !dbg !10098
  %7 = load i8*, i8** %name.addr, align 8, !dbg !10098
  %call5 = call i32 @strcmp(i8* %arraydecay, i8* %7) #6, !dbg !10098
  %cmp6 = icmp eq i32 %call5, 0, !dbg !10098
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !10100

if.then7:                                         ; preds = %while.body
  %8 = load %struct.ImBuf*, %struct.ImBuf** %current_ibuf, align 8, !dbg !10101
  store %struct.ImBuf* %8, %struct.ImBuf** %ibuf, align 8, !dbg !10103
  %9 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10104
  call void @IMB_refImBuf(%struct.ImBuf* %9), !dbg !10105
  br label %while.end, !dbg !10106

if.end:                                           ; preds = %while.body
  %10 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !10107
  call void @IMB_moviecacheIter_step(%struct.MovieCacheIter* %10), !dbg !10108
  br label %while.cond, !dbg !10089, !llvm.loop !10109

while.end:                                        ; preds = %if.then7, %while.cond
  %11 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !10111
  call void @IMB_moviecacheIter_free(%struct.MovieCacheIter* %11), !dbg !10112
  br label %if.end8, !dbg !10113

if.end8:                                          ; preds = %while.end, %entry
  call void @BLI_spin_unlock(i32* @image_spin), !dbg !10114
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10115
  ret %struct.ImBuf* %12, !dbg !10116
}

declare dso_local void @IMB_refImBuf(%struct.ImBuf*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ImBuf* @BKE_image_get_first_ibuf(%struct.Image* %image) #0 !dbg !10117 {
entry:
  %image.addr = alloca %struct.Image*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %iter = alloca %struct.MovieCacheIter*, align 8
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !10120, metadata !DIExpression()), !dbg !10121
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !10122, metadata !DIExpression()), !dbg !10123
  store %struct.ImBuf* null, %struct.ImBuf** %ibuf, align 8, !dbg !10123
  call void @BLI_spin_lock(i32* @image_spin), !dbg !10124
  %0 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !10125
  %cache = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 2, !dbg !10127
  %1 = load %struct.MovieCache*, %struct.MovieCache** %cache, align 8, !dbg !10127
  %cmp = icmp ne %struct.MovieCache* %1, null, !dbg !10128
  br i1 %cmp, label %if.then, label %if.end, !dbg !10129

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MovieCacheIter** %iter, metadata !10130, metadata !DIExpression()), !dbg !10132
  %2 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !10133
  %cache1 = getelementptr inbounds %struct.Image, %struct.Image* %2, i32 0, i32 2, !dbg !10134
  %3 = load %struct.MovieCache*, %struct.MovieCache** %cache1, align 8, !dbg !10134
  %call = call %struct.MovieCacheIter* @IMB_moviecacheIter_new(%struct.MovieCache* %3), !dbg !10135
  store %struct.MovieCacheIter* %call, %struct.MovieCacheIter** %iter, align 8, !dbg !10132
  br label %while.cond, !dbg !10136

while.cond:                                       ; preds = %if.then
  %4 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !10137
  %call2 = call zeroext i8 @IMB_moviecacheIter_done(%struct.MovieCacheIter* %4), !dbg !10138
  %tobool = icmp ne i8 %call2, 0, !dbg !10139
  %lnot = xor i1 %tobool, true, !dbg !10139
  br i1 %lnot, label %while.body, label %while.end, !dbg !10136

while.body:                                       ; preds = %while.cond
  %5 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !10140
  %call3 = call %struct.ImBuf* @IMB_moviecacheIter_getImBuf(%struct.MovieCacheIter* %5), !dbg !10142
  store %struct.ImBuf* %call3, %struct.ImBuf** %ibuf, align 8, !dbg !10143
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10144
  call void @IMB_refImBuf(%struct.ImBuf* %6), !dbg !10145
  br label %while.end, !dbg !10146

while.end:                                        ; preds = %while.body, %while.cond
  %7 = load %struct.MovieCacheIter*, %struct.MovieCacheIter** %iter, align 8, !dbg !10147
  call void @IMB_moviecacheIter_free(%struct.MovieCacheIter* %7), !dbg !10148
  br label %if.end, !dbg !10149

if.end:                                           ; preds = %while.end, %entry
  call void @BLI_spin_unlock(i32* @image_spin), !dbg !10150
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10151
  ret %struct.ImBuf* %8, !dbg !10152
}

declare dso_local %struct.ImBuf* @IMB_allocImBuf(i32, i32, i8 zeroext, i32) #1

declare dso_local void @IMB_rectcpy(%struct.ImBuf*, %struct.ImBuf*, i32, i32, i32, i32, i32, i32) #1

declare dso_local void @IMB_moviecache_free(%struct.MovieCache*) #1

declare dso_local i8* @BKE_libblock_alloc(%struct.Main*, i16 signext, i8*) #1

declare dso_local void @BKE_color_managed_colorspace_settings_init(%struct.ColorManagedColorspaceSettings*) #1

declare dso_local %struct.MovieCache* @IMB_moviecache_create(i8*, i32, i32 (i8*)*, i8 (i8*, i8*)*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @imagecache_hashhash(i8* %key_v) #0 !dbg !10153 {
entry:
  %key_v.addr = alloca i8*, align 8
  %key = alloca %struct.ImageCacheKey*, align 8
  store i8* %key_v, i8** %key_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key_v.addr, metadata !10158, metadata !DIExpression()), !dbg !10159
  call void @llvm.dbg.declare(metadata %struct.ImageCacheKey** %key, metadata !10160, metadata !DIExpression()), !dbg !10163
  %0 = load i8*, i8** %key_v.addr, align 8, !dbg !10164
  %1 = bitcast i8* %0 to %struct.ImageCacheKey*, !dbg !10165
  store %struct.ImageCacheKey* %1, %struct.ImageCacheKey** %key, align 8, !dbg !10163
  %2 = load %struct.ImageCacheKey*, %struct.ImageCacheKey** %key, align 8, !dbg !10166
  %index = getelementptr inbounds %struct.ImageCacheKey, %struct.ImageCacheKey* %2, i32 0, i32 0, !dbg !10167
  %3 = load i32, i32* %index, align 4, !dbg !10167
  ret i32 %3, !dbg !10168
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @imagecache_hashcmp(i8* %a_v, i8* %b_v) #0 !dbg !10169 {
entry:
  %a_v.addr = alloca i8*, align 8
  %b_v.addr = alloca i8*, align 8
  %a = alloca %struct.ImageCacheKey*, align 8
  %b = alloca %struct.ImageCacheKey*, align 8
  store i8* %a_v, i8** %a_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a_v.addr, metadata !10172, metadata !DIExpression()), !dbg !10173
  store i8* %b_v, i8** %b_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b_v.addr, metadata !10174, metadata !DIExpression()), !dbg !10175
  call void @llvm.dbg.declare(metadata %struct.ImageCacheKey** %a, metadata !10176, metadata !DIExpression()), !dbg !10177
  %0 = load i8*, i8** %a_v.addr, align 8, !dbg !10178
  %1 = bitcast i8* %0 to %struct.ImageCacheKey*, !dbg !10179
  store %struct.ImageCacheKey* %1, %struct.ImageCacheKey** %a, align 8, !dbg !10177
  call void @llvm.dbg.declare(metadata %struct.ImageCacheKey** %b, metadata !10180, metadata !DIExpression()), !dbg !10181
  %2 = load i8*, i8** %b_v.addr, align 8, !dbg !10182
  %3 = bitcast i8* %2 to %struct.ImageCacheKey*, !dbg !10183
  store %struct.ImageCacheKey* %3, %struct.ImageCacheKey** %b, align 8, !dbg !10181
  %4 = load %struct.ImageCacheKey*, %struct.ImageCacheKey** %a, align 8, !dbg !10184
  %index = getelementptr inbounds %struct.ImageCacheKey, %struct.ImageCacheKey* %4, i32 0, i32 0, !dbg !10185
  %5 = load i32, i32* %index, align 4, !dbg !10185
  %6 = load %struct.ImageCacheKey*, %struct.ImageCacheKey** %b, align 8, !dbg !10186
  %index1 = getelementptr inbounds %struct.ImageCacheKey, %struct.ImageCacheKey* %6, i32 0, i32 0, !dbg !10187
  %7 = load i32, i32* %index1, align 4, !dbg !10187
  %cmp = icmp ne i32 %5, %7, !dbg !10188
  %conv = zext i1 %cmp to i32, !dbg !10188
  %conv2 = trunc i32 %conv to i8, !dbg !10189
  ret i8 %conv2, !dbg !10190
}

declare dso_local void @IMB_moviecache_set_getdata_callback(%struct.MovieCache*, void (i8*, i32*, i32*, i32*)*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @imagecache_keydata(i8* %userkey, i32* %framenr, i32* %proxy, i32* %render_flags) #0 !dbg !10191 {
entry:
  %userkey.addr = alloca i8*, align 8
  %framenr.addr = alloca i32*, align 8
  %proxy.addr = alloca i32*, align 8
  %render_flags.addr = alloca i32*, align 8
  %key = alloca %struct.ImageCacheKey*, align 8
  store i8* %userkey, i8** %userkey.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userkey.addr, metadata !10194, metadata !DIExpression()), !dbg !10195
  store i32* %framenr, i32** %framenr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %framenr.addr, metadata !10196, metadata !DIExpression()), !dbg !10197
  store i32* %proxy, i32** %proxy.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %proxy.addr, metadata !10198, metadata !DIExpression()), !dbg !10199
  store i32* %render_flags, i32** %render_flags.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %render_flags.addr, metadata !10200, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.declare(metadata %struct.ImageCacheKey** %key, metadata !10202, metadata !DIExpression()), !dbg !10203
  %0 = load i8*, i8** %userkey.addr, align 8, !dbg !10204
  %1 = bitcast i8* %0 to %struct.ImageCacheKey*, !dbg !10205
  store %struct.ImageCacheKey* %1, %struct.ImageCacheKey** %key, align 8, !dbg !10203
  %2 = load %struct.ImageCacheKey*, %struct.ImageCacheKey** %key, align 8, !dbg !10206
  %index = getelementptr inbounds %struct.ImageCacheKey, %struct.ImageCacheKey* %2, i32 0, i32 0, !dbg !10206
  %3 = load i32, i32* %index, align 4, !dbg !10206
  %shr = ashr i32 %3, 10, !dbg !10206
  %4 = load i32*, i32** %framenr.addr, align 8, !dbg !10207
  store i32 %shr, i32* %4, align 4, !dbg !10208
  %5 = load i32*, i32** %proxy.addr, align 8, !dbg !10209
  store i32 0, i32* %5, align 4, !dbg !10210
  %6 = load i32*, i32** %render_flags.addr, align 8, !dbg !10211
  store i32 0, i32* %6, align 4, !dbg !10212
  ret void, !dbg !10213
}

declare dso_local void @IMB_moviecache_put(%struct.MovieCache*, i8*, %struct.ImBuf*) #1

declare dso_local %struct.ImBuf* @IMB_loadiffname(i8*, i32, i8*) #1

declare dso_local i8* @IMB_colormanagement_role_colorspace_name_get(i32) #1

declare dso_local void @IMB_colormanagement_check_is_data(%struct.ImBuf*, i8*) #1

declare dso_local void @IMB_colormanagement_assign_rect_colorspace(%struct.ImBuf*, i8*) #1

declare dso_local void @BKE_image_buf_fill_checker(i8*, float*, i32, i32) #1

declare dso_local void @BKE_image_buf_fill_checker_color(i8*, float*, i32, i32) #1

declare dso_local void @BKE_image_buf_fill_color(i8*, float*, i32, i32, float*) #1

declare dso_local void @IMB_buffer_float_from_float(float*, float*, i32, i32, i32, i8 zeroext, i32, i32, i32, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @imagecache_get(%struct.Image* %image, i32 %index) #0 !dbg !10214 {
entry:
  %retval = alloca %struct.ImBuf*, align 8
  %image.addr = alloca %struct.Image*, align 8
  %index.addr = alloca i32, align 4
  %key = alloca %struct.ImageCacheKey, align 4
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !10217, metadata !DIExpression()), !dbg !10218
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !10219, metadata !DIExpression()), !dbg !10220
  %0 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !10221
  %cache = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 2, !dbg !10223
  %1 = load %struct.MovieCache*, %struct.MovieCache** %cache, align 8, !dbg !10223
  %tobool = icmp ne %struct.MovieCache* %1, null, !dbg !10221
  br i1 %tobool, label %if.then, label %if.end, !dbg !10224

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ImageCacheKey* %key, metadata !10225, metadata !DIExpression()), !dbg !10227
  %2 = load i32, i32* %index.addr, align 4, !dbg !10228
  %index1 = getelementptr inbounds %struct.ImageCacheKey, %struct.ImageCacheKey* %key, i32 0, i32 0, !dbg !10229
  store i32 %2, i32* %index1, align 4, !dbg !10230
  %3 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !10231
  %cache2 = getelementptr inbounds %struct.Image, %struct.Image* %3, i32 0, i32 2, !dbg !10232
  %4 = load %struct.MovieCache*, %struct.MovieCache** %cache2, align 8, !dbg !10232
  %5 = bitcast %struct.ImageCacheKey* %key to i8*, !dbg !10233
  %call = call %struct.ImBuf* @IMB_moviecache_get(%struct.MovieCache* %4, i8* %5), !dbg !10234
  store %struct.ImBuf* %call, %struct.ImBuf** %retval, align 8, !dbg !10235
  br label %return, !dbg !10235

if.end:                                           ; preds = %entry
  store %struct.ImBuf* null, %struct.ImBuf** %retval, align 8, !dbg !10236
  br label %return, !dbg !10236

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct.ImBuf*, %struct.ImBuf** %retval, align 8, !dbg !10237
  ret %struct.ImBuf* %6, !dbg !10237
}

declare dso_local %struct.ImBuf* @IMB_moviecache_get(%struct.MovieCache*, i8*) #1

declare dso_local zeroext i8 @BLI_testextensie(i8*, i8*) #1

declare dso_local zeroext i8 @BLI_replace_extension(i8*, i64, i8*) #1

declare dso_local zeroext i8 @BLI_ensure_extension(i8*, i64, i8*) #1

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #1

; Function Attrs: nounwind
declare dso_local i64 @time(i64*) #5

; Function Attrs: nounwind
declare dso_local %struct.tm* @localtime(i64*) #5

declare dso_local i8* @BKE_scene_find_last_marker_name(%struct.Scene*, i32) #1

declare dso_local i64 @BLI_timecode_string_from_time(i8*, i64, i32, float, double, i16 signext) #1

; Function Attrs: nounwind
declare dso_local double @log10(double) #5

declare dso_local %struct.Sequence* @BKE_sequencer_foreground_frame_get(%struct.Scene*, i32) #1

declare dso_local %struct.RenderStats* @RE_GetStats(%struct.Render*) #1

declare dso_local void @BLI_timestr(double, i8*, i64) #1

declare dso_local zeroext i8 @BLI_path_frame(i8*, i32, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @image_load_movie_file(%struct.Image* %ima, %struct.ImageUser* %iuser, i32 %frame) #0 !dbg !10238 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %frame.addr = alloca i32, align 4
  %ibuf = alloca %struct.ImBuf*, align 8
  %str = alloca [1024 x i8], align 16
  %dur = alloca i32, align 4
  %fra = alloca i32, align 4
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !10241, metadata !DIExpression()), !dbg !10242
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !10243, metadata !DIExpression()), !dbg !10244
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !10245, metadata !DIExpression()), !dbg !10246
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !10247, metadata !DIExpression()), !dbg !10248
  store %struct.ImBuf* null, %struct.ImBuf** %ibuf, align 8, !dbg !10248
  %0 = load i32, i32* %frame.addr, align 4, !dbg !10249
  %1 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10250
  %lastframe = getelementptr inbounds %struct.Image, %struct.Image* %1, i32 0, i32 13, !dbg !10251
  store i32 %0, i32* %lastframe, align 4, !dbg !10252
  %2 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10253
  %anim = getelementptr inbounds %struct.Image, %struct.Image* %2, i32 0, i32 4, !dbg !10255
  %3 = load %struct.anim*, %struct.anim** %anim, align 8, !dbg !10255
  %cmp = icmp eq %struct.anim* %3, null, !dbg !10256
  br i1 %cmp, label %if.then, label %if.end12, !dbg !10257

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1024 x i8]* %str, metadata !10258, metadata !DIExpression()), !dbg !10260
  %4 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10261
  %5 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10262
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !10263
  call void @BKE_image_user_file_path(%struct.ImageUser* %4, %struct.Image* %5, i8* %arraydecay), !dbg !10264
  %arraydecay1 = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !10265
  %6 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10266
  %colorspace_settings = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 36, !dbg !10267
  %name = getelementptr inbounds %struct.ColorManagedColorspaceSettings, %struct.ColorManagedColorspaceSettings* %colorspace_settings, i32 0, i32 0, !dbg !10268
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !10266
  %call = call %struct.anim* @openanim(i8* %arraydecay1, i32 1, i32 0, i8* %arraydecay2), !dbg !10269
  %7 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10270
  %anim3 = getelementptr inbounds %struct.Image, %struct.Image* %7, i32 0, i32 4, !dbg !10271
  store %struct.anim* %call, %struct.anim** %anim3, align 8, !dbg !10272
  %8 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10273
  %anim4 = getelementptr inbounds %struct.Image, %struct.Image* %8, i32 0, i32 4, !dbg !10275
  %9 = load %struct.anim*, %struct.anim** %anim4, align 8, !dbg !10275
  %tobool = icmp ne %struct.anim* %9, null, !dbg !10273
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10276

land.lhs.true:                                    ; preds = %if.then
  %10 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10277
  %tobool5 = icmp ne %struct.ImageUser* %10, null, !dbg !10277
  br i1 %tobool5, label %land.lhs.true6, label %if.end, !dbg !10278

land.lhs.true6:                                   ; preds = %land.lhs.true
  %11 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10279
  %frames = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %11, i32 0, i32 2, !dbg !10280
  %12 = load i32, i32* %frames, align 4, !dbg !10280
  %cmp7 = icmp eq i32 %12, 0, !dbg !10281
  br i1 %cmp7, label %if.then8, label %if.end, !dbg !10282

if.then8:                                         ; preds = %land.lhs.true6
  %13 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10283
  %anim9 = getelementptr inbounds %struct.Image, %struct.Image* %13, i32 0, i32 4, !dbg !10284
  %14 = load %struct.anim*, %struct.anim** %anim9, align 8, !dbg !10284
  %call10 = call i32 @IMB_anim_get_duration(%struct.anim* %14, i32 1), !dbg !10285
  %15 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10286
  %frames11 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %15, i32 0, i32 2, !dbg !10287
  store i32 %call10, i32* %frames11, align 4, !dbg !10288
  br label %if.end, !dbg !10286

if.end:                                           ; preds = %if.then8, %land.lhs.true6, %land.lhs.true, %if.then
  br label %if.end12, !dbg !10289

if.end12:                                         ; preds = %if.end, %entry
  %16 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10290
  %anim13 = getelementptr inbounds %struct.Image, %struct.Image* %16, i32 0, i32 4, !dbg !10292
  %17 = load %struct.anim*, %struct.anim** %anim13, align 8, !dbg !10292
  %tobool14 = icmp ne %struct.anim* %17, null, !dbg !10290
  br i1 %tobool14, label %if.then15, label %if.else32, !dbg !10293

if.then15:                                        ; preds = %if.end12
  call void @llvm.dbg.declare(metadata i32* %dur, metadata !10294, metadata !DIExpression()), !dbg !10296
  %18 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10297
  %anim16 = getelementptr inbounds %struct.Image, %struct.Image* %18, i32 0, i32 4, !dbg !10298
  %19 = load %struct.anim*, %struct.anim** %anim16, align 8, !dbg !10298
  %call17 = call i32 @IMB_anim_get_duration(%struct.anim* %19, i32 1), !dbg !10299
  store i32 %call17, i32* %dur, align 4, !dbg !10296
  call void @llvm.dbg.declare(metadata i32* %fra, metadata !10300, metadata !DIExpression()), !dbg !10301
  %20 = load i32, i32* %frame.addr, align 4, !dbg !10302
  %sub = sub nsw i32 %20, 1, !dbg !10303
  store i32 %sub, i32* %fra, align 4, !dbg !10301
  %21 = load i32, i32* %fra, align 4, !dbg !10304
  %cmp18 = icmp slt i32 %21, 0, !dbg !10306
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !10307

if.then19:                                        ; preds = %if.then15
  store i32 0, i32* %fra, align 4, !dbg !10308
  br label %if.end20, !dbg !10309

if.end20:                                         ; preds = %if.then19, %if.then15
  %22 = load i32, i32* %fra, align 4, !dbg !10310
  %23 = load i32, i32* %dur, align 4, !dbg !10312
  %sub21 = sub nsw i32 %23, 1, !dbg !10313
  %cmp22 = icmp sgt i32 %22, %sub21, !dbg !10314
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !10315

if.then23:                                        ; preds = %if.end20
  %24 = load i32, i32* %dur, align 4, !dbg !10316
  %sub24 = sub nsw i32 %24, 1, !dbg !10317
  store i32 %sub24, i32* %fra, align 4, !dbg !10318
  br label %if.end25, !dbg !10319

if.end25:                                         ; preds = %if.then23, %if.end20
  %25 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10320
  %anim26 = getelementptr inbounds %struct.Image, %struct.Image* %25, i32 0, i32 4, !dbg !10321
  %26 = load %struct.anim*, %struct.anim** %anim26, align 8, !dbg !10321
  %27 = load i32, i32* %fra, align 4, !dbg !10322
  %call27 = call %struct.ImBuf* @IMB_anim_absolute(%struct.anim* %26, i32 %27, i32 1, i32 0), !dbg !10323
  %call28 = call %struct.ImBuf* @IMB_makeSingleUser(%struct.ImBuf* %call27), !dbg !10324
  store %struct.ImBuf* %call28, %struct.ImBuf** %ibuf, align 8, !dbg !10325
  %28 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10326
  %tobool29 = icmp ne %struct.ImBuf* %28, null, !dbg !10326
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !10328

if.then30:                                        ; preds = %if.end25
  %29 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10329
  %30 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10331
  call void @image_initialize_after_load(%struct.Image* %29, %struct.ImBuf* %30), !dbg !10332
  %31 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10333
  %32 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10334
  %33 = load i32, i32* %frame.addr, align 4, !dbg !10335
  call void @image_assign_ibuf(%struct.Image* %31, %struct.ImBuf* %32, i32 0, i32 %33), !dbg !10336
  br label %if.end31, !dbg !10337

if.else:                                          ; preds = %if.end25
  %34 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10338
  %ok = getelementptr inbounds %struct.Image, %struct.Image* %34, i32 0, i32 9, !dbg !10339
  store i16 0, i16* %ok, align 4, !dbg !10340
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then30
  br label %if.end34, !dbg !10341

if.else32:                                        ; preds = %if.end12
  %35 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10342
  %ok33 = getelementptr inbounds %struct.Image, %struct.Image* %35, i32 0, i32 9, !dbg !10343
  store i16 0, i16* %ok33, align 4, !dbg !10344
  br label %if.end34

if.end34:                                         ; preds = %if.else32, %if.end31
  %36 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10345
  %tobool35 = icmp ne %struct.ImageUser* %36, null, !dbg !10345
  br i1 %tobool35, label %if.then36, label %if.end39, !dbg !10347

if.then36:                                        ; preds = %if.end34
  %37 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10348
  %ok37 = getelementptr inbounds %struct.Image, %struct.Image* %37, i32 0, i32 9, !dbg !10349
  %38 = load i16, i16* %ok37, align 4, !dbg !10349
  %conv = trunc i16 %38 to i8, !dbg !10348
  %39 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10350
  %ok38 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %39, i32 0, i32 7, !dbg !10351
  store i8 %conv, i8* %ok38, align 2, !dbg !10352
  br label %if.end39, !dbg !10350

if.end39:                                         ; preds = %if.then36, %if.end34
  %40 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10353
  ret %struct.ImBuf* %40, !dbg !10354
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @image_load_sequence_file(%struct.Image* %ima, %struct.ImageUser* %iuser, i32 %frame) #0 !dbg !10355 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %frame.addr = alloca i32, align 4
  %ibuf = alloca %struct.ImBuf*, align 8
  %name = alloca [1024 x i8], align 16
  %flag = alloca i32, align 4
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !10356, metadata !DIExpression()), !dbg !10357
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !10358, metadata !DIExpression()), !dbg !10359
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !10360, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !10362, metadata !DIExpression()), !dbg !10363
  call void @llvm.dbg.declare(metadata [1024 x i8]* %name, metadata !10364, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !10366, metadata !DIExpression()), !dbg !10367
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10368
  %lastframe = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 13, !dbg !10370
  %1 = load i32, i32* %lastframe, align 4, !dbg !10370
  %2 = load i32, i32* %frame.addr, align 4, !dbg !10371
  %cmp = icmp ne i32 %1, %2, !dbg !10372
  br i1 %cmp, label %if.then, label %if.end, !dbg !10373

if.then:                                          ; preds = %entry
  %3 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10374
  %tpageflag = getelementptr inbounds %struct.Image, %struct.Image* %3, i32 0, i32 14, !dbg !10375
  %4 = load i16, i16* %tpageflag, align 8, !dbg !10376
  %conv = sext i16 %4 to i32, !dbg !10376
  %or = or i32 %conv, 64, !dbg !10376
  %conv1 = trunc i32 %or to i16, !dbg !10376
  store i16 %conv1, i16* %tpageflag, align 8, !dbg !10376
  br label %if.end, !dbg !10374

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %frame.addr, align 4, !dbg !10377
  %6 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10378
  %lastframe2 = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 13, !dbg !10379
  store i32 %5, i32* %lastframe2, align 4, !dbg !10380
  %7 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10381
  %8 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10382
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !10383
  call void @BKE_image_user_file_path(%struct.ImageUser* %7, %struct.Image* %8, i8* %arraydecay), !dbg !10384
  store i32 129, i32* %flag, align 4, !dbg !10385
  %9 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10386
  %call = call i32 @imbuf_alpha_flags_for_image(%struct.Image* %9), !dbg !10387
  %10 = load i32, i32* %flag, align 4, !dbg !10388
  %or3 = or i32 %10, %call, !dbg !10388
  store i32 %or3, i32* %flag, align 4, !dbg !10388
  %arraydecay4 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !10389
  %11 = load i32, i32* %flag, align 4, !dbg !10390
  %12 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10391
  %colorspace_settings = getelementptr inbounds %struct.Image, %struct.Image* %12, i32 0, i32 36, !dbg !10392
  %name5 = getelementptr inbounds %struct.ColorManagedColorspaceSettings, %struct.ColorManagedColorspaceSettings* %colorspace_settings, i32 0, i32 0, !dbg !10393
  %arraydecay6 = getelementptr inbounds [64 x i8], [64 x i8]* %name5, i64 0, i64 0, !dbg !10391
  %call7 = call %struct.ImBuf* @IMB_loadiffname(i8* %arraydecay4, i32 %11, i8* %arraydecay6), !dbg !10394
  store %struct.ImBuf* %call7, %struct.ImBuf** %ibuf, align 8, !dbg !10395
  %13 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10396
  %tobool = icmp ne %struct.ImBuf* %13, null, !dbg !10396
  br i1 %tobool, label %if.then8, label %if.else, !dbg !10398

if.then8:                                         ; preds = %if.end
  %14 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10399
  %15 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10401
  call void @image_initialize_after_load(%struct.Image* %14, %struct.ImBuf* %15), !dbg !10402
  %16 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10403
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10404
  %18 = load i32, i32* %frame.addr, align 4, !dbg !10405
  call void @image_assign_ibuf(%struct.Image* %16, %struct.ImBuf* %17, i32 0, i32 %18), !dbg !10406
  br label %if.end9, !dbg !10407

if.else:                                          ; preds = %if.end
  %19 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10408
  %ok = getelementptr inbounds %struct.Image, %struct.Image* %19, i32 0, i32 9, !dbg !10409
  store i16 0, i16* %ok, align 4, !dbg !10410
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then8
  %20 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10411
  %tobool10 = icmp ne %struct.ImageUser* %20, null, !dbg !10411
  br i1 %tobool10, label %if.then11, label %if.end15, !dbg !10413

if.then11:                                        ; preds = %if.end9
  %21 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10414
  %ok12 = getelementptr inbounds %struct.Image, %struct.Image* %21, i32 0, i32 9, !dbg !10415
  %22 = load i16, i16* %ok12, align 4, !dbg !10415
  %conv13 = trunc i16 %22 to i8, !dbg !10414
  %23 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10416
  %ok14 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %23, i32 0, i32 7, !dbg !10417
  store i8 %conv13, i8* %ok14, align 2, !dbg !10418
  br label %if.end15, !dbg !10416

if.end15:                                         ; preds = %if.then11, %if.end9
  %24 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10419
  ret %struct.ImBuf* %24, !dbg !10420
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @image_load_sequence_multilayer(%struct.Image* %ima, %struct.ImageUser* %iuser, i32 %frame) #0 !dbg !10421 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %frame.addr = alloca i32, align 4
  %ibuf = alloca %struct.ImBuf*, align 8
  %rpass = alloca %struct.RenderPass*, align 8
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !10422, metadata !DIExpression()), !dbg !10423
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !10424, metadata !DIExpression()), !dbg !10425
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !10426, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !10428, metadata !DIExpression()), !dbg !10429
  store %struct.ImBuf* null, %struct.ImBuf** %ibuf, align 8, !dbg !10429
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10430
  %rr = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 5, !dbg !10432
  %1 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !10432
  %cmp = icmp eq %struct.RenderResult* %1, null, !dbg !10433
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10434

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %frame.addr, align 4, !dbg !10435
  %3 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10436
  %rr1 = getelementptr inbounds %struct.Image, %struct.Image* %3, i32 0, i32 5, !dbg !10437
  %4 = load %struct.RenderResult*, %struct.RenderResult** %rr1, align 8, !dbg !10437
  %framenr = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %4, i32 0, i32 16, !dbg !10438
  %5 = load i32, i32* %framenr, align 4, !dbg !10438
  %cmp2 = icmp ne i32 %2, %5, !dbg !10439
  br i1 %cmp2, label %if.then, label %if.end11, !dbg !10440

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10441
  %rr3 = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 5, !dbg !10444
  %7 = load %struct.RenderResult*, %struct.RenderResult** %rr3, align 8, !dbg !10444
  %tobool = icmp ne %struct.RenderResult* %7, null, !dbg !10441
  br i1 %tobool, label %if.then4, label %if.end, !dbg !10445

if.then4:                                         ; preds = %if.then
  %8 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10446
  call void @image_free_cached_frames(%struct.Image* %8), !dbg !10448
  %9 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10449
  %rr5 = getelementptr inbounds %struct.Image, %struct.Image* %9, i32 0, i32 5, !dbg !10450
  %10 = load %struct.RenderResult*, %struct.RenderResult** %rr5, align 8, !dbg !10450
  call void @RE_FreeRenderResult(%struct.RenderResult* %10), !dbg !10451
  %11 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10452
  %rr6 = getelementptr inbounds %struct.Image, %struct.Image* %11, i32 0, i32 5, !dbg !10453
  store %struct.RenderResult* null, %struct.RenderResult** %rr6, align 8, !dbg !10454
  br label %if.end, !dbg !10455

if.end:                                           ; preds = %if.then4, %if.then
  %12 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10456
  %13 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10457
  %14 = load i32, i32* %frame.addr, align 4, !dbg !10458
  %call = call %struct.ImBuf* @image_load_sequence_file(%struct.Image* %12, %struct.ImageUser* %13, i32 %14), !dbg !10459
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !10460
  %15 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10461
  %tobool7 = icmp ne %struct.ImBuf* %15, null, !dbg !10461
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !10463

if.then8:                                         ; preds = %if.end
  %16 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10464
  %type = getelementptr inbounds %struct.Image, %struct.Image* %16, i32 0, i32 12, !dbg !10466
  store i16 0, i16* %type, align 2, !dbg !10467
  %call9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.59, i64 0, i64 0)), !dbg !10468
  br label %if.end10, !dbg !10469

if.end10:                                         ; preds = %if.then8, %if.end
  br label %if.end11, !dbg !10470

if.end11:                                         ; preds = %if.end10, %lor.lhs.false
  %17 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10471
  %rr12 = getelementptr inbounds %struct.Image, %struct.Image* %17, i32 0, i32 5, !dbg !10473
  %18 = load %struct.RenderResult*, %struct.RenderResult** %rr12, align 8, !dbg !10473
  %tobool13 = icmp ne %struct.RenderResult* %18, null, !dbg !10471
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !10474

if.then14:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata %struct.RenderPass** %rpass, metadata !10475, metadata !DIExpression()), !dbg !10477
  %19 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10478
  %rr15 = getelementptr inbounds %struct.Image, %struct.Image* %19, i32 0, i32 5, !dbg !10479
  %20 = load %struct.RenderResult*, %struct.RenderResult** %rr15, align 8, !dbg !10479
  %21 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10480
  %call16 = call %struct.RenderPass* @BKE_image_multilayer_index(%struct.RenderResult* %20, %struct.ImageUser* %21), !dbg !10481
  store %struct.RenderPass* %call16, %struct.RenderPass** %rpass, align 8, !dbg !10477
  %22 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !10482
  %tobool17 = icmp ne %struct.RenderPass* %22, null, !dbg !10482
  br i1 %tobool17, label %if.then18, label %if.end25, !dbg !10484

if.then18:                                        ; preds = %if.then14
  %23 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10485
  %rr19 = getelementptr inbounds %struct.Image, %struct.Image* %23, i32 0, i32 5, !dbg !10487
  %24 = load %struct.RenderResult*, %struct.RenderResult** %rr19, align 8, !dbg !10487
  %rectx = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %24, i32 0, i32 2, !dbg !10488
  %25 = load i32, i32* %rectx, align 8, !dbg !10488
  %26 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10489
  %rr20 = getelementptr inbounds %struct.Image, %struct.Image* %26, i32 0, i32 5, !dbg !10490
  %27 = load %struct.RenderResult*, %struct.RenderResult** %rr20, align 8, !dbg !10490
  %recty = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %27, i32 0, i32 3, !dbg !10491
  %28 = load i32, i32* %recty, align 4, !dbg !10491
  %call21 = call %struct.ImBuf* @IMB_allocImBuf(i32 %25, i32 %28, i8 zeroext 32, i32 0), !dbg !10492
  store %struct.ImBuf* %call21, %struct.ImBuf** %ibuf, align 8, !dbg !10493
  %29 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !10494
  %30 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !10495
  %rect = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %30, i32 0, i32 6, !dbg !10496
  %31 = load float*, float** %rect, align 8, !dbg !10496
  %32 = bitcast float* %31 to i8*, !dbg !10495
  %call22 = call i8* %29(i8* %32), !dbg !10494
  %33 = bitcast i8* %call22 to float*, !dbg !10494
  %34 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10497
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %34, i32 0, i32 9, !dbg !10498
  store float* %33, float** %rect_float, align 8, !dbg !10499
  %35 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10500
  %flags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %35, i32 0, i32 6, !dbg !10501
  %36 = load i32, i32* %flags, align 8, !dbg !10502
  %or = or i32 %36, 32, !dbg !10502
  store i32 %or, i32* %flags, align 8, !dbg !10502
  %37 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10503
  %mall = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %37, i32 0, i32 7, !dbg !10504
  store i32 32, i32* %mall, align 4, !dbg !10505
  %38 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !10506
  %channels = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %38, i32 0, i32 3, !dbg !10507
  %39 = load i32, i32* %channels, align 4, !dbg !10507
  %40 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10508
  %channels23 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %40, i32 0, i32 5, !dbg !10509
  store i32 %39, i32* %channels23, align 4, !dbg !10510
  %41 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10511
  %42 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10512
  call void @image_initialize_after_load(%struct.Image* %41, %struct.ImBuf* %42), !dbg !10513
  %43 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10514
  %44 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10515
  %45 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10516
  %tobool24 = icmp ne %struct.ImageUser* %45, null, !dbg !10516
  br i1 %tobool24, label %cond.true, label %cond.false, !dbg !10516

cond.true:                                        ; preds = %if.then18
  %46 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10517
  %multi_index = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %46, i32 0, i32 9, !dbg !10518
  %47 = load i16, i16* %multi_index, align 4, !dbg !10518
  %conv = sext i16 %47 to i32, !dbg !10517
  br label %cond.end, !dbg !10516

cond.false:                                       ; preds = %if.then18
  br label %cond.end, !dbg !10516

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 0, %cond.false ], !dbg !10516
  %48 = load i32, i32* %frame.addr, align 4, !dbg !10519
  call void @image_assign_ibuf(%struct.Image* %43, %struct.ImBuf* %44, i32 %cond, i32 %48), !dbg !10520
  br label %if.end25, !dbg !10521

if.end25:                                         ; preds = %cond.end, %if.then14
  br label %if.end26, !dbg !10522

if.else:                                          ; preds = %if.end11
  %49 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10523
  %ok = getelementptr inbounds %struct.Image, %struct.Image* %49, i32 0, i32 9, !dbg !10524
  store i16 0, i16* %ok, align 4, !dbg !10525
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.end25
  %50 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10526
  %tobool27 = icmp ne %struct.ImageUser* %50, null, !dbg !10526
  br i1 %tobool27, label %if.then28, label %if.end32, !dbg !10528

if.then28:                                        ; preds = %if.end26
  %51 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10529
  %ok29 = getelementptr inbounds %struct.Image, %struct.Image* %51, i32 0, i32 9, !dbg !10530
  %52 = load i16, i16* %ok29, align 4, !dbg !10530
  %conv30 = trunc i16 %52 to i8, !dbg !10529
  %53 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10531
  %ok31 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %53, i32 0, i32 7, !dbg !10532
  store i8 %conv30, i8* %ok31, align 2, !dbg !10533
  br label %if.end32, !dbg !10531

if.end32:                                         ; preds = %if.then28, %if.end26
  %54 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10534
  ret %struct.ImBuf* %54, !dbg !10535
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @image_load_image_file(%struct.Image* %ima, %struct.ImageUser* %iuser, i32 %cfra) #0 !dbg !10536 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %cfra.addr = alloca i32, align 4
  %ibuf = alloca %struct.ImBuf*, align 8
  %str = alloca [1024 x i8], align 16
  %assign = alloca i32, align 4
  %flag = alloca i32, align 4
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !10537, metadata !DIExpression()), !dbg !10538
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !10539, metadata !DIExpression()), !dbg !10540
  store i32 %cfra, i32* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra.addr, metadata !10541, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !10543, metadata !DIExpression()), !dbg !10544
  call void @llvm.dbg.declare(metadata [1024 x i8]* %str, metadata !10545, metadata !DIExpression()), !dbg !10546
  call void @llvm.dbg.declare(metadata i32* %assign, metadata !10547, metadata !DIExpression()), !dbg !10548
  store i32 0, i32* %assign, align 4, !dbg !10548
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !10549, metadata !DIExpression()), !dbg !10550
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10551
  call void @BKE_image_free_buffers(%struct.Image* %0), !dbg !10552
  %1 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10553
  %packedfile = getelementptr inbounds %struct.Image, %struct.Image* %1, i32 0, i32 22, !dbg !10555
  %2 = load %struct.PackedFile*, %struct.PackedFile** %packedfile, align 8, !dbg !10555
  %tobool = icmp ne %struct.PackedFile* %2, null, !dbg !10553
  br i1 %tobool, label %if.then, label %if.else, !dbg !10556

if.then:                                          ; preds = %entry
  store i32 129, i32* %flag, align 4, !dbg !10557
  %3 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10559
  %call = call i32 @imbuf_alpha_flags_for_image(%struct.Image* %3), !dbg !10560
  %4 = load i32, i32* %flag, align 4, !dbg !10561
  %or = or i32 %4, %call, !dbg !10561
  store i32 %or, i32* %flag, align 4, !dbg !10561
  %5 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10562
  %packedfile1 = getelementptr inbounds %struct.Image, %struct.Image* %5, i32 0, i32 22, !dbg !10563
  %6 = load %struct.PackedFile*, %struct.PackedFile** %packedfile1, align 8, !dbg !10563
  %data = getelementptr inbounds %struct.PackedFile, %struct.PackedFile* %6, i32 0, i32 2, !dbg !10564
  %7 = load i8*, i8** %data, align 8, !dbg !10564
  %8 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10565
  %packedfile2 = getelementptr inbounds %struct.Image, %struct.Image* %8, i32 0, i32 22, !dbg !10566
  %9 = load %struct.PackedFile*, %struct.PackedFile** %packedfile2, align 8, !dbg !10566
  %size = getelementptr inbounds %struct.PackedFile, %struct.PackedFile* %9, i32 0, i32 0, !dbg !10567
  %10 = load i32, i32* %size, align 8, !dbg !10567
  %conv = sext i32 %10 to i64, !dbg !10565
  %11 = load i32, i32* %flag, align 4, !dbg !10568
  %12 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10569
  %colorspace_settings = getelementptr inbounds %struct.Image, %struct.Image* %12, i32 0, i32 36, !dbg !10570
  %name = getelementptr inbounds %struct.ColorManagedColorspaceSettings, %struct.ColorManagedColorspaceSettings* %colorspace_settings, i32 0, i32 0, !dbg !10571
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !10569
  %call3 = call %struct.ImBuf* @IMB_ibImageFromMemory(i8* %7, i64 %conv, i32 %11, i8* %arraydecay, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.60, i64 0, i64 0)), !dbg !10572
  store %struct.ImBuf* %call3, %struct.ImBuf** %ibuf, align 8, !dbg !10573
  br label %if.end, !dbg !10574

if.else:                                          ; preds = %entry
  store i32 385, i32* %flag, align 4, !dbg !10575
  %13 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10577
  %call4 = call i32 @imbuf_alpha_flags_for_image(%struct.Image* %13), !dbg !10578
  %14 = load i32, i32* %flag, align 4, !dbg !10579
  %or5 = or i32 %14, %call4, !dbg !10579
  store i32 %or5, i32* %flag, align 4, !dbg !10579
  %15 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10580
  %16 = load i32, i32* %cfra.addr, align 4, !dbg !10581
  call void @BKE_image_user_frame_calc(%struct.ImageUser* %15, i32 %16, i32 0), !dbg !10582
  %17 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10583
  %18 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10584
  %arraydecay6 = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !10585
  call void @BKE_image_user_file_path(%struct.ImageUser* %17, %struct.Image* %18, i8* %arraydecay6), !dbg !10586
  %arraydecay7 = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !10587
  %19 = load i32, i32* %flag, align 4, !dbg !10588
  %20 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10589
  %colorspace_settings8 = getelementptr inbounds %struct.Image, %struct.Image* %20, i32 0, i32 36, !dbg !10590
  %name9 = getelementptr inbounds %struct.ColorManagedColorspaceSettings, %struct.ColorManagedColorspaceSettings* %colorspace_settings8, i32 0, i32 0, !dbg !10591
  %arraydecay10 = getelementptr inbounds [64 x i8], [64 x i8]* %name9, i64 0, i64 0, !dbg !10589
  %call11 = call %struct.ImBuf* @IMB_loadiffname(i8* %arraydecay7, i32 %19, i8* %arraydecay10), !dbg !10592
  store %struct.ImBuf* %call11, %struct.ImBuf** %ibuf, align 8, !dbg !10593
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %21 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10594
  %tobool12 = icmp ne %struct.ImBuf* %21, null, !dbg !10594
  br i1 %tobool12, label %if.then13, label %if.else35, !dbg !10596

if.then13:                                        ; preds = %if.end
  %22 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10597
  %ftype = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %22, i32 0, i32 26, !dbg !10600
  %23 = load i32, i32* %ftype, align 8, !dbg !10600
  %cmp = icmp eq i32 %23, 4194304, !dbg !10601
  br i1 %cmp, label %land.lhs.true, label %if.else17, !dbg !10602

land.lhs.true:                                    ; preds = %if.then13
  %24 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10603
  %userdata = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %24, i32 0, i32 25, !dbg !10604
  %25 = load i8*, i8** %userdata, align 8, !dbg !10604
  %tobool15 = icmp ne i8* %25, null, !dbg !10603
  br i1 %tobool15, label %if.then16, label %if.else17, !dbg !10605

if.then16:                                        ; preds = %land.lhs.true
  %26 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10606
  %27 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10608
  %28 = load i32, i32* %cfra.addr, align 4, !dbg !10609
  call void @image_create_multilayer(%struct.Image* %26, %struct.ImBuf* %27, i32 %28), !dbg !10610
  %29 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10611
  %type = getelementptr inbounds %struct.Image, %struct.Image* %29, i32 0, i32 12, !dbg !10612
  store i16 1, i16* %type, align 2, !dbg !10613
  %30 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10614
  call void @IMB_freeImBuf(%struct.ImBuf* %30), !dbg !10615
  store %struct.ImBuf* null, %struct.ImBuf** %ibuf, align 8, !dbg !10616
  br label %if.end34, !dbg !10617

if.else17:                                        ; preds = %land.lhs.true, %if.then13
  %31 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10618
  %32 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10620
  call void @image_initialize_after_load(%struct.Image* %31, %struct.ImBuf* %32), !dbg !10621
  store i32 1, i32* %assign, align 4, !dbg !10622
  %33 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10623
  call void @detectBitmapFont(%struct.ImBuf* %33), !dbg !10624
  %34 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10625
  %packedfile18 = getelementptr inbounds %struct.Image, %struct.Image* %34, i32 0, i32 22, !dbg !10627
  %35 = load %struct.PackedFile*, %struct.PackedFile** %packedfile18, align 8, !dbg !10627
  %cmp19 = icmp eq %struct.PackedFile* %35, null, !dbg !10628
  br i1 %cmp19, label %land.lhs.true21, label %if.end33, !dbg !10629

land.lhs.true21:                                  ; preds = %if.else17
  %36 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 18), align 4, !dbg !10630
  %and = and i32 %36, 1, !dbg !10631
  %tobool22 = icmp ne i32 %and, 0, !dbg !10631
  br i1 %tobool22, label %if.then23, label %if.end33, !dbg !10632

if.then23:                                        ; preds = %land.lhs.true21
  %arraydecay24 = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !10633
  %37 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10634
  %id = getelementptr inbounds %struct.Image, %struct.Image* %37, i32 0, i32 0, !dbg !10634
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !10634
  %38 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !10634
  %tobool25 = icmp ne %struct.Library* %38, null, !dbg !10634
  br i1 %tobool25, label %cond.true, label %cond.false, !dbg !10634

cond.true:                                        ; preds = %if.then23
  %39 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10634
  %id26 = getelementptr inbounds %struct.Image, %struct.Image* %39, i32 0, i32 0, !dbg !10634
  %lib27 = getelementptr inbounds %struct.ID, %struct.ID* %id26, i32 0, i32 3, !dbg !10634
  %40 = load %struct.Library*, %struct.Library** %lib27, align 8, !dbg !10634
  %filepath = getelementptr inbounds %struct.Library, %struct.Library* %40, i32 0, i32 4, !dbg !10634
  %arraydecay28 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !10634
  br label %cond.end, !dbg !10634

cond.false:                                       ; preds = %if.then23
  %41 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !10634
  %name29 = getelementptr inbounds %struct.Main, %struct.Main* %41, i32 0, i32 2, !dbg !10634
  %arraydecay30 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name29, i64 0, i64 0, !dbg !10634
  br label %cond.end, !dbg !10634

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay28, %cond.true ], [ %arraydecay30, %cond.false ], !dbg !10634
  %call31 = call %struct.PackedFile* @newPackedFile(%struct.ReportList* null, i8* %arraydecay24, i8* %cond), !dbg !10635
  %42 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10636
  %packedfile32 = getelementptr inbounds %struct.Image, %struct.Image* %42, i32 0, i32 22, !dbg !10637
  store %struct.PackedFile* %call31, %struct.PackedFile** %packedfile32, align 8, !dbg !10638
  br label %if.end33, !dbg !10636

if.end33:                                         ; preds = %cond.end, %land.lhs.true21, %if.else17
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then16
  br label %if.end36, !dbg !10639

if.else35:                                        ; preds = %if.end
  %43 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10640
  %ok = getelementptr inbounds %struct.Image, %struct.Image* %43, i32 0, i32 9, !dbg !10641
  store i16 0, i16* %ok, align 4, !dbg !10642
  br label %if.end36

if.end36:                                         ; preds = %if.else35, %if.end34
  %44 = load i32, i32* %assign, align 4, !dbg !10643
  %tobool37 = icmp ne i32 %44, 0, !dbg !10643
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !10645

if.then38:                                        ; preds = %if.end36
  %45 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10646
  %46 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10647
  call void @image_assign_ibuf(%struct.Image* %45, %struct.ImBuf* %46, i32 2146430959, i32 0), !dbg !10648
  br label %if.end39, !dbg !10648

if.end39:                                         ; preds = %if.then38, %if.end36
  %47 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10649
  %tobool40 = icmp ne %struct.ImageUser* %47, null, !dbg !10649
  br i1 %tobool40, label %if.then41, label %if.end45, !dbg !10651

if.then41:                                        ; preds = %if.end39
  %48 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10652
  %ok42 = getelementptr inbounds %struct.Image, %struct.Image* %48, i32 0, i32 9, !dbg !10653
  %49 = load i16, i16* %ok42, align 4, !dbg !10653
  %conv43 = trunc i16 %49 to i8, !dbg !10652
  %50 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10654
  %ok44 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %50, i32 0, i32 7, !dbg !10655
  store i8 %conv43, i8* %ok44, align 2, !dbg !10656
  br label %if.end45, !dbg !10654

if.end45:                                         ; preds = %if.then41, %if.end39
  %51 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10657
  ret %struct.ImBuf* %51, !dbg !10658
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @image_get_ibuf_multilayer(%struct.Image* %ima, %struct.ImageUser* %iuser) #0 !dbg !10659 {
entry:
  %retval = alloca %struct.ImBuf*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %rpass = alloca %struct.RenderPass*, align 8
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !10662, metadata !DIExpression()), !dbg !10663
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !10664, metadata !DIExpression()), !dbg !10665
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !10666, metadata !DIExpression()), !dbg !10667
  store %struct.ImBuf* null, %struct.ImBuf** %ibuf, align 8, !dbg !10667
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10668
  %rr = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 5, !dbg !10670
  %1 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !10670
  %cmp = icmp eq %struct.RenderResult* %1, null, !dbg !10671
  br i1 %cmp, label %if.then, label %if.end2, !dbg !10672

if.then:                                          ; preds = %entry
  %2 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10673
  %3 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10675
  %call = call %struct.ImBuf* @image_load_image_file(%struct.Image* %2, %struct.ImageUser* %3, i32 0), !dbg !10676
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !10677
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10678
  %tobool = icmp ne %struct.ImBuf* %4, null, !dbg !10678
  br i1 %tobool, label %if.then1, label %if.end, !dbg !10680

if.then1:                                         ; preds = %if.then
  %5 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10681
  %type = getelementptr inbounds %struct.Image, %struct.Image* %5, i32 0, i32 12, !dbg !10683
  store i16 0, i16* %type, align 2, !dbg !10684
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10685
  store %struct.ImBuf* %6, %struct.ImBuf** %retval, align 8, !dbg !10686
  br label %return, !dbg !10686

if.end:                                           ; preds = %if.then
  br label %if.end2, !dbg !10687

if.end2:                                          ; preds = %if.end, %entry
  %7 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10688
  %rr3 = getelementptr inbounds %struct.Image, %struct.Image* %7, i32 0, i32 5, !dbg !10690
  %8 = load %struct.RenderResult*, %struct.RenderResult** %rr3, align 8, !dbg !10690
  %tobool4 = icmp ne %struct.RenderResult* %8, null, !dbg !10688
  br i1 %tobool4, label %if.then5, label %if.end16, !dbg !10691

if.then5:                                         ; preds = %if.end2
  call void @llvm.dbg.declare(metadata %struct.RenderPass** %rpass, metadata !10692, metadata !DIExpression()), !dbg !10694
  %9 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10695
  %rr6 = getelementptr inbounds %struct.Image, %struct.Image* %9, i32 0, i32 5, !dbg !10696
  %10 = load %struct.RenderResult*, %struct.RenderResult** %rr6, align 8, !dbg !10696
  %11 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10697
  %call7 = call %struct.RenderPass* @BKE_image_multilayer_index(%struct.RenderResult* %10, %struct.ImageUser* %11), !dbg !10698
  store %struct.RenderPass* %call7, %struct.RenderPass** %rpass, align 8, !dbg !10694
  %12 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !10699
  %tobool8 = icmp ne %struct.RenderPass* %12, null, !dbg !10699
  br i1 %tobool8, label %if.then9, label %if.end15, !dbg !10701

if.then9:                                         ; preds = %if.then5
  %13 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10702
  %rr10 = getelementptr inbounds %struct.Image, %struct.Image* %13, i32 0, i32 5, !dbg !10704
  %14 = load %struct.RenderResult*, %struct.RenderResult** %rr10, align 8, !dbg !10704
  %rectx = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %14, i32 0, i32 2, !dbg !10705
  %15 = load i32, i32* %rectx, align 8, !dbg !10705
  %16 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10706
  %rr11 = getelementptr inbounds %struct.Image, %struct.Image* %16, i32 0, i32 5, !dbg !10707
  %17 = load %struct.RenderResult*, %struct.RenderResult** %rr11, align 8, !dbg !10707
  %recty = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %17, i32 0, i32 3, !dbg !10708
  %18 = load i32, i32* %recty, align 4, !dbg !10708
  %call12 = call %struct.ImBuf* @IMB_allocImBuf(i32 %15, i32 %18, i8 zeroext 32, i32 0), !dbg !10709
  store %struct.ImBuf* %call12, %struct.ImBuf** %ibuf, align 8, !dbg !10710
  %19 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10711
  %20 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10712
  call void @image_initialize_after_load(%struct.Image* %19, %struct.ImBuf* %20), !dbg !10713
  %21 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !10714
  %rect = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %21, i32 0, i32 6, !dbg !10715
  %22 = load float*, float** %rect, align 8, !dbg !10715
  %23 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10716
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %23, i32 0, i32 9, !dbg !10717
  store float* %22, float** %rect_float, align 8, !dbg !10718
  %24 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10719
  %flags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %24, i32 0, i32 6, !dbg !10720
  %25 = load i32, i32* %flags, align 8, !dbg !10721
  %or = or i32 %25, 32, !dbg !10721
  store i32 %or, i32* %flags, align 8, !dbg !10721
  %26 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !10722
  %channels = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %26, i32 0, i32 3, !dbg !10723
  %27 = load i32, i32* %channels, align 4, !dbg !10723
  %28 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10724
  %channels13 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %28, i32 0, i32 5, !dbg !10725
  store i32 %27, i32* %channels13, align 4, !dbg !10726
  %29 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10727
  %30 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10728
  %31 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10729
  %tobool14 = icmp ne %struct.ImageUser* %31, null, !dbg !10729
  br i1 %tobool14, label %cond.true, label %cond.false, !dbg !10729

cond.true:                                        ; preds = %if.then9
  %32 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10730
  %multi_index = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %32, i32 0, i32 9, !dbg !10731
  %33 = load i16, i16* %multi_index, align 4, !dbg !10731
  %conv = sext i16 %33 to i32, !dbg !10730
  br label %cond.end, !dbg !10729

cond.false:                                       ; preds = %if.then9
  br label %cond.end, !dbg !10729

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 2146430959, %cond.false ], !dbg !10729
  call void @image_assign_ibuf(%struct.Image* %29, %struct.ImBuf* %30, i32 %cond, i32 0), !dbg !10732
  br label %if.end15, !dbg !10733

if.end15:                                         ; preds = %cond.end, %if.then5
  br label %if.end16, !dbg !10734

if.end16:                                         ; preds = %if.end15, %if.end2
  %34 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10735
  %cmp17 = icmp eq %struct.ImBuf* %34, null, !dbg !10737
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !10738

if.then19:                                        ; preds = %if.end16
  %35 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10739
  %ok = getelementptr inbounds %struct.Image, %struct.Image* %35, i32 0, i32 9, !dbg !10740
  store i16 0, i16* %ok, align 4, !dbg !10741
  br label %if.end20, !dbg !10739

if.end20:                                         ; preds = %if.then19, %if.end16
  %36 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10742
  %tobool21 = icmp ne %struct.ImageUser* %36, null, !dbg !10742
  br i1 %tobool21, label %if.then22, label %if.end26, !dbg !10744

if.then22:                                        ; preds = %if.end20
  %37 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10745
  %ok23 = getelementptr inbounds %struct.Image, %struct.Image* %37, i32 0, i32 9, !dbg !10746
  %38 = load i16, i16* %ok23, align 4, !dbg !10746
  %conv24 = trunc i16 %38 to i8, !dbg !10745
  %39 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10747
  %ok25 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %39, i32 0, i32 7, !dbg !10748
  store i8 %conv24, i8* %ok25, align 2, !dbg !10749
  br label %if.end26, !dbg !10747

if.end26:                                         ; preds = %if.then22, %if.end20
  %40 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10750
  store %struct.ImBuf* %40, %struct.ImBuf** %retval, align 8, !dbg !10751
  br label %return, !dbg !10751

return:                                           ; preds = %if.end26, %if.then1
  %41 = load %struct.ImBuf*, %struct.ImBuf** %retval, align 8, !dbg !10752
  ret %struct.ImBuf* %41, !dbg !10752
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @image_get_render_result(%struct.Image* %ima, %struct.ImageUser* %iuser, i8** %lock_r) #0 !dbg !10753 {
entry:
  %retval = alloca %struct.ImBuf*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %lock_r.addr = alloca i8**, align 8
  %re = alloca %struct.Render*, align 8
  %rres = alloca %struct.RenderResult, align 8
  %rectf = alloca float*, align 8
  %rectz = alloca float*, align 8
  %rect = alloca i32*, align 8
  %dither = alloca float, align 4
  %channels = alloca i32, align 4
  %layer = alloca i32, align 4
  %pass = alloca i32, align 4
  %ibuf = alloca %struct.ImBuf*, align 8
  %from_render = alloca i32, align 4
  %byte_buffer_in_display_space = alloca i8, align 1
  %rl = alloca %struct.RenderLayer*, align 8
  %rpass = alloca %struct.RenderPass*, align 8
  %colorspace = alloca i8*, align 8
  %colorspace111 = alloca i8*, align 8
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !10754, metadata !DIExpression()), !dbg !10755
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !10756, metadata !DIExpression()), !dbg !10757
  store i8** %lock_r, i8*** %lock_r.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %lock_r.addr, metadata !10758, metadata !DIExpression()), !dbg !10759
  call void @llvm.dbg.declare(metadata %struct.Render** %re, metadata !10760, metadata !DIExpression()), !dbg !10761
  call void @llvm.dbg.declare(metadata %struct.RenderResult* %rres, metadata !10762, metadata !DIExpression()), !dbg !10763
  call void @llvm.dbg.declare(metadata float** %rectf, metadata !10764, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.declare(metadata float** %rectz, metadata !10766, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.declare(metadata i32** %rect, metadata !10768, metadata !DIExpression()), !dbg !10769
  call void @llvm.dbg.declare(metadata float* %dither, metadata !10770, metadata !DIExpression()), !dbg !10771
  call void @llvm.dbg.declare(metadata i32* %channels, metadata !10772, metadata !DIExpression()), !dbg !10773
  call void @llvm.dbg.declare(metadata i32* %layer, metadata !10774, metadata !DIExpression()), !dbg !10775
  call void @llvm.dbg.declare(metadata i32* %pass, metadata !10776, metadata !DIExpression()), !dbg !10777
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !10778, metadata !DIExpression()), !dbg !10779
  call void @llvm.dbg.declare(metadata i32* %from_render, metadata !10780, metadata !DIExpression()), !dbg !10781
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10782
  %render_slot = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 7, !dbg !10783
  %1 = load i16, i16* %render_slot, align 8, !dbg !10783
  %conv = sext i16 %1 to i32, !dbg !10782
  %2 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10784
  %last_render_slot = getelementptr inbounds %struct.Image, %struct.Image* %2, i32 0, i32 8, !dbg !10785
  %3 = load i16, i16* %last_render_slot, align 2, !dbg !10785
  %conv1 = sext i16 %3 to i32, !dbg !10784
  %cmp = icmp eq i32 %conv, %conv1, !dbg !10786
  %conv2 = zext i1 %cmp to i32, !dbg !10786
  store i32 %conv2, i32* %from_render, align 4, !dbg !10781
  call void @llvm.dbg.declare(metadata i8* %byte_buffer_in_display_space, metadata !10787, metadata !DIExpression()), !dbg !10788
  store i8 0, i8* %byte_buffer_in_display_space, align 1, !dbg !10788
  %4 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10789
  %tobool = icmp ne %struct.ImageUser* %4, null, !dbg !10789
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !10791

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10792
  %scene = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %5, i32 0, i32 0, !dbg !10793
  %6 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10793
  %tobool3 = icmp ne %struct.Scene* %6, null, !dbg !10792
  br i1 %tobool3, label %if.end, label %if.then, !dbg !10794

if.then:                                          ; preds = %land.lhs.true, %entry
  store %struct.ImBuf* null, %struct.ImBuf** %retval, align 8, !dbg !10795
  br label %return, !dbg !10795

if.end:                                           ; preds = %land.lhs.true
  %7 = load i8**, i8*** %lock_r.addr, align 8, !dbg !10796
  %tobool4 = icmp ne i8** %7, null, !dbg !10796
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !10798

if.then5:                                         ; preds = %if.end
  store %struct.ImBuf* null, %struct.ImBuf** %retval, align 8, !dbg !10799
  br label %return, !dbg !10799

if.end6:                                          ; preds = %if.end
  %8 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10800
  %scene7 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %8, i32 0, i32 0, !dbg !10801
  %9 = load %struct.Scene*, %struct.Scene** %scene7, align 8, !dbg !10801
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 0, !dbg !10802
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !10803
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !10800
  %call = call %struct.Render* @RE_GetRender(i8* %arraydecay), !dbg !10804
  store %struct.Render* %call, %struct.Render** %re, align 8, !dbg !10805
  store i32 4, i32* %channels, align 4, !dbg !10806
  %10 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10807
  %layer8 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %10, i32 0, i32 10, !dbg !10808
  %11 = load i16, i16* %layer8, align 2, !dbg !10808
  %conv9 = sext i16 %11 to i32, !dbg !10807
  store i32 %conv9, i32* %layer, align 4, !dbg !10809
  %12 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10810
  %pass10 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %12, i32 0, i32 11, !dbg !10811
  %13 = load i16, i16* %pass10, align 8, !dbg !10811
  %conv11 = sext i16 %13 to i32, !dbg !10810
  store i32 %conv11, i32* %pass, align 4, !dbg !10812
  %14 = load i32, i32* %from_render, align 4, !dbg !10813
  %tobool12 = icmp ne i32 %14, 0, !dbg !10813
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !10815

if.then13:                                        ; preds = %if.end6
  %15 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !10816
  call void @RE_AcquireResultImage(%struct.Render* %15, %struct.RenderResult* %rres), !dbg !10818
  br label %if.end26, !dbg !10819

if.else:                                          ; preds = %if.end6
  %16 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10820
  %renders = getelementptr inbounds %struct.Image, %struct.Image* %16, i32 0, i32 6, !dbg !10822
  %17 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10823
  %render_slot14 = getelementptr inbounds %struct.Image, %struct.Image* %17, i32 0, i32 7, !dbg !10824
  %18 = load i16, i16* %render_slot14, align 8, !dbg !10824
  %idxprom = sext i16 %18 to i64, !dbg !10820
  %arrayidx = getelementptr inbounds [8 x %struct.RenderResult*], [8 x %struct.RenderResult*]* %renders, i64 0, i64 %idxprom, !dbg !10820
  %19 = load %struct.RenderResult*, %struct.RenderResult** %arrayidx, align 8, !dbg !10820
  %tobool15 = icmp ne %struct.RenderResult* %19, null, !dbg !10820
  br i1 %tobool15, label %if.then16, label %if.else24, !dbg !10825

if.then16:                                        ; preds = %if.else
  %20 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10826
  %renders17 = getelementptr inbounds %struct.Image, %struct.Image* %20, i32 0, i32 6, !dbg !10828
  %21 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10829
  %render_slot18 = getelementptr inbounds %struct.Image, %struct.Image* %21, i32 0, i32 7, !dbg !10830
  %22 = load i16, i16* %render_slot18, align 8, !dbg !10830
  %idxprom19 = sext i16 %22 to i64, !dbg !10826
  %arrayidx20 = getelementptr inbounds [8 x %struct.RenderResult*], [8 x %struct.RenderResult*]* %renders17, i64 0, i64 %idxprom19, !dbg !10826
  %23 = load %struct.RenderResult*, %struct.RenderResult** %arrayidx20, align 8, !dbg !10826
  %24 = bitcast %struct.RenderResult* %rres to i8*, !dbg !10831
  %25 = bitcast %struct.RenderResult* %23 to i8*, !dbg !10831
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 144, i1 true), !dbg !10831
  %rectf21 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 7, !dbg !10832
  %26 = load float*, float** %rectf21, align 8, !dbg !10832
  %cmp22 = icmp ne float* %26, null, !dbg !10833
  %conv23 = zext i1 %cmp22 to i32, !dbg !10833
  %have_combined = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 17, !dbg !10834
  store i32 %conv23, i32* %have_combined, align 8, !dbg !10835
  br label %if.end25, !dbg !10836

if.else24:                                        ; preds = %if.else
  %27 = bitcast %struct.RenderResult* %rres to i8*, !dbg !10837
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 144, i1 false), !dbg !10837
  br label %if.end25

if.end25:                                         ; preds = %if.else24, %if.then16
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then13
  %rectx = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 2, !dbg !10838
  %28 = load i32, i32* %rectx, align 8, !dbg !10838
  %cmp27 = icmp sgt i32 %28, 0, !dbg !10840
  br i1 %cmp27, label %land.lhs.true29, label %if.then32, !dbg !10841

land.lhs.true29:                                  ; preds = %if.end26
  %recty = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 3, !dbg !10842
  %29 = load i32, i32* %recty, align 4, !dbg !10842
  %cmp30 = icmp sgt i32 %29, 0, !dbg !10843
  br i1 %cmp30, label %if.end36, label %if.then32, !dbg !10844

if.then32:                                        ; preds = %land.lhs.true29, %if.end26
  %30 = load i32, i32* %from_render, align 4, !dbg !10845
  %tobool33 = icmp ne i32 %30, 0, !dbg !10845
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !10848

if.then34:                                        ; preds = %if.then32
  %31 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !10849
  call void @RE_ReleaseResultImage(%struct.Render* %31), !dbg !10850
  br label %if.end35, !dbg !10850

if.end35:                                         ; preds = %if.then34, %if.then32
  store %struct.ImBuf* null, %struct.ImBuf** %retval, align 8, !dbg !10851
  br label %return, !dbg !10851

if.end36:                                         ; preds = %land.lhs.true29
  %32 = load i32, i32* %from_render, align 4, !dbg !10852
  %tobool37 = icmp ne i32 %32, 0, !dbg !10852
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !10854

if.then38:                                        ; preds = %if.end36
  call void @BLI_lock_thread(i32 2), !dbg !10855
  %33 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !10857
  %34 = bitcast %struct.Render* %33 to i8*, !dbg !10857
  %35 = load i8**, i8*** %lock_r.addr, align 8, !dbg !10858
  store i8* %34, i8** %35, align 8, !dbg !10859
  br label %if.end39, !dbg !10860

if.end39:                                         ; preds = %if.then38, %if.end36
  %rect32 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 6, !dbg !10861
  %36 = load i32*, i32** %rect32, align 8, !dbg !10861
  store i32* %36, i32** %rect, align 8, !dbg !10862
  %rectf40 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 7, !dbg !10863
  %37 = load float*, float** %rectf40, align 8, !dbg !10863
  store float* %37, float** %rectf, align 8, !dbg !10864
  %rectz41 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 8, !dbg !10865
  %38 = load float*, float** %rectz41, align 8, !dbg !10865
  store float* %38, float** %rectz, align 8, !dbg !10866
  %39 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !10867
  %scene42 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %39, i32 0, i32 0, !dbg !10868
  %40 = load %struct.Scene*, %struct.Scene** %scene42, align 8, !dbg !10868
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %40, i32 0, i32 22, !dbg !10869
  %dither_intensity = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 71, !dbg !10870
  %41 = load float, float* %dither_intensity, align 4, !dbg !10870
  store float %41, float* %dither, align 4, !dbg !10871
  %have_combined43 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 17, !dbg !10872
  %42 = load i32, i32* %have_combined43, align 8, !dbg !10872
  %tobool44 = icmp ne i32 %42, 0, !dbg !10874
  br i1 %tobool44, label %land.lhs.true45, label %if.else49, !dbg !10875

land.lhs.true45:                                  ; preds = %if.end39
  %43 = load i32, i32* %layer, align 4, !dbg !10876
  %cmp46 = icmp eq i32 %43, 0, !dbg !10877
  br i1 %cmp46, label %if.then48, label %if.else49, !dbg !10878

if.then48:                                        ; preds = %land.lhs.true45
  br label %if.end92, !dbg !10879

if.else49:                                        ; preds = %land.lhs.true45, %if.end39
  %44 = load i32*, i32** %rect, align 8, !dbg !10881
  %tobool50 = icmp ne i32* %44, null, !dbg !10881
  br i1 %tobool50, label %land.lhs.true51, label %if.else55, !dbg !10883

land.lhs.true51:                                  ; preds = %if.else49
  %45 = load i32, i32* %layer, align 4, !dbg !10884
  %cmp52 = icmp eq i32 %45, 0, !dbg !10885
  br i1 %cmp52, label %if.then54, label %if.else55, !dbg !10886

if.then54:                                        ; preds = %land.lhs.true51
  store float* null, float** %rectf, align 8, !dbg !10887
  br label %if.end91, !dbg !10889

if.else55:                                        ; preds = %land.lhs.true51, %if.else49
  %layers = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 12, !dbg !10890
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers, i32 0, i32 0, !dbg !10892
  %46 = load i8*, i8** %first, align 8, !dbg !10892
  %tobool56 = icmp ne i8* %46, null, !dbg !10893
  br i1 %tobool56, label %if.then57, label %if.end90, !dbg !10894

if.then57:                                        ; preds = %if.else55
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl, metadata !10895, metadata !DIExpression()), !dbg !10897
  %layers58 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 12, !dbg !10898
  %47 = load i32, i32* %layer, align 4, !dbg !10899
  %have_combined59 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 17, !dbg !10900
  %48 = load i32, i32* %have_combined59, align 8, !dbg !10900
  %tobool60 = icmp ne i32 %48, 0, !dbg !10901
  %49 = zext i1 %tobool60 to i64, !dbg !10901
  %cond = select i1 %tobool60, i32 1, i32 0, !dbg !10901
  %sub = sub nsw i32 %47, %cond, !dbg !10902
  %call61 = call i8* @BLI_findlink(%struct.ListBase* %layers58, i32 %sub), !dbg !10903
  %50 = bitcast i8* %call61 to %struct.RenderLayer*, !dbg !10903
  store %struct.RenderLayer* %50, %struct.RenderLayer** %rl, align 8, !dbg !10897
  %51 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !10904
  %tobool62 = icmp ne %struct.RenderLayer* %51, null, !dbg !10904
  br i1 %tobool62, label %if.then63, label %if.end89, !dbg !10906

if.then63:                                        ; preds = %if.then57
  call void @llvm.dbg.declare(metadata %struct.RenderPass** %rpass, metadata !10907, metadata !DIExpression()), !dbg !10909
  %52 = load i32, i32* %pass, align 4, !dbg !10910
  %cmp64 = icmp eq i32 %52, 0, !dbg !10912
  br i1 %cmp64, label %if.then66, label %if.else72, !dbg !10913

if.then66:                                        ; preds = %if.then63
  %53 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !10914
  %rectf67 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %53, i32 0, i32 11, !dbg !10916
  %54 = load float*, float** %rectf67, align 8, !dbg !10916
  store float* %54, float** %rectf, align 8, !dbg !10917
  %55 = load float*, float** %rectf, align 8, !dbg !10918
  %cmp68 = icmp eq float* %55, null, !dbg !10920
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !10921

if.then70:                                        ; preds = %if.then66
  %56 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !10922
  %display_buffer = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %56, i32 0, i32 14, !dbg !10924
  %57 = load i32*, i32** %display_buffer, align 8, !dbg !10924
  store i32* %57, i32** %rect, align 8, !dbg !10925
  store i8 1, i8* %byte_buffer_in_display_space, align 1, !dbg !10926
  br label %if.end71, !dbg !10927

if.end71:                                         ; preds = %if.then70, %if.then66
  br label %if.end80, !dbg !10928

if.else72:                                        ; preds = %if.then63
  %58 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !10929
  %passes = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %58, i32 0, i32 18, !dbg !10931
  %59 = load i32, i32* %pass, align 4, !dbg !10932
  %sub73 = sub nsw i32 %59, 1, !dbg !10933
  %call74 = call i8* @BLI_findlink(%struct.ListBase* %passes, i32 %sub73), !dbg !10934
  %60 = bitcast i8* %call74 to %struct.RenderPass*, !dbg !10934
  store %struct.RenderPass* %60, %struct.RenderPass** %rpass, align 8, !dbg !10935
  %61 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !10936
  %tobool75 = icmp ne %struct.RenderPass* %61, null, !dbg !10936
  br i1 %tobool75, label %if.then76, label %if.end79, !dbg !10938

if.then76:                                        ; preds = %if.else72
  %62 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !10939
  %channels77 = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %62, i32 0, i32 3, !dbg !10941
  %63 = load i32, i32* %channels77, align 4, !dbg !10941
  store i32 %63, i32* %channels, align 4, !dbg !10942
  %64 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !10943
  %rect78 = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %64, i32 0, i32 6, !dbg !10944
  %65 = load float*, float** %rect78, align 8, !dbg !10944
  store float* %65, float** %rectf, align 8, !dbg !10945
  store float 0.000000e+00, float* %dither, align 4, !dbg !10946
  br label %if.end79, !dbg !10947

if.end79:                                         ; preds = %if.then76, %if.else72
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.end71
  %66 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !10948
  %passes81 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %66, i32 0, i32 18, !dbg !10950
  %first82 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %passes81, i32 0, i32 0, !dbg !10951
  %67 = load i8*, i8** %first82, align 8, !dbg !10951
  %68 = bitcast i8* %67 to %struct.RenderPass*, !dbg !10948
  store %struct.RenderPass* %68, %struct.RenderPass** %rpass, align 8, !dbg !10952
  br label %for.cond, !dbg !10953

for.cond:                                         ; preds = %for.inc, %if.end80
  %69 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !10954
  %tobool83 = icmp ne %struct.RenderPass* %69, null, !dbg !10956
  br i1 %tobool83, label %for.body, label %for.end, !dbg !10956

for.body:                                         ; preds = %for.cond
  %70 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !10957
  %passtype = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %70, i32 0, i32 2, !dbg !10959
  %71 = load i32, i32* %passtype, align 8, !dbg !10959
  %cmp84 = icmp eq i32 %71, 2, !dbg !10960
  br i1 %cmp84, label %if.then86, label %if.end88, !dbg !10961

if.then86:                                        ; preds = %for.body
  %72 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !10962
  %rect87 = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %72, i32 0, i32 6, !dbg !10963
  %73 = load float*, float** %rect87, align 8, !dbg !10963
  store float* %73, float** %rectz, align 8, !dbg !10964
  br label %if.end88, !dbg !10965

if.end88:                                         ; preds = %if.then86, %for.body
  br label %for.inc, !dbg !10966

for.inc:                                          ; preds = %if.end88
  %74 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !10967
  %next = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %74, i32 0, i32 0, !dbg !10968
  %75 = load %struct.RenderPass*, %struct.RenderPass** %next, align 8, !dbg !10968
  store %struct.RenderPass* %75, %struct.RenderPass** %rpass, align 8, !dbg !10969
  br label %for.cond, !dbg !10970, !llvm.loop !10971

for.end:                                          ; preds = %for.cond
  br label %if.end89, !dbg !10973

if.end89:                                         ; preds = %for.end, %if.then57
  br label %if.end90, !dbg !10974

if.end90:                                         ; preds = %if.end89, %if.else55
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.then54
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.then48
  %76 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10975
  %call93 = call %struct.ImBuf* @image_get_cached_ibuf_for_index_frame(%struct.Image* %76, i32 2146430959, i32 0), !dbg !10976
  store %struct.ImBuf* %call93, %struct.ImBuf** %ibuf, align 8, !dbg !10977
  %77 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10978
  %cmp94 = icmp eq %struct.ImBuf* %77, null, !dbg !10980
  br i1 %cmp94, label %if.then96, label %if.end100, !dbg !10981

if.then96:                                        ; preds = %if.end92
  %rectx97 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 2, !dbg !10982
  %78 = load i32, i32* %rectx97, align 8, !dbg !10982
  %recty98 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 3, !dbg !10984
  %79 = load i32, i32* %recty98, align 4, !dbg !10984
  %call99 = call %struct.ImBuf* @IMB_allocImBuf(i32 %78, i32 %79, i8 zeroext 32, i32 0), !dbg !10985
  store %struct.ImBuf* %call99, %struct.ImBuf** %ibuf, align 8, !dbg !10986
  %80 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !10987
  %81 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10988
  call void @image_assign_ibuf(%struct.Image* %80, %struct.ImBuf* %81, i32 2146430959, i32 0), !dbg !10989
  br label %if.end100, !dbg !10990

if.end100:                                        ; preds = %if.then96, %if.end92
  %82 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10991
  %rect101 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %82, i32 0, i32 8, !dbg !10993
  %83 = load i32*, i32** %rect101, align 8, !dbg !10993
  %84 = load i32*, i32** %rect, align 8, !dbg !10994
  %cmp102 = icmp ne i32* %83, %84, !dbg !10995
  br i1 %cmp102, label %if.then104, label %if.end114, !dbg !10996

if.then104:                                       ; preds = %if.end100
  %85 = load i8, i8* %byte_buffer_in_display_space, align 1, !dbg !10997
  %tobool105 = icmp ne i8 %85, 0, !dbg !10997
  br i1 %tobool105, label %if.then106, label %if.else110, !dbg !11000

if.then106:                                       ; preds = %if.then104
  call void @llvm.dbg.declare(metadata i8** %colorspace, metadata !11001, metadata !DIExpression()), !dbg !11003
  %86 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !11004
  %scene107 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %86, i32 0, i32 0, !dbg !11005
  %87 = load %struct.Scene*, %struct.Scene** %scene107, align 8, !dbg !11005
  %view_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %87, i32 0, i32 44, !dbg !11006
  %88 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !11007
  %scene108 = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %88, i32 0, i32 0, !dbg !11008
  %89 = load %struct.Scene*, %struct.Scene** %scene108, align 8, !dbg !11008
  %display_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %89, i32 0, i32 45, !dbg !11009
  %call109 = call i8* @IMB_colormanagement_get_display_colorspace_name(%struct.ColorManagedViewSettings* %view_settings, %struct.ColorManagedDisplaySettings* %display_settings), !dbg !11010
  store i8* %call109, i8** %colorspace, align 8, !dbg !11003
  %90 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11011
  %91 = load i8*, i8** %colorspace, align 8, !dbg !11012
  call void @IMB_colormanagement_assign_rect_colorspace(%struct.ImBuf* %90, i8* %91), !dbg !11013
  br label %if.end113, !dbg !11014

if.else110:                                       ; preds = %if.then104
  call void @llvm.dbg.declare(metadata i8** %colorspace111, metadata !11015, metadata !DIExpression()), !dbg !11017
  %call112 = call i8* @IMB_colormanagement_role_colorspace_name_get(i32 4), !dbg !11018
  store i8* %call112, i8** %colorspace111, align 8, !dbg !11017
  %92 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11019
  %93 = load i8*, i8** %colorspace111, align 8, !dbg !11020
  call void @IMB_colormanagement_assign_rect_colorspace(%struct.ImBuf* %92, i8* %93), !dbg !11021
  br label %if.end113

if.end113:                                        ; preds = %if.else110, %if.then106
  br label %if.end114, !dbg !11022

if.end114:                                        ; preds = %if.end113, %if.end100
  call void @BLI_lock_thread(i32 8), !dbg !11023
  %94 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11024
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %94, i32 0, i32 2, !dbg !11026
  %95 = load i32, i32* %x, align 8, !dbg !11026
  %rectx115 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 2, !dbg !11027
  %96 = load i32, i32* %rectx115, align 8, !dbg !11027
  %cmp116 = icmp ne i32 %95, %96, !dbg !11028
  br i1 %cmp116, label %if.then124, label %lor.lhs.false, !dbg !11029

lor.lhs.false:                                    ; preds = %if.end114
  %97 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11030
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %97, i32 0, i32 3, !dbg !11031
  %98 = load i32, i32* %y, align 4, !dbg !11031
  %recty118 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 3, !dbg !11032
  %99 = load i32, i32* %recty118, align 4, !dbg !11032
  %cmp119 = icmp ne i32 %98, %99, !dbg !11033
  br i1 %cmp119, label %if.then124, label %lor.lhs.false121, !dbg !11034

lor.lhs.false121:                                 ; preds = %lor.lhs.false
  %100 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11035
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %100, i32 0, i32 9, !dbg !11036
  %101 = load float*, float** %rect_float, align 8, !dbg !11036
  %102 = load float*, float** %rectf, align 8, !dbg !11037
  %cmp122 = icmp ne float* %101, %102, !dbg !11038
  br i1 %cmp122, label %if.then124, label %if.end125, !dbg !11039

if.then124:                                       ; preds = %lor.lhs.false121, %lor.lhs.false, %if.end114
  %103 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11040
  %userflags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %103, i32 0, i32 23, !dbg !11042
  %104 = load i32, i32* %userflags, align 4, !dbg !11043
  %or = or i32 %104, 16, !dbg !11043
  store i32 %or, i32* %userflags, align 4, !dbg !11043
  br label %if.end125, !dbg !11044

if.end125:                                        ; preds = %if.then124, %lor.lhs.false121
  %rectx126 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 2, !dbg !11045
  %105 = load i32, i32* %rectx126, align 8, !dbg !11045
  %106 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11046
  %x127 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %106, i32 0, i32 2, !dbg !11047
  store i32 %105, i32* %x127, align 8, !dbg !11048
  %recty128 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 3, !dbg !11049
  %107 = load i32, i32* %recty128, align 4, !dbg !11049
  %108 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11050
  %y129 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %108, i32 0, i32 3, !dbg !11051
  store i32 %107, i32* %y129, align 4, !dbg !11052
  %109 = load i32*, i32** %rect, align 8, !dbg !11053
  %tobool130 = icmp ne i32* %109, null, !dbg !11053
  br i1 %tobool130, label %if.then131, label %if.else133, !dbg !11055

if.then131:                                       ; preds = %if.end125
  %110 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11056
  call void @imb_freerectImBuf(%struct.ImBuf* %110), !dbg !11058
  %111 = load i32*, i32** %rect, align 8, !dbg !11059
  %112 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11060
  %rect132 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %112, i32 0, i32 8, !dbg !11061
  store i32* %111, i32** %rect132, align 8, !dbg !11062
  br label %if.end139, !dbg !11063

if.else133:                                       ; preds = %if.end125
  %113 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11064
  %mall = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %113, i32 0, i32 7, !dbg !11067
  %114 = load i32, i32* %mall, align 4, !dbg !11067
  %and = and i32 %114, 1, !dbg !11068
  %cmp134 = icmp eq i32 %and, 0, !dbg !11069
  br i1 %cmp134, label %if.then136, label %if.end138, !dbg !11070

if.then136:                                       ; preds = %if.else133
  %115 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11071
  %rect137 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %115, i32 0, i32 8, !dbg !11072
  store i32* null, i32** %rect137, align 8, !dbg !11073
  br label %if.end138, !dbg !11071

if.end138:                                        ; preds = %if.then136, %if.else133
  br label %if.end139

if.end139:                                        ; preds = %if.end138, %if.then131
  %116 = load float*, float** %rectf, align 8, !dbg !11074
  %tobool140 = icmp ne float* %116, null, !dbg !11074
  br i1 %tobool140, label %if.then141, label %if.else145, !dbg !11076

if.then141:                                       ; preds = %if.end139
  %117 = load float*, float** %rectf, align 8, !dbg !11077
  %118 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11079
  %rect_float142 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %118, i32 0, i32 9, !dbg !11080
  store float* %117, float** %rect_float142, align 8, !dbg !11081
  %119 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11082
  %flags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %119, i32 0, i32 6, !dbg !11083
  %120 = load i32, i32* %flags, align 8, !dbg !11084
  %or143 = or i32 %120, 32, !dbg !11084
  store i32 %or143, i32* %flags, align 8, !dbg !11084
  %121 = load i32, i32* %channels, align 4, !dbg !11085
  %122 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11086
  %channels144 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %122, i32 0, i32 5, !dbg !11087
  store i32 %121, i32* %channels144, align 4, !dbg !11088
  br label %if.end149, !dbg !11089

if.else145:                                       ; preds = %if.end139
  %123 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11090
  %rect_float146 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %123, i32 0, i32 9, !dbg !11092
  store float* null, float** %rect_float146, align 8, !dbg !11093
  %124 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11094
  %flags147 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %124, i32 0, i32 6, !dbg !11095
  %125 = load i32, i32* %flags147, align 8, !dbg !11096
  %and148 = and i32 %125, -33, !dbg !11096
  store i32 %and148, i32* %flags147, align 8, !dbg !11096
  br label %if.end149

if.end149:                                        ; preds = %if.else145, %if.then141
  %126 = load float*, float** %rectz, align 8, !dbg !11097
  %tobool150 = icmp ne float* %126, null, !dbg !11097
  br i1 %tobool150, label %if.then151, label %if.else154, !dbg !11099

if.then151:                                       ; preds = %if.end149
  %127 = load float*, float** %rectz, align 8, !dbg !11100
  %128 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11102
  %zbuf_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %128, i32 0, i32 17, !dbg !11103
  store float* %127, float** %zbuf_float, align 8, !dbg !11104
  %129 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11105
  %flags152 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %129, i32 0, i32 6, !dbg !11106
  %130 = load i32, i32* %flags152, align 8, !dbg !11107
  %or153 = or i32 %130, 64, !dbg !11107
  store i32 %or153, i32* %flags152, align 8, !dbg !11107
  br label %if.end158, !dbg !11108

if.else154:                                       ; preds = %if.end149
  %131 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11109
  %zbuf_float155 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %131, i32 0, i32 17, !dbg !11111
  store float* null, float** %zbuf_float155, align 8, !dbg !11112
  %132 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11113
  %flags156 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %132, i32 0, i32 6, !dbg !11114
  %133 = load i32, i32* %flags156, align 8, !dbg !11115
  %and157 = and i32 %133, -65, !dbg !11115
  store i32 %and157, i32* %flags156, align 8, !dbg !11115
  br label %if.end158

if.end158:                                        ; preds = %if.else154, %if.then151
  call void @BLI_unlock_thread(i32 8), !dbg !11116
  %134 = load float, float* %dither, align 4, !dbg !11117
  %135 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11118
  %dither159 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %135, i32 0, i32 18, !dbg !11119
  store float %134, float* %dither159, align 8, !dbg !11120
  %136 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !11121
  %ok = getelementptr inbounds %struct.Image, %struct.Image* %136, i32 0, i32 9, !dbg !11122
  store i16 2, i16* %ok, align 4, !dbg !11123
  %137 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11124
  store %struct.ImBuf* %137, %struct.ImBuf** %retval, align 8, !dbg !11125
  br label %return, !dbg !11125

return:                                           ; preds = %if.end158, %if.end35, %if.then5, %if.then
  %138 = load %struct.ImBuf*, %struct.ImBuf** %retval, align 8, !dbg !11126
  ret %struct.ImBuf* %138, !dbg !11126
}

declare dso_local void @BLI_lock_thread(i32) #1

declare dso_local i32 @IMB_anim_get_duration(%struct.anim*, i32) #1

declare dso_local %struct.ImBuf* @IMB_makeSingleUser(%struct.ImBuf*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @image_initialize_after_load(%struct.Image* %ima, %struct.ImBuf* %ibuf) #0 !dbg !11127 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !11128, metadata !DIExpression()), !dbg !11129
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !11130, metadata !DIExpression()), !dbg !11131
  %0 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 8), align 1, !dbg !11132
  %conv = zext i8 %0 to i32, !dbg !11134
  %cmp = icmp eq i32 %conv, 0, !dbg !11135
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11136

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !11137
  %preview = getelementptr inbounds %struct.Image, %struct.Image* %1, i32 0, i32 23, !dbg !11138
  %2 = load %struct.PreviewImage*, %struct.PreviewImage** %preview, align 8, !dbg !11138
  %cmp2 = icmp eq %struct.PreviewImage* %2, null, !dbg !11139
  br i1 %cmp2, label %if.then, label %if.end, !dbg !11140

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !11141
  %id = getelementptr inbounds %struct.Image, %struct.Image* %3, i32 0, i32 0, !dbg !11142
  %call = call i32 @BKE_icon_getid(%struct.ID* %id), !dbg !11143
  call void @BKE_icon_changed(i32 %call), !dbg !11144
  br label %if.end, !dbg !11144

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !11145
  %flag = getelementptr inbounds %struct.Image, %struct.Image* %4, i32 0, i32 10, !dbg !11147
  %5 = load i16, i16* %flag, align 2, !dbg !11147
  %conv4 = sext i16 %5 to i32, !dbg !11145
  %and = and i32 %conv4, 1, !dbg !11148
  %tobool = icmp ne i32 %and, 0, !dbg !11148
  br i1 %tobool, label %if.then5, label %if.end12, !dbg !11149

if.then5:                                         ; preds = %if.end
  %6 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !11150
  %flag6 = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 10, !dbg !11153
  %7 = load i16, i16* %flag6, align 2, !dbg !11153
  %conv7 = sext i16 %7 to i32, !dbg !11150
  %and8 = and i32 %conv7, 2, !dbg !11154
  %tobool9 = icmp ne i32 %and8, 0, !dbg !11154
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !11155

if.then10:                                        ; preds = %if.then5
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11156
  call void @de_interlace_st(%struct.ImBuf* %8), !dbg !11157
  br label %if.end11, !dbg !11157

if.else:                                          ; preds = %if.then5
  %9 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11158
  call void @de_interlace_ng(%struct.ImBuf* %9), !dbg !11159
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then10
  br label %if.end12, !dbg !11160

if.end12:                                         ; preds = %if.end11, %if.end
  %10 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !11161
  call void @BKE_image_tag_time(%struct.Image* %10), !dbg !11162
  %11 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !11163
  %ok = getelementptr inbounds %struct.Image, %struct.Image* %11, i32 0, i32 9, !dbg !11164
  store i16 2, i16* %ok, align 4, !dbg !11165
  ret void, !dbg !11166
}

declare dso_local void @BKE_icon_changed(i32) #1

declare dso_local i32 @BKE_icon_getid(%struct.ID*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @imbuf_alpha_flags_for_image(%struct.Image* %ima) #0 !dbg !11167 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %flag = alloca i32, align 4
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !11168, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !11170, metadata !DIExpression()), !dbg !11171
  store i32 0, i32* %flag, align 4, !dbg !11171
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !11172
  %flag1 = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 10, !dbg !11174
  %1 = load i16, i16* %flag1, align 2, !dbg !11174
  %conv = sext i16 %1 to i32, !dbg !11172
  %and = and i32 %conv, 4096, !dbg !11175
  %tobool = icmp ne i32 %and, 0, !dbg !11175
  br i1 %tobool, label %if.then, label %if.else, !dbg !11176

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %flag, align 4, !dbg !11177
  %or = or i32 %2, 16384, !dbg !11177
  store i32 %or, i32* %flag, align 4, !dbg !11177
  br label %if.end6, !dbg !11178

if.else:                                          ; preds = %entry
  %3 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !11179
  %alpha_mode = getelementptr inbounds %struct.Image, %struct.Image* %3, i32 0, i32 37, !dbg !11181
  %4 = load i8, i8* %alpha_mode, align 8, !dbg !11181
  %conv2 = zext i8 %4 to i32, !dbg !11179
  %cmp = icmp eq i32 %conv2, 1, !dbg !11182
  br i1 %cmp, label %if.then4, label %if.end, !dbg !11183

if.then4:                                         ; preds = %if.else
  %5 = load i32, i32* %flag, align 4, !dbg !11184
  %or5 = or i32 %5, 4096, !dbg !11184
  store i32 %or5, i32* %flag, align 4, !dbg !11184
  br label %if.end, !dbg !11185

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  %6 = load i32, i32* %flag, align 4, !dbg !11186
  ret i32 %6, !dbg !11187
}

declare dso_local %struct.ImBuf* @IMB_ibImageFromMemory(i8*, i64, i32, i8*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @image_create_multilayer(%struct.Image* %ima, %struct.ImBuf* %ibuf, i32 %framenr) #0 !dbg !11188 {
entry:
  %ima.addr = alloca %struct.Image*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %framenr.addr = alloca i32, align 4
  %colorspace = alloca i8*, align 8
  %predivide = alloca i8, align 1
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !11191, metadata !DIExpression()), !dbg !11192
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !11193, metadata !DIExpression()), !dbg !11194
  store i32 %framenr, i32* %framenr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %framenr.addr, metadata !11195, metadata !DIExpression()), !dbg !11196
  call void @llvm.dbg.declare(metadata i8** %colorspace, metadata !11197, metadata !DIExpression()), !dbg !11198
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !11199
  %colorspace_settings = getelementptr inbounds %struct.Image, %struct.Image* %0, i32 0, i32 36, !dbg !11200
  %name = getelementptr inbounds %struct.ColorManagedColorspaceSettings, %struct.ColorManagedColorspaceSettings* %colorspace_settings, i32 0, i32 0, !dbg !11201
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !11199
  store i8* %arraydecay, i8** %colorspace, align 8, !dbg !11198
  call void @llvm.dbg.declare(metadata i8* %predivide, metadata !11202, metadata !DIExpression()), !dbg !11203
  %1 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !11204
  %alpha_mode = getelementptr inbounds %struct.Image, %struct.Image* %1, i32 0, i32 37, !dbg !11205
  %2 = load i8, i8* %alpha_mode, align 8, !dbg !11205
  %conv = zext i8 %2 to i32, !dbg !11204
  %cmp = icmp eq i32 %conv, 1, !dbg !11206
  %conv1 = zext i1 %cmp to i32, !dbg !11206
  %conv2 = trunc i32 %conv1 to i8, !dbg !11207
  store i8 %conv2, i8* %predivide, align 1, !dbg !11203
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11208
  %userdata = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %3, i32 0, i32 25, !dbg !11209
  %4 = load i8*, i8** %userdata, align 8, !dbg !11209
  %5 = load i8*, i8** %colorspace, align 8, !dbg !11210
  %6 = load i8, i8* %predivide, align 1, !dbg !11211
  %7 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11212
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %7, i32 0, i32 2, !dbg !11213
  %8 = load i32, i32* %x, align 8, !dbg !11213
  %9 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11214
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %9, i32 0, i32 3, !dbg !11215
  %10 = load i32, i32* %y, align 4, !dbg !11215
  %call = call %struct.RenderResult* @RE_MultilayerConvert(i8* %4, i8* %5, i8 zeroext %6, i32 %8, i32 %10), !dbg !11216
  %11 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !11217
  %rr = getelementptr inbounds %struct.Image, %struct.Image* %11, i32 0, i32 5, !dbg !11218
  store %struct.RenderResult* %call, %struct.RenderResult** %rr, align 8, !dbg !11219
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !11220
  %userdata3 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %12, i32 0, i32 25, !dbg !11221
  store i8* null, i8** %userdata3, align 8, !dbg !11222
  %13 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !11223
  %rr4 = getelementptr inbounds %struct.Image, %struct.Image* %13, i32 0, i32 5, !dbg !11225
  %14 = load %struct.RenderResult*, %struct.RenderResult** %rr4, align 8, !dbg !11225
  %tobool = icmp ne %struct.RenderResult* %14, null, !dbg !11223
  br i1 %tobool, label %if.then, label %if.end, !dbg !11226

if.then:                                          ; preds = %entry
  %15 = load i32, i32* %framenr.addr, align 4, !dbg !11227
  %16 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !11228
  %rr5 = getelementptr inbounds %struct.Image, %struct.Image* %16, i32 0, i32 5, !dbg !11229
  %17 = load %struct.RenderResult*, %struct.RenderResult** %rr5, align 8, !dbg !11229
  %framenr6 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %17, i32 0, i32 16, !dbg !11230
  store i32 %15, i32* %framenr6, align 4, !dbg !11231
  br label %if.end, !dbg !11228

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11232
}

declare dso_local void @detectBitmapFont(%struct.ImBuf*) #1

declare dso_local %struct.RenderResult* @RE_MultilayerConvert(i8*, i8*, i8 zeroext, i32, i32) #1

declare dso_local void @RE_AcquireResultImage(%struct.Render*, %struct.RenderResult*) #1

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #1

declare dso_local i8* @IMB_colormanagement_get_display_colorspace_name(%struct.ColorManagedViewSettings*, %struct.ColorManagedDisplaySettings*) #1

declare dso_local void @imb_freerectImBuf(%struct.ImBuf*) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable willreturn }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2976, !2977, !2978}
!llvm.ident = !{!2979}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "image_spin", scope: !2, file: !3, line: 100, type: !2970, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !176, globals: !2969, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/blenkernel/intern/image.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !50, !55, !64, !72, !97, !109, !118, !126, !140}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 76, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49}
!9 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!19 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!20 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!21 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!22 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!23 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!24 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!25 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!26 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!27 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!28 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!29 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!30 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!31 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!32 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!33 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!34 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!35 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!36 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!37 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!38 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!39 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!40 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!41 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!42 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!43 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!44 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!45 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!46 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!47 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!48 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!49 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !51, line: 172, baseType: !7, size: 32, elements: !52)
!51 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!52 = !{!53, !54}
!53 = !DIEnumerator(name: "IMA_ALPHA_STRAIGHT", value: 0, isUnsigned: true)
!54 = !DIEnumerator(name: "IMA_ALPHA_PREMUL", value: 1, isUnsigned: true)
!55 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IMB_Timecode_Type", file: !56, line: 207, baseType: !7, size: 32, elements: !57)
!56 = !DIFile(filename: "blender/source/blender/imbuf/IMB_imbuf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!57 = !{!58, !59, !60, !61, !62, !63}
!58 = !DIEnumerator(name: "IMB_TC_NONE", value: 0, isUnsigned: true)
!59 = !DIEnumerator(name: "IMB_TC_RECORD_RUN", value: 1, isUnsigned: true)
!60 = !DIEnumerator(name: "IMB_TC_FREE_RUN", value: 2, isUnsigned: true)
!61 = !DIEnumerator(name: "IMB_TC_INTERPOLATED_REC_DATE_FREE_RUN", value: 4, isUnsigned: true)
!62 = !DIEnumerator(name: "IMB_TC_RECORD_RUN_NO_GAPS", value: 8, isUnsigned: true)
!63 = !DIEnumerator(name: "IMB_TC_MAX_SLOT", value: 4, isUnsigned: true)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IMB_Proxy_Size", file: !56, line: 224, baseType: !7, size: 32, elements: !65)
!65 = !{!66, !67, !68, !69, !70, !71}
!66 = !DIEnumerator(name: "IMB_PROXY_NONE", value: 0, isUnsigned: true)
!67 = !DIEnumerator(name: "IMB_PROXY_25", value: 1, isUnsigned: true)
!68 = !DIEnumerator(name: "IMB_PROXY_50", value: 2, isUnsigned: true)
!69 = !DIEnumerator(name: "IMB_PROXY_75", value: 4, isUnsigned: true)
!70 = !DIEnumerator(name: "IMB_PROXY_100", value: 8, isUnsigned: true)
!71 = !DIEnumerator(name: "IMB_PROXY_MAX_SLOT", value: 4, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpace_Type", file: !73, line: 1163, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!74 = !{!75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96}
!75 = !DIEnumerator(name: "SPACE_EMPTY", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "SPACE_VIEW3D", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "SPACE_IPO", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "SPACE_OUTLINER", value: 3, isUnsigned: true)
!79 = !DIEnumerator(name: "SPACE_BUTS", value: 4, isUnsigned: true)
!80 = !DIEnumerator(name: "SPACE_FILE", value: 5, isUnsigned: true)
!81 = !DIEnumerator(name: "SPACE_IMAGE", value: 6, isUnsigned: true)
!82 = !DIEnumerator(name: "SPACE_INFO", value: 7, isUnsigned: true)
!83 = !DIEnumerator(name: "SPACE_SEQ", value: 8, isUnsigned: true)
!84 = !DIEnumerator(name: "SPACE_TEXT", value: 9, isUnsigned: true)
!85 = !DIEnumerator(name: "SPACE_IMASEL", value: 10, isUnsigned: true)
!86 = !DIEnumerator(name: "SPACE_SOUND", value: 11, isUnsigned: true)
!87 = !DIEnumerator(name: "SPACE_ACTION", value: 12, isUnsigned: true)
!88 = !DIEnumerator(name: "SPACE_NLA", value: 13, isUnsigned: true)
!89 = !DIEnumerator(name: "SPACE_SCRIPT", value: 14, isUnsigned: true)
!90 = !DIEnumerator(name: "SPACE_TIME", value: 15, isUnsigned: true)
!91 = !DIEnumerator(name: "SPACE_NODE", value: 16, isUnsigned: true)
!92 = !DIEnumerator(name: "SPACE_LOGIC", value: 17, isUnsigned: true)
!93 = !DIEnumerator(name: "SPACE_CONSOLE", value: 18, isUnsigned: true)
!94 = !DIEnumerator(name: "SPACE_USERPREF", value: 19, isUnsigned: true)
!95 = !DIEnumerator(name: "SPACE_CLIP", value: 20, isUnsigned: true)
!96 = !DIEnumerator(name: "SPACEICONMAX", value: 20, isUnsigned: true)
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !51, line: 133, baseType: !7, size: 32, elements: !98)
!98 = !{!99, !100, !101, !102, !103, !104, !105, !106, !107, !108}
!99 = !DIEnumerator(name: "IMA_FIELDS", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "IMA_STD_FIELD", value: 2, isUnsigned: true)
!101 = !DIEnumerator(name: "IMA_DO_PREMUL", value: 4, isUnsigned: true)
!102 = !DIEnumerator(name: "IMA_REFLECT", value: 16, isUnsigned: true)
!103 = !DIEnumerator(name: "IMA_NOCOLLECT", value: 32, isUnsigned: true)
!104 = !DIEnumerator(name: "IMA_OLD_PREMUL", value: 128, isUnsigned: true)
!105 = !DIEnumerator(name: "IMA_USED_FOR_RENDER", value: 512, isUnsigned: true)
!106 = !DIEnumerator(name: "IMA_USER_FRAME_IN_RANGE", value: 1024, isUnsigned: true)
!107 = !DIEnumerator(name: "IMA_VIEW_AS_RENDER", value: 2048, isUnsigned: true)
!108 = !DIEnumerator(name: "IMA_IGNORE_ALPHA", value: 4096, isUnsigned: true)
!109 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !110, line: 201, baseType: !7, size: 32, elements: !111)
!110 = !DIFile(filename: "blender/source/blender/imbuf/IMB_colormanagement.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!111 = !{!112, !113, !114, !115, !116, !117}
!112 = !DIEnumerator(name: "COLOR_ROLE_SCENE_LINEAR", value: 0, isUnsigned: true)
!113 = !DIEnumerator(name: "COLOR_ROLE_COLOR_PICKING", value: 1, isUnsigned: true)
!114 = !DIEnumerator(name: "COLOR_ROLE_TEXTURE_PAINTING", value: 2, isUnsigned: true)
!115 = !DIEnumerator(name: "COLOR_ROLE_DEFAULT_SEQUENCER", value: 3, isUnsigned: true)
!116 = !DIEnumerator(name: "COLOR_ROLE_DEFAULT_BYTE", value: 4, isUnsigned: true)
!117 = !DIEnumerator(name: "COLOR_ROLE_DEFAULT_FLOAT", value: 5, isUnsigned: true)
!118 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eTimecodeStyles", file: !119, line: 774, baseType: !7, size: 32, elements: !120)
!119 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!120 = !{!121, !122, !123, !124, !125}
!121 = !DIEnumerator(name: "USER_TIMECODE_MINIMAL", value: 0, isUnsigned: true)
!122 = !DIEnumerator(name: "USER_TIMECODE_SMPTE_MSF", value: 1, isUnsigned: true)
!123 = !DIEnumerator(name: "USER_TIMECODE_SMPTE_FULL", value: 2, isUnsigned: true)
!124 = !DIEnumerator(name: "USER_TIMECODE_MILLISECONDS", value: 3, isUnsigned: true)
!125 = !DIEnumerator(name: "USER_TIMECODE_SECONDS_ONLY", value: 4, isUnsigned: true)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !127, line: 339, baseType: !7, size: 32, elements: !128)
!127 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!128 = !{!129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139}
!129 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!131 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!132 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!133 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!134 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!135 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!136 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!137 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!138 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!139 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ScenePassType", file: !141, line: 213, baseType: !142, size: 32, elements: !143)
!141 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!142 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!143 = !{!144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175}
!144 = !DIEnumerator(name: "SCE_PASS_COMBINED", value: 1)
!145 = !DIEnumerator(name: "SCE_PASS_Z", value: 2)
!146 = !DIEnumerator(name: "SCE_PASS_RGBA", value: 4)
!147 = !DIEnumerator(name: "SCE_PASS_DIFFUSE", value: 8)
!148 = !DIEnumerator(name: "SCE_PASS_SPEC", value: 16)
!149 = !DIEnumerator(name: "SCE_PASS_SHADOW", value: 32)
!150 = !DIEnumerator(name: "SCE_PASS_AO", value: 64)
!151 = !DIEnumerator(name: "SCE_PASS_REFLECT", value: 128)
!152 = !DIEnumerator(name: "SCE_PASS_NORMAL", value: 256)
!153 = !DIEnumerator(name: "SCE_PASS_VECTOR", value: 512)
!154 = !DIEnumerator(name: "SCE_PASS_REFRACT", value: 1024)
!155 = !DIEnumerator(name: "SCE_PASS_INDEXOB", value: 2048)
!156 = !DIEnumerator(name: "SCE_PASS_UV", value: 4096)
!157 = !DIEnumerator(name: "SCE_PASS_INDIRECT", value: 8192)
!158 = !DIEnumerator(name: "SCE_PASS_MIST", value: 16384)
!159 = !DIEnumerator(name: "SCE_PASS_RAYHITS", value: 32768)
!160 = !DIEnumerator(name: "SCE_PASS_EMIT", value: 65536)
!161 = !DIEnumerator(name: "SCE_PASS_ENVIRONMENT", value: 131072)
!162 = !DIEnumerator(name: "SCE_PASS_INDEXMA", value: 262144)
!163 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_DIRECT", value: 524288)
!164 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_INDIRECT", value: 1048576)
!165 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_COLOR", value: 2097152)
!166 = !DIEnumerator(name: "SCE_PASS_GLOSSY_DIRECT", value: 4194304)
!167 = !DIEnumerator(name: "SCE_PASS_GLOSSY_INDIRECT", value: 8388608)
!168 = !DIEnumerator(name: "SCE_PASS_GLOSSY_COLOR", value: 16777216)
!169 = !DIEnumerator(name: "SCE_PASS_TRANSM_DIRECT", value: 33554432)
!170 = !DIEnumerator(name: "SCE_PASS_TRANSM_INDIRECT", value: 67108864)
!171 = !DIEnumerator(name: "SCE_PASS_TRANSM_COLOR", value: 134217728)
!172 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_DIRECT", value: 268435456)
!173 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_INDIRECT", value: 536870912)
!174 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_COLOR", value: 1073741824)
!175 = !DIEnumerator(name: "SCE_PASS_DEBUG", value: -2147483648)
!176 = !{!177, !178, !2927, !208, !142, !1239, !1269, !2937, !185, !1231, !2939, !291, !2944, !857}
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTFace", file: !180, line: 165, baseType: !181)
!180 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !180, line: 160, size: 384, elements: !182)
!182 = !{!183, !189, !2922, !2923, !2924, !2925, !2926}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !181, file: !180, line: 161, baseType: !184, size: 256)
!184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 256, elements: !186)
!185 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!186 = !{!187, !188}
!187 = !DISubrange(count: 4)
!188 = !DISubrange(count: 2)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !181, file: !180, line: 162, baseType: !190, size: 64, offset: 256)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !51, line: 77, size: 15424, elements: !192)
!192 = !{!193, !268, !269, !273, !276, !279, !2882, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !191, file: !51, line: 78, baseType: !194, size: 960)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !195, line: 130, baseType: !196)
!195 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !195, line: 117, size: 960, elements: !197)
!197 = !{!198, !199, !200, !202, !227, !231, !233, !234, !235, !236}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !196, file: !195, line: 118, baseType: !177, size: 64)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !196, file: !195, line: 118, baseType: !177, size: 64, offset: 64)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !196, file: !195, line: 119, baseType: !201, size: 64, offset: 128)
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !196, file: !195, line: 120, baseType: !203, size: 64, offset: 192)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64)
!204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !195, line: 136, size: 17600, elements: !205)
!205 = !{!206, !207, !209, !212, !217, !218, !219}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !204, file: !195, line: 137, baseType: !194, size: 960)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !204, file: !195, line: 138, baseType: !208, size: 64, offset: 960)
!208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !204, file: !195, line: 139, baseType: !210, size: 64, offset: 1024)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64)
!211 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !195, line: 43, flags: DIFlagFwdDecl)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !204, file: !195, line: 140, baseType: !213, size: 8192, offset: 1088)
!213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 8192, elements: !215)
!214 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!215 = !{!216}
!216 = !DISubrange(count: 1024)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !204, file: !195, line: 141, baseType: !213, size: 8192, offset: 9280)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !204, file: !195, line: 148, baseType: !203, size: 64, offset: 17472)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !204, file: !195, line: 150, baseType: !220, size: 64, offset: 17536)
!220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !222, line: 37, size: 128, elements: !223)
!222 = !DIFile(filename: "blender/source/blender/makesdna/DNA_packedFile_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!223 = !{!224, !225, !226}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !221, file: !222, line: 38, baseType: !142, size: 32)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "seek", scope: !221, file: !222, line: 39, baseType: !142, size: 32, offset: 32)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !221, file: !222, line: 40, baseType: !177, size: 64, offset: 64)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !196, file: !195, line: 121, baseType: !228, size: 528, offset: 256)
!228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 528, elements: !229)
!229 = !{!230}
!230 = !DISubrange(count: 66)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !196, file: !195, line: 126, baseType: !232, size: 16, offset: 784)
!232 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !196, file: !195, line: 127, baseType: !142, size: 32, offset: 800)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !196, file: !195, line: 128, baseType: !142, size: 32, offset: 832)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !196, file: !195, line: 128, baseType: !142, size: 32, offset: 864)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !196, file: !195, line: 129, baseType: !237, size: 64, offset: 896)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64)
!238 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !195, line: 75, baseType: !239)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !195, line: 62, size: 1024, elements: !240)
!240 = !{!241, !243, !244, !245, !246, !247, !251, !252, !266, !267}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !239, file: !195, line: 63, baseType: !242, size: 64)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !239, file: !195, line: 63, baseType: !242, size: 64, offset: 64)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !239, file: !195, line: 64, baseType: !214, size: 8, offset: 128)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !239, file: !195, line: 64, baseType: !214, size: 8, offset: 136)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !239, file: !195, line: 65, baseType: !232, size: 16, offset: 144)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !239, file: !195, line: 66, baseType: !248, size: 512, offset: 160)
!248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 512, elements: !249)
!249 = !{!250}
!250 = !DISubrange(count: 64)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !239, file: !195, line: 67, baseType: !142, size: 32, offset: 672)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !239, file: !195, line: 69, baseType: !253, size: 256, offset: 704)
!253 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !195, line: 60, baseType: !254)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !195, line: 48, size: 256, elements: !255)
!255 = !{!256, !257, !264, !265}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !254, file: !195, line: 49, baseType: !177, size: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !254, file: !195, line: 58, baseType: !258, size: 128, offset: 64)
!258 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !259, line: 71, baseType: !260)
!259 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !259, line: 69, size: 128, elements: !261)
!261 = !{!262, !263}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !260, file: !259, line: 70, baseType: !177, size: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !260, file: !259, line: 70, baseType: !177, size: 64, offset: 64)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !254, file: !195, line: 59, baseType: !142, size: 32, offset: 192)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !254, file: !195, line: 59, baseType: !142, size: 32, offset: 224)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !239, file: !195, line: 70, baseType: !142, size: 32, offset: 960)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !239, file: !195, line: 74, baseType: !142, size: 32, offset: 992)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !191, file: !51, line: 80, baseType: !213, size: 8192, offset: 960)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !191, file: !51, line: 82, baseType: !270, size: 64, offset: 9152)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64)
!271 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !272, line: 43, flags: DIFlagFwdDecl)
!272 = !DIFile(filename: "blender/source/blender/imbuf/IMB_moviecache.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!273 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !191, file: !51, line: 83, baseType: !274, size: 64, offset: 9216)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!275 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !195, line: 46, flags: DIFlagFwdDecl)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !191, file: !51, line: 86, baseType: !277, size: 64, offset: 9280)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !56, line: 85, flags: DIFlagFwdDecl)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !191, file: !51, line: 87, baseType: !280, size: 64, offset: 9344)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !282, line: 110, size: 1152, elements: !283)
!282 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_pipeline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!283 = !{!284, !285, !286, !287, !288, !289, !290, !292, !294, !295, !304, !305, !306, !307, !309, !2878, !2879, !2880, !2881}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !281, file: !282, line: 111, baseType: !280, size: 64)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !281, file: !282, line: 111, baseType: !280, size: 64, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !281, file: !282, line: 114, baseType: !142, size: 32, offset: 128)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !281, file: !282, line: 114, baseType: !142, size: 32, offset: 160)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !281, file: !282, line: 115, baseType: !232, size: 16, offset: 192)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "sample_nr", scope: !281, file: !282, line: 115, baseType: !232, size: 16, offset: 208)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "rect32", scope: !281, file: !282, line: 118, baseType: !291, size: 64, offset: 256)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !281, file: !282, line: 120, baseType: !293, size: 64, offset: 320)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !281, file: !282, line: 122, baseType: !293, size: 64, offset: 384)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "tilerect", scope: !281, file: !282, line: 125, baseType: !296, size: 128, offset: 448)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !297, line: 89, baseType: !298)
!297 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !297, line: 86, size: 128, elements: !299)
!299 = !{!300, !301, !302, !303}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !298, file: !297, line: 87, baseType: !142, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !298, file: !297, line: 87, baseType: !142, size: 32, offset: 32)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !298, file: !297, line: 88, baseType: !142, size: 32, offset: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !298, file: !297, line: 88, baseType: !142, size: 32, offset: 96)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !281, file: !282, line: 127, baseType: !142, size: 32, offset: 576)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !281, file: !282, line: 127, baseType: !142, size: 32, offset: 608)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !281, file: !282, line: 130, baseType: !258, size: 128, offset: 640)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "renrect", scope: !281, file: !282, line: 133, baseType: !308, size: 128, offset: 768)
!308 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !296)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "renlay", scope: !281, file: !282, line: 134, baseType: !310, size: 64, offset: 896)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!311 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !312)
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderLayer", file: !282, line: 108, baseType: !313)
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderLayer", file: !282, line: 85, size: 1600, elements: !314)
!314 = !{!315, !317, !318, !322, !323, !324, !325, !326, !327, !328, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !313, file: !282, line: 86, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !313, file: !282, line: 86, baseType: !316, size: 64, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !313, file: !282, line: 89, baseType: !319, size: 592, offset: 128)
!319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 592, elements: !320)
!320 = !{!321}
!321 = !DISubrange(count: 74)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !313, file: !282, line: 90, baseType: !7, size: 32, offset: 736)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !313, file: !282, line: 90, baseType: !7, size: 32, offset: 768)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !313, file: !282, line: 90, baseType: !7, size: 32, offset: 800)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !313, file: !282, line: 91, baseType: !142, size: 32, offset: 832)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !313, file: !282, line: 91, baseType: !142, size: 32, offset: 864)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !313, file: !282, line: 91, baseType: !142, size: 32, offset: 896)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !313, file: !282, line: 93, baseType: !329, size: 64, offset: 960)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64)
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !331, line: 93, size: 7552, elements: !332)
!331 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!332 = !{!333, !334, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !386, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !454, !455, !456, !457, !458, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2868}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !330, file: !331, line: 94, baseType: !194, size: 960)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !330, file: !331, line: 95, baseType: !335, size: 64, offset: 960)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !141, line: 58, flags: DIFlagFwdDecl)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !330, file: !331, line: 97, baseType: !232, size: 16, offset: 1024)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !330, file: !331, line: 97, baseType: !232, size: 16, offset: 1040)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !330, file: !331, line: 99, baseType: !185, size: 32, offset: 1056)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !330, file: !331, line: 99, baseType: !185, size: 32, offset: 1088)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !330, file: !331, line: 99, baseType: !185, size: 32, offset: 1120)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !330, file: !331, line: 100, baseType: !185, size: 32, offset: 1152)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !330, file: !331, line: 100, baseType: !185, size: 32, offset: 1184)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !330, file: !331, line: 100, baseType: !185, size: 32, offset: 1216)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !330, file: !331, line: 101, baseType: !185, size: 32, offset: 1248)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !330, file: !331, line: 101, baseType: !185, size: 32, offset: 1280)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !330, file: !331, line: 101, baseType: !185, size: 32, offset: 1312)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !330, file: !331, line: 102, baseType: !185, size: 32, offset: 1344)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !330, file: !331, line: 102, baseType: !185, size: 32, offset: 1376)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !330, file: !331, line: 102, baseType: !185, size: 32, offset: 1408)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !330, file: !331, line: 103, baseType: !185, size: 32, offset: 1440)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !330, file: !331, line: 103, baseType: !185, size: 32, offset: 1472)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !330, file: !331, line: 103, baseType: !185, size: 32, offset: 1504)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !330, file: !331, line: 103, baseType: !185, size: 32, offset: 1536)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !330, file: !331, line: 103, baseType: !185, size: 32, offset: 1568)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !330, file: !331, line: 104, baseType: !185, size: 32, offset: 1600)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !330, file: !331, line: 104, baseType: !185, size: 32, offset: 1632)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !330, file: !331, line: 104, baseType: !185, size: 32, offset: 1664)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !330, file: !331, line: 104, baseType: !185, size: 32, offset: 1696)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !330, file: !331, line: 104, baseType: !185, size: 32, offset: 1728)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !330, file: !331, line: 105, baseType: !185, size: 32, offset: 1760)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !330, file: !331, line: 108, baseType: !363, size: 704, offset: 1792)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !331, line: 53, size: 704, elements: !364)
!364 = !{!365, !366, !367, !368, !369, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !363, file: !331, line: 54, baseType: !185, size: 32)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !363, file: !331, line: 55, baseType: !185, size: 32, offset: 32)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !363, file: !331, line: 56, baseType: !185, size: 32, offset: 64)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !363, file: !331, line: 57, baseType: !185, size: 32, offset: 96)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !363, file: !331, line: 59, baseType: !370, size: 96, offset: 128)
!370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 96, elements: !371)
!371 = !{!372}
!372 = !DISubrange(count: 3)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !363, file: !331, line: 60, baseType: !370, size: 96, offset: 224)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !363, file: !331, line: 61, baseType: !370, size: 96, offset: 320)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !363, file: !331, line: 63, baseType: !185, size: 32, offset: 416)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !363, file: !331, line: 64, baseType: !185, size: 32, offset: 448)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !363, file: !331, line: 65, baseType: !185, size: 32, offset: 480)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !363, file: !331, line: 67, baseType: !232, size: 16, offset: 512)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !363, file: !331, line: 68, baseType: !232, size: 16, offset: 528)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !363, file: !331, line: 69, baseType: !232, size: 16, offset: 544)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !363, file: !331, line: 70, baseType: !232, size: 16, offset: 560)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !363, file: !331, line: 72, baseType: !185, size: 32, offset: 576)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !363, file: !331, line: 73, baseType: !185, size: 32, offset: 608)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !363, file: !331, line: 74, baseType: !185, size: 32, offset: 640)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !363, file: !331, line: 75, baseType: !185, size: 32, offset: 672)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !330, file: !331, line: 109, baseType: !387, size: 128, offset: 2496)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !331, line: 79, size: 128, elements: !388)
!388 = !{!389, !390, !391, !392}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !387, file: !331, line: 80, baseType: !142, size: 32)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !387, file: !331, line: 81, baseType: !142, size: 32, offset: 32)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !387, file: !331, line: 82, baseType: !142, size: 32, offset: 64)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !387, file: !331, line: 83, baseType: !142, size: 32, offset: 96)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !330, file: !331, line: 111, baseType: !185, size: 32, offset: 2624)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !330, file: !331, line: 111, baseType: !185, size: 32, offset: 2656)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !330, file: !331, line: 112, baseType: !185, size: 32, offset: 2688)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !330, file: !331, line: 112, baseType: !185, size: 32, offset: 2720)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !330, file: !331, line: 113, baseType: !185, size: 32, offset: 2752)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !330, file: !331, line: 114, baseType: !185, size: 32, offset: 2784)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !330, file: !331, line: 114, baseType: !185, size: 32, offset: 2816)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !330, file: !331, line: 115, baseType: !232, size: 16, offset: 2848)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !330, file: !331, line: 115, baseType: !232, size: 16, offset: 2864)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !330, file: !331, line: 116, baseType: !232, size: 16, offset: 2880)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !330, file: !331, line: 117, baseType: !214, size: 8, offset: 2896)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !330, file: !331, line: 117, baseType: !214, size: 8, offset: 2904)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !330, file: !331, line: 119, baseType: !185, size: 32, offset: 2912)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !330, file: !331, line: 119, baseType: !185, size: 32, offset: 2944)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !330, file: !331, line: 120, baseType: !232, size: 16, offset: 2976)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !330, file: !331, line: 120, baseType: !232, size: 16, offset: 2992)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !330, file: !331, line: 121, baseType: !185, size: 32, offset: 3008)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !330, file: !331, line: 121, baseType: !185, size: 32, offset: 3040)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !330, file: !331, line: 122, baseType: !185, size: 32, offset: 3072)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !330, file: !331, line: 123, baseType: !185, size: 32, offset: 3104)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !330, file: !331, line: 124, baseType: !232, size: 16, offset: 3136)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !330, file: !331, line: 125, baseType: !232, size: 16, offset: 3152)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !330, file: !331, line: 127, baseType: !142, size: 32, offset: 3168)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !330, file: !331, line: 127, baseType: !142, size: 32, offset: 3200)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !330, file: !331, line: 128, baseType: !142, size: 32, offset: 3232)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !330, file: !331, line: 128, baseType: !142, size: 32, offset: 3264)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !330, file: !331, line: 129, baseType: !232, size: 16, offset: 3296)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !330, file: !331, line: 129, baseType: !232, size: 16, offset: 3312)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !330, file: !331, line: 129, baseType: !232, size: 16, offset: 3328)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !330, file: !331, line: 129, baseType: !232, size: 16, offset: 3344)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !330, file: !331, line: 130, baseType: !185, size: 32, offset: 3360)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !330, file: !331, line: 130, baseType: !185, size: 32, offset: 3392)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !330, file: !331, line: 130, baseType: !185, size: 32, offset: 3424)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !330, file: !331, line: 130, baseType: !185, size: 32, offset: 3456)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !330, file: !331, line: 131, baseType: !185, size: 32, offset: 3488)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !330, file: !331, line: 131, baseType: !185, size: 32, offset: 3520)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !330, file: !331, line: 131, baseType: !185, size: 32, offset: 3552)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !330, file: !331, line: 131, baseType: !185, size: 32, offset: 3584)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !330, file: !331, line: 132, baseType: !185, size: 32, offset: 3616)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !330, file: !331, line: 132, baseType: !185, size: 32, offset: 3648)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !330, file: !331, line: 133, baseType: !248, size: 512, offset: 3680)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !330, file: !331, line: 135, baseType: !185, size: 32, offset: 4192)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !330, file: !331, line: 136, baseType: !185, size: 32, offset: 4224)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !330, file: !331, line: 137, baseType: !185, size: 32, offset: 4256)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !330, file: !331, line: 138, baseType: !142, size: 32, offset: 4288)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !330, file: !331, line: 141, baseType: !214, size: 8, offset: 4320)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !330, file: !331, line: 141, baseType: !214, size: 8, offset: 4328)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !330, file: !331, line: 141, baseType: !214, size: 8, offset: 4336)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !330, file: !331, line: 141, baseType: !214, size: 8, offset: 4344)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !330, file: !331, line: 142, baseType: !232, size: 16, offset: 4352)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !330, file: !331, line: 142, baseType: !232, size: 16, offset: 4368)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !330, file: !331, line: 142, baseType: !232, size: 16, offset: 4384)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !330, file: !331, line: 145, baseType: !214, size: 8, offset: 4400)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !330, file: !331, line: 145, baseType: !214, size: 8, offset: 4408)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !330, file: !331, line: 148, baseType: !232, size: 16, offset: 4416)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !330, file: !331, line: 148, baseType: !232, size: 16, offset: 4432)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !330, file: !331, line: 149, baseType: !185, size: 32, offset: 4448)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !330, file: !331, line: 149, baseType: !185, size: 32, offset: 4480)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !330, file: !331, line: 152, baseType: !452, size: 128, offset: 4512)
!452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 128, elements: !453)
!453 = !{!187}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !330, file: !331, line: 153, baseType: !185, size: 32, offset: 4640)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !330, file: !331, line: 154, baseType: !185, size: 32, offset: 4672)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !330, file: !331, line: 157, baseType: !232, size: 16, offset: 4704)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !330, file: !331, line: 157, baseType: !232, size: 16, offset: 4720)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !330, file: !331, line: 160, baseType: !459, size: 64, offset: 4736)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !461, line: 113, size: 6208, elements: !462)
!461 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!462 = !{!463, !464, !465, !466, !467, !468, !472}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !460, file: !461, line: 114, baseType: !232, size: 16)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !460, file: !461, line: 114, baseType: !232, size: 16, offset: 16)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !460, file: !461, line: 115, baseType: !214, size: 8, offset: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !460, file: !461, line: 115, baseType: !214, size: 8, offset: 40)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !460, file: !461, line: 116, baseType: !214, size: 8, offset: 48)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !460, file: !461, line: 117, baseType: !469, size: 8, offset: 56)
!469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 8, elements: !470)
!470 = !{!471}
!471 = !DISubrange(count: 1)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !460, file: !461, line: 119, baseType: !473, size: 6144, offset: 64)
!473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 6144, elements: !483)
!474 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !461, line: 109, baseType: !475)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !461, line: 106, size: 192, elements: !476)
!476 = !{!477, !478, !479, !480, !481, !482}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !475, file: !461, line: 107, baseType: !185, size: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !475, file: !461, line: 107, baseType: !185, size: 32, offset: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !475, file: !461, line: 107, baseType: !185, size: 32, offset: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !475, file: !461, line: 107, baseType: !185, size: 32, offset: 96)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !475, file: !461, line: 107, baseType: !185, size: 32, offset: 128)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !475, file: !461, line: 108, baseType: !142, size: 32, offset: 160)
!483 = !{!484}
!484 = !DISubrange(count: 32)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !330, file: !331, line: 161, baseType: !459, size: 64, offset: 4800)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !330, file: !331, line: 162, baseType: !214, size: 8, offset: 4864)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !330, file: !331, line: 162, baseType: !214, size: 8, offset: 4872)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !330, file: !331, line: 163, baseType: !214, size: 8, offset: 4880)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !330, file: !331, line: 163, baseType: !214, size: 8, offset: 4888)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !330, file: !331, line: 164, baseType: !232, size: 16, offset: 4896)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !330, file: !331, line: 164, baseType: !232, size: 16, offset: 4912)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !330, file: !331, line: 165, baseType: !185, size: 32, offset: 4928)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !330, file: !331, line: 165, baseType: !185, size: 32, offset: 4960)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !330, file: !331, line: 167, baseType: !495, size: 1152, offset: 4992)
!495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 1152, elements: !2826)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64)
!497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !461, line: 57, size: 2496, elements: !498)
!498 = !{!499, !500, !501, !502, !503, !2625, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !497, file: !461, line: 59, baseType: !232, size: 16)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !497, file: !461, line: 59, baseType: !232, size: 16, offset: 16)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !497, file: !461, line: 59, baseType: !232, size: 16, offset: 32)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !497, file: !461, line: 59, baseType: !232, size: 16, offset: 48)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !497, file: !461, line: 60, baseType: !504, size: 64, offset: 64)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !127, line: 115, size: 11392, elements: !506)
!506 = !{!507, !508, !509, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !526, !536, !550, !551, !593, !594, !597, !598, !614, !615, !616, !617, !618, !619, !620, !622, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !700, !701, !702, !703, !704, !705, !706, !707, !708, !711, !714, !718, !719, !720, !721, !722, !725, !728, !731, !732, !738, !739, !740, !741, !742, !743, !745, !748, !751, !754, !2613, !2614}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !505, file: !127, line: 116, baseType: !194, size: 960)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !505, file: !127, line: 117, baseType: !335, size: 64, offset: 960)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !505, file: !127, line: 119, baseType: !510, size: 64, offset: 1024)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !127, line: 57, flags: DIFlagFwdDecl)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !505, file: !127, line: 121, baseType: !232, size: 16, offset: 1088)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !505, file: !127, line: 121, baseType: !232, size: 16, offset: 1104)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !505, file: !127, line: 122, baseType: !142, size: 32, offset: 1120)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !505, file: !127, line: 122, baseType: !142, size: 32, offset: 1152)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !505, file: !127, line: 122, baseType: !142, size: 32, offset: 1184)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !505, file: !127, line: 123, baseType: !248, size: 512, offset: 1216)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !505, file: !127, line: 124, baseType: !504, size: 64, offset: 1728)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !505, file: !127, line: 124, baseType: !504, size: 64, offset: 1792)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !505, file: !127, line: 127, baseType: !504, size: 64, offset: 1856)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !505, file: !127, line: 127, baseType: !504, size: 64, offset: 1920)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !505, file: !127, line: 127, baseType: !504, size: 64, offset: 1984)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !505, file: !127, line: 128, baseType: !524, size: 64, offset: 2048)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64)
!525 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !461, line: 46, flags: DIFlagFwdDecl)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !505, file: !127, line: 130, baseType: !527, size: 64, offset: 2112)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !127, line: 97, size: 832, elements: !529)
!529 = !{!530, !534, !535}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !528, file: !127, line: 98, baseType: !531, size: 768)
!531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 768, elements: !532)
!532 = !{!533, !372}
!533 = !DISubrange(count: 8)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !528, file: !127, line: 99, baseType: !142, size: 32, offset: 768)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !528, file: !127, line: 99, baseType: !142, size: 32, offset: 800)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !505, file: !127, line: 131, baseType: !537, size: 64, offset: 2176)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64)
!538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !539, line: 486, size: 1600, elements: !540)
!539 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!540 = !{!541, !542, !543, !544, !545, !546, !547, !548, !549}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !538, file: !539, line: 487, baseType: !194, size: 960)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !538, file: !539, line: 489, baseType: !258, size: 128, offset: 960)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !538, file: !539, line: 490, baseType: !258, size: 128, offset: 1088)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !538, file: !539, line: 491, baseType: !258, size: 128, offset: 1216)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !538, file: !539, line: 492, baseType: !258, size: 128, offset: 1344)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !538, file: !539, line: 494, baseType: !142, size: 32, offset: 1472)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !538, file: !539, line: 495, baseType: !142, size: 32, offset: 1504)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !538, file: !539, line: 497, baseType: !142, size: 32, offset: 1536)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !538, file: !539, line: 498, baseType: !142, size: 32, offset: 1568)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !505, file: !127, line: 132, baseType: !537, size: 64, offset: 2240)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !505, file: !127, line: 133, baseType: !552, size: 64, offset: 2304)
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !539, line: 334, size: 1728, elements: !554)
!554 = !{!555, !556, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !592}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !553, file: !539, line: 335, baseType: !258, size: 128)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !553, file: !539, line: 336, baseType: !557, size: 64, offset: 128)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!558 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !559, line: 48, flags: DIFlagFwdDecl)
!559 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!560 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !553, file: !539, line: 338, baseType: !232, size: 16, offset: 192)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !553, file: !539, line: 338, baseType: !232, size: 16, offset: 208)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !553, file: !539, line: 339, baseType: !7, size: 32, offset: 224)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !553, file: !539, line: 340, baseType: !142, size: 32, offset: 256)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !553, file: !539, line: 342, baseType: !185, size: 32, offset: 288)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !553, file: !539, line: 343, baseType: !370, size: 96, offset: 320)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !553, file: !539, line: 344, baseType: !370, size: 96, offset: 416)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !553, file: !539, line: 347, baseType: !258, size: 128, offset: 512)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !553, file: !539, line: 349, baseType: !142, size: 32, offset: 640)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !553, file: !539, line: 350, baseType: !142, size: 32, offset: 672)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !553, file: !539, line: 351, baseType: !177, size: 64, offset: 704)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !553, file: !539, line: 352, baseType: !177, size: 64, offset: 768)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !553, file: !539, line: 354, baseType: !573, size: 384, offset: 832)
!573 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !539, line: 116, baseType: !574)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !539, line: 94, size: 384, elements: !575)
!575 = !{!576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !574, file: !539, line: 96, baseType: !142, size: 32)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !574, file: !539, line: 96, baseType: !142, size: 32, offset: 32)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !574, file: !539, line: 97, baseType: !142, size: 32, offset: 64)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !574, file: !539, line: 97, baseType: !142, size: 32, offset: 96)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !574, file: !539, line: 99, baseType: !232, size: 16, offset: 128)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !574, file: !539, line: 100, baseType: !232, size: 16, offset: 144)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !574, file: !539, line: 102, baseType: !232, size: 16, offset: 160)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !574, file: !539, line: 105, baseType: !232, size: 16, offset: 176)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !574, file: !539, line: 108, baseType: !232, size: 16, offset: 192)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !574, file: !539, line: 109, baseType: !232, size: 16, offset: 208)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !574, file: !539, line: 111, baseType: !232, size: 16, offset: 224)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !574, file: !539, line: 112, baseType: !232, size: 16, offset: 240)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !574, file: !539, line: 114, baseType: !142, size: 32, offset: 256)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !574, file: !539, line: 114, baseType: !142, size: 32, offset: 288)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !574, file: !539, line: 115, baseType: !142, size: 32, offset: 320)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !574, file: !539, line: 115, baseType: !142, size: 32, offset: 352)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !553, file: !539, line: 355, baseType: !248, size: 512, offset: 1216)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !505, file: !127, line: 134, baseType: !177, size: 64, offset: 2368)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !505, file: !127, line: 136, baseType: !595, size: 64, offset: 2432)
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 64)
!596 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !141, line: 61, flags: DIFlagFwdDecl)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !505, file: !127, line: 138, baseType: !573, size: 384, offset: 2496)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !505, file: !127, line: 139, baseType: !599, size: 64, offset: 2880)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !539, line: 80, baseType: !601)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !539, line: 72, size: 192, elements: !602)
!602 = !{!603, !610, !611, !612, !613}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !601, file: !539, line: 73, baseType: !604, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64)
!605 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !539, line: 59, baseType: !606)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !539, line: 56, size: 128, elements: !607)
!607 = !{!608, !609}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !606, file: !539, line: 57, baseType: !370, size: 96)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !606, file: !539, line: 58, baseType: !142, size: 32, offset: 96)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !601, file: !539, line: 74, baseType: !142, size: 32, offset: 64)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !601, file: !539, line: 76, baseType: !142, size: 32, offset: 96)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !601, file: !539, line: 77, baseType: !142, size: 32, offset: 128)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !601, file: !539, line: 79, baseType: !142, size: 32, offset: 160)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !505, file: !127, line: 141, baseType: !258, size: 128, offset: 2944)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !505, file: !127, line: 142, baseType: !258, size: 128, offset: 3072)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !505, file: !127, line: 143, baseType: !258, size: 128, offset: 3200)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !505, file: !127, line: 144, baseType: !258, size: 128, offset: 3328)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !505, file: !127, line: 146, baseType: !142, size: 32, offset: 3456)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !505, file: !127, line: 147, baseType: !142, size: 32, offset: 3488)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !505, file: !127, line: 150, baseType: !621, size: 64, offset: 3520)
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !505, file: !127, line: 151, baseType: !623, size: 64, offset: 3584)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !505, file: !127, line: 152, baseType: !142, size: 32, offset: 3648)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !505, file: !127, line: 153, baseType: !142, size: 32, offset: 3680)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !505, file: !127, line: 156, baseType: !370, size: 96, offset: 3712)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !505, file: !127, line: 156, baseType: !370, size: 96, offset: 3808)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !505, file: !127, line: 156, baseType: !370, size: 96, offset: 3904)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !505, file: !127, line: 157, baseType: !370, size: 96, offset: 4000)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !505, file: !127, line: 158, baseType: !370, size: 96, offset: 4096)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !505, file: !127, line: 159, baseType: !370, size: 96, offset: 4192)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !505, file: !127, line: 160, baseType: !370, size: 96, offset: 4288)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !505, file: !127, line: 160, baseType: !370, size: 96, offset: 4384)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !505, file: !127, line: 161, baseType: !452, size: 128, offset: 4480)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !505, file: !127, line: 161, baseType: !452, size: 128, offset: 4608)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !505, file: !127, line: 162, baseType: !370, size: 96, offset: 4736)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !505, file: !127, line: 162, baseType: !370, size: 96, offset: 4832)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !505, file: !127, line: 163, baseType: !185, size: 32, offset: 4928)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !505, file: !127, line: 163, baseType: !185, size: 32, offset: 4960)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !505, file: !127, line: 164, baseType: !641, size: 512, offset: 4992)
!641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 512, elements: !642)
!642 = !{!187, !187}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !505, file: !127, line: 165, baseType: !641, size: 512, offset: 5504)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !505, file: !127, line: 166, baseType: !641, size: 512, offset: 6016)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !505, file: !127, line: 167, baseType: !641, size: 512, offset: 6528)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !505, file: !127, line: 176, baseType: !641, size: 512, offset: 7040)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !505, file: !127, line: 178, baseType: !7, size: 32, offset: 7552)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !505, file: !127, line: 180, baseType: !232, size: 16, offset: 7584)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !505, file: !127, line: 181, baseType: !232, size: 16, offset: 7600)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !505, file: !127, line: 183, baseType: !232, size: 16, offset: 7616)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !505, file: !127, line: 183, baseType: !232, size: 16, offset: 7632)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !505, file: !127, line: 184, baseType: !232, size: 16, offset: 7648)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !505, file: !127, line: 184, baseType: !232, size: 16, offset: 7664)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !505, file: !127, line: 185, baseType: !232, size: 16, offset: 7680)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !505, file: !127, line: 186, baseType: !232, size: 16, offset: 7696)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !505, file: !127, line: 187, baseType: !232, size: 16, offset: 7712)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !505, file: !127, line: 188, baseType: !214, size: 8, offset: 7728)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !505, file: !127, line: 189, baseType: !214, size: 8, offset: 7736)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !505, file: !127, line: 192, baseType: !142, size: 32, offset: 7744)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !505, file: !127, line: 192, baseType: !142, size: 32, offset: 7776)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !505, file: !127, line: 192, baseType: !142, size: 32, offset: 7808)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !505, file: !127, line: 192, baseType: !142, size: 32, offset: 7840)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !505, file: !127, line: 194, baseType: !142, size: 32, offset: 7872)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !505, file: !127, line: 202, baseType: !185, size: 32, offset: 7904)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !505, file: !127, line: 202, baseType: !185, size: 32, offset: 7936)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !505, file: !127, line: 202, baseType: !185, size: 32, offset: 7968)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !505, file: !127, line: 211, baseType: !185, size: 32, offset: 8000)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !505, file: !127, line: 212, baseType: !185, size: 32, offset: 8032)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !505, file: !127, line: 213, baseType: !185, size: 32, offset: 8064)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !505, file: !127, line: 214, baseType: !185, size: 32, offset: 8096)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !505, file: !127, line: 215, baseType: !185, size: 32, offset: 8128)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !505, file: !127, line: 216, baseType: !185, size: 32, offset: 8160)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !505, file: !127, line: 219, baseType: !185, size: 32, offset: 8192)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !505, file: !127, line: 220, baseType: !185, size: 32, offset: 8224)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !505, file: !127, line: 221, baseType: !185, size: 32, offset: 8256)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !505, file: !127, line: 224, baseType: !677, size: 16, offset: 8288)
!677 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !505, file: !127, line: 224, baseType: !677, size: 16, offset: 8304)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !505, file: !127, line: 226, baseType: !232, size: 16, offset: 8320)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !505, file: !127, line: 228, baseType: !214, size: 8, offset: 8336)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !505, file: !127, line: 229, baseType: !214, size: 8, offset: 8344)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !505, file: !127, line: 231, baseType: !232, size: 16, offset: 8352)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !505, file: !127, line: 232, baseType: !214, size: 8, offset: 8368)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !505, file: !127, line: 233, baseType: !214, size: 8, offset: 8376)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !505, file: !127, line: 234, baseType: !185, size: 32, offset: 8384)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !505, file: !127, line: 235, baseType: !185, size: 32, offset: 8416)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !505, file: !127, line: 237, baseType: !258, size: 128, offset: 8448)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !505, file: !127, line: 238, baseType: !258, size: 128, offset: 8576)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !505, file: !127, line: 239, baseType: !258, size: 128, offset: 8704)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !505, file: !127, line: 240, baseType: !258, size: 128, offset: 8832)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !505, file: !127, line: 242, baseType: !185, size: 32, offset: 8960)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !505, file: !127, line: 244, baseType: !232, size: 16, offset: 8992)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !505, file: !127, line: 245, baseType: !677, size: 16, offset: 9008)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !505, file: !127, line: 246, baseType: !452, size: 128, offset: 9024)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !505, file: !127, line: 248, baseType: !142, size: 32, offset: 9152)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !505, file: !127, line: 249, baseType: !142, size: 32, offset: 9184)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !505, file: !127, line: 251, baseType: !698, size: 64, offset: 9216)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !127, line: 251, flags: DIFlagFwdDecl)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !505, file: !127, line: 253, baseType: !214, size: 8, offset: 9280)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !505, file: !127, line: 254, baseType: !214, size: 8, offset: 9288)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !505, file: !127, line: 255, baseType: !232, size: 16, offset: 9296)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !505, file: !127, line: 256, baseType: !370, size: 96, offset: 9312)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !505, file: !127, line: 258, baseType: !258, size: 128, offset: 9408)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !505, file: !127, line: 259, baseType: !258, size: 128, offset: 9536)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !505, file: !127, line: 260, baseType: !258, size: 128, offset: 9664)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !505, file: !127, line: 261, baseType: !258, size: 128, offset: 9792)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !505, file: !127, line: 263, baseType: !709, size: 64, offset: 9920)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!710 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !127, line: 52, flags: DIFlagFwdDecl)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !505, file: !127, line: 264, baseType: !712, size: 64, offset: 9984)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !127, line: 53, flags: DIFlagFwdDecl)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !505, file: !127, line: 265, baseType: !715, size: 64, offset: 10048)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !717, line: 43, flags: DIFlagFwdDecl)
!717 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!718 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !505, file: !127, line: 267, baseType: !214, size: 8, offset: 10112)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !505, file: !127, line: 268, baseType: !214, size: 8, offset: 10120)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !505, file: !127, line: 269, baseType: !232, size: 16, offset: 10128)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !505, file: !127, line: 270, baseType: !185, size: 32, offset: 10144)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !505, file: !127, line: 272, baseType: !723, size: 64, offset: 10176)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !127, line: 54, flags: DIFlagFwdDecl)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !505, file: !127, line: 275, baseType: !726, size: 64, offset: 10240)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !127, line: 275, flags: DIFlagFwdDecl)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !505, file: !127, line: 277, baseType: !729, size: 64, offset: 10304)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !127, line: 56, flags: DIFlagFwdDecl)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !505, file: !127, line: 277, baseType: !729, size: 64, offset: 10368)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !505, file: !127, line: 278, baseType: !733, size: 64, offset: 10432)
!733 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !734, line: 27, baseType: !735)
!734 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !736, line: 45, baseType: !737)
!736 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!737 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !505, file: !127, line: 279, baseType: !733, size: 64, offset: 10496)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !505, file: !127, line: 280, baseType: !7, size: 32, offset: 10560)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !505, file: !127, line: 281, baseType: !7, size: 32, offset: 10592)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !505, file: !127, line: 283, baseType: !258, size: 128, offset: 10624)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !505, file: !127, line: 284, baseType: !258, size: 128, offset: 10752)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !505, file: !127, line: 285, baseType: !744, size: 64, offset: 10880)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !505, file: !127, line: 287, baseType: !746, size: 64, offset: 10944)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !127, line: 59, flags: DIFlagFwdDecl)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !505, file: !127, line: 288, baseType: !749, size: 64, offset: 11008)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!750 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !127, line: 288, flags: DIFlagFwdDecl)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !505, file: !127, line: 290, baseType: !752, size: 64, offset: 11072)
!752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 64, elements: !753)
!753 = !{!188}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !505, file: !127, line: 291, baseType: !755, size: 64, offset: 11136)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !51, line: 65, baseType: !757)
!757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !51, line: 50, size: 320, elements: !758)
!758 = !{!759, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !757, file: !51, line: 51, baseType: !760, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !141, line: 1216, size: 39680, elements: !762)
!762 = !{!763, !764, !765, !766, !1487, !1488, !1489, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1860, !2231, !2234, !2475, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2497, !2498, !2499, !2500, !2501, !2509, !2576, !2583, !2584, !2591, !2592, !2593, !2594, !2595, !2596, !2597}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !761, file: !141, line: 1217, baseType: !194, size: 960)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !761, file: !141, line: 1218, baseType: !335, size: 64, offset: 960)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !761, file: !141, line: 1220, baseType: !504, size: 64, offset: 1024)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !761, file: !141, line: 1221, baseType: !767, size: 64, offset: 1088)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !769, line: 52, size: 4224, elements: !770)
!769 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !846, !860}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !768, file: !769, line: 53, baseType: !194, size: 960)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !768, file: !769, line: 54, baseType: !335, size: 64, offset: 960)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !768, file: !769, line: 56, baseType: !232, size: 16, offset: 1024)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !768, file: !769, line: 56, baseType: !232, size: 16, offset: 1040)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !768, file: !769, line: 57, baseType: !232, size: 16, offset: 1056)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !768, file: !769, line: 57, baseType: !232, size: 16, offset: 1072)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !768, file: !769, line: 59, baseType: !185, size: 32, offset: 1088)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !768, file: !769, line: 59, baseType: !185, size: 32, offset: 1120)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !768, file: !769, line: 59, baseType: !185, size: 32, offset: 1152)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !768, file: !769, line: 60, baseType: !185, size: 32, offset: 1184)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !768, file: !769, line: 60, baseType: !185, size: 32, offset: 1216)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !768, file: !769, line: 60, baseType: !185, size: 32, offset: 1248)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !768, file: !769, line: 61, baseType: !185, size: 32, offset: 1280)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !768, file: !769, line: 61, baseType: !185, size: 32, offset: 1312)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !768, file: !769, line: 61, baseType: !185, size: 32, offset: 1344)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !768, file: !769, line: 68, baseType: !185, size: 32, offset: 1376)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !768, file: !769, line: 68, baseType: !185, size: 32, offset: 1408)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !768, file: !769, line: 68, baseType: !185, size: 32, offset: 1440)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !768, file: !769, line: 69, baseType: !185, size: 32, offset: 1472)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !768, file: !769, line: 69, baseType: !185, size: 32, offset: 1504)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !768, file: !769, line: 74, baseType: !185, size: 32, offset: 1536)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !768, file: !769, line: 79, baseType: !185, size: 32, offset: 1568)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !768, file: !769, line: 81, baseType: !232, size: 16, offset: 1600)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !768, file: !769, line: 91, baseType: !232, size: 16, offset: 1616)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !768, file: !769, line: 92, baseType: !232, size: 16, offset: 1632)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !768, file: !769, line: 93, baseType: !232, size: 16, offset: 1648)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !768, file: !769, line: 94, baseType: !232, size: 16, offset: 1664)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !768, file: !769, line: 94, baseType: !232, size: 16, offset: 1680)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !768, file: !769, line: 94, baseType: !232, size: 16, offset: 1696)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !768, file: !769, line: 94, baseType: !232, size: 16, offset: 1712)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !768, file: !769, line: 96, baseType: !185, size: 32, offset: 1728)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !768, file: !769, line: 96, baseType: !185, size: 32, offset: 1760)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !768, file: !769, line: 96, baseType: !185, size: 32, offset: 1792)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !768, file: !769, line: 96, baseType: !185, size: 32, offset: 1824)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !768, file: !769, line: 98, baseType: !185, size: 32, offset: 1856)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !768, file: !769, line: 98, baseType: !185, size: 32, offset: 1888)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !768, file: !769, line: 98, baseType: !185, size: 32, offset: 1920)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !768, file: !769, line: 98, baseType: !185, size: 32, offset: 1952)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !768, file: !769, line: 99, baseType: !185, size: 32, offset: 1984)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !768, file: !769, line: 99, baseType: !185, size: 32, offset: 2016)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !768, file: !769, line: 100, baseType: !185, size: 32, offset: 2048)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !768, file: !769, line: 100, baseType: !185, size: 32, offset: 2080)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !768, file: !769, line: 103, baseType: !232, size: 16, offset: 2112)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !768, file: !769, line: 103, baseType: !232, size: 16, offset: 2128)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !768, file: !769, line: 103, baseType: !232, size: 16, offset: 2144)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !768, file: !769, line: 103, baseType: !232, size: 16, offset: 2160)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !768, file: !769, line: 106, baseType: !185, size: 32, offset: 2176)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !768, file: !769, line: 106, baseType: !185, size: 32, offset: 2208)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !768, file: !769, line: 106, baseType: !185, size: 32, offset: 2240)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !768, file: !769, line: 106, baseType: !185, size: 32, offset: 2272)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !768, file: !769, line: 107, baseType: !232, size: 16, offset: 2304)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !768, file: !769, line: 107, baseType: !232, size: 16, offset: 2320)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !768, file: !769, line: 107, baseType: !232, size: 16, offset: 2336)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !768, file: !769, line: 107, baseType: !232, size: 16, offset: 2352)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !768, file: !769, line: 108, baseType: !185, size: 32, offset: 2368)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !768, file: !769, line: 108, baseType: !185, size: 32, offset: 2400)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !768, file: !769, line: 109, baseType: !185, size: 32, offset: 2432)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !768, file: !769, line: 109, baseType: !185, size: 32, offset: 2464)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !768, file: !769, line: 110, baseType: !185, size: 32, offset: 2496)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !768, file: !769, line: 110, baseType: !185, size: 32, offset: 2528)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !768, file: !769, line: 110, baseType: !185, size: 32, offset: 2560)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !768, file: !769, line: 111, baseType: !232, size: 16, offset: 2592)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !768, file: !769, line: 111, baseType: !232, size: 16, offset: 2608)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !768, file: !769, line: 112, baseType: !232, size: 16, offset: 2624)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !768, file: !769, line: 112, baseType: !232, size: 16, offset: 2640)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !768, file: !769, line: 112, baseType: !232, size: 16, offset: 2656)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !768, file: !769, line: 115, baseType: !232, size: 16, offset: 2672)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !768, file: !769, line: 118, baseType: !293, size: 64, offset: 2688)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !768, file: !769, line: 118, baseType: !293, size: 64, offset: 2752)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !768, file: !769, line: 121, baseType: !524, size: 64, offset: 2816)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !768, file: !769, line: 122, baseType: !495, size: 1152, offset: 2880)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !768, file: !769, line: 123, baseType: !232, size: 16, offset: 4032)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !768, file: !769, line: 123, baseType: !232, size: 16, offset: 4048)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !768, file: !769, line: 123, baseType: !845, size: 32, offset: 4064)
!845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !232, size: 32, elements: !753)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !768, file: !769, line: 126, baseType: !847, size: 64, offset: 4096)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !195, line: 159, size: 448, elements: !849)
!849 = !{!850, !852, !853, !854, !855, !858}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !848, file: !195, line: 161, baseType: !851, size: 64)
!851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !753)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !848, file: !195, line: 162, baseType: !851, size: 64, offset: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !848, file: !195, line: 163, baseType: !845, size: 32, offset: 128)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !848, file: !195, line: 164, baseType: !845, size: 32, offset: 160)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !848, file: !195, line: 165, baseType: !856, size: 128, offset: 192)
!856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !857, size: 128, elements: !753)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !848, file: !195, line: 166, baseType: !859, size: 128, offset: 320)
!859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 128, elements: !753)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !768, file: !769, line: 129, baseType: !861, size: 64, offset: 4160)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !863, line: 328, size: 3456, elements: !864)
!863 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!864 = !{!865, !866, !867, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1465, !1466, !1467, !1470, !1474, !1478, !1482, !1483, !1484, !1485, !1486}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !862, file: !863, line: 329, baseType: !194, size: 960)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !862, file: !863, line: 330, baseType: !335, size: 64, offset: 960)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !862, file: !863, line: 332, baseType: !868, size: 64, offset: 1024)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !870, line: 283, size: 4096, elements: !871)
!870 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_node.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!871 = !{!872, !873, !874, !875, !879, !880, !884, !1406, !1414, !1418, !1424, !1428, !1429, !1430, !1431, !1435, !1436}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !869, file: !870, line: 284, baseType: !142, size: 32)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !869, file: !870, line: 285, baseType: !248, size: 512, offset: 32)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !869, file: !870, line: 287, baseType: !248, size: 512, offset: 544)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !869, file: !870, line: 288, baseType: !876, size: 2048, offset: 1056)
!876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 2048, elements: !877)
!877 = !{!878}
!878 = !DISubrange(count: 256)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !869, file: !870, line: 289, baseType: !142, size: 32, offset: 3104)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "free_cache", scope: !869, file: !870, line: 292, baseType: !881, size: 64, offset: 3136)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!882 = !DISubroutineType(types: !883)
!883 = !{null, !861}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "free_node_cache", scope: !869, file: !870, line: 293, baseType: !885, size: 64, offset: 3200)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DISubroutineType(types: !887)
!887 = !{null, !861, !888}
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNode", file: !863, line: 167, size: 3712, elements: !890)
!890 = !{!891, !892, !893, !894, !895, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !889, file: !863, line: 168, baseType: !888, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !889, file: !863, line: 168, baseType: !888, size: 64, offset: 64)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "new_node", scope: !889, file: !863, line: 168, baseType: !888, size: 64, offset: 128)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !889, file: !863, line: 170, baseType: !237, size: 64, offset: 192)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !889, file: !863, line: 172, baseType: !896, size: 64, offset: 256)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeType", file: !870, line: 144, size: 6016, elements: !898)
!898 = !{!899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !1074, !1075, !1076, !1209, !1213, !1217, !1218, !1289, !1293, !1297, !1298, !1299, !1300, !1304, !1305, !1309, !1313, !1317, !1321, !1325, !1329, !1333, !1334, !1341, !1343, !1352, !1361}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !897, file: !870, line: 145, baseType: !177, size: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !897, file: !870, line: 145, baseType: !177, size: 64, offset: 64)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free", scope: !897, file: !870, line: 146, baseType: !232, size: 16, offset: 128)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !897, file: !870, line: 148, baseType: !248, size: 512, offset: 144)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !897, file: !870, line: 149, baseType: !142, size: 32, offset: 672)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !897, file: !870, line: 151, baseType: !248, size: 512, offset: 704)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !897, file: !870, line: 152, baseType: !876, size: 2048, offset: 1216)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !897, file: !870, line: 153, baseType: !142, size: 32, offset: 3264)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !897, file: !870, line: 155, baseType: !185, size: 32, offset: 3296)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !897, file: !870, line: 155, baseType: !185, size: 32, offset: 3328)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !897, file: !870, line: 155, baseType: !185, size: 32, offset: 3360)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !897, file: !870, line: 156, baseType: !185, size: 32, offset: 3392)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "minheight", scope: !897, file: !870, line: 156, baseType: !185, size: 32, offset: 3424)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "maxheight", scope: !897, file: !870, line: 156, baseType: !185, size: 32, offset: 3456)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "nclass", scope: !897, file: !870, line: 157, baseType: !232, size: 16, offset: 3488)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !897, file: !870, line: 157, baseType: !232, size: 16, offset: 3504)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "compatibility", scope: !897, file: !870, line: 157, baseType: !232, size: 16, offset: 3520)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !897, file: !870, line: 160, baseType: !917, size: 64, offset: 3584)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocketTemplate", file: !870, line: 109, baseType: !919)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketTemplate", file: !870, line: 98, size: 1408, elements: !920)
!920 = !{!921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !1073}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !919, file: !870, line: 99, baseType: !142, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !919, file: !870, line: 99, baseType: !142, size: 32, offset: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !919, file: !870, line: 100, baseType: !248, size: 512, offset: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "val1", scope: !919, file: !870, line: 101, baseType: !185, size: 32, offset: 576)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !919, file: !870, line: 101, baseType: !185, size: 32, offset: 608)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "val3", scope: !919, file: !870, line: 101, baseType: !185, size: 32, offset: 640)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "val4", scope: !919, file: !870, line: 101, baseType: !185, size: 32, offset: 672)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !919, file: !870, line: 102, baseType: !185, size: 32, offset: 704)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !919, file: !870, line: 102, baseType: !185, size: 32, offset: 736)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !919, file: !870, line: 103, baseType: !142, size: 32, offset: 768)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !919, file: !870, line: 104, baseType: !142, size: 32, offset: 800)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !919, file: !870, line: 107, baseType: !933, size: 64, offset: 832)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocket", file: !863, line: 87, size: 2816, elements: !935)
!935 = !{!936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1058}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !934, file: !863, line: 88, baseType: !933, size: 64)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !934, file: !863, line: 88, baseType: !933, size: 64, offset: 64)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "new_sock", scope: !934, file: !863, line: 88, baseType: !933, size: 64, offset: 128)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !934, file: !863, line: 90, baseType: !237, size: 64, offset: 192)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !934, file: !863, line: 92, baseType: !248, size: 512, offset: 256)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !934, file: !863, line: 94, baseType: !248, size: 512, offset: 768)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !934, file: !863, line: 99, baseType: !177, size: 64, offset: 1280)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !934, file: !863, line: 101, baseType: !232, size: 16, offset: 1344)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !934, file: !863, line: 101, baseType: !232, size: 16, offset: 1360)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !934, file: !863, line: 102, baseType: !232, size: 16, offset: 1376)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "in_out", scope: !934, file: !863, line: 103, baseType: !232, size: 16, offset: 1392)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !934, file: !863, line: 104, baseType: !948, size: 64, offset: 1408)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketType", file: !870, line: 114, size: 1600, elements: !950)
!950 = !{!951, !952, !974, !978, !982, !986, !990, !994, !995, !999, !1028, !1029, !1030}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !949, file: !870, line: 115, baseType: !248, size: 512)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !949, file: !870, line: 117, baseType: !953, size: 64, offset: 512)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DISubroutineType(types: !955)
!955 = !{null, !956, !958, !960, !960, !972}
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !110, line: 42, flags: DIFlagFwdDecl)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !870, line: 73, flags: DIFlagFwdDecl)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !962, line: 55, size: 192, elements: !963)
!962 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!963 = !{!964, !968, !971}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !961, file: !962, line: 58, baseType: !965, size: 64)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !961, file: !962, line: 56, size: 64, elements: !966)
!966 = !{!967}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !965, file: !962, line: 57, baseType: !177, size: 64)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !961, file: !962, line: 60, baseType: !969, size: 64, offset: 64)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !863, line: 335, flags: DIFlagFwdDecl)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !961, file: !962, line: 61, baseType: !177, size: 64, offset: 128)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64)
!973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !214)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "draw_color", scope: !949, file: !870, line: 118, baseType: !975, size: 64, offset: 576)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{null, !956, !960, !960, !293}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw", scope: !949, file: !870, line: 120, baseType: !979, size: 64, offset: 640)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DISubroutineType(types: !981)
!981 = !{null, !956, !958, !960}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw_color", scope: !949, file: !870, line: 121, baseType: !983, size: 64, offset: 704)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!984 = !DISubroutineType(types: !985)
!985 = !{null, !956, !960, !293}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "interface_register_properties", scope: !949, file: !870, line: 122, baseType: !987, size: 64, offset: 768)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = !DISubroutineType(types: !989)
!989 = !{null, !861, !933, !969}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "interface_init_socket", scope: !949, file: !870, line: 123, baseType: !991, size: 64, offset: 832)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = !DISubroutineType(types: !993)
!993 = !{null, !861, !933, !888, !933, !972}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "interface_verify_socket", scope: !949, file: !870, line: 124, baseType: !991, size: 64, offset: 896)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "interface_from_socket", scope: !949, file: !870, line: 125, baseType: !996, size: 64, offset: 960)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = !DISubroutineType(types: !998)
!998 = !{null, !861, !933, !888, !933}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "ext_socket", scope: !949, file: !870, line: 128, baseType: !1000, size: 256, offset: 1024)
!1000 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !962, line: 436, baseType: !1001)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !962, line: 430, size: 256, elements: !1002)
!1002 = !{!1003, !1004, !1007, !1023}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1001, file: !962, line: 431, baseType: !177, size: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !1001, file: !962, line: 432, baseType: !1005, size: 64, offset: 64)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !962, line: 417, baseType: !970)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !1001, file: !962, line: 433, baseType: !1008, size: 64, offset: 128)
!1008 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !962, line: 408, baseType: !1009)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!142, !956, !960, !1012, !1014}
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !962, line: 38, flags: DIFlagFwdDecl)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !962, line: 348, baseType: !1016)
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !962, line: 337, size: 256, elements: !1017)
!1017 = !{!1018, !1019, !1020, !1021, !1022}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1016, file: !962, line: 339, baseType: !177, size: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1016, file: !962, line: 342, baseType: !1012, size: 64, offset: 64)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !1016, file: !962, line: 345, baseType: !142, size: 32, offset: 128)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !1016, file: !962, line: 347, baseType: !142, size: 32, offset: 160)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !1016, file: !962, line: 347, baseType: !142, size: 32, offset: 192)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1001, file: !962, line: 434, baseType: !1024, size: 64, offset: 192)
!1024 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !962, line: 409, baseType: !1025)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{null, !177}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "ext_interface", scope: !949, file: !870, line: 129, baseType: !1000, size: 256, offset: 1280)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !949, file: !870, line: 132, baseType: !142, size: 32, offset: 1536)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !949, file: !870, line: 132, baseType: !142, size: 32, offset: 1568)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !934, file: !863, line: 105, baseType: !248, size: 512, offset: 1472)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !934, file: !863, line: 107, baseType: !185, size: 32, offset: 1984)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !934, file: !863, line: 107, baseType: !185, size: 32, offset: 2016)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "default_value", scope: !934, file: !863, line: 109, baseType: !177, size: 64, offset: 2048)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !934, file: !863, line: 112, baseType: !232, size: 16, offset: 2112)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "stack_type", scope: !934, file: !863, line: 114, baseType: !232, size: 16, offset: 2128)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !934, file: !863, line: 115, baseType: !142, size: 32, offset: 2144)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !934, file: !863, line: 117, baseType: !177, size: 64, offset: 2176)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "own_index", scope: !934, file: !863, line: 122, baseType: !142, size: 32, offset: 2240)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "to_index", scope: !934, file: !863, line: 124, baseType: !142, size: 32, offset: 2272)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "groupsock", scope: !934, file: !863, line: 126, baseType: !933, size: 64, offset: 2304)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !934, file: !863, line: 128, baseType: !1043, size: 64, offset: 2368)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeLink", file: !863, line: 298, size: 448, elements: !1045)
!1045 = !{!1046, !1047, !1048, !1051, !1052, !1055, !1056, !1057}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1044, file: !863, line: 299, baseType: !1043, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1044, file: !863, line: 299, baseType: !1043, size: 64, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "fromnode", scope: !1044, file: !863, line: 301, baseType: !1049, size: 64, offset: 128)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNode", file: !863, line: 218, baseType: !889)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "tonode", scope: !1044, file: !863, line: 301, baseType: !1049, size: 64, offset: 192)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "fromsock", scope: !1044, file: !863, line: 302, baseType: !1053, size: 64, offset: 256)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocket", file: !863, line: 132, baseType: !934)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "tosock", scope: !1044, file: !863, line: 302, baseType: !1053, size: 64, offset: 320)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1044, file: !863, line: 304, baseType: !142, size: 32, offset: 384)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1044, file: !863, line: 305, baseType: !142, size: 32, offset: 416)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !934, file: !863, line: 131, baseType: !1059, size: 384, offset: 2432)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeStack", file: !863, line: 73, baseType: !1060)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeStack", file: !863, line: 62, size: 384, elements: !1061)
!1061 = !{!1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1060, file: !863, line: 63, baseType: !452, size: 128)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1060, file: !863, line: 64, baseType: !185, size: 32, offset: 128)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1060, file: !863, line: 64, baseType: !185, size: 32, offset: 160)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1060, file: !863, line: 65, baseType: !177, size: 64, offset: 192)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "hasinput", scope: !1060, file: !863, line: 66, baseType: !232, size: 16, offset: 256)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "hasoutput", scope: !1060, file: !863, line: 67, baseType: !232, size: 16, offset: 272)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "datatype", scope: !1060, file: !863, line: 68, baseType: !232, size: 16, offset: 288)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "sockettype", scope: !1060, file: !863, line: 69, baseType: !232, size: 16, offset: 304)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1060, file: !863, line: 70, baseType: !232, size: 16, offset: 320)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !1060, file: !863, line: 71, baseType: !232, size: 16, offset: 336)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1060, file: !863, line: 72, baseType: !845, size: 32, offset: 352)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !919, file: !870, line: 108, baseType: !248, size: 512, offset: 896)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !897, file: !870, line: 160, baseType: !917, size: 64, offset: 3648)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "storagename", scope: !897, file: !870, line: 162, baseType: !248, size: 512, offset: 3712)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype", scope: !897, file: !870, line: 165, baseType: !1077, size: 64, offset: 4224)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{null, !1080, !1082, !1160, !861, !888, !1205}
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !957)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !1084, line: 230, size: 3072, elements: !1085)
!1084 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1085 = !{!1086, !1087, !1088, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1083, file: !1084, line: 231, baseType: !1082, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1083, file: !1084, line: 231, baseType: !1082, size: 64, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !1083, file: !1084, line: 233, baseType: !1089, size: 1280, offset: 128)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !1090, line: 71, baseType: !1091)
!1090 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !1090, line: 40, size: 1280, elements: !1092)
!1092 = !{!1093, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1127}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1091, file: !1090, line: 41, baseType: !1094, size: 128)
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !297, line: 95, baseType: !1095)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !297, line: 92, size: 128, elements: !1096)
!1096 = !{!1097, !1098, !1099, !1100}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1095, file: !297, line: 93, baseType: !185, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1095, file: !297, line: 93, baseType: !185, size: 32, offset: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1095, file: !297, line: 94, baseType: !185, size: 32, offset: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1095, file: !297, line: 94, baseType: !185, size: 32, offset: 96)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1091, file: !1090, line: 41, baseType: !1094, size: 128, offset: 128)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !1091, file: !1090, line: 42, baseType: !296, size: 128, offset: 256)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !1091, file: !1090, line: 42, baseType: !296, size: 128, offset: 384)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1091, file: !1090, line: 43, baseType: !296, size: 128, offset: 512)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1091, file: !1090, line: 45, baseType: !752, size: 64, offset: 640)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1091, file: !1090, line: 45, baseType: !752, size: 64, offset: 704)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !1091, file: !1090, line: 46, baseType: !185, size: 32, offset: 768)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !1091, file: !1090, line: 46, baseType: !185, size: 32, offset: 800)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !1091, file: !1090, line: 48, baseType: !232, size: 16, offset: 832)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !1091, file: !1090, line: 49, baseType: !232, size: 16, offset: 848)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !1091, file: !1090, line: 51, baseType: !232, size: 16, offset: 864)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !1091, file: !1090, line: 52, baseType: !232, size: 16, offset: 880)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !1091, file: !1090, line: 53, baseType: !232, size: 16, offset: 896)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1091, file: !1090, line: 55, baseType: !232, size: 16, offset: 912)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1091, file: !1090, line: 56, baseType: !232, size: 16, offset: 928)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !1091, file: !1090, line: 58, baseType: !232, size: 16, offset: 944)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !1091, file: !1090, line: 58, baseType: !232, size: 16, offset: 960)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !1091, file: !1090, line: 59, baseType: !232, size: 16, offset: 976)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !1091, file: !1090, line: 59, baseType: !232, size: 16, offset: 992)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !1091, file: !1090, line: 61, baseType: !232, size: 16, offset: 1008)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !1091, file: !1090, line: 63, baseType: !293, size: 64, offset: 1024)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !1091, file: !1090, line: 64, baseType: !142, size: 32, offset: 1088)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !1091, file: !1090, line: 65, baseType: !142, size: 32, offset: 1120)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !1091, file: !1090, line: 68, baseType: !1125, size: 64, offset: 1152)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1126 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !1090, line: 68, flags: DIFlagFwdDecl)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !1091, file: !1090, line: 69, baseType: !1128, size: 64, offset: 1216)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !1090, line: 69, flags: DIFlagFwdDecl)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !1083, file: !1084, line: 234, baseType: !296, size: 128, offset: 1408)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !1083, file: !1084, line: 235, baseType: !296, size: 128, offset: 1536)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !1083, file: !1084, line: 236, baseType: !232, size: 16, offset: 1664)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !1083, file: !1084, line: 236, baseType: !232, size: 16, offset: 1680)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !1083, file: !1084, line: 238, baseType: !232, size: 16, offset: 1696)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !1083, file: !1084, line: 239, baseType: !232, size: 16, offset: 1712)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1083, file: !1084, line: 240, baseType: !232, size: 16, offset: 1728)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1083, file: !1084, line: 241, baseType: !232, size: 16, offset: 1744)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !1083, file: !1084, line: 243, baseType: !185, size: 32, offset: 1760)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !1083, file: !1084, line: 244, baseType: !232, size: 16, offset: 1792)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !1083, file: !1084, line: 244, baseType: !232, size: 16, offset: 1808)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !1083, file: !1084, line: 246, baseType: !232, size: 16, offset: 1824)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !1083, file: !1084, line: 247, baseType: !232, size: 16, offset: 1840)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !1083, file: !1084, line: 248, baseType: !232, size: 16, offset: 1856)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !1083, file: !1084, line: 249, baseType: !232, size: 16, offset: 1872)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !1083, file: !1084, line: 250, baseType: !232, size: 16, offset: 1888)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1083, file: !1084, line: 251, baseType: !232, size: 16, offset: 1904)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1083, file: !1084, line: 253, baseType: !1148, size: 64, offset: 1920)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64)
!1149 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !1084, line: 42, flags: DIFlagFwdDecl)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !1083, file: !1084, line: 255, baseType: !258, size: 128, offset: 1984)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !1083, file: !1084, line: 256, baseType: !258, size: 128, offset: 2112)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !1083, file: !1084, line: 257, baseType: !258, size: 128, offset: 2240)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !1083, file: !1084, line: 258, baseType: !258, size: 128, offset: 2368)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !1083, file: !1084, line: 259, baseType: !258, size: 128, offset: 2496)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !1083, file: !1084, line: 260, baseType: !258, size: 128, offset: 2624)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !1083, file: !1084, line: 261, baseType: !258, size: 128, offset: 2752)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !1083, file: !1084, line: 263, baseType: !1128, size: 64, offset: 2880)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !1083, file: !1084, line: 265, baseType: !623, size: 64, offset: 2944)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !1083, file: !1084, line: 266, baseType: !177, size: 64, offset: 3008)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNode", file: !73, line: 925, size: 3200, elements: !1162)
!1162 = !{!1163, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1161, file: !73, line: 926, baseType: !1164, size: 64)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64)
!1165 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !73, line: 91, baseType: !1166)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !73, line: 85, size: 448, elements: !1167)
!1167 = !{!1168, !1170, !1171, !1172, !1173, !1174}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1166, file: !73, line: 86, baseType: !1169, size: 64)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1166, file: !73, line: 86, baseType: !1169, size: 64, offset: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !1166, file: !73, line: 87, baseType: !258, size: 128, offset: 128)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !1166, file: !73, line: 88, baseType: !142, size: 32, offset: 256)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !1166, file: !73, line: 89, baseType: !185, size: 32, offset: 288)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !1166, file: !73, line: 90, baseType: !1175, size: 128, offset: 320)
!1175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !232, size: 128, elements: !1176)
!1176 = !{!533}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1161, file: !73, line: 926, baseType: !1164, size: 64, offset: 64)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !1161, file: !73, line: 927, baseType: !258, size: 128, offset: 128)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !1161, file: !73, line: 928, baseType: !142, size: 32, offset: 256)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !1161, file: !73, line: 929, baseType: !185, size: 32, offset: 288)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !1161, file: !73, line: 930, baseType: !1175, size: 128, offset: 320)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !1161, file: !73, line: 932, baseType: !1089, size: 1280, offset: 448)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1161, file: !73, line: 934, baseType: !201, size: 64, offset: 1728)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1161, file: !73, line: 934, baseType: !201, size: 64, offset: 1792)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1161, file: !73, line: 935, baseType: !232, size: 16, offset: 1856)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1161, file: !73, line: 935, baseType: !232, size: 16, offset: 1872)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "aspect", scope: !1161, file: !73, line: 936, baseType: !185, size: 32, offset: 1888)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1161, file: !73, line: 936, baseType: !185, size: 32, offset: 1920)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !1161, file: !73, line: 938, baseType: !185, size: 32, offset: 1952)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !1161, file: !73, line: 938, baseType: !185, size: 32, offset: 1984)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !1161, file: !73, line: 939, baseType: !185, size: 32, offset: 2016)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1161, file: !73, line: 940, baseType: !752, size: 64, offset: 2048)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "treepath", scope: !1161, file: !73, line: 947, baseType: !258, size: 128, offset: 2112)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1161, file: !73, line: 949, baseType: !861, size: 64, offset: 2240)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "edittree", scope: !1161, file: !73, line: 949, baseType: !861, size: 64, offset: 2304)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "tree_idname", scope: !1161, file: !73, line: 952, baseType: !248, size: 512, offset: 2368)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "treetype", scope: !1161, file: !73, line: 953, baseType: !142, size: 32, offset: 2880)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1161, file: !73, line: 954, baseType: !142, size: 32, offset: 2912)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "texfrom", scope: !1161, file: !73, line: 956, baseType: !232, size: 16, offset: 2944)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "shaderfrom", scope: !1161, file: !73, line: 957, baseType: !232, size: 16, offset: 2960)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1161, file: !73, line: 958, baseType: !232, size: 16, offset: 2976)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1161, file: !73, line: 959, baseType: !232, size: 16, offset: 2992)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "linkdrag", scope: !1161, file: !73, line: 960, baseType: !258, size: 128, offset: 3008)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1161, file: !73, line: 962, baseType: !595, size: 64, offset: 3136)
!1205 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !863, line: 274, baseType: !1206)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !863, line: 271, size: 32, elements: !1207)
!1207 = !{!1208}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1206, file: !863, line: 273, baseType: !7, size: 32)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype_prepare", scope: !897, file: !870, line: 168, baseType: !1210, size: 64, offset: 4288)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{null, !1080, !861, !888}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons", scope: !897, file: !870, line: 171, baseType: !1214, size: 64, offset: 4352)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{null, !958, !956, !960}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons_ex", scope: !897, file: !870, line: 173, baseType: !1214, size: 64, offset: 4416)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "draw_backdrop", scope: !897, file: !870, line: 176, baseType: !1219, size: 64, offset: 4480)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1220 = !DISubroutineType(types: !1221)
!1221 = !{null, !1160, !1222, !888, !142, !142}
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1224, line: 70, size: 19840, elements: !1225)
!1224 = !DIFile(filename: "blender/source/blender/imbuf/IMB_imbuf_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1225 = !{!1226, !1227, !1228, !1229, !1230, !1232, !1233, !1234, !1235, !1236, !1237, !1240, !1241, !1242, !1243, !1244, !1246, !1247, !1248, !1249, !1253, !1254, !1255, !1256, !1257, !1260, !1261, !1262, !1263, !1264, !1267, !1268, !1270, !1271, !1272, !1275, !1276, !1277, !1280, !1281, !1282}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1223, file: !1224, line: 71, baseType: !1222, size: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1223, file: !1224, line: 71, baseType: !1222, size: 64, offset: 64)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1223, file: !1224, line: 74, baseType: !142, size: 32, offset: 128)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1223, file: !1224, line: 74, baseType: !142, size: 32, offset: 160)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1223, file: !1224, line: 79, baseType: !1231, size: 8, offset: 192)
!1231 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1223, file: !1224, line: 80, baseType: !142, size: 32, offset: 224)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1223, file: !1224, line: 83, baseType: !142, size: 32, offset: 256)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "mall", scope: !1223, file: !1224, line: 84, baseType: !142, size: 32, offset: 288)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1223, file: !1224, line: 87, baseType: !857, size: 64, offset: 320)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "rect_float", scope: !1223, file: !1224, line: 88, baseType: !293, size: 64, offset: 384)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "ppm", scope: !1223, file: !1224, line: 93, baseType: !1238, size: 128, offset: 448)
!1238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1239, size: 128, elements: !753)
!1239 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1223, file: !1224, line: 96, baseType: !142, size: 32, offset: 576)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1223, file: !1224, line: 96, baseType: !142, size: 32, offset: 608)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "xtiles", scope: !1223, file: !1224, line: 97, baseType: !142, size: 32, offset: 640)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "ytiles", scope: !1223, file: !1224, line: 97, baseType: !142, size: 32, offset: 672)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "tiles", scope: !1223, file: !1224, line: 98, baseType: !1245, size: 64, offset: 704)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !1223, file: !1224, line: 101, baseType: !291, size: 64, offset: 768)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf_float", scope: !1223, file: !1224, line: 102, baseType: !293, size: 64, offset: 832)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !1223, file: !1224, line: 105, baseType: !185, size: 32, offset: 896)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "mipmap", scope: !1223, file: !1224, line: 108, baseType: !1250, size: 1280, offset: 960)
!1250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1222, size: 1280, elements: !1251)
!1251 = !{!1252}
!1252 = !DISubrange(count: 20)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "miptot", scope: !1223, file: !1224, line: 109, baseType: !142, size: 32, offset: 2240)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "miplevel", scope: !1223, file: !1224, line: 109, baseType: !142, size: 32, offset: 2272)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1223, file: !1224, line: 112, baseType: !142, size: 32, offset: 2304)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "userflags", scope: !1223, file: !1224, line: 113, baseType: !142, size: 32, offset: 2336)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1223, file: !1224, line: 114, baseType: !1258, size: 64, offset: 2368)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 64)
!1259 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImMetaData", file: !1224, line: 50, flags: DIFlagFwdDecl)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !1223, file: !1224, line: 115, baseType: !177, size: 64, offset: 2432)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "ftype", scope: !1223, file: !1224, line: 118, baseType: !142, size: 32, offset: 2496)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1223, file: !1224, line: 119, baseType: !213, size: 8192, offset: 2528)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "cachename", scope: !1223, file: !1224, line: 120, baseType: !213, size: 8192, offset: 10720)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "c_handle", scope: !1223, file: !1224, line: 123, baseType: !1265, size: 64, offset: 18944)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!1266 = !DICompositeType(tag: DW_TAG_structure_type, name: "MEM_CacheLimiterHandle_s", file: !1224, line: 123, flags: DIFlagFwdDecl)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "refcounter", scope: !1223, file: !1224, line: 124, baseType: !142, size: 32, offset: 19008)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffer", scope: !1223, file: !1224, line: 127, baseType: !1269, size: 64, offset: 19072)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "encodedsize", scope: !1223, file: !1224, line: 128, baseType: !7, size: 32, offset: 19136)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffersize", scope: !1223, file: !1224, line: 129, baseType: !7, size: 32, offset: 19168)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "rect_colorspace", scope: !1223, file: !1224, line: 132, baseType: !1273, size: 64, offset: 19200)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64)
!1274 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !110, line: 56, flags: DIFlagFwdDecl)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "float_colorspace", scope: !1223, file: !1224, line: 133, baseType: !1273, size: 64, offset: 19264)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer_flags", scope: !1223, file: !1224, line: 134, baseType: !857, size: 64, offset: 19328)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_cache", scope: !1223, file: !1224, line: 135, baseType: !1278, size: 64, offset: 19392)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!1279 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColormanageCache", file: !1224, line: 135, flags: DIFlagFwdDecl)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_flag", scope: !1223, file: !1224, line: 136, baseType: !142, size: 32, offset: 19456)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "invalid_rect", scope: !1223, file: !1224, line: 137, baseType: !296, size: 128, offset: 19488)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "dds_data", scope: !1223, file: !1224, line: 140, baseType: !1283, size: 192, offset: 19648)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DDSData", file: !1224, line: 55, size: 192, elements: !1284)
!1284 = !{!1285, !1286, !1287, !1288}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "fourcc", scope: !1283, file: !1224, line: 56, baseType: !7, size: 32)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "nummipmaps", scope: !1283, file: !1224, line: 57, baseType: !7, size: 32, offset: 32)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1283, file: !1224, line: 58, baseType: !1269, size: 64, offset: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1283, file: !1224, line: 59, baseType: !7, size: 32, offset: 128)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "labelfunc", scope: !897, file: !870, line: 179, baseType: !1290, size: 64, offset: 4544)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64)
!1291 = !DISubroutineType(types: !1292)
!1292 = !{null, !861, !888, !623, !142}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "resize_area_func", scope: !897, file: !870, line: 181, baseType: !1294, size: 64, offset: 4608)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64)
!1295 = !DISubroutineType(types: !1296)
!1296 = !{!142, !888, !142, !142}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "select_area_func", scope: !897, file: !870, line: 183, baseType: !1294, size: 64, offset: 4672)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "tweak_area_func", scope: !897, file: !870, line: 185, baseType: !1294, size: 64, offset: 4736)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "updatefunc", scope: !897, file: !870, line: 188, baseType: !885, size: 64, offset: 4800)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "verifyfunc", scope: !897, file: !870, line: 190, baseType: !1301, size: 64, offset: 4864)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{null, !861, !888, !201}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc", scope: !897, file: !870, line: 193, baseType: !885, size: 64, offset: 4928)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc", scope: !897, file: !870, line: 195, baseType: !1306, size: 64, offset: 4992)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{null, !888}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc", scope: !897, file: !870, line: 197, baseType: !1310, size: 64, offset: 5056)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1311 = !DISubroutineType(types: !1312)
!1312 = !{null, !861, !888, !888}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc_api", scope: !897, file: !870, line: 200, baseType: !1314, size: 64, offset: 5120)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64)
!1315 = !DISubroutineType(types: !1316)
!1316 = !{null, !1080, !960}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc_api", scope: !897, file: !870, line: 201, baseType: !1318, size: 64, offset: 5184)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 64)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{null, !960}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc_api", scope: !897, file: !870, line: 202, baseType: !1322, size: 64, offset: 5248)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1323 = !DISubroutineType(types: !1324)
!1324 = !{null, !960, !888}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !897, file: !870, line: 205, baseType: !1326, size: 64, offset: 5312)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!142, !896, !861}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "poll_instance", scope: !897, file: !870, line: 207, baseType: !1330, size: 64, offset: 5376)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{!142, !888, !861}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "update_internal_links", scope: !897, file: !870, line: 210, baseType: !885, size: 64, offset: 5440)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "initexecfunc", scope: !897, file: !870, line: 213, baseType: !1335, size: 64, offset: 5504)
!1335 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeInitExecFunction", file: !870, line: 135, baseType: !1336)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1337 = !DISubroutineType(types: !1338)
!1338 = !{!177, !1339, !888, !1205}
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecContext", file: !870, line: 62, flags: DIFlagFwdDecl)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "freeexecfunc", scope: !897, file: !870, line: 214, baseType: !1342, size: 64, offset: 5568)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeFreeExecFunction", file: !870, line: 136, baseType: !1025)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "execfunc", scope: !897, file: !870, line: 215, baseType: !1344, size: 64, offset: 5632)
!1344 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeExecFunction", file: !870, line: 137, baseType: !1345)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!1346 = !DISubroutineType(types: !1347)
!1347 = !{null, !177, !142, !888, !1348, !1350, !1350}
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64)
!1349 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecData", file: !870, line: 63, flags: DIFlagFwdDecl)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "gpufunc", scope: !897, file: !870, line: 217, baseType: !1353, size: 64, offset: 5696)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeGPUExecFunction", file: !870, line: 138, baseType: !1354)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!1355 = !DISubroutineType(types: !1356)
!1356 = !{!142, !1357, !888, !1348, !1359, !1359}
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUMaterial", file: !870, line: 64, flags: DIFlagFwdDecl)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUNodeStack", file: !870, line: 66, flags: DIFlagFwdDecl)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !897, file: !870, line: 220, baseType: !1000, size: 256, offset: 5760)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !889, file: !863, line: 173, baseType: !248, size: 512, offset: 320)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !889, file: !863, line: 175, baseType: !248, size: 512, offset: 832)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !889, file: !863, line: 176, baseType: !142, size: 32, offset: 1344)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !889, file: !863, line: 177, baseType: !232, size: 16, offset: 1376)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !889, file: !863, line: 177, baseType: !232, size: 16, offset: 1392)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !889, file: !863, line: 178, baseType: !232, size: 16, offset: 1408)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !889, file: !863, line: 178, baseType: !232, size: 16, offset: 1424)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "lasty", scope: !889, file: !863, line: 179, baseType: !232, size: 16, offset: 1440)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "menunr", scope: !889, file: !863, line: 179, baseType: !232, size: 16, offset: 1456)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !889, file: !863, line: 180, baseType: !232, size: 16, offset: 1472)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !889, file: !863, line: 181, baseType: !232, size: 16, offset: 1488)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !889, file: !863, line: 182, baseType: !370, size: 96, offset: 1504)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !889, file: !863, line: 184, baseType: !258, size: 128, offset: 1600)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !889, file: !863, line: 184, baseType: !258, size: 128, offset: 1728)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !889, file: !863, line: 185, baseType: !888, size: 64, offset: 1856)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !889, file: !863, line: 186, baseType: !201, size: 64, offset: 1920)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !889, file: !863, line: 187, baseType: !177, size: 64, offset: 1984)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !889, file: !863, line: 188, baseType: !888, size: 64, offset: 2048)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "internal_links", scope: !889, file: !863, line: 189, baseType: !258, size: 128, offset: 2112)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !889, file: !863, line: 191, baseType: !185, size: 32, offset: 2240)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !889, file: !863, line: 191, baseType: !185, size: 32, offset: 2272)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !889, file: !863, line: 192, baseType: !185, size: 32, offset: 2304)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !889, file: !863, line: 192, baseType: !185, size: 32, offset: 2336)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "miniwidth", scope: !889, file: !863, line: 193, baseType: !185, size: 32, offset: 2368)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "offsetx", scope: !889, file: !863, line: 194, baseType: !185, size: 32, offset: 2400)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "offsety", scope: !889, file: !863, line: 194, baseType: !185, size: 32, offset: 2432)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !889, file: !863, line: 196, baseType: !142, size: 32, offset: 2464)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !889, file: !863, line: 198, baseType: !248, size: 512, offset: 2496)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "custom1", scope: !889, file: !863, line: 199, baseType: !232, size: 16, offset: 3008)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "custom2", scope: !889, file: !863, line: 199, baseType: !232, size: 16, offset: 3024)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "custom3", scope: !889, file: !863, line: 200, baseType: !185, size: 32, offset: 3040)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "custom4", scope: !889, file: !863, line: 200, baseType: !185, size: 32, offset: 3072)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "need_exec", scope: !889, file: !863, line: 202, baseType: !232, size: 16, offset: 3104)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !889, file: !863, line: 202, baseType: !232, size: 16, offset: 3120)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "threaddata", scope: !889, file: !863, line: 203, baseType: !177, size: 64, offset: 3136)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "totr", scope: !889, file: !863, line: 204, baseType: !1094, size: 128, offset: 3200)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "butr", scope: !889, file: !863, line: 205, baseType: !1094, size: 128, offset: 3328)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "prvr", scope: !889, file: !863, line: 206, baseType: !1094, size: 128, offset: 3456)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "preview_xsize", scope: !889, file: !863, line: 215, baseType: !232, size: 16, offset: 3584)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "preview_ysize", scope: !889, file: !863, line: 215, baseType: !232, size: 16, offset: 3600)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !889, file: !863, line: 216, baseType: !142, size: 32, offset: 3616)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !889, file: !863, line: 217, baseType: !1404, size: 64, offset: 3648)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!1405 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !863, line: 51, flags: DIFlagFwdDecl)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "foreach_nodeclass", scope: !869, file: !870, line: 294, baseType: !1407, size: 64, offset: 3264)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{null, !760, !177, !1410}
!1410 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeClassCallback", file: !870, line: 282, baseType: !1411)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!1412 = !DISubroutineType(types: !1413)
!1413 = !{null, !177, !142, !972}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !869, file: !870, line: 296, baseType: !1415, size: 64, offset: 3328)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{!142, !1080, !868}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "get_from_context", scope: !869, file: !870, line: 298, baseType: !1419, size: 64, offset: 3392)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64)
!1420 = !DISubroutineType(types: !1421)
!1421 = !{null, !1080, !868, !1422, !1423, !1423}
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "localize", scope: !869, file: !870, line: 302, baseType: !1425, size: 64, offset: 3456)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 64)
!1426 = !DISubroutineType(types: !1427)
!1427 = !{null, !861, !861}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "local_sync", scope: !869, file: !870, line: 303, baseType: !1425, size: 64, offset: 3520)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "local_merge", scope: !869, file: !870, line: 304, baseType: !1425, size: 64, offset: 3584)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !869, file: !870, line: 307, baseType: !881, size: 64, offset: 3648)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "validate_link", scope: !869, file: !870, line: 309, baseType: !1432, size: 64, offset: 3712)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64)
!1433 = !DISubroutineType(types: !1434)
!1434 = !{!142, !861, !1043}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "node_add_init", scope: !869, file: !870, line: 311, baseType: !885, size: 64, offset: 3776)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !869, file: !870, line: 314, baseType: !1000, size: 256, offset: 3840)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !862, file: !863, line: 333, baseType: !248, size: 512, offset: 1088)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !862, file: !863, line: 335, baseType: !969, size: 64, offset: 1600)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !862, file: !863, line: 337, baseType: !595, size: 64, offset: 1664)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !862, file: !863, line: 338, baseType: !752, size: 64, offset: 1728)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !862, file: !863, line: 340, baseType: !258, size: 128, offset: 1792)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !862, file: !863, line: 340, baseType: !258, size: 128, offset: 1920)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !862, file: !863, line: 342, baseType: !142, size: 32, offset: 2048)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !862, file: !863, line: 342, baseType: !142, size: 32, offset: 2080)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !862, file: !863, line: 343, baseType: !142, size: 32, offset: 2112)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !862, file: !863, line: 345, baseType: !142, size: 32, offset: 2144)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !862, file: !863, line: 346, baseType: !142, size: 32, offset: 2176)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !862, file: !863, line: 347, baseType: !232, size: 16, offset: 2208)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !862, file: !863, line: 348, baseType: !232, size: 16, offset: 2224)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !862, file: !863, line: 349, baseType: !142, size: 32, offset: 2240)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !862, file: !863, line: 351, baseType: !142, size: 32, offset: 2272)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !862, file: !863, line: 353, baseType: !232, size: 16, offset: 2304)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !862, file: !863, line: 354, baseType: !232, size: 16, offset: 2320)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !862, file: !863, line: 355, baseType: !142, size: 32, offset: 2336)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !862, file: !863, line: 357, baseType: !1094, size: 128, offset: 2368)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !862, file: !863, line: 363, baseType: !258, size: 128, offset: 2496)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !862, file: !863, line: 363, baseType: !258, size: 128, offset: 2624)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !862, file: !863, line: 368, baseType: !1459, size: 64, offset: 2752)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !870, line: 500, size: 64, elements: !1461)
!1461 = !{!1462}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !1460, file: !870, line: 502, baseType: !1463, size: 64)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64)
!1464 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !559, line: 48, baseType: !558)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !862, file: !863, line: 372, baseType: !1205, size: 32, offset: 2816)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !862, file: !863, line: 373, baseType: !142, size: 32, offset: 2848)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !862, file: !863, line: 382, baseType: !1468, size: 64, offset: 2880)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !863, line: 46, flags: DIFlagFwdDecl)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !862, file: !863, line: 385, baseType: !1471, size: 64, offset: 2944)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64)
!1472 = !DISubroutineType(types: !1473)
!1473 = !{null, !177, !185}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !862, file: !863, line: 386, baseType: !1475, size: 64, offset: 3008)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = !DISubroutineType(types: !1477)
!1477 = !{null, !177, !623}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !862, file: !863, line: 387, baseType: !1479, size: 64, offset: 3072)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64)
!1480 = !DISubroutineType(types: !1481)
!1481 = !{!142, !177}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !862, file: !863, line: 388, baseType: !1025, size: 64, offset: 3136)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !862, file: !863, line: 389, baseType: !177, size: 64, offset: 3200)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !862, file: !863, line: 389, baseType: !177, size: 64, offset: 3264)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !862, file: !863, line: 389, baseType: !177, size: 64, offset: 3328)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !862, file: !863, line: 389, baseType: !177, size: 64, offset: 3392)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !761, file: !141, line: 1223, baseType: !760, size: 64, offset: 1152)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !761, file: !141, line: 1225, baseType: !258, size: 128, offset: 1216)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !761, file: !141, line: 1226, baseType: !1490, size: 64, offset: 1344)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !141, line: 69, size: 320, elements: !1492)
!1492 = !{!1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1491, file: !141, line: 70, baseType: !1490, size: 64)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1491, file: !141, line: 70, baseType: !1490, size: 64, offset: 64)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1491, file: !141, line: 71, baseType: !7, size: 32, offset: 128)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1491, file: !141, line: 71, baseType: !7, size: 32, offset: 160)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1491, file: !141, line: 72, baseType: !142, size: 32, offset: 192)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1491, file: !141, line: 73, baseType: !232, size: 16, offset: 224)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1491, file: !141, line: 73, baseType: !232, size: 16, offset: 240)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1491, file: !141, line: 74, baseType: !504, size: 64, offset: 256)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !761, file: !141, line: 1227, baseType: !504, size: 64, offset: 1408)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !761, file: !141, line: 1229, baseType: !370, size: 96, offset: 1472)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !761, file: !141, line: 1230, baseType: !370, size: 96, offset: 1568)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !761, file: !141, line: 1231, baseType: !370, size: 96, offset: 1664)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !761, file: !141, line: 1231, baseType: !370, size: 96, offset: 1760)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !761, file: !141, line: 1233, baseType: !7, size: 32, offset: 1856)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !761, file: !141, line: 1234, baseType: !142, size: 32, offset: 1888)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !761, file: !141, line: 1235, baseType: !7, size: 32, offset: 1920)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !761, file: !141, line: 1237, baseType: !232, size: 16, offset: 1952)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !761, file: !141, line: 1239, baseType: !214, size: 8, offset: 1968)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !761, file: !141, line: 1240, baseType: !469, size: 8, offset: 1976)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !761, file: !141, line: 1242, baseType: !861, size: 64, offset: 1984)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !761, file: !141, line: 1244, baseType: !1514, size: 64, offset: 2048)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1516, line: 200, size: 17024, elements: !1517)
!1516 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1517 = !{!1518, !1519, !1520, !1521, !1853, !1854, !1855, !1856, !1857, !1858, !1859}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !1515, file: !1516, line: 201, baseType: !744, size: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1515, file: !1516, line: 202, baseType: !258, size: 128, offset: 64)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !1515, file: !1516, line: 203, baseType: !258, size: 128, offset: 192)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !1515, file: !1516, line: 206, baseType: !1522, size: 64, offset: 320)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !1516, line: 190, baseType: !1524)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !1516, line: 126, size: 2816, elements: !1525)
!1525 = !{!1526, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1619, !1620, !1621, !1622, !1825, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1852}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1524, file: !1516, line: 127, baseType: !1527, size: 64)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1524, file: !1516, line: 127, baseType: !1527, size: 64, offset: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1524, file: !1516, line: 128, baseType: !177, size: 64, offset: 128)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1524, file: !1516, line: 129, baseType: !177, size: 64, offset: 192)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1524, file: !1516, line: 130, baseType: !248, size: 512, offset: 256)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1524, file: !1516, line: 132, baseType: !142, size: 32, offset: 768)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1524, file: !1516, line: 132, baseType: !142, size: 32, offset: 800)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1524, file: !1516, line: 133, baseType: !142, size: 32, offset: 832)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1524, file: !1516, line: 134, baseType: !142, size: 32, offset: 864)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !1524, file: !1516, line: 134, baseType: !142, size: 32, offset: 896)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !1524, file: !1516, line: 134, baseType: !142, size: 32, offset: 928)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1524, file: !1516, line: 135, baseType: !142, size: 32, offset: 960)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1524, file: !1516, line: 135, baseType: !142, size: 32, offset: 992)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1524, file: !1516, line: 136, baseType: !142, size: 32, offset: 1024)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1524, file: !1516, line: 136, baseType: !142, size: 32, offset: 1056)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !1524, file: !1516, line: 137, baseType: !142, size: 32, offset: 1088)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !1524, file: !1516, line: 137, baseType: !142, size: 32, offset: 1120)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !1524, file: !1516, line: 138, baseType: !185, size: 32, offset: 1152)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !1524, file: !1516, line: 139, baseType: !185, size: 32, offset: 1184)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !1524, file: !1516, line: 139, baseType: !185, size: 32, offset: 1216)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !1524, file: !1516, line: 141, baseType: !232, size: 16, offset: 1248)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !1524, file: !1516, line: 142, baseType: !232, size: 16, offset: 1264)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !1524, file: !1516, line: 143, baseType: !142, size: 32, offset: 1280)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !1524, file: !1516, line: 144, baseType: !142, size: 32, offset: 1312)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1524, file: !1516, line: 146, baseType: !1552, size: 64, offset: 1344)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !1516, line: 114, baseType: !1554)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !1516, line: 99, size: 7232, elements: !1555)
!1555 = !{!1556, !1558, !1559, !1560, !1561, !1562, !1563, !1571, !1575, !1587, !1596, !1603, !1613}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1554, file: !1516, line: 100, baseType: !1557, size: 64)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1554, file: !1516, line: 100, baseType: !1557, size: 64, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1554, file: !1516, line: 101, baseType: !142, size: 32, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1554, file: !1516, line: 101, baseType: !142, size: 32, offset: 160)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1554, file: !1516, line: 102, baseType: !142, size: 32, offset: 192)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1554, file: !1516, line: 102, baseType: !142, size: 32, offset: 224)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !1554, file: !1516, line: 103, baseType: !1564, size: 64, offset: 256)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !1516, line: 59, baseType: !1566)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !1516, line: 56, size: 2112, elements: !1567)
!1567 = !{!1568, !1569, !1570}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1566, file: !1516, line: 57, baseType: !876, size: 2048)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !1566, file: !1516, line: 58, baseType: !142, size: 32, offset: 2048)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !1566, file: !1516, line: 58, baseType: !142, size: 32, offset: 2080)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1554, file: !1516, line: 106, baseType: !1572, size: 6144, offset: 320)
!1572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 6144, elements: !1573)
!1573 = !{!1574}
!1574 = !DISubrange(count: 768)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1554, file: !1516, line: 107, baseType: !1576, size: 64, offset: 6464)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !1516, line: 97, baseType: !1578)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !1516, line: 83, size: 8320, elements: !1579)
!1579 = !{!1580, !1581, !1582, !1583, !1584, !1585, !1586}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1578, file: !1516, line: 84, baseType: !1572, size: 6144)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1578, file: !1516, line: 87, baseType: !876, size: 2048, offset: 6144)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1578, file: !1516, line: 88, baseType: !277, size: 64, offset: 8192)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1578, file: !1516, line: 90, baseType: !232, size: 16, offset: 8256)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1578, file: !1516, line: 92, baseType: !232, size: 16, offset: 8272)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !1578, file: !1516, line: 93, baseType: !232, size: 16, offset: 8288)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !1578, file: !1516, line: 95, baseType: !232, size: 16, offset: 8304)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !1554, file: !1516, line: 108, baseType: !1588, size: 64, offset: 6528)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64)
!1589 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !1516, line: 66, baseType: !1590)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !1516, line: 61, size: 128, elements: !1591)
!1591 = !{!1592, !1593, !1594, !1595}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1590, file: !1516, line: 62, baseType: !142, size: 32)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !1590, file: !1516, line: 63, baseType: !142, size: 32, offset: 32)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1590, file: !1516, line: 64, baseType: !142, size: 32, offset: 64)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !1590, file: !1516, line: 65, baseType: !142, size: 32, offset: 96)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !1554, file: !1516, line: 109, baseType: !1597, size: 64, offset: 6592)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64)
!1598 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !1516, line: 71, baseType: !1599)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !1516, line: 68, size: 64, elements: !1600)
!1600 = !{!1601, !1602}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !1599, file: !1516, line: 69, baseType: !142, size: 32)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !1599, file: !1516, line: 70, baseType: !142, size: 32, offset: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !1554, file: !1516, line: 110, baseType: !1604, size: 64, offset: 6656)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64)
!1605 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !1516, line: 81, baseType: !1606)
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !1516, line: 73, size: 352, elements: !1607)
!1607 = !{!1608, !1609, !1610, !1611, !1612}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !1606, file: !1516, line: 74, baseType: !370, size: 96)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1606, file: !1516, line: 75, baseType: !370, size: 96, offset: 96)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1606, file: !1516, line: 76, baseType: !370, size: 96, offset: 192)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1606, file: !1516, line: 77, baseType: !142, size: 32, offset: 288)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1606, file: !1516, line: 78, baseType: !142, size: 32, offset: 320)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1554, file: !1516, line: 113, baseType: !1614, size: 512, offset: 6720)
!1614 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1615, line: 182, baseType: !1616)
!1615 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1615, line: 180, size: 512, elements: !1617)
!1617 = !{!1618}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1616, file: !1615, line: 181, baseType: !248, size: 512)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1524, file: !1516, line: 148, baseType: !524, size: 64, offset: 1408)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1524, file: !1516, line: 151, baseType: !760, size: 64, offset: 1472)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !1524, file: !1516, line: 152, baseType: !504, size: 64, offset: 1536)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1524, file: !1516, line: 153, baseType: !1623, size: 64, offset: 1600)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1625, line: 64, size: 19136, elements: !1626)
!1625 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1626 = !{!1627, !1628, !1629, !1630, !1631, !1632, !1634, !1635, !1636, !1637, !1640, !1641, !1811, !1812, !1820, !1821, !1822, !1823, !1824}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1624, file: !1625, line: 65, baseType: !194, size: 960)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1624, file: !1625, line: 66, baseType: !335, size: 64, offset: 960)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1624, file: !1625, line: 68, baseType: !213, size: 8192, offset: 1024)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1624, file: !1625, line: 70, baseType: !142, size: 32, offset: 9216)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1624, file: !1625, line: 71, baseType: !142, size: 32, offset: 9248)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1624, file: !1625, line: 72, baseType: !1633, size: 64, offset: 9280)
!1633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 64, elements: !753)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1624, file: !1625, line: 74, baseType: !185, size: 32, offset: 9344)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1624, file: !1625, line: 74, baseType: !185, size: 32, offset: 9376)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1624, file: !1625, line: 76, baseType: !277, size: 64, offset: 9408)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1624, file: !1625, line: 77, baseType: !1638, size: 64, offset: 9472)
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 64)
!1639 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !1625, line: 77, flags: DIFlagFwdDecl)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1624, file: !1625, line: 78, baseType: !595, size: 64, offset: 9536)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !1624, file: !1625, line: 80, baseType: !1642, size: 2624, offset: 9600)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !1643, line: 340, size: 2624, elements: !1644)
!1643 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1644 = !{!1645, !1673, !1691, !1692, !1693, !1708, !1764, !1765, !1791, !1792, !1793, !1794, !1800}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !1642, file: !1643, line: 341, baseType: !1646, size: 576)
!1646 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !1643, line: 251, baseType: !1647)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !1643, line: 207, size: 576, elements: !1648)
!1648 = !{!1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1647, file: !1643, line: 208, baseType: !142, size: 32)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !1647, file: !1643, line: 211, baseType: !232, size: 16, offset: 32)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !1647, file: !1643, line: 212, baseType: !232, size: 16, offset: 48)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !1647, file: !1643, line: 213, baseType: !185, size: 32, offset: 64)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !1647, file: !1643, line: 214, baseType: !232, size: 16, offset: 96)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !1647, file: !1643, line: 215, baseType: !232, size: 16, offset: 112)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !1647, file: !1643, line: 216, baseType: !232, size: 16, offset: 128)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !1647, file: !1643, line: 217, baseType: !232, size: 16, offset: 144)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !1647, file: !1643, line: 218, baseType: !232, size: 16, offset: 160)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !1647, file: !1643, line: 219, baseType: !232, size: 16, offset: 176)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !1647, file: !1643, line: 220, baseType: !185, size: 32, offset: 192)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !1647, file: !1643, line: 222, baseType: !232, size: 16, offset: 224)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !1647, file: !1643, line: 225, baseType: !232, size: 16, offset: 240)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !1647, file: !1643, line: 228, baseType: !142, size: 32, offset: 256)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !1647, file: !1643, line: 229, baseType: !142, size: 32, offset: 288)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !1647, file: !1643, line: 233, baseType: !142, size: 32, offset: 320)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !1647, file: !1643, line: 236, baseType: !232, size: 16, offset: 352)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1647, file: !1643, line: 236, baseType: !232, size: 16, offset: 368)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1647, file: !1643, line: 241, baseType: !185, size: 32, offset: 384)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !1647, file: !1643, line: 244, baseType: !142, size: 32, offset: 416)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !1647, file: !1643, line: 244, baseType: !142, size: 32, offset: 448)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !1647, file: !1643, line: 245, baseType: !185, size: 32, offset: 480)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !1647, file: !1643, line: 248, baseType: !185, size: 32, offset: 512)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1647, file: !1643, line: 250, baseType: !142, size: 32, offset: 544)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1642, file: !1643, line: 342, baseType: !1674, size: 448, offset: 576)
!1674 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !1643, line: 79, baseType: !1675)
!1675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !1643, line: 61, size: 448, elements: !1676)
!1676 = !{!1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !1675, file: !1643, line: 62, baseType: !177, size: 64)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !1675, file: !1643, line: 64, baseType: !232, size: 16, offset: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1675, file: !1643, line: 65, baseType: !232, size: 16, offset: 80)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !1675, file: !1643, line: 67, baseType: !185, size: 32, offset: 96)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !1675, file: !1643, line: 68, baseType: !185, size: 32, offset: 128)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !1675, file: !1643, line: 69, baseType: !185, size: 32, offset: 160)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1675, file: !1643, line: 70, baseType: !232, size: 16, offset: 192)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1675, file: !1643, line: 71, baseType: !232, size: 16, offset: 208)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !1675, file: !1643, line: 72, baseType: !752, size: 64, offset: 224)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !1675, file: !1643, line: 75, baseType: !185, size: 32, offset: 288)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !1675, file: !1643, line: 75, baseType: !185, size: 32, offset: 320)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !1675, file: !1643, line: 75, baseType: !185, size: 32, offset: 352)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !1675, file: !1643, line: 78, baseType: !185, size: 32, offset: 384)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !1675, file: !1643, line: 78, baseType: !185, size: 32, offset: 416)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !1642, file: !1643, line: 343, baseType: !258, size: 128, offset: 1024)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !1642, file: !1643, line: 344, baseType: !258, size: 128, offset: 1152)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !1642, file: !1643, line: 345, baseType: !1694, size: 192, offset: 1280)
!1694 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !1643, line: 278, baseType: !1695)
!1695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !1643, line: 270, size: 192, elements: !1696)
!1696 = !{!1697, !1698, !1699, !1700, !1701}
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1695, file: !1643, line: 271, baseType: !142, size: 32)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1695, file: !1643, line: 273, baseType: !185, size: 32, offset: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !1695, file: !1643, line: 275, baseType: !142, size: 32, offset: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !1695, file: !1643, line: 276, baseType: !142, size: 32, offset: 96)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !1695, file: !1643, line: 277, baseType: !1702, size: 64, offset: 128)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !1643, line: 55, size: 576, elements: !1704)
!1704 = !{!1705, !1706, !1707}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1703, file: !1643, line: 56, baseType: !142, size: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1703, file: !1643, line: 57, baseType: !185, size: 32, offset: 32)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1703, file: !1643, line: 58, baseType: !641, size: 512, offset: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !1642, file: !1643, line: 346, baseType: !1709, size: 384, offset: 1472)
!1709 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !1643, line: 268, baseType: !1710)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !1643, line: 253, size: 384, elements: !1711)
!1711 = !{!1712, !1713, !1714, !1715, !1716, !1758, !1759, !1760, !1761, !1762, !1763}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1710, file: !1643, line: 254, baseType: !142, size: 32)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !1710, file: !1643, line: 255, baseType: !142, size: 32, offset: 32)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1710, file: !1643, line: 255, baseType: !142, size: 32, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !1710, file: !1643, line: 258, baseType: !185, size: 32, offset: 96)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !1710, file: !1643, line: 259, baseType: !1717, size: 64, offset: 128)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !1643, line: 164, baseType: !1719)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !1643, line: 108, size: 1664, elements: !1720)
!1720 = !{!1721, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1719, file: !1643, line: 109, baseType: !1722, size: 64)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1719, file: !1643, line: 109, baseType: !1722, size: 64, offset: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1719, file: !1643, line: 111, baseType: !248, size: 512, offset: 128)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !1719, file: !1643, line: 119, baseType: !752, size: 64, offset: 640)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !1719, file: !1643, line: 119, baseType: !752, size: 64, offset: 704)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1719, file: !1643, line: 125, baseType: !752, size: 64, offset: 768)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1719, file: !1643, line: 125, baseType: !752, size: 64, offset: 832)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1719, file: !1643, line: 127, baseType: !752, size: 64, offset: 896)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1719, file: !1643, line: 130, baseType: !142, size: 32, offset: 960)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1719, file: !1643, line: 131, baseType: !142, size: 32, offset: 992)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1719, file: !1643, line: 132, baseType: !1733, size: 64, offset: 1024)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !1643, line: 106, baseType: !1735)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !1643, line: 81, size: 512, elements: !1736)
!1736 = !{!1737, !1738, !1739, !1740, !1741, !1742}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1735, file: !1643, line: 82, baseType: !752, size: 64)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !1735, file: !1643, line: 97, baseType: !184, size: 256, offset: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1735, file: !1643, line: 102, baseType: !752, size: 64, offset: 320)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1735, file: !1643, line: 102, baseType: !752, size: 64, offset: 384)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1735, file: !1643, line: 104, baseType: !142, size: 32, offset: 448)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1735, file: !1643, line: 105, baseType: !142, size: 32, offset: 480)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !1719, file: !1643, line: 135, baseType: !370, size: 96, offset: 1088)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1719, file: !1643, line: 136, baseType: !185, size: 32, offset: 1184)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1719, file: !1643, line: 139, baseType: !142, size: 32, offset: 1216)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !1719, file: !1643, line: 139, baseType: !142, size: 32, offset: 1248)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !1719, file: !1643, line: 139, baseType: !142, size: 32, offset: 1280)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1719, file: !1643, line: 140, baseType: !370, size: 96, offset: 1312)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !1719, file: !1643, line: 143, baseType: !232, size: 16, offset: 1408)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1719, file: !1643, line: 144, baseType: !232, size: 16, offset: 1424)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !1719, file: !1643, line: 145, baseType: !232, size: 16, offset: 1440)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !1719, file: !1643, line: 148, baseType: !232, size: 16, offset: 1456)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !1719, file: !1643, line: 149, baseType: !142, size: 32, offset: 1472)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !1719, file: !1643, line: 150, baseType: !185, size: 32, offset: 1504)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1719, file: !1643, line: 152, baseType: !595, size: 64, offset: 1536)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1719, file: !1643, line: 163, baseType: !185, size: 32, offset: 1600)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1719, file: !1643, line: 163, baseType: !185, size: 32, offset: 1632)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !1710, file: !1643, line: 261, baseType: !185, size: 32, offset: 192)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !1710, file: !1643, line: 261, baseType: !185, size: 32, offset: 224)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !1710, file: !1643, line: 261, baseType: !185, size: 32, offset: 256)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1710, file: !1643, line: 263, baseType: !142, size: 32, offset: 288)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1710, file: !1643, line: 266, baseType: !142, size: 32, offset: 320)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1710, file: !1643, line: 267, baseType: !185, size: 32, offset: 352)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1642, file: !1643, line: 347, baseType: !1717, size: 64, offset: 1856)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !1642, file: !1643, line: 348, baseType: !1766, size: 64, offset: 1920)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 64)
!1767 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !1643, line: 205, baseType: !1768)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !1643, line: 186, size: 1024, elements: !1769)
!1769 = !{!1770, !1772, !1773, !1774, !1776, !1777, !1778, !1786, !1787, !1788, !1789, !1790}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1768, file: !1643, line: 187, baseType: !1771, size: 64)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1768, file: !1643, line: 187, baseType: !1771, size: 64, offset: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1768, file: !1643, line: 189, baseType: !248, size: 512, offset: 128)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !1768, file: !1643, line: 191, baseType: !1775, size: 64, offset: 640)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !1768, file: !1643, line: 193, baseType: !142, size: 32, offset: 704)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1768, file: !1643, line: 193, baseType: !142, size: 32, offset: 736)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1768, file: !1643, line: 195, baseType: !1779, size: 64, offset: 768)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !1643, line: 184, baseType: !1781)
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !1643, line: 166, size: 320, elements: !1782)
!1782 = !{!1783, !1784, !1785}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !1781, file: !1643, line: 180, baseType: !184, size: 256)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1781, file: !1643, line: 182, baseType: !142, size: 32, offset: 256)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1781, file: !1643, line: 183, baseType: !142, size: 32, offset: 288)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1768, file: !1643, line: 196, baseType: !142, size: 32, offset: 832)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1768, file: !1643, line: 198, baseType: !142, size: 32, offset: 864)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1768, file: !1643, line: 200, baseType: !190, size: 64, offset: 896)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !1768, file: !1643, line: 201, baseType: !185, size: 32, offset: 960)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1768, file: !1643, line: 204, baseType: !142, size: 32, offset: 992)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1642, file: !1643, line: 350, baseType: !258, size: 128, offset: 1984)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !1642, file: !1643, line: 351, baseType: !142, size: 32, offset: 2112)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !1642, file: !1643, line: 351, baseType: !142, size: 32, offset: 2144)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1642, file: !1643, line: 353, baseType: !1795, size: 64, offset: 2176)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !1643, line: 297, baseType: !1797)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !1643, line: 295, size: 2048, elements: !1798)
!1798 = !{!1799}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1797, file: !1643, line: 296, baseType: !876, size: 2048)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !1642, file: !1643, line: 355, baseType: !1801, size: 384, offset: 2240)
!1801 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !1643, line: 338, baseType: !1802)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !1643, line: 322, size: 384, elements: !1803)
!1803 = !{!1804, !1805, !1806, !1807, !1808, !1809, !1810}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1802, file: !1643, line: 323, baseType: !142, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !1802, file: !1643, line: 325, baseType: !232, size: 16, offset: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1802, file: !1643, line: 326, baseType: !232, size: 16, offset: 48)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !1802, file: !1643, line: 331, baseType: !258, size: 128, offset: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1802, file: !1643, line: 334, baseType: !258, size: 128, offset: 192)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !1802, file: !1643, line: 335, baseType: !142, size: 32, offset: 320)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1802, file: !1643, line: 337, baseType: !142, size: 32, offset: 352)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !1624, file: !1625, line: 81, baseType: !177, size: 64, offset: 12224)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1624, file: !1625, line: 85, baseType: !1813, size: 6208, offset: 12288)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !1625, line: 55, size: 6208, elements: !1814)
!1814 = !{!1815, !1816, !1817, !1818, !1819}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1813, file: !1625, line: 56, baseType: !1572, size: 6144)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1813, file: !1625, line: 58, baseType: !232, size: 16, offset: 6144)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1813, file: !1625, line: 59, baseType: !232, size: 16, offset: 6160)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !1813, file: !1625, line: 60, baseType: !232, size: 16, offset: 6176)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !1813, file: !1625, line: 61, baseType: !232, size: 16, offset: 6192)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1624, file: !1625, line: 86, baseType: !142, size: 32, offset: 18496)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1624, file: !1625, line: 88, baseType: !142, size: 32, offset: 18528)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1624, file: !1625, line: 90, baseType: !142, size: 32, offset: 18560)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1624, file: !1625, line: 94, baseType: !142, size: 32, offset: 18592)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1624, file: !1625, line: 100, baseType: !1614, size: 512, offset: 18624)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1524, file: !1516, line: 154, baseType: !1826, size: 64, offset: 1664)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!1827 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !1516, line: 154, flags: DIFlagFwdDecl)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1524, file: !1516, line: 156, baseType: !277, size: 64, offset: 1728)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !1524, file: !1516, line: 158, baseType: !185, size: 32, offset: 1792)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !1524, file: !1516, line: 159, baseType: !185, size: 32, offset: 1824)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !1524, file: !1516, line: 162, baseType: !1527, size: 64, offset: 1856)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !1524, file: !1516, line: 162, baseType: !1527, size: 64, offset: 1920)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !1524, file: !1516, line: 162, baseType: !1527, size: 64, offset: 1984)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1524, file: !1516, line: 164, baseType: !258, size: 128, offset: 2048)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1524, file: !1516, line: 166, baseType: !1836, size: 64, offset: 2176)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64)
!1837 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !1516, line: 51, flags: DIFlagFwdDecl)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !1524, file: !1516, line: 167, baseType: !177, size: 64, offset: 2240)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1524, file: !1516, line: 168, baseType: !185, size: 32, offset: 2304)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1524, file: !1516, line: 170, baseType: !185, size: 32, offset: 2336)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !1524, file: !1516, line: 170, baseType: !185, size: 32, offset: 2368)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !1524, file: !1516, line: 171, baseType: !185, size: 32, offset: 2400)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !1524, file: !1516, line: 173, baseType: !177, size: 64, offset: 2432)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !1524, file: !1516, line: 175, baseType: !142, size: 32, offset: 2496)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !1524, file: !1516, line: 176, baseType: !142, size: 32, offset: 2528)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !1524, file: !1516, line: 179, baseType: !142, size: 32, offset: 2560)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !1524, file: !1516, line: 180, baseType: !185, size: 32, offset: 2592)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1524, file: !1516, line: 183, baseType: !142, size: 32, offset: 2624)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1524, file: !1516, line: 185, baseType: !214, size: 8, offset: 2656)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1524, file: !1516, line: 186, baseType: !1851, size: 24, offset: 2664)
!1851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 24, elements: !371)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1524, file: !1516, line: 189, baseType: !258, size: 128, offset: 2688)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !1515, file: !1516, line: 207, baseType: !213, size: 8192, offset: 384)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !1515, file: !1516, line: 208, baseType: !213, size: 8192, offset: 8576)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !1515, file: !1516, line: 210, baseType: !142, size: 32, offset: 16768)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !1515, file: !1516, line: 210, baseType: !142, size: 32, offset: 16800)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !1515, file: !1516, line: 211, baseType: !142, size: 32, offset: 16832)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1515, file: !1516, line: 211, baseType: !142, size: 32, offset: 16864)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !1515, file: !1516, line: 212, baseType: !1094, size: 128, offset: 16896)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !761, file: !141, line: 1246, baseType: !1861, size: 64, offset: 2112)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !141, line: 1067, size: 5184, elements: !1863)
!1863 = !{!1864, !2049, !2050, !2065, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2087, !2103, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2214}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1862, file: !141, line: 1068, baseType: !1865, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 64)
!1866 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !141, line: 934, baseType: !1867)
!1867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !141, line: 925, size: 576, elements: !1868)
!1868 = !{!1869, !2032, !2033, !2034, !2035, !2036, !2048}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1867, file: !141, line: 926, baseType: !1870, size: 320)
!1870 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !141, line: 830, baseType: !1871)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !141, line: 813, size: 320, elements: !1872)
!1872 = !{!1873, !2017, !2026, !2027, !2029, !2030, !2031}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1871, file: !141, line: 814, baseType: !1874, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1876, line: 54, size: 16448, elements: !1877)
!1876 = !DIFile(filename: "blender/source/blender/makesdna/DNA_brush_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1877 = !{!1878, !1879, !1886, !1925, !1926, !1927, !1928, !1929, !1932, !1933, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1875, file: !1876, line: 55, baseType: !194, size: 960)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1875, file: !1876, line: 57, baseType: !1880, size: 192, offset: 960)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BrushClone", file: !1876, line: 48, size: 192, elements: !1881)
!1881 = !{!1882, !1883, !1884, !1885}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1880, file: !1876, line: 49, baseType: !190, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1880, file: !1876, line: 50, baseType: !752, size: 64, offset: 64)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1880, file: !1876, line: 51, baseType: !185, size: 32, offset: 128)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1880, file: !1876, line: 51, baseType: !185, size: 32, offset: 160)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1875, file: !1876, line: 58, baseType: !1887, size: 64, offset: 1152)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1615, line: 72, size: 3072, elements: !1889)
!1889 = !{!1890, !1891, !1892, !1893, !1894, !1895, !1896, !1921, !1922, !1923, !1924}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1888, file: !1615, line: 73, baseType: !142, size: 32)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1888, file: !1615, line: 73, baseType: !142, size: 32, offset: 32)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1888, file: !1615, line: 74, baseType: !142, size: 32, offset: 64)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1888, file: !1615, line: 75, baseType: !142, size: 32, offset: 96)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1888, file: !1615, line: 77, baseType: !1094, size: 128, offset: 128)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1888, file: !1615, line: 77, baseType: !1094, size: 128, offset: 256)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1888, file: !1615, line: 79, baseType: !1897, size: 2304, offset: 384)
!1897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1898, size: 2304, elements: !453)
!1898 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1615, line: 67, baseType: !1899)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1615, line: 55, size: 576, elements: !1900)
!1900 = !{!1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1917, !1918, !1919, !1920}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1899, file: !1615, line: 56, baseType: !232, size: 16)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1899, file: !1615, line: 56, baseType: !232, size: 16, offset: 16)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1899, file: !1615, line: 58, baseType: !185, size: 32, offset: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1899, file: !1615, line: 59, baseType: !185, size: 32, offset: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1899, file: !1615, line: 59, baseType: !185, size: 32, offset: 96)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1899, file: !1615, line: 60, baseType: !752, size: 64, offset: 128)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1899, file: !1615, line: 60, baseType: !752, size: 64, offset: 192)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1899, file: !1615, line: 61, baseType: !1909, size: 64, offset: 256)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64)
!1910 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1615, line: 47, baseType: !1911)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1615, line: 44, size: 96, elements: !1912)
!1912 = !{!1913, !1914, !1915, !1916}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1911, file: !1615, line: 45, baseType: !185, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1911, file: !1615, line: 45, baseType: !185, size: 32, offset: 32)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1911, file: !1615, line: 46, baseType: !232, size: 16, offset: 64)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1911, file: !1615, line: 46, baseType: !232, size: 16, offset: 80)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1899, file: !1615, line: 62, baseType: !1909, size: 64, offset: 320)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1899, file: !1615, line: 64, baseType: !1909, size: 64, offset: 384)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1899, file: !1615, line: 65, baseType: !752, size: 64, offset: 448)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1899, file: !1615, line: 66, baseType: !752, size: 64, offset: 512)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1888, file: !1615, line: 80, baseType: !370, size: 96, offset: 2688)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1888, file: !1615, line: 80, baseType: !370, size: 96, offset: 2784)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1888, file: !1615, line: 81, baseType: !370, size: 96, offset: 2880)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1888, file: !1615, line: 83, baseType: !370, size: 96, offset: 2976)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !1875, file: !1876, line: 59, baseType: !497, size: 2496, offset: 1216)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "mask_mtex", scope: !1875, file: !1876, line: 60, baseType: !497, size: 2496, offset: 3712)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "toggle_brush", scope: !1875, file: !1876, line: 62, baseType: !1874, size: 64, offset: 6208)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "icon_imbuf", scope: !1875, file: !1876, line: 64, baseType: !1222, size: 64, offset: 6272)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1875, file: !1876, line: 65, baseType: !1930, size: 64, offset: 6336)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!1931 = !DIDerivedType(tag: DW_TAG_typedef, name: "PreviewImage", file: !195, line: 167, baseType: !848)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !1875, file: !1876, line: 66, baseType: !459, size: 64, offset: 6400)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "paint_curve", scope: !1875, file: !1876, line: 67, baseType: !1934, size: 64, offset: 6464)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurve", file: !1876, line: 166, size: 1088, elements: !1936)
!1936 = !{!1937, !1938, !1968, !1969}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1935, file: !1876, line: 168, baseType: !194, size: 960)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1935, file: !1876, line: 169, baseType: !1939, size: 64, offset: 960)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintCurvePoint", file: !1876, line: 164, baseType: !1941)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurvePoint", file: !1876, line: 160, size: 608, elements: !1942)
!1942 = !{!1943, !1967}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "bez", scope: !1941, file: !1876, line: 162, baseType: !1944, size: 576)
!1944 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !1945, line: 133, baseType: !1946)
!1945 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !1945, line: 117, size: 576, elements: !1947)
!1947 = !{!1948, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1946, file: !1945, line: 118, baseType: !1949, size: 288)
!1949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 288, elements: !1950)
!1950 = !{!372, !372}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !1946, file: !1945, line: 119, baseType: !185, size: 32, offset: 288)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1946, file: !1945, line: 119, baseType: !185, size: 32, offset: 320)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1946, file: !1945, line: 119, baseType: !185, size: 32, offset: 352)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1946, file: !1945, line: 121, baseType: !214, size: 8, offset: 384)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !1946, file: !1945, line: 123, baseType: !214, size: 8, offset: 392)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !1946, file: !1945, line: 123, baseType: !214, size: 8, offset: 400)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !1946, file: !1945, line: 124, baseType: !214, size: 8, offset: 408)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !1946, file: !1945, line: 124, baseType: !214, size: 8, offset: 416)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !1946, file: !1945, line: 124, baseType: !214, size: 8, offset: 424)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !1946, file: !1945, line: 126, baseType: !214, size: 8, offset: 432)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !1946, file: !1945, line: 128, baseType: !214, size: 8, offset: 440)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1946, file: !1945, line: 129, baseType: !185, size: 32, offset: 448)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !1946, file: !1945, line: 130, baseType: !185, size: 32, offset: 480)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !1946, file: !1945, line: 130, baseType: !185, size: 32, offset: 512)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1946, file: !1945, line: 132, baseType: !1966, size: 32, offset: 544)
!1966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 32, elements: !453)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "pressure", scope: !1941, file: !1876, line: 163, baseType: !185, size: 32, offset: 576)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "tot_points", scope: !1935, file: !1876, line: 170, baseType: !142, size: 32, offset: 1024)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "add_index", scope: !1935, file: !1876, line: 171, baseType: !142, size: 32, offset: 1056)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "icon_filepath", scope: !1875, file: !1876, line: 69, baseType: !213, size: 8192, offset: 6528)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "normal_weight", scope: !1875, file: !1876, line: 71, baseType: !185, size: 32, offset: 14720)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !1875, file: !1876, line: 73, baseType: !232, size: 16, offset: 14752)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "ob_mode", scope: !1875, file: !1876, line: 74, baseType: !232, size: 16, offset: 14768)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1875, file: !1876, line: 75, baseType: !185, size: 32, offset: 14784)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1875, file: !1876, line: 76, baseType: !142, size: 32, offset: 14816)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1875, file: !1876, line: 77, baseType: !142, size: 32, offset: 14848)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "mask_pressure", scope: !1875, file: !1876, line: 78, baseType: !142, size: 32, offset: 14880)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "jitter", scope: !1875, file: !1876, line: 79, baseType: !185, size: 32, offset: 14912)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "jitter_absolute", scope: !1875, file: !1876, line: 80, baseType: !142, size: 32, offset: 14944)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_flags", scope: !1875, file: !1876, line: 81, baseType: !142, size: 32, offset: 14976)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !1875, file: !1876, line: 82, baseType: !142, size: 32, offset: 15008)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_radius", scope: !1875, file: !1876, line: 83, baseType: !142, size: 32, offset: 15040)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_factor", scope: !1875, file: !1876, line: 84, baseType: !185, size: 32, offset: 15072)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !1875, file: !1876, line: 85, baseType: !185, size: 32, offset: 15104)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1875, file: !1876, line: 87, baseType: !370, size: 96, offset: 15136)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1875, file: !1876, line: 88, baseType: !185, size: 32, offset: 15232)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1875, file: !1876, line: 90, baseType: !370, size: 96, offset: 15264)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_plane", scope: !1875, file: !1876, line: 92, baseType: !142, size: 32, offset: 15360)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "plane_offset", scope: !1875, file: !1876, line: 94, baseType: !185, size: 32, offset: 15392)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1875, file: !1876, line: 96, baseType: !185, size: 32, offset: 15424)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_spacing", scope: !1875, file: !1876, line: 97, baseType: !142, size: 32, offset: 15456)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_stroke_mode", scope: !1875, file: !1876, line: 98, baseType: !142, size: 32, offset: 15488)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_fill_mode", scope: !1875, file: !1876, line: 99, baseType: !142, size: 32, offset: 15520)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_tool", scope: !1875, file: !1876, line: 101, baseType: !214, size: 8, offset: 15552)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "vertexpaint_tool", scope: !1875, file: !1876, line: 102, baseType: !214, size: 8, offset: 15560)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "imagepaint_tool", scope: !1875, file: !1876, line: 103, baseType: !214, size: 8, offset: 15568)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tool", scope: !1875, file: !1876, line: 104, baseType: !214, size: 8, offset: 15576)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "autosmooth_factor", scope: !1875, file: !1876, line: 106, baseType: !185, size: 32, offset: 15584)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "crease_pinch_factor", scope: !1875, file: !1876, line: 108, baseType: !185, size: 32, offset: 15616)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "plane_trim", scope: !1875, file: !1876, line: 110, baseType: !185, size: 32, offset: 15648)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1875, file: !1876, line: 111, baseType: !185, size: 32, offset: 15680)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "texture_sample_bias", scope: !1875, file: !1876, line: 113, baseType: !185, size: 32, offset: 15712)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "texture_overlay_alpha", scope: !1875, file: !1876, line: 116, baseType: !142, size: 32, offset: 15744)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "mask_overlay_alpha", scope: !1875, file: !1876, line: 117, baseType: !142, size: 32, offset: 15776)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_overlay_alpha", scope: !1875, file: !1876, line: 118, baseType: !142, size: 32, offset: 15808)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1875, file: !1876, line: 120, baseType: !185, size: 32, offset: 15840)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_threshold", scope: !1875, file: !1876, line: 123, baseType: !185, size: 32, offset: 15872)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "blur_kernel_radius", scope: !1875, file: !1876, line: 124, baseType: !142, size: 32, offset: 15904)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "blur_mode", scope: !1875, file: !1876, line: 125, baseType: !142, size: 32, offset: 15936)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "fill_threshold", scope: !1875, file: !1876, line: 128, baseType: !185, size: 32, offset: 15968)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "add_col", scope: !1875, file: !1876, line: 130, baseType: !370, size: 96, offset: 16000)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "sub_col", scope: !1875, file: !1876, line: 131, baseType: !370, size: 96, offset: 16096)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_pos", scope: !1875, file: !1876, line: 133, baseType: !752, size: 64, offset: 16192)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_dimension", scope: !1875, file: !1876, line: 134, baseType: !752, size: 64, offset: 16256)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_pos", scope: !1875, file: !1876, line: 136, baseType: !752, size: 64, offset: 16320)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_dimension", scope: !1875, file: !1876, line: 137, baseType: !752, size: 64, offset: 16384)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1871, file: !141, line: 815, baseType: !2018, size: 64, offset: 64)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1876, line: 148, size: 1280, elements: !2020)
!2020 = !{!2021, !2022, !2023, !2024, !2025}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2019, file: !1876, line: 150, baseType: !194, size: 960)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !2019, file: !1876, line: 153, baseType: !258, size: 128, offset: 960)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "deleted", scope: !2019, file: !1876, line: 154, baseType: !258, size: 128, offset: 1088)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "active_color", scope: !2019, file: !1876, line: 156, baseType: !142, size: 32, offset: 1216)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2019, file: !1876, line: 157, baseType: !142, size: 32, offset: 1248)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1871, file: !141, line: 818, baseType: !177, size: 64, offset: 128)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1871, file: !141, line: 819, baseType: !2028, size: 32, offset: 192)
!2028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1231, size: 32, elements: !453)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1871, file: !141, line: 822, baseType: !142, size: 32, offset: 224)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1871, file: !141, line: 826, baseType: !142, size: 32, offset: 256)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1871, file: !141, line: 829, baseType: !142, size: 32, offset: 288)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1867, file: !141, line: 928, baseType: !232, size: 16, offset: 320)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1867, file: !141, line: 928, baseType: !232, size: 16, offset: 336)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1867, file: !141, line: 929, baseType: !142, size: 32, offset: 352)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1867, file: !141, line: 930, baseType: !857, size: 64, offset: 384)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1867, file: !141, line: 931, baseType: !2037, size: 64, offset: 448)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !180, line: 59, size: 128, elements: !2039)
!2039 = !{!2040, !2046, !2047}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !2038, file: !180, line: 60, baseType: !2041, size: 64)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !180, line: 54, size: 64, elements: !2043)
!2043 = !{!2044, !2045}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !2042, file: !180, line: 55, baseType: !142, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2042, file: !180, line: 56, baseType: !185, size: 32, offset: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !2038, file: !180, line: 61, baseType: !142, size: 32, offset: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2038, file: !180, line: 62, baseType: !142, size: 32, offset: 96)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1867, file: !141, line: 933, baseType: !177, size: 64, offset: 512)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1862, file: !141, line: 1069, baseType: !1865, size: 64, offset: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1862, file: !141, line: 1070, baseType: !2051, size: 64, offset: 128)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !141, line: 916, baseType: !2053)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !141, line: 891, size: 704, elements: !2054)
!2054 = !{!2055, !2056, !2057, !2059, !2060, !2061, !2062, !2063, !2064}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2053, file: !141, line: 892, baseType: !1870, size: 320)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2053, file: !141, line: 896, baseType: !142, size: 32, offset: 320)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !2053, file: !141, line: 900, baseType: !2058, size: 96, offset: 352)
!2058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 96, elements: !371)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !2053, file: !141, line: 903, baseType: !185, size: 32, offset: 448)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !2053, file: !141, line: 906, baseType: !142, size: 32, offset: 480)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !2053, file: !141, line: 909, baseType: !185, size: 32, offset: 512)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !2053, file: !141, line: 912, baseType: !185, size: 32, offset: 544)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !2053, file: !141, line: 914, baseType: !504, size: 64, offset: 576)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2053, file: !141, line: 915, baseType: !177, size: 64, offset: 640)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1862, file: !141, line: 1071, baseType: !2066, size: 64, offset: 192)
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 64)
!2067 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !141, line: 920, baseType: !2068)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !141, line: 918, size: 320, elements: !2069)
!2069 = !{!2070}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2068, file: !141, line: 919, baseType: !1870, size: 320)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1862, file: !141, line: 1075, baseType: !185, size: 32, offset: 256)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1862, file: !141, line: 1077, baseType: !185, size: 32, offset: 288)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1862, file: !141, line: 1078, baseType: !185, size: 32, offset: 320)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1862, file: !141, line: 1079, baseType: !232, size: 16, offset: 352)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1862, file: !141, line: 1082, baseType: !232, size: 16, offset: 368)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1862, file: !141, line: 1085, baseType: !214, size: 8, offset: 384)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1862, file: !141, line: 1086, baseType: !214, size: 8, offset: 392)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1862, file: !141, line: 1087, baseType: !214, size: 8, offset: 400)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1862, file: !141, line: 1088, baseType: !214, size: 8, offset: 408)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1862, file: !141, line: 1090, baseType: !185, size: 32, offset: 416)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1862, file: !141, line: 1093, baseType: !232, size: 16, offset: 448)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1862, file: !141, line: 1096, baseType: !214, size: 8, offset: 464)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1862, file: !141, line: 1098, baseType: !2084, size: 40, offset: 472)
!2084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 40, elements: !2085)
!2085 = !{!2086}
!2086 = !DISubrange(count: 5)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1862, file: !141, line: 1101, baseType: !2088, size: 832, offset: 512)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !141, line: 836, size: 832, elements: !2089)
!2089 = !{!2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2088, file: !141, line: 837, baseType: !1870, size: 320)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2088, file: !141, line: 839, baseType: !232, size: 16, offset: 320)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !2088, file: !141, line: 839, baseType: !232, size: 16, offset: 336)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !2088, file: !141, line: 842, baseType: !232, size: 16, offset: 352)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !2088, file: !141, line: 842, baseType: !232, size: 16, offset: 368)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !2088, file: !141, line: 843, baseType: !845, size: 32, offset: 384)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2088, file: !141, line: 845, baseType: !142, size: 32, offset: 416)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2088, file: !141, line: 847, baseType: !177, size: 64, offset: 448)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !2088, file: !141, line: 848, baseType: !190, size: 64, offset: 512)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2088, file: !141, line: 849, baseType: !190, size: 64, offset: 576)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !2088, file: !141, line: 850, baseType: !190, size: 64, offset: 640)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !2088, file: !141, line: 851, baseType: !370, size: 96, offset: 704)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2088, file: !141, line: 852, baseType: !185, size: 32, offset: 800)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1862, file: !141, line: 1104, baseType: !2104, size: 1344, offset: 1344)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !141, line: 867, size: 1344, elements: !2105)
!2105 = !{!2106, !2107, !2108, !2109, !2110, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2104, file: !141, line: 868, baseType: !232, size: 16)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !2104, file: !141, line: 869, baseType: !232, size: 16, offset: 16)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !2104, file: !141, line: 870, baseType: !232, size: 16, offset: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !2104, file: !141, line: 871, baseType: !232, size: 16, offset: 48)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2104, file: !141, line: 873, baseType: !2111, size: 896, offset: 64)
!2111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2112, size: 896, elements: !2121)
!2112 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !141, line: 864, baseType: !2113)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !141, line: 859, size: 128, elements: !2114)
!2114 = !{!2115, !2116, !2117, !2118, !2119, !2120}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2113, file: !141, line: 860, baseType: !232, size: 16)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2113, file: !141, line: 861, baseType: !232, size: 16, offset: 16)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2113, file: !141, line: 861, baseType: !232, size: 16, offset: 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2113, file: !141, line: 861, baseType: !232, size: 16, offset: 48)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2113, file: !141, line: 862, baseType: !142, size: 32, offset: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2113, file: !141, line: 863, baseType: !185, size: 32, offset: 96)
!2121 = !{!2122}
!2122 = !DISubrange(count: 7)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2104, file: !141, line: 874, baseType: !177, size: 64, offset: 960)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !2104, file: !141, line: 876, baseType: !185, size: 32, offset: 1024)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2104, file: !141, line: 876, baseType: !185, size: 32, offset: 1056)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2104, file: !141, line: 878, baseType: !142, size: 32, offset: 1088)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !2104, file: !141, line: 879, baseType: !142, size: 32, offset: 1120)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2104, file: !141, line: 881, baseType: !142, size: 32, offset: 1152)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !2104, file: !141, line: 881, baseType: !142, size: 32, offset: 1184)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2104, file: !141, line: 883, baseType: !760, size: 64, offset: 1216)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2104, file: !141, line: 884, baseType: !504, size: 64, offset: 1280)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1862, file: !141, line: 1107, baseType: !185, size: 32, offset: 2688)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1862, file: !141, line: 1110, baseType: !185, size: 32, offset: 2720)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1862, file: !141, line: 1113, baseType: !232, size: 16, offset: 2752)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1862, file: !141, line: 1113, baseType: !232, size: 16, offset: 2768)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1862, file: !141, line: 1116, baseType: !214, size: 8, offset: 2784)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1862, file: !141, line: 1117, baseType: !469, size: 8, offset: 2792)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1862, file: !141, line: 1120, baseType: !232, size: 16, offset: 2800)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1862, file: !141, line: 1121, baseType: !185, size: 32, offset: 2816)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1862, file: !141, line: 1122, baseType: !185, size: 32, offset: 2848)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1862, file: !141, line: 1123, baseType: !185, size: 32, offset: 2880)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1862, file: !141, line: 1124, baseType: !185, size: 32, offset: 2912)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1862, file: !141, line: 1125, baseType: !185, size: 32, offset: 2944)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1862, file: !141, line: 1126, baseType: !185, size: 32, offset: 2976)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1862, file: !141, line: 1127, baseType: !185, size: 32, offset: 3008)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1862, file: !141, line: 1128, baseType: !185, size: 32, offset: 3040)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1862, file: !141, line: 1129, baseType: !185, size: 32, offset: 3072)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1862, file: !141, line: 1130, baseType: !185, size: 32, offset: 3104)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1862, file: !141, line: 1131, baseType: !232, size: 16, offset: 3136)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1862, file: !141, line: 1132, baseType: !214, size: 8, offset: 3152)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1862, file: !141, line: 1133, baseType: !214, size: 8, offset: 3160)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1862, file: !141, line: 1134, baseType: !1851, size: 24, offset: 3168)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1862, file: !141, line: 1135, baseType: !214, size: 8, offset: 3192)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1862, file: !141, line: 1138, baseType: !504, size: 64, offset: 3200)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1862, file: !141, line: 1139, baseType: !214, size: 8, offset: 3264)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1862, file: !141, line: 1140, baseType: !214, size: 8, offset: 3272)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1862, file: !141, line: 1141, baseType: !214, size: 8, offset: 3280)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1862, file: !141, line: 1142, baseType: !214, size: 8, offset: 3288)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1862, file: !141, line: 1143, baseType: !214, size: 8, offset: 3296)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1862, file: !141, line: 1144, baseType: !2161, size: 64, offset: 3304)
!2161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 64, elements: !1176)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1862, file: !141, line: 1145, baseType: !2161, size: 64, offset: 3368)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1862, file: !141, line: 1148, baseType: !214, size: 8, offset: 3432)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1862, file: !141, line: 1149, baseType: !214, size: 8, offset: 3440)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1862, file: !141, line: 1152, baseType: !214, size: 8, offset: 3448)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1862, file: !141, line: 1152, baseType: !214, size: 8, offset: 3456)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1862, file: !141, line: 1153, baseType: !214, size: 8, offset: 3464)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1862, file: !141, line: 1154, baseType: !232, size: 16, offset: 3472)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1862, file: !141, line: 1154, baseType: !232, size: 16, offset: 3488)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1862, file: !141, line: 1155, baseType: !232, size: 16, offset: 3504)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1862, file: !141, line: 1155, baseType: !232, size: 16, offset: 3520)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1862, file: !141, line: 1156, baseType: !214, size: 8, offset: 3536)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1862, file: !141, line: 1157, baseType: !214, size: 8, offset: 3544)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1862, file: !141, line: 1159, baseType: !214, size: 8, offset: 3552)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1862, file: !141, line: 1160, baseType: !214, size: 8, offset: 3560)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1862, file: !141, line: 1161, baseType: !214, size: 8, offset: 3568)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1862, file: !141, line: 1162, baseType: !214, size: 8, offset: 3576)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1862, file: !141, line: 1165, baseType: !142, size: 32, offset: 3584)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1862, file: !141, line: 1166, baseType: !142, size: 32, offset: 3616)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1862, file: !141, line: 1167, baseType: !142, size: 32, offset: 3648)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1862, file: !141, line: 1168, baseType: !142, size: 32, offset: 3680)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1862, file: !141, line: 1171, baseType: !232, size: 16, offset: 3712)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1862, file: !141, line: 1171, baseType: !232, size: 16, offset: 3728)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1862, file: !141, line: 1172, baseType: !142, size: 32, offset: 3744)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1862, file: !141, line: 1173, baseType: !185, size: 32, offset: 3776)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1862, file: !141, line: 1174, baseType: !185, size: 32, offset: 3808)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1862, file: !141, line: 1177, baseType: !2188, size: 1024, offset: 3840)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !141, line: 963, size: 1024, elements: !2189)
!2189 = !{!2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2188, file: !141, line: 965, baseType: !142, size: 32)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2188, file: !141, line: 968, baseType: !185, size: 32, offset: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2188, file: !141, line: 971, baseType: !185, size: 32, offset: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2188, file: !141, line: 974, baseType: !185, size: 32, offset: 96)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2188, file: !141, line: 977, baseType: !370, size: 96, offset: 128)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2188, file: !141, line: 979, baseType: !370, size: 96, offset: 224)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2188, file: !141, line: 982, baseType: !142, size: 32, offset: 320)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2188, file: !141, line: 987, baseType: !752, size: 64, offset: 352)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2188, file: !141, line: 989, baseType: !185, size: 32, offset: 416)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2188, file: !141, line: 994, baseType: !142, size: 32, offset: 448)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2188, file: !141, line: 995, baseType: !142, size: 32, offset: 480)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2188, file: !141, line: 997, baseType: !214, size: 8, offset: 512)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2188, file: !141, line: 998, baseType: !2203, size: 56, offset: 520)
!2203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 56, elements: !2121)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2188, file: !141, line: 1000, baseType: !185, size: 32, offset: 576)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2188, file: !141, line: 1003, baseType: !752, size: 64, offset: 608)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2188, file: !141, line: 1006, baseType: !142, size: 32, offset: 672)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2188, file: !141, line: 1009, baseType: !185, size: 32, offset: 704)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2188, file: !141, line: 1012, baseType: !752, size: 64, offset: 736)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2188, file: !141, line: 1015, baseType: !752, size: 64, offset: 800)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2188, file: !141, line: 1018, baseType: !142, size: 32, offset: 864)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2188, file: !141, line: 1019, baseType: !1273, size: 64, offset: 896)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2188, file: !141, line: 1023, baseType: !185, size: 32, offset: 960)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2188, file: !141, line: 1024, baseType: !142, size: 32, offset: 992)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1862, file: !141, line: 1179, baseType: !2215, size: 320, offset: 4864)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !141, line: 1043, size: 320, elements: !2216)
!2216 = !{!2217, !2218, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2215, file: !141, line: 1044, baseType: !214, size: 8)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2215, file: !141, line: 1045, baseType: !2219, size: 16, offset: 8)
!2219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 16, elements: !753)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2215, file: !141, line: 1048, baseType: !214, size: 8, offset: 24)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2215, file: !141, line: 1049, baseType: !185, size: 32, offset: 32)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2215, file: !141, line: 1049, baseType: !185, size: 32, offset: 64)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2215, file: !141, line: 1052, baseType: !185, size: 32, offset: 96)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2215, file: !141, line: 1052, baseType: !185, size: 32, offset: 128)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2215, file: !141, line: 1053, baseType: !214, size: 8, offset: 160)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2215, file: !141, line: 1054, baseType: !1851, size: 24, offset: 168)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2215, file: !141, line: 1057, baseType: !185, size: 32, offset: 192)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2215, file: !141, line: 1057, baseType: !185, size: 32, offset: 224)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2215, file: !141, line: 1060, baseType: !185, size: 32, offset: 256)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2215, file: !141, line: 1060, baseType: !185, size: 32, offset: 288)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !761, file: !141, line: 1247, baseType: !2232, size: 64, offset: 2176)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64)
!2233 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !141, line: 60, flags: DIFlagFwdDecl)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !761, file: !141, line: 1251, baseType: !2235, size: 31872, offset: 2240)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !141, line: 403, size: 31872, elements: !2236)
!2236 = !{!2237, !2274, !2294, !2303, !2323, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2453, !2454, !2455, !2457, !2473, !2474}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2235, file: !141, line: 404, baseType: !2238, size: 1984)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !141, line: 259, size: 1984, elements: !2239)
!2239 = !{!2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2257, !2269}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2238, file: !141, line: 260, baseType: !214, size: 8)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2238, file: !141, line: 263, baseType: !214, size: 8, offset: 8)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2238, file: !141, line: 266, baseType: !214, size: 8, offset: 16)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2238, file: !141, line: 267, baseType: !214, size: 8, offset: 24)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2238, file: !141, line: 269, baseType: !214, size: 8, offset: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2238, file: !141, line: 270, baseType: !214, size: 8, offset: 40)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2238, file: !141, line: 276, baseType: !214, size: 8, offset: 48)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2238, file: !141, line: 279, baseType: !214, size: 8, offset: 56)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2238, file: !141, line: 280, baseType: !232, size: 16, offset: 64)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2238, file: !141, line: 280, baseType: !232, size: 16, offset: 80)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2238, file: !141, line: 281, baseType: !185, size: 32, offset: 96)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2238, file: !141, line: 284, baseType: !214, size: 8, offset: 128)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2238, file: !141, line: 285, baseType: !214, size: 8, offset: 136)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2238, file: !141, line: 287, baseType: !2254, size: 48, offset: 144)
!2254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 48, elements: !2255)
!2255 = !{!2256}
!2256 = !DISubrange(count: 6)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2238, file: !141, line: 290, baseType: !2258, size: 1280, offset: 192)
!2258 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1615, line: 174, baseType: !2259)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1615, line: 166, size: 1280, elements: !2260)
!2260 = !{!2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2259, file: !1615, line: 167, baseType: !142, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2259, file: !1615, line: 167, baseType: !142, size: 32, offset: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2259, file: !1615, line: 168, baseType: !248, size: 512, offset: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2259, file: !1615, line: 169, baseType: !248, size: 512, offset: 576)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2259, file: !1615, line: 170, baseType: !185, size: 32, offset: 1088)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2259, file: !1615, line: 171, baseType: !185, size: 32, offset: 1120)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2259, file: !1615, line: 172, baseType: !1887, size: 64, offset: 1152)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2259, file: !1615, line: 173, baseType: !177, size: 64, offset: 1216)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2238, file: !141, line: 291, baseType: !2270, size: 512, offset: 1472)
!2270 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1615, line: 178, baseType: !2271)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1615, line: 176, size: 512, elements: !2272)
!2272 = !{!2273}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2271, file: !1615, line: 177, baseType: !248, size: 512)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2235, file: !141, line: 406, baseType: !2275, size: 64, offset: 1984)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 64)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !141, line: 80, size: 1472, elements: !2277)
!2277 = !{!2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2276, file: !141, line: 81, baseType: !177, size: 64)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2276, file: !141, line: 82, baseType: !177, size: 64, offset: 64)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2276, file: !141, line: 83, baseType: !7, size: 32, offset: 128)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2276, file: !141, line: 84, baseType: !7, size: 32, offset: 160)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2276, file: !141, line: 86, baseType: !7, size: 32, offset: 192)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2276, file: !141, line: 87, baseType: !7, size: 32, offset: 224)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2276, file: !141, line: 88, baseType: !7, size: 32, offset: 256)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2276, file: !141, line: 89, baseType: !7, size: 32, offset: 288)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2276, file: !141, line: 90, baseType: !7, size: 32, offset: 320)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2276, file: !141, line: 91, baseType: !7, size: 32, offset: 352)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2276, file: !141, line: 92, baseType: !7, size: 32, offset: 384)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2276, file: !141, line: 93, baseType: !7, size: 32, offset: 416)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2276, file: !141, line: 95, baseType: !2291, size: 1024, offset: 448)
!2291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 1024, elements: !2292)
!2292 = !{!2293}
!2293 = !DISubrange(count: 128)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2235, file: !141, line: 407, baseType: !2295, size: 64, offset: 2048)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !141, line: 98, size: 1216, elements: !2297)
!2297 = !{!2298, !2299, !2300, !2301, !2302}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2296, file: !141, line: 100, baseType: !177, size: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2296, file: !141, line: 101, baseType: !177, size: 64, offset: 64)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2296, file: !141, line: 103, baseType: !7, size: 32, offset: 128)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2296, file: !141, line: 104, baseType: !7, size: 32, offset: 160)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2296, file: !141, line: 106, baseType: !2291, size: 1024, offset: 192)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2235, file: !141, line: 408, baseType: !2304, size: 512, offset: 2112)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !141, line: 109, size: 512, elements: !2305)
!2305 = !{!2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2304, file: !141, line: 111, baseType: !142, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2304, file: !141, line: 112, baseType: !142, size: 32, offset: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2304, file: !141, line: 115, baseType: !142, size: 32, offset: 64)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2304, file: !141, line: 116, baseType: !142, size: 32, offset: 96)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2304, file: !141, line: 117, baseType: !142, size: 32, offset: 128)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2304, file: !141, line: 118, baseType: !142, size: 32, offset: 160)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2304, file: !141, line: 119, baseType: !142, size: 32, offset: 192)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2304, file: !141, line: 120, baseType: !142, size: 32, offset: 224)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2304, file: !141, line: 121, baseType: !142, size: 32, offset: 256)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2304, file: !141, line: 122, baseType: !142, size: 32, offset: 288)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2304, file: !141, line: 125, baseType: !142, size: 32, offset: 320)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2304, file: !141, line: 126, baseType: !142, size: 32, offset: 352)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2304, file: !141, line: 127, baseType: !232, size: 16, offset: 384)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2304, file: !141, line: 128, baseType: !232, size: 16, offset: 400)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2304, file: !141, line: 129, baseType: !142, size: 32, offset: 416)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2304, file: !141, line: 130, baseType: !142, size: 32, offset: 448)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2304, file: !141, line: 131, baseType: !142, size: 32, offset: 480)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2235, file: !141, line: 409, baseType: !2324, size: 576, offset: 2624)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !141, line: 134, size: 576, elements: !2325)
!2325 = !{!2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2324, file: !141, line: 135, baseType: !142, size: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2324, file: !141, line: 136, baseType: !142, size: 32, offset: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2324, file: !141, line: 137, baseType: !142, size: 32, offset: 64)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2324, file: !141, line: 138, baseType: !142, size: 32, offset: 96)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2324, file: !141, line: 139, baseType: !142, size: 32, offset: 128)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2324, file: !141, line: 140, baseType: !142, size: 32, offset: 160)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2324, file: !141, line: 141, baseType: !142, size: 32, offset: 192)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2324, file: !141, line: 142, baseType: !142, size: 32, offset: 224)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2324, file: !141, line: 143, baseType: !185, size: 32, offset: 256)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2324, file: !141, line: 144, baseType: !142, size: 32, offset: 288)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2324, file: !141, line: 145, baseType: !142, size: 32, offset: 320)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2324, file: !141, line: 147, baseType: !142, size: 32, offset: 352)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2324, file: !141, line: 148, baseType: !142, size: 32, offset: 384)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2324, file: !141, line: 149, baseType: !142, size: 32, offset: 416)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2324, file: !141, line: 150, baseType: !142, size: 32, offset: 448)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2324, file: !141, line: 151, baseType: !142, size: 32, offset: 480)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2324, file: !141, line: 152, baseType: !237, size: 64, offset: 512)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2235, file: !141, line: 411, baseType: !142, size: 32, offset: 3200)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2235, file: !141, line: 411, baseType: !142, size: 32, offset: 3232)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2235, file: !141, line: 411, baseType: !142, size: 32, offset: 3264)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2235, file: !141, line: 412, baseType: !185, size: 32, offset: 3296)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2235, file: !141, line: 413, baseType: !142, size: 32, offset: 3328)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2235, file: !141, line: 413, baseType: !142, size: 32, offset: 3360)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2235, file: !141, line: 415, baseType: !142, size: 32, offset: 3392)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2235, file: !141, line: 415, baseType: !142, size: 32, offset: 3424)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2235, file: !141, line: 416, baseType: !232, size: 16, offset: 3456)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2235, file: !141, line: 416, baseType: !232, size: 16, offset: 3472)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2235, file: !141, line: 418, baseType: !185, size: 32, offset: 3488)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2235, file: !141, line: 418, baseType: !185, size: 32, offset: 3520)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2235, file: !141, line: 421, baseType: !185, size: 32, offset: 3552)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2235, file: !141, line: 421, baseType: !185, size: 32, offset: 3584)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2235, file: !141, line: 421, baseType: !185, size: 32, offset: 3616)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2235, file: !141, line: 425, baseType: !232, size: 16, offset: 3648)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2235, file: !141, line: 425, baseType: !232, size: 16, offset: 3664)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2235, file: !141, line: 425, baseType: !232, size: 16, offset: 3680)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2235, file: !141, line: 426, baseType: !232, size: 16, offset: 3696)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2235, file: !141, line: 428, baseType: !232, size: 16, offset: 3712)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2235, file: !141, line: 428, baseType: !232, size: 16, offset: 3728)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2235, file: !141, line: 431, baseType: !142, size: 32, offset: 3744)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2235, file: !141, line: 433, baseType: !232, size: 16, offset: 3776)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2235, file: !141, line: 435, baseType: !232, size: 16, offset: 3792)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2235, file: !141, line: 437, baseType: !232, size: 16, offset: 3808)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2235, file: !141, line: 439, baseType: !232, size: 16, offset: 3824)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2235, file: !141, line: 441, baseType: !232, size: 16, offset: 3840)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2235, file: !141, line: 443, baseType: !232, size: 16, offset: 3856)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2235, file: !141, line: 449, baseType: !142, size: 32, offset: 3872)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2235, file: !141, line: 453, baseType: !142, size: 32, offset: 3904)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2235, file: !141, line: 458, baseType: !232, size: 16, offset: 3936)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2235, file: !141, line: 462, baseType: !232, size: 16, offset: 3952)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2235, file: !141, line: 467, baseType: !142, size: 32, offset: 3968)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2235, file: !141, line: 467, baseType: !142, size: 32, offset: 4000)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2235, file: !141, line: 469, baseType: !232, size: 16, offset: 4032)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2235, file: !141, line: 469, baseType: !232, size: 16, offset: 4048)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2235, file: !141, line: 469, baseType: !232, size: 16, offset: 4064)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2235, file: !141, line: 469, baseType: !232, size: 16, offset: 4080)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2235, file: !141, line: 474, baseType: !232, size: 16, offset: 4096)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2235, file: !141, line: 475, baseType: !214, size: 8, offset: 4112)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2235, file: !141, line: 476, baseType: !214, size: 8, offset: 4120)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2235, file: !141, line: 481, baseType: !142, size: 32, offset: 4128)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2235, file: !141, line: 486, baseType: !142, size: 32, offset: 4160)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2235, file: !141, line: 491, baseType: !142, size: 32, offset: 4192)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2235, file: !141, line: 496, baseType: !232, size: 16, offset: 4224)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2235, file: !141, line: 498, baseType: !232, size: 16, offset: 4240)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2235, file: !141, line: 501, baseType: !232, size: 16, offset: 4256)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2235, file: !141, line: 502, baseType: !232, size: 16, offset: 4272)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2235, file: !141, line: 508, baseType: !232, size: 16, offset: 4288)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2235, file: !141, line: 513, baseType: !232, size: 16, offset: 4304)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2235, file: !141, line: 515, baseType: !232, size: 16, offset: 4320)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2235, file: !141, line: 515, baseType: !232, size: 16, offset: 4336)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2235, file: !141, line: 519, baseType: !1094, size: 128, offset: 4352)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2235, file: !141, line: 519, baseType: !1094, size: 128, offset: 4480)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2235, file: !141, line: 520, baseType: !296, size: 128, offset: 4608)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2235, file: !141, line: 523, baseType: !258, size: 128, offset: 4736)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2235, file: !141, line: 524, baseType: !232, size: 16, offset: 4864)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2235, file: !141, line: 527, baseType: !232, size: 16, offset: 4880)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2235, file: !141, line: 532, baseType: !185, size: 32, offset: 4896)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2235, file: !141, line: 532, baseType: !185, size: 32, offset: 4928)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2235, file: !141, line: 534, baseType: !185, size: 32, offset: 4960)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2235, file: !141, line: 538, baseType: !185, size: 32, offset: 4992)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2235, file: !141, line: 542, baseType: !142, size: 32, offset: 5024)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2235, file: !141, line: 545, baseType: !185, size: 32, offset: 5056)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2235, file: !141, line: 545, baseType: !185, size: 32, offset: 5088)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2235, file: !141, line: 545, baseType: !185, size: 32, offset: 5120)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2235, file: !141, line: 548, baseType: !185, size: 32, offset: 5152)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2235, file: !141, line: 551, baseType: !232, size: 16, offset: 5184)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2235, file: !141, line: 551, baseType: !232, size: 16, offset: 5200)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2235, file: !141, line: 551, baseType: !232, size: 16, offset: 5216)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2235, file: !141, line: 551, baseType: !232, size: 16, offset: 5232)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2235, file: !141, line: 552, baseType: !232, size: 16, offset: 5248)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2235, file: !141, line: 552, baseType: !232, size: 16, offset: 5264)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2235, file: !141, line: 553, baseType: !185, size: 32, offset: 5280)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2235, file: !141, line: 553, baseType: !185, size: 32, offset: 5312)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2235, file: !141, line: 554, baseType: !232, size: 16, offset: 5344)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2235, file: !141, line: 554, baseType: !232, size: 16, offset: 5360)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2235, file: !141, line: 555, baseType: !185, size: 32, offset: 5376)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2235, file: !141, line: 555, baseType: !185, size: 32, offset: 5408)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2235, file: !141, line: 558, baseType: !213, size: 8192, offset: 5440)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2235, file: !141, line: 561, baseType: !142, size: 32, offset: 13632)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2235, file: !141, line: 562, baseType: !232, size: 16, offset: 13664)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2235, file: !141, line: 562, baseType: !232, size: 16, offset: 13680)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2235, file: !141, line: 565, baseType: !1572, size: 6144, offset: 13696)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2235, file: !141, line: 568, baseType: !452, size: 128, offset: 19840)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2235, file: !141, line: 569, baseType: !452, size: 128, offset: 19968)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2235, file: !141, line: 572, baseType: !214, size: 8, offset: 20096)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2235, file: !141, line: 573, baseType: !214, size: 8, offset: 20104)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2235, file: !141, line: 574, baseType: !214, size: 8, offset: 20112)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2235, file: !141, line: 575, baseType: !2084, size: 40, offset: 20120)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2235, file: !141, line: 578, baseType: !142, size: 32, offset: 20160)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2235, file: !141, line: 579, baseType: !232, size: 16, offset: 20192)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2235, file: !141, line: 580, baseType: !232, size: 16, offset: 20208)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2235, file: !141, line: 581, baseType: !185, size: 32, offset: 20224)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2235, file: !141, line: 582, baseType: !185, size: 32, offset: 20256)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2235, file: !141, line: 585, baseType: !232, size: 16, offset: 20288)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2235, file: !141, line: 585, baseType: !232, size: 16, offset: 20304)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2235, file: !141, line: 586, baseType: !185, size: 32, offset: 20320)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2235, file: !141, line: 589, baseType: !232, size: 16, offset: 20352)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2235, file: !141, line: 589, baseType: !232, size: 16, offset: 20368)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2235, file: !141, line: 590, baseType: !142, size: 32, offset: 20384)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2235, file: !141, line: 593, baseType: !232, size: 16, offset: 20416)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2235, file: !141, line: 593, baseType: !232, size: 16, offset: 20432)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2235, file: !141, line: 594, baseType: !232, size: 16, offset: 20448)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2235, file: !141, line: 594, baseType: !232, size: 16, offset: 20464)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2235, file: !141, line: 595, baseType: !185, size: 32, offset: 20480)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2235, file: !141, line: 596, baseType: !185, size: 32, offset: 20512)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2235, file: !141, line: 597, baseType: !2451, size: 64, offset: 20544)
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64)
!2452 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !717, line: 44, flags: DIFlagFwdDecl)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2235, file: !141, line: 600, baseType: !142, size: 32, offset: 20608)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2235, file: !141, line: 601, baseType: !185, size: 32, offset: 20640)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2235, file: !141, line: 604, baseType: !2456, size: 256, offset: 20672)
!2456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 256, elements: !483)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2235, file: !141, line: 607, baseType: !2458, size: 10880, offset: 20928)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !141, line: 364, size: 10880, elements: !2459)
!2459 = !{!2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2458, file: !141, line: 365, baseType: !2238, size: 1984)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2458, file: !141, line: 367, baseType: !213, size: 8192, offset: 1984)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2458, file: !141, line: 369, baseType: !232, size: 16, offset: 10176)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2458, file: !141, line: 369, baseType: !232, size: 16, offset: 10192)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2458, file: !141, line: 370, baseType: !232, size: 16, offset: 10208)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2458, file: !141, line: 370, baseType: !232, size: 16, offset: 10224)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2458, file: !141, line: 372, baseType: !185, size: 32, offset: 10240)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2458, file: !141, line: 373, baseType: !185, size: 32, offset: 10272)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2458, file: !141, line: 375, baseType: !1851, size: 24, offset: 10304)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2458, file: !141, line: 376, baseType: !214, size: 8, offset: 10328)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2458, file: !141, line: 378, baseType: !214, size: 8, offset: 10336)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2458, file: !141, line: 379, baseType: !1851, size: 24, offset: 10344)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2458, file: !141, line: 381, baseType: !248, size: 512, offset: 10368)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2235, file: !141, line: 609, baseType: !142, size: 32, offset: 31808)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2235, file: !141, line: 610, baseType: !142, size: 32, offset: 31840)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !761, file: !141, line: 1252, baseType: !2476, size: 256, offset: 34112)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !141, line: 158, size: 256, elements: !2477)
!2477 = !{!2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2476, file: !141, line: 159, baseType: !142, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2476, file: !141, line: 160, baseType: !185, size: 32, offset: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2476, file: !141, line: 161, baseType: !185, size: 32, offset: 64)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2476, file: !141, line: 162, baseType: !185, size: 32, offset: 96)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2476, file: !141, line: 163, baseType: !142, size: 32, offset: 128)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2476, file: !141, line: 164, baseType: !232, size: 16, offset: 160)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2476, file: !141, line: 165, baseType: !232, size: 16, offset: 176)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2476, file: !141, line: 166, baseType: !185, size: 32, offset: 192)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2476, file: !141, line: 167, baseType: !185, size: 32, offset: 224)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !761, file: !141, line: 1254, baseType: !258, size: 128, offset: 34368)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !761, file: !141, line: 1255, baseType: !258, size: 128, offset: 34496)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !761, file: !141, line: 1257, baseType: !177, size: 64, offset: 34624)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !761, file: !141, line: 1258, baseType: !177, size: 64, offset: 34688)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !761, file: !141, line: 1259, baseType: !177, size: 64, offset: 34752)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !761, file: !141, line: 1260, baseType: !177, size: 64, offset: 34816)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !761, file: !141, line: 1262, baseType: !177, size: 64, offset: 34880)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !761, file: !141, line: 1265, baseType: !2495, size: 64, offset: 34944)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 64)
!2496 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !141, line: 1265, flags: DIFlagFwdDecl)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !761, file: !141, line: 1266, baseType: !232, size: 16, offset: 35008)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !761, file: !141, line: 1267, baseType: !232, size: 16, offset: 35024)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !761, file: !141, line: 1270, baseType: !142, size: 32, offset: 35040)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !761, file: !141, line: 1271, baseType: !258, size: 128, offset: 35072)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !761, file: !141, line: 1274, baseType: !2502, size: 128, offset: 35200)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !141, line: 650, size: 128, elements: !2503)
!2503 = !{!2504, !2505, !2506, !2507, !2508}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2502, file: !141, line: 651, baseType: !370, size: 96)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2502, file: !141, line: 652, baseType: !214, size: 8, offset: 96)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2502, file: !141, line: 652, baseType: !214, size: 8, offset: 104)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2502, file: !141, line: 652, baseType: !214, size: 8, offset: 112)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2502, file: !141, line: 652, baseType: !214, size: 8, offset: 120)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !761, file: !141, line: 1275, baseType: !2510, size: 1472, offset: 35328)
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !141, line: 676, size: 1472, elements: !2511)
!2511 = !{!2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2524, !2534, !2535, !2536, !2537, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2510, file: !141, line: 679, baseType: !2502, size: 128)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2510, file: !141, line: 680, baseType: !232, size: 16, offset: 128)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2510, file: !141, line: 680, baseType: !232, size: 16, offset: 144)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2510, file: !141, line: 680, baseType: !232, size: 16, offset: 160)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2510, file: !141, line: 680, baseType: !232, size: 16, offset: 176)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2510, file: !141, line: 681, baseType: !232, size: 16, offset: 192)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2510, file: !141, line: 681, baseType: !232, size: 16, offset: 208)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2510, file: !141, line: 681, baseType: !232, size: 16, offset: 224)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2510, file: !141, line: 681, baseType: !232, size: 16, offset: 240)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2510, file: !141, line: 682, baseType: !232, size: 16, offset: 256)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2510, file: !141, line: 682, baseType: !2523, size: 48, offset: 272)
!2523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !232, size: 48, elements: !371)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2510, file: !141, line: 685, baseType: !2525, size: 192, offset: 320)
!2525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !141, line: 633, size: 192, elements: !2526)
!2526 = !{!2527, !2528, !2529, !2530, !2531, !2532, !2533}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2525, file: !141, line: 634, baseType: !232, size: 16)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2525, file: !141, line: 634, baseType: !232, size: 16, offset: 16)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2525, file: !141, line: 635, baseType: !232, size: 16, offset: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2525, file: !141, line: 635, baseType: !232, size: 16, offset: 48)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2525, file: !141, line: 636, baseType: !185, size: 32, offset: 64)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2525, file: !141, line: 636, baseType: !185, size: 32, offset: 96)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2525, file: !141, line: 637, baseType: !2451, size: 64, offset: 128)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2510, file: !141, line: 686, baseType: !232, size: 16, offset: 512)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2510, file: !141, line: 686, baseType: !232, size: 16, offset: 528)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2510, file: !141, line: 687, baseType: !185, size: 32, offset: 544)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2510, file: !141, line: 688, baseType: !2538, size: 448, offset: 576)
!2538 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !141, line: 674, baseType: !2539)
!2539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !141, line: 659, size: 448, elements: !2540)
!2540 = !{!2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2539, file: !141, line: 660, baseType: !185, size: 32)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2539, file: !141, line: 661, baseType: !185, size: 32, offset: 32)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2539, file: !141, line: 662, baseType: !185, size: 32, offset: 64)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2539, file: !141, line: 663, baseType: !185, size: 32, offset: 96)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2539, file: !141, line: 664, baseType: !185, size: 32, offset: 128)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2539, file: !141, line: 665, baseType: !185, size: 32, offset: 160)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2539, file: !141, line: 666, baseType: !185, size: 32, offset: 192)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2539, file: !141, line: 667, baseType: !185, size: 32, offset: 224)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2539, file: !141, line: 668, baseType: !185, size: 32, offset: 256)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2539, file: !141, line: 669, baseType: !185, size: 32, offset: 288)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2539, file: !141, line: 670, baseType: !142, size: 32, offset: 320)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2539, file: !141, line: 671, baseType: !185, size: 32, offset: 352)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2539, file: !141, line: 672, baseType: !185, size: 32, offset: 384)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2539, file: !141, line: 673, baseType: !232, size: 16, offset: 416)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2539, file: !141, line: 673, baseType: !232, size: 16, offset: 432)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2510, file: !141, line: 692, baseType: !185, size: 32, offset: 1024)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2510, file: !141, line: 697, baseType: !185, size: 32, offset: 1056)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2510, file: !141, line: 703, baseType: !142, size: 32, offset: 1088)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2510, file: !141, line: 704, baseType: !232, size: 16, offset: 1120)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2510, file: !141, line: 704, baseType: !232, size: 16, offset: 1136)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2510, file: !141, line: 705, baseType: !232, size: 16, offset: 1152)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2510, file: !141, line: 706, baseType: !232, size: 16, offset: 1168)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2510, file: !141, line: 707, baseType: !232, size: 16, offset: 1184)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2510, file: !141, line: 708, baseType: !232, size: 16, offset: 1200)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2510, file: !141, line: 709, baseType: !232, size: 16, offset: 1216)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2510, file: !141, line: 709, baseType: !232, size: 16, offset: 1232)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2510, file: !141, line: 709, baseType: !232, size: 16, offset: 1248)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2510, file: !141, line: 709, baseType: !232, size: 16, offset: 1264)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2510, file: !141, line: 710, baseType: !232, size: 16, offset: 1280)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2510, file: !141, line: 711, baseType: !232, size: 16, offset: 1296)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2510, file: !141, line: 712, baseType: !185, size: 32, offset: 1312)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2510, file: !141, line: 713, baseType: !185, size: 32, offset: 1344)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2510, file: !141, line: 713, baseType: !185, size: 32, offset: 1376)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2510, file: !141, line: 713, baseType: !185, size: 32, offset: 1408)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2510, file: !141, line: 713, baseType: !185, size: 32, offset: 1440)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !761, file: !141, line: 1278, baseType: !2577, size: 64, offset: 36800)
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !141, line: 1197, size: 64, elements: !2578)
!2578 = !{!2579, !2580, !2581, !2582}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2577, file: !141, line: 1199, baseType: !185, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2577, file: !141, line: 1200, baseType: !214, size: 8, offset: 32)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2577, file: !141, line: 1201, baseType: !214, size: 8, offset: 40)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2577, file: !141, line: 1202, baseType: !232, size: 16, offset: 48)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !761, file: !141, line: 1281, baseType: !595, size: 64, offset: 36864)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !761, file: !141, line: 1284, baseType: !2585, size: 192, offset: 36928)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !141, line: 1208, size: 192, elements: !2586)
!2586 = !{!2587, !2588, !2589, !2590}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2585, file: !141, line: 1209, baseType: !370, size: 96)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2585, file: !141, line: 1210, baseType: !142, size: 32, offset: 96)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2585, file: !141, line: 1210, baseType: !142, size: 32, offset: 128)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2585, file: !141, line: 1210, baseType: !142, size: 32, offset: 160)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !761, file: !141, line: 1287, baseType: !1623, size: 64, offset: 37120)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !761, file: !141, line: 1289, baseType: !733, size: 64, offset: 37184)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !761, file: !141, line: 1290, baseType: !733, size: 64, offset: 37248)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !761, file: !141, line: 1293, baseType: !2258, size: 1280, offset: 37312)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !761, file: !141, line: 1294, baseType: !2270, size: 512, offset: 38592)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !761, file: !141, line: 1295, baseType: !1614, size: 512, offset: 39104)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !761, file: !141, line: 1298, baseType: !2598, size: 64, offset: 39616)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 64)
!2599 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !141, line: 1298, flags: DIFlagFwdDecl)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !757, file: !51, line: 53, baseType: !142, size: 32, offset: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !757, file: !51, line: 54, baseType: !142, size: 32, offset: 96)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !757, file: !51, line: 55, baseType: !142, size: 32, offset: 128)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !757, file: !51, line: 55, baseType: !142, size: 32, offset: 160)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !757, file: !51, line: 56, baseType: !214, size: 8, offset: 192)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !757, file: !51, line: 56, baseType: !214, size: 8, offset: 200)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !757, file: !51, line: 57, baseType: !214, size: 8, offset: 208)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !757, file: !51, line: 57, baseType: !214, size: 8, offset: 216)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !757, file: !51, line: 59, baseType: !232, size: 16, offset: 224)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !757, file: !51, line: 59, baseType: !232, size: 16, offset: 240)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !757, file: !51, line: 59, baseType: !232, size: 16, offset: 256)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !757, file: !51, line: 61, baseType: !232, size: 16, offset: 272)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !757, file: !51, line: 63, baseType: !142, size: 32, offset: 288)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !505, file: !127, line: 293, baseType: !258, size: 128, offset: 11200)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !505, file: !127, line: 294, baseType: !2615, size: 64, offset: 11328)
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 64)
!2616 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !127, line: 113, baseType: !2617)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !127, line: 108, size: 256, elements: !2618)
!2618 = !{!2619, !2621, !2622, !2623, !2624}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2617, file: !127, line: 109, baseType: !2620, size: 64)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 64)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2617, file: !127, line: 109, baseType: !2620, size: 64, offset: 64)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2617, file: !127, line: 110, baseType: !504, size: 64, offset: 128)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2617, file: !127, line: 111, baseType: !142, size: 32, offset: 192)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !2617, file: !127, line: 112, baseType: !185, size: 32, offset: 224)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !497, file: !461, line: 61, baseType: !2626, size: 64, offset: 128)
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 64)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !461, line: 202, size: 3328, elements: !2628)
!2628 = !{!2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2707, !2708, !2737, !2757, !2765, !2766}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2627, file: !461, line: 203, baseType: !194, size: 960)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2627, file: !461, line: 204, baseType: !335, size: 64, offset: 960)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !2627, file: !461, line: 206, baseType: !185, size: 32, offset: 1024)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !2627, file: !461, line: 206, baseType: !185, size: 32, offset: 1056)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !2627, file: !461, line: 207, baseType: !185, size: 32, offset: 1088)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !2627, file: !461, line: 207, baseType: !185, size: 32, offset: 1120)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !2627, file: !461, line: 207, baseType: !185, size: 32, offset: 1152)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !2627, file: !461, line: 207, baseType: !185, size: 32, offset: 1184)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !2627, file: !461, line: 207, baseType: !185, size: 32, offset: 1216)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !2627, file: !461, line: 207, baseType: !185, size: 32, offset: 1248)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !2627, file: !461, line: 208, baseType: !185, size: 32, offset: 1280)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2627, file: !461, line: 208, baseType: !185, size: 32, offset: 1312)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !2627, file: !461, line: 211, baseType: !185, size: 32, offset: 1344)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !2627, file: !461, line: 211, baseType: !185, size: 32, offset: 1376)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !2627, file: !461, line: 211, baseType: !185, size: 32, offset: 1408)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !2627, file: !461, line: 211, baseType: !185, size: 32, offset: 1440)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !2627, file: !461, line: 211, baseType: !185, size: 32, offset: 1472)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !2627, file: !461, line: 214, baseType: !185, size: 32, offset: 1504)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !2627, file: !461, line: 214, baseType: !185, size: 32, offset: 1536)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !2627, file: !461, line: 217, baseType: !185, size: 32, offset: 1568)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !2627, file: !461, line: 218, baseType: !185, size: 32, offset: 1600)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !2627, file: !461, line: 219, baseType: !185, size: 32, offset: 1632)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !2627, file: !461, line: 220, baseType: !185, size: 32, offset: 1664)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !2627, file: !461, line: 221, baseType: !185, size: 32, offset: 1696)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !2627, file: !461, line: 222, baseType: !232, size: 16, offset: 1728)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !2627, file: !461, line: 222, baseType: !232, size: 16, offset: 1744)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !2627, file: !461, line: 224, baseType: !232, size: 16, offset: 1760)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !2627, file: !461, line: 224, baseType: !232, size: 16, offset: 1776)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !2627, file: !461, line: 227, baseType: !232, size: 16, offset: 1792)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !2627, file: !461, line: 227, baseType: !232, size: 16, offset: 1808)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !2627, file: !461, line: 229, baseType: !232, size: 16, offset: 1824)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2627, file: !461, line: 229, baseType: !232, size: 16, offset: 1840)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2627, file: !461, line: 230, baseType: !232, size: 16, offset: 1856)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !2627, file: !461, line: 230, baseType: !232, size: 16, offset: 1872)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !2627, file: !461, line: 232, baseType: !185, size: 32, offset: 1888)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !2627, file: !461, line: 232, baseType: !185, size: 32, offset: 1920)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !2627, file: !461, line: 232, baseType: !185, size: 32, offset: 1952)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !2627, file: !461, line: 232, baseType: !185, size: 32, offset: 1984)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !2627, file: !461, line: 233, baseType: !142, size: 32, offset: 2016)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !2627, file: !461, line: 234, baseType: !142, size: 32, offset: 2048)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !2627, file: !461, line: 235, baseType: !232, size: 16, offset: 2080)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !2627, file: !461, line: 235, baseType: !232, size: 16, offset: 2096)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !2627, file: !461, line: 236, baseType: !232, size: 16, offset: 2112)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !2627, file: !461, line: 239, baseType: !232, size: 16, offset: 2128)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2627, file: !461, line: 240, baseType: !142, size: 32, offset: 2144)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2627, file: !461, line: 241, baseType: !142, size: 32, offset: 2176)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2627, file: !461, line: 241, baseType: !142, size: 32, offset: 2208)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2627, file: !461, line: 241, baseType: !142, size: 32, offset: 2240)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !2627, file: !461, line: 243, baseType: !185, size: 32, offset: 2272)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !2627, file: !461, line: 243, baseType: !185, size: 32, offset: 2304)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2627, file: !461, line: 244, baseType: !185, size: 32, offset: 2336)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !2627, file: !461, line: 246, baseType: !757, size: 320, offset: 2368)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2627, file: !461, line: 248, baseType: !861, size: 64, offset: 2688)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2627, file: !461, line: 249, baseType: !524, size: 64, offset: 2752)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2627, file: !461, line: 250, baseType: !190, size: 64, offset: 2816)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !2627, file: !461, line: 251, baseType: !459, size: 64, offset: 2880)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !2627, file: !461, line: 252, baseType: !2686, size: 64, offset: 2944)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 64)
!2687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !461, line: 122, size: 1600, elements: !2688)
!2688 = !{!2689, !2690, !2691, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2687, file: !461, line: 123, baseType: !504, size: 64)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2687, file: !461, line: 124, baseType: !190, size: 64, offset: 64)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !2687, file: !461, line: 125, baseType: !2692, size: 384, offset: 128)
!2692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1222, size: 384, elements: !2255)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2687, file: !461, line: 126, baseType: !641, size: 512, offset: 512)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !2687, file: !461, line: 127, baseType: !1949, size: 288, offset: 1024)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2687, file: !461, line: 128, baseType: !232, size: 16, offset: 1312)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !2687, file: !461, line: 128, baseType: !232, size: 16, offset: 1328)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !2687, file: !461, line: 129, baseType: !185, size: 32, offset: 1344)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !2687, file: !461, line: 129, baseType: !185, size: 32, offset: 1376)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !2687, file: !461, line: 130, baseType: !185, size: 32, offset: 1408)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !2687, file: !461, line: 131, baseType: !7, size: 32, offset: 1440)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !2687, file: !461, line: 132, baseType: !232, size: 16, offset: 1472)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2687, file: !461, line: 132, baseType: !232, size: 16, offset: 1488)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2687, file: !461, line: 133, baseType: !142, size: 32, offset: 1504)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2687, file: !461, line: 133, baseType: !142, size: 32, offset: 1536)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2687, file: !461, line: 134, baseType: !232, size: 16, offset: 1568)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !2687, file: !461, line: 134, baseType: !232, size: 16, offset: 1584)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2627, file: !461, line: 253, baseType: !847, size: 64, offset: 3008)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !2627, file: !461, line: 254, baseType: !2709, size: 64, offset: 3072)
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 64)
!2710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !461, line: 137, size: 832, elements: !2711)
!2711 = !{!2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2710, file: !461, line: 138, baseType: !232, size: 16)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !2710, file: !461, line: 140, baseType: !232, size: 16, offset: 16)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !2710, file: !461, line: 141, baseType: !185, size: 32, offset: 32)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2710, file: !461, line: 142, baseType: !185, size: 32, offset: 64)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2710, file: !461, line: 143, baseType: !232, size: 16, offset: 96)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !2710, file: !461, line: 144, baseType: !232, size: 16, offset: 112)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !2710, file: !461, line: 145, baseType: !142, size: 32, offset: 128)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !2710, file: !461, line: 147, baseType: !142, size: 32, offset: 160)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2710, file: !461, line: 149, baseType: !504, size: 64, offset: 192)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !2710, file: !461, line: 150, baseType: !142, size: 32, offset: 256)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !2710, file: !461, line: 151, baseType: !232, size: 16, offset: 288)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !2710, file: !461, line: 152, baseType: !232, size: 16, offset: 304)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !2710, file: !461, line: 154, baseType: !177, size: 64, offset: 320)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !2710, file: !461, line: 155, baseType: !293, size: 64, offset: 384)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !2710, file: !461, line: 157, baseType: !185, size: 32, offset: 448)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !2710, file: !461, line: 158, baseType: !232, size: 16, offset: 480)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !2710, file: !461, line: 159, baseType: !232, size: 16, offset: 496)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !2710, file: !461, line: 160, baseType: !232, size: 16, offset: 512)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !2710, file: !461, line: 161, baseType: !2523, size: 48, offset: 528)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !2710, file: !461, line: 162, baseType: !185, size: 32, offset: 576)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !2710, file: !461, line: 164, baseType: !185, size: 32, offset: 608)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !2710, file: !461, line: 164, baseType: !185, size: 32, offset: 640)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !2710, file: !461, line: 164, baseType: !185, size: 32, offset: 672)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !2710, file: !461, line: 165, baseType: !459, size: 64, offset: 704)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !2710, file: !461, line: 167, baseType: !1887, size: 64, offset: 768)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !2627, file: !461, line: 255, baseType: !2738, size: 64, offset: 3136)
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 64)
!2739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !461, line: 170, size: 8704, elements: !2740)
!2740 = !{!2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !2739, file: !461, line: 171, baseType: !2058, size: 96)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !2739, file: !461, line: 172, baseType: !142, size: 32, offset: 96)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !2739, file: !461, line: 173, baseType: !232, size: 16, offset: 128)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2739, file: !461, line: 174, baseType: !232, size: 16, offset: 144)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !2739, file: !461, line: 175, baseType: !232, size: 16, offset: 160)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !2739, file: !461, line: 176, baseType: !232, size: 16, offset: 176)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !2739, file: !461, line: 177, baseType: !232, size: 16, offset: 192)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2739, file: !461, line: 178, baseType: !232, size: 16, offset: 208)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !2739, file: !461, line: 179, baseType: !142, size: 32, offset: 224)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2739, file: !461, line: 181, baseType: !504, size: 64, offset: 256)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !2739, file: !461, line: 182, baseType: !185, size: 32, offset: 320)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !2739, file: !461, line: 183, baseType: !142, size: 32, offset: 352)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !2739, file: !461, line: 184, baseType: !213, size: 8192, offset: 384)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !2739, file: !461, line: 187, baseType: !293, size: 64, offset: 8576)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !2739, file: !461, line: 188, baseType: !142, size: 32, offset: 8640)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2739, file: !461, line: 189, baseType: !142, size: 32, offset: 8672)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !2627, file: !461, line: 256, baseType: !2758, size: 64, offset: 3200)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !461, line: 193, size: 640, elements: !2760)
!2760 = !{!2761, !2762, !2763, !2764}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2759, file: !461, line: 194, baseType: !504, size: 64)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !2759, file: !461, line: 195, baseType: !248, size: 512, offset: 64)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2759, file: !461, line: 197, baseType: !142, size: 32, offset: 576)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2759, file: !461, line: 198, baseType: !142, size: 32, offset: 608)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !2627, file: !461, line: 258, baseType: !214, size: 8, offset: 3264)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2627, file: !461, line: 259, baseType: !2203, size: 56, offset: 3272)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !497, file: !461, line: 62, baseType: !248, size: 512, offset: 192)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !497, file: !461, line: 64, baseType: !214, size: 8, offset: 704)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !497, file: !461, line: 64, baseType: !214, size: 8, offset: 712)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !497, file: !461, line: 64, baseType: !214, size: 8, offset: 720)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !497, file: !461, line: 64, baseType: !214, size: 8, offset: 728)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !497, file: !461, line: 65, baseType: !370, size: 96, offset: 736)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !497, file: !461, line: 65, baseType: !370, size: 96, offset: 832)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !497, file: !461, line: 65, baseType: !185, size: 32, offset: 928)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !497, file: !461, line: 67, baseType: !232, size: 16, offset: 960)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !497, file: !461, line: 67, baseType: !232, size: 16, offset: 976)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !497, file: !461, line: 67, baseType: !232, size: 16, offset: 992)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !497, file: !461, line: 67, baseType: !232, size: 16, offset: 1008)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !497, file: !461, line: 68, baseType: !232, size: 16, offset: 1024)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !497, file: !461, line: 68, baseType: !232, size: 16, offset: 1040)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !497, file: !461, line: 69, baseType: !214, size: 8, offset: 1056)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !497, file: !461, line: 69, baseType: !2203, size: 56, offset: 1064)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !497, file: !461, line: 70, baseType: !185, size: 32, offset: 1120)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !497, file: !461, line: 70, baseType: !185, size: 32, offset: 1152)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !497, file: !461, line: 70, baseType: !185, size: 32, offset: 1184)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !497, file: !461, line: 70, baseType: !185, size: 32, offset: 1216)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !497, file: !461, line: 71, baseType: !185, size: 32, offset: 1248)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !497, file: !461, line: 71, baseType: !185, size: 32, offset: 1280)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !497, file: !461, line: 74, baseType: !185, size: 32, offset: 1312)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !497, file: !461, line: 74, baseType: !185, size: 32, offset: 1344)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !497, file: !461, line: 77, baseType: !185, size: 32, offset: 1376)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !497, file: !461, line: 77, baseType: !185, size: 32, offset: 1408)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !497, file: !461, line: 77, baseType: !185, size: 32, offset: 1440)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !497, file: !461, line: 78, baseType: !185, size: 32, offset: 1472)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !497, file: !461, line: 78, baseType: !185, size: 32, offset: 1504)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !497, file: !461, line: 78, baseType: !185, size: 32, offset: 1536)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !497, file: !461, line: 79, baseType: !185, size: 32, offset: 1568)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !497, file: !461, line: 79, baseType: !185, size: 32, offset: 1600)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !497, file: !461, line: 79, baseType: !185, size: 32, offset: 1632)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !497, file: !461, line: 79, baseType: !185, size: 32, offset: 1664)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !497, file: !461, line: 80, baseType: !185, size: 32, offset: 1696)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !497, file: !461, line: 80, baseType: !185, size: 32, offset: 1728)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !497, file: !461, line: 80, baseType: !185, size: 32, offset: 1760)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !497, file: !461, line: 81, baseType: !185, size: 32, offset: 1792)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !497, file: !461, line: 81, baseType: !185, size: 32, offset: 1824)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !497, file: !461, line: 81, baseType: !185, size: 32, offset: 1856)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !497, file: !461, line: 82, baseType: !185, size: 32, offset: 1888)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !497, file: !461, line: 82, baseType: !185, size: 32, offset: 1920)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !497, file: !461, line: 82, baseType: !185, size: 32, offset: 1952)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !497, file: !461, line: 85, baseType: !185, size: 32, offset: 1984)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !497, file: !461, line: 85, baseType: !185, size: 32, offset: 2016)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !497, file: !461, line: 85, baseType: !185, size: 32, offset: 2048)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !497, file: !461, line: 85, baseType: !185, size: 32, offset: 2080)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !497, file: !461, line: 86, baseType: !185, size: 32, offset: 2112)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !497, file: !461, line: 86, baseType: !185, size: 32, offset: 2144)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !497, file: !461, line: 86, baseType: !185, size: 32, offset: 2176)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !497, file: !461, line: 86, baseType: !185, size: 32, offset: 2208)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !497, file: !461, line: 87, baseType: !185, size: 32, offset: 2240)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !497, file: !461, line: 87, baseType: !185, size: 32, offset: 2272)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !497, file: !461, line: 87, baseType: !185, size: 32, offset: 2304)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !497, file: !461, line: 87, baseType: !185, size: 32, offset: 2336)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !497, file: !461, line: 90, baseType: !185, size: 32, offset: 2368)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !497, file: !461, line: 93, baseType: !185, size: 32, offset: 2400)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !497, file: !461, line: 93, baseType: !185, size: 32, offset: 2432)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !497, file: !461, line: 93, baseType: !185, size: 32, offset: 2464)
!2826 = !{!2827}
!2827 = !DISubrange(count: 18)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !330, file: !331, line: 168, baseType: !861, size: 64, offset: 6144)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !330, file: !331, line: 169, baseType: !524, size: 64, offset: 6208)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !330, file: !331, line: 170, baseType: !715, size: 64, offset: 6272)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !330, file: !331, line: 171, baseType: !847, size: 64, offset: 6336)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !330, file: !331, line: 174, baseType: !185, size: 32, offset: 6400)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !330, file: !331, line: 174, baseType: !185, size: 32, offset: 6432)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !330, file: !331, line: 174, baseType: !185, size: 32, offset: 6464)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !330, file: !331, line: 175, baseType: !185, size: 32, offset: 6496)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !330, file: !331, line: 175, baseType: !185, size: 32, offset: 6528)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !330, file: !331, line: 176, baseType: !232, size: 16, offset: 6560)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !330, file: !331, line: 176, baseType: !232, size: 16, offset: 6576)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !330, file: !331, line: 179, baseType: !370, size: 96, offset: 6592)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !330, file: !331, line: 179, baseType: !370, size: 96, offset: 6688)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !330, file: !331, line: 180, baseType: !185, size: 32, offset: 6784)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !330, file: !331, line: 180, baseType: !185, size: 32, offset: 6816)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !330, file: !331, line: 180, baseType: !185, size: 32, offset: 6848)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !330, file: !331, line: 181, baseType: !185, size: 32, offset: 6880)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !330, file: !331, line: 181, baseType: !185, size: 32, offset: 6912)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !330, file: !331, line: 182, baseType: !185, size: 32, offset: 6944)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !330, file: !331, line: 182, baseType: !185, size: 32, offset: 6976)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !330, file: !331, line: 183, baseType: !232, size: 16, offset: 7008)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !330, file: !331, line: 183, baseType: !232, size: 16, offset: 7024)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !330, file: !331, line: 185, baseType: !142, size: 32, offset: 7040)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !330, file: !331, line: 186, baseType: !232, size: 16, offset: 7072)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !330, file: !331, line: 187, baseType: !232, size: 16, offset: 7088)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !330, file: !331, line: 190, baseType: !452, size: 128, offset: 7104)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !330, file: !331, line: 191, baseType: !232, size: 16, offset: 7232)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !330, file: !331, line: 192, baseType: !232, size: 16, offset: 7248)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !330, file: !331, line: 195, baseType: !232, size: 16, offset: 7264)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !330, file: !331, line: 196, baseType: !232, size: 16, offset: 7280)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !330, file: !331, line: 197, baseType: !232, size: 16, offset: 7296)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !330, file: !331, line: 198, baseType: !2523, size: 48, offset: 7312)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !330, file: !331, line: 200, baseType: !2861, size: 64, offset: 7360)
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 64)
!2862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !331, line: 86, size: 192, elements: !2863)
!2863 = !{!2864, !2865, !2866, !2867}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2862, file: !331, line: 87, baseType: !190, size: 64)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !2862, file: !331, line: 88, baseType: !623, size: 64, offset: 64)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2862, file: !331, line: 89, baseType: !142, size: 32, offset: 128)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2862, file: !331, line: 90, baseType: !142, size: 32, offset: 160)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !330, file: !331, line: 202, baseType: !258, size: 128, offset: 7424)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !313, file: !282, line: 94, baseType: !715, size: 64, offset: 1024)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !313, file: !282, line: 96, baseType: !293, size: 64, offset: 1088)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "acolrect", scope: !313, file: !282, line: 97, baseType: !293, size: 64, offset: 1152)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "scolrect", scope: !313, file: !282, line: 98, baseType: !293, size: 64, offset: 1216)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer", scope: !313, file: !282, line: 99, baseType: !291, size: 64, offset: 1280)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !313, file: !282, line: 101, baseType: !142, size: 32, offset: 1344)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !313, file: !282, line: 101, baseType: !142, size: 32, offset: 1376)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "exrhandle", scope: !313, file: !282, line: 104, baseType: !177, size: 64, offset: 1408)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "passes", scope: !313, file: !282, line: 106, baseType: !258, size: 128, offset: 1472)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "do_exr_tile", scope: !281, file: !282, line: 137, baseType: !142, size: 32, offset: 960)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !281, file: !282, line: 140, baseType: !142, size: 32, offset: 992)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "have_combined", scope: !281, file: !282, line: 143, baseType: !142, size: 32, offset: 1024)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !281, file: !282, line: 146, baseType: !623, size: 64, offset: 1088)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !191, file: !51, line: 89, baseType: !2883, size: 512, offset: 9408)
!2883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !280, size: 512, elements: !1176)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !191, file: !51, line: 90, baseType: !232, size: 16, offset: 9920)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !191, file: !51, line: 90, baseType: !232, size: 16, offset: 9936)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !191, file: !51, line: 92, baseType: !232, size: 16, offset: 9952)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !191, file: !51, line: 92, baseType: !232, size: 16, offset: 9968)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !191, file: !51, line: 93, baseType: !232, size: 16, offset: 9984)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !191, file: !51, line: 93, baseType: !232, size: 16, offset: 10000)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !191, file: !51, line: 94, baseType: !142, size: 32, offset: 10016)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !191, file: !51, line: 97, baseType: !232, size: 16, offset: 10048)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !191, file: !51, line: 97, baseType: !232, size: 16, offset: 10064)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !191, file: !51, line: 98, baseType: !232, size: 16, offset: 10080)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !191, file: !51, line: 98, baseType: !232, size: 16, offset: 10096)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !191, file: !51, line: 99, baseType: !232, size: 16, offset: 10112)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !191, file: !51, line: 99, baseType: !232, size: 16, offset: 10128)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !191, file: !51, line: 100, baseType: !7, size: 32, offset: 10144)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !191, file: !51, line: 101, baseType: !857, size: 64, offset: 10176)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !191, file: !51, line: 103, baseType: !220, size: 64, offset: 10240)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !191, file: !51, line: 104, baseType: !847, size: 64, offset: 10304)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !191, file: !51, line: 107, baseType: !185, size: 32, offset: 10368)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !191, file: !51, line: 108, baseType: !142, size: 32, offset: 10400)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !191, file: !51, line: 109, baseType: !232, size: 16, offset: 10432)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !191, file: !51, line: 110, baseType: !232, size: 16, offset: 10448)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !191, file: !51, line: 113, baseType: !142, size: 32, offset: 10464)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !191, file: !51, line: 113, baseType: !142, size: 32, offset: 10496)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !191, file: !51, line: 114, baseType: !214, size: 8, offset: 10528)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !191, file: !51, line: 114, baseType: !214, size: 8, offset: 10536)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !191, file: !51, line: 115, baseType: !232, size: 16, offset: 10544)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !191, file: !51, line: 116, baseType: !452, size: 128, offset: 10560)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !191, file: !51, line: 119, baseType: !185, size: 32, offset: 10688)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !191, file: !51, line: 119, baseType: !185, size: 32, offset: 10720)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !191, file: !51, line: 122, baseType: !1614, size: 512, offset: 10752)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !191, file: !51, line: 123, baseType: !214, size: 8, offset: 11264)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !191, file: !51, line: 125, baseType: !2203, size: 56, offset: 11272)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !191, file: !51, line: 126, baseType: !2917, size: 4096, offset: 11328)
!2917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2918, size: 4096, elements: !1176)
!2918 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !51, line: 69, baseType: !2919)
!2919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !51, line: 67, size: 512, elements: !2920)
!2920 = !{!2921}
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2919, file: !51, line: 68, baseType: !248, size: 512)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !181, file: !180, line: 163, baseType: !214, size: 8, offset: 320)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !181, file: !180, line: 163, baseType: !214, size: 8, offset: 328)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !181, file: !180, line: 164, baseType: !232, size: 16, offset: 336)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !181, file: !180, line: 164, baseType: !232, size: 16, offset: 352)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !181, file: !180, line: 164, baseType: !232, size: 16, offset: 368)
!2927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 64)
!2928 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTexPoly", file: !180, line: 97, baseType: !2929)
!2929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !180, line: 93, size: 128, elements: !2930)
!2930 = !{!2931, !2932, !2933, !2934, !2935, !2936}
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !2929, file: !180, line: 94, baseType: !190, size: 64)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2929, file: !180, line: 95, baseType: !214, size: 8, offset: 64)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2929, file: !180, line: 95, baseType: !214, size: 8, offset: 72)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2929, file: !180, line: 96, baseType: !232, size: 16, offset: 80)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !2929, file: !180, line: 96, baseType: !232, size: 16, offset: 96)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2929, file: !180, line: 96, baseType: !232, size: 16, offset: 112)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!2938 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !51, line: 127, baseType: !191)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 64)
!2940 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageCacheKey", file: !3, line: 116, baseType: !2941)
!2941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageCacheKey", file: !3, line: 114, size: 32, elements: !2942)
!2942 = !{!2943}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2941, file: !3, line: 115, baseType: !142, size: 32)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 64)
!2945 = !DIDerivedType(tag: DW_TAG_typedef, name: "Camera", file: !2946, line: 71, baseType: !2947)
!2946 = !DIFile(filename: "blender/source/blender/makesdna/DNA_camera_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Camera", file: !2946, line: 47, size: 1600, elements: !2948)
!2948 = !{!2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2947, file: !2946, line: 48, baseType: !194, size: 960)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2947, file: !2946, line: 49, baseType: !335, size: 64, offset: 960)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2947, file: !2946, line: 51, baseType: !214, size: 8, offset: 1024)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !2947, file: !2946, line: 52, baseType: !214, size: 8, offset: 1032)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2947, file: !2946, line: 53, baseType: !232, size: 16, offset: 1040)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "passepartalpha", scope: !2947, file: !2946, line: 54, baseType: !185, size: 32, offset: 1056)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !2947, file: !2946, line: 55, baseType: !185, size: 32, offset: 1088)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !2947, file: !2946, line: 55, baseType: !185, size: 32, offset: 1120)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !2947, file: !2946, line: 56, baseType: !185, size: 32, offset: 1152)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "ortho_scale", scope: !2947, file: !2946, line: 56, baseType: !185, size: 32, offset: 1184)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "drawsize", scope: !2947, file: !2946, line: 56, baseType: !185, size: 32, offset: 1216)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_x", scope: !2947, file: !2946, line: 57, baseType: !185, size: 32, offset: 1248)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_y", scope: !2947, file: !2946, line: 57, baseType: !185, size: 32, offset: 1280)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "shiftx", scope: !2947, file: !2946, line: 58, baseType: !185, size: 32, offset: 1312)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "shifty", scope: !2947, file: !2946, line: 58, baseType: !185, size: 32, offset: 1344)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "YF_dofdist", scope: !2947, file: !2946, line: 63, baseType: !185, size: 32, offset: 1376)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2947, file: !2946, line: 65, baseType: !524, size: 64, offset: 1408)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "dof_ob", scope: !2947, file: !2946, line: 67, baseType: !504, size: 64, offset: 1472)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_fit", scope: !2947, file: !2946, line: 69, baseType: !214, size: 8, offset: 1536)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2947, file: !2946, line: 70, baseType: !2203, size: 56, offset: 1544)
!2969 = !{!0}
!2970 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpinLock", file: !2971, line: 127, baseType: !2972)
!2971 = !DIFile(filename: "blender/source/blender/blenlib/BLI_threads.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2972 = !DIDerivedType(tag: DW_TAG_typedef, name: "spec_null_spinlock_t", file: !2973, line: 9, baseType: !2974)
!2973 = !DIFile(filename: "include/spec_pthread.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2974 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !734, line: 26, baseType: !2975)
!2975 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !736, line: 42, baseType: !7)
!2976 = !{i32 7, !"Dwarf Version", i32 4}
!2977 = !{i32 2, !"Debug Info Version", i32 3}
!2978 = !{i32 1, !"wchar_size", i32 4}
!2979 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2980 = distinct !DISubprogram(name: "BKE_images_init", scope: !3, file: !3, line: 170, type: !2981, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!2981 = !DISubroutineType(types: !2982)
!2982 = !{null}
!2983 = !{}
!2984 = !DILocation(line: 172, column: 2, scope: !2980)
!2985 = !DILocation(line: 173, column: 1, scope: !2980)
!2986 = distinct !DISubprogram(name: "BKE_images_exit", scope: !3, file: !3, line: 175, type: !2981, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!2987 = !DILocation(line: 177, column: 2, scope: !2986)
!2988 = !DILocation(line: 178, column: 1, scope: !2986)
!2989 = distinct !DISubprogram(name: "BKE_image_de_interlace", scope: !3, file: !3, line: 238, type: !2990, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!2990 = !DISubroutineType(types: !2991)
!2991 = !{null, !2937, !142}
!2992 = !DILocalVariable(name: "ima", arg: 1, scope: !2989, file: !3, line: 238, type: !2937)
!2993 = !DILocation(line: 238, column: 36, scope: !2989)
!2994 = !DILocalVariable(name: "odd", arg: 2, scope: !2989, file: !3, line: 238, type: !142)
!2995 = !DILocation(line: 238, column: 45, scope: !2989)
!2996 = !DILocalVariable(name: "ibuf", scope: !2989, file: !3, line: 240, type: !2997)
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 64)
!2998 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImBuf", file: !1224, line: 141, baseType: !1223)
!2999 = !DILocation(line: 240, column: 9, scope: !2989)
!3000 = !DILocation(line: 240, column: 39, scope: !2989)
!3001 = !DILocation(line: 240, column: 16, scope: !2989)
!3002 = !DILocation(line: 241, column: 6, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !2989, file: !3, line: 241, column: 6)
!3004 = !DILocation(line: 241, column: 6, scope: !2989)
!3005 = !DILocation(line: 242, column: 7, scope: !3006)
!3006 = distinct !DILexicalBlock(scope: !3007, file: !3, line: 242, column: 7)
!3007 = distinct !DILexicalBlock(scope: !3003, file: !3, line: 241, column: 12)
!3008 = !DILocation(line: 242, column: 7, scope: !3007)
!3009 = !DILocation(line: 243, column: 20, scope: !3006)
!3010 = !DILocation(line: 243, column: 4, scope: !3006)
!3011 = !DILocation(line: 245, column: 20, scope: !3006)
!3012 = !DILocation(line: 245, column: 4, scope: !3006)
!3013 = !DILocation(line: 246, column: 2, scope: !3007)
!3014 = !DILocation(line: 247, column: 25, scope: !2989)
!3015 = !DILocation(line: 247, column: 30, scope: !2989)
!3016 = !DILocation(line: 247, column: 2, scope: !2989)
!3017 = !DILocation(line: 248, column: 1, scope: !2989)
!3018 = distinct !DISubprogram(name: "BKE_image_acquire_ibuf", scope: !3, file: !3, line: 3095, type: !3019, scopeLine: 3096, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!3019 = !DISubroutineType(types: !3020)
!3020 = !{!1222, !2937, !755, !3021}
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 64)
!3022 = !DILocalVariable(name: "ima", arg: 1, scope: !3018, file: !3, line: 3095, type: !2937)
!3023 = !DILocation(line: 3095, column: 38, scope: !3018)
!3024 = !DILocalVariable(name: "iuser", arg: 2, scope: !3018, file: !3, line: 3095, type: !755)
!3025 = !DILocation(line: 3095, column: 54, scope: !3018)
!3026 = !DILocalVariable(name: "lock_r", arg: 3, scope: !3018, file: !3, line: 3095, type: !3021)
!3027 = !DILocation(line: 3095, column: 68, scope: !3018)
!3028 = !DILocalVariable(name: "ibuf", scope: !3018, file: !3, line: 3097, type: !2997)
!3029 = !DILocation(line: 3097, column: 9, scope: !3018)
!3030 = !DILocation(line: 3099, column: 2, scope: !3018)
!3031 = !DILocation(line: 3101, column: 28, scope: !3018)
!3032 = !DILocation(line: 3101, column: 33, scope: !3018)
!3033 = !DILocation(line: 3101, column: 40, scope: !3018)
!3034 = !DILocation(line: 3101, column: 9, scope: !3018)
!3035 = !DILocation(line: 3101, column: 7, scope: !3018)
!3036 = !DILocation(line: 3103, column: 2, scope: !3018)
!3037 = !DILocation(line: 3105, column: 9, scope: !3018)
!3038 = !DILocation(line: 3105, column: 2, scope: !3018)
!3039 = distinct !DISubprogram(name: "de_interlace_st", scope: !3, file: !3, line: 210, type: !3040, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!3040 = !DISubroutineType(types: !3041)
!3041 = !{null, !1222}
!3042 = !DILocalVariable(name: "ibuf", arg: 1, scope: !3039, file: !3, line: 210, type: !1222)
!3043 = !DILocation(line: 210, column: 43, scope: !3039)
!3044 = !DILocalVariable(name: "tbuf1", scope: !3039, file: !3, line: 212, type: !1222)
!3045 = !DILocation(line: 212, column: 16, scope: !3039)
!3046 = !DILocalVariable(name: "tbuf2", scope: !3039, file: !3, line: 212, type: !1222)
!3047 = !DILocation(line: 212, column: 24, scope: !3039)
!3048 = !DILocation(line: 214, column: 6, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3039, file: !3, line: 214, column: 6)
!3050 = !DILocation(line: 214, column: 11, scope: !3049)
!3051 = !DILocation(line: 214, column: 6, scope: !3039)
!3052 = !DILocation(line: 214, column: 20, scope: !3049)
!3053 = !DILocation(line: 215, column: 6, scope: !3054)
!3054 = distinct !DILexicalBlock(scope: !3039, file: !3, line: 215, column: 6)
!3055 = !DILocation(line: 215, column: 12, scope: !3054)
!3056 = !DILocation(line: 215, column: 18, scope: !3054)
!3057 = !DILocation(line: 215, column: 6, scope: !3039)
!3058 = !DILocation(line: 215, column: 31, scope: !3054)
!3059 = !DILocation(line: 216, column: 2, scope: !3039)
!3060 = !DILocation(line: 216, column: 8, scope: !3039)
!3061 = !DILocation(line: 216, column: 14, scope: !3039)
!3062 = !DILocation(line: 218, column: 6, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3039, file: !3, line: 218, column: 6)
!3064 = !DILocation(line: 218, column: 12, scope: !3063)
!3065 = !DILocation(line: 218, column: 6, scope: !3039)
!3066 = !DILocation(line: 220, column: 26, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !3063, file: !3, line: 218, column: 18)
!3068 = !DILocation(line: 220, column: 32, scope: !3067)
!3069 = !DILocation(line: 220, column: 36, scope: !3067)
!3070 = !DILocation(line: 220, column: 42, scope: !3067)
!3071 = !DILocation(line: 220, column: 44, scope: !3067)
!3072 = !DILocation(line: 220, column: 11, scope: !3067)
!3073 = !DILocation(line: 220, column: 9, scope: !3067)
!3074 = !DILocation(line: 221, column: 26, scope: !3067)
!3075 = !DILocation(line: 221, column: 32, scope: !3067)
!3076 = !DILocation(line: 221, column: 36, scope: !3067)
!3077 = !DILocation(line: 221, column: 42, scope: !3067)
!3078 = !DILocation(line: 221, column: 44, scope: !3067)
!3079 = !DILocation(line: 221, column: 11, scope: !3067)
!3080 = !DILocation(line: 221, column: 9, scope: !3067)
!3081 = !DILocation(line: 223, column: 3, scope: !3067)
!3082 = !DILocation(line: 223, column: 9, scope: !3067)
!3083 = !DILocation(line: 223, column: 11, scope: !3067)
!3084 = !DILocation(line: 225, column: 15, scope: !3067)
!3085 = !DILocation(line: 225, column: 22, scope: !3067)
!3086 = !DILocation(line: 225, column: 40, scope: !3067)
!3087 = !DILocation(line: 225, column: 46, scope: !3067)
!3088 = !DILocation(line: 225, column: 49, scope: !3067)
!3089 = !DILocation(line: 225, column: 55, scope: !3067)
!3090 = !DILocation(line: 225, column: 3, scope: !3067)
!3091 = !DILocation(line: 226, column: 15, scope: !3067)
!3092 = !DILocation(line: 226, column: 22, scope: !3067)
!3093 = !DILocation(line: 226, column: 34, scope: !3067)
!3094 = !DILocation(line: 226, column: 41, scope: !3067)
!3095 = !DILocation(line: 226, column: 47, scope: !3067)
!3096 = !DILocation(line: 226, column: 53, scope: !3067)
!3097 = !DILocation(line: 226, column: 56, scope: !3067)
!3098 = !DILocation(line: 226, column: 62, scope: !3067)
!3099 = !DILocation(line: 226, column: 3, scope: !3067)
!3100 = !DILocation(line: 228, column: 3, scope: !3067)
!3101 = !DILocation(line: 228, column: 9, scope: !3067)
!3102 = !DILocation(line: 228, column: 11, scope: !3067)
!3103 = !DILocation(line: 229, column: 15, scope: !3067)
!3104 = !DILocation(line: 229, column: 21, scope: !3067)
!3105 = !DILocation(line: 229, column: 40, scope: !3067)
!3106 = !DILocation(line: 229, column: 47, scope: !3067)
!3107 = !DILocation(line: 229, column: 50, scope: !3067)
!3108 = !DILocation(line: 229, column: 57, scope: !3067)
!3109 = !DILocation(line: 229, column: 3, scope: !3067)
!3110 = !DILocation(line: 230, column: 15, scope: !3067)
!3111 = !DILocation(line: 230, column: 21, scope: !3067)
!3112 = !DILocation(line: 230, column: 31, scope: !3067)
!3113 = !DILocation(line: 230, column: 38, scope: !3067)
!3114 = !DILocation(line: 230, column: 47, scope: !3067)
!3115 = !DILocation(line: 230, column: 54, scope: !3067)
!3116 = !DILocation(line: 230, column: 57, scope: !3067)
!3117 = !DILocation(line: 230, column: 64, scope: !3067)
!3118 = !DILocation(line: 230, column: 3, scope: !3067)
!3119 = !DILocation(line: 232, column: 17, scope: !3067)
!3120 = !DILocation(line: 232, column: 3, scope: !3067)
!3121 = !DILocation(line: 233, column: 17, scope: !3067)
!3122 = !DILocation(line: 233, column: 3, scope: !3067)
!3123 = !DILocation(line: 234, column: 2, scope: !3067)
!3124 = !DILocation(line: 235, column: 2, scope: !3039)
!3125 = !DILocation(line: 235, column: 8, scope: !3039)
!3126 = !DILocation(line: 235, column: 10, scope: !3039)
!3127 = !DILocation(line: 236, column: 1, scope: !3039)
!3128 = distinct !DISubprogram(name: "de_interlace_ng", scope: !3, file: !3, line: 182, type: !3040, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!3129 = !DILocalVariable(name: "ibuf", arg: 1, scope: !3128, file: !3, line: 182, type: !1222)
!3130 = !DILocation(line: 182, column: 43, scope: !3128)
!3131 = !DILocalVariable(name: "tbuf1", scope: !3128, file: !3, line: 184, type: !1222)
!3132 = !DILocation(line: 184, column: 16, scope: !3128)
!3133 = !DILocalVariable(name: "tbuf2", scope: !3128, file: !3, line: 184, type: !1222)
!3134 = !DILocation(line: 184, column: 24, scope: !3128)
!3135 = !DILocation(line: 186, column: 6, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3128, file: !3, line: 186, column: 6)
!3137 = !DILocation(line: 186, column: 11, scope: !3136)
!3138 = !DILocation(line: 186, column: 6, scope: !3128)
!3139 = !DILocation(line: 186, column: 20, scope: !3136)
!3140 = !DILocation(line: 187, column: 6, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3128, file: !3, line: 187, column: 6)
!3142 = !DILocation(line: 187, column: 12, scope: !3141)
!3143 = !DILocation(line: 187, column: 18, scope: !3141)
!3144 = !DILocation(line: 187, column: 6, scope: !3128)
!3145 = !DILocation(line: 187, column: 31, scope: !3141)
!3146 = !DILocation(line: 188, column: 2, scope: !3128)
!3147 = !DILocation(line: 188, column: 8, scope: !3128)
!3148 = !DILocation(line: 188, column: 14, scope: !3128)
!3149 = !DILocation(line: 190, column: 6, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !3128, file: !3, line: 190, column: 6)
!3151 = !DILocation(line: 190, column: 12, scope: !3150)
!3152 = !DILocation(line: 190, column: 6, scope: !3128)
!3153 = !DILocation(line: 192, column: 26, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 190, column: 18)
!3155 = !DILocation(line: 192, column: 32, scope: !3154)
!3156 = !DILocation(line: 192, column: 36, scope: !3154)
!3157 = !DILocation(line: 192, column: 42, scope: !3154)
!3158 = !DILocation(line: 192, column: 44, scope: !3154)
!3159 = !DILocation(line: 192, column: 11, scope: !3154)
!3160 = !DILocation(line: 192, column: 9, scope: !3154)
!3161 = !DILocation(line: 193, column: 26, scope: !3154)
!3162 = !DILocation(line: 193, column: 32, scope: !3154)
!3163 = !DILocation(line: 193, column: 36, scope: !3154)
!3164 = !DILocation(line: 193, column: 42, scope: !3154)
!3165 = !DILocation(line: 193, column: 44, scope: !3154)
!3166 = !DILocation(line: 193, column: 11, scope: !3154)
!3167 = !DILocation(line: 193, column: 9, scope: !3154)
!3168 = !DILocation(line: 195, column: 3, scope: !3154)
!3169 = !DILocation(line: 195, column: 9, scope: !3154)
!3170 = !DILocation(line: 195, column: 11, scope: !3154)
!3171 = !DILocation(line: 197, column: 15, scope: !3154)
!3172 = !DILocation(line: 197, column: 22, scope: !3154)
!3173 = !DILocation(line: 197, column: 40, scope: !3154)
!3174 = !DILocation(line: 197, column: 46, scope: !3154)
!3175 = !DILocation(line: 197, column: 49, scope: !3154)
!3176 = !DILocation(line: 197, column: 55, scope: !3154)
!3177 = !DILocation(line: 197, column: 3, scope: !3154)
!3178 = !DILocation(line: 198, column: 15, scope: !3154)
!3179 = !DILocation(line: 198, column: 22, scope: !3154)
!3180 = !DILocation(line: 198, column: 34, scope: !3154)
!3181 = !DILocation(line: 198, column: 41, scope: !3154)
!3182 = !DILocation(line: 198, column: 47, scope: !3154)
!3183 = !DILocation(line: 198, column: 53, scope: !3154)
!3184 = !DILocation(line: 198, column: 56, scope: !3154)
!3185 = !DILocation(line: 198, column: 62, scope: !3154)
!3186 = !DILocation(line: 198, column: 3, scope: !3154)
!3187 = !DILocation(line: 200, column: 3, scope: !3154)
!3188 = !DILocation(line: 200, column: 9, scope: !3154)
!3189 = !DILocation(line: 200, column: 11, scope: !3154)
!3190 = !DILocation(line: 201, column: 15, scope: !3154)
!3191 = !DILocation(line: 201, column: 21, scope: !3154)
!3192 = !DILocation(line: 201, column: 40, scope: !3154)
!3193 = !DILocation(line: 201, column: 47, scope: !3154)
!3194 = !DILocation(line: 201, column: 50, scope: !3154)
!3195 = !DILocation(line: 201, column: 57, scope: !3154)
!3196 = !DILocation(line: 201, column: 3, scope: !3154)
!3197 = !DILocation(line: 202, column: 15, scope: !3154)
!3198 = !DILocation(line: 202, column: 21, scope: !3154)
!3199 = !DILocation(line: 202, column: 31, scope: !3154)
!3200 = !DILocation(line: 202, column: 38, scope: !3154)
!3201 = !DILocation(line: 202, column: 47, scope: !3154)
!3202 = !DILocation(line: 202, column: 54, scope: !3154)
!3203 = !DILocation(line: 202, column: 57, scope: !3154)
!3204 = !DILocation(line: 202, column: 64, scope: !3154)
!3205 = !DILocation(line: 202, column: 3, scope: !3154)
!3206 = !DILocation(line: 204, column: 17, scope: !3154)
!3207 = !DILocation(line: 204, column: 3, scope: !3154)
!3208 = !DILocation(line: 205, column: 17, scope: !3154)
!3209 = !DILocation(line: 205, column: 3, scope: !3154)
!3210 = !DILocation(line: 206, column: 2, scope: !3154)
!3211 = !DILocation(line: 207, column: 2, scope: !3128)
!3212 = !DILocation(line: 207, column: 8, scope: !3128)
!3213 = !DILocation(line: 207, column: 10, scope: !3128)
!3214 = !DILocation(line: 208, column: 1, scope: !3128)
!3215 = distinct !DISubprogram(name: "BKE_image_release_ibuf", scope: !3, file: !3, line: 3108, type: !3216, scopeLine: 3109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!3216 = !DISubroutineType(types: !3217)
!3217 = !{null, !2937, !2997, !177}
!3218 = !DILocalVariable(name: "ima", arg: 1, scope: !3215, file: !3, line: 3108, type: !2937)
!3219 = !DILocation(line: 3108, column: 36, scope: !3215)
!3220 = !DILocalVariable(name: "ibuf", arg: 2, scope: !3215, file: !3, line: 3108, type: !2997)
!3221 = !DILocation(line: 3108, column: 48, scope: !3215)
!3222 = !DILocalVariable(name: "lock", arg: 3, scope: !3215, file: !3, line: 3108, type: !177)
!3223 = !DILocation(line: 3108, column: 60, scope: !3215)
!3224 = !DILocation(line: 3110, column: 6, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3215, file: !3, line: 3110, column: 6)
!3226 = !DILocation(line: 3110, column: 6, scope: !3215)
!3227 = !DILocation(line: 3112, column: 7, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3229, file: !3, line: 3112, column: 7)
!3229 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 3110, column: 12)
!3230 = !DILocation(line: 3112, column: 15, scope: !3228)
!3231 = !DILocation(line: 3112, column: 12, scope: !3228)
!3232 = !DILocation(line: 3112, column: 7, scope: !3229)
!3233 = !DILocation(line: 3113, column: 4, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3228, file: !3, line: 3112, column: 20)
!3235 = !DILocation(line: 3114, column: 3, scope: !3234)
!3236 = !DILocation(line: 3115, column: 12, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3228, file: !3, line: 3115, column: 12)
!3238 = !DILocation(line: 3115, column: 12, scope: !3228)
!3239 = !DILocation(line: 3116, column: 26, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 3115, column: 18)
!3241 = !DILocation(line: 3116, column: 4, scope: !3240)
!3242 = !DILocation(line: 3117, column: 4, scope: !3240)
!3243 = !DILocation(line: 3118, column: 3, scope: !3240)
!3244 = !DILocation(line: 3119, column: 2, scope: !3229)
!3245 = !DILocation(line: 3121, column: 6, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3215, file: !3, line: 3121, column: 6)
!3247 = !DILocation(line: 3121, column: 6, scope: !3215)
!3248 = !DILocation(line: 3122, column: 3, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 3121, column: 12)
!3250 = !DILocation(line: 3123, column: 17, scope: !3249)
!3251 = !DILocation(line: 3123, column: 3, scope: !3249)
!3252 = !DILocation(line: 3124, column: 3, scope: !3249)
!3253 = !DILocation(line: 3125, column: 2, scope: !3249)
!3254 = !DILocation(line: 3126, column: 1, scope: !3215)
!3255 = distinct !DISubprogram(name: "BKE_image_free_buffers", scope: !3, file: !3, line: 264, type: !3256, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!3256 = !DISubroutineType(types: !3257)
!3257 = !{null, !2937}
!3258 = !DILocalVariable(name: "ima", arg: 1, scope: !3255, file: !3, line: 264, type: !2937)
!3259 = !DILocation(line: 264, column: 36, scope: !3255)
!3260 = !DILocation(line: 266, column: 27, scope: !3255)
!3261 = !DILocation(line: 266, column: 2, scope: !3255)
!3262 = !DILocation(line: 268, column: 6, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3255, file: !3, line: 268, column: 6)
!3264 = !DILocation(line: 268, column: 11, scope: !3263)
!3265 = !DILocation(line: 268, column: 6, scope: !3255)
!3266 = !DILocation(line: 268, column: 31, scope: !3263)
!3267 = !DILocation(line: 268, column: 36, scope: !3263)
!3268 = !DILocation(line: 268, column: 17, scope: !3263)
!3269 = !DILocation(line: 269, column: 2, scope: !3255)
!3270 = !DILocation(line: 269, column: 7, scope: !3255)
!3271 = !DILocation(line: 269, column: 12, scope: !3255)
!3272 = !DILocation(line: 271, column: 6, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3255, file: !3, line: 271, column: 6)
!3274 = !DILocation(line: 271, column: 11, scope: !3273)
!3275 = !DILocation(line: 271, column: 6, scope: !3255)
!3276 = !DILocation(line: 272, column: 23, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 271, column: 15)
!3278 = !DILocation(line: 272, column: 28, scope: !3277)
!3279 = !DILocation(line: 272, column: 3, scope: !3277)
!3280 = !DILocation(line: 273, column: 3, scope: !3277)
!3281 = !DILocation(line: 273, column: 8, scope: !3277)
!3282 = !DILocation(line: 273, column: 11, scope: !3277)
!3283 = !DILocation(line: 274, column: 2, scope: !3277)
!3284 = !DILocation(line: 276, column: 17, scope: !3255)
!3285 = !DILocation(line: 276, column: 2, scope: !3255)
!3286 = !DILocation(line: 278, column: 2, scope: !3255)
!3287 = !DILocation(line: 278, column: 7, scope: !3255)
!3288 = !DILocation(line: 278, column: 10, scope: !3255)
!3289 = !DILocation(line: 279, column: 1, scope: !3255)
!3290 = distinct !DISubprogram(name: "image_free_cached_frames", scope: !3, file: !3, line: 252, type: !3256, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!3291 = !DILocalVariable(name: "image", arg: 1, scope: !3290, file: !3, line: 252, type: !2937)
!3292 = !DILocation(line: 252, column: 45, scope: !3290)
!3293 = !DILocation(line: 254, column: 6, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3290, file: !3, line: 254, column: 6)
!3295 = !DILocation(line: 254, column: 13, scope: !3294)
!3296 = !DILocation(line: 254, column: 6, scope: !3290)
!3297 = !DILocation(line: 255, column: 23, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3294, file: !3, line: 254, column: 20)
!3299 = !DILocation(line: 255, column: 30, scope: !3298)
!3300 = !DILocation(line: 255, column: 3, scope: !3298)
!3301 = !DILocation(line: 256, column: 3, scope: !3298)
!3302 = !DILocation(line: 256, column: 10, scope: !3298)
!3303 = !DILocation(line: 256, column: 16, scope: !3298)
!3304 = !DILocation(line: 257, column: 2, scope: !3298)
!3305 = !DILocation(line: 258, column: 1, scope: !3290)
!3306 = distinct !DISubprogram(name: "BKE_image_free", scope: !3, file: !3, line: 282, type: !3256, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!3307 = !DILocalVariable(name: "ima", arg: 1, scope: !3306, file: !3, line: 282, type: !2937)
!3308 = !DILocation(line: 282, column: 28, scope: !3306)
!3309 = !DILocalVariable(name: "a", scope: !3306, file: !3, line: 284, type: !142)
!3310 = !DILocation(line: 284, column: 6, scope: !3306)
!3311 = !DILocation(line: 286, column: 25, scope: !3306)
!3312 = !DILocation(line: 286, column: 2, scope: !3306)
!3313 = !DILocation(line: 287, column: 6, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3306, file: !3, line: 287, column: 6)
!3315 = !DILocation(line: 287, column: 11, scope: !3314)
!3316 = !DILocation(line: 287, column: 6, scope: !3306)
!3317 = !DILocation(line: 288, column: 18, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3314, file: !3, line: 287, column: 23)
!3319 = !DILocation(line: 288, column: 23, scope: !3318)
!3320 = !DILocation(line: 288, column: 3, scope: !3318)
!3321 = !DILocation(line: 289, column: 3, scope: !3318)
!3322 = !DILocation(line: 289, column: 8, scope: !3318)
!3323 = !DILocation(line: 289, column: 19, scope: !3318)
!3324 = !DILocation(line: 290, column: 2, scope: !3318)
!3325 = !DILocation(line: 291, column: 19, scope: !3306)
!3326 = !DILocation(line: 291, column: 24, scope: !3306)
!3327 = !DILocation(line: 291, column: 2, scope: !3306)
!3328 = !DILocation(line: 292, column: 2, scope: !3306)
!3329 = !DILocation(line: 292, column: 7, scope: !3306)
!3330 = !DILocation(line: 292, column: 10, scope: !3306)
!3331 = !DILocation(line: 292, column: 18, scope: !3306)
!3332 = !DILocation(line: 294, column: 23, scope: !3306)
!3333 = !DILocation(line: 294, column: 28, scope: !3306)
!3334 = !DILocation(line: 294, column: 2, scope: !3306)
!3335 = !DILocation(line: 296, column: 9, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3306, file: !3, line: 296, column: 2)
!3337 = !DILocation(line: 296, column: 7, scope: !3336)
!3338 = !DILocation(line: 296, column: 14, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 296, column: 2)
!3340 = !DILocation(line: 296, column: 16, scope: !3339)
!3341 = !DILocation(line: 296, column: 2, scope: !3336)
!3342 = !DILocation(line: 297, column: 7, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3344, file: !3, line: 297, column: 7)
!3344 = distinct !DILexicalBlock(scope: !3339, file: !3, line: 296, column: 44)
!3345 = !DILocation(line: 297, column: 12, scope: !3343)
!3346 = !DILocation(line: 297, column: 20, scope: !3343)
!3347 = !DILocation(line: 297, column: 7, scope: !3344)
!3348 = !DILocation(line: 298, column: 24, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !3343, file: !3, line: 297, column: 24)
!3350 = !DILocation(line: 298, column: 29, scope: !3349)
!3351 = !DILocation(line: 298, column: 37, scope: !3349)
!3352 = !DILocation(line: 298, column: 4, scope: !3349)
!3353 = !DILocation(line: 299, column: 4, scope: !3349)
!3354 = !DILocation(line: 299, column: 9, scope: !3349)
!3355 = !DILocation(line: 299, column: 17, scope: !3349)
!3356 = !DILocation(line: 299, column: 20, scope: !3349)
!3357 = !DILocation(line: 300, column: 3, scope: !3349)
!3358 = !DILocation(line: 301, column: 2, scope: !3344)
!3359 = !DILocation(line: 296, column: 40, scope: !3339)
!3360 = !DILocation(line: 296, column: 2, scope: !3339)
!3361 = distinct !{!3361, !3341, !3362}
!3362 = !DILocation(line: 301, column: 2, scope: !3336)
!3363 = !DILocation(line: 302, column: 1, scope: !3306)
!3364 = distinct !DISubprogram(name: "BKE_image_copy", scope: !3, file: !3, line: 357, type: !3365, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!3365 = !DISubroutineType(types: !3366)
!3366 = !{!190, !3367, !2937}
!3367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3368, size: 64)
!3368 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !3369, line: 104, baseType: !3370)
!3369 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !3369, line: 53, size: 15232, elements: !3371)
!3371 = !{!3372, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3425}
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3370, file: !3369, line: 54, baseType: !3373, size: 64)
!3373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3370, size: 64)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3370, file: !3369, line: 54, baseType: !3373, size: 64, offset: 64)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3370, file: !3369, line: 55, baseType: !213, size: 8192, offset: 128)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !3370, file: !3369, line: 56, baseType: !232, size: 16, offset: 8320)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !3370, file: !3369, line: 56, baseType: !232, size: 16, offset: 8336)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !3370, file: !3369, line: 57, baseType: !232, size: 16, offset: 8352)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !3370, file: !3369, line: 57, baseType: !232, size: 16, offset: 8368)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !3370, file: !3369, line: 58, baseType: !733, size: 64, offset: 8384)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !3370, file: !3369, line: 59, baseType: !3382, size: 128, offset: 8448)
!3382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 128, elements: !3383)
!3383 = !{!3384}
!3384 = !DISubrange(count: 16)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !3370, file: !3369, line: 60, baseType: !232, size: 16, offset: 8576)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !3370, file: !3369, line: 62, baseType: !203, size: 64, offset: 8640)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3370, file: !3369, line: 63, baseType: !258, size: 128, offset: 8704)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !3370, file: !3369, line: 64, baseType: !258, size: 128, offset: 8832)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3370, file: !3369, line: 65, baseType: !258, size: 128, offset: 8960)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !3370, file: !3369, line: 66, baseType: !258, size: 128, offset: 9088)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !3370, file: !3369, line: 67, baseType: !258, size: 128, offset: 9216)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !3370, file: !3369, line: 68, baseType: !258, size: 128, offset: 9344)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3370, file: !3369, line: 69, baseType: !258, size: 128, offset: 9472)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !3370, file: !3369, line: 70, baseType: !258, size: 128, offset: 9600)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3370, file: !3369, line: 71, baseType: !258, size: 128, offset: 9728)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !3370, file: !3369, line: 72, baseType: !258, size: 128, offset: 9856)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !3370, file: !3369, line: 73, baseType: !258, size: 128, offset: 9984)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !3370, file: !3369, line: 74, baseType: !258, size: 128, offset: 10112)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3370, file: !3369, line: 75, baseType: !258, size: 128, offset: 10240)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3370, file: !3369, line: 76, baseType: !258, size: 128, offset: 10368)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !3370, file: !3369, line: 77, baseType: !258, size: 128, offset: 10496)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !3370, file: !3369, line: 78, baseType: !258, size: 128, offset: 10624)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !3370, file: !3369, line: 79, baseType: !258, size: 128, offset: 10752)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !3370, file: !3369, line: 80, baseType: !258, size: 128, offset: 10880)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !3370, file: !3369, line: 81, baseType: !258, size: 128, offset: 11008)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !3370, file: !3369, line: 82, baseType: !258, size: 128, offset: 11136)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !3370, file: !3369, line: 83, baseType: !258, size: 128, offset: 11264)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !3370, file: !3369, line: 84, baseType: !258, size: 128, offset: 11392)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !3370, file: !3369, line: 85, baseType: !258, size: 128, offset: 11520)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3370, file: !3369, line: 86, baseType: !258, size: 128, offset: 11648)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !3370, file: !3369, line: 87, baseType: !258, size: 128, offset: 11776)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !3370, file: !3369, line: 88, baseType: !258, size: 128, offset: 11904)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !3370, file: !3369, line: 89, baseType: !258, size: 128, offset: 12032)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !3370, file: !3369, line: 90, baseType: !258, size: 128, offset: 12160)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !3370, file: !3369, line: 91, baseType: !258, size: 128, offset: 12288)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !3370, file: !3369, line: 92, baseType: !258, size: 128, offset: 12416)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !3370, file: !3369, line: 93, baseType: !258, size: 128, offset: 12544)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !3370, file: !3369, line: 94, baseType: !258, size: 128, offset: 12672)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3370, file: !3369, line: 95, baseType: !258, size: 128, offset: 12800)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !3370, file: !3369, line: 96, baseType: !258, size: 128, offset: 12928)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !3370, file: !3369, line: 98, baseType: !876, size: 2048, offset: 13056)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !3370, file: !3369, line: 101, baseType: !3423, size: 64, offset: 15104)
!3423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3424, size: 64)
!3424 = !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !3369, line: 49, flags: DIFlagFwdDecl)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3370, file: !3369, line: 103, baseType: !3426, size: 64, offset: 15168)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !3369, line: 51, flags: DIFlagFwdDecl)
!3428 = !DILocalVariable(name: "bmain", arg: 1, scope: !3364, file: !3, line: 357, type: !3367)
!3429 = !DILocation(line: 357, column: 29, scope: !3364)
!3430 = !DILocalVariable(name: "ima", arg: 2, scope: !3364, file: !3, line: 357, type: !2937)
!3431 = !DILocation(line: 357, column: 43, scope: !3364)
!3432 = !DILocalVariable(name: "nima", scope: !3364, file: !3, line: 359, type: !2937)
!3433 = !DILocation(line: 359, column: 9, scope: !3364)
!3434 = !DILocation(line: 359, column: 28, scope: !3364)
!3435 = !DILocation(line: 359, column: 35, scope: !3364)
!3436 = !DILocation(line: 359, column: 40, scope: !3364)
!3437 = !DILocation(line: 359, column: 43, scope: !3364)
!3438 = !DILocation(line: 359, column: 48, scope: !3364)
!3439 = !DILocation(line: 359, column: 53, scope: !3364)
!3440 = !DILocation(line: 359, column: 58, scope: !3364)
!3441 = !DILocation(line: 359, column: 66, scope: !3364)
!3442 = !DILocation(line: 359, column: 71, scope: !3364)
!3443 = !DILocation(line: 359, column: 16, scope: !3364)
!3444 = !DILocation(line: 361, column: 14, scope: !3364)
!3445 = !DILocation(line: 361, column: 20, scope: !3364)
!3446 = !DILocation(line: 361, column: 26, scope: !3364)
!3447 = !DILocation(line: 361, column: 31, scope: !3364)
!3448 = !DILocation(line: 361, column: 2, scope: !3364)
!3449 = !DILocation(line: 363, column: 15, scope: !3364)
!3450 = !DILocation(line: 363, column: 20, scope: !3364)
!3451 = !DILocation(line: 363, column: 2, scope: !3364)
!3452 = !DILocation(line: 363, column: 8, scope: !3364)
!3453 = !DILocation(line: 363, column: 13, scope: !3364)
!3454 = !DILocation(line: 364, column: 20, scope: !3364)
!3455 = !DILocation(line: 364, column: 25, scope: !3364)
!3456 = !DILocation(line: 364, column: 2, scope: !3364)
!3457 = !DILocation(line: 364, column: 8, scope: !3364)
!3458 = !DILocation(line: 364, column: 18, scope: !3364)
!3459 = !DILocation(line: 366, column: 16, scope: !3364)
!3460 = !DILocation(line: 366, column: 21, scope: !3364)
!3461 = !DILocation(line: 366, column: 2, scope: !3364)
!3462 = !DILocation(line: 366, column: 8, scope: !3364)
!3463 = !DILocation(line: 366, column: 14, scope: !3364)
!3464 = !DILocation(line: 367, column: 16, scope: !3364)
!3465 = !DILocation(line: 367, column: 21, scope: !3364)
!3466 = !DILocation(line: 367, column: 2, scope: !3364)
!3467 = !DILocation(line: 367, column: 8, scope: !3364)
!3468 = !DILocation(line: 367, column: 14, scope: !3364)
!3469 = !DILocation(line: 368, column: 19, scope: !3364)
!3470 = !DILocation(line: 368, column: 24, scope: !3364)
!3471 = !DILocation(line: 368, column: 2, scope: !3364)
!3472 = !DILocation(line: 368, column: 8, scope: !3364)
!3473 = !DILocation(line: 368, column: 17, scope: !3364)
!3474 = !DILocation(line: 369, column: 13, scope: !3364)
!3475 = !DILocation(line: 369, column: 19, scope: !3364)
!3476 = !DILocation(line: 369, column: 30, scope: !3364)
!3477 = !DILocation(line: 369, column: 35, scope: !3364)
!3478 = !DILocation(line: 369, column: 2, scope: !3364)
!3479 = !DILocation(line: 371, column: 20, scope: !3364)
!3480 = !DILocation(line: 371, column: 25, scope: !3364)
!3481 = !DILocation(line: 371, column: 2, scope: !3364)
!3482 = !DILocation(line: 371, column: 8, scope: !3364)
!3483 = !DILocation(line: 371, column: 18, scope: !3364)
!3484 = !DILocation(line: 373, column: 15, scope: !3364)
!3485 = !DILocation(line: 373, column: 20, scope: !3364)
!3486 = !DILocation(line: 373, column: 2, scope: !3364)
!3487 = !DILocation(line: 373, column: 8, scope: !3364)
!3488 = !DILocation(line: 373, column: 13, scope: !3364)
!3489 = !DILocation(line: 374, column: 15, scope: !3364)
!3490 = !DILocation(line: 374, column: 20, scope: !3364)
!3491 = !DILocation(line: 374, column: 2, scope: !3364)
!3492 = !DILocation(line: 374, column: 8, scope: !3364)
!3493 = !DILocation(line: 374, column: 13, scope: !3364)
!3494 = !DILocation(line: 376, column: 46, scope: !3364)
!3495 = !DILocation(line: 376, column: 52, scope: !3364)
!3496 = !DILocation(line: 376, column: 74, scope: !3364)
!3497 = !DILocation(line: 376, column: 79, scope: !3364)
!3498 = !DILocation(line: 376, column: 2, scope: !3364)
!3499 = !DILocation(line: 378, column: 6, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3364, file: !3, line: 378, column: 6)
!3501 = !DILocation(line: 378, column: 11, scope: !3500)
!3502 = !DILocation(line: 378, column: 6, scope: !3364)
!3503 = !DILocation(line: 379, column: 36, scope: !3500)
!3504 = !DILocation(line: 379, column: 41, scope: !3500)
!3505 = !DILocation(line: 379, column: 22, scope: !3500)
!3506 = !DILocation(line: 379, column: 3, scope: !3500)
!3507 = !DILocation(line: 379, column: 9, scope: !3500)
!3508 = !DILocation(line: 379, column: 20, scope: !3500)
!3509 = !DILocation(line: 381, column: 9, scope: !3364)
!3510 = !DILocation(line: 381, column: 2, scope: !3364)
!3511 = distinct !DISubprogram(name: "image_alloc", scope: !3, file: !3, line: 305, type: !3512, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!3512 = !DISubroutineType(types: !3513)
!3513 = !{!2937, !3367, !972, !232, !232}
!3514 = !DILocalVariable(name: "bmain", arg: 1, scope: !3511, file: !3, line: 305, type: !3367)
!3515 = !DILocation(line: 305, column: 33, scope: !3511)
!3516 = !DILocalVariable(name: "name", arg: 2, scope: !3511, file: !3, line: 305, type: !972)
!3517 = !DILocation(line: 305, column: 52, scope: !3511)
!3518 = !DILocalVariable(name: "source", arg: 3, scope: !3511, file: !3, line: 305, type: !232)
!3519 = !DILocation(line: 305, column: 64, scope: !3511)
!3520 = !DILocalVariable(name: "type", arg: 4, scope: !3511, file: !3, line: 305, type: !232)
!3521 = !DILocation(line: 305, column: 78, scope: !3511)
!3522 = !DILocalVariable(name: "ima", scope: !3511, file: !3, line: 307, type: !2937)
!3523 = !DILocation(line: 307, column: 9, scope: !3511)
!3524 = !DILocation(line: 309, column: 27, scope: !3511)
!3525 = !DILocation(line: 309, column: 41, scope: !3511)
!3526 = !DILocation(line: 309, column: 8, scope: !3511)
!3527 = !DILocation(line: 309, column: 6, scope: !3511)
!3528 = !DILocation(line: 310, column: 6, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3511, file: !3, line: 310, column: 6)
!3530 = !DILocation(line: 310, column: 6, scope: !3511)
!3531 = !DILocation(line: 311, column: 3, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3529, file: !3, line: 310, column: 11)
!3533 = !DILocation(line: 311, column: 8, scope: !3532)
!3534 = !DILocation(line: 311, column: 11, scope: !3532)
!3535 = !DILocation(line: 313, column: 15, scope: !3532)
!3536 = !DILocation(line: 313, column: 20, scope: !3532)
!3537 = !DILocation(line: 313, column: 25, scope: !3532)
!3538 = !DILocation(line: 313, column: 3, scope: !3532)
!3539 = !DILocation(line: 313, column: 8, scope: !3532)
!3540 = !DILocation(line: 313, column: 13, scope: !3532)
!3541 = !DILocation(line: 314, column: 15, scope: !3532)
!3542 = !DILocation(line: 314, column: 20, scope: !3532)
!3543 = !DILocation(line: 314, column: 25, scope: !3532)
!3544 = !DILocation(line: 314, column: 3, scope: !3532)
!3545 = !DILocation(line: 314, column: 8, scope: !3532)
!3546 = !DILocation(line: 314, column: 13, scope: !3532)
!3547 = !DILocation(line: 315, column: 3, scope: !3532)
!3548 = !DILocation(line: 315, column: 8, scope: !3532)
!3549 = !DILocation(line: 315, column: 14, scope: !3532)
!3550 = !DILocation(line: 315, column: 22, scope: !3532)
!3551 = !DILocation(line: 315, column: 27, scope: !3532)
!3552 = !DILocation(line: 315, column: 33, scope: !3532)
!3553 = !DILocation(line: 316, column: 3, scope: !3532)
!3554 = !DILocation(line: 316, column: 8, scope: !3532)
!3555 = !DILocation(line: 316, column: 17, scope: !3532)
!3556 = !DILocation(line: 318, column: 17, scope: !3532)
!3557 = !DILocation(line: 318, column: 3, scope: !3532)
!3558 = !DILocation(line: 318, column: 8, scope: !3532)
!3559 = !DILocation(line: 318, column: 15, scope: !3532)
!3560 = !DILocation(line: 319, column: 15, scope: !3532)
!3561 = !DILocation(line: 319, column: 3, scope: !3532)
!3562 = !DILocation(line: 319, column: 8, scope: !3532)
!3563 = !DILocation(line: 319, column: 13, scope: !3532)
!3564 = !DILocation(line: 321, column: 7, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3532, file: !3, line: 321, column: 7)
!3566 = !DILocation(line: 321, column: 14, scope: !3565)
!3567 = !DILocation(line: 321, column: 7, scope: !3532)
!3568 = !DILocation(line: 322, column: 4, scope: !3565)
!3569 = !DILocation(line: 322, column: 9, scope: !3565)
!3570 = !DILocation(line: 322, column: 14, scope: !3565)
!3571 = !DILocation(line: 324, column: 47, scope: !3532)
!3572 = !DILocation(line: 324, column: 52, scope: !3532)
!3573 = !DILocation(line: 324, column: 3, scope: !3532)
!3574 = !DILocation(line: 325, column: 2, scope: !3532)
!3575 = !DILocation(line: 326, column: 9, scope: !3511)
!3576 = !DILocation(line: 326, column: 2, scope: !3511)
!3577 = distinct !DISubprogram(name: "copy_v4_v4", scope: !3578, file: !3578, line: 71, type: !3579, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!3578 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3579 = !DISubroutineType(types: !3580)
!3580 = !{null, !293, !3581}
!3581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3582, size: 64)
!3582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!3583 = !DILocalVariable(name: "r", arg: 1, scope: !3577, file: !3578, line: 71, type: !293)
!3584 = !DILocation(line: 71, column: 31, scope: !3577)
!3585 = !DILocalVariable(name: "a", arg: 2, scope: !3577, file: !3578, line: 71, type: !3581)
!3586 = !DILocation(line: 71, column: 49, scope: !3577)
!3587 = !DILocation(line: 73, column: 9, scope: !3577)
!3588 = !DILocation(line: 73, column: 2, scope: !3577)
!3589 = !DILocation(line: 73, column: 7, scope: !3577)
!3590 = !DILocation(line: 74, column: 9, scope: !3577)
!3591 = !DILocation(line: 74, column: 2, scope: !3577)
!3592 = !DILocation(line: 74, column: 7, scope: !3577)
!3593 = !DILocation(line: 75, column: 9, scope: !3577)
!3594 = !DILocation(line: 75, column: 2, scope: !3577)
!3595 = !DILocation(line: 75, column: 7, scope: !3577)
!3596 = !DILocation(line: 76, column: 9, scope: !3577)
!3597 = !DILocation(line: 76, column: 2, scope: !3577)
!3598 = !DILocation(line: 76, column: 7, scope: !3577)
!3599 = !DILocation(line: 77, column: 1, scope: !3577)
!3600 = distinct !DISubprogram(name: "BKE_image_make_local", scope: !3, file: !3, line: 390, type: !3601, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!3601 = !DISubroutineType(types: !3602)
!3602 = !{null, !190}
!3603 = !DILocalVariable(name: "ima", arg: 1, scope: !3600, file: !3, line: 390, type: !190)
!3604 = !DILocation(line: 390, column: 41, scope: !3600)
!3605 = !DILocalVariable(name: "bmain", scope: !3600, file: !3, line: 392, type: !3367)
!3606 = !DILocation(line: 392, column: 8, scope: !3600)
!3607 = !DILocation(line: 392, column: 18, scope: !3600)
!3608 = !DILocalVariable(name: "tex", scope: !3600, file: !3, line: 393, type: !3609)
!3609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3610, size: 64)
!3610 = !DIDerivedType(tag: DW_TAG_typedef, name: "Tex", file: !461, line: 261, baseType: !2627)
!3611 = !DILocation(line: 393, column: 7, scope: !3600)
!3612 = !DILocalVariable(name: "brush", scope: !3600, file: !3, line: 394, type: !3613)
!3613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3614, size: 64)
!3614 = !DIDerivedType(tag: DW_TAG_typedef, name: "Brush", file: !1876, line: 138, baseType: !1875)
!3615 = !DILocation(line: 394, column: 9, scope: !3600)
!3616 = !DILocalVariable(name: "me", scope: !3600, file: !3, line: 395, type: !3617)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!3618 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !3619, line: 133, baseType: !3620)
!3619 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !3619, line: 58, size: 11008, elements: !3621)
!3621 = !{!3622, !3623, !3624, !3625, !3626, !3629, !3630, !3636, !3645, !3647, !3653, !3659, !3667, !3678, !3680, !3693, !3701, !3710, !3711, !3719, !3721, !3724, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3767, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777, !3778, !3779, !3780, !3781, !3782, !3783, !3784}
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3620, file: !3619, line: 59, baseType: !194, size: 960)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3620, file: !3619, line: 60, baseType: !335, size: 64, offset: 960)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3620, file: !3619, line: 62, baseType: !527, size: 64, offset: 1024)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3620, file: !3619, line: 64, baseType: !524, size: 64, offset: 1088)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3620, file: !3619, line: 65, baseType: !3627, size: 64, offset: 1152)
!3627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3628, size: 64)
!3628 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !1945, line: 45, flags: DIFlagFwdDecl)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3620, file: !3619, line: 66, baseType: !621, size: 64, offset: 1216)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !3620, file: !3619, line: 67, baseType: !3631, size: 64, offset: 1280)
!3631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3632, size: 64)
!3632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !180, line: 154, size: 64, elements: !3633)
!3633 = !{!3634, !3635}
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3632, file: !180, line: 155, baseType: !142, size: 32)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3632, file: !180, line: 156, baseType: !142, size: 32, offset: 32)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !3620, file: !3619, line: 71, baseType: !3637, size: 64, offset: 1344)
!3637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3638, size: 64)
!3638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !180, line: 79, size: 96, elements: !3639)
!3639 = !{!3640, !3641, !3642, !3643, !3644}
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !3638, file: !180, line: 81, baseType: !142, size: 32)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !3638, file: !180, line: 82, baseType: !142, size: 32, offset: 32)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3638, file: !180, line: 83, baseType: !232, size: 16, offset: 64)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3638, file: !180, line: 84, baseType: !214, size: 8, offset: 80)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3638, file: !180, line: 84, baseType: !214, size: 8, offset: 88)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !3620, file: !3619, line: 72, baseType: !3646, size: 64, offset: 1408)
!3646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2929, size: 64)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !3620, file: !3619, line: 73, baseType: !3648, size: 64, offset: 1472)
!3648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3649, size: 64)
!3649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !180, line: 88, size: 64, elements: !3650)
!3650 = !{!3651, !3652}
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !3649, file: !180, line: 89, baseType: !7, size: 32)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !3649, file: !180, line: 90, baseType: !7, size: 32, offset: 32)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !3620, file: !3619, line: 74, baseType: !3654, size: 64, offset: 1536)
!3654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3655, size: 64)
!3655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !180, line: 109, size: 96, elements: !3656)
!3656 = !{!3657, !3658}
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3655, file: !180, line: 110, baseType: !752, size: 64)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3655, file: !180, line: 111, baseType: !142, size: 32, offset: 64)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !3620, file: !3619, line: 75, baseType: !3660, size: 64, offset: 1600)
!3660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3661, size: 64)
!3661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !180, line: 129, size: 32, elements: !3662)
!3662 = !{!3663, !3664, !3665, !3666}
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3661, file: !180, line: 130, baseType: !214, size: 8)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3661, file: !180, line: 130, baseType: !214, size: 8, offset: 8)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3661, file: !180, line: 130, baseType: !214, size: 8, offset: 16)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !3661, file: !180, line: 130, baseType: !214, size: 8, offset: 24)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !3620, file: !3619, line: 80, baseType: !3668, size: 64, offset: 1664)
!3668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3669, size: 64)
!3669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !180, line: 42, size: 160, elements: !3670)
!3670 = !{!3671, !3672, !3673, !3674, !3675, !3676, !3677}
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3669, file: !180, line: 43, baseType: !7, size: 32)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3669, file: !180, line: 43, baseType: !7, size: 32, offset: 32)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3669, file: !180, line: 43, baseType: !7, size: 32, offset: 64)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3669, file: !180, line: 43, baseType: !7, size: 32, offset: 96)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3669, file: !180, line: 44, baseType: !232, size: 16, offset: 128)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !3669, file: !180, line: 45, baseType: !214, size: 8, offset: 144)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3669, file: !180, line: 45, baseType: !214, size: 8, offset: 152)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !3620, file: !3619, line: 81, baseType: !3679, size: 64, offset: 1728)
!3679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !3620, file: !3619, line: 82, baseType: !3681, size: 64, offset: 1792)
!3681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3682, size: 64)
!3682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !3619, line: 136, size: 512, elements: !3683)
!3683 = !{!3684, !3685, !3686, !3688, !3689, !3690, !3691, !3692}
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !3682, file: !3619, line: 137, baseType: !177, size: 64)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3682, file: !3619, line: 138, baseType: !184, size: 256, offset: 64)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3682, file: !3619, line: 139, baseType: !3687, size: 128, offset: 320)
!3687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !453)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3682, file: !3619, line: 140, baseType: !214, size: 8, offset: 448)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !3682, file: !3619, line: 140, baseType: !214, size: 8, offset: 456)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3682, file: !3619, line: 141, baseType: !232, size: 16, offset: 464)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !3682, file: !3619, line: 141, baseType: !232, size: 16, offset: 480)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !3682, file: !3619, line: 141, baseType: !232, size: 16, offset: 496)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !3620, file: !3619, line: 83, baseType: !3694, size: 64, offset: 1856)
!3694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3695, size: 64)
!3695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !180, line: 65, size: 160, elements: !3696)
!3696 = !{!3697, !3698, !3699, !3700}
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3695, file: !180, line: 66, baseType: !370, size: 96)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !3695, file: !180, line: 67, baseType: !2523, size: 48, offset: 96)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3695, file: !180, line: 68, baseType: !214, size: 8, offset: 144)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !3695, file: !180, line: 68, baseType: !214, size: 8, offset: 152)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !3620, file: !3619, line: 84, baseType: !3702, size: 64, offset: 1920)
!3702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3703, size: 64)
!3703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !180, line: 48, size: 96, elements: !3704)
!3704 = !{!3705, !3706, !3707, !3708, !3709}
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3703, file: !180, line: 49, baseType: !7, size: 32)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3703, file: !180, line: 49, baseType: !7, size: 32, offset: 32)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !3703, file: !180, line: 50, baseType: !214, size: 8, offset: 64)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !3703, file: !180, line: 50, baseType: !214, size: 8, offset: 72)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3703, file: !180, line: 51, baseType: !232, size: 16, offset: 80)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !3620, file: !3619, line: 85, baseType: !2037, size: 64, offset: 1984)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !3620, file: !3619, line: 89, baseType: !3712, size: 64, offset: 2048)
!3712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3713, size: 64)
!3713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !180, line: 74, size: 32, elements: !3714)
!3714 = !{!3715, !3716, !3717, !3718}
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !3713, file: !180, line: 75, baseType: !214, size: 8)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3713, file: !180, line: 75, baseType: !214, size: 8, offset: 8)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3713, file: !180, line: 75, baseType: !214, size: 8, offset: 16)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3713, file: !180, line: 75, baseType: !214, size: 8, offset: 24)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !3620, file: !3619, line: 90, baseType: !3720, size: 64, offset: 2112)
!3720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3620, size: 64)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !3620, file: !3619, line: 93, baseType: !3722, size: 64, offset: 2176)
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 64)
!3723 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !3619, line: 93, flags: DIFlagFwdDecl)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3620, file: !3619, line: 95, baseType: !3725, size: 1600, offset: 2240)
!3725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !6, line: 64, size: 1600, elements: !3726)
!3726 = !{!3727, !3742, !3746, !3747, !3748, !3749, !3752}
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !3725, file: !6, line: 65, baseType: !3728, size: 64)
!3728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3729, size: 64)
!3729 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !6, line: 53, baseType: !3730)
!3730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !6, line: 42, size: 832, elements: !3731)
!3731 = !{!3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3741}
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3730, file: !6, line: 43, baseType: !142, size: 32)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3730, file: !6, line: 44, baseType: !142, size: 32, offset: 32)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3730, file: !6, line: 45, baseType: !142, size: 32, offset: 64)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3730, file: !6, line: 46, baseType: !142, size: 32, offset: 96)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !3730, file: !6, line: 47, baseType: !142, size: 32, offset: 128)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !3730, file: !6, line: 48, baseType: !142, size: 32, offset: 160)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !3730, file: !6, line: 49, baseType: !142, size: 32, offset: 192)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3730, file: !6, line: 50, baseType: !142, size: 32, offset: 224)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3730, file: !6, line: 51, baseType: !248, size: 512, offset: 256)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3730, file: !6, line: 52, baseType: !177, size: 64, offset: 768)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !3725, file: !6, line: 66, baseType: !3743, size: 1312, offset: 64)
!3743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 1312, elements: !3744)
!3744 = !{!3745}
!3745 = !DISubrange(count: 41)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !3725, file: !6, line: 69, baseType: !142, size: 32, offset: 1376)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !3725, file: !6, line: 69, baseType: !142, size: 32, offset: 1408)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !3725, file: !6, line: 70, baseType: !142, size: 32, offset: 1440)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3725, file: !6, line: 71, baseType: !3750, size: 64, offset: 1472)
!3750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3751, size: 64)
!3751 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !6, line: 71, flags: DIFlagFwdDecl)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !3725, file: !6, line: 72, baseType: !3753, size: 64, offset: 1536)
!3753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3754, size: 64)
!3754 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !6, line: 59, baseType: !3755)
!3755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !6, line: 57, size: 8192, elements: !3756)
!3756 = !{!3757}
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !3755, file: !6, line: 58, baseType: !213, size: 8192)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3620, file: !3619, line: 95, baseType: !3725, size: 1600, offset: 3840)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !3620, file: !3619, line: 95, baseType: !3725, size: 1600, offset: 5440)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3620, file: !3619, line: 98, baseType: !3725, size: 1600, offset: 7040)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !3620, file: !3619, line: 98, baseType: !3725, size: 1600, offset: 8640)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3620, file: !3619, line: 101, baseType: !142, size: 32, offset: 10240)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !3620, file: !3619, line: 101, baseType: !142, size: 32, offset: 10272)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !3620, file: !3619, line: 101, baseType: !142, size: 32, offset: 10304)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !3620, file: !3619, line: 101, baseType: !142, size: 32, offset: 10336)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !3620, file: !3619, line: 104, baseType: !142, size: 32, offset: 10368)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !3620, file: !3619, line: 104, baseType: !142, size: 32, offset: 10400)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !3620, file: !3619, line: 111, baseType: !142, size: 32, offset: 10432)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !3620, file: !3619, line: 114, baseType: !370, size: 96, offset: 10464)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3620, file: !3619, line: 115, baseType: !370, size: 96, offset: 10560)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !3620, file: !3619, line: 116, baseType: !370, size: 96, offset: 10656)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !3620, file: !3619, line: 118, baseType: !142, size: 32, offset: 10752)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !3620, file: !3619, line: 119, baseType: !232, size: 16, offset: 10784)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3620, file: !3619, line: 119, baseType: !232, size: 16, offset: 10800)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !3620, file: !3619, line: 120, baseType: !185, size: 32, offset: 10816)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3620, file: !3619, line: 121, baseType: !142, size: 32, offset: 10848)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !3620, file: !3619, line: 124, baseType: !214, size: 8, offset: 10880)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3620, file: !3619, line: 124, baseType: !214, size: 8, offset: 10888)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !3620, file: !3619, line: 126, baseType: !214, size: 8, offset: 10896)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !3620, file: !3619, line: 126, baseType: !214, size: 8, offset: 10904)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !3620, file: !3619, line: 127, baseType: !214, size: 8, offset: 10912)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !3620, file: !3619, line: 128, baseType: !214, size: 8, offset: 10920)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !3620, file: !3619, line: 130, baseType: !232, size: 16, offset: 10928)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !3620, file: !3619, line: 132, baseType: !3785, size: 64, offset: 10944)
!3785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3786, size: 64)
!3786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !180, line: 233, size: 3584, elements: !3787)
!3787 = !{!3788, !3789, !3792, !3793, !3794, !3795, !3796, !3797, !3798, !3799, !3800, !3802, !3803, !3805}
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !3786, file: !180, line: 234, baseType: !258, size: 128)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !3786, file: !180, line: 235, baseType: !3790, size: 64, offset: 128)
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3791, size: 64)
!3791 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !180, line: 69, baseType: !3695)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !3786, file: !180, line: 237, baseType: !1231, size: 8, offset: 192)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !3786, file: !180, line: 237, baseType: !1231, size: 8, offset: 200)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !3786, file: !180, line: 237, baseType: !1231, size: 8, offset: 208)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !3786, file: !180, line: 237, baseType: !1231, size: 8, offset: 216)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !3786, file: !180, line: 237, baseType: !1231, size: 8, offset: 224)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !3786, file: !180, line: 237, baseType: !1231, size: 8, offset: 232)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !3786, file: !180, line: 238, baseType: !1231, size: 8, offset: 240)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3786, file: !180, line: 238, baseType: !1231, size: 8, offset: 248)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3786, file: !180, line: 241, baseType: !3801, size: 1600, offset: 256)
!3801 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !6, line: 73, baseType: !3725)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !3786, file: !180, line: 242, baseType: !3801, size: 1600, offset: 1856)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !3786, file: !180, line: 243, baseType: !3804, size: 64, offset: 3456)
!3804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !3786, file: !180, line: 244, baseType: !623, size: 64, offset: 3520)
!3806 = !DILocation(line: 395, column: 8, scope: !3600)
!3807 = !DILocalVariable(name: "is_local", scope: !3600, file: !3, line: 396, type: !1231)
!3808 = !DILocation(line: 396, column: 7, scope: !3600)
!3809 = !DILocalVariable(name: "is_lib", scope: !3600, file: !3, line: 396, type: !1231)
!3810 = !DILocation(line: 396, column: 25, scope: !3600)
!3811 = !DILocation(line: 403, column: 6, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3600, file: !3, line: 403, column: 6)
!3813 = !DILocation(line: 403, column: 11, scope: !3812)
!3814 = !DILocation(line: 403, column: 14, scope: !3812)
!3815 = !DILocation(line: 403, column: 18, scope: !3812)
!3816 = !DILocation(line: 403, column: 6, scope: !3600)
!3817 = !DILocation(line: 403, column: 27, scope: !3812)
!3818 = !DILocation(line: 415, column: 13, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3600, file: !3, line: 415, column: 2)
!3820 = !DILocation(line: 415, column: 20, scope: !3819)
!3821 = !DILocation(line: 415, column: 24, scope: !3819)
!3822 = !DILocation(line: 415, column: 11, scope: !3819)
!3823 = !DILocation(line: 415, column: 7, scope: !3819)
!3824 = !DILocation(line: 415, column: 31, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3819, file: !3, line: 415, column: 2)
!3826 = !DILocation(line: 415, column: 2, scope: !3819)
!3827 = !DILocation(line: 416, column: 7, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 416, column: 7)
!3829 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 415, column: 56)
!3830 = !DILocation(line: 416, column: 12, scope: !3828)
!3831 = !DILocation(line: 416, column: 19, scope: !3828)
!3832 = !DILocation(line: 416, column: 16, scope: !3828)
!3833 = !DILocation(line: 416, column: 7, scope: !3829)
!3834 = !DILocation(line: 417, column: 8, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3836, file: !3, line: 417, column: 8)
!3836 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 416, column: 24)
!3837 = !DILocation(line: 417, column: 13, scope: !3835)
!3838 = !DILocation(line: 417, column: 16, scope: !3835)
!3839 = !DILocation(line: 417, column: 8, scope: !3836)
!3840 = !DILocation(line: 417, column: 28, scope: !3835)
!3841 = !DILocation(line: 417, column: 21, scope: !3835)
!3842 = !DILocation(line: 418, column: 18, scope: !3835)
!3843 = !DILocation(line: 419, column: 3, scope: !3836)
!3844 = !DILocation(line: 420, column: 2, scope: !3829)
!3845 = !DILocation(line: 415, column: 42, scope: !3825)
!3846 = !DILocation(line: 415, column: 47, scope: !3825)
!3847 = !DILocation(line: 415, column: 50, scope: !3825)
!3848 = !DILocation(line: 415, column: 40, scope: !3825)
!3849 = !DILocation(line: 415, column: 2, scope: !3825)
!3850 = distinct !{!3850, !3826, !3851}
!3851 = !DILocation(line: 420, column: 2, scope: !3819)
!3852 = !DILocation(line: 421, column: 15, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3600, file: !3, line: 421, column: 2)
!3854 = !DILocation(line: 421, column: 22, scope: !3853)
!3855 = !DILocation(line: 421, column: 28, scope: !3853)
!3856 = !DILocation(line: 421, column: 13, scope: !3853)
!3857 = !DILocation(line: 421, column: 7, scope: !3853)
!3858 = !DILocation(line: 421, column: 35, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3853, file: !3, line: 421, column: 2)
!3860 = !DILocation(line: 421, column: 2, scope: !3853)
!3861 = !DILocation(line: 422, column: 7, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 422, column: 7)
!3863 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 421, column: 66)
!3864 = !DILocation(line: 422, column: 14, scope: !3862)
!3865 = !DILocation(line: 422, column: 20, scope: !3862)
!3866 = !DILocation(line: 422, column: 29, scope: !3862)
!3867 = !DILocation(line: 422, column: 26, scope: !3862)
!3868 = !DILocation(line: 422, column: 7, scope: !3863)
!3869 = !DILocation(line: 423, column: 8, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 423, column: 8)
!3871 = distinct !DILexicalBlock(scope: !3862, file: !3, line: 422, column: 34)
!3872 = !DILocation(line: 423, column: 15, scope: !3870)
!3873 = !DILocation(line: 423, column: 18, scope: !3870)
!3874 = !DILocation(line: 423, column: 8, scope: !3871)
!3875 = !DILocation(line: 423, column: 30, scope: !3870)
!3876 = !DILocation(line: 423, column: 23, scope: !3870)
!3877 = !DILocation(line: 424, column: 18, scope: !3870)
!3878 = !DILocation(line: 425, column: 3, scope: !3871)
!3879 = !DILocation(line: 426, column: 2, scope: !3863)
!3880 = !DILocation(line: 421, column: 50, scope: !3859)
!3881 = !DILocation(line: 421, column: 57, scope: !3859)
!3882 = !DILocation(line: 421, column: 60, scope: !3859)
!3883 = !DILocation(line: 421, column: 48, scope: !3859)
!3884 = !DILocation(line: 421, column: 2, scope: !3859)
!3885 = distinct !{!3885, !3860, !3886}
!3886 = !DILocation(line: 426, column: 2, scope: !3853)
!3887 = !DILocation(line: 427, column: 12, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3600, file: !3, line: 427, column: 2)
!3889 = !DILocation(line: 427, column: 19, scope: !3888)
!3890 = !DILocation(line: 427, column: 24, scope: !3888)
!3891 = !DILocation(line: 427, column: 10, scope: !3888)
!3892 = !DILocation(line: 427, column: 7, scope: !3888)
!3893 = !DILocation(line: 427, column: 31, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3888, file: !3, line: 427, column: 2)
!3895 = !DILocation(line: 427, column: 2, scope: !3888)
!3896 = !DILocation(line: 428, column: 7, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3898, file: !3, line: 428, column: 7)
!3898 = distinct !DILexicalBlock(scope: !3894, file: !3, line: 427, column: 53)
!3899 = !DILocation(line: 428, column: 11, scope: !3897)
!3900 = !DILocation(line: 428, column: 7, scope: !3898)
!3901 = !DILocalVariable(name: "tface", scope: !3902, file: !3, line: 429, type: !178)
!3902 = distinct !DILexicalBlock(scope: !3897, file: !3, line: 428, column: 19)
!3903 = !DILocation(line: 429, column: 12, scope: !3902)
!3904 = !DILocalVariable(name: "a", scope: !3902, file: !3, line: 430, type: !142)
!3905 = !DILocation(line: 430, column: 8, scope: !3902)
!3906 = !DILocalVariable(name: "i", scope: !3902, file: !3, line: 430, type: !142)
!3907 = !DILocation(line: 430, column: 11, scope: !3902)
!3908 = !DILocation(line: 432, column: 11, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 432, column: 4)
!3910 = !DILocation(line: 432, column: 9, scope: !3909)
!3911 = !DILocation(line: 432, column: 16, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3909, file: !3, line: 432, column: 4)
!3913 = !DILocation(line: 432, column: 20, scope: !3912)
!3914 = !DILocation(line: 432, column: 24, scope: !3912)
!3915 = !DILocation(line: 432, column: 30, scope: !3912)
!3916 = !DILocation(line: 432, column: 18, scope: !3912)
!3917 = !DILocation(line: 432, column: 4, scope: !3909)
!3918 = !DILocation(line: 433, column: 9, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3920, file: !3, line: 433, column: 9)
!3920 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 432, column: 45)
!3921 = !DILocation(line: 433, column: 13, scope: !3919)
!3922 = !DILocation(line: 433, column: 19, scope: !3919)
!3923 = !DILocation(line: 433, column: 26, scope: !3919)
!3924 = !DILocation(line: 433, column: 29, scope: !3919)
!3925 = !DILocation(line: 433, column: 34, scope: !3919)
!3926 = !DILocation(line: 433, column: 9, scope: !3920)
!3927 = !DILocation(line: 434, column: 24, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 433, column: 48)
!3929 = !DILocation(line: 434, column: 28, scope: !3928)
!3930 = !DILocation(line: 434, column: 34, scope: !3928)
!3931 = !DILocation(line: 434, column: 41, scope: !3928)
!3932 = !DILocation(line: 434, column: 44, scope: !3928)
!3933 = !DILocation(line: 434, column: 14, scope: !3928)
!3934 = !DILocation(line: 434, column: 12, scope: !3928)
!3935 = !DILocation(line: 436, column: 13, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 436, column: 6)
!3937 = !DILocation(line: 436, column: 11, scope: !3936)
!3938 = !DILocation(line: 436, column: 18, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3936, file: !3, line: 436, column: 6)
!3940 = !DILocation(line: 436, column: 22, scope: !3939)
!3941 = !DILocation(line: 436, column: 26, scope: !3939)
!3942 = !DILocation(line: 436, column: 20, scope: !3939)
!3943 = !DILocation(line: 436, column: 6, scope: !3936)
!3944 = !DILocation(line: 437, column: 11, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3946, file: !3, line: 437, column: 11)
!3946 = distinct !DILexicalBlock(scope: !3939, file: !3, line: 436, column: 49)
!3947 = !DILocation(line: 437, column: 18, scope: !3945)
!3948 = !DILocation(line: 437, column: 27, scope: !3945)
!3949 = !DILocation(line: 437, column: 24, scope: !3945)
!3950 = !DILocation(line: 437, column: 11, scope: !3946)
!3951 = !DILocation(line: 438, column: 12, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 438, column: 12)
!3953 = distinct !DILexicalBlock(scope: !3945, file: !3, line: 437, column: 32)
!3954 = !DILocation(line: 438, column: 16, scope: !3952)
!3955 = !DILocation(line: 438, column: 19, scope: !3952)
!3956 = !DILocation(line: 438, column: 12, scope: !3953)
!3957 = !DILocation(line: 438, column: 31, scope: !3952)
!3958 = !DILocation(line: 438, column: 24, scope: !3952)
!3959 = !DILocation(line: 439, column: 22, scope: !3952)
!3960 = !DILocation(line: 440, column: 7, scope: !3953)
!3961 = !DILocation(line: 441, column: 6, scope: !3946)
!3962 = !DILocation(line: 436, column: 36, scope: !3939)
!3963 = !DILocation(line: 436, column: 45, scope: !3939)
!3964 = !DILocation(line: 436, column: 6, scope: !3939)
!3965 = distinct !{!3965, !3943, !3966}
!3966 = !DILocation(line: 441, column: 6, scope: !3936)
!3967 = !DILocation(line: 442, column: 5, scope: !3928)
!3968 = !DILocation(line: 443, column: 4, scope: !3920)
!3969 = !DILocation(line: 432, column: 41, scope: !3912)
!3970 = !DILocation(line: 432, column: 4, scope: !3912)
!3971 = distinct !{!3971, !3917, !3972}
!3972 = !DILocation(line: 443, column: 4, scope: !3909)
!3973 = !DILocation(line: 444, column: 3, scope: !3902)
!3974 = !DILocation(line: 446, column: 7, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3898, file: !3, line: 446, column: 7)
!3976 = !DILocation(line: 446, column: 11, scope: !3975)
!3977 = !DILocation(line: 446, column: 7, scope: !3898)
!3978 = !DILocalVariable(name: "mtpoly", scope: !3979, file: !3, line: 447, type: !2927)
!3979 = distinct !DILexicalBlock(scope: !3975, file: !3, line: 446, column: 19)
!3980 = !DILocation(line: 447, column: 14, scope: !3979)
!3981 = !DILocalVariable(name: "a", scope: !3979, file: !3, line: 448, type: !142)
!3982 = !DILocation(line: 448, column: 8, scope: !3979)
!3983 = !DILocalVariable(name: "i", scope: !3979, file: !3, line: 448, type: !142)
!3984 = !DILocation(line: 448, column: 11, scope: !3979)
!3985 = !DILocation(line: 450, column: 11, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 450, column: 4)
!3987 = !DILocation(line: 450, column: 9, scope: !3986)
!3988 = !DILocation(line: 450, column: 16, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 450, column: 4)
!3990 = !DILocation(line: 450, column: 20, scope: !3989)
!3991 = !DILocation(line: 450, column: 24, scope: !3989)
!3992 = !DILocation(line: 450, column: 30, scope: !3989)
!3993 = !DILocation(line: 450, column: 18, scope: !3989)
!3994 = !DILocation(line: 450, column: 4, scope: !3986)
!3995 = !DILocation(line: 451, column: 9, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 451, column: 9)
!3997 = distinct !DILexicalBlock(scope: !3989, file: !3, line: 450, column: 45)
!3998 = !DILocation(line: 451, column: 13, scope: !3996)
!3999 = !DILocation(line: 451, column: 19, scope: !3996)
!4000 = !DILocation(line: 451, column: 26, scope: !3996)
!4001 = !DILocation(line: 451, column: 29, scope: !3996)
!4002 = !DILocation(line: 451, column: 34, scope: !3996)
!4003 = !DILocation(line: 451, column: 9, scope: !3997)
!4004 = !DILocation(line: 452, column: 27, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !3996, file: !3, line: 451, column: 50)
!4006 = !DILocation(line: 452, column: 31, scope: !4005)
!4007 = !DILocation(line: 452, column: 37, scope: !4005)
!4008 = !DILocation(line: 452, column: 44, scope: !4005)
!4009 = !DILocation(line: 452, column: 47, scope: !4005)
!4010 = !DILocation(line: 452, column: 15, scope: !4005)
!4011 = !DILocation(line: 452, column: 13, scope: !4005)
!4012 = !DILocation(line: 454, column: 13, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4005, file: !3, line: 454, column: 6)
!4014 = !DILocation(line: 454, column: 11, scope: !4013)
!4015 = !DILocation(line: 454, column: 18, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4013, file: !3, line: 454, column: 6)
!4017 = !DILocation(line: 454, column: 22, scope: !4016)
!4018 = !DILocation(line: 454, column: 26, scope: !4016)
!4019 = !DILocation(line: 454, column: 20, scope: !4016)
!4020 = !DILocation(line: 454, column: 6, scope: !4013)
!4021 = !DILocation(line: 455, column: 11, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4023, file: !3, line: 455, column: 11)
!4023 = distinct !DILexicalBlock(scope: !4016, file: !3, line: 454, column: 50)
!4024 = !DILocation(line: 455, column: 19, scope: !4022)
!4025 = !DILocation(line: 455, column: 28, scope: !4022)
!4026 = !DILocation(line: 455, column: 25, scope: !4022)
!4027 = !DILocation(line: 455, column: 11, scope: !4023)
!4028 = !DILocation(line: 456, column: 12, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4030, file: !3, line: 456, column: 12)
!4030 = distinct !DILexicalBlock(scope: !4022, file: !3, line: 455, column: 33)
!4031 = !DILocation(line: 456, column: 16, scope: !4029)
!4032 = !DILocation(line: 456, column: 19, scope: !4029)
!4033 = !DILocation(line: 456, column: 12, scope: !4030)
!4034 = !DILocation(line: 456, column: 31, scope: !4029)
!4035 = !DILocation(line: 456, column: 24, scope: !4029)
!4036 = !DILocation(line: 457, column: 22, scope: !4029)
!4037 = !DILocation(line: 458, column: 7, scope: !4030)
!4038 = !DILocation(line: 459, column: 6, scope: !4023)
!4039 = !DILocation(line: 454, column: 36, scope: !4016)
!4040 = !DILocation(line: 454, column: 46, scope: !4016)
!4041 = !DILocation(line: 454, column: 6, scope: !4016)
!4042 = distinct !{!4042, !4020, !4043}
!4043 = !DILocation(line: 459, column: 6, scope: !4013)
!4044 = !DILocation(line: 460, column: 5, scope: !4005)
!4045 = !DILocation(line: 461, column: 4, scope: !3997)
!4046 = !DILocation(line: 450, column: 41, scope: !3989)
!4047 = !DILocation(line: 450, column: 4, scope: !3989)
!4048 = distinct !{!4048, !3994, !4049}
!4049 = !DILocation(line: 461, column: 4, scope: !3986)
!4050 = !DILocation(line: 462, column: 3, scope: !3979)
!4051 = !DILocation(line: 464, column: 2, scope: !3898)
!4052 = !DILocation(line: 427, column: 40, scope: !3894)
!4053 = !DILocation(line: 427, column: 44, scope: !3894)
!4054 = !DILocation(line: 427, column: 47, scope: !3894)
!4055 = !DILocation(line: 427, column: 38, scope: !3894)
!4056 = !DILocation(line: 427, column: 2, scope: !3894)
!4057 = distinct !{!4057, !3895, !4058}
!4058 = !DILocation(line: 464, column: 2, scope: !3888)
!4059 = !DILocation(line: 466, column: 6, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !3600, file: !3, line: 466, column: 6)
!4061 = !DILocation(line: 466, column: 15, scope: !4060)
!4062 = !DILocation(line: 466, column: 18, scope: !4060)
!4063 = !DILocation(line: 466, column: 25, scope: !4060)
!4064 = !DILocation(line: 466, column: 6, scope: !3600)
!4065 = !DILocation(line: 467, column: 21, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4060, file: !3, line: 466, column: 35)
!4067 = !DILocation(line: 467, column: 29, scope: !4066)
!4068 = !DILocation(line: 467, column: 34, scope: !4066)
!4069 = !DILocation(line: 467, column: 3, scope: !4066)
!4070 = !DILocation(line: 468, column: 22, scope: !4066)
!4071 = !DILocation(line: 468, column: 3, scope: !4066)
!4072 = !DILocation(line: 469, column: 2, scope: !4066)
!4073 = !DILocation(line: 470, column: 11, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4060, file: !3, line: 470, column: 11)
!4075 = !DILocation(line: 470, column: 20, scope: !4074)
!4076 = !DILocation(line: 470, column: 23, scope: !4074)
!4077 = !DILocation(line: 470, column: 11, scope: !4060)
!4078 = !DILocalVariable(name: "ima_new", scope: !4079, file: !3, line: 471, type: !2937)
!4079 = distinct !DILexicalBlock(scope: !4074, file: !3, line: 470, column: 31)
!4080 = !DILocation(line: 471, column: 10, scope: !4079)
!4081 = !DILocation(line: 471, column: 35, scope: !4079)
!4082 = !DILocation(line: 471, column: 42, scope: !4079)
!4083 = !DILocation(line: 471, column: 20, scope: !4079)
!4084 = !DILocation(line: 473, column: 3, scope: !4079)
!4085 = !DILocation(line: 473, column: 12, scope: !4079)
!4086 = !DILocation(line: 473, column: 15, scope: !4079)
!4087 = !DILocation(line: 473, column: 18, scope: !4079)
!4088 = !DILocation(line: 476, column: 26, scope: !4079)
!4089 = !DILocation(line: 476, column: 33, scope: !4079)
!4090 = !DILocation(line: 476, column: 38, scope: !4079)
!4091 = !DILocation(line: 476, column: 41, scope: !4079)
!4092 = !DILocation(line: 476, column: 47, scope: !4079)
!4093 = !DILocation(line: 476, column: 56, scope: !4079)
!4094 = !DILocation(line: 476, column: 3, scope: !4079)
!4095 = !DILocation(line: 478, column: 9, scope: !4079)
!4096 = !DILocation(line: 478, column: 16, scope: !4079)
!4097 = !DILocation(line: 478, column: 20, scope: !4079)
!4098 = !DILocation(line: 478, column: 7, scope: !4079)
!4099 = !DILocation(line: 479, column: 3, scope: !4079)
!4100 = !DILocation(line: 479, column: 10, scope: !4079)
!4101 = !DILocation(line: 480, column: 8, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4103, file: !3, line: 480, column: 8)
!4103 = distinct !DILexicalBlock(scope: !4079, file: !3, line: 479, column: 15)
!4104 = !DILocation(line: 480, column: 13, scope: !4102)
!4105 = !DILocation(line: 480, column: 16, scope: !4102)
!4106 = !DILocation(line: 480, column: 20, scope: !4102)
!4107 = !DILocation(line: 480, column: 8, scope: !4103)
!4108 = !DILocation(line: 481, column: 9, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4110, file: !3, line: 481, column: 9)
!4110 = distinct !DILexicalBlock(scope: !4102, file: !3, line: 480, column: 29)
!4111 = !DILocation(line: 481, column: 14, scope: !4109)
!4112 = !DILocation(line: 481, column: 21, scope: !4109)
!4113 = !DILocation(line: 481, column: 18, scope: !4109)
!4114 = !DILocation(line: 481, column: 9, scope: !4110)
!4115 = !DILocation(line: 482, column: 17, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 481, column: 26)
!4117 = !DILocation(line: 482, column: 6, scope: !4116)
!4118 = !DILocation(line: 482, column: 11, scope: !4116)
!4119 = !DILocation(line: 482, column: 15, scope: !4116)
!4120 = !DILocation(line: 483, column: 6, scope: !4116)
!4121 = !DILocation(line: 483, column: 15, scope: !4116)
!4122 = !DILocation(line: 483, column: 18, scope: !4116)
!4123 = !DILocation(line: 483, column: 20, scope: !4116)
!4124 = !DILocation(line: 484, column: 6, scope: !4116)
!4125 = !DILocation(line: 484, column: 11, scope: !4116)
!4126 = !DILocation(line: 484, column: 14, scope: !4116)
!4127 = !DILocation(line: 484, column: 16, scope: !4116)
!4128 = !DILocation(line: 485, column: 5, scope: !4116)
!4129 = !DILocation(line: 486, column: 4, scope: !4110)
!4130 = !DILocation(line: 487, column: 10, scope: !4103)
!4131 = !DILocation(line: 487, column: 15, scope: !4103)
!4132 = !DILocation(line: 487, column: 18, scope: !4103)
!4133 = !DILocation(line: 487, column: 8, scope: !4103)
!4134 = distinct !{!4134, !4099, !4135}
!4135 = !DILocation(line: 488, column: 3, scope: !4079)
!4136 = !DILocation(line: 489, column: 11, scope: !4079)
!4137 = !DILocation(line: 489, column: 18, scope: !4079)
!4138 = !DILocation(line: 489, column: 24, scope: !4079)
!4139 = !DILocation(line: 489, column: 9, scope: !4079)
!4140 = !DILocation(line: 490, column: 3, scope: !4079)
!4141 = !DILocation(line: 490, column: 10, scope: !4079)
!4142 = !DILocation(line: 491, column: 8, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 491, column: 8)
!4144 = distinct !DILexicalBlock(scope: !4079, file: !3, line: 490, column: 17)
!4145 = !DILocation(line: 491, column: 15, scope: !4143)
!4146 = !DILocation(line: 491, column: 18, scope: !4143)
!4147 = !DILocation(line: 491, column: 22, scope: !4143)
!4148 = !DILocation(line: 491, column: 8, scope: !4144)
!4149 = !DILocation(line: 492, column: 9, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4151, file: !3, line: 492, column: 9)
!4151 = distinct !DILexicalBlock(scope: !4143, file: !3, line: 491, column: 31)
!4152 = !DILocation(line: 492, column: 16, scope: !4150)
!4153 = !DILocation(line: 492, column: 22, scope: !4150)
!4154 = !DILocation(line: 492, column: 31, scope: !4150)
!4155 = !DILocation(line: 492, column: 28, scope: !4150)
!4156 = !DILocation(line: 492, column: 9, scope: !4151)
!4157 = !DILocation(line: 493, column: 27, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 492, column: 36)
!4159 = !DILocation(line: 493, column: 6, scope: !4158)
!4160 = !DILocation(line: 493, column: 13, scope: !4158)
!4161 = !DILocation(line: 493, column: 19, scope: !4158)
!4162 = !DILocation(line: 493, column: 25, scope: !4158)
!4163 = !DILocation(line: 494, column: 6, scope: !4158)
!4164 = !DILocation(line: 494, column: 15, scope: !4158)
!4165 = !DILocation(line: 494, column: 18, scope: !4158)
!4166 = !DILocation(line: 494, column: 20, scope: !4158)
!4167 = !DILocation(line: 495, column: 6, scope: !4158)
!4168 = !DILocation(line: 495, column: 11, scope: !4158)
!4169 = !DILocation(line: 495, column: 14, scope: !4158)
!4170 = !DILocation(line: 495, column: 16, scope: !4158)
!4171 = !DILocation(line: 496, column: 5, scope: !4158)
!4172 = !DILocation(line: 497, column: 4, scope: !4151)
!4173 = !DILocation(line: 498, column: 12, scope: !4144)
!4174 = !DILocation(line: 498, column: 19, scope: !4144)
!4175 = !DILocation(line: 498, column: 22, scope: !4144)
!4176 = !DILocation(line: 498, column: 10, scope: !4144)
!4177 = distinct !{!4177, !4140, !4178}
!4178 = !DILocation(line: 499, column: 3, scope: !4079)
!4179 = !DILocation(line: 503, column: 8, scope: !4079)
!4180 = !DILocation(line: 503, column: 15, scope: !4079)
!4181 = !DILocation(line: 503, column: 20, scope: !4079)
!4182 = !DILocation(line: 503, column: 6, scope: !4079)
!4183 = !DILocation(line: 504, column: 3, scope: !4079)
!4184 = !DILocation(line: 504, column: 10, scope: !4079)
!4185 = !DILocation(line: 505, column: 8, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4187, file: !3, line: 505, column: 8)
!4187 = distinct !DILexicalBlock(scope: !4079, file: !3, line: 504, column: 14)
!4188 = !DILocation(line: 505, column: 12, scope: !4186)
!4189 = !DILocation(line: 505, column: 8, scope: !4187)
!4190 = !DILocalVariable(name: "tface", scope: !4191, file: !3, line: 506, type: !178)
!4191 = distinct !DILexicalBlock(scope: !4186, file: !3, line: 505, column: 20)
!4192 = !DILocation(line: 506, column: 13, scope: !4191)
!4193 = !DILocalVariable(name: "a", scope: !4191, file: !3, line: 507, type: !142)
!4194 = !DILocation(line: 507, column: 9, scope: !4191)
!4195 = !DILocalVariable(name: "i", scope: !4191, file: !3, line: 507, type: !142)
!4196 = !DILocation(line: 507, column: 12, scope: !4191)
!4197 = !DILocation(line: 509, column: 12, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4191, file: !3, line: 509, column: 5)
!4199 = !DILocation(line: 509, column: 10, scope: !4198)
!4200 = !DILocation(line: 509, column: 17, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4198, file: !3, line: 509, column: 5)
!4202 = !DILocation(line: 509, column: 21, scope: !4201)
!4203 = !DILocation(line: 509, column: 25, scope: !4201)
!4204 = !DILocation(line: 509, column: 31, scope: !4201)
!4205 = !DILocation(line: 509, column: 19, scope: !4201)
!4206 = !DILocation(line: 509, column: 5, scope: !4198)
!4207 = !DILocation(line: 510, column: 10, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4209, file: !3, line: 510, column: 10)
!4209 = distinct !DILexicalBlock(scope: !4201, file: !3, line: 509, column: 46)
!4210 = !DILocation(line: 510, column: 14, scope: !4208)
!4211 = !DILocation(line: 510, column: 20, scope: !4208)
!4212 = !DILocation(line: 510, column: 27, scope: !4208)
!4213 = !DILocation(line: 510, column: 30, scope: !4208)
!4214 = !DILocation(line: 510, column: 35, scope: !4208)
!4215 = !DILocation(line: 510, column: 10, scope: !4209)
!4216 = !DILocation(line: 511, column: 25, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4208, file: !3, line: 510, column: 49)
!4218 = !DILocation(line: 511, column: 29, scope: !4217)
!4219 = !DILocation(line: 511, column: 35, scope: !4217)
!4220 = !DILocation(line: 511, column: 42, scope: !4217)
!4221 = !DILocation(line: 511, column: 45, scope: !4217)
!4222 = !DILocation(line: 511, column: 15, scope: !4217)
!4223 = !DILocation(line: 511, column: 13, scope: !4217)
!4224 = !DILocation(line: 513, column: 14, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4217, file: !3, line: 513, column: 7)
!4226 = !DILocation(line: 513, column: 12, scope: !4225)
!4227 = !DILocation(line: 513, column: 19, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4225, file: !3, line: 513, column: 7)
!4229 = !DILocation(line: 513, column: 23, scope: !4228)
!4230 = !DILocation(line: 513, column: 27, scope: !4228)
!4231 = !DILocation(line: 513, column: 21, scope: !4228)
!4232 = !DILocation(line: 513, column: 7, scope: !4225)
!4233 = !DILocation(line: 514, column: 12, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 514, column: 12)
!4235 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 513, column: 50)
!4236 = !DILocation(line: 514, column: 19, scope: !4234)
!4237 = !DILocation(line: 514, column: 28, scope: !4234)
!4238 = !DILocation(line: 514, column: 25, scope: !4234)
!4239 = !DILocation(line: 514, column: 12, scope: !4235)
!4240 = !DILocation(line: 515, column: 24, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4234, file: !3, line: 514, column: 33)
!4242 = !DILocation(line: 515, column: 9, scope: !4241)
!4243 = !DILocation(line: 515, column: 16, scope: !4241)
!4244 = !DILocation(line: 515, column: 22, scope: !4241)
!4245 = !DILocation(line: 516, column: 13, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4241, file: !3, line: 516, column: 13)
!4247 = !DILocation(line: 516, column: 22, scope: !4246)
!4248 = !DILocation(line: 516, column: 25, scope: !4246)
!4249 = !DILocation(line: 516, column: 28, scope: !4246)
!4250 = !DILocation(line: 516, column: 13, scope: !4241)
!4251 = !DILocation(line: 517, column: 10, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4246, file: !3, line: 516, column: 34)
!4253 = !DILocation(line: 517, column: 17, scope: !4252)
!4254 = !DILocation(line: 517, column: 24, scope: !4252)
!4255 = !DILocation(line: 517, column: 27, scope: !4252)
!4256 = !DILocation(line: 517, column: 30, scope: !4252)
!4257 = !DILocation(line: 518, column: 9, scope: !4252)
!4258 = !DILocation(line: 519, column: 29, scope: !4241)
!4259 = !DILocation(line: 519, column: 23, scope: !4241)
!4260 = !DILocation(line: 519, column: 9, scope: !4241)
!4261 = !DILocation(line: 520, column: 8, scope: !4241)
!4262 = !DILocation(line: 521, column: 7, scope: !4235)
!4263 = !DILocation(line: 513, column: 37, scope: !4228)
!4264 = !DILocation(line: 513, column: 46, scope: !4228)
!4265 = !DILocation(line: 513, column: 7, scope: !4228)
!4266 = distinct !{!4266, !4232, !4267}
!4267 = !DILocation(line: 521, column: 7, scope: !4225)
!4268 = !DILocation(line: 522, column: 6, scope: !4217)
!4269 = !DILocation(line: 523, column: 5, scope: !4209)
!4270 = !DILocation(line: 509, column: 42, scope: !4201)
!4271 = !DILocation(line: 509, column: 5, scope: !4201)
!4272 = distinct !{!4272, !4206, !4273}
!4273 = !DILocation(line: 523, column: 5, scope: !4198)
!4274 = !DILocation(line: 524, column: 4, scope: !4191)
!4275 = !DILocation(line: 526, column: 8, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4187, file: !3, line: 526, column: 8)
!4277 = !DILocation(line: 526, column: 12, scope: !4276)
!4278 = !DILocation(line: 526, column: 8, scope: !4187)
!4279 = !DILocalVariable(name: "mtpoly", scope: !4280, file: !3, line: 527, type: !2927)
!4280 = distinct !DILexicalBlock(scope: !4276, file: !3, line: 526, column: 20)
!4281 = !DILocation(line: 527, column: 15, scope: !4280)
!4282 = !DILocalVariable(name: "a", scope: !4280, file: !3, line: 528, type: !142)
!4283 = !DILocation(line: 528, column: 9, scope: !4280)
!4284 = !DILocalVariable(name: "i", scope: !4280, file: !3, line: 528, type: !142)
!4285 = !DILocation(line: 528, column: 12, scope: !4280)
!4286 = !DILocation(line: 530, column: 12, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4280, file: !3, line: 530, column: 5)
!4288 = !DILocation(line: 530, column: 10, scope: !4287)
!4289 = !DILocation(line: 530, column: 17, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4287, file: !3, line: 530, column: 5)
!4291 = !DILocation(line: 530, column: 21, scope: !4290)
!4292 = !DILocation(line: 530, column: 25, scope: !4290)
!4293 = !DILocation(line: 530, column: 31, scope: !4290)
!4294 = !DILocation(line: 530, column: 19, scope: !4290)
!4295 = !DILocation(line: 530, column: 5, scope: !4287)
!4296 = !DILocation(line: 531, column: 10, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 531, column: 10)
!4298 = distinct !DILexicalBlock(scope: !4290, file: !3, line: 530, column: 46)
!4299 = !DILocation(line: 531, column: 14, scope: !4297)
!4300 = !DILocation(line: 531, column: 20, scope: !4297)
!4301 = !DILocation(line: 531, column: 27, scope: !4297)
!4302 = !DILocation(line: 531, column: 30, scope: !4297)
!4303 = !DILocation(line: 531, column: 35, scope: !4297)
!4304 = !DILocation(line: 531, column: 10, scope: !4298)
!4305 = !DILocation(line: 532, column: 28, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 531, column: 51)
!4307 = !DILocation(line: 532, column: 32, scope: !4306)
!4308 = !DILocation(line: 532, column: 38, scope: !4306)
!4309 = !DILocation(line: 532, column: 45, scope: !4306)
!4310 = !DILocation(line: 532, column: 48, scope: !4306)
!4311 = !DILocation(line: 532, column: 16, scope: !4306)
!4312 = !DILocation(line: 532, column: 14, scope: !4306)
!4313 = !DILocation(line: 534, column: 14, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4306, file: !3, line: 534, column: 7)
!4315 = !DILocation(line: 534, column: 12, scope: !4314)
!4316 = !DILocation(line: 534, column: 19, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4314, file: !3, line: 534, column: 7)
!4318 = !DILocation(line: 534, column: 23, scope: !4317)
!4319 = !DILocation(line: 534, column: 27, scope: !4317)
!4320 = !DILocation(line: 534, column: 21, scope: !4317)
!4321 = !DILocation(line: 534, column: 7, scope: !4314)
!4322 = !DILocation(line: 535, column: 12, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4324, file: !3, line: 535, column: 12)
!4324 = distinct !DILexicalBlock(scope: !4317, file: !3, line: 534, column: 51)
!4325 = !DILocation(line: 535, column: 20, scope: !4323)
!4326 = !DILocation(line: 535, column: 29, scope: !4323)
!4327 = !DILocation(line: 535, column: 26, scope: !4323)
!4328 = !DILocation(line: 535, column: 12, scope: !4324)
!4329 = !DILocation(line: 536, column: 25, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4323, file: !3, line: 535, column: 34)
!4331 = !DILocation(line: 536, column: 9, scope: !4330)
!4332 = !DILocation(line: 536, column: 17, scope: !4330)
!4333 = !DILocation(line: 536, column: 23, scope: !4330)
!4334 = !DILocation(line: 537, column: 13, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4330, file: !3, line: 537, column: 13)
!4336 = !DILocation(line: 537, column: 22, scope: !4335)
!4337 = !DILocation(line: 537, column: 25, scope: !4335)
!4338 = !DILocation(line: 537, column: 28, scope: !4335)
!4339 = !DILocation(line: 537, column: 13, scope: !4330)
!4340 = !DILocation(line: 538, column: 10, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4335, file: !3, line: 537, column: 34)
!4342 = !DILocation(line: 538, column: 18, scope: !4341)
!4343 = !DILocation(line: 538, column: 25, scope: !4341)
!4344 = !DILocation(line: 538, column: 28, scope: !4341)
!4345 = !DILocation(line: 538, column: 31, scope: !4341)
!4346 = !DILocation(line: 539, column: 9, scope: !4341)
!4347 = !DILocation(line: 540, column: 29, scope: !4330)
!4348 = !DILocation(line: 540, column: 23, scope: !4330)
!4349 = !DILocation(line: 540, column: 9, scope: !4330)
!4350 = !DILocation(line: 541, column: 8, scope: !4330)
!4351 = !DILocation(line: 542, column: 7, scope: !4324)
!4352 = !DILocation(line: 534, column: 37, scope: !4317)
!4353 = !DILocation(line: 534, column: 47, scope: !4317)
!4354 = !DILocation(line: 534, column: 7, scope: !4317)
!4355 = distinct !{!4355, !4321, !4356}
!4356 = !DILocation(line: 542, column: 7, scope: !4314)
!4357 = !DILocation(line: 543, column: 6, scope: !4306)
!4358 = !DILocation(line: 544, column: 5, scope: !4298)
!4359 = !DILocation(line: 530, column: 42, scope: !4290)
!4360 = !DILocation(line: 530, column: 5, scope: !4290)
!4361 = distinct !{!4361, !4295, !4362}
!4362 = !DILocation(line: 544, column: 5, scope: !4287)
!4363 = !DILocation(line: 545, column: 4, scope: !4280)
!4364 = !DILocation(line: 547, column: 9, scope: !4187)
!4365 = !DILocation(line: 547, column: 13, scope: !4187)
!4366 = !DILocation(line: 547, column: 16, scope: !4187)
!4367 = !DILocation(line: 547, column: 7, scope: !4187)
!4368 = distinct !{!4368, !4183, !4369}
!4369 = !DILocation(line: 548, column: 3, scope: !4079)
!4370 = !DILocation(line: 549, column: 2, scope: !4079)
!4371 = !DILocation(line: 550, column: 1, scope: !3600)
!4372 = distinct !DISubprogram(name: "extern_local_image", scope: !3, file: !3, line: 384, type: !3256, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!4373 = !DILocalVariable(name: "UNUSED_ima", arg: 1, scope: !4372, file: !3, line: 384, type: !2937)
!4374 = !DILocation(line: 384, column: 39, scope: !4372)
!4375 = !DILocation(line: 388, column: 1, scope: !4372)
!4376 = distinct !DISubprogram(name: "BKE_image_merge", scope: !3, file: !3, line: 552, type: !4377, scopeLine: 553, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!4377 = !DISubroutineType(types: !4378)
!4378 = !{null, !2937, !2937}
!4379 = !DILocalVariable(name: "dest", arg: 1, scope: !4376, file: !3, line: 552, type: !2937)
!4380 = !DILocation(line: 552, column: 29, scope: !4376)
!4381 = !DILocalVariable(name: "source", arg: 2, scope: !4376, file: !3, line: 552, type: !2937)
!4382 = !DILocation(line: 552, column: 42, scope: !4376)
!4383 = !DILocation(line: 555, column: 6, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4376, file: !3, line: 555, column: 6)
!4385 = !DILocation(line: 555, column: 11, scope: !4384)
!4386 = !DILocation(line: 555, column: 14, scope: !4384)
!4387 = !DILocation(line: 555, column: 21, scope: !4384)
!4388 = !DILocation(line: 555, column: 24, scope: !4384)
!4389 = !DILocation(line: 555, column: 32, scope: !4384)
!4390 = !DILocation(line: 555, column: 29, scope: !4384)
!4391 = !DILocation(line: 555, column: 6, scope: !4376)
!4392 = !DILocation(line: 556, column: 3, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4384, file: !3, line: 555, column: 40)
!4394 = !DILocation(line: 557, column: 7, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4393, file: !3, line: 557, column: 7)
!4396 = !DILocation(line: 557, column: 15, scope: !4395)
!4397 = !DILocation(line: 557, column: 21, scope: !4395)
!4398 = !DILocation(line: 557, column: 7, scope: !4393)
!4399 = !DILocalVariable(name: "iter", scope: !4400, file: !3, line: 558, type: !4401)
!4400 = distinct !DILexicalBlock(scope: !4395, file: !3, line: 557, column: 30)
!4401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4402, size: 64)
!4402 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCacheIter", file: !272, line: 72, flags: DIFlagFwdDecl)
!4403 = !DILocation(line: 558, column: 27, scope: !4400)
!4404 = !DILocation(line: 559, column: 34, scope: !4400)
!4405 = !DILocation(line: 559, column: 42, scope: !4400)
!4406 = !DILocation(line: 559, column: 11, scope: !4400)
!4407 = !DILocation(line: 559, column: 9, scope: !4400)
!4408 = !DILocation(line: 560, column: 4, scope: !4400)
!4409 = !DILocation(line: 560, column: 36, scope: !4400)
!4410 = !DILocation(line: 560, column: 12, scope: !4400)
!4411 = !DILocation(line: 560, column: 11, scope: !4400)
!4412 = !DILocalVariable(name: "ibuf", scope: !4413, file: !3, line: 561, type: !2997)
!4413 = distinct !DILexicalBlock(scope: !4400, file: !3, line: 560, column: 43)
!4414 = !DILocation(line: 561, column: 12, scope: !4413)
!4415 = !DILocation(line: 561, column: 47, scope: !4413)
!4416 = !DILocation(line: 561, column: 19, scope: !4413)
!4417 = !DILocalVariable(name: "key", scope: !4413, file: !3, line: 562, type: !2939)
!4418 = !DILocation(line: 562, column: 20, scope: !4413)
!4419 = !DILocation(line: 562, column: 56, scope: !4413)
!4420 = !DILocation(line: 562, column: 26, scope: !4413)
!4421 = !DILocation(line: 563, column: 20, scope: !4413)
!4422 = !DILocation(line: 563, column: 26, scope: !4413)
!4423 = !DILocation(line: 563, column: 31, scope: !4413)
!4424 = !DILocation(line: 563, column: 38, scope: !4413)
!4425 = !DILocation(line: 563, column: 5, scope: !4413)
!4426 = !DILocation(line: 564, column: 29, scope: !4413)
!4427 = !DILocation(line: 564, column: 5, scope: !4413)
!4428 = distinct !{!4428, !4408, !4429}
!4429 = !DILocation(line: 565, column: 4, scope: !4400)
!4430 = !DILocation(line: 566, column: 28, scope: !4400)
!4431 = !DILocation(line: 566, column: 4, scope: !4400)
!4432 = !DILocation(line: 567, column: 3, scope: !4400)
!4433 = !DILocation(line: 568, column: 3, scope: !4393)
!4434 = !DILocation(line: 570, column: 23, scope: !4393)
!4435 = !DILocation(line: 570, column: 29, scope: !4393)
!4436 = !DILocation(line: 570, column: 3, scope: !4393)
!4437 = !DILocation(line: 571, column: 2, scope: !4393)
!4438 = !DILocation(line: 572, column: 1, scope: !4376)
!4439 = distinct !DISubprogram(name: "imagecache_put", scope: !3, file: !3, line: 141, type: !4440, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!4440 = !DISubroutineType(types: !4441)
!4441 = !{null, !2937, !142, !2997}
!4442 = !DILocalVariable(name: "image", arg: 1, scope: !4439, file: !3, line: 141, type: !2937)
!4443 = !DILocation(line: 141, column: 35, scope: !4439)
!4444 = !DILocalVariable(name: "index", arg: 2, scope: !4439, file: !3, line: 141, type: !142)
!4445 = !DILocation(line: 141, column: 46, scope: !4439)
!4446 = !DILocalVariable(name: "ibuf", arg: 3, scope: !4439, file: !3, line: 141, type: !2997)
!4447 = !DILocation(line: 141, column: 60, scope: !4439)
!4448 = !DILocalVariable(name: "key", scope: !4439, file: !3, line: 143, type: !2940)
!4449 = !DILocation(line: 143, column: 16, scope: !4439)
!4450 = !DILocation(line: 145, column: 6, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4439, file: !3, line: 145, column: 6)
!4452 = !DILocation(line: 145, column: 13, scope: !4451)
!4453 = !DILocation(line: 145, column: 19, scope: !4451)
!4454 = !DILocation(line: 145, column: 6, scope: !4439)
!4455 = !DILocation(line: 149, column: 18, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4451, file: !3, line: 145, column: 28)
!4457 = !DILocation(line: 149, column: 3, scope: !4456)
!4458 = !DILocation(line: 149, column: 10, scope: !4456)
!4459 = !DILocation(line: 149, column: 16, scope: !4456)
!4460 = !DILocation(line: 151, column: 39, scope: !4456)
!4461 = !DILocation(line: 151, column: 46, scope: !4456)
!4462 = !DILocation(line: 151, column: 3, scope: !4456)
!4463 = !DILocation(line: 152, column: 2, scope: !4456)
!4464 = !DILocation(line: 154, column: 14, scope: !4439)
!4465 = !DILocation(line: 154, column: 6, scope: !4439)
!4466 = !DILocation(line: 154, column: 12, scope: !4439)
!4467 = !DILocation(line: 156, column: 21, scope: !4439)
!4468 = !DILocation(line: 156, column: 28, scope: !4439)
!4469 = !DILocation(line: 156, column: 35, scope: !4439)
!4470 = !DILocation(line: 156, column: 41, scope: !4439)
!4471 = !DILocation(line: 156, column: 2, scope: !4439)
!4472 = !DILocation(line: 157, column: 1, scope: !4439)
!4473 = distinct !DISubprogram(name: "BKE_image_scale", scope: !3, file: !3, line: 575, type: !4474, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!4474 = !DISubroutineType(types: !4475)
!4475 = !{!1231, !2937, !142, !142}
!4476 = !DILocalVariable(name: "image", arg: 1, scope: !4473, file: !3, line: 575, type: !2937)
!4477 = !DILocation(line: 575, column: 29, scope: !4473)
!4478 = !DILocalVariable(name: "width", arg: 2, scope: !4473, file: !3, line: 575, type: !142)
!4479 = !DILocation(line: 575, column: 40, scope: !4473)
!4480 = !DILocalVariable(name: "height", arg: 3, scope: !4473, file: !3, line: 575, type: !142)
!4481 = !DILocation(line: 575, column: 51, scope: !4473)
!4482 = !DILocalVariable(name: "ibuf", scope: !4473, file: !3, line: 577, type: !2997)
!4483 = !DILocation(line: 577, column: 9, scope: !4473)
!4484 = !DILocalVariable(name: "lock", scope: !4473, file: !3, line: 578, type: !177)
!4485 = !DILocation(line: 578, column: 8, scope: !4473)
!4486 = !DILocation(line: 580, column: 32, scope: !4473)
!4487 = !DILocation(line: 580, column: 9, scope: !4473)
!4488 = !DILocation(line: 580, column: 7, scope: !4473)
!4489 = !DILocation(line: 582, column: 6, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4473, file: !3, line: 582, column: 6)
!4491 = !DILocation(line: 582, column: 6, scope: !4473)
!4492 = !DILocation(line: 583, column: 18, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4490, file: !3, line: 582, column: 12)
!4494 = !DILocation(line: 583, column: 24, scope: !4493)
!4495 = !DILocation(line: 583, column: 31, scope: !4493)
!4496 = !DILocation(line: 583, column: 3, scope: !4493)
!4497 = !DILocation(line: 584, column: 3, scope: !4493)
!4498 = !DILocation(line: 584, column: 9, scope: !4493)
!4499 = !DILocation(line: 584, column: 19, scope: !4493)
!4500 = !DILocation(line: 585, column: 2, scope: !4493)
!4501 = !DILocation(line: 587, column: 25, scope: !4473)
!4502 = !DILocation(line: 587, column: 32, scope: !4473)
!4503 = !DILocation(line: 587, column: 38, scope: !4473)
!4504 = !DILocation(line: 587, column: 2, scope: !4473)
!4505 = !DILocation(line: 589, column: 10, scope: !4473)
!4506 = !DILocation(line: 589, column: 15, scope: !4473)
!4507 = !DILocation(line: 589, column: 9, scope: !4473)
!4508 = !DILocation(line: 589, column: 2, scope: !4473)
!4509 = distinct !DISubprogram(name: "BKE_image_alpha_mode_from_extension_ex", scope: !3, file: !3, line: 612, type: !4510, scopeLine: 613, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!4510 = !DISubroutineType(types: !4511)
!4511 = !{!214, !972}
!4512 = !DILocalVariable(name: "filepath", arg: 1, scope: !4509, file: !3, line: 612, type: !972)
!4513 = !DILocation(line: 612, column: 57, scope: !4509)
!4514 = !DILocation(line: 614, column: 25, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 614, column: 6)
!4516 = !DILocation(line: 614, column: 6, scope: !4515)
!4517 = !DILocation(line: 614, column: 6, scope: !4509)
!4518 = !DILocation(line: 615, column: 3, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4515, file: !3, line: 614, column: 74)
!4520 = !DILocation(line: 618, column: 3, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4515, file: !3, line: 617, column: 7)
!4522 = !DILocation(line: 620, column: 1, scope: !4509)
!4523 = distinct !DISubprogram(name: "BKE_image_alpha_mode_from_extension", scope: !3, file: !3, line: 622, type: !3256, scopeLine: 623, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!4524 = !DILocalVariable(name: "image", arg: 1, scope: !4523, file: !3, line: 622, type: !2937)
!4525 = !DILocation(line: 622, column: 49, scope: !4523)
!4526 = !DILocation(line: 624, column: 61, scope: !4523)
!4527 = !DILocation(line: 624, column: 68, scope: !4523)
!4528 = !DILocation(line: 624, column: 22, scope: !4523)
!4529 = !DILocation(line: 624, column: 2, scope: !4523)
!4530 = !DILocation(line: 624, column: 9, scope: !4523)
!4531 = !DILocation(line: 624, column: 20, scope: !4523)
!4532 = !DILocation(line: 625, column: 1, scope: !4523)
!4533 = distinct !DISubprogram(name: "BKE_image_load", scope: !3, file: !3, line: 627, type: !4534, scopeLine: 628, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!4534 = !DISubroutineType(types: !4535)
!4535 = !{!190, !3367, !972}
!4536 = !DILocalVariable(name: "bmain", arg: 1, scope: !4533, file: !3, line: 627, type: !3367)
!4537 = !DILocation(line: 627, column: 29, scope: !4533)
!4538 = !DILocalVariable(name: "filepath", arg: 2, scope: !4533, file: !3, line: 627, type: !972)
!4539 = !DILocation(line: 627, column: 48, scope: !4533)
!4540 = !DILocalVariable(name: "ima", scope: !4533, file: !3, line: 629, type: !2937)
!4541 = !DILocation(line: 629, column: 9, scope: !4533)
!4542 = !DILocalVariable(name: "file", scope: !4533, file: !3, line: 630, type: !142)
!4543 = !DILocation(line: 630, column: 6, scope: !4533)
!4544 = !DILocalVariable(name: "len", scope: !4533, file: !3, line: 630, type: !142)
!4545 = !DILocation(line: 630, column: 12, scope: !4533)
!4546 = !DILocalVariable(name: "libname", scope: !4533, file: !3, line: 631, type: !972)
!4547 = !DILocation(line: 631, column: 14, scope: !4533)
!4548 = !DILocalVariable(name: "str", scope: !4533, file: !3, line: 632, type: !213)
!4549 = !DILocation(line: 632, column: 7, scope: !4533)
!4550 = !DILocation(line: 634, column: 14, scope: !4533)
!4551 = !DILocation(line: 634, column: 19, scope: !4533)
!4552 = !DILocation(line: 634, column: 2, scope: !4533)
!4553 = !DILocation(line: 635, column: 15, scope: !4533)
!4554 = !DILocation(line: 635, column: 20, scope: !4533)
!4555 = !DILocation(line: 635, column: 27, scope: !4533)
!4556 = !DILocation(line: 635, column: 2, scope: !4533)
!4557 = !DILocation(line: 638, column: 18, scope: !4533)
!4558 = !DILocation(line: 638, column: 9, scope: !4533)
!4559 = !DILocation(line: 638, column: 7, scope: !4533)
!4560 = !DILocation(line: 639, column: 6, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4533, file: !3, line: 639, column: 6)
!4562 = !DILocation(line: 639, column: 11, scope: !4561)
!4563 = !DILocation(line: 639, column: 6, scope: !4533)
!4564 = !DILocation(line: 640, column: 3, scope: !4561)
!4565 = !DILocation(line: 641, column: 8, scope: !4533)
!4566 = !DILocation(line: 641, column: 2, scope: !4533)
!4567 = !DILocation(line: 644, column: 15, scope: !4533)
!4568 = !DILocation(line: 644, column: 8, scope: !4533)
!4569 = !DILocation(line: 644, column: 6, scope: !4533)
!4570 = !DILocation(line: 646, column: 2, scope: !4533)
!4571 = !DILocation(line: 646, column: 9, scope: !4533)
!4572 = !DILocation(line: 646, column: 13, scope: !4533)
!4573 = !DILocation(line: 646, column: 17, scope: !4533)
!4574 = !DILocation(line: 646, column: 20, scope: !4533)
!4575 = !DILocation(line: 646, column: 29, scope: !4533)
!4576 = !DILocation(line: 646, column: 33, scope: !4533)
!4577 = !DILocation(line: 646, column: 38, scope: !4533)
!4578 = !DILocation(line: 646, column: 45, scope: !4533)
!4579 = !DILocation(line: 646, column: 48, scope: !4533)
!4580 = !DILocation(line: 646, column: 57, scope: !4533)
!4581 = !DILocation(line: 646, column: 61, scope: !4533)
!4582 = !DILocation(line: 646, column: 66, scope: !4533)
!4583 = !DILocation(line: 0, scope: !4533)
!4584 = !DILocation(line: 646, column: 78, scope: !4533)
!4585 = distinct !{!4585, !4570, !4584}
!4586 = !DILocation(line: 647, column: 12, scope: !4533)
!4587 = !DILocation(line: 647, column: 23, scope: !4533)
!4588 = !DILocation(line: 647, column: 21, scope: !4533)
!4589 = !DILocation(line: 647, column: 10, scope: !4533)
!4590 = !DILocation(line: 649, column: 20, scope: !4533)
!4591 = !DILocation(line: 649, column: 27, scope: !4533)
!4592 = !DILocation(line: 649, column: 8, scope: !4533)
!4593 = !DILocation(line: 649, column: 6, scope: !4533)
!4594 = !DILocation(line: 650, column: 14, scope: !4533)
!4595 = !DILocation(line: 650, column: 19, scope: !4533)
!4596 = !DILocation(line: 650, column: 25, scope: !4533)
!4597 = !DILocation(line: 650, column: 2, scope: !4533)
!4598 = !DILocation(line: 652, column: 29, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4533, file: !3, line: 652, column: 6)
!4600 = !DILocation(line: 652, column: 6, scope: !4599)
!4601 = !DILocation(line: 652, column: 6, scope: !4533)
!4602 = !DILocation(line: 653, column: 3, scope: !4599)
!4603 = !DILocation(line: 653, column: 8, scope: !4599)
!4604 = !DILocation(line: 653, column: 15, scope: !4599)
!4605 = !DILocation(line: 655, column: 30, scope: !4533)
!4606 = !DILocation(line: 655, column: 2, scope: !4533)
!4607 = !DILocation(line: 657, column: 9, scope: !4533)
!4608 = !DILocation(line: 657, column: 2, scope: !4533)
!4609 = !DILocation(line: 658, column: 1, scope: !4533)
!4610 = distinct !DISubprogram(name: "image_init_color_management", scope: !3, file: !3, line: 592, type: !3256, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!4611 = !DILocalVariable(name: "ima", arg: 1, scope: !4610, file: !3, line: 592, type: !2937)
!4612 = !DILocation(line: 592, column: 48, scope: !4610)
!4613 = !DILocalVariable(name: "ibuf", scope: !4610, file: !3, line: 594, type: !2997)
!4614 = !DILocation(line: 594, column: 9, scope: !4610)
!4615 = !DILocalVariable(name: "name", scope: !4610, file: !3, line: 595, type: !213)
!4616 = !DILocation(line: 595, column: 7, scope: !4610)
!4617 = !DILocation(line: 597, column: 33, scope: !4610)
!4618 = !DILocation(line: 597, column: 38, scope: !4610)
!4619 = !DILocation(line: 597, column: 2, scope: !4610)
!4620 = !DILocation(line: 600, column: 25, scope: !4610)
!4621 = !DILocation(line: 600, column: 62, scope: !4610)
!4622 = !DILocation(line: 600, column: 67, scope: !4610)
!4623 = !DILocation(line: 600, column: 87, scope: !4610)
!4624 = !DILocation(line: 600, column: 9, scope: !4610)
!4625 = !DILocation(line: 600, column: 7, scope: !4610)
!4626 = !DILocation(line: 602, column: 6, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4610, file: !3, line: 602, column: 6)
!4628 = !DILocation(line: 602, column: 6, scope: !4610)
!4629 = !DILocation(line: 603, column: 7, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4631, file: !3, line: 603, column: 7)
!4631 = distinct !DILexicalBlock(scope: !4627, file: !3, line: 602, column: 12)
!4632 = !DILocation(line: 603, column: 13, scope: !4630)
!4633 = !DILocation(line: 603, column: 19, scope: !4630)
!4634 = !DILocation(line: 603, column: 7, scope: !4631)
!4635 = !DILocation(line: 604, column: 4, scope: !4630)
!4636 = !DILocation(line: 604, column: 9, scope: !4630)
!4637 = !DILocation(line: 604, column: 20, scope: !4630)
!4638 = !DILocation(line: 606, column: 4, scope: !4630)
!4639 = !DILocation(line: 606, column: 9, scope: !4630)
!4640 = !DILocation(line: 606, column: 20, scope: !4630)
!4641 = !DILocation(line: 608, column: 17, scope: !4631)
!4642 = !DILocation(line: 608, column: 3, scope: !4631)
!4643 = !DILocation(line: 609, column: 2, scope: !4631)
!4644 = !DILocation(line: 610, column: 1, scope: !4610)
!4645 = distinct !DISubprogram(name: "BKE_image_load_exists", scope: !3, file: !3, line: 664, type: !4646, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!4646 = !DISubroutineType(types: !4647)
!4647 = !{!190, !972}
!4648 = !DILocalVariable(name: "filepath", arg: 1, scope: !4645, file: !3, line: 664, type: !972)
!4649 = !DILocation(line: 664, column: 42, scope: !4645)
!4650 = !DILocalVariable(name: "ima", scope: !4645, file: !3, line: 666, type: !2937)
!4651 = !DILocation(line: 666, column: 9, scope: !4645)
!4652 = !DILocalVariable(name: "str", scope: !4645, file: !3, line: 667, type: !213)
!4653 = !DILocation(line: 667, column: 7, scope: !4645)
!4654 = !DILocalVariable(name: "strtest", scope: !4645, file: !3, line: 667, type: !213)
!4655 = !DILocation(line: 667, column: 22, scope: !4645)
!4656 = !DILocation(line: 669, column: 14, scope: !4645)
!4657 = !DILocation(line: 669, column: 19, scope: !4645)
!4658 = !DILocation(line: 669, column: 2, scope: !4645)
!4659 = !DILocation(line: 670, column: 15, scope: !4645)
!4660 = !DILocation(line: 670, column: 22, scope: !4645)
!4661 = !DILocation(line: 670, column: 28, scope: !4645)
!4662 = !DILocation(line: 670, column: 20, scope: !4645)
!4663 = !DILocation(line: 670, column: 2, scope: !4645)
!4664 = !DILocation(line: 673, column: 15, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 673, column: 2)
!4666 = !DILocation(line: 673, column: 21, scope: !4665)
!4667 = !DILocation(line: 673, column: 27, scope: !4665)
!4668 = !DILocation(line: 673, column: 13, scope: !4665)
!4669 = !DILocation(line: 673, column: 11, scope: !4665)
!4670 = !DILocation(line: 673, column: 7, scope: !4665)
!4671 = !DILocation(line: 673, column: 34, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4665, file: !3, line: 673, column: 2)
!4673 = !DILocation(line: 673, column: 2, scope: !4665)
!4674 = !DILocation(line: 674, column: 7, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 674, column: 7)
!4676 = distinct !DILexicalBlock(scope: !4672, file: !3, line: 673, column: 59)
!4677 = !DILocation(line: 674, column: 12, scope: !4675)
!4678 = !DILocation(line: 674, column: 19, scope: !4675)
!4679 = !DILocation(line: 674, column: 37, scope: !4675)
!4680 = !DILocation(line: 674, column: 40, scope: !4675)
!4681 = !DILocation(line: 674, column: 45, scope: !4675)
!4682 = !DILocation(line: 674, column: 52, scope: !4675)
!4683 = !DILocation(line: 674, column: 7, scope: !4676)
!4684 = !DILocation(line: 675, column: 16, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 674, column: 74)
!4686 = !DILocation(line: 675, column: 25, scope: !4685)
!4687 = !DILocation(line: 675, column: 30, scope: !4685)
!4688 = !DILocation(line: 675, column: 4, scope: !4685)
!4689 = !DILocation(line: 676, column: 17, scope: !4685)
!4690 = !DILocation(line: 676, column: 26, scope: !4685)
!4691 = !DILocation(line: 676, column: 4, scope: !4685)
!4692 = !DILocation(line: 678, column: 21, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4685, file: !3, line: 678, column: 8)
!4694 = !DILocation(line: 678, column: 30, scope: !4693)
!4695 = !DILocation(line: 678, column: 8, scope: !4693)
!4696 = !DILocation(line: 678, column: 35, scope: !4693)
!4697 = !DILocation(line: 678, column: 8, scope: !4685)
!4698 = !DILocation(line: 679, column: 9, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4700, file: !3, line: 679, column: 9)
!4700 = distinct !DILexicalBlock(scope: !4693, file: !3, line: 678, column: 41)
!4701 = !DILocation(line: 679, column: 14, scope: !4699)
!4702 = !DILocation(line: 679, column: 19, scope: !4699)
!4703 = !DILocation(line: 679, column: 27, scope: !4699)
!4704 = !DILocation(line: 679, column: 30, scope: !4699)
!4705 = !DILocation(line: 679, column: 35, scope: !4699)
!4706 = !DILocation(line: 679, column: 38, scope: !4699)
!4707 = !DILocation(line: 679, column: 41, scope: !4699)
!4708 = !DILocation(line: 679, column: 9, scope: !4700)
!4709 = !DILocation(line: 680, column: 18, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4699, file: !3, line: 679, column: 47)
!4711 = !DILocation(line: 680, column: 23, scope: !4710)
!4712 = !DILocation(line: 680, column: 29, scope: !4710)
!4713 = !DILocation(line: 680, column: 6, scope: !4710)
!4714 = !DILocation(line: 681, column: 6, scope: !4710)
!4715 = !DILocation(line: 681, column: 11, scope: !4710)
!4716 = !DILocation(line: 681, column: 14, scope: !4710)
!4717 = !DILocation(line: 681, column: 16, scope: !4710)
!4718 = !DILocation(line: 682, column: 10, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4710, file: !3, line: 682, column: 10)
!4720 = !DILocation(line: 682, column: 15, scope: !4719)
!4721 = !DILocation(line: 682, column: 18, scope: !4719)
!4722 = !DILocation(line: 682, column: 10, scope: !4710)
!4723 = !DILocation(line: 683, column: 7, scope: !4719)
!4724 = !DILocation(line: 683, column: 12, scope: !4719)
!4725 = !DILocation(line: 683, column: 15, scope: !4719)
!4726 = !DILocation(line: 685, column: 13, scope: !4710)
!4727 = !DILocation(line: 685, column: 6, scope: !4710)
!4728 = !DILocation(line: 687, column: 4, scope: !4700)
!4729 = !DILocation(line: 688, column: 3, scope: !4685)
!4730 = !DILocation(line: 689, column: 2, scope: !4676)
!4731 = !DILocation(line: 673, column: 45, scope: !4672)
!4732 = !DILocation(line: 673, column: 50, scope: !4672)
!4733 = !DILocation(line: 673, column: 53, scope: !4672)
!4734 = !DILocation(line: 673, column: 43, scope: !4672)
!4735 = !DILocation(line: 673, column: 2, scope: !4672)
!4736 = distinct !{!4736, !4673, !4737}
!4737 = !DILocation(line: 689, column: 2, scope: !4665)
!4738 = !DILocation(line: 691, column: 26, scope: !4645)
!4739 = !DILocation(line: 691, column: 32, scope: !4645)
!4740 = !DILocation(line: 691, column: 9, scope: !4645)
!4741 = !DILocation(line: 691, column: 2, scope: !4645)
!4742 = !DILocation(line: 692, column: 1, scope: !4645)
!4743 = distinct !DISubprogram(name: "BKE_image_add_generated", scope: !3, file: !3, line: 760, type: !4744, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!4744 = !DISubroutineType(types: !4745)
!4745 = !{!190, !3367, !7, !7, !972, !142, !142, !232, !3581}
!4746 = !DILocalVariable(name: "bmain", arg: 1, scope: !4743, file: !3, line: 760, type: !3367)
!4747 = !DILocation(line: 760, column: 38, scope: !4743)
!4748 = !DILocalVariable(name: "width", arg: 2, scope: !4743, file: !3, line: 760, type: !7)
!4749 = !DILocation(line: 760, column: 58, scope: !4743)
!4750 = !DILocalVariable(name: "height", arg: 3, scope: !4743, file: !3, line: 760, type: !7)
!4751 = !DILocation(line: 760, column: 78, scope: !4743)
!4752 = !DILocalVariable(name: "name", arg: 4, scope: !4743, file: !3, line: 760, type: !972)
!4753 = !DILocation(line: 760, column: 98, scope: !4743)
!4754 = !DILocalVariable(name: "depth", arg: 5, scope: !4743, file: !3, line: 760, type: !142)
!4755 = !DILocation(line: 760, column: 108, scope: !4743)
!4756 = !DILocalVariable(name: "floatbuf", arg: 6, scope: !4743, file: !3, line: 760, type: !142)
!4757 = !DILocation(line: 760, column: 119, scope: !4743)
!4758 = !DILocalVariable(name: "gen_type", arg: 7, scope: !4743, file: !3, line: 760, type: !232)
!4759 = !DILocation(line: 760, column: 135, scope: !4743)
!4760 = !DILocalVariable(name: "color", arg: 8, scope: !4743, file: !3, line: 760, type: !3581)
!4761 = !DILocation(line: 760, column: 157, scope: !4743)
!4762 = !DILocalVariable(name: "ima", scope: !4743, file: !3, line: 763, type: !2937)
!4763 = !DILocation(line: 763, column: 9, scope: !4743)
!4764 = !DILocation(line: 763, column: 27, scope: !4743)
!4765 = !DILocation(line: 763, column: 34, scope: !4743)
!4766 = !DILocation(line: 763, column: 15, scope: !4743)
!4767 = !DILocation(line: 765, column: 6, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 765, column: 6)
!4769 = !DILocation(line: 765, column: 6, scope: !4743)
!4770 = !DILocalVariable(name: "ibuf", scope: !4771, file: !3, line: 766, type: !2997)
!4771 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 765, column: 11)
!4772 = !DILocation(line: 766, column: 10, scope: !4771)
!4773 = !DILocation(line: 769, column: 16, scope: !4771)
!4774 = !DILocation(line: 769, column: 3, scope: !4771)
!4775 = !DILocation(line: 769, column: 8, scope: !4771)
!4776 = !DILocation(line: 769, column: 14, scope: !4771)
!4777 = !DILocation(line: 770, column: 16, scope: !4771)
!4778 = !DILocation(line: 770, column: 3, scope: !4771)
!4779 = !DILocation(line: 770, column: 8, scope: !4771)
!4780 = !DILocation(line: 770, column: 14, scope: !4771)
!4781 = !DILocation(line: 771, column: 19, scope: !4771)
!4782 = !DILocation(line: 771, column: 3, scope: !4771)
!4783 = !DILocation(line: 771, column: 8, scope: !4771)
!4784 = !DILocation(line: 771, column: 17, scope: !4771)
!4785 = !DILocation(line: 772, column: 21, scope: !4771)
!4786 = !DILocation(line: 772, column: 3, scope: !4771)
!4787 = !DILocation(line: 772, column: 8, scope: !4771)
!4788 = !DILocation(line: 772, column: 17, scope: !4771)
!4789 = !DILocation(line: 773, column: 20, scope: !4771)
!4790 = !DILocation(line: 773, column: 3, scope: !4771)
!4791 = !DILocation(line: 773, column: 8, scope: !4771)
!4792 = !DILocation(line: 773, column: 18, scope: !4771)
!4793 = !DILocation(line: 774, column: 14, scope: !4771)
!4794 = !DILocation(line: 774, column: 19, scope: !4771)
!4795 = !DILocation(line: 774, column: 30, scope: !4771)
!4796 = !DILocation(line: 774, column: 3, scope: !4771)
!4797 = !DILocation(line: 776, column: 24, scope: !4771)
!4798 = !DILocation(line: 776, column: 31, scope: !4771)
!4799 = !DILocation(line: 776, column: 39, scope: !4771)
!4800 = !DILocation(line: 776, column: 44, scope: !4771)
!4801 = !DILocation(line: 776, column: 50, scope: !4771)
!4802 = !DILocation(line: 776, column: 57, scope: !4771)
!4803 = !DILocation(line: 776, column: 67, scope: !4771)
!4804 = !DILocation(line: 776, column: 77, scope: !4771)
!4805 = !DILocation(line: 776, column: 85, scope: !4771)
!4806 = !DILocation(line: 776, column: 90, scope: !4771)
!4807 = !DILocation(line: 776, column: 10, scope: !4771)
!4808 = !DILocation(line: 776, column: 8, scope: !4771)
!4809 = !DILocation(line: 777, column: 21, scope: !4771)
!4810 = !DILocation(line: 777, column: 26, scope: !4771)
!4811 = !DILocation(line: 777, column: 3, scope: !4771)
!4812 = !DILocation(line: 780, column: 17, scope: !4771)
!4813 = !DILocation(line: 780, column: 3, scope: !4771)
!4814 = !DILocation(line: 782, column: 3, scope: !4771)
!4815 = !DILocation(line: 782, column: 8, scope: !4771)
!4816 = !DILocation(line: 782, column: 11, scope: !4771)
!4817 = !DILocation(line: 783, column: 2, scope: !4771)
!4818 = !DILocation(line: 785, column: 9, scope: !4743)
!4819 = !DILocation(line: 785, column: 2, scope: !4743)
!4820 = distinct !DISubprogram(name: "add_ibuf_size", scope: !3, file: !3, line: 694, type: !4821, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!4821 = !DISubroutineType(types: !4822)
!4822 = !{!2997, !7, !7, !972, !142, !142, !232, !3581, !4823}
!4823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64)
!4824 = !DILocalVariable(name: "width", arg: 1, scope: !4820, file: !3, line: 694, type: !7)
!4825 = !DILocation(line: 694, column: 42, scope: !4820)
!4826 = !DILocalVariable(name: "height", arg: 2, scope: !4820, file: !3, line: 694, type: !7)
!4827 = !DILocation(line: 694, column: 62, scope: !4820)
!4828 = !DILocalVariable(name: "name", arg: 3, scope: !4820, file: !3, line: 694, type: !972)
!4829 = !DILocation(line: 694, column: 82, scope: !4820)
!4830 = !DILocalVariable(name: "depth", arg: 4, scope: !4820, file: !3, line: 694, type: !142)
!4831 = !DILocation(line: 694, column: 92, scope: !4820)
!4832 = !DILocalVariable(name: "floatbuf", arg: 5, scope: !4820, file: !3, line: 694, type: !142)
!4833 = !DILocation(line: 694, column: 103, scope: !4820)
!4834 = !DILocalVariable(name: "gen_type", arg: 6, scope: !4820, file: !3, line: 694, type: !232)
!4835 = !DILocation(line: 694, column: 119, scope: !4820)
!4836 = !DILocalVariable(name: "color", arg: 7, scope: !4820, file: !3, line: 695, type: !3581)
!4837 = !DILocation(line: 695, column: 41, scope: !4820)
!4838 = !DILocalVariable(name: "colorspace_settings", arg: 8, scope: !4820, file: !3, line: 695, type: !4823)
!4839 = !DILocation(line: 695, column: 83, scope: !4820)
!4840 = !DILocalVariable(name: "ibuf", scope: !4820, file: !3, line: 697, type: !2997)
!4841 = !DILocation(line: 697, column: 9, scope: !4820)
!4842 = !DILocalVariable(name: "rect", scope: !4820, file: !3, line: 698, type: !1269)
!4843 = !DILocation(line: 698, column: 17, scope: !4820)
!4844 = !DILocalVariable(name: "rect_float", scope: !4820, file: !3, line: 699, type: !293)
!4845 = !DILocation(line: 699, column: 9, scope: !4820)
!4846 = !DILocation(line: 701, column: 6, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4820, file: !3, line: 701, column: 6)
!4848 = !DILocation(line: 701, column: 6, scope: !4820)
!4849 = !DILocation(line: 702, column: 25, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 701, column: 16)
!4851 = !DILocation(line: 702, column: 32, scope: !4850)
!4852 = !DILocation(line: 702, column: 40, scope: !4850)
!4853 = !DILocation(line: 702, column: 10, scope: !4850)
!4854 = !DILocation(line: 702, column: 8, scope: !4850)
!4855 = !DILocation(line: 704, column: 7, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 704, column: 7)
!4857 = !DILocation(line: 704, column: 28, scope: !4856)
!4858 = !DILocation(line: 704, column: 36, scope: !4856)
!4859 = !DILocation(line: 704, column: 7, scope: !4850)
!4860 = !DILocalVariable(name: "colorspace", scope: !4861, file: !3, line: 705, type: !972)
!4861 = distinct !DILexicalBlock(scope: !4856, file: !3, line: 704, column: 45)
!4862 = !DILocation(line: 705, column: 16, scope: !4861)
!4863 = !DILocation(line: 705, column: 29, scope: !4861)
!4864 = !DILocation(line: 707, column: 16, scope: !4861)
!4865 = !DILocation(line: 707, column: 37, scope: !4861)
!4866 = !DILocation(line: 707, column: 43, scope: !4861)
!4867 = !DILocation(line: 707, column: 4, scope: !4861)
!4868 = !DILocation(line: 708, column: 3, scope: !4861)
!4869 = !DILocation(line: 710, column: 7, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 710, column: 7)
!4871 = !DILocation(line: 710, column: 12, scope: !4870)
!4872 = !DILocation(line: 710, column: 7, scope: !4850)
!4873 = !DILocation(line: 711, column: 17, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4870, file: !3, line: 710, column: 21)
!4875 = !DILocation(line: 711, column: 23, scope: !4874)
!4876 = !DILocation(line: 711, column: 15, scope: !4874)
!4877 = !DILocation(line: 712, column: 38, scope: !4874)
!4878 = !DILocation(line: 712, column: 44, scope: !4874)
!4879 = !DILocation(line: 712, column: 65, scope: !4874)
!4880 = !DILocation(line: 712, column: 4, scope: !4874)
!4881 = !DILocation(line: 713, column: 3, scope: !4874)
!4882 = !DILocation(line: 714, column: 2, scope: !4850)
!4883 = !DILocation(line: 716, column: 25, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 715, column: 7)
!4885 = !DILocation(line: 716, column: 32, scope: !4884)
!4886 = !DILocation(line: 716, column: 40, scope: !4884)
!4887 = !DILocation(line: 716, column: 10, scope: !4884)
!4888 = !DILocation(line: 716, column: 8, scope: !4884)
!4889 = !DILocation(line: 718, column: 7, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 718, column: 7)
!4891 = !DILocation(line: 718, column: 28, scope: !4890)
!4892 = !DILocation(line: 718, column: 36, scope: !4890)
!4893 = !DILocation(line: 718, column: 7, scope: !4884)
!4894 = !DILocalVariable(name: "colorspace", scope: !4895, file: !3, line: 719, type: !972)
!4895 = distinct !DILexicalBlock(scope: !4890, file: !3, line: 718, column: 45)
!4896 = !DILocation(line: 719, column: 16, scope: !4895)
!4897 = !DILocation(line: 719, column: 29, scope: !4895)
!4898 = !DILocation(line: 721, column: 16, scope: !4895)
!4899 = !DILocation(line: 721, column: 37, scope: !4895)
!4900 = !DILocation(line: 721, column: 43, scope: !4895)
!4901 = !DILocation(line: 721, column: 4, scope: !4895)
!4902 = !DILocation(line: 722, column: 3, scope: !4895)
!4903 = !DILocation(line: 724, column: 7, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 724, column: 7)
!4905 = !DILocation(line: 724, column: 12, scope: !4904)
!4906 = !DILocation(line: 724, column: 7, scope: !4884)
!4907 = !DILocation(line: 725, column: 28, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 724, column: 21)
!4909 = !DILocation(line: 725, column: 34, scope: !4908)
!4910 = !DILocation(line: 725, column: 11, scope: !4908)
!4911 = !DILocation(line: 725, column: 9, scope: !4908)
!4912 = !DILocation(line: 726, column: 47, scope: !4908)
!4913 = !DILocation(line: 726, column: 53, scope: !4908)
!4914 = !DILocation(line: 726, column: 74, scope: !4908)
!4915 = !DILocation(line: 726, column: 4, scope: !4908)
!4916 = !DILocation(line: 727, column: 3, scope: !4908)
!4917 = !DILocation(line: 730, column: 7, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4820, file: !3, line: 730, column: 6)
!4919 = !DILocation(line: 730, column: 6, scope: !4820)
!4920 = !DILocation(line: 731, column: 3, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 730, column: 13)
!4922 = !DILocation(line: 734, column: 14, scope: !4820)
!4923 = !DILocation(line: 734, column: 20, scope: !4820)
!4924 = !DILocation(line: 734, column: 26, scope: !4820)
!4925 = !DILocation(line: 734, column: 2, scope: !4820)
!4926 = !DILocation(line: 735, column: 2, scope: !4820)
!4927 = !DILocation(line: 735, column: 8, scope: !4820)
!4928 = !DILocation(line: 735, column: 18, scope: !4820)
!4929 = !DILocation(line: 737, column: 10, scope: !4820)
!4930 = !DILocation(line: 737, column: 2, scope: !4820)
!4931 = !DILocation(line: 739, column: 31, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4820, file: !3, line: 737, column: 20)
!4933 = !DILocation(line: 739, column: 37, scope: !4932)
!4934 = !DILocation(line: 739, column: 49, scope: !4932)
!4935 = !DILocation(line: 739, column: 56, scope: !4932)
!4936 = !DILocation(line: 739, column: 4, scope: !4932)
!4937 = !DILocation(line: 740, column: 4, scope: !4932)
!4938 = !DILocation(line: 742, column: 37, scope: !4932)
!4939 = !DILocation(line: 742, column: 43, scope: !4932)
!4940 = !DILocation(line: 742, column: 55, scope: !4932)
!4941 = !DILocation(line: 742, column: 62, scope: !4932)
!4942 = !DILocation(line: 742, column: 4, scope: !4932)
!4943 = !DILocation(line: 743, column: 4, scope: !4932)
!4944 = !DILocation(line: 745, column: 29, scope: !4932)
!4945 = !DILocation(line: 745, column: 35, scope: !4932)
!4946 = !DILocation(line: 745, column: 47, scope: !4932)
!4947 = !DILocation(line: 745, column: 54, scope: !4932)
!4948 = !DILocation(line: 745, column: 62, scope: !4932)
!4949 = !DILocation(line: 745, column: 4, scope: !4932)
!4950 = !DILocation(line: 746, column: 4, scope: !4932)
!4951 = !DILocation(line: 749, column: 6, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4820, file: !3, line: 749, column: 6)
!4953 = !DILocation(line: 749, column: 6, scope: !4820)
!4954 = !DILocation(line: 752, column: 31, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4952, file: !3, line: 749, column: 18)
!4956 = !DILocation(line: 752, column: 43, scope: !4955)
!4957 = !DILocation(line: 752, column: 55, scope: !4955)
!4958 = !DILocation(line: 752, column: 61, scope: !4955)
!4959 = !DILocation(line: 753, column: 37, scope: !4955)
!4960 = !DILocation(line: 753, column: 43, scope: !4955)
!4961 = !DILocation(line: 753, column: 46, scope: !4955)
!4962 = !DILocation(line: 753, column: 52, scope: !4955)
!4963 = !DILocation(line: 753, column: 55, scope: !4955)
!4964 = !DILocation(line: 753, column: 61, scope: !4955)
!4965 = !DILocation(line: 753, column: 64, scope: !4955)
!4966 = !DILocation(line: 753, column: 70, scope: !4955)
!4967 = !DILocation(line: 752, column: 3, scope: !4955)
!4968 = !DILocation(line: 754, column: 2, scope: !4955)
!4969 = !DILocation(line: 756, column: 9, scope: !4820)
!4970 = !DILocation(line: 756, column: 2, scope: !4820)
!4971 = !DILocation(line: 757, column: 1, scope: !4820)
!4972 = distinct !DISubprogram(name: "image_assign_ibuf", scope: !3, file: !3, line: 346, type: !4973, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!4973 = !DISubroutineType(types: !4974)
!4974 = !{null, !2937, !2997, !142, !142}
!4975 = !DILocalVariable(name: "ima", arg: 1, scope: !4972, file: !3, line: 346, type: !2937)
!4976 = !DILocation(line: 346, column: 38, scope: !4972)
!4977 = !DILocalVariable(name: "ibuf", arg: 2, scope: !4972, file: !3, line: 346, type: !2997)
!4978 = !DILocation(line: 346, column: 50, scope: !4972)
!4979 = !DILocalVariable(name: "index", arg: 3, scope: !4972, file: !3, line: 346, type: !142)
!4980 = !DILocation(line: 346, column: 60, scope: !4972)
!4981 = !DILocalVariable(name: "frame", arg: 4, scope: !4972, file: !3, line: 346, type: !142)
!4982 = !DILocation(line: 346, column: 71, scope: !4972)
!4983 = !DILocation(line: 348, column: 6, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4972, file: !3, line: 348, column: 6)
!4985 = !DILocation(line: 348, column: 6, scope: !4972)
!4986 = !DILocation(line: 349, column: 7, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4988, file: !3, line: 349, column: 7)
!4988 = distinct !DILexicalBlock(scope: !4984, file: !3, line: 348, column: 12)
!4989 = !DILocation(line: 349, column: 13, scope: !4987)
!4990 = !DILocation(line: 349, column: 7, scope: !4988)
!4991 = !DILocation(line: 350, column: 12, scope: !4987)
!4992 = !DILocation(line: 350, column: 10, scope: !4987)
!4993 = !DILocation(line: 350, column: 4, scope: !4987)
!4994 = !DILocation(line: 352, column: 18, scope: !4988)
!4995 = !DILocation(line: 352, column: 23, scope: !4988)
!4996 = !DILocation(line: 352, column: 30, scope: !4988)
!4997 = !DILocation(line: 352, column: 3, scope: !4988)
!4998 = !DILocation(line: 353, column: 2, scope: !4988)
!4999 = !DILocation(line: 354, column: 1, scope: !4972)
!5000 = distinct !DISubprogram(name: "BKE_image_add_from_imbuf", scope: !3, file: !3, line: 789, type: !5001, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5001 = !DISubroutineType(types: !5002)
!5002 = !{!190, !2997}
!5003 = !DILocalVariable(name: "ibuf", arg: 1, scope: !5000, file: !3, line: 789, type: !2997)
!5004 = !DILocation(line: 789, column: 40, scope: !5000)
!5005 = !DILocalVariable(name: "ima", scope: !5000, file: !3, line: 792, type: !2937)
!5006 = !DILocation(line: 792, column: 9, scope: !5000)
!5007 = !DILocation(line: 794, column: 22, scope: !5000)
!5008 = !DILocation(line: 794, column: 46, scope: !5000)
!5009 = !DILocation(line: 794, column: 52, scope: !5000)
!5010 = !DILocation(line: 794, column: 28, scope: !5000)
!5011 = !DILocation(line: 794, column: 8, scope: !5000)
!5012 = !DILocation(line: 794, column: 6, scope: !5000)
!5013 = !DILocation(line: 796, column: 6, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 796, column: 6)
!5015 = !DILocation(line: 796, column: 6, scope: !5000)
!5016 = !DILocation(line: 797, column: 15, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5014, file: !3, line: 796, column: 11)
!5018 = !DILocation(line: 797, column: 20, scope: !5017)
!5019 = !DILocation(line: 797, column: 26, scope: !5017)
!5020 = !DILocation(line: 797, column: 32, scope: !5017)
!5021 = !DILocation(line: 797, column: 3, scope: !5017)
!5022 = !DILocation(line: 798, column: 21, scope: !5017)
!5023 = !DILocation(line: 798, column: 26, scope: !5017)
!5024 = !DILocation(line: 798, column: 3, scope: !5017)
!5025 = !DILocation(line: 799, column: 3, scope: !5017)
!5026 = !DILocation(line: 799, column: 8, scope: !5017)
!5027 = !DILocation(line: 799, column: 11, scope: !5017)
!5028 = !DILocation(line: 800, column: 2, scope: !5017)
!5029 = !DILocation(line: 802, column: 9, scope: !5000)
!5030 = !DILocation(line: 802, column: 2, scope: !5000)
!5031 = distinct !DISubprogram(name: "BKE_image_memorypack", scope: !3, file: !3, line: 806, type: !3256, scopeLine: 807, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5032 = !DILocalVariable(name: "ima", arg: 1, scope: !5031, file: !3, line: 806, type: !2937)
!5033 = !DILocation(line: 806, column: 34, scope: !5031)
!5034 = !DILocalVariable(name: "ibuf", scope: !5031, file: !3, line: 808, type: !2997)
!5035 = !DILocation(line: 808, column: 9, scope: !5031)
!5036 = !DILocation(line: 808, column: 54, scope: !5031)
!5037 = !DILocation(line: 808, column: 16, scope: !5031)
!5038 = !DILocation(line: 810, column: 6, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 810, column: 6)
!5040 = !DILocation(line: 810, column: 11, scope: !5039)
!5041 = !DILocation(line: 810, column: 6, scope: !5031)
!5042 = !DILocation(line: 811, column: 3, scope: !5039)
!5043 = !DILocation(line: 812, column: 6, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 812, column: 6)
!5045 = !DILocation(line: 812, column: 11, scope: !5044)
!5046 = !DILocation(line: 812, column: 6, scope: !5031)
!5047 = !DILocation(line: 813, column: 18, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 812, column: 23)
!5049 = !DILocation(line: 813, column: 23, scope: !5048)
!5050 = !DILocation(line: 813, column: 3, scope: !5048)
!5051 = !DILocation(line: 814, column: 3, scope: !5048)
!5052 = !DILocation(line: 814, column: 8, scope: !5048)
!5053 = !DILocation(line: 814, column: 19, scope: !5048)
!5054 = !DILocation(line: 815, column: 2, scope: !5048)
!5055 = !DILocation(line: 817, column: 2, scope: !5031)
!5056 = !DILocation(line: 817, column: 8, scope: !5031)
!5057 = !DILocation(line: 817, column: 14, scope: !5031)
!5058 = !DILocation(line: 818, column: 2, scope: !5031)
!5059 = !DILocation(line: 818, column: 8, scope: !5031)
!5060 = !DILocation(line: 818, column: 15, scope: !5031)
!5061 = !DILocation(line: 820, column: 14, scope: !5031)
!5062 = !DILocation(line: 820, column: 20, scope: !5031)
!5063 = !DILocation(line: 820, column: 26, scope: !5031)
!5064 = !DILocation(line: 820, column: 2, scope: !5031)
!5065 = !DILocation(line: 821, column: 6, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 821, column: 6)
!5067 = !DILocation(line: 821, column: 12, scope: !5066)
!5068 = !DILocation(line: 821, column: 26, scope: !5066)
!5069 = !DILocation(line: 821, column: 6, scope: !5031)
!5070 = !DILocation(line: 822, column: 3, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5066, file: !3, line: 821, column: 35)
!5072 = !DILocation(line: 823, column: 2, scope: !5071)
!5073 = !DILocalVariable(name: "pf", scope: !5074, file: !3, line: 825, type: !5075)
!5074 = distinct !DILexicalBlock(scope: !5066, file: !3, line: 824, column: 7)
!5075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5076, size: 64)
!5076 = !DIDerivedType(tag: DW_TAG_typedef, name: "PackedFile", file: !222, line: 41, baseType: !221)
!5077 = !DILocation(line: 825, column: 15, scope: !5074)
!5078 = !DILocation(line: 825, column: 20, scope: !5074)
!5079 = !DILocation(line: 827, column: 14, scope: !5074)
!5080 = !DILocation(line: 827, column: 20, scope: !5074)
!5081 = !DILocation(line: 827, column: 3, scope: !5074)
!5082 = !DILocation(line: 827, column: 7, scope: !5074)
!5083 = !DILocation(line: 827, column: 12, scope: !5074)
!5084 = !DILocation(line: 828, column: 14, scope: !5074)
!5085 = !DILocation(line: 828, column: 20, scope: !5074)
!5086 = !DILocation(line: 828, column: 3, scope: !5074)
!5087 = !DILocation(line: 828, column: 7, scope: !5074)
!5088 = !DILocation(line: 828, column: 12, scope: !5074)
!5089 = !DILocation(line: 829, column: 21, scope: !5074)
!5090 = !DILocation(line: 829, column: 3, scope: !5074)
!5091 = !DILocation(line: 829, column: 8, scope: !5074)
!5092 = !DILocation(line: 829, column: 19, scope: !5074)
!5093 = !DILocation(line: 830, column: 3, scope: !5074)
!5094 = !DILocation(line: 830, column: 9, scope: !5074)
!5095 = !DILocation(line: 830, column: 23, scope: !5074)
!5096 = !DILocation(line: 831, column: 3, scope: !5074)
!5097 = !DILocation(line: 831, column: 9, scope: !5074)
!5098 = !DILocation(line: 831, column: 21, scope: !5074)
!5099 = !DILocation(line: 832, column: 3, scope: !5074)
!5100 = !DILocation(line: 832, column: 9, scope: !5074)
!5101 = !DILocation(line: 832, column: 19, scope: !5074)
!5102 = !DILocation(line: 834, column: 7, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 834, column: 7)
!5104 = !DILocation(line: 834, column: 12, scope: !5103)
!5105 = !DILocation(line: 834, column: 19, scope: !5103)
!5106 = !DILocation(line: 834, column: 7, scope: !5074)
!5107 = !DILocation(line: 835, column: 4, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 834, column: 41)
!5109 = !DILocation(line: 835, column: 9, scope: !5108)
!5110 = !DILocation(line: 835, column: 16, scope: !5108)
!5111 = !DILocation(line: 836, column: 4, scope: !5108)
!5112 = !DILocation(line: 836, column: 9, scope: !5108)
!5113 = !DILocation(line: 836, column: 14, scope: !5108)
!5114 = !DILocation(line: 837, column: 3, scope: !5108)
!5115 = !DILocation(line: 840, column: 16, scope: !5031)
!5116 = !DILocation(line: 840, column: 2, scope: !5031)
!5117 = !DILocation(line: 841, column: 1, scope: !5031)
!5118 = distinct !DISubprogram(name: "image_get_cached_ibuf_for_index_frame", scope: !3, file: !3, line: 336, type: !5119, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5119 = !DISubroutineType(types: !5120)
!5120 = !{!2997, !2937, !142, !142}
!5121 = !DILocalVariable(name: "ima", arg: 1, scope: !5118, file: !3, line: 336, type: !2937)
!5122 = !DILocation(line: 336, column: 60, scope: !5118)
!5123 = !DILocalVariable(name: "index", arg: 2, scope: !5118, file: !3, line: 336, type: !142)
!5124 = !DILocation(line: 336, column: 69, scope: !5118)
!5125 = !DILocalVariable(name: "frame", arg: 3, scope: !5118, file: !3, line: 336, type: !142)
!5126 = !DILocation(line: 336, column: 80, scope: !5118)
!5127 = !DILocation(line: 338, column: 6, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5118, file: !3, line: 338, column: 6)
!5129 = !DILocation(line: 338, column: 12, scope: !5128)
!5130 = !DILocation(line: 338, column: 6, scope: !5118)
!5131 = !DILocation(line: 339, column: 11, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5128, file: !3, line: 338, column: 29)
!5133 = !DILocation(line: 339, column: 9, scope: !5132)
!5134 = !DILocation(line: 340, column: 2, scope: !5132)
!5135 = !DILocation(line: 342, column: 24, scope: !5118)
!5136 = !DILocation(line: 342, column: 29, scope: !5118)
!5137 = !DILocation(line: 342, column: 9, scope: !5118)
!5138 = !DILocation(line: 342, column: 2, scope: !5118)
!5139 = distinct !DISubprogram(name: "BKE_image_tag_time", scope: !3, file: !3, line: 843, type: !3256, scopeLine: 844, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5140 = !DILocalVariable(name: "ima", arg: 1, scope: !5139, file: !3, line: 843, type: !2937)
!5141 = !DILocation(line: 843, column: 32, scope: !5139)
!5142 = !DILocation(line: 845, column: 23, scope: !5139)
!5143 = !DILocation(line: 845, column: 18, scope: !5139)
!5144 = !DILocation(line: 845, column: 2, scope: !5139)
!5145 = !DILocation(line: 845, column: 7, scope: !5139)
!5146 = !DILocation(line: 845, column: 16, scope: !5139)
!5147 = !DILocation(line: 846, column: 1, scope: !5139)
!5148 = distinct !DISubprogram(name: "BKE_image_print_memlist", scope: !3, file: !3, line: 908, type: !2981, scopeLine: 909, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5149 = !DILocalVariable(name: "ima", scope: !5148, file: !3, line: 910, type: !2937)
!5150 = !DILocation(line: 910, column: 9, scope: !5148)
!5151 = !DILocalVariable(name: "size", scope: !5148, file: !3, line: 911, type: !5152)
!5152 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !5153, line: 90, baseType: !737)
!5153 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!5154 = !DILocation(line: 911, column: 12, scope: !5148)
!5155 = !DILocalVariable(name: "totsize", scope: !5148, file: !3, line: 911, type: !5152)
!5156 = !DILocation(line: 911, column: 18, scope: !5148)
!5157 = !DILocation(line: 913, column: 15, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5148, file: !3, line: 913, column: 2)
!5159 = !DILocation(line: 913, column: 21, scope: !5158)
!5160 = !DILocation(line: 913, column: 27, scope: !5158)
!5161 = !DILocation(line: 913, column: 13, scope: !5158)
!5162 = !DILocation(line: 913, column: 11, scope: !5158)
!5163 = !DILocation(line: 913, column: 7, scope: !5158)
!5164 = !DILocation(line: 913, column: 34, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5158, file: !3, line: 913, column: 2)
!5166 = !DILocation(line: 913, column: 2, scope: !5158)
!5167 = !DILocation(line: 914, column: 29, scope: !5165)
!5168 = !DILocation(line: 914, column: 14, scope: !5165)
!5169 = !DILocation(line: 914, column: 11, scope: !5165)
!5170 = !DILocation(line: 914, column: 3, scope: !5165)
!5171 = !DILocation(line: 913, column: 45, scope: !5165)
!5172 = !DILocation(line: 913, column: 50, scope: !5165)
!5173 = !DILocation(line: 913, column: 53, scope: !5165)
!5174 = !DILocation(line: 913, column: 43, scope: !5165)
!5175 = !DILocation(line: 913, column: 2, scope: !5165)
!5176 = distinct !{!5176, !5166, !5177}
!5177 = !DILocation(line: 914, column: 32, scope: !5158)
!5178 = !DILocation(line: 916, column: 56, scope: !5148)
!5179 = !DILocation(line: 916, column: 48, scope: !5148)
!5180 = !DILocation(line: 916, column: 64, scope: !5148)
!5181 = !DILocation(line: 916, column: 2, scope: !5148)
!5182 = !DILocation(line: 918, column: 15, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5148, file: !3, line: 918, column: 2)
!5184 = !DILocation(line: 918, column: 21, scope: !5183)
!5185 = !DILocation(line: 918, column: 27, scope: !5183)
!5186 = !DILocation(line: 918, column: 13, scope: !5183)
!5187 = !DILocation(line: 918, column: 11, scope: !5183)
!5188 = !DILocation(line: 918, column: 7, scope: !5183)
!5189 = !DILocation(line: 918, column: 34, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5183, file: !3, line: 918, column: 2)
!5191 = !DILocation(line: 918, column: 2, scope: !5183)
!5192 = !DILocation(line: 919, column: 25, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 918, column: 59)
!5194 = !DILocation(line: 919, column: 10, scope: !5193)
!5195 = !DILocation(line: 919, column: 8, scope: !5193)
!5196 = !DILocation(line: 921, column: 7, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5193, file: !3, line: 921, column: 7)
!5198 = !DILocation(line: 921, column: 7, scope: !5193)
!5199 = !DILocation(line: 922, column: 32, scope: !5197)
!5200 = !DILocation(line: 922, column: 37, scope: !5197)
!5201 = !DILocation(line: 922, column: 40, scope: !5197)
!5202 = !DILocation(line: 922, column: 45, scope: !5197)
!5203 = !DILocation(line: 922, column: 58, scope: !5197)
!5204 = !DILocation(line: 922, column: 50, scope: !5197)
!5205 = !DILocation(line: 922, column: 63, scope: !5197)
!5206 = !DILocation(line: 922, column: 4, scope: !5197)
!5207 = !DILocation(line: 923, column: 2, scope: !5193)
!5208 = !DILocation(line: 918, column: 45, scope: !5190)
!5209 = !DILocation(line: 918, column: 50, scope: !5190)
!5210 = !DILocation(line: 918, column: 53, scope: !5190)
!5211 = !DILocation(line: 918, column: 43, scope: !5190)
!5212 = !DILocation(line: 918, column: 2, scope: !5190)
!5213 = distinct !{!5213, !5191, !5214}
!5214 = !DILocation(line: 923, column: 2, scope: !5183)
!5215 = !DILocation(line: 924, column: 1, scope: !5148)
!5216 = distinct !DISubprogram(name: "image_mem_size", scope: !3, file: !3, line: 863, type: !5217, scopeLine: 864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5217 = !DISubroutineType(types: !5218)
!5218 = !{!5152, !2937}
!5219 = !DILocalVariable(name: "image", arg: 1, scope: !5216, file: !3, line: 863, type: !2937)
!5220 = !DILocation(line: 863, column: 40, scope: !5216)
!5221 = !DILocalVariable(name: "size", scope: !5216, file: !3, line: 865, type: !5152)
!5222 = !DILocation(line: 865, column: 12, scope: !5216)
!5223 = !DILocation(line: 868, column: 6, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5216, file: !3, line: 868, column: 6)
!5225 = !DILocation(line: 868, column: 13, scope: !5224)
!5226 = !DILocation(line: 868, column: 20, scope: !5224)
!5227 = !DILocation(line: 868, column: 6, scope: !5216)
!5228 = !DILocation(line: 869, column: 3, scope: !5224)
!5229 = !DILocation(line: 871, column: 2, scope: !5216)
!5230 = !DILocation(line: 872, column: 6, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5216, file: !3, line: 872, column: 6)
!5232 = !DILocation(line: 872, column: 13, scope: !5231)
!5233 = !DILocation(line: 872, column: 19, scope: !5231)
!5234 = !DILocation(line: 872, column: 6, scope: !5216)
!5235 = !DILocalVariable(name: "iter", scope: !5236, file: !3, line: 873, type: !4401)
!5236 = distinct !DILexicalBlock(scope: !5231, file: !3, line: 872, column: 28)
!5237 = !DILocation(line: 873, column: 26, scope: !5236)
!5238 = !DILocation(line: 873, column: 56, scope: !5236)
!5239 = !DILocation(line: 873, column: 63, scope: !5236)
!5240 = !DILocation(line: 873, column: 33, scope: !5236)
!5241 = !DILocation(line: 875, column: 3, scope: !5236)
!5242 = !DILocation(line: 875, column: 35, scope: !5236)
!5243 = !DILocation(line: 875, column: 11, scope: !5236)
!5244 = !DILocation(line: 875, column: 10, scope: !5236)
!5245 = !DILocalVariable(name: "ibuf", scope: !5246, file: !3, line: 876, type: !2997)
!5246 = distinct !DILexicalBlock(scope: !5236, file: !3, line: 875, column: 42)
!5247 = !DILocation(line: 876, column: 11, scope: !5246)
!5248 = !DILocation(line: 876, column: 46, scope: !5246)
!5249 = !DILocation(line: 876, column: 18, scope: !5246)
!5250 = !DILocalVariable(name: "ibufm", scope: !5246, file: !3, line: 877, type: !2997)
!5251 = !DILocation(line: 877, column: 11, scope: !5246)
!5252 = !DILocalVariable(name: "level", scope: !5246, file: !3, line: 878, type: !142)
!5253 = !DILocation(line: 878, column: 8, scope: !5246)
!5254 = !DILocation(line: 880, column: 8, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 880, column: 8)
!5256 = !DILocation(line: 880, column: 14, scope: !5255)
!5257 = !DILocation(line: 880, column: 8, scope: !5246)
!5258 = !DILocation(line: 881, column: 13, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5255, file: !3, line: 880, column: 20)
!5260 = !DILocation(line: 881, column: 28, scope: !5259)
!5261 = !DILocation(line: 881, column: 34, scope: !5259)
!5262 = !DILocation(line: 881, column: 10, scope: !5259)
!5263 = !DILocation(line: 882, column: 4, scope: !5259)
!5264 = !DILocation(line: 883, column: 8, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 883, column: 8)
!5266 = !DILocation(line: 883, column: 14, scope: !5265)
!5267 = !DILocation(line: 883, column: 8, scope: !5246)
!5268 = !DILocation(line: 884, column: 13, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5265, file: !3, line: 883, column: 26)
!5270 = !DILocation(line: 884, column: 28, scope: !5269)
!5271 = !DILocation(line: 884, column: 34, scope: !5269)
!5272 = !DILocation(line: 884, column: 10, scope: !5269)
!5273 = !DILocation(line: 885, column: 4, scope: !5269)
!5274 = !DILocation(line: 887, column: 15, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 887, column: 4)
!5276 = !DILocation(line: 887, column: 9, scope: !5275)
!5277 = !DILocation(line: 887, column: 20, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5275, file: !3, line: 887, column: 4)
!5279 = !DILocation(line: 887, column: 26, scope: !5278)
!5280 = !DILocation(line: 887, column: 4, scope: !5275)
!5281 = !DILocation(line: 888, column: 13, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5278, file: !3, line: 887, column: 55)
!5283 = !DILocation(line: 888, column: 19, scope: !5282)
!5284 = !DILocation(line: 888, column: 26, scope: !5282)
!5285 = !DILocation(line: 888, column: 11, scope: !5282)
!5286 = !DILocation(line: 889, column: 9, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 889, column: 9)
!5288 = !DILocation(line: 889, column: 9, scope: !5282)
!5289 = !DILocation(line: 890, column: 10, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5291, file: !3, line: 890, column: 10)
!5291 = distinct !DILexicalBlock(scope: !5287, file: !3, line: 889, column: 16)
!5292 = !DILocation(line: 890, column: 17, scope: !5290)
!5293 = !DILocation(line: 890, column: 10, scope: !5291)
!5294 = !DILocation(line: 891, column: 15, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5290, file: !3, line: 890, column: 23)
!5296 = !DILocation(line: 891, column: 30, scope: !5295)
!5297 = !DILocation(line: 891, column: 37, scope: !5295)
!5298 = !DILocation(line: 891, column: 12, scope: !5295)
!5299 = !DILocation(line: 892, column: 6, scope: !5295)
!5300 = !DILocation(line: 893, column: 10, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5291, file: !3, line: 893, column: 10)
!5302 = !DILocation(line: 893, column: 17, scope: !5301)
!5303 = !DILocation(line: 893, column: 10, scope: !5291)
!5304 = !DILocation(line: 894, column: 15, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5301, file: !3, line: 893, column: 29)
!5306 = !DILocation(line: 894, column: 30, scope: !5305)
!5307 = !DILocation(line: 894, column: 37, scope: !5305)
!5308 = !DILocation(line: 894, column: 12, scope: !5305)
!5309 = !DILocation(line: 895, column: 6, scope: !5305)
!5310 = !DILocation(line: 896, column: 5, scope: !5291)
!5311 = !DILocation(line: 897, column: 4, scope: !5282)
!5312 = !DILocation(line: 887, column: 51, scope: !5278)
!5313 = !DILocation(line: 887, column: 4, scope: !5278)
!5314 = distinct !{!5314, !5280, !5315}
!5315 = !DILocation(line: 897, column: 4, scope: !5275)
!5316 = !DILocation(line: 899, column: 28, scope: !5246)
!5317 = !DILocation(line: 899, column: 4, scope: !5246)
!5318 = distinct !{!5318, !5241, !5319}
!5319 = !DILocation(line: 900, column: 3, scope: !5236)
!5320 = !DILocation(line: 901, column: 27, scope: !5236)
!5321 = !DILocation(line: 901, column: 3, scope: !5236)
!5322 = !DILocation(line: 902, column: 2, scope: !5236)
!5323 = !DILocation(line: 903, column: 2, scope: !5216)
!5324 = !DILocation(line: 905, column: 9, scope: !5216)
!5325 = !DILocation(line: 905, column: 2, scope: !5216)
!5326 = !DILocation(line: 906, column: 1, scope: !5216)
!5327 = distinct !DISubprogram(name: "BKE_image_free_all_textures", scope: !3, file: !3, line: 931, type: !2981, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5328 = !DILocalVariable(name: "tex", scope: !5327, file: !3, line: 935, type: !3609)
!5329 = !DILocation(line: 935, column: 7, scope: !5327)
!5330 = !DILocalVariable(name: "ima", scope: !5327, file: !3, line: 936, type: !2937)
!5331 = !DILocation(line: 936, column: 9, scope: !5327)
!5332 = !DILocation(line: 941, column: 15, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5327, file: !3, line: 941, column: 2)
!5334 = !DILocation(line: 941, column: 21, scope: !5333)
!5335 = !DILocation(line: 941, column: 27, scope: !5333)
!5336 = !DILocation(line: 941, column: 13, scope: !5333)
!5337 = !DILocation(line: 941, column: 11, scope: !5333)
!5338 = !DILocation(line: 941, column: 7, scope: !5333)
!5339 = !DILocation(line: 941, column: 34, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5333, file: !3, line: 941, column: 2)
!5341 = !DILocation(line: 941, column: 2, scope: !5333)
!5342 = !DILocation(line: 942, column: 3, scope: !5340)
!5343 = !DILocation(line: 942, column: 8, scope: !5340)
!5344 = !DILocation(line: 942, column: 11, scope: !5340)
!5345 = !DILocation(line: 942, column: 16, scope: !5340)
!5346 = !DILocation(line: 941, column: 45, scope: !5340)
!5347 = !DILocation(line: 941, column: 50, scope: !5340)
!5348 = !DILocation(line: 941, column: 53, scope: !5340)
!5349 = !DILocation(line: 941, column: 43, scope: !5340)
!5350 = !DILocation(line: 941, column: 2, scope: !5340)
!5351 = distinct !{!5351, !5341, !5352}
!5352 = !DILocation(line: 942, column: 20, scope: !5333)
!5353 = !DILocation(line: 944, column: 15, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5327, file: !3, line: 944, column: 2)
!5355 = !DILocation(line: 944, column: 21, scope: !5354)
!5356 = !DILocation(line: 944, column: 25, scope: !5354)
!5357 = !DILocation(line: 944, column: 13, scope: !5354)
!5358 = !DILocation(line: 944, column: 11, scope: !5354)
!5359 = !DILocation(line: 944, column: 7, scope: !5354)
!5360 = !DILocation(line: 944, column: 32, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5354, file: !3, line: 944, column: 2)
!5362 = !DILocation(line: 944, column: 2, scope: !5354)
!5363 = !DILocation(line: 945, column: 7, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5361, file: !3, line: 945, column: 7)
!5365 = !DILocation(line: 945, column: 12, scope: !5364)
!5366 = !DILocation(line: 945, column: 7, scope: !5361)
!5367 = !DILocation(line: 946, column: 4, scope: !5364)
!5368 = !DILocation(line: 946, column: 9, scope: !5364)
!5369 = !DILocation(line: 946, column: 14, scope: !5364)
!5370 = !DILocation(line: 946, column: 17, scope: !5364)
!5371 = !DILocation(line: 946, column: 22, scope: !5364)
!5372 = !DILocation(line: 944, column: 43, scope: !5361)
!5373 = !DILocation(line: 944, column: 48, scope: !5361)
!5374 = !DILocation(line: 944, column: 51, scope: !5361)
!5375 = !DILocation(line: 944, column: 41, scope: !5361)
!5376 = !DILocation(line: 944, column: 2, scope: !5361)
!5377 = distinct !{!5377, !5362, !5378}
!5378 = !DILocation(line: 946, column: 25, scope: !5354)
!5379 = !DILocation(line: 948, column: 15, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5327, file: !3, line: 948, column: 2)
!5381 = !DILocation(line: 948, column: 21, scope: !5380)
!5382 = !DILocation(line: 948, column: 27, scope: !5380)
!5383 = !DILocation(line: 948, column: 13, scope: !5380)
!5384 = !DILocation(line: 948, column: 11, scope: !5380)
!5385 = !DILocation(line: 948, column: 7, scope: !5380)
!5386 = !DILocation(line: 948, column: 34, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5380, file: !3, line: 948, column: 2)
!5388 = !DILocation(line: 948, column: 2, scope: !5380)
!5389 = !DILocation(line: 949, column: 7, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 949, column: 7)
!5391 = distinct !DILexicalBlock(scope: !5387, file: !3, line: 948, column: 59)
!5392 = !DILocation(line: 949, column: 12, scope: !5390)
!5393 = !DILocation(line: 949, column: 18, scope: !5390)
!5394 = !DILocation(line: 949, column: 22, scope: !5390)
!5395 = !DILocation(line: 949, column: 27, scope: !5390)
!5396 = !DILocation(line: 949, column: 30, scope: !5390)
!5397 = !DILocation(line: 949, column: 35, scope: !5390)
!5398 = !DILocation(line: 949, column: 7, scope: !5391)
!5399 = !DILocation(line: 954, column: 27, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5390, file: !3, line: 949, column: 48)
!5401 = !DILocation(line: 954, column: 32, scope: !5400)
!5402 = !DILocation(line: 954, column: 4, scope: !5400)
!5403 = !DILocation(line: 959, column: 3, scope: !5400)
!5404 = !DILocation(line: 960, column: 2, scope: !5391)
!5405 = !DILocation(line: 948, column: 45, scope: !5387)
!5406 = !DILocation(line: 948, column: 50, scope: !5387)
!5407 = !DILocation(line: 948, column: 53, scope: !5387)
!5408 = !DILocation(line: 948, column: 43, scope: !5387)
!5409 = !DILocation(line: 948, column: 2, scope: !5387)
!5410 = distinct !{!5410, !5388, !5411}
!5411 = !DILocation(line: 960, column: 2, scope: !5380)
!5412 = !DILocation(line: 964, column: 1, scope: !5327)
!5413 = distinct !DISubprogram(name: "imagecache_check_dirty", scope: !3, file: !3, line: 926, type: !5414, scopeLine: 927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5414 = !DISubroutineType(types: !5415)
!5415 = !{!1231, !2997, !177, !177}
!5416 = !DILocalVariable(name: "ibuf", arg: 1, scope: !5413, file: !3, line: 926, type: !2997)
!5417 = !DILocation(line: 926, column: 43, scope: !5413)
!5418 = !DILocalVariable(name: "UNUSED_userkey", arg: 2, scope: !5413, file: !3, line: 926, type: !177)
!5419 = !DILocation(line: 926, column: 55, scope: !5413)
!5420 = !DILocalVariable(name: "UNUSED_userdata", arg: 3, scope: !5413, file: !3, line: 926, type: !177)
!5421 = !DILocation(line: 926, column: 78, scope: !5413)
!5422 = !DILocation(line: 928, column: 10, scope: !5413)
!5423 = !DILocation(line: 928, column: 16, scope: !5413)
!5424 = !DILocation(line: 928, column: 26, scope: !5413)
!5425 = !DILocation(line: 928, column: 44, scope: !5413)
!5426 = !DILocation(line: 928, column: 9, scope: !5413)
!5427 = !DILocation(line: 928, column: 2, scope: !5413)
!5428 = distinct !DISubprogram(name: "BKE_image_free_anim_ibufs", scope: !3, file: !3, line: 975, type: !2990, scopeLine: 976, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5429 = !DILocalVariable(name: "ima", arg: 1, scope: !5428, file: !3, line: 975, type: !2937)
!5430 = !DILocation(line: 975, column: 39, scope: !5428)
!5431 = !DILocalVariable(name: "except_frame", arg: 2, scope: !5428, file: !3, line: 975, type: !142)
!5432 = !DILocation(line: 975, column: 48, scope: !5428)
!5433 = !DILocation(line: 977, column: 2, scope: !5428)
!5434 = !DILocation(line: 978, column: 6, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5428, file: !3, line: 978, column: 6)
!5436 = !DILocation(line: 978, column: 11, scope: !5435)
!5437 = !DILocation(line: 978, column: 17, scope: !5435)
!5438 = !DILocation(line: 978, column: 6, scope: !5428)
!5439 = !DILocation(line: 979, column: 26, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 978, column: 26)
!5441 = !DILocation(line: 979, column: 31, scope: !5440)
!5442 = !DILocation(line: 979, column: 66, scope: !5440)
!5443 = !DILocation(line: 979, column: 3, scope: !5440)
!5444 = !DILocation(line: 980, column: 2, scope: !5440)
!5445 = !DILocation(line: 981, column: 2, scope: !5428)
!5446 = !DILocation(line: 982, column: 1, scope: !5428)
!5447 = distinct !DISubprogram(name: "imagecache_check_free_anim", scope: !3, file: !3, line: 966, type: !5414, scopeLine: 967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5448 = !DILocalVariable(name: "ibuf", arg: 1, scope: !5447, file: !3, line: 966, type: !2997)
!5449 = !DILocation(line: 966, column: 47, scope: !5447)
!5450 = !DILocalVariable(name: "UNUSED_userkey", arg: 2, scope: !5447, file: !3, line: 966, type: !177)
!5451 = !DILocation(line: 966, column: 59, scope: !5447)
!5452 = !DILocalVariable(name: "userdata", arg: 3, scope: !5447, file: !3, line: 966, type: !177)
!5453 = !DILocation(line: 966, column: 82, scope: !5447)
!5454 = !DILocalVariable(name: "except_frame", scope: !5447, file: !3, line: 968, type: !142)
!5455 = !DILocation(line: 968, column: 6, scope: !5447)
!5456 = !DILocation(line: 968, column: 29, scope: !5447)
!5457 = !DILocation(line: 968, column: 22, scope: !5447)
!5458 = !DILocation(line: 968, column: 21, scope: !5447)
!5459 = !DILocation(line: 969, column: 10, scope: !5447)
!5460 = !DILocation(line: 969, column: 16, scope: !5447)
!5461 = !DILocation(line: 969, column: 26, scope: !5447)
!5462 = !DILocation(line: 969, column: 44, scope: !5447)
!5463 = !DILocation(line: 969, column: 49, scope: !5447)
!5464 = !DILocation(line: 970, column: 10, scope: !5447)
!5465 = !DILocation(line: 970, column: 16, scope: !5447)
!5466 = !DILocation(line: 970, column: 22, scope: !5447)
!5467 = !DILocation(line: 970, column: 39, scope: !5447)
!5468 = !DILocation(line: 971, column: 10, scope: !5447)
!5469 = !DILocation(line: 971, column: 26, scope: !5447)
!5470 = !DILocation(line: 971, column: 23, scope: !5447)
!5471 = !DILocation(line: 0, scope: !5447)
!5472 = !DILocation(line: 969, column: 9, scope: !5447)
!5473 = !DILocation(line: 969, column: 2, scope: !5447)
!5474 = distinct !DISubprogram(name: "BKE_image_all_free_anim_ibufs", scope: !3, file: !3, line: 984, type: !5475, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5475 = !DISubroutineType(types: !5476)
!5476 = !{null, !142}
!5477 = !DILocalVariable(name: "cfra", arg: 1, scope: !5474, file: !3, line: 984, type: !142)
!5478 = !DILocation(line: 984, column: 40, scope: !5474)
!5479 = !DILocalVariable(name: "ima", scope: !5474, file: !3, line: 986, type: !2937)
!5480 = !DILocation(line: 986, column: 9, scope: !5474)
!5481 = !DILocation(line: 988, column: 15, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5474, file: !3, line: 988, column: 2)
!5483 = !DILocation(line: 988, column: 21, scope: !5482)
!5484 = !DILocation(line: 988, column: 27, scope: !5482)
!5485 = !DILocation(line: 988, column: 13, scope: !5482)
!5486 = !DILocation(line: 988, column: 11, scope: !5482)
!5487 = !DILocation(line: 988, column: 7, scope: !5482)
!5488 = !DILocation(line: 988, column: 34, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5482, file: !3, line: 988, column: 2)
!5490 = !DILocation(line: 988, column: 2, scope: !5482)
!5491 = !DILocation(line: 989, column: 29, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 989, column: 7)
!5493 = !DILocation(line: 989, column: 7, scope: !5492)
!5494 = !DILocation(line: 989, column: 7, scope: !5489)
!5495 = !DILocation(line: 990, column: 30, scope: !5492)
!5496 = !DILocation(line: 990, column: 35, scope: !5492)
!5497 = !DILocation(line: 990, column: 4, scope: !5492)
!5498 = !DILocation(line: 989, column: 32, scope: !5492)
!5499 = !DILocation(line: 988, column: 45, scope: !5489)
!5500 = !DILocation(line: 988, column: 50, scope: !5489)
!5501 = !DILocation(line: 988, column: 53, scope: !5489)
!5502 = !DILocation(line: 988, column: 43, scope: !5489)
!5503 = !DILocation(line: 988, column: 2, scope: !5489)
!5504 = distinct !{!5504, !5490, !5505}
!5505 = !DILocation(line: 990, column: 39, scope: !5482)
!5506 = !DILocation(line: 991, column: 1, scope: !5474)
!5507 = distinct !DISubprogram(name: "BKE_image_is_animated", scope: !3, file: !3, line: 3512, type: !5508, scopeLine: 3513, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5508 = !DISubroutineType(types: !5509)
!5509 = !{!1231, !2937}
!5510 = !DILocalVariable(name: "image", arg: 1, scope: !5507, file: !3, line: 3512, type: !2937)
!5511 = !DILocation(line: 3512, column: 35, scope: !5507)
!5512 = !DILocation(line: 3514, column: 9, scope: !5507)
!5513 = !DILocation(line: 3514, column: 2, scope: !5507)
!5514 = distinct !DISubprogram(name: "BKE_imtype_to_ftype", scope: !3, file: !3, line: 996, type: !5515, scopeLine: 997, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5515 = !DISubroutineType(types: !5516)
!5516 = !{!142, !973}
!5517 = !DILocalVariable(name: "imtype", arg: 1, scope: !5514, file: !3, line: 996, type: !973)
!5518 = !DILocation(line: 996, column: 36, scope: !5514)
!5519 = !DILocation(line: 998, column: 6, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5514, file: !3, line: 998, column: 6)
!5521 = !DILocation(line: 998, column: 13, scope: !5520)
!5522 = !DILocation(line: 998, column: 6, scope: !5514)
!5523 = !DILocation(line: 999, column: 3, scope: !5520)
!5524 = !DILocation(line: 1000, column: 11, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 1000, column: 11)
!5526 = !DILocation(line: 1000, column: 18, scope: !5525)
!5527 = !DILocation(line: 1000, column: 11, scope: !5520)
!5528 = !DILocation(line: 1001, column: 3, scope: !5525)
!5529 = !DILocation(line: 1002, column: 11, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5525, file: !3, line: 1002, column: 11)
!5531 = !DILocation(line: 1002, column: 18, scope: !5530)
!5532 = !DILocation(line: 1002, column: 11, scope: !5525)
!5533 = !DILocation(line: 1003, column: 3, scope: !5530)
!5534 = !DILocation(line: 1008, column: 11, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5530, file: !3, line: 1008, column: 11)
!5536 = !DILocation(line: 1008, column: 18, scope: !5535)
!5537 = !DILocation(line: 1008, column: 11, scope: !5530)
!5538 = !DILocation(line: 1009, column: 3, scope: !5535)
!5539 = !DILocation(line: 1014, column: 11, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5535, file: !3, line: 1014, column: 11)
!5541 = !DILocation(line: 1014, column: 18, scope: !5540)
!5542 = !DILocation(line: 1014, column: 11, scope: !5535)
!5543 = !DILocation(line: 1015, column: 3, scope: !5540)
!5544 = !DILocation(line: 1020, column: 11, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5540, file: !3, line: 1020, column: 11)
!5546 = !DILocation(line: 1020, column: 18, scope: !5545)
!5547 = !DILocation(line: 1020, column: 42, scope: !5545)
!5548 = !DILocation(line: 1020, column: 45, scope: !5545)
!5549 = !DILocation(line: 1020, column: 52, scope: !5545)
!5550 = !DILocation(line: 1020, column: 11, scope: !5540)
!5551 = !DILocation(line: 1021, column: 3, scope: !5545)
!5552 = !DILocation(line: 1033, column: 3, scope: !5545)
!5553 = !DILocation(line: 1034, column: 1, scope: !5514)
!5554 = distinct !DISubprogram(name: "BKE_ftype_to_imtype", scope: !3, file: !3, line: 1036, type: !5555, scopeLine: 1037, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5555 = !DISubroutineType(types: !5556)
!5556 = !{!214, !5557}
!5557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!5558 = !DILocalVariable(name: "ftype", arg: 1, scope: !5554, file: !3, line: 1036, type: !5557)
!5559 = !DILocation(line: 1036, column: 36, scope: !5554)
!5560 = !DILocation(line: 1038, column: 6, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 1038, column: 6)
!5562 = !DILocation(line: 1038, column: 12, scope: !5561)
!5563 = !DILocation(line: 1038, column: 6, scope: !5554)
!5564 = !DILocation(line: 1039, column: 3, scope: !5561)
!5565 = !DILocation(line: 1040, column: 11, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5561, file: !3, line: 1040, column: 11)
!5567 = !DILocation(line: 1040, column: 17, scope: !5566)
!5568 = !DILocation(line: 1040, column: 11, scope: !5561)
!5569 = !DILocation(line: 1041, column: 3, scope: !5566)
!5570 = !DILocation(line: 1046, column: 11, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 1046, column: 11)
!5572 = !DILocation(line: 1046, column: 17, scope: !5571)
!5573 = !DILocation(line: 1046, column: 11, scope: !5566)
!5574 = !DILocation(line: 1047, column: 3, scope: !5571)
!5575 = !DILocation(line: 1052, column: 11, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 1052, column: 11)
!5577 = !DILocation(line: 1052, column: 17, scope: !5576)
!5578 = !DILocation(line: 1052, column: 11, scope: !5571)
!5579 = !DILocation(line: 1053, column: 3, scope: !5576)
!5580 = !DILocation(line: 1058, column: 11, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5576, file: !3, line: 1058, column: 11)
!5582 = !DILocation(line: 1058, column: 17, scope: !5581)
!5583 = !DILocation(line: 1058, column: 11, scope: !5576)
!5584 = !DILocation(line: 1059, column: 3, scope: !5581)
!5585 = !DILocation(line: 1066, column: 11, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5581, file: !3, line: 1066, column: 11)
!5587 = !DILocation(line: 1066, column: 17, scope: !5586)
!5588 = !DILocation(line: 1066, column: 11, scope: !5581)
!5589 = !DILocation(line: 1067, column: 3, scope: !5586)
!5590 = !DILocation(line: 1068, column: 11, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5586, file: !3, line: 1068, column: 11)
!5592 = !DILocation(line: 1068, column: 17, scope: !5591)
!5593 = !DILocation(line: 1068, column: 11, scope: !5586)
!5594 = !DILocation(line: 1069, column: 3, scope: !5591)
!5595 = !DILocation(line: 1075, column: 3, scope: !5591)
!5596 = !DILocation(line: 1076, column: 1, scope: !5554)
!5597 = distinct !DISubprogram(name: "BKE_imtype_is_movie", scope: !3, file: !3, line: 1079, type: !5598, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5598 = !DISubroutineType(types: !5599)
!5599 = !{!1231, !973}
!5600 = !DILocalVariable(name: "imtype", arg: 1, scope: !5597, file: !3, line: 1079, type: !973)
!5601 = !DILocation(line: 1079, column: 37, scope: !5597)
!5602 = !DILocation(line: 1081, column: 10, scope: !5597)
!5603 = !DILocation(line: 1081, column: 2, scope: !5597)
!5604 = !DILocation(line: 1090, column: 4, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5597, file: !3, line: 1081, column: 18)
!5606 = !DILocation(line: 1092, column: 2, scope: !5597)
!5607 = !DILocation(line: 1093, column: 1, scope: !5597)
!5608 = distinct !DISubprogram(name: "BKE_imtype_supports_zbuf", scope: !3, file: !3, line: 1095, type: !5515, scopeLine: 1096, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5609 = !DILocalVariable(name: "imtype", arg: 1, scope: !5608, file: !3, line: 1095, type: !973)
!5610 = !DILocation(line: 1095, column: 41, scope: !5608)
!5611 = !DILocation(line: 1097, column: 10, scope: !5608)
!5612 = !DILocation(line: 1097, column: 2, scope: !5608)
!5613 = !DILocation(line: 1100, column: 4, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 1097, column: 18)
!5615 = !DILocation(line: 1102, column: 2, scope: !5608)
!5616 = !DILocation(line: 1103, column: 1, scope: !5608)
!5617 = distinct !DISubprogram(name: "BKE_imtype_supports_compress", scope: !3, file: !3, line: 1105, type: !5515, scopeLine: 1106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5618 = !DILocalVariable(name: "imtype", arg: 1, scope: !5617, file: !3, line: 1105, type: !973)
!5619 = !DILocation(line: 1105, column: 45, scope: !5617)
!5620 = !DILocation(line: 1107, column: 10, scope: !5617)
!5621 = !DILocation(line: 1107, column: 2, scope: !5617)
!5622 = !DILocation(line: 1109, column: 4, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5617, file: !3, line: 1107, column: 18)
!5624 = !DILocation(line: 1111, column: 2, scope: !5617)
!5625 = !DILocation(line: 1112, column: 1, scope: !5617)
!5626 = distinct !DISubprogram(name: "BKE_imtype_supports_quality", scope: !3, file: !3, line: 1114, type: !5515, scopeLine: 1115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5627 = !DILocalVariable(name: "imtype", arg: 1, scope: !5626, file: !3, line: 1114, type: !973)
!5628 = !DILocation(line: 1114, column: 44, scope: !5626)
!5629 = !DILocation(line: 1116, column: 10, scope: !5626)
!5630 = !DILocation(line: 1116, column: 2, scope: !5626)
!5631 = !DILocation(line: 1120, column: 4, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 1116, column: 18)
!5633 = !DILocation(line: 1122, column: 2, scope: !5626)
!5634 = !DILocation(line: 1123, column: 1, scope: !5626)
!5635 = distinct !DISubprogram(name: "BKE_imtype_requires_linear_float", scope: !3, file: !3, line: 1125, type: !5515, scopeLine: 1126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5636 = !DILocalVariable(name: "imtype", arg: 1, scope: !5635, file: !3, line: 1125, type: !973)
!5637 = !DILocation(line: 1125, column: 49, scope: !5635)
!5638 = !DILocation(line: 1127, column: 10, scope: !5635)
!5639 = !DILocation(line: 1127, column: 2, scope: !5635)
!5640 = !DILocation(line: 1133, column: 4, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 1127, column: 18)
!5642 = !DILocation(line: 1135, column: 2, scope: !5635)
!5643 = !DILocation(line: 1136, column: 1, scope: !5635)
!5644 = distinct !DISubprogram(name: "BKE_imtype_valid_channels", scope: !3, file: !3, line: 1138, type: !5645, scopeLine: 1139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5645 = !DISubroutineType(types: !5646)
!5646 = !{!214, !973, !1231}
!5647 = !DILocalVariable(name: "imtype", arg: 1, scope: !5644, file: !3, line: 1138, type: !973)
!5648 = !DILocation(line: 1138, column: 43, scope: !5644)
!5649 = !DILocalVariable(name: "write_file", arg: 2, scope: !5644, file: !3, line: 1138, type: !1231)
!5650 = !DILocation(line: 1138, column: 56, scope: !5644)
!5651 = !DILocalVariable(name: "chan_flag", scope: !5644, file: !3, line: 1140, type: !214)
!5652 = !DILocation(line: 1140, column: 7, scope: !5644)
!5653 = !DILocation(line: 1143, column: 10, scope: !5644)
!5654 = !DILocation(line: 1143, column: 2, scope: !5644)
!5655 = !DILocation(line: 1145, column: 8, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 1145, column: 8)
!5657 = distinct !DILexicalBlock(scope: !5644, file: !3, line: 1143, column: 18)
!5658 = !DILocation(line: 1145, column: 8, scope: !5657)
!5659 = !DILocation(line: 1145, column: 20, scope: !5656)
!5660 = !DILocation(line: 1158, column: 14, scope: !5657)
!5661 = !DILocation(line: 1159, column: 4, scope: !5657)
!5662 = !DILocation(line: 1163, column: 10, scope: !5644)
!5663 = !DILocation(line: 1163, column: 2, scope: !5644)
!5664 = !DILocation(line: 1170, column: 14, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5644, file: !3, line: 1163, column: 18)
!5666 = !DILocation(line: 1171, column: 4, scope: !5665)
!5667 = !DILocation(line: 1174, column: 9, scope: !5644)
!5668 = !DILocation(line: 1174, column: 2, scope: !5644)
!5669 = distinct !DISubprogram(name: "BKE_imtype_valid_depths", scope: !3, file: !3, line: 1177, type: !5670, scopeLine: 1178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5670 = !DISubroutineType(types: !5671)
!5671 = !{!214, !973}
!5672 = !DILocalVariable(name: "imtype", arg: 1, scope: !5669, file: !3, line: 1177, type: !973)
!5673 = !DILocation(line: 1177, column: 41, scope: !5669)
!5674 = !DILocation(line: 1179, column: 10, scope: !5669)
!5675 = !DILocation(line: 1179, column: 2, scope: !5669)
!5676 = !DILocation(line: 1181, column: 4, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5669, file: !3, line: 1179, column: 18)
!5678 = !DILocation(line: 1183, column: 4, scope: !5677)
!5679 = !DILocation(line: 1185, column: 4, scope: !5677)
!5680 = !DILocation(line: 1187, column: 4, scope: !5677)
!5681 = !DILocation(line: 1190, column: 4, scope: !5677)
!5682 = !DILocation(line: 1192, column: 4, scope: !5677)
!5683 = !DILocation(line: 1194, column: 4, scope: !5677)
!5684 = !DILocation(line: 1196, column: 4, scope: !5677)
!5685 = !DILocation(line: 1199, column: 4, scope: !5677)
!5686 = !DILocation(line: 1201, column: 1, scope: !5669)
!5687 = distinct !DISubprogram(name: "BKE_imtype_from_arg", scope: !3, file: !3, line: 1206, type: !4510, scopeLine: 1207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5688 = !DILocalVariable(name: "imtype_arg", arg: 1, scope: !5687, file: !3, line: 1206, type: !972)
!5689 = !DILocation(line: 1206, column: 38, scope: !5687)
!5690 = !DILocation(line: 1208, column: 19, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5687, file: !3, line: 1208, column: 11)
!5692 = !DILocation(line: 1208, column: 12, scope: !5691)
!5693 = !DILocation(line: 1208, column: 11, scope: !5687)
!5694 = !DILocation(line: 1208, column: 39, scope: !5691)
!5695 = !DILocation(line: 1209, column: 19, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5691, file: !3, line: 1209, column: 11)
!5697 = !DILocation(line: 1209, column: 12, scope: !5696)
!5698 = !DILocation(line: 1209, column: 11, scope: !5691)
!5699 = !DILocation(line: 1209, column: 40, scope: !5696)
!5700 = !DILocation(line: 1213, column: 19, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5696, file: !3, line: 1213, column: 11)
!5702 = !DILocation(line: 1213, column: 12, scope: !5701)
!5703 = !DILocation(line: 1213, column: 11, scope: !5696)
!5704 = !DILocation(line: 1213, column: 40, scope: !5701)
!5705 = !DILocation(line: 1214, column: 19, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5701, file: !3, line: 1214, column: 11)
!5707 = !DILocation(line: 1214, column: 12, scope: !5706)
!5708 = !DILocation(line: 1214, column: 11, scope: !5701)
!5709 = !DILocation(line: 1214, column: 40, scope: !5706)
!5710 = !DILocation(line: 1215, column: 19, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 1215, column: 11)
!5712 = !DILocation(line: 1215, column: 12, scope: !5711)
!5713 = !DILocation(line: 1215, column: 11, scope: !5706)
!5714 = !DILocation(line: 1215, column: 42, scope: !5711)
!5715 = !DILocation(line: 1216, column: 19, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5711, file: !3, line: 1216, column: 11)
!5717 = !DILocation(line: 1216, column: 12, scope: !5716)
!5718 = !DILocation(line: 1216, column: 11, scope: !5711)
!5719 = !DILocation(line: 1216, column: 42, scope: !5716)
!5720 = !DILocation(line: 1217, column: 19, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 1217, column: 11)
!5722 = !DILocation(line: 1217, column: 12, scope: !5721)
!5723 = !DILocation(line: 1217, column: 11, scope: !5716)
!5724 = !DILocation(line: 1217, column: 43, scope: !5721)
!5725 = !DILocation(line: 1218, column: 19, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5721, file: !3, line: 1218, column: 11)
!5727 = !DILocation(line: 1218, column: 12, scope: !5726)
!5728 = !DILocation(line: 1218, column: 11, scope: !5721)
!5729 = !DILocation(line: 1218, column: 39, scope: !5726)
!5730 = !DILocation(line: 1219, column: 19, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5726, file: !3, line: 1219, column: 11)
!5732 = !DILocation(line: 1219, column: 12, scope: !5731)
!5733 = !DILocation(line: 1219, column: 11, scope: !5726)
!5734 = !DILocation(line: 1219, column: 45, scope: !5731)
!5735 = !DILocation(line: 1220, column: 19, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 1220, column: 11)
!5737 = !DILocation(line: 1220, column: 12, scope: !5736)
!5738 = !DILocation(line: 1220, column: 11, scope: !5731)
!5739 = !DILocation(line: 1220, column: 39, scope: !5736)
!5740 = !DILocation(line: 1231, column: 19, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5736, file: !3, line: 1231, column: 11)
!5742 = !DILocation(line: 1231, column: 12, scope: !5741)
!5743 = !DILocation(line: 1231, column: 11, scope: !5736)
!5744 = !DILocation(line: 1231, column: 40, scope: !5741)
!5745 = !DILocation(line: 1232, column: 19, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 1232, column: 11)
!5747 = !DILocation(line: 1232, column: 12, scope: !5746)
!5748 = !DILocation(line: 1232, column: 11, scope: !5741)
!5749 = !DILocation(line: 1232, column: 47, scope: !5746)
!5750 = !DILocation(line: 1240, column: 7, scope: !5746)
!5751 = !DILocation(line: 1241, column: 1, scope: !5687)
!5752 = distinct !DISubprogram(name: "BKE_add_image_extension", scope: !3, file: !3, line: 1353, type: !5753, scopeLine: 1354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5753 = !DISubroutineType(types: !5754)
!5754 = !{!142, !623, !5755}
!5755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5756, size: 64)
!5756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5757)
!5757 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageFormatData", file: !141, line: 292, baseType: !2238)
!5758 = !DILocalVariable(name: "string", arg: 1, scope: !5752, file: !3, line: 1353, type: !623)
!5759 = !DILocation(line: 1353, column: 35, scope: !5752)
!5760 = !DILocalVariable(name: "im_format", arg: 2, scope: !5752, file: !3, line: 1353, type: !5755)
!5761 = !DILocation(line: 1353, column: 66, scope: !5752)
!5762 = !DILocation(line: 1355, column: 32, scope: !5752)
!5763 = !DILocation(line: 1355, column: 40, scope: !5752)
!5764 = !DILocation(line: 1355, column: 51, scope: !5752)
!5765 = !DILocation(line: 1355, column: 59, scope: !5752)
!5766 = !DILocation(line: 1355, column: 9, scope: !5752)
!5767 = !DILocation(line: 1355, column: 2, scope: !5752)
!5768 = distinct !DISubprogram(name: "do_add_image_extension", scope: !3, file: !3, line: 1243, type: !5769, scopeLine: 1244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5769 = !DISubroutineType(types: !5770)
!5770 = !{!1231, !623, !973, !5755}
!5771 = !DILocalVariable(name: "string", arg: 1, scope: !5768, file: !3, line: 1243, type: !623)
!5772 = !DILocation(line: 1243, column: 42, scope: !5768)
!5773 = !DILocalVariable(name: "imtype", arg: 2, scope: !5768, file: !3, line: 1243, type: !973)
!5774 = !DILocation(line: 1243, column: 61, scope: !5768)
!5775 = !DILocalVariable(name: "im_format", arg: 3, scope: !5768, file: !3, line: 1243, type: !5755)
!5776 = !DILocation(line: 1243, column: 92, scope: !5768)
!5777 = !DILocalVariable(name: "extension", scope: !5768, file: !3, line: 1245, type: !972)
!5778 = !DILocation(line: 1245, column: 14, scope: !5768)
!5779 = !DILocalVariable(name: "extension_test", scope: !5768, file: !3, line: 1246, type: !972)
!5780 = !DILocation(line: 1246, column: 14, scope: !5768)
!5781 = !DILocation(line: 1247, column: 8, scope: !5768)
!5782 = !DILocation(line: 1249, column: 6, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5768, file: !3, line: 1249, column: 6)
!5784 = !DILocation(line: 1249, column: 13, scope: !5783)
!5785 = !DILocation(line: 1249, column: 6, scope: !5768)
!5786 = !DILocation(line: 1250, column: 25, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 1250, column: 7)
!5788 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 1249, column: 35)
!5789 = !DILocation(line: 1250, column: 48, scope: !5787)
!5790 = !DILocation(line: 1250, column: 8, scope: !5787)
!5791 = !DILocation(line: 1250, column: 7, scope: !5788)
!5792 = !DILocation(line: 1251, column: 16, scope: !5787)
!5793 = !DILocation(line: 1251, column: 14, scope: !5787)
!5794 = !DILocation(line: 1251, column: 4, scope: !5787)
!5795 = !DILocation(line: 1252, column: 2, scope: !5788)
!5796 = !DILocation(line: 1253, column: 11, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 1253, column: 11)
!5798 = !DILocation(line: 1253, column: 18, scope: !5797)
!5799 = !DILocation(line: 1253, column: 11, scope: !5783)
!5800 = !DILocation(line: 1254, column: 25, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 1254, column: 7)
!5802 = distinct !DILexicalBlock(scope: !5797, file: !3, line: 1253, column: 40)
!5803 = !DILocation(line: 1254, column: 48, scope: !5801)
!5804 = !DILocation(line: 1254, column: 8, scope: !5801)
!5805 = !DILocation(line: 1254, column: 7, scope: !5802)
!5806 = !DILocation(line: 1255, column: 16, scope: !5801)
!5807 = !DILocation(line: 1255, column: 14, scope: !5801)
!5808 = !DILocation(line: 1255, column: 4, scope: !5801)
!5809 = !DILocation(line: 1256, column: 2, scope: !5802)
!5810 = !DILocation(line: 1263, column: 11, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5797, file: !3, line: 1263, column: 11)
!5812 = !DILocation(line: 1263, column: 11, scope: !5797)
!5813 = !DILocation(line: 1264, column: 25, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5815, file: !3, line: 1264, column: 7)
!5815 = distinct !DILexicalBlock(scope: !5811, file: !3, line: 1263, column: 123)
!5816 = !DILocation(line: 1264, column: 48, scope: !5814)
!5817 = !DILocation(line: 1264, column: 8, scope: !5814)
!5818 = !DILocation(line: 1264, column: 7, scope: !5815)
!5819 = !DILocation(line: 1265, column: 16, scope: !5814)
!5820 = !DILocation(line: 1265, column: 14, scope: !5814)
!5821 = !DILocation(line: 1265, column: 4, scope: !5814)
!5822 = !DILocation(line: 1266, column: 2, scope: !5815)
!5823 = !DILocation(line: 1273, column: 11, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5811, file: !3, line: 1273, column: 11)
!5825 = !DILocation(line: 1273, column: 11, scope: !5811)
!5826 = !DILocation(line: 1274, column: 25, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5828, file: !3, line: 1274, column: 7)
!5828 = distinct !DILexicalBlock(scope: !5824, file: !3, line: 1273, column: 66)
!5829 = !DILocation(line: 1274, column: 48, scope: !5827)
!5830 = !DILocation(line: 1274, column: 8, scope: !5827)
!5831 = !DILocation(line: 1274, column: 7, scope: !5828)
!5832 = !DILocation(line: 1275, column: 16, scope: !5827)
!5833 = !DILocation(line: 1275, column: 14, scope: !5827)
!5834 = !DILocation(line: 1275, column: 4, scope: !5827)
!5835 = !DILocation(line: 1276, column: 2, scope: !5828)
!5836 = !DILocation(line: 1277, column: 11, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5824, file: !3, line: 1277, column: 11)
!5838 = !DILocation(line: 1277, column: 18, scope: !5837)
!5839 = !DILocation(line: 1277, column: 11, scope: !5824)
!5840 = !DILocation(line: 1278, column: 25, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 1278, column: 7)
!5842 = distinct !DILexicalBlock(scope: !5837, file: !3, line: 1277, column: 39)
!5843 = !DILocation(line: 1278, column: 48, scope: !5841)
!5844 = !DILocation(line: 1278, column: 8, scope: !5841)
!5845 = !DILocation(line: 1278, column: 7, scope: !5842)
!5846 = !DILocation(line: 1279, column: 16, scope: !5841)
!5847 = !DILocation(line: 1279, column: 14, scope: !5841)
!5848 = !DILocation(line: 1279, column: 4, scope: !5841)
!5849 = !DILocation(line: 1280, column: 2, scope: !5842)
!5850 = !DILocation(line: 1331, column: 28, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 1331, column: 7)
!5852 = distinct !DILexicalBlock(scope: !5837, file: !3, line: 1330, column: 7)
!5853 = !DILocation(line: 1331, column: 51, scope: !5851)
!5854 = !DILocation(line: 1331, column: 9, scope: !5851)
!5855 = !DILocation(line: 1331, column: 7, scope: !5852)
!5856 = !DILocation(line: 1332, column: 16, scope: !5851)
!5857 = !DILocation(line: 1332, column: 14, scope: !5851)
!5858 = !DILocation(line: 1332, column: 4, scope: !5851)
!5859 = !DILocation(line: 1335, column: 6, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5768, file: !3, line: 1335, column: 6)
!5861 = !DILocation(line: 1335, column: 6, scope: !5768)
!5862 = !DILocation(line: 1338, column: 30, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 1338, column: 7)
!5864 = distinct !DILexicalBlock(scope: !5860, file: !3, line: 1335, column: 17)
!5865 = !DILocation(line: 1338, column: 7, scope: !5863)
!5866 = !DILocation(line: 1338, column: 53, scope: !5863)
!5867 = !DILocation(line: 1339, column: 10, scope: !5863)
!5868 = !DILocation(line: 1339, column: 8, scope: !5863)
!5869 = !DILocation(line: 1339, column: 25, scope: !5863)
!5870 = !DILocation(line: 1339, column: 51, scope: !5863)
!5871 = !DILocation(line: 1339, column: 28, scope: !5863)
!5872 = !DILocation(line: 1338, column: 7, scope: !5864)
!5873 = !DILocation(line: 1341, column: 33, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5863, file: !3, line: 1340, column: 3)
!5875 = !DILocation(line: 1341, column: 51, scope: !5874)
!5876 = !DILocation(line: 1341, column: 11, scope: !5874)
!5877 = !DILocation(line: 1341, column: 4, scope: !5874)
!5878 = !DILocation(line: 1344, column: 32, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5863, file: !3, line: 1343, column: 8)
!5880 = !DILocation(line: 1344, column: 50, scope: !5879)
!5881 = !DILocation(line: 1344, column: 11, scope: !5879)
!5882 = !DILocation(line: 1344, column: 4, scope: !5879)
!5883 = !DILocation(line: 1349, column: 3, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5860, file: !3, line: 1348, column: 7)
!5885 = !DILocation(line: 1351, column: 1, scope: !5768)
!5886 = distinct !DISubprogram(name: "BKE_add_image_extension_from_type", scope: !3, file: !3, line: 1358, type: !5887, scopeLine: 1359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5887 = !DISubroutineType(types: !5888)
!5888 = !{!142, !623, !973}
!5889 = !DILocalVariable(name: "string", arg: 1, scope: !5886, file: !3, line: 1358, type: !623)
!5890 = !DILocation(line: 1358, column: 45, scope: !5886)
!5891 = !DILocalVariable(name: "imtype", arg: 2, scope: !5886, file: !3, line: 1358, type: !973)
!5892 = !DILocation(line: 1358, column: 64, scope: !5886)
!5893 = !DILocation(line: 1360, column: 32, scope: !5886)
!5894 = !DILocation(line: 1360, column: 40, scope: !5886)
!5895 = !DILocation(line: 1360, column: 9, scope: !5886)
!5896 = !DILocation(line: 1360, column: 2, scope: !5886)
!5897 = distinct !DISubprogram(name: "BKE_imformat_defaults", scope: !3, file: !3, line: 1363, type: !5898, scopeLine: 1364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5898 = !DISubroutineType(types: !5899)
!5899 = !{null, !5900}
!5900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5757, size: 64)
!5901 = !DILocalVariable(name: "im_format", arg: 1, scope: !5897, file: !3, line: 1363, type: !5900)
!5902 = !DILocation(line: 1363, column: 45, scope: !5897)
!5903 = !DILocation(line: 1365, column: 9, scope: !5897)
!5904 = !DILocation(line: 1365, column: 2, scope: !5897)
!5905 = !DILocation(line: 1366, column: 2, scope: !5897)
!5906 = !DILocation(line: 1366, column: 13, scope: !5897)
!5907 = !DILocation(line: 1366, column: 20, scope: !5897)
!5908 = !DILocation(line: 1367, column: 2, scope: !5897)
!5909 = !DILocation(line: 1367, column: 13, scope: !5897)
!5910 = !DILocation(line: 1367, column: 20, scope: !5897)
!5911 = !DILocation(line: 1368, column: 2, scope: !5897)
!5912 = !DILocation(line: 1368, column: 13, scope: !5897)
!5913 = !DILocation(line: 1368, column: 19, scope: !5897)
!5914 = !DILocation(line: 1369, column: 2, scope: !5897)
!5915 = !DILocation(line: 1369, column: 13, scope: !5897)
!5916 = !DILocation(line: 1369, column: 21, scope: !5897)
!5917 = !DILocation(line: 1370, column: 2, scope: !5897)
!5918 = !DILocation(line: 1370, column: 13, scope: !5897)
!5919 = !DILocation(line: 1370, column: 22, scope: !5897)
!5920 = !DILocation(line: 1372, column: 43, scope: !5897)
!5921 = !DILocation(line: 1372, column: 54, scope: !5897)
!5922 = !DILocation(line: 1372, column: 2, scope: !5897)
!5923 = !DILocation(line: 1373, column: 40, scope: !5897)
!5924 = !DILocation(line: 1373, column: 51, scope: !5897)
!5925 = !DILocation(line: 1373, column: 2, scope: !5897)
!5926 = !DILocation(line: 1374, column: 1, scope: !5897)
!5927 = distinct !DISubprogram(name: "BKE_imbuf_to_image_format", scope: !3, file: !3, line: 1376, type: !5928, scopeLine: 1377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!5928 = !DISubroutineType(types: !5929)
!5929 = !{null, !5930, !5931}
!5930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 64)
!5931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5932, size: 64)
!5932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2998)
!5933 = !DILocalVariable(name: "im_format", arg: 1, scope: !5927, file: !3, line: 1376, type: !5930)
!5934 = !DILocation(line: 1376, column: 56, scope: !5927)
!5935 = !DILocalVariable(name: "imbuf", arg: 2, scope: !5927, file: !3, line: 1376, type: !5931)
!5936 = !DILocation(line: 1376, column: 80, scope: !5927)
!5937 = !DILocalVariable(name: "ftype", scope: !5927, file: !3, line: 1378, type: !142)
!5938 = !DILocation(line: 1378, column: 6, scope: !5927)
!5939 = !DILocation(line: 1378, column: 21, scope: !5927)
!5940 = !DILocation(line: 1378, column: 28, scope: !5927)
!5941 = !DILocation(line: 1378, column: 34, scope: !5927)
!5942 = !DILocalVariable(name: "custom_flags", scope: !5927, file: !3, line: 1379, type: !142)
!5943 = !DILocation(line: 1379, column: 6, scope: !5927)
!5944 = !DILocation(line: 1379, column: 21, scope: !5927)
!5945 = !DILocation(line: 1379, column: 28, scope: !5927)
!5946 = !DILocation(line: 1379, column: 34, scope: !5927)
!5947 = !DILocation(line: 1381, column: 24, scope: !5927)
!5948 = !DILocation(line: 1381, column: 2, scope: !5927)
!5949 = !DILocation(line: 1385, column: 6, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5927, file: !3, line: 1385, column: 6)
!5951 = !DILocation(line: 1385, column: 12, scope: !5950)
!5952 = !DILocation(line: 1385, column: 6, scope: !5927)
!5953 = !DILocation(line: 1386, column: 3, scope: !5950)
!5954 = !DILocation(line: 1386, column: 14, scope: !5950)
!5955 = !DILocation(line: 1386, column: 21, scope: !5950)
!5956 = !DILocation(line: 1393, column: 11, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5950, file: !3, line: 1393, column: 11)
!5958 = !DILocation(line: 1393, column: 17, scope: !5957)
!5959 = !DILocation(line: 1393, column: 11, scope: !5950)
!5960 = !DILocation(line: 1394, column: 3, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5957, file: !3, line: 1393, column: 25)
!5962 = !DILocation(line: 1394, column: 14, scope: !5961)
!5963 = !DILocation(line: 1394, column: 21, scope: !5961)
!5964 = !DILocation(line: 1396, column: 7, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5961, file: !3, line: 1396, column: 7)
!5966 = !DILocation(line: 1396, column: 20, scope: !5965)
!5967 = !DILocation(line: 1396, column: 7, scope: !5961)
!5968 = !DILocation(line: 1397, column: 4, scope: !5965)
!5969 = !DILocation(line: 1397, column: 15, scope: !5965)
!5970 = !DILocation(line: 1397, column: 21, scope: !5965)
!5971 = !DILocation(line: 1398, column: 2, scope: !5961)
!5972 = !DILocation(line: 1405, column: 11, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5957, file: !3, line: 1405, column: 11)
!5974 = !DILocation(line: 1405, column: 17, scope: !5973)
!5975 = !DILocation(line: 1405, column: 11, scope: !5957)
!5976 = !DILocation(line: 1406, column: 3, scope: !5973)
!5977 = !DILocation(line: 1406, column: 14, scope: !5973)
!5978 = !DILocation(line: 1406, column: 21, scope: !5973)
!5979 = !DILocation(line: 1435, column: 11, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 1435, column: 11)
!5981 = !DILocation(line: 1435, column: 17, scope: !5980)
!5982 = !DILocation(line: 1435, column: 11, scope: !5973)
!5983 = !DILocation(line: 1436, column: 3, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 1435, column: 25)
!5985 = !DILocation(line: 1436, column: 14, scope: !5984)
!5986 = !DILocation(line: 1436, column: 21, scope: !5984)
!5987 = !DILocation(line: 1437, column: 2, scope: !5984)
!5988 = !DILocation(line: 1438, column: 11, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 1438, column: 11)
!5990 = !DILocation(line: 1438, column: 17, scope: !5989)
!5991 = !DILocation(line: 1438, column: 11, scope: !5980)
!5992 = !DILocation(line: 1439, column: 3, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5989, file: !3, line: 1438, column: 28)
!5994 = !DILocation(line: 1439, column: 14, scope: !5993)
!5995 = !DILocation(line: 1439, column: 21, scope: !5993)
!5996 = !DILocation(line: 1440, column: 2, scope: !5993)
!5997 = !DILocation(line: 1471, column: 3, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5989, file: !3, line: 1470, column: 7)
!5999 = !DILocation(line: 1471, column: 14, scope: !5998)
!6000 = !DILocation(line: 1471, column: 21, scope: !5998)
!6001 = !DILocation(line: 1472, column: 24, scope: !5998)
!6002 = !DILocation(line: 1472, column: 37, scope: !5998)
!6003 = !DILocation(line: 1472, column: 3, scope: !5998)
!6004 = !DILocation(line: 1472, column: 14, scope: !5998)
!6005 = !DILocation(line: 1472, column: 22, scope: !5998)
!6006 = !DILocation(line: 1482, column: 10, scope: !5927)
!6007 = !DILocation(line: 1482, column: 17, scope: !5927)
!6008 = !DILocation(line: 1482, column: 2, scope: !5927)
!6009 = !DILocation(line: 1484, column: 11, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !5927, file: !3, line: 1482, column: 27)
!6011 = !DILocation(line: 1484, column: 22, scope: !6010)
!6012 = !DILocation(line: 1484, column: 29, scope: !6010)
!6013 = !DILocation(line: 1485, column: 4, scope: !6010)
!6014 = !DILocation(line: 1486, column: 11, scope: !6010)
!6015 = !DILocation(line: 1486, column: 22, scope: !6010)
!6016 = !DILocation(line: 1486, column: 29, scope: !6010)
!6017 = !DILocation(line: 1487, column: 4, scope: !6010)
!6018 = !DILocation(line: 1488, column: 11, scope: !6010)
!6019 = !DILocation(line: 1488, column: 22, scope: !6010)
!6020 = !DILocation(line: 1488, column: 29, scope: !6010)
!6021 = !DILocation(line: 1489, column: 4, scope: !6010)
!6022 = !DILocation(line: 1490, column: 12, scope: !6010)
!6023 = !DILocation(line: 1490, column: 23, scope: !6010)
!6024 = !DILocation(line: 1490, column: 30, scope: !6010)
!6025 = !DILocation(line: 1491, column: 4, scope: !6010)
!6026 = !DILocation(line: 1494, column: 1, scope: !5927)
!6027 = distinct !DISubprogram(name: "BKE_stamp_buf", scope: !3, file: !3, line: 1636, type: !6028, scopeLine: 1637, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!6028 = !DISubroutineType(types: !6029)
!6029 = !{null, !6030, !6032, !1269, !293, !142, !142, !142}
!6030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6031, size: 64)
!6031 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !141, line: 1299, baseType: !761)
!6032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6033, size: 64)
!6033 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !127, line: 295, baseType: !505)
!6034 = !DILocalVariable(name: "scene", arg: 1, scope: !6027, file: !3, line: 1636, type: !6030)
!6035 = !DILocation(line: 1636, column: 27, scope: !6027)
!6036 = !DILocalVariable(name: "camera", arg: 2, scope: !6027, file: !3, line: 1636, type: !6032)
!6037 = !DILocation(line: 1636, column: 42, scope: !6027)
!6038 = !DILocalVariable(name: "rect", arg: 3, scope: !6027, file: !3, line: 1636, type: !1269)
!6039 = !DILocation(line: 1636, column: 65, scope: !6027)
!6040 = !DILocalVariable(name: "rectf", arg: 4, scope: !6027, file: !3, line: 1636, type: !293)
!6041 = !DILocation(line: 1636, column: 78, scope: !6027)
!6042 = !DILocalVariable(name: "width", arg: 5, scope: !6027, file: !3, line: 1636, type: !142)
!6043 = !DILocation(line: 1636, column: 89, scope: !6027)
!6044 = !DILocalVariable(name: "height", arg: 6, scope: !6027, file: !3, line: 1636, type: !142)
!6045 = !DILocation(line: 1636, column: 100, scope: !6027)
!6046 = !DILocalVariable(name: "channels", arg: 7, scope: !6027, file: !3, line: 1636, type: !142)
!6047 = !DILocation(line: 1636, column: 112, scope: !6027)
!6048 = !DILocalVariable(name: "stamp_data", scope: !6027, file: !3, line: 1638, type: !6049)
!6049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StampData", file: !3, line: 1500, size: 27776, elements: !6050)
!6050 = !{!6051, !6055, !6056, !6057, !6058, !6059, !6060, !6064, !6065, !6066, !6067}
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !6049, file: !3, line: 1501, baseType: !6052, size: 4096)
!6052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 4096, elements: !6053)
!6053 = !{!6054}
!6054 = !DISubrange(count: 512)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "note", scope: !6049, file: !3, line: 1502, baseType: !6052, size: 4096, offset: 4096)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !6049, file: !3, line: 1503, baseType: !6052, size: 4096, offset: 8192)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "marker", scope: !6049, file: !3, line: 1504, baseType: !6052, size: 4096, offset: 12288)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !6049, file: !3, line: 1505, baseType: !6052, size: 4096, offset: 16384)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !6049, file: !3, line: 1506, baseType: !6052, size: 4096, offset: 20480)
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !6049, file: !3, line: 1507, baseType: !6061, size: 640, offset: 24576)
!6061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 640, elements: !6062)
!6062 = !{!6063}
!6063 = !DISubrange(count: 80)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "cameralens", scope: !6049, file: !3, line: 1508, baseType: !6061, size: 640, offset: 25216)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !6049, file: !3, line: 1509, baseType: !6061, size: 640, offset: 25856)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !6049, file: !3, line: 1510, baseType: !6061, size: 640, offset: 26496)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "rendertime", scope: !6049, file: !3, line: 1511, baseType: !6061, size: 640, offset: 27136)
!6068 = !DILocation(line: 1638, column: 19, scope: !6027)
!6069 = !DILocalVariable(name: "w", scope: !6027, file: !3, line: 1639, type: !185)
!6070 = !DILocation(line: 1639, column: 8, scope: !6027)
!6071 = !DILocalVariable(name: "h", scope: !6027, file: !3, line: 1639, type: !185)
!6072 = !DILocation(line: 1639, column: 11, scope: !6027)
!6073 = !DILocalVariable(name: "pad", scope: !6027, file: !3, line: 1639, type: !185)
!6074 = !DILocation(line: 1639, column: 14, scope: !6027)
!6075 = !DILocalVariable(name: "x", scope: !6027, file: !3, line: 1640, type: !142)
!6076 = !DILocation(line: 1640, column: 6, scope: !6027)
!6077 = !DILocalVariable(name: "y", scope: !6027, file: !3, line: 1640, type: !142)
!6078 = !DILocation(line: 1640, column: 9, scope: !6027)
!6079 = !DILocalVariable(name: "y_ofs", scope: !6027, file: !3, line: 1640, type: !142)
!6080 = !DILocation(line: 1640, column: 12, scope: !6027)
!6081 = !DILocalVariable(name: "h_fixed", scope: !6027, file: !3, line: 1641, type: !185)
!6082 = !DILocation(line: 1641, column: 8, scope: !6027)
!6083 = !DILocalVariable(name: "mono", scope: !6027, file: !3, line: 1642, type: !5557)
!6084 = !DILocation(line: 1642, column: 12, scope: !6027)
!6085 = !DILocation(line: 1642, column: 19, scope: !6027)
!6086 = !DILocalVariable(name: "display", scope: !6027, file: !3, line: 1643, type: !6087)
!6087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6088, size: 64)
!6088 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplay", file: !110, line: 57, flags: DIFlagFwdDecl)
!6089 = !DILocation(line: 1643, column: 30, scope: !6027)
!6090 = !DILocalVariable(name: "display_device", scope: !6027, file: !3, line: 1644, type: !972)
!6091 = !DILocation(line: 1644, column: 14, scope: !6027)
!6092 = !DILocation(line: 1655, column: 7, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 1655, column: 6)
!6094 = !DILocation(line: 1655, column: 12, scope: !6093)
!6095 = !DILocation(line: 1655, column: 16, scope: !6093)
!6096 = !DILocation(line: 1655, column: 6, scope: !6027)
!6097 = !DILocation(line: 1656, column: 3, scope: !6093)
!6098 = !DILocation(line: 1658, column: 19, scope: !6027)
!6099 = !DILocation(line: 1658, column: 26, scope: !6027)
!6100 = !DILocation(line: 1658, column: 43, scope: !6027)
!6101 = !DILocation(line: 1658, column: 17, scope: !6027)
!6102 = !DILocation(line: 1659, column: 50, scope: !6027)
!6103 = !DILocation(line: 1659, column: 12, scope: !6027)
!6104 = !DILocation(line: 1659, column: 10, scope: !6027)
!6105 = !DILocation(line: 1661, column: 12, scope: !6027)
!6106 = !DILocation(line: 1661, column: 19, scope: !6027)
!6107 = !DILocation(line: 1661, column: 2, scope: !6027)
!6108 = !DILocation(line: 1664, column: 6, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 1664, column: 6)
!6110 = !DILocation(line: 1664, column: 13, scope: !6109)
!6111 = !DILocation(line: 1664, column: 15, scope: !6109)
!6112 = !DILocation(line: 1664, column: 29, scope: !6109)
!6113 = !DILocation(line: 1664, column: 6, scope: !6027)
!6114 = !DILocation(line: 1665, column: 3, scope: !6109)
!6115 = !DILocation(line: 1665, column: 10, scope: !6109)
!6116 = !DILocation(line: 1665, column: 12, scope: !6109)
!6117 = !DILocation(line: 1665, column: 26, scope: !6109)
!6118 = !DILocation(line: 1668, column: 11, scope: !6027)
!6119 = !DILocation(line: 1668, column: 17, scope: !6027)
!6120 = !DILocation(line: 1668, column: 24, scope: !6027)
!6121 = !DILocation(line: 1668, column: 26, scope: !6027)
!6122 = !DILocation(line: 1668, column: 2, scope: !6027)
!6123 = !DILocation(line: 1670, column: 13, scope: !6027)
!6124 = !DILocation(line: 1670, column: 19, scope: !6027)
!6125 = !DILocation(line: 1670, column: 26, scope: !6027)
!6126 = !DILocation(line: 1670, column: 32, scope: !6027)
!6127 = !DILocation(line: 1670, column: 39, scope: !6027)
!6128 = !DILocation(line: 1670, column: 47, scope: !6027)
!6129 = !DILocation(line: 1670, column: 57, scope: !6027)
!6130 = !DILocation(line: 1670, column: 2, scope: !6027)
!6131 = !DILocation(line: 1671, column: 17, scope: !6027)
!6132 = !DILocation(line: 1671, column: 23, scope: !6027)
!6133 = !DILocation(line: 1671, column: 30, scope: !6027)
!6134 = !DILocation(line: 1671, column: 32, scope: !6027)
!6135 = !DILocation(line: 1671, column: 45, scope: !6027)
!6136 = !DILocation(line: 1671, column: 52, scope: !6027)
!6137 = !DILocation(line: 1671, column: 54, scope: !6027)
!6138 = !DILocation(line: 1671, column: 67, scope: !6027)
!6139 = !DILocation(line: 1671, column: 74, scope: !6027)
!6140 = !DILocation(line: 1671, column: 76, scope: !6027)
!6141 = !DILocation(line: 1671, column: 2, scope: !6027)
!6142 = !DILocation(line: 1672, column: 22, scope: !6027)
!6143 = !DILocation(line: 1672, column: 8, scope: !6027)
!6144 = !DILocation(line: 1672, column: 6, scope: !6027)
!6145 = !DILocation(line: 1675, column: 27, scope: !6027)
!6146 = !DILocation(line: 1675, column: 12, scope: !6027)
!6147 = !DILocation(line: 1675, column: 10, scope: !6027)
!6148 = !DILocation(line: 1676, column: 25, scope: !6027)
!6149 = !DILocation(line: 1676, column: 11, scope: !6027)
!6150 = !DILocation(line: 1676, column: 10, scope: !6027)
!6151 = !DILocation(line: 1676, column: 8, scope: !6027)
!6152 = !DILocation(line: 1678, column: 4, scope: !6027)
!6153 = !DILocation(line: 1679, column: 6, scope: !6027)
!6154 = !DILocation(line: 1679, column: 4, scope: !6027)
!6155 = !DILocation(line: 1681, column: 6, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 1681, column: 6)
!6157 = !DILocation(line: 1681, column: 6, scope: !6027)
!6158 = !DILocation(line: 1683, column: 8, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 1681, column: 46)
!6160 = !DILocation(line: 1683, column: 5, scope: !6159)
!6161 = !DILocation(line: 1686, column: 21, scope: !6159)
!6162 = !DILocation(line: 1686, column: 27, scope: !6159)
!6163 = !DILocation(line: 1686, column: 34, scope: !6159)
!6164 = !DILocation(line: 1686, column: 41, scope: !6159)
!6165 = !DILocation(line: 1686, column: 49, scope: !6159)
!6166 = !DILocation(line: 1686, column: 56, scope: !6159)
!6167 = !DILocation(line: 1686, column: 58, scope: !6159)
!6168 = !DILocation(line: 1686, column: 68, scope: !6159)
!6169 = !DILocation(line: 1687, column: 21, scope: !6159)
!6170 = !DILocation(line: 1687, column: 23, scope: !6159)
!6171 = !DILocation(line: 1687, column: 40, scope: !6159)
!6172 = !DILocation(line: 1687, column: 42, scope: !6159)
!6173 = !DILocation(line: 1687, column: 59, scope: !6159)
!6174 = !DILocation(line: 1687, column: 61, scope: !6159)
!6175 = !DILocation(line: 1687, column: 78, scope: !6159)
!6176 = !DILocation(line: 1687, column: 82, scope: !6159)
!6177 = !DILocation(line: 1687, column: 80, scope: !6159)
!6178 = !DILocation(line: 1687, column: 84, scope: !6159)
!6179 = !DILocation(line: 1686, column: 3, scope: !6159)
!6180 = !DILocation(line: 1690, column: 16, scope: !6159)
!6181 = !DILocation(line: 1690, column: 22, scope: !6159)
!6182 = !DILocation(line: 1690, column: 25, scope: !6159)
!6183 = !DILocation(line: 1690, column: 29, scope: !6159)
!6184 = !DILocation(line: 1690, column: 27, scope: !6159)
!6185 = !DILocation(line: 1690, column: 3, scope: !6159)
!6186 = !DILocation(line: 1691, column: 19, scope: !6159)
!6187 = !DILocation(line: 1691, column: 36, scope: !6159)
!6188 = !DILocation(line: 1691, column: 25, scope: !6159)
!6189 = !DILocation(line: 1691, column: 3, scope: !6159)
!6190 = !DILocation(line: 1694, column: 5, scope: !6159)
!6191 = !DILocation(line: 1695, column: 2, scope: !6159)
!6192 = !DILocation(line: 1698, column: 6, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 1698, column: 6)
!6194 = !DILocation(line: 1698, column: 6, scope: !6027)
!6195 = !DILocation(line: 1699, column: 8, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6193, file: !3, line: 1698, column: 46)
!6197 = !DILocation(line: 1699, column: 5, scope: !6196)
!6198 = !DILocation(line: 1702, column: 21, scope: !6196)
!6199 = !DILocation(line: 1702, column: 27, scope: !6196)
!6200 = !DILocation(line: 1702, column: 34, scope: !6196)
!6201 = !DILocation(line: 1702, column: 41, scope: !6196)
!6202 = !DILocation(line: 1702, column: 49, scope: !6196)
!6203 = !DILocation(line: 1702, column: 56, scope: !6196)
!6204 = !DILocation(line: 1702, column: 58, scope: !6196)
!6205 = !DILocation(line: 1702, column: 68, scope: !6196)
!6206 = !DILocation(line: 1703, column: 24, scope: !6196)
!6207 = !DILocation(line: 1703, column: 26, scope: !6196)
!6208 = !DILocation(line: 1703, column: 43, scope: !6196)
!6209 = !DILocation(line: 1703, column: 45, scope: !6196)
!6210 = !DILocation(line: 1703, column: 62, scope: !6196)
!6211 = !DILocation(line: 1703, column: 66, scope: !6196)
!6212 = !DILocation(line: 1703, column: 64, scope: !6196)
!6213 = !DILocation(line: 1703, column: 68, scope: !6196)
!6214 = !DILocation(line: 1702, column: 3, scope: !6196)
!6215 = !DILocation(line: 1705, column: 16, scope: !6196)
!6216 = !DILocation(line: 1705, column: 22, scope: !6196)
!6217 = !DILocation(line: 1705, column: 25, scope: !6196)
!6218 = !DILocation(line: 1705, column: 29, scope: !6196)
!6219 = !DILocation(line: 1705, column: 27, scope: !6196)
!6220 = !DILocation(line: 1705, column: 3, scope: !6196)
!6221 = !DILocation(line: 1706, column: 19, scope: !6196)
!6222 = !DILocation(line: 1706, column: 36, scope: !6196)
!6223 = !DILocation(line: 1706, column: 25, scope: !6196)
!6224 = !DILocation(line: 1706, column: 3, scope: !6196)
!6225 = !DILocation(line: 1709, column: 5, scope: !6196)
!6226 = !DILocation(line: 1710, column: 2, scope: !6196)
!6227 = !DILocation(line: 1713, column: 6, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 1713, column: 6)
!6229 = !DILocation(line: 1713, column: 6, scope: !6027)
!6230 = !DILocation(line: 1714, column: 8, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6228, file: !3, line: 1713, column: 46)
!6232 = !DILocation(line: 1714, column: 5, scope: !6231)
!6233 = !DILocation(line: 1717, column: 21, scope: !6231)
!6234 = !DILocation(line: 1717, column: 27, scope: !6231)
!6235 = !DILocation(line: 1717, column: 34, scope: !6231)
!6236 = !DILocation(line: 1717, column: 41, scope: !6231)
!6237 = !DILocation(line: 1717, column: 49, scope: !6231)
!6238 = !DILocation(line: 1717, column: 56, scope: !6231)
!6239 = !DILocation(line: 1717, column: 58, scope: !6231)
!6240 = !DILocation(line: 1717, column: 68, scope: !6231)
!6241 = !DILocation(line: 1718, column: 24, scope: !6231)
!6242 = !DILocation(line: 1718, column: 26, scope: !6231)
!6243 = !DILocation(line: 1718, column: 43, scope: !6231)
!6244 = !DILocation(line: 1718, column: 45, scope: !6231)
!6245 = !DILocation(line: 1718, column: 62, scope: !6231)
!6246 = !DILocation(line: 1718, column: 66, scope: !6231)
!6247 = !DILocation(line: 1718, column: 64, scope: !6231)
!6248 = !DILocation(line: 1718, column: 68, scope: !6231)
!6249 = !DILocation(line: 1717, column: 3, scope: !6231)
!6250 = !DILocation(line: 1720, column: 16, scope: !6231)
!6251 = !DILocation(line: 1720, column: 22, scope: !6231)
!6252 = !DILocation(line: 1720, column: 25, scope: !6231)
!6253 = !DILocation(line: 1720, column: 29, scope: !6231)
!6254 = !DILocation(line: 1720, column: 27, scope: !6231)
!6255 = !DILocation(line: 1720, column: 3, scope: !6231)
!6256 = !DILocation(line: 1721, column: 19, scope: !6231)
!6257 = !DILocation(line: 1721, column: 36, scope: !6231)
!6258 = !DILocation(line: 1721, column: 25, scope: !6231)
!6259 = !DILocation(line: 1721, column: 3, scope: !6231)
!6260 = !DILocation(line: 1724, column: 5, scope: !6231)
!6261 = !DILocation(line: 1725, column: 2, scope: !6231)
!6262 = !DILocation(line: 1728, column: 6, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 1728, column: 6)
!6264 = !DILocation(line: 1728, column: 6, scope: !6027)
!6265 = !DILocation(line: 1729, column: 8, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6263, file: !3, line: 1728, column: 52)
!6267 = !DILocation(line: 1729, column: 5, scope: !6266)
!6268 = !DILocation(line: 1732, column: 21, scope: !6266)
!6269 = !DILocation(line: 1732, column: 27, scope: !6266)
!6270 = !DILocation(line: 1732, column: 34, scope: !6266)
!6271 = !DILocation(line: 1732, column: 41, scope: !6266)
!6272 = !DILocation(line: 1732, column: 49, scope: !6266)
!6273 = !DILocation(line: 1732, column: 56, scope: !6266)
!6274 = !DILocation(line: 1732, column: 58, scope: !6266)
!6275 = !DILocation(line: 1732, column: 68, scope: !6266)
!6276 = !DILocation(line: 1733, column: 24, scope: !6266)
!6277 = !DILocation(line: 1733, column: 26, scope: !6266)
!6278 = !DILocation(line: 1733, column: 43, scope: !6266)
!6279 = !DILocation(line: 1733, column: 45, scope: !6266)
!6280 = !DILocation(line: 1733, column: 62, scope: !6266)
!6281 = !DILocation(line: 1733, column: 66, scope: !6266)
!6282 = !DILocation(line: 1733, column: 64, scope: !6266)
!6283 = !DILocation(line: 1733, column: 68, scope: !6266)
!6284 = !DILocation(line: 1732, column: 3, scope: !6266)
!6285 = !DILocation(line: 1735, column: 16, scope: !6266)
!6286 = !DILocation(line: 1735, column: 22, scope: !6266)
!6287 = !DILocation(line: 1735, column: 25, scope: !6266)
!6288 = !DILocation(line: 1735, column: 29, scope: !6266)
!6289 = !DILocation(line: 1735, column: 27, scope: !6266)
!6290 = !DILocation(line: 1735, column: 3, scope: !6266)
!6291 = !DILocation(line: 1736, column: 19, scope: !6266)
!6292 = !DILocation(line: 1736, column: 36, scope: !6266)
!6293 = !DILocation(line: 1736, column: 25, scope: !6266)
!6294 = !DILocation(line: 1736, column: 3, scope: !6266)
!6295 = !DILocation(line: 1737, column: 2, scope: !6266)
!6296 = !DILocation(line: 1739, column: 4, scope: !6027)
!6297 = !DILocation(line: 1740, column: 4, scope: !6027)
!6298 = !DILocation(line: 1743, column: 6, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 1743, column: 6)
!6300 = !DILocation(line: 1743, column: 6, scope: !6027)
!6301 = !DILocation(line: 1746, column: 21, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6299, file: !3, line: 1743, column: 48)
!6303 = !DILocation(line: 1746, column: 27, scope: !6302)
!6304 = !DILocation(line: 1746, column: 34, scope: !6302)
!6305 = !DILocation(line: 1746, column: 41, scope: !6302)
!6306 = !DILocation(line: 1746, column: 49, scope: !6302)
!6307 = !DILocation(line: 1746, column: 56, scope: !6302)
!6308 = !DILocation(line: 1746, column: 58, scope: !6302)
!6309 = !DILocation(line: 1746, column: 69, scope: !6302)
!6310 = !DILocation(line: 1747, column: 21, scope: !6302)
!6311 = !DILocation(line: 1747, column: 23, scope: !6302)
!6312 = !DILocation(line: 1747, column: 40, scope: !6302)
!6313 = !DILocation(line: 1747, column: 42, scope: !6302)
!6314 = !DILocation(line: 1747, column: 59, scope: !6302)
!6315 = !DILocation(line: 1747, column: 61, scope: !6302)
!6316 = !DILocation(line: 1747, column: 78, scope: !6302)
!6317 = !DILocation(line: 1747, column: 82, scope: !6302)
!6318 = !DILocation(line: 1747, column: 80, scope: !6302)
!6319 = !DILocation(line: 1747, column: 84, scope: !6302)
!6320 = !DILocation(line: 1746, column: 3, scope: !6302)
!6321 = !DILocation(line: 1750, column: 16, scope: !6302)
!6322 = !DILocation(line: 1750, column: 22, scope: !6302)
!6323 = !DILocation(line: 1750, column: 25, scope: !6302)
!6324 = !DILocation(line: 1750, column: 29, scope: !6302)
!6325 = !DILocation(line: 1750, column: 27, scope: !6302)
!6326 = !DILocation(line: 1750, column: 3, scope: !6302)
!6327 = !DILocation(line: 1751, column: 19, scope: !6302)
!6328 = !DILocation(line: 1751, column: 36, scope: !6302)
!6329 = !DILocation(line: 1751, column: 25, scope: !6302)
!6330 = !DILocation(line: 1751, column: 3, scope: !6302)
!6331 = !DILocation(line: 1754, column: 8, scope: !6302)
!6332 = !DILocation(line: 1754, column: 12, scope: !6302)
!6333 = !DILocation(line: 1754, column: 10, scope: !6302)
!6334 = !DILocation(line: 1754, column: 5, scope: !6302)
!6335 = !DILocation(line: 1755, column: 2, scope: !6302)
!6336 = !DILocation(line: 1758, column: 6, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 1758, column: 6)
!6338 = !DILocation(line: 1758, column: 6, scope: !6027)
!6339 = !DILocation(line: 1761, column: 21, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 1758, column: 46)
!6341 = !DILocation(line: 1761, column: 27, scope: !6340)
!6342 = !DILocation(line: 1761, column: 34, scope: !6340)
!6343 = !DILocation(line: 1761, column: 41, scope: !6340)
!6344 = !DILocation(line: 1761, column: 49, scope: !6340)
!6345 = !DILocation(line: 1761, column: 56, scope: !6340)
!6346 = !DILocation(line: 1761, column: 58, scope: !6340)
!6347 = !DILocation(line: 1761, column: 68, scope: !6340)
!6348 = !DILocation(line: 1762, column: 21, scope: !6340)
!6349 = !DILocation(line: 1762, column: 23, scope: !6340)
!6350 = !DILocation(line: 1762, column: 40, scope: !6340)
!6351 = !DILocation(line: 1762, column: 43, scope: !6340)
!6352 = !DILocation(line: 1762, column: 47, scope: !6340)
!6353 = !DILocation(line: 1762, column: 45, scope: !6340)
!6354 = !DILocation(line: 1762, column: 49, scope: !6340)
!6355 = !DILocation(line: 1762, column: 66, scope: !6340)
!6356 = !DILocation(line: 1762, column: 70, scope: !6340)
!6357 = !DILocation(line: 1762, column: 68, scope: !6340)
!6358 = !DILocation(line: 1762, column: 72, scope: !6340)
!6359 = !DILocation(line: 1761, column: 3, scope: !6340)
!6360 = !DILocation(line: 1765, column: 16, scope: !6340)
!6361 = !DILocation(line: 1765, column: 22, scope: !6340)
!6362 = !DILocation(line: 1765, column: 25, scope: !6340)
!6363 = !DILocation(line: 1765, column: 29, scope: !6340)
!6364 = !DILocation(line: 1765, column: 27, scope: !6340)
!6365 = !DILocation(line: 1765, column: 3, scope: !6340)
!6366 = !DILocation(line: 1766, column: 19, scope: !6340)
!6367 = !DILocation(line: 1766, column: 36, scope: !6340)
!6368 = !DILocation(line: 1766, column: 25, scope: !6340)
!6369 = !DILocation(line: 1766, column: 3, scope: !6340)
!6370 = !DILocation(line: 1769, column: 8, scope: !6340)
!6371 = !DILocation(line: 1769, column: 12, scope: !6340)
!6372 = !DILocation(line: 1769, column: 10, scope: !6340)
!6373 = !DILocation(line: 1769, column: 5, scope: !6340)
!6374 = !DILocation(line: 1770, column: 2, scope: !6340)
!6375 = !DILocation(line: 1772, column: 6, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 1772, column: 6)
!6377 = !DILocation(line: 1772, column: 6, scope: !6027)
!6378 = !DILocation(line: 1775, column: 21, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6376, file: !3, line: 1772, column: 47)
!6380 = !DILocation(line: 1775, column: 27, scope: !6379)
!6381 = !DILocation(line: 1775, column: 34, scope: !6379)
!6382 = !DILocation(line: 1775, column: 41, scope: !6379)
!6383 = !DILocation(line: 1775, column: 49, scope: !6379)
!6384 = !DILocation(line: 1775, column: 56, scope: !6379)
!6385 = !DILocation(line: 1775, column: 58, scope: !6379)
!6386 = !DILocation(line: 1775, column: 68, scope: !6379)
!6387 = !DILocation(line: 1776, column: 21, scope: !6379)
!6388 = !DILocation(line: 1776, column: 23, scope: !6379)
!6389 = !DILocation(line: 1776, column: 40, scope: !6379)
!6390 = !DILocation(line: 1776, column: 42, scope: !6379)
!6391 = !DILocation(line: 1776, column: 59, scope: !6379)
!6392 = !DILocation(line: 1776, column: 63, scope: !6379)
!6393 = !DILocation(line: 1776, column: 61, scope: !6379)
!6394 = !DILocation(line: 1776, column: 65, scope: !6379)
!6395 = !DILocation(line: 1776, column: 82, scope: !6379)
!6396 = !DILocation(line: 1776, column: 86, scope: !6379)
!6397 = !DILocation(line: 1776, column: 84, scope: !6379)
!6398 = !DILocation(line: 1776, column: 88, scope: !6379)
!6399 = !DILocation(line: 1775, column: 3, scope: !6379)
!6400 = !DILocation(line: 1779, column: 16, scope: !6379)
!6401 = !DILocation(line: 1779, column: 22, scope: !6379)
!6402 = !DILocation(line: 1779, column: 25, scope: !6379)
!6403 = !DILocation(line: 1779, column: 29, scope: !6379)
!6404 = !DILocation(line: 1779, column: 27, scope: !6379)
!6405 = !DILocation(line: 1779, column: 3, scope: !6379)
!6406 = !DILocation(line: 1780, column: 19, scope: !6379)
!6407 = !DILocation(line: 1780, column: 36, scope: !6379)
!6408 = !DILocation(line: 1780, column: 25, scope: !6379)
!6409 = !DILocation(line: 1780, column: 3, scope: !6379)
!6410 = !DILocation(line: 1783, column: 8, scope: !6379)
!6411 = !DILocation(line: 1783, column: 12, scope: !6379)
!6412 = !DILocation(line: 1783, column: 10, scope: !6379)
!6413 = !DILocation(line: 1783, column: 5, scope: !6379)
!6414 = !DILocation(line: 1784, column: 2, scope: !6379)
!6415 = !DILocation(line: 1786, column: 6, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 1786, column: 6)
!6417 = !DILocation(line: 1786, column: 6, scope: !6027)
!6418 = !DILocation(line: 1789, column: 21, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6416, file: !3, line: 1786, column: 48)
!6420 = !DILocation(line: 1789, column: 27, scope: !6419)
!6421 = !DILocation(line: 1789, column: 34, scope: !6419)
!6422 = !DILocation(line: 1789, column: 41, scope: !6419)
!6423 = !DILocation(line: 1789, column: 49, scope: !6419)
!6424 = !DILocation(line: 1789, column: 56, scope: !6419)
!6425 = !DILocation(line: 1789, column: 58, scope: !6419)
!6426 = !DILocation(line: 1789, column: 68, scope: !6419)
!6427 = !DILocation(line: 1790, column: 21, scope: !6419)
!6428 = !DILocation(line: 1790, column: 23, scope: !6419)
!6429 = !DILocation(line: 1790, column: 40, scope: !6419)
!6430 = !DILocation(line: 1790, column: 42, scope: !6419)
!6431 = !DILocation(line: 1790, column: 59, scope: !6419)
!6432 = !DILocation(line: 1790, column: 63, scope: !6419)
!6433 = !DILocation(line: 1790, column: 61, scope: !6419)
!6434 = !DILocation(line: 1790, column: 65, scope: !6419)
!6435 = !DILocation(line: 1790, column: 82, scope: !6419)
!6436 = !DILocation(line: 1790, column: 86, scope: !6419)
!6437 = !DILocation(line: 1790, column: 84, scope: !6419)
!6438 = !DILocation(line: 1790, column: 88, scope: !6419)
!6439 = !DILocation(line: 1789, column: 3, scope: !6419)
!6440 = !DILocation(line: 1791, column: 16, scope: !6419)
!6441 = !DILocation(line: 1791, column: 22, scope: !6419)
!6442 = !DILocation(line: 1791, column: 25, scope: !6419)
!6443 = !DILocation(line: 1791, column: 29, scope: !6419)
!6444 = !DILocation(line: 1791, column: 27, scope: !6419)
!6445 = !DILocation(line: 1791, column: 3, scope: !6419)
!6446 = !DILocation(line: 1792, column: 19, scope: !6419)
!6447 = !DILocation(line: 1792, column: 36, scope: !6419)
!6448 = !DILocation(line: 1792, column: 25, scope: !6419)
!6449 = !DILocation(line: 1792, column: 3, scope: !6419)
!6450 = !DILocation(line: 1795, column: 8, scope: !6419)
!6451 = !DILocation(line: 1795, column: 12, scope: !6419)
!6452 = !DILocation(line: 1795, column: 10, scope: !6419)
!6453 = !DILocation(line: 1795, column: 5, scope: !6419)
!6454 = !DILocation(line: 1796, column: 2, scope: !6419)
!6455 = !DILocation(line: 1798, column: 6, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 1798, column: 6)
!6457 = !DILocation(line: 1798, column: 6, scope: !6027)
!6458 = !DILocation(line: 1801, column: 21, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6456, file: !3, line: 1798, column: 52)
!6460 = !DILocation(line: 1801, column: 27, scope: !6459)
!6461 = !DILocation(line: 1801, column: 34, scope: !6459)
!6462 = !DILocation(line: 1801, column: 41, scope: !6459)
!6463 = !DILocation(line: 1801, column: 49, scope: !6459)
!6464 = !DILocation(line: 1801, column: 56, scope: !6459)
!6465 = !DILocation(line: 1801, column: 58, scope: !6459)
!6466 = !DILocation(line: 1801, column: 68, scope: !6459)
!6467 = !DILocation(line: 1802, column: 21, scope: !6459)
!6468 = !DILocation(line: 1802, column: 23, scope: !6459)
!6469 = !DILocation(line: 1802, column: 40, scope: !6459)
!6470 = !DILocation(line: 1802, column: 42, scope: !6459)
!6471 = !DILocation(line: 1802, column: 59, scope: !6459)
!6472 = !DILocation(line: 1802, column: 63, scope: !6459)
!6473 = !DILocation(line: 1802, column: 61, scope: !6459)
!6474 = !DILocation(line: 1802, column: 65, scope: !6459)
!6475 = !DILocation(line: 1802, column: 82, scope: !6459)
!6476 = !DILocation(line: 1802, column: 86, scope: !6459)
!6477 = !DILocation(line: 1802, column: 84, scope: !6459)
!6478 = !DILocation(line: 1802, column: 88, scope: !6459)
!6479 = !DILocation(line: 1801, column: 3, scope: !6459)
!6480 = !DILocation(line: 1803, column: 16, scope: !6459)
!6481 = !DILocation(line: 1803, column: 22, scope: !6459)
!6482 = !DILocation(line: 1803, column: 25, scope: !6459)
!6483 = !DILocation(line: 1803, column: 29, scope: !6459)
!6484 = !DILocation(line: 1803, column: 27, scope: !6459)
!6485 = !DILocation(line: 1803, column: 3, scope: !6459)
!6486 = !DILocation(line: 1804, column: 19, scope: !6459)
!6487 = !DILocation(line: 1804, column: 36, scope: !6459)
!6488 = !DILocation(line: 1804, column: 25, scope: !6459)
!6489 = !DILocation(line: 1804, column: 3, scope: !6459)
!6490 = !DILocation(line: 1805, column: 2, scope: !6459)
!6491 = !DILocation(line: 1807, column: 6, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 1807, column: 6)
!6493 = !DILocation(line: 1807, column: 6, scope: !6027)
!6494 = !DILocation(line: 1810, column: 7, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 1807, column: 47)
!6496 = !DILocation(line: 1810, column: 15, scope: !6495)
!6497 = !DILocation(line: 1810, column: 13, scope: !6495)
!6498 = !DILocation(line: 1810, column: 17, scope: !6495)
!6499 = !DILocation(line: 1810, column: 5, scope: !6495)
!6500 = !DILocation(line: 1813, column: 21, scope: !6495)
!6501 = !DILocation(line: 1813, column: 27, scope: !6495)
!6502 = !DILocation(line: 1813, column: 34, scope: !6495)
!6503 = !DILocation(line: 1813, column: 41, scope: !6495)
!6504 = !DILocation(line: 1813, column: 49, scope: !6495)
!6505 = !DILocation(line: 1813, column: 56, scope: !6495)
!6506 = !DILocation(line: 1813, column: 58, scope: !6495)
!6507 = !DILocation(line: 1813, column: 68, scope: !6495)
!6508 = !DILocation(line: 1814, column: 21, scope: !6495)
!6509 = !DILocation(line: 1814, column: 23, scope: !6495)
!6510 = !DILocation(line: 1814, column: 40, scope: !6495)
!6511 = !DILocation(line: 1814, column: 42, scope: !6495)
!6512 = !DILocation(line: 1814, column: 59, scope: !6495)
!6513 = !DILocation(line: 1814, column: 63, scope: !6495)
!6514 = !DILocation(line: 1814, column: 61, scope: !6495)
!6515 = !DILocation(line: 1814, column: 65, scope: !6495)
!6516 = !DILocation(line: 1814, column: 82, scope: !6495)
!6517 = !DILocation(line: 1814, column: 86, scope: !6495)
!6518 = !DILocation(line: 1814, column: 84, scope: !6495)
!6519 = !DILocation(line: 1814, column: 88, scope: !6495)
!6520 = !DILocation(line: 1813, column: 3, scope: !6495)
!6521 = !DILocation(line: 1817, column: 16, scope: !6495)
!6522 = !DILocation(line: 1817, column: 22, scope: !6495)
!6523 = !DILocation(line: 1817, column: 25, scope: !6495)
!6524 = !DILocation(line: 1817, column: 29, scope: !6495)
!6525 = !DILocation(line: 1817, column: 27, scope: !6495)
!6526 = !DILocation(line: 1817, column: 3, scope: !6495)
!6527 = !DILocation(line: 1818, column: 19, scope: !6495)
!6528 = !DILocation(line: 1818, column: 36, scope: !6495)
!6529 = !DILocation(line: 1818, column: 25, scope: !6495)
!6530 = !DILocation(line: 1818, column: 3, scope: !6495)
!6531 = !DILocation(line: 1819, column: 2, scope: !6495)
!6532 = !DILocation(line: 1821, column: 6, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 1821, column: 6)
!6534 = !DILocation(line: 1821, column: 6, scope: !6027)
!6535 = !DILocation(line: 1824, column: 7, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6533, file: !3, line: 1821, column: 47)
!6537 = !DILocation(line: 1824, column: 15, scope: !6536)
!6538 = !DILocation(line: 1824, column: 13, scope: !6536)
!6539 = !DILocation(line: 1824, column: 19, scope: !6536)
!6540 = !DILocation(line: 1824, column: 17, scope: !6536)
!6541 = !DILocation(line: 1824, column: 5, scope: !6536)
!6542 = !DILocation(line: 1825, column: 7, scope: !6536)
!6543 = !DILocation(line: 1825, column: 16, scope: !6536)
!6544 = !DILocation(line: 1825, column: 14, scope: !6536)
!6545 = !DILocation(line: 1825, column: 5, scope: !6536)
!6546 = !DILocation(line: 1828, column: 21, scope: !6536)
!6547 = !DILocation(line: 1828, column: 27, scope: !6536)
!6548 = !DILocation(line: 1828, column: 34, scope: !6536)
!6549 = !DILocation(line: 1828, column: 41, scope: !6536)
!6550 = !DILocation(line: 1828, column: 49, scope: !6536)
!6551 = !DILocation(line: 1828, column: 56, scope: !6536)
!6552 = !DILocation(line: 1828, column: 58, scope: !6536)
!6553 = !DILocation(line: 1828, column: 68, scope: !6536)
!6554 = !DILocation(line: 1829, column: 21, scope: !6536)
!6555 = !DILocation(line: 1829, column: 23, scope: !6536)
!6556 = !DILocation(line: 1829, column: 40, scope: !6536)
!6557 = !DILocation(line: 1829, column: 42, scope: !6536)
!6558 = !DILocation(line: 1829, column: 59, scope: !6536)
!6559 = !DILocation(line: 1829, column: 63, scope: !6536)
!6560 = !DILocation(line: 1829, column: 61, scope: !6536)
!6561 = !DILocation(line: 1829, column: 65, scope: !6536)
!6562 = !DILocation(line: 1829, column: 82, scope: !6536)
!6563 = !DILocation(line: 1829, column: 86, scope: !6536)
!6564 = !DILocation(line: 1829, column: 84, scope: !6536)
!6565 = !DILocation(line: 1829, column: 88, scope: !6536)
!6566 = !DILocation(line: 1828, column: 3, scope: !6536)
!6567 = !DILocation(line: 1831, column: 16, scope: !6536)
!6568 = !DILocation(line: 1831, column: 22, scope: !6536)
!6569 = !DILocation(line: 1831, column: 25, scope: !6536)
!6570 = !DILocation(line: 1831, column: 29, scope: !6536)
!6571 = !DILocation(line: 1831, column: 27, scope: !6536)
!6572 = !DILocation(line: 1831, column: 3, scope: !6536)
!6573 = !DILocation(line: 1832, column: 19, scope: !6536)
!6574 = !DILocation(line: 1832, column: 36, scope: !6536)
!6575 = !DILocation(line: 1832, column: 25, scope: !6536)
!6576 = !DILocation(line: 1832, column: 3, scope: !6536)
!6577 = !DILocation(line: 1833, column: 2, scope: !6536)
!6578 = !DILocation(line: 1836, column: 13, scope: !6027)
!6579 = !DILocation(line: 1836, column: 2, scope: !6027)
!6580 = !DILocation(line: 1841, column: 1, scope: !6027)
!6581 = distinct !DISubprogram(name: "stampdata", scope: !3, file: !3, line: 1515, type: !6582, scopeLine: 1516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!6582 = !DISubroutineType(types: !6583)
!6583 = !{null, !6030, !6032, !6584, !142}
!6584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6585, size: 64)
!6585 = !DIDerivedType(tag: DW_TAG_typedef, name: "StampData", file: !3, line: 1512, baseType: !6049)
!6586 = !DILocalVariable(name: "scene", arg: 1, scope: !6581, file: !3, line: 1515, type: !6030)
!6587 = !DILocation(line: 1515, column: 30, scope: !6581)
!6588 = !DILocalVariable(name: "camera", arg: 2, scope: !6581, file: !3, line: 1515, type: !6032)
!6589 = !DILocation(line: 1515, column: 45, scope: !6581)
!6590 = !DILocalVariable(name: "stamp_data", arg: 3, scope: !6581, file: !3, line: 1515, type: !6584)
!6591 = !DILocation(line: 1515, column: 64, scope: !6581)
!6592 = !DILocalVariable(name: "do_prefix", arg: 4, scope: !6581, file: !3, line: 1515, type: !142)
!6593 = !DILocation(line: 1515, column: 80, scope: !6581)
!6594 = !DILocalVariable(name: "text", scope: !6581, file: !3, line: 1517, type: !876)
!6595 = !DILocation(line: 1517, column: 7, scope: !6581)
!6596 = !DILocalVariable(name: "tl", scope: !6581, file: !3, line: 1518, type: !6597)
!6597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6598, size: 64)
!6598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !6599, line: 7, size: 448, elements: !6600)
!6599 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h", directory: "")
!6600 = !{!6601, !6602, !6603, !6604, !6605, !6606, !6607, !6608, !6609, !6610, !6612}
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !6598, file: !6599, line: 9, baseType: !142, size: 32)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !6598, file: !6599, line: 10, baseType: !142, size: 32, offset: 32)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !6598, file: !6599, line: 11, baseType: !142, size: 32, offset: 64)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !6598, file: !6599, line: 12, baseType: !142, size: 32, offset: 96)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !6598, file: !6599, line: 13, baseType: !142, size: 32, offset: 128)
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !6598, file: !6599, line: 14, baseType: !142, size: 32, offset: 160)
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !6598, file: !6599, line: 15, baseType: !142, size: 32, offset: 192)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !6598, file: !6599, line: 16, baseType: !142, size: 32, offset: 224)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !6598, file: !6599, line: 17, baseType: !142, size: 32, offset: 256)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !6598, file: !6599, line: 20, baseType: !6611, size: 64, offset: 320)
!6611 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !6598, file: !6599, line: 21, baseType: !972, size: 64, offset: 384)
!6613 = !DILocation(line: 1518, column: 13, scope: !6581)
!6614 = !DILocalVariable(name: "t", scope: !6581, file: !3, line: 1519, type: !6615)
!6615 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !6616, line: 7, baseType: !6617)
!6616 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!6617 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !736, line: 160, baseType: !6611)
!6618 = !DILocation(line: 1519, column: 9, scope: !6581)
!6619 = !DILocation(line: 1521, column: 6, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 1521, column: 6)
!6621 = !DILocation(line: 1521, column: 13, scope: !6620)
!6622 = !DILocation(line: 1521, column: 15, scope: !6620)
!6623 = !DILocation(line: 1521, column: 21, scope: !6620)
!6624 = !DILocation(line: 1521, column: 6, scope: !6581)
!6625 = !DILocation(line: 1522, column: 16, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 1521, column: 41)
!6627 = !DILocation(line: 1522, column: 28, scope: !6626)
!6628 = !DILocation(line: 1522, column: 60, scope: !6626)
!6629 = !DILocation(line: 1522, column: 92, scope: !6626)
!6630 = !DILocation(line: 1522, column: 90, scope: !6626)
!6631 = !DILocation(line: 1522, column: 110, scope: !6626)
!6632 = !DILocation(line: 1522, column: 116, scope: !6626)
!6633 = !DILocation(line: 1522, column: 108, scope: !6626)
!6634 = !DILocation(line: 1522, column: 3, scope: !6626)
!6635 = !DILocation(line: 1523, column: 2, scope: !6626)
!6636 = !DILocation(line: 1525, column: 3, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 1524, column: 7)
!6638 = !DILocation(line: 1525, column: 15, scope: !6637)
!6639 = !DILocation(line: 1525, column: 23, scope: !6637)
!6640 = !DILocation(line: 1528, column: 6, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 1528, column: 6)
!6642 = !DILocation(line: 1528, column: 13, scope: !6641)
!6643 = !DILocation(line: 1528, column: 15, scope: !6641)
!6644 = !DILocation(line: 1528, column: 21, scope: !6641)
!6645 = !DILocation(line: 1528, column: 6, scope: !6581)
!6646 = !DILocation(line: 1530, column: 16, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 1528, column: 37)
!6648 = !DILocation(line: 1530, column: 28, scope: !6647)
!6649 = !DILocation(line: 1530, column: 66, scope: !6647)
!6650 = !DILocation(line: 1530, column: 73, scope: !6647)
!6651 = !DILocation(line: 1530, column: 75, scope: !6647)
!6652 = !DILocation(line: 1530, column: 3, scope: !6647)
!6653 = !DILocation(line: 1531, column: 2, scope: !6647)
!6654 = !DILocation(line: 1533, column: 3, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 1532, column: 7)
!6656 = !DILocation(line: 1533, column: 15, scope: !6655)
!6657 = !DILocation(line: 1533, column: 23, scope: !6655)
!6658 = !DILocation(line: 1536, column: 6, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 1536, column: 6)
!6660 = !DILocation(line: 1536, column: 13, scope: !6659)
!6661 = !DILocation(line: 1536, column: 15, scope: !6659)
!6662 = !DILocation(line: 1536, column: 21, scope: !6659)
!6663 = !DILocation(line: 1536, column: 6, scope: !6581)
!6664 = !DILocation(line: 1537, column: 7, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6659, file: !3, line: 1536, column: 37)
!6666 = !DILocation(line: 1537, column: 5, scope: !6665)
!6667 = !DILocation(line: 1538, column: 8, scope: !6665)
!6668 = !DILocation(line: 1538, column: 6, scope: !6665)
!6669 = !DILocation(line: 1539, column: 16, scope: !6665)
!6670 = !DILocation(line: 1539, column: 69, scope: !6665)
!6671 = !DILocation(line: 1539, column: 73, scope: !6665)
!6672 = !DILocation(line: 1539, column: 81, scope: !6665)
!6673 = !DILocation(line: 1539, column: 89, scope: !6665)
!6674 = !DILocation(line: 1539, column: 93, scope: !6665)
!6675 = !DILocation(line: 1539, column: 100, scope: !6665)
!6676 = !DILocation(line: 1539, column: 105, scope: !6665)
!6677 = !DILocation(line: 1539, column: 109, scope: !6665)
!6678 = !DILocation(line: 1539, column: 118, scope: !6665)
!6679 = !DILocation(line: 1539, column: 122, scope: !6665)
!6680 = !DILocation(line: 1539, column: 131, scope: !6665)
!6681 = !DILocation(line: 1539, column: 135, scope: !6665)
!6682 = !DILocation(line: 1539, column: 143, scope: !6665)
!6683 = !DILocation(line: 1539, column: 147, scope: !6665)
!6684 = !DILocation(line: 1539, column: 3, scope: !6665)
!6685 = !DILocation(line: 1540, column: 16, scope: !6665)
!6686 = !DILocation(line: 1540, column: 28, scope: !6665)
!6687 = !DILocation(line: 1540, column: 60, scope: !6665)
!6688 = !DILocation(line: 1540, column: 90, scope: !6665)
!6689 = !DILocation(line: 1540, column: 3, scope: !6665)
!6690 = !DILocation(line: 1541, column: 2, scope: !6665)
!6691 = !DILocation(line: 1543, column: 3, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6659, file: !3, line: 1542, column: 7)
!6693 = !DILocation(line: 1543, column: 15, scope: !6692)
!6694 = !DILocation(line: 1543, column: 23, scope: !6692)
!6695 = !DILocation(line: 1546, column: 6, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 1546, column: 6)
!6697 = !DILocation(line: 1546, column: 13, scope: !6696)
!6698 = !DILocation(line: 1546, column: 15, scope: !6696)
!6699 = !DILocation(line: 1546, column: 21, scope: !6696)
!6700 = !DILocation(line: 1546, column: 6, scope: !6581)
!6701 = !DILocalVariable(name: "name", scope: !6702, file: !3, line: 1547, type: !972)
!6702 = distinct !DILexicalBlock(scope: !6696, file: !3, line: 1546, column: 39)
!6703 = !DILocation(line: 1547, column: 15, scope: !6702)
!6704 = !DILocation(line: 1547, column: 54, scope: !6702)
!6705 = !DILocation(line: 1547, column: 61, scope: !6702)
!6706 = !DILocation(line: 1547, column: 22, scope: !6702)
!6707 = !DILocation(line: 1549, column: 7, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6702, file: !3, line: 1549, column: 7)
!6709 = !DILocation(line: 1549, column: 7, scope: !6702)
!6710 = !DILocation(line: 1549, column: 25, scope: !6708)
!6711 = !DILocation(line: 1549, column: 31, scope: !6708)
!6712 = !DILocation(line: 1549, column: 13, scope: !6708)
!6713 = !DILocation(line: 1550, column: 20, scope: !6708)
!6714 = !DILocation(line: 1550, column: 8, scope: !6708)
!6715 = !DILocation(line: 1552, column: 16, scope: !6702)
!6716 = !DILocation(line: 1552, column: 28, scope: !6702)
!6717 = !DILocation(line: 1552, column: 64, scope: !6702)
!6718 = !DILocation(line: 1552, column: 96, scope: !6702)
!6719 = !DILocation(line: 1552, column: 3, scope: !6702)
!6720 = !DILocation(line: 1553, column: 2, scope: !6702)
!6721 = !DILocation(line: 1555, column: 3, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6696, file: !3, line: 1554, column: 7)
!6723 = !DILocation(line: 1555, column: 15, scope: !6722)
!6724 = !DILocation(line: 1555, column: 25, scope: !6722)
!6725 = !DILocation(line: 1558, column: 6, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 1558, column: 6)
!6727 = !DILocation(line: 1558, column: 13, scope: !6726)
!6728 = !DILocation(line: 1558, column: 15, scope: !6726)
!6729 = !DILocation(line: 1558, column: 21, scope: !6726)
!6730 = !DILocation(line: 1558, column: 6, scope: !6581)
!6731 = !DILocalVariable(name: "timecode_style", scope: !6732, file: !3, line: 1559, type: !6733)
!6732 = distinct !DILexicalBlock(scope: !6726, file: !3, line: 1558, column: 37)
!6733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !232)
!6734 = !DILocation(line: 1559, column: 15, scope: !6732)
!6735 = !DILocation(line: 1560, column: 33, scope: !6732)
!6736 = !DILocation(line: 1560, column: 56, scope: !6732)
!6737 = !DILocation(line: 1560, column: 81, scope: !6732)
!6738 = !DILocation(line: 1560, column: 3, scope: !6732)
!6739 = !DILocation(line: 1561, column: 16, scope: !6732)
!6740 = !DILocation(line: 1561, column: 28, scope: !6732)
!6741 = !DILocation(line: 1561, column: 60, scope: !6732)
!6742 = !DILocation(line: 1561, column: 94, scope: !6732)
!6743 = !DILocation(line: 1561, column: 3, scope: !6732)
!6744 = !DILocation(line: 1562, column: 2, scope: !6732)
!6745 = !DILocation(line: 1564, column: 3, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6726, file: !3, line: 1563, column: 7)
!6747 = !DILocation(line: 1564, column: 15, scope: !6746)
!6748 = !DILocation(line: 1564, column: 23, scope: !6746)
!6749 = !DILocation(line: 1567, column: 6, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 1567, column: 6)
!6751 = !DILocation(line: 1567, column: 13, scope: !6750)
!6752 = !DILocation(line: 1567, column: 15, scope: !6750)
!6753 = !DILocation(line: 1567, column: 21, scope: !6750)
!6754 = !DILocation(line: 1567, column: 6, scope: !6581)
!6755 = !DILocalVariable(name: "fmtstr", scope: !6756, file: !3, line: 1568, type: !2456)
!6756 = distinct !DILexicalBlock(scope: !6750, file: !3, line: 1567, column: 38)
!6757 = !DILocation(line: 1568, column: 8, scope: !6756)
!6758 = !DILocalVariable(name: "digits", scope: !6756, file: !3, line: 1569, type: !142)
!6759 = !DILocation(line: 1569, column: 7, scope: !6756)
!6760 = !DILocation(line: 1571, column: 7, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6756, file: !3, line: 1571, column: 7)
!6762 = !DILocation(line: 1571, column: 14, scope: !6761)
!6763 = !DILocation(line: 1571, column: 16, scope: !6761)
!6764 = !DILocation(line: 1571, column: 21, scope: !6761)
!6765 = !DILocation(line: 1571, column: 7, scope: !6756)
!6766 = !DILocation(line: 1572, column: 29, scope: !6761)
!6767 = !DILocation(line: 1572, column: 36, scope: !6761)
!6768 = !DILocation(line: 1572, column: 38, scope: !6761)
!6769 = !DILocation(line: 1572, column: 23, scope: !6761)
!6770 = !DILocation(line: 1572, column: 17, scope: !6761)
!6771 = !DILocation(line: 1572, column: 15, scope: !6761)
!6772 = !DILocation(line: 1572, column: 11, scope: !6761)
!6773 = !DILocation(line: 1572, column: 4, scope: !6761)
!6774 = !DILocation(line: 1574, column: 16, scope: !6756)
!6775 = !DILocation(line: 1574, column: 40, scope: !6756)
!6776 = !DILocation(line: 1574, column: 79, scope: !6756)
!6777 = !DILocation(line: 1574, column: 3, scope: !6756)
!6778 = !DILocation(line: 1575, column: 16, scope: !6756)
!6779 = !DILocation(line: 1575, column: 28, scope: !6756)
!6780 = !DILocation(line: 1575, column: 62, scope: !6756)
!6781 = !DILocation(line: 1575, column: 70, scope: !6756)
!6782 = !DILocation(line: 1575, column: 77, scope: !6756)
!6783 = !DILocation(line: 1575, column: 79, scope: !6756)
!6784 = !DILocation(line: 1575, column: 3, scope: !6756)
!6785 = !DILocation(line: 1576, column: 2, scope: !6756)
!6786 = !DILocation(line: 1578, column: 3, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6750, file: !3, line: 1577, column: 7)
!6788 = !DILocation(line: 1578, column: 15, scope: !6787)
!6789 = !DILocation(line: 1578, column: 24, scope: !6787)
!6790 = !DILocation(line: 1581, column: 6, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 1581, column: 6)
!6792 = !DILocation(line: 1581, column: 13, scope: !6791)
!6793 = !DILocation(line: 1581, column: 15, scope: !6791)
!6794 = !DILocation(line: 1581, column: 21, scope: !6791)
!6795 = !DILocation(line: 1581, column: 6, scope: !6581)
!6796 = !DILocation(line: 1582, column: 16, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6791, file: !3, line: 1581, column: 39)
!6798 = !DILocation(line: 1582, column: 28, scope: !6797)
!6799 = !DILocation(line: 1582, column: 64, scope: !6797)
!6800 = !DILocation(line: 1582, column: 96, scope: !6797)
!6801 = !DILocation(line: 1582, column: 105, scope: !6797)
!6802 = !DILocation(line: 1582, column: 113, scope: !6797)
!6803 = !DILocation(line: 1582, column: 116, scope: !6797)
!6804 = !DILocation(line: 1582, column: 121, scope: !6797)
!6805 = !DILocation(line: 1582, column: 3, scope: !6797)
!6806 = !DILocation(line: 1583, column: 2, scope: !6797)
!6807 = !DILocation(line: 1585, column: 3, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6791, file: !3, line: 1584, column: 7)
!6809 = !DILocation(line: 1585, column: 15, scope: !6808)
!6810 = !DILocation(line: 1585, column: 25, scope: !6808)
!6811 = !DILocation(line: 1588, column: 6, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 1588, column: 6)
!6813 = !DILocation(line: 1588, column: 13, scope: !6812)
!6814 = !DILocation(line: 1588, column: 15, scope: !6812)
!6815 = !DILocation(line: 1588, column: 21, scope: !6812)
!6816 = !DILocation(line: 1588, column: 6, scope: !6581)
!6817 = !DILocation(line: 1589, column: 7, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6819, file: !3, line: 1589, column: 7)
!6819 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 1588, column: 43)
!6820 = !DILocation(line: 1589, column: 14, scope: !6818)
!6821 = !DILocation(line: 1589, column: 17, scope: !6818)
!6822 = !DILocation(line: 1589, column: 25, scope: !6818)
!6823 = !DILocation(line: 1589, column: 30, scope: !6818)
!6824 = !DILocation(line: 1589, column: 7, scope: !6819)
!6825 = !DILocation(line: 1590, column: 17, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 1589, column: 44)
!6827 = !DILocation(line: 1590, column: 56, scope: !6826)
!6828 = !DILocation(line: 1590, column: 64, scope: !6826)
!6829 = !DILocation(line: 1590, column: 46, scope: !6826)
!6830 = !DILocation(line: 1590, column: 71, scope: !6826)
!6831 = !DILocation(line: 1590, column: 45, scope: !6826)
!6832 = !DILocation(line: 1590, column: 4, scope: !6826)
!6833 = !DILocation(line: 1591, column: 3, scope: !6826)
!6834 = !DILocation(line: 1593, column: 16, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 1592, column: 8)
!6836 = !DILocation(line: 1593, column: 4, scope: !6835)
!6837 = !DILocation(line: 1596, column: 16, scope: !6819)
!6838 = !DILocation(line: 1596, column: 28, scope: !6819)
!6839 = !DILocation(line: 1596, column: 72, scope: !6819)
!6840 = !DILocation(line: 1596, column: 102, scope: !6819)
!6841 = !DILocation(line: 1596, column: 3, scope: !6819)
!6842 = !DILocation(line: 1597, column: 2, scope: !6819)
!6843 = !DILocation(line: 1599, column: 3, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 1598, column: 7)
!6845 = !DILocation(line: 1599, column: 15, scope: !6844)
!6846 = !DILocation(line: 1599, column: 29, scope: !6844)
!6847 = !DILocation(line: 1602, column: 6, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 1602, column: 6)
!6849 = !DILocation(line: 1602, column: 13, scope: !6848)
!6850 = !DILocation(line: 1602, column: 15, scope: !6848)
!6851 = !DILocation(line: 1602, column: 21, scope: !6848)
!6852 = !DILocation(line: 1602, column: 6, scope: !6581)
!6853 = !DILocation(line: 1603, column: 16, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6848, file: !3, line: 1602, column: 38)
!6855 = !DILocation(line: 1603, column: 28, scope: !6854)
!6856 = !DILocation(line: 1603, column: 62, scope: !6854)
!6857 = !DILocation(line: 1603, column: 93, scope: !6854)
!6858 = !DILocation(line: 1603, column: 100, scope: !6854)
!6859 = !DILocation(line: 1603, column: 103, scope: !6854)
!6860 = !DILocation(line: 1603, column: 108, scope: !6854)
!6861 = !DILocation(line: 1603, column: 3, scope: !6854)
!6862 = !DILocation(line: 1604, column: 2, scope: !6854)
!6863 = !DILocation(line: 1606, column: 3, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6848, file: !3, line: 1605, column: 7)
!6865 = !DILocation(line: 1606, column: 15, scope: !6864)
!6866 = !DILocation(line: 1606, column: 24, scope: !6864)
!6867 = !DILocation(line: 1609, column: 6, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 1609, column: 6)
!6869 = !DILocation(line: 1609, column: 13, scope: !6868)
!6870 = !DILocation(line: 1609, column: 15, scope: !6868)
!6871 = !DILocation(line: 1609, column: 21, scope: !6868)
!6872 = !DILocation(line: 1609, column: 6, scope: !6581)
!6873 = !DILocalVariable(name: "seq", scope: !6874, file: !3, line: 1610, type: !1522)
!6874 = distinct !DILexicalBlock(scope: !6868, file: !3, line: 1609, column: 41)
!6875 = !DILocation(line: 1610, column: 13, scope: !6874)
!6876 = !DILocation(line: 1610, column: 54, scope: !6874)
!6877 = !DILocation(line: 1610, column: 61, scope: !6874)
!6878 = !DILocation(line: 1610, column: 68, scope: !6874)
!6879 = !DILocation(line: 1610, column: 70, scope: !6874)
!6880 = !DILocation(line: 1610, column: 19, scope: !6874)
!6881 = !DILocation(line: 1612, column: 7, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 1612, column: 7)
!6883 = !DILocation(line: 1612, column: 7, scope: !6874)
!6884 = !DILocation(line: 1612, column: 24, scope: !6882)
!6885 = !DILocation(line: 1612, column: 30, scope: !6882)
!6886 = !DILocation(line: 1612, column: 35, scope: !6882)
!6887 = !DILocation(line: 1612, column: 40, scope: !6882)
!6888 = !DILocation(line: 1612, column: 12, scope: !6882)
!6889 = !DILocation(line: 1613, column: 20, scope: !6882)
!6890 = !DILocation(line: 1613, column: 8, scope: !6882)
!6891 = !DILocation(line: 1615, column: 16, scope: !6874)
!6892 = !DILocation(line: 1615, column: 28, scope: !6874)
!6893 = !DILocation(line: 1615, column: 62, scope: !6874)
!6894 = !DILocation(line: 1615, column: 93, scope: !6874)
!6895 = !DILocation(line: 1615, column: 3, scope: !6874)
!6896 = !DILocation(line: 1616, column: 2, scope: !6874)
!6897 = !DILocation(line: 1618, column: 3, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6868, file: !3, line: 1617, column: 7)
!6899 = !DILocation(line: 1618, column: 15, scope: !6898)
!6900 = !DILocation(line: 1618, column: 24, scope: !6898)
!6901 = !DILocalVariable(name: "re", scope: !6902, file: !3, line: 1622, type: !6903)
!6902 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 1621, column: 2)
!6903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6904, size: 64)
!6904 = !DIDerivedType(tag: DW_TAG_typedef, name: "Render", file: !282, line: 58, baseType: !6905)
!6905 = !DICompositeType(tag: DW_TAG_structure_type, name: "Render", file: !282, line: 58, flags: DIFlagFwdDecl)
!6906 = !DILocation(line: 1622, column: 11, scope: !6902)
!6907 = !DILocation(line: 1622, column: 29, scope: !6902)
!6908 = !DILocation(line: 1622, column: 36, scope: !6902)
!6909 = !DILocation(line: 1622, column: 39, scope: !6902)
!6910 = !DILocation(line: 1622, column: 16, scope: !6902)
!6911 = !DILocalVariable(name: "stats", scope: !6902, file: !3, line: 1623, type: !6912)
!6912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6913, size: 64)
!6913 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderStats", file: !282, line: 160, baseType: !6914)
!6914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderStats", file: !282, line: 151, size: 1216, elements: !6915)
!6915 = !{!6916, !6917, !6918, !6919, !6920, !6921, !6922, !6923, !6924, !6925, !6926, !6927, !6928, !6929, !6930, !6931, !6932, !6933, !6934, !6935, !6936}
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !6914, file: !282, line: 152, baseType: !142, size: 32)
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !6914, file: !282, line: 153, baseType: !142, size: 32, offset: 32)
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !6914, file: !282, line: 153, baseType: !142, size: 32, offset: 64)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !6914, file: !282, line: 153, baseType: !142, size: 32, offset: 96)
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !6914, file: !282, line: 153, baseType: !142, size: 32, offset: 128)
!6921 = !DIDerivedType(tag: DW_TAG_member, name: "totlamp", scope: !6914, file: !282, line: 153, baseType: !142, size: 32, offset: 160)
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !6914, file: !282, line: 153, baseType: !142, size: 32, offset: 192)
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "curfield", scope: !6914, file: !282, line: 154, baseType: !232, size: 16, offset: 224)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "curblur", scope: !6914, file: !282, line: 154, baseType: !232, size: 16, offset: 240)
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "curpart", scope: !6914, file: !282, line: 154, baseType: !232, size: 16, offset: 256)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "partsdone", scope: !6914, file: !282, line: 154, baseType: !232, size: 16, offset: 272)
!6927 = !DIDerivedType(tag: DW_TAG_member, name: "convertdone", scope: !6914, file: !282, line: 154, baseType: !232, size: 16, offset: 288)
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "curfsa", scope: !6914, file: !282, line: 154, baseType: !232, size: 16, offset: 304)
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "localview", scope: !6914, file: !282, line: 155, baseType: !1231, size: 8, offset: 320)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "starttime", scope: !6914, file: !282, line: 156, baseType: !1239, size: 64, offset: 384)
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "lastframetime", scope: !6914, file: !282, line: 156, baseType: !1239, size: 64, offset: 448)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "infostr", scope: !6914, file: !282, line: 157, baseType: !972, size: 64, offset: 512)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "statstr", scope: !6914, file: !282, line: 157, baseType: !972, size: 64, offset: 576)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "scene_name", scope: !6914, file: !282, line: 158, baseType: !248, size: 512, offset: 640)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "mem_used", scope: !6914, file: !282, line: 159, baseType: !185, size: 32, offset: 1152)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "mem_peak", scope: !6914, file: !282, line: 159, baseType: !185, size: 32, offset: 1184)
!6937 = !DILocation(line: 1623, column: 16, scope: !6902)
!6938 = !DILocation(line: 1623, column: 24, scope: !6902)
!6939 = !DILocation(line: 1623, column: 41, scope: !6902)
!6940 = !DILocation(line: 1623, column: 29, scope: !6902)
!6941 = !DILocation(line: 1625, column: 7, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 1625, column: 7)
!6943 = !DILocation(line: 1625, column: 13, scope: !6942)
!6944 = !DILocation(line: 1625, column: 17, scope: !6942)
!6945 = !DILocation(line: 1625, column: 24, scope: !6942)
!6946 = !DILocation(line: 1625, column: 26, scope: !6942)
!6947 = !DILocation(line: 1625, column: 32, scope: !6942)
!6948 = !DILocation(line: 1625, column: 7, scope: !6902)
!6949 = !DILocation(line: 1626, column: 16, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 1625, column: 55)
!6951 = !DILocation(line: 1626, column: 23, scope: !6950)
!6952 = !DILocation(line: 1626, column: 38, scope: !6950)
!6953 = !DILocation(line: 1626, column: 4, scope: !6950)
!6954 = !DILocation(line: 1628, column: 17, scope: !6950)
!6955 = !DILocation(line: 1628, column: 29, scope: !6950)
!6956 = !DILocation(line: 1628, column: 73, scope: !6950)
!6957 = !DILocation(line: 1628, column: 109, scope: !6950)
!6958 = !DILocation(line: 1628, column: 4, scope: !6950)
!6959 = !DILocation(line: 1629, column: 3, scope: !6950)
!6960 = !DILocation(line: 1631, column: 4, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 1630, column: 8)
!6962 = !DILocation(line: 1631, column: 16, scope: !6961)
!6963 = !DILocation(line: 1631, column: 30, scope: !6961)
!6964 = !DILocation(line: 1634, column: 1, scope: !6581)
!6965 = distinct !DISubprogram(name: "BKE_imbuf_stamp_info", scope: !3, file: !3, line: 1843, type: !6966, scopeLine: 1844, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!6966 = !DISubroutineType(types: !6967)
!6967 = !{null, !6030, !6032, !1222}
!6968 = !DILocalVariable(name: "scene", arg: 1, scope: !6965, file: !3, line: 1843, type: !6030)
!6969 = !DILocation(line: 1843, column: 34, scope: !6965)
!6970 = !DILocalVariable(name: "camera", arg: 2, scope: !6965, file: !3, line: 1843, type: !6032)
!6971 = !DILocation(line: 1843, column: 49, scope: !6965)
!6972 = !DILocalVariable(name: "ibuf", arg: 3, scope: !6965, file: !3, line: 1843, type: !1222)
!6973 = !DILocation(line: 1843, column: 71, scope: !6965)
!6974 = !DILocalVariable(name: "stamp_data", scope: !6965, file: !3, line: 1845, type: !6049)
!6975 = !DILocation(line: 1845, column: 19, scope: !6965)
!6976 = !DILocation(line: 1847, column: 7, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 1847, column: 6)
!6978 = !DILocation(line: 1847, column: 6, scope: !6965)
!6979 = !DILocation(line: 1847, column: 13, scope: !6977)
!6980 = !DILocation(line: 1850, column: 12, scope: !6965)
!6981 = !DILocation(line: 1850, column: 19, scope: !6965)
!6982 = !DILocation(line: 1850, column: 2, scope: !6965)
!6983 = !DILocation(line: 1852, column: 17, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 1852, column: 6)
!6985 = !DILocation(line: 1852, column: 6, scope: !6984)
!6986 = !DILocation(line: 1852, column: 6, scope: !6965)
!6987 = !DILocation(line: 1852, column: 52, scope: !6984)
!6988 = !DILocation(line: 1852, column: 84, scope: !6984)
!6989 = !DILocation(line: 1852, column: 73, scope: !6984)
!6990 = !DILocation(line: 1852, column: 26, scope: !6984)
!6991 = !DILocation(line: 1853, column: 17, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 1853, column: 6)
!6993 = !DILocation(line: 1853, column: 6, scope: !6992)
!6994 = !DILocation(line: 1853, column: 6, scope: !6965)
!6995 = !DILocation(line: 1853, column: 52, scope: !6992)
!6996 = !DILocation(line: 1853, column: 84, scope: !6992)
!6997 = !DILocation(line: 1853, column: 73, scope: !6992)
!6998 = !DILocation(line: 1853, column: 26, scope: !6992)
!6999 = !DILocation(line: 1854, column: 17, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 1854, column: 6)
!7001 = !DILocation(line: 1854, column: 6, scope: !7000)
!7002 = !DILocation(line: 1854, column: 6, scope: !6965)
!7003 = !DILocation(line: 1854, column: 52, scope: !7000)
!7004 = !DILocation(line: 1854, column: 84, scope: !7000)
!7005 = !DILocation(line: 1854, column: 73, scope: !7000)
!7006 = !DILocation(line: 1854, column: 26, scope: !7000)
!7007 = !DILocation(line: 1855, column: 17, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 1855, column: 6)
!7009 = !DILocation(line: 1855, column: 6, scope: !7008)
!7010 = !DILocation(line: 1855, column: 6, scope: !6965)
!7011 = !DILocation(line: 1855, column: 54, scope: !7008)
!7012 = !DILocation(line: 1855, column: 84, scope: !7008)
!7013 = !DILocation(line: 1855, column: 73, scope: !7008)
!7014 = !DILocation(line: 1855, column: 28, scope: !7008)
!7015 = !DILocation(line: 1856, column: 17, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 1856, column: 6)
!7017 = !DILocation(line: 1856, column: 6, scope: !7016)
!7018 = !DILocation(line: 1856, column: 6, scope: !6965)
!7019 = !DILocation(line: 1856, column: 52, scope: !7016)
!7020 = !DILocation(line: 1856, column: 84, scope: !7016)
!7021 = !DILocation(line: 1856, column: 73, scope: !7016)
!7022 = !DILocation(line: 1856, column: 26, scope: !7016)
!7023 = !DILocation(line: 1857, column: 17, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 1857, column: 6)
!7025 = !DILocation(line: 1857, column: 6, scope: !7024)
!7026 = !DILocation(line: 1857, column: 6, scope: !6965)
!7027 = !DILocation(line: 1857, column: 53, scope: !7024)
!7028 = !DILocation(line: 1857, column: 84, scope: !7024)
!7029 = !DILocation(line: 1857, column: 73, scope: !7024)
!7030 = !DILocation(line: 1857, column: 27, scope: !7024)
!7031 = !DILocation(line: 1858, column: 17, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 1858, column: 6)
!7033 = !DILocation(line: 1858, column: 6, scope: !7032)
!7034 = !DILocation(line: 1858, column: 6, scope: !6965)
!7035 = !DILocation(line: 1858, column: 54, scope: !7032)
!7036 = !DILocation(line: 1858, column: 84, scope: !7032)
!7037 = !DILocation(line: 1858, column: 73, scope: !7032)
!7038 = !DILocation(line: 1858, column: 28, scope: !7032)
!7039 = !DILocation(line: 1859, column: 17, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 1859, column: 6)
!7041 = !DILocation(line: 1859, column: 6, scope: !7040)
!7042 = !DILocation(line: 1859, column: 6, scope: !6965)
!7043 = !DILocation(line: 1859, column: 58, scope: !7040)
!7044 = !DILocation(line: 1859, column: 84, scope: !7040)
!7045 = !DILocation(line: 1859, column: 73, scope: !7040)
!7046 = !DILocation(line: 1859, column: 32, scope: !7040)
!7047 = !DILocation(line: 1860, column: 17, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 1860, column: 6)
!7049 = !DILocation(line: 1860, column: 6, scope: !7048)
!7050 = !DILocation(line: 1860, column: 6, scope: !6965)
!7051 = !DILocation(line: 1860, column: 53, scope: !7048)
!7052 = !DILocation(line: 1860, column: 84, scope: !7048)
!7053 = !DILocation(line: 1860, column: 73, scope: !7048)
!7054 = !DILocation(line: 1860, column: 27, scope: !7048)
!7055 = !DILocation(line: 1861, column: 17, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 1861, column: 6)
!7057 = !DILocation(line: 1861, column: 6, scope: !7056)
!7058 = !DILocation(line: 1861, column: 6, scope: !6965)
!7059 = !DILocation(line: 1861, column: 53, scope: !7056)
!7060 = !DILocation(line: 1861, column: 84, scope: !7056)
!7061 = !DILocation(line: 1861, column: 73, scope: !7056)
!7062 = !DILocation(line: 1861, column: 27, scope: !7056)
!7063 = !DILocation(line: 1862, column: 17, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 1862, column: 6)
!7065 = !DILocation(line: 1862, column: 6, scope: !7064)
!7066 = !DILocation(line: 1862, column: 6, scope: !6965)
!7067 = !DILocation(line: 1862, column: 58, scope: !7064)
!7068 = !DILocation(line: 1862, column: 89, scope: !7064)
!7069 = !DILocation(line: 1862, column: 78, scope: !7064)
!7070 = !DILocation(line: 1862, column: 32, scope: !7064)
!7071 = !DILocation(line: 1863, column: 1, scope: !6965)
!7072 = distinct !DISubprogram(name: "BKE_imbuf_alpha_test", scope: !3, file: !3, line: 1865, type: !7073, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!7073 = !DISubroutineType(types: !7074)
!7074 = !{!1231, !2997}
!7075 = !DILocalVariable(name: "ibuf", arg: 1, scope: !7072, file: !3, line: 1865, type: !2997)
!7076 = !DILocation(line: 1865, column: 34, scope: !7072)
!7077 = !DILocalVariable(name: "tot", scope: !7072, file: !3, line: 1867, type: !142)
!7078 = !DILocation(line: 1867, column: 6, scope: !7072)
!7079 = !DILocation(line: 1868, column: 6, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7072, file: !3, line: 1868, column: 6)
!7081 = !DILocation(line: 1868, column: 12, scope: !7080)
!7082 = !DILocation(line: 1868, column: 6, scope: !7072)
!7083 = !DILocalVariable(name: "buf", scope: !7084, file: !3, line: 1869, type: !3581)
!7084 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 1868, column: 24)
!7085 = !DILocation(line: 1869, column: 16, scope: !7084)
!7086 = !DILocation(line: 1869, column: 22, scope: !7084)
!7087 = !DILocation(line: 1869, column: 28, scope: !7084)
!7088 = !DILocation(line: 1870, column: 14, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 1870, column: 3)
!7090 = !DILocation(line: 1870, column: 20, scope: !7089)
!7091 = !DILocation(line: 1870, column: 24, scope: !7089)
!7092 = !DILocation(line: 1870, column: 30, scope: !7089)
!7093 = !DILocation(line: 1870, column: 22, scope: !7089)
!7094 = !DILocation(line: 1870, column: 12, scope: !7089)
!7095 = !DILocation(line: 1870, column: 8, scope: !7089)
!7096 = !DILocation(line: 1870, column: 36, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7089, file: !3, line: 1870, column: 3)
!7098 = !DILocation(line: 1870, column: 3, scope: !7089)
!7099 = !DILocation(line: 1871, column: 8, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7101, file: !3, line: 1871, column: 8)
!7101 = distinct !DILexicalBlock(scope: !7097, file: !3, line: 1870, column: 50)
!7102 = !DILocation(line: 1871, column: 15, scope: !7100)
!7103 = !DILocation(line: 1871, column: 8, scope: !7101)
!7104 = !DILocation(line: 1872, column: 5, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7100, file: !3, line: 1871, column: 23)
!7106 = !DILocation(line: 1874, column: 3, scope: !7101)
!7107 = !DILocation(line: 1870, column: 44, scope: !7097)
!7108 = !DILocation(line: 1870, column: 3, scope: !7097)
!7109 = distinct !{!7109, !7098, !7110}
!7110 = !DILocation(line: 1874, column: 3, scope: !7089)
!7111 = !DILocation(line: 1875, column: 2, scope: !7084)
!7112 = !DILocation(line: 1876, column: 11, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 1876, column: 11)
!7114 = !DILocation(line: 1876, column: 17, scope: !7113)
!7115 = !DILocation(line: 1876, column: 11, scope: !7080)
!7116 = !DILocalVariable(name: "buf", scope: !7117, file: !3, line: 1877, type: !1269)
!7117 = distinct !DILexicalBlock(scope: !7113, file: !3, line: 1876, column: 23)
!7118 = !DILocation(line: 1877, column: 18, scope: !7117)
!7119 = !DILocation(line: 1877, column: 41, scope: !7117)
!7120 = !DILocation(line: 1877, column: 47, scope: !7117)
!7121 = !DILocation(line: 1877, column: 24, scope: !7117)
!7122 = !DILocation(line: 1878, column: 14, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7117, file: !3, line: 1878, column: 3)
!7124 = !DILocation(line: 1878, column: 20, scope: !7123)
!7125 = !DILocation(line: 1878, column: 24, scope: !7123)
!7126 = !DILocation(line: 1878, column: 30, scope: !7123)
!7127 = !DILocation(line: 1878, column: 22, scope: !7123)
!7128 = !DILocation(line: 1878, column: 12, scope: !7123)
!7129 = !DILocation(line: 1878, column: 8, scope: !7123)
!7130 = !DILocation(line: 1878, column: 36, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7123, file: !3, line: 1878, column: 3)
!7132 = !DILocation(line: 1878, column: 3, scope: !7123)
!7133 = !DILocation(line: 1879, column: 8, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7135, file: !3, line: 1879, column: 8)
!7135 = distinct !DILexicalBlock(scope: !7131, file: !3, line: 1878, column: 50)
!7136 = !DILocation(line: 1879, column: 15, scope: !7134)
!7137 = !DILocation(line: 1879, column: 8, scope: !7135)
!7138 = !DILocation(line: 1880, column: 5, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 1879, column: 23)
!7140 = !DILocation(line: 1882, column: 3, scope: !7135)
!7141 = !DILocation(line: 1878, column: 44, scope: !7131)
!7142 = !DILocation(line: 1878, column: 3, scope: !7131)
!7143 = distinct !{!7143, !7132, !7144}
!7144 = !DILocation(line: 1882, column: 3, scope: !7123)
!7145 = !DILocation(line: 1883, column: 2, scope: !7117)
!7146 = !DILocation(line: 1885, column: 2, scope: !7072)
!7147 = !DILocation(line: 1886, column: 1, scope: !7072)
!7148 = distinct !DISubprogram(name: "BKE_imbuf_write", scope: !3, file: !3, line: 1890, type: !7149, scopeLine: 1891, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!7149 = !DISubroutineType(types: !7150)
!7150 = !{!142, !2997, !972, !5900}
!7151 = !DILocalVariable(name: "ibuf", arg: 1, scope: !7148, file: !3, line: 1890, type: !2997)
!7152 = !DILocation(line: 1890, column: 28, scope: !7148)
!7153 = !DILocalVariable(name: "name", arg: 2, scope: !7148, file: !3, line: 1890, type: !972)
!7154 = !DILocation(line: 1890, column: 46, scope: !7148)
!7155 = !DILocalVariable(name: "imf", arg: 3, scope: !7148, file: !3, line: 1890, type: !5900)
!7156 = !DILocation(line: 1890, column: 69, scope: !7148)
!7157 = !DILocalVariable(name: "imtype", scope: !7148, file: !3, line: 1892, type: !214)
!7158 = !DILocation(line: 1892, column: 7, scope: !7148)
!7159 = !DILocation(line: 1892, column: 16, scope: !7148)
!7160 = !DILocation(line: 1892, column: 21, scope: !7148)
!7161 = !DILocalVariable(name: "compress", scope: !7148, file: !3, line: 1893, type: !214)
!7162 = !DILocation(line: 1893, column: 7, scope: !7148)
!7163 = !DILocation(line: 1893, column: 18, scope: !7148)
!7164 = !DILocation(line: 1893, column: 23, scope: !7148)
!7165 = !DILocalVariable(name: "quality", scope: !7148, file: !3, line: 1894, type: !214)
!7166 = !DILocation(line: 1894, column: 7, scope: !7148)
!7167 = !DILocation(line: 1894, column: 17, scope: !7148)
!7168 = !DILocation(line: 1894, column: 22, scope: !7148)
!7169 = !DILocalVariable(name: "ok", scope: !7148, file: !3, line: 1896, type: !142)
!7170 = !DILocation(line: 1896, column: 6, scope: !7148)
!7171 = !DILocation(line: 1898, column: 6, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 1898, column: 6)
!7173 = !DILocation(line: 1898, column: 13, scope: !7172)
!7174 = !DILocation(line: 1898, column: 6, scope: !7148)
!7175 = !DILocation(line: 1899, column: 3, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7172, file: !3, line: 1898, column: 35)
!7177 = !DILocation(line: 1899, column: 9, scope: !7176)
!7178 = !DILocation(line: 1899, column: 15, scope: !7176)
!7179 = !DILocation(line: 1900, column: 2, scope: !7176)
!7180 = !DILocation(line: 1906, column: 11, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7172, file: !3, line: 1906, column: 11)
!7182 = !DILocation(line: 1906, column: 11, scope: !7172)
!7183 = !DILocation(line: 1907, column: 3, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7181, file: !3, line: 1906, column: 123)
!7185 = !DILocation(line: 1907, column: 9, scope: !7184)
!7186 = !DILocation(line: 1907, column: 15, scope: !7184)
!7187 = !DILocation(line: 1909, column: 7, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7184, file: !3, line: 1909, column: 7)
!7189 = !DILocation(line: 1909, column: 14, scope: !7188)
!7190 = !DILocation(line: 1909, column: 7, scope: !7184)
!7191 = !DILocation(line: 1910, column: 8, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 1910, column: 8)
!7193 = distinct !DILexicalBlock(scope: !7188, file: !3, line: 1909, column: 35)
!7194 = !DILocation(line: 1910, column: 13, scope: !7192)
!7195 = !DILocation(line: 1910, column: 19, scope: !7192)
!7196 = !DILocation(line: 1910, column: 8, scope: !7193)
!7197 = !DILocation(line: 1911, column: 5, scope: !7192)
!7198 = !DILocation(line: 1911, column: 11, scope: !7192)
!7199 = !DILocation(line: 1911, column: 17, scope: !7192)
!7200 = !DILocation(line: 1913, column: 19, scope: !7193)
!7201 = !DILocation(line: 1913, column: 4, scope: !7193)
!7202 = !DILocation(line: 1913, column: 10, scope: !7193)
!7203 = !DILocation(line: 1913, column: 16, scope: !7193)
!7204 = !DILocation(line: 1914, column: 3, scope: !7193)
!7205 = !DILocation(line: 1916, column: 2, scope: !7184)
!7206 = !DILocation(line: 1922, column: 11, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7181, file: !3, line: 1922, column: 11)
!7208 = !DILocation(line: 1922, column: 18, scope: !7207)
!7209 = !DILocation(line: 1922, column: 11, scope: !7181)
!7210 = !DILocation(line: 1923, column: 3, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 1922, column: 39)
!7212 = !DILocation(line: 1923, column: 9, scope: !7211)
!7213 = !DILocation(line: 1923, column: 15, scope: !7211)
!7214 = !DILocation(line: 1924, column: 2, scope: !7211)
!7215 = !DILocation(line: 1977, column: 11, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 1977, column: 11)
!7217 = !DILocation(line: 1977, column: 18, scope: !7216)
!7218 = !DILocation(line: 1977, column: 11, scope: !7207)
!7219 = !DILocation(line: 1978, column: 3, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7216, file: !3, line: 1977, column: 41)
!7221 = !DILocation(line: 1978, column: 9, scope: !7220)
!7222 = !DILocation(line: 1978, column: 15, scope: !7220)
!7223 = !DILocation(line: 1979, column: 2, scope: !7220)
!7224 = !DILocation(line: 1980, column: 11, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7216, file: !3, line: 1980, column: 11)
!7226 = !DILocation(line: 1980, column: 18, scope: !7225)
!7227 = !DILocation(line: 1980, column: 11, scope: !7216)
!7228 = !DILocation(line: 1981, column: 3, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7225, file: !3, line: 1980, column: 42)
!7230 = !DILocation(line: 1981, column: 9, scope: !7229)
!7231 = !DILocation(line: 1981, column: 15, scope: !7229)
!7232 = !DILocation(line: 1982, column: 2, scope: !7229)
!7233 = !DILocation(line: 2015, column: 7, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 2015, column: 7)
!7235 = distinct !DILexicalBlock(scope: !7225, file: !3, line: 2013, column: 7)
!7236 = !DILocation(line: 2015, column: 15, scope: !7234)
!7237 = !DILocation(line: 2015, column: 7, scope: !7235)
!7238 = !DILocation(line: 2015, column: 29, scope: !7234)
!7239 = !DILocation(line: 2015, column: 21, scope: !7234)
!7240 = !DILocation(line: 2016, column: 23, scope: !7235)
!7241 = !DILocation(line: 2016, column: 21, scope: !7235)
!7242 = !DILocation(line: 2016, column: 3, scope: !7235)
!7243 = !DILocation(line: 2016, column: 9, scope: !7235)
!7244 = !DILocation(line: 2016, column: 15, scope: !7235)
!7245 = !DILocation(line: 2019, column: 25, scope: !7148)
!7246 = !DILocation(line: 2019, column: 2, scope: !7148)
!7247 = !DILocation(line: 2021, column: 19, scope: !7148)
!7248 = !DILocation(line: 2021, column: 25, scope: !7148)
!7249 = !DILocation(line: 2021, column: 7, scope: !7148)
!7250 = !DILocation(line: 2021, column: 5, scope: !7148)
!7251 = !DILocation(line: 2022, column: 6, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 2022, column: 6)
!7253 = !DILocation(line: 2022, column: 9, scope: !7252)
!7254 = !DILocation(line: 2022, column: 6, scope: !7148)
!7255 = !DILocation(line: 2023, column: 10, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 2022, column: 15)
!7257 = !DILocation(line: 2023, column: 3, scope: !7256)
!7258 = !DILocation(line: 2024, column: 2, scope: !7256)
!7259 = !DILocation(line: 2026, column: 9, scope: !7148)
!7260 = !DILocation(line: 2026, column: 2, scope: !7148)
!7261 = distinct !DISubprogram(name: "BKE_imbuf_write_as", scope: !3, file: !3, line: 2031, type: !7262, scopeLine: 2033, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!7262 = !DISubroutineType(types: !7263)
!7263 = !{!142, !2997, !972, !5900, !7264}
!7264 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1231)
!7265 = !DILocalVariable(name: "ibuf", arg: 1, scope: !7261, file: !3, line: 2031, type: !2997)
!7266 = !DILocation(line: 2031, column: 31, scope: !7261)
!7267 = !DILocalVariable(name: "name", arg: 2, scope: !7261, file: !3, line: 2031, type: !972)
!7268 = !DILocation(line: 2031, column: 49, scope: !7261)
!7269 = !DILocalVariable(name: "imf", arg: 3, scope: !7261, file: !3, line: 2031, type: !5900)
!7270 = !DILocation(line: 2031, column: 72, scope: !7261)
!7271 = !DILocalVariable(name: "save_copy", arg: 4, scope: !7261, file: !3, line: 2032, type: !7264)
!7272 = !DILocation(line: 2032, column: 35, scope: !7261)
!7273 = !DILocalVariable(name: "ibuf_back", scope: !7261, file: !3, line: 2034, type: !2998)
!7274 = !DILocation(line: 2034, column: 8, scope: !7261)
!7275 = !DILocation(line: 2034, column: 21, scope: !7261)
!7276 = !DILocation(line: 2034, column: 20, scope: !7261)
!7277 = !DILocalVariable(name: "ok", scope: !7261, file: !3, line: 2035, type: !142)
!7278 = !DILocation(line: 2035, column: 6, scope: !7261)
!7279 = !DILocation(line: 2039, column: 17, scope: !7261)
!7280 = !DILocation(line: 2039, column: 22, scope: !7261)
!7281 = !DILocation(line: 2039, column: 2, scope: !7261)
!7282 = !DILocation(line: 2039, column: 8, scope: !7261)
!7283 = !DILocation(line: 2039, column: 15, scope: !7261)
!7284 = !DILocation(line: 2041, column: 23, scope: !7261)
!7285 = !DILocation(line: 2041, column: 29, scope: !7261)
!7286 = !DILocation(line: 2041, column: 35, scope: !7261)
!7287 = !DILocation(line: 2041, column: 7, scope: !7261)
!7288 = !DILocation(line: 2041, column: 5, scope: !7261)
!7289 = !DILocation(line: 2043, column: 6, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7261, file: !3, line: 2043, column: 6)
!7291 = !DILocation(line: 2043, column: 6, scope: !7261)
!7292 = !DILocation(line: 2045, column: 28, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7290, file: !3, line: 2043, column: 17)
!7294 = !DILocation(line: 2045, column: 3, scope: !7293)
!7295 = !DILocation(line: 2045, column: 9, scope: !7293)
!7296 = !DILocation(line: 2045, column: 16, scope: !7293)
!7297 = !DILocation(line: 2046, column: 28, scope: !7293)
!7298 = !DILocation(line: 2046, column: 3, scope: !7293)
!7299 = !DILocation(line: 2046, column: 9, scope: !7293)
!7300 = !DILocation(line: 2046, column: 15, scope: !7293)
!7301 = !DILocation(line: 2047, column: 2, scope: !7293)
!7302 = !DILocation(line: 2049, column: 9, scope: !7261)
!7303 = !DILocation(line: 2049, column: 2, scope: !7261)
!7304 = distinct !DISubprogram(name: "BKE_imbuf_write_stamp", scope: !3, file: !3, line: 2052, type: !7305, scopeLine: 2053, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!7305 = !DISubroutineType(types: !7306)
!7306 = !{!142, !6030, !504, !2997, !972, !5930}
!7307 = !DILocalVariable(name: "scene", arg: 1, scope: !7304, file: !3, line: 2052, type: !6030)
!7308 = !DILocation(line: 2052, column: 34, scope: !7304)
!7309 = !DILocalVariable(name: "camera", arg: 2, scope: !7304, file: !3, line: 2052, type: !504)
!7310 = !DILocation(line: 2052, column: 56, scope: !7304)
!7311 = !DILocalVariable(name: "ibuf", arg: 3, scope: !7304, file: !3, line: 2052, type: !2997)
!7312 = !DILocation(line: 2052, column: 71, scope: !7304)
!7313 = !DILocalVariable(name: "name", arg: 4, scope: !7304, file: !3, line: 2052, type: !972)
!7314 = !DILocation(line: 2052, column: 89, scope: !7304)
!7315 = !DILocalVariable(name: "imf", arg: 5, scope: !7304, file: !3, line: 2052, type: !5930)
!7316 = !DILocation(line: 2052, column: 119, scope: !7304)
!7317 = !DILocation(line: 2054, column: 6, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7304, file: !3, line: 2054, column: 6)
!7319 = !DILocation(line: 2054, column: 12, scope: !7318)
!7320 = !DILocation(line: 2054, column: 15, scope: !7318)
!7321 = !DILocation(line: 2054, column: 22, scope: !7318)
!7322 = !DILocation(line: 2054, column: 24, scope: !7318)
!7323 = !DILocation(line: 2054, column: 30, scope: !7318)
!7324 = !DILocation(line: 2054, column: 6, scope: !7304)
!7325 = !DILocation(line: 2055, column: 24, scope: !7318)
!7326 = !DILocation(line: 2055, column: 31, scope: !7318)
!7327 = !DILocation(line: 2055, column: 39, scope: !7318)
!7328 = !DILocation(line: 2055, column: 3, scope: !7318)
!7329 = !DILocation(line: 2057, column: 25, scope: !7304)
!7330 = !DILocation(line: 2057, column: 31, scope: !7304)
!7331 = !DILocation(line: 2057, column: 37, scope: !7304)
!7332 = !DILocation(line: 2057, column: 9, scope: !7304)
!7333 = !DILocation(line: 2057, column: 2, scope: !7304)
!7334 = distinct !DISubprogram(name: "BKE_makepicstring", scope: !3, file: !3, line: 2075, type: !7335, scopeLine: 2077, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!7335 = !DISubroutineType(types: !7336)
!7336 = !{null, !623, !972, !972, !142, !5755, !7264, !7264}
!7337 = !DILocalVariable(name: "string", arg: 1, scope: !7334, file: !3, line: 2075, type: !623)
!7338 = !DILocation(line: 2075, column: 30, scope: !7334)
!7339 = !DILocalVariable(name: "base", arg: 2, scope: !7334, file: !3, line: 2075, type: !972)
!7340 = !DILocation(line: 2075, column: 50, scope: !7334)
!7341 = !DILocalVariable(name: "relbase", arg: 3, scope: !7334, file: !3, line: 2075, type: !972)
!7342 = !DILocation(line: 2075, column: 68, scope: !7334)
!7343 = !DILocalVariable(name: "frame", arg: 4, scope: !7334, file: !3, line: 2075, type: !142)
!7344 = !DILocation(line: 2075, column: 81, scope: !7334)
!7345 = !DILocalVariable(name: "im_format", arg: 5, scope: !7334, file: !3, line: 2076, type: !5755)
!7346 = !DILocation(line: 2076, column: 47, scope: !7334)
!7347 = !DILocalVariable(name: "use_ext", arg: 6, scope: !7334, file: !3, line: 2076, type: !7264)
!7348 = !DILocation(line: 2076, column: 69, scope: !7334)
!7349 = !DILocalVariable(name: "use_frames", arg: 7, scope: !7334, file: !3, line: 2076, type: !7264)
!7350 = !DILocation(line: 2076, column: 89, scope: !7334)
!7351 = !DILocation(line: 2078, column: 19, scope: !7334)
!7352 = !DILocation(line: 2078, column: 27, scope: !7334)
!7353 = !DILocation(line: 2078, column: 33, scope: !7334)
!7354 = !DILocation(line: 2078, column: 42, scope: !7334)
!7355 = !DILocation(line: 2078, column: 49, scope: !7334)
!7356 = !DILocation(line: 2078, column: 60, scope: !7334)
!7357 = !DILocation(line: 2078, column: 68, scope: !7334)
!7358 = !DILocation(line: 2078, column: 79, scope: !7334)
!7359 = !DILocation(line: 2078, column: 88, scope: !7334)
!7360 = !DILocation(line: 2078, column: 2, scope: !7334)
!7361 = !DILocation(line: 2079, column: 1, scope: !7334)
!7362 = distinct !DISubprogram(name: "do_makepicstring", scope: !3, file: !3, line: 2061, type: !7363, scopeLine: 2063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!7363 = !DISubroutineType(types: !7364)
!7364 = !{null, !623, !972, !972, !142, !973, !5755, !6733, !6733}
!7365 = !DILocalVariable(name: "string", arg: 1, scope: !7362, file: !3, line: 2061, type: !623)
!7366 = !DILocation(line: 2061, column: 36, scope: !7362)
!7367 = !DILocalVariable(name: "base", arg: 2, scope: !7362, file: !3, line: 2061, type: !972)
!7368 = !DILocation(line: 2061, column: 56, scope: !7362)
!7369 = !DILocalVariable(name: "relbase", arg: 3, scope: !7362, file: !3, line: 2061, type: !972)
!7370 = !DILocation(line: 2061, column: 74, scope: !7362)
!7371 = !DILocalVariable(name: "frame", arg: 4, scope: !7362, file: !3, line: 2061, type: !142)
!7372 = !DILocation(line: 2061, column: 87, scope: !7362)
!7373 = !DILocalVariable(name: "imtype", arg: 5, scope: !7362, file: !3, line: 2061, type: !973)
!7374 = !DILocation(line: 2061, column: 105, scope: !7362)
!7375 = !DILocalVariable(name: "im_format", arg: 6, scope: !7362, file: !3, line: 2062, type: !5755)
!7376 = !DILocation(line: 2062, column: 53, scope: !7362)
!7377 = !DILocalVariable(name: "use_ext", arg: 7, scope: !7362, file: !3, line: 2062, type: !6733)
!7378 = !DILocation(line: 2062, column: 76, scope: !7362)
!7379 = !DILocalVariable(name: "use_frames", arg: 8, scope: !7362, file: !3, line: 2062, type: !6733)
!7380 = !DILocation(line: 2062, column: 97, scope: !7362)
!7381 = !DILocation(line: 2064, column: 6, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7362, file: !3, line: 2064, column: 6)
!7383 = !DILocation(line: 2064, column: 13, scope: !7382)
!7384 = !DILocation(line: 2064, column: 6, scope: !7362)
!7385 = !DILocation(line: 2064, column: 22, scope: !7382)
!7386 = !DILocation(line: 2065, column: 14, scope: !7362)
!7387 = !DILocation(line: 2065, column: 22, scope: !7362)
!7388 = !DILocation(line: 2065, column: 2, scope: !7362)
!7389 = !DILocation(line: 2066, column: 15, scope: !7362)
!7390 = !DILocation(line: 2066, column: 23, scope: !7362)
!7391 = !DILocation(line: 2066, column: 2, scope: !7362)
!7392 = !DILocation(line: 2068, column: 6, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7362, file: !3, line: 2068, column: 6)
!7394 = !DILocation(line: 2068, column: 6, scope: !7362)
!7395 = !DILocation(line: 2069, column: 18, scope: !7393)
!7396 = !DILocation(line: 2069, column: 26, scope: !7393)
!7397 = !DILocation(line: 2069, column: 3, scope: !7393)
!7398 = !DILocation(line: 2071, column: 6, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7362, file: !3, line: 2071, column: 6)
!7400 = !DILocation(line: 2071, column: 6, scope: !7362)
!7401 = !DILocation(line: 2072, column: 26, scope: !7399)
!7402 = !DILocation(line: 2072, column: 34, scope: !7399)
!7403 = !DILocation(line: 2072, column: 42, scope: !7399)
!7404 = !DILocation(line: 2072, column: 3, scope: !7399)
!7405 = !DILocation(line: 2073, column: 1, scope: !7362)
!7406 = distinct !DISubprogram(name: "BKE_makepicstring_from_type", scope: !3, file: !3, line: 2081, type: !7407, scopeLine: 2083, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!7407 = !DISubroutineType(types: !7408)
!7408 = !{null, !623, !972, !972, !142, !973, !7264, !7264}
!7409 = !DILocalVariable(name: "string", arg: 1, scope: !7406, file: !3, line: 2081, type: !623)
!7410 = !DILocation(line: 2081, column: 40, scope: !7406)
!7411 = !DILocalVariable(name: "base", arg: 2, scope: !7406, file: !3, line: 2081, type: !972)
!7412 = !DILocation(line: 2081, column: 60, scope: !7406)
!7413 = !DILocalVariable(name: "relbase", arg: 3, scope: !7406, file: !3, line: 2081, type: !972)
!7414 = !DILocation(line: 2081, column: 78, scope: !7406)
!7415 = !DILocalVariable(name: "frame", arg: 4, scope: !7406, file: !3, line: 2081, type: !142)
!7416 = !DILocation(line: 2081, column: 91, scope: !7406)
!7417 = !DILocalVariable(name: "imtype", arg: 5, scope: !7406, file: !3, line: 2082, type: !973)
!7418 = !DILocation(line: 2082, column: 45, scope: !7406)
!7419 = !DILocalVariable(name: "use_ext", arg: 6, scope: !7406, file: !3, line: 2082, type: !7264)
!7420 = !DILocation(line: 2082, column: 64, scope: !7406)
!7421 = !DILocalVariable(name: "use_frames", arg: 7, scope: !7406, file: !3, line: 2082, type: !7264)
!7422 = !DILocation(line: 2082, column: 84, scope: !7406)
!7423 = !DILocation(line: 2084, column: 19, scope: !7406)
!7424 = !DILocation(line: 2084, column: 27, scope: !7406)
!7425 = !DILocation(line: 2084, column: 33, scope: !7406)
!7426 = !DILocation(line: 2084, column: 42, scope: !7406)
!7427 = !DILocation(line: 2084, column: 49, scope: !7406)
!7428 = !DILocation(line: 2084, column: 63, scope: !7406)
!7429 = !DILocation(line: 2084, column: 72, scope: !7406)
!7430 = !DILocation(line: 2084, column: 2, scope: !7406)
!7431 = !DILocation(line: 2085, column: 1, scope: !7406)
!7432 = distinct !DISubprogram(name: "openanim", scope: !3, file: !3, line: 2088, type: !7433, scopeLine: 2089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!7433 = !DISubroutineType(types: !7434)
!7434 = !{!277, !972, !142, !142, !623}
!7435 = !DILocalVariable(name: "name", arg: 1, scope: !7432, file: !3, line: 2088, type: !972)
!7436 = !DILocation(line: 2088, column: 35, scope: !7432)
!7437 = !DILocalVariable(name: "flags", arg: 2, scope: !7432, file: !3, line: 2088, type: !142)
!7438 = !DILocation(line: 2088, column: 45, scope: !7432)
!7439 = !DILocalVariable(name: "streamindex", arg: 3, scope: !7432, file: !3, line: 2088, type: !142)
!7440 = !DILocation(line: 2088, column: 56, scope: !7432)
!7441 = !DILocalVariable(name: "colorspace", arg: 4, scope: !7432, file: !3, line: 2088, type: !623)
!7442 = !DILocation(line: 2088, column: 74, scope: !7432)
!7443 = !DILocalVariable(name: "anim", scope: !7432, file: !3, line: 2090, type: !277)
!7444 = !DILocation(line: 2090, column: 15, scope: !7432)
!7445 = !DILocalVariable(name: "ibuf", scope: !7432, file: !3, line: 2091, type: !1222)
!7446 = !DILocation(line: 2091, column: 16, scope: !7432)
!7447 = !DILocation(line: 2093, column: 23, scope: !7432)
!7448 = !DILocation(line: 2093, column: 29, scope: !7432)
!7449 = !DILocation(line: 2093, column: 36, scope: !7432)
!7450 = !DILocation(line: 2093, column: 49, scope: !7432)
!7451 = !DILocation(line: 2093, column: 9, scope: !7432)
!7452 = !DILocation(line: 2093, column: 7, scope: !7432)
!7453 = !DILocation(line: 2094, column: 6, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7432, file: !3, line: 2094, column: 6)
!7455 = !DILocation(line: 2094, column: 11, scope: !7454)
!7456 = !DILocation(line: 2094, column: 6, scope: !7432)
!7457 = !DILocation(line: 2094, column: 20, scope: !7454)
!7458 = !DILocation(line: 2096, column: 27, scope: !7432)
!7459 = !DILocation(line: 2096, column: 9, scope: !7432)
!7460 = !DILocation(line: 2096, column: 7, scope: !7432)
!7461 = !DILocation(line: 2097, column: 6, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7432, file: !3, line: 2097, column: 6)
!7463 = !DILocation(line: 2097, column: 11, scope: !7462)
!7464 = !DILocation(line: 2097, column: 6, scope: !7432)
!7465 = !DILocation(line: 2098, column: 18, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7467, file: !3, line: 2098, column: 7)
!7467 = distinct !DILexicalBlock(scope: !7462, file: !3, line: 2097, column: 20)
!7468 = !DILocation(line: 2098, column: 7, scope: !7466)
!7469 = !DILocation(line: 2098, column: 7, scope: !7467)
!7470 = !DILocation(line: 2099, column: 32, scope: !7466)
!7471 = !DILocation(line: 2099, column: 4, scope: !7466)
!7472 = !DILocation(line: 2101, column: 44, scope: !7466)
!7473 = !DILocation(line: 2101, column: 4, scope: !7466)
!7474 = !DILocation(line: 2102, column: 17, scope: !7467)
!7475 = !DILocation(line: 2102, column: 3, scope: !7467)
!7476 = !DILocation(line: 2103, column: 3, scope: !7467)
!7477 = !DILocation(line: 2105, column: 16, scope: !7432)
!7478 = !DILocation(line: 2105, column: 2, scope: !7432)
!7479 = !DILocation(line: 2107, column: 9, scope: !7432)
!7480 = !DILocation(line: 2107, column: 2, scope: !7432)
!7481 = !DILocation(line: 2108, column: 1, scope: !7432)
!7482 = distinct !DISubprogram(name: "BKE_image_verify_viewer", scope: !3, file: !3, line: 2133, type: !7483, scopeLine: 2134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!7483 = !DISubroutineType(types: !7484)
!7484 = !{!190, !142, !972}
!7485 = !DILocalVariable(name: "type", arg: 1, scope: !7482, file: !3, line: 2133, type: !142)
!7486 = !DILocation(line: 2133, column: 36, scope: !7482)
!7487 = !DILocalVariable(name: "name", arg: 2, scope: !7482, file: !3, line: 2133, type: !972)
!7488 = !DILocation(line: 2133, column: 54, scope: !7482)
!7489 = !DILocalVariable(name: "ima", scope: !7482, file: !3, line: 2135, type: !2937)
!7490 = !DILocation(line: 2135, column: 9, scope: !7482)
!7491 = !DILocation(line: 2137, column: 15, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7482, file: !3, line: 2137, column: 2)
!7493 = !DILocation(line: 2137, column: 21, scope: !7492)
!7494 = !DILocation(line: 2137, column: 27, scope: !7492)
!7495 = !DILocation(line: 2137, column: 13, scope: !7492)
!7496 = !DILocation(line: 2137, column: 11, scope: !7492)
!7497 = !DILocation(line: 2137, column: 7, scope: !7492)
!7498 = !DILocation(line: 2137, column: 34, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 2137, column: 2)
!7500 = !DILocation(line: 2137, column: 2, scope: !7492)
!7501 = !DILocation(line: 2138, column: 7, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 2138, column: 7)
!7503 = !DILocation(line: 2138, column: 12, scope: !7502)
!7504 = !DILocation(line: 2138, column: 19, scope: !7502)
!7505 = !DILocation(line: 2138, column: 7, scope: !7499)
!7506 = !DILocation(line: 2139, column: 8, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7502, file: !3, line: 2139, column: 8)
!7508 = !DILocation(line: 2139, column: 13, scope: !7507)
!7509 = !DILocation(line: 2139, column: 21, scope: !7507)
!7510 = !DILocation(line: 2139, column: 18, scope: !7507)
!7511 = !DILocation(line: 2139, column: 8, scope: !7502)
!7512 = !DILocation(line: 2140, column: 5, scope: !7507)
!7513 = !DILocation(line: 2138, column: 22, scope: !7502)
!7514 = !DILocation(line: 2137, column: 45, scope: !7499)
!7515 = !DILocation(line: 2137, column: 50, scope: !7499)
!7516 = !DILocation(line: 2137, column: 53, scope: !7499)
!7517 = !DILocation(line: 2137, column: 43, scope: !7499)
!7518 = !DILocation(line: 2137, column: 2, scope: !7499)
!7519 = distinct !{!7519, !7500, !7520}
!7520 = !DILocation(line: 2140, column: 5, scope: !7492)
!7521 = !DILocation(line: 2142, column: 6, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7482, file: !3, line: 2142, column: 6)
!7523 = !DILocation(line: 2142, column: 10, scope: !7522)
!7524 = !DILocation(line: 2142, column: 6, scope: !7482)
!7525 = !DILocation(line: 2143, column: 23, scope: !7522)
!7526 = !DILocation(line: 2143, column: 29, scope: !7522)
!7527 = !DILocation(line: 2143, column: 51, scope: !7522)
!7528 = !DILocation(line: 2143, column: 9, scope: !7522)
!7529 = !DILocation(line: 2143, column: 7, scope: !7522)
!7530 = !DILocation(line: 2143, column: 3, scope: !7522)
!7531 = !DILocation(line: 2146, column: 6, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7482, file: !3, line: 2146, column: 6)
!7533 = !DILocation(line: 2146, column: 11, scope: !7532)
!7534 = !DILocation(line: 2146, column: 14, scope: !7532)
!7535 = !DILocation(line: 2146, column: 17, scope: !7532)
!7536 = !DILocation(line: 2146, column: 6, scope: !7482)
!7537 = !DILocation(line: 2147, column: 15, scope: !7532)
!7538 = !DILocation(line: 2147, column: 20, scope: !7532)
!7539 = !DILocation(line: 2147, column: 3, scope: !7532)
!7540 = !DILocation(line: 2149, column: 9, scope: !7482)
!7541 = !DILocation(line: 2149, column: 2, scope: !7482)
!7542 = distinct !DISubprogram(name: "BKE_image_assign_ibuf", scope: !3, file: !3, line: 2152, type: !7543, scopeLine: 2153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!7543 = !DISubroutineType(types: !7544)
!7544 = !{null, !2937, !2997}
!7545 = !DILocalVariable(name: "ima", arg: 1, scope: !7542, file: !3, line: 2152, type: !2937)
!7546 = !DILocation(line: 2152, column: 35, scope: !7542)
!7547 = !DILocalVariable(name: "ibuf", arg: 2, scope: !7542, file: !3, line: 2152, type: !2997)
!7548 = !DILocation(line: 2152, column: 47, scope: !7542)
!7549 = !DILocation(line: 2154, column: 20, scope: !7542)
!7550 = !DILocation(line: 2154, column: 25, scope: !7542)
!7551 = !DILocation(line: 2154, column: 2, scope: !7542)
!7552 = !DILocation(line: 2155, column: 1, scope: !7542)
!7553 = distinct !DISubprogram(name: "BKE_image_walk_all_users", scope: !3, file: !3, line: 2157, type: !7554, scopeLine: 2159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!7554 = !DISubroutineType(types: !7555)
!7555 = !{null, !7556, !177, !7558}
!7556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7557, size: 64)
!7557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3368)
!7558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7559, size: 64)
!7559 = !DISubroutineType(types: !7560)
!7560 = !{null, !2937, !755, !177}
!7561 = !DILocalVariable(name: "mainp", arg: 1, scope: !7553, file: !3, line: 2157, type: !7556)
!7562 = !DILocation(line: 2157, column: 43, scope: !7553)
!7563 = !DILocalVariable(name: "customdata", arg: 2, scope: !7553, file: !3, line: 2157, type: !177)
!7564 = !DILocation(line: 2157, column: 56, scope: !7553)
!7565 = !DILocalVariable(name: "callback", arg: 3, scope: !7553, file: !3, line: 2158, type: !7558)
!7566 = !DILocation(line: 2158, column: 36, scope: !7553)
!7567 = !DILocalVariable(name: "wm", scope: !7553, file: !3, line: 2160, type: !7568)
!7568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7569, size: 64)
!7569 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindowManager", file: !7570, line: 160, baseType: !7571)
!7570 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindowManager", file: !7570, line: 128, size: 2816, elements: !7572)
!7572 = !{!7573, !7574, !7642, !7643, !7644, !7645, !7646, !7647, !7648, !7649, !7658, !7659, !7660, !7661, !7662, !7673, !7674, !7675, !7676, !7677, !7678}
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7571, file: !7570, line: 129, baseType: !194, size: 960)
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "windrawable", scope: !7571, file: !7570, line: 131, baseType: !7575, size: 64, offset: 960)
!7575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7576, size: 64)
!7576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !7570, line: 169, size: 2048, elements: !7577)
!7577 = !{!7578, !7579, !7580, !7581, !7608, !7609, !7610, !7611, !7612, !7613, !7614, !7615, !7616, !7617, !7618, !7619, !7620, !7621, !7622, !7623, !7624, !7625, !7628, !7631, !7634, !7635, !7636, !7637, !7638, !7639, !7640, !7641}
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7576, file: !7570, line: 170, baseType: !7575, size: 64)
!7579 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7576, file: !7570, line: 170, baseType: !7575, size: 64, offset: 64)
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !7576, file: !7570, line: 172, baseType: !177, size: 64, offset: 128)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !7576, file: !7570, line: 174, baseType: !7582, size: 64, offset: 192)
!7582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7583, size: 64)
!7583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !1084, line: 49, size: 1984, elements: !7584)
!7584 = !{!7585, !7586, !7587, !7588, !7589, !7590, !7591, !7592, !7593, !7594, !7595, !7596, !7597, !7598, !7599, !7600, !7601, !7602, !7603, !7604, !7605, !7606, !7607}
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7583, file: !1084, line: 50, baseType: !194, size: 960)
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !7583, file: !1084, line: 52, baseType: !258, size: 128, offset: 960)
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !7583, file: !1084, line: 53, baseType: !258, size: 128, offset: 1088)
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !7583, file: !1084, line: 54, baseType: !258, size: 128, offset: 1216)
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !7583, file: !1084, line: 55, baseType: !258, size: 128, offset: 1344)
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !7583, file: !1084, line: 57, baseType: !760, size: 64, offset: 1472)
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !7583, file: !1084, line: 58, baseType: !760, size: 64, offset: 1536)
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !7583, file: !1084, line: 60, baseType: !142, size: 32, offset: 1600)
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !7583, file: !1084, line: 61, baseType: !142, size: 32, offset: 1632)
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7583, file: !1084, line: 63, baseType: !232, size: 16, offset: 1664)
!7595 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !7583, file: !1084, line: 64, baseType: !232, size: 16, offset: 1680)
!7596 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !7583, file: !1084, line: 65, baseType: !232, size: 16, offset: 1696)
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !7583, file: !1084, line: 66, baseType: !232, size: 16, offset: 1712)
!7598 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !7583, file: !1084, line: 67, baseType: !232, size: 16, offset: 1728)
!7599 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !7583, file: !1084, line: 68, baseType: !232, size: 16, offset: 1744)
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !7583, file: !1084, line: 69, baseType: !232, size: 16, offset: 1760)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !7583, file: !1084, line: 70, baseType: !232, size: 16, offset: 1776)
!7602 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !7583, file: !1084, line: 71, baseType: !232, size: 16, offset: 1792)
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !7583, file: !1084, line: 73, baseType: !232, size: 16, offset: 1808)
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !7583, file: !1084, line: 74, baseType: !232, size: 16, offset: 1824)
!7605 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7583, file: !1084, line: 76, baseType: !232, size: 16, offset: 1840)
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !7583, file: !1084, line: 78, baseType: !1128, size: 64, offset: 1856)
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !7583, file: !1084, line: 79, baseType: !177, size: 64, offset: 1920)
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !7576, file: !7570, line: 175, baseType: !7582, size: 64, offset: 256)
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !7576, file: !7570, line: 176, baseType: !248, size: 512, offset: 320)
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !7576, file: !7570, line: 178, baseType: !232, size: 16, offset: 832)
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !7576, file: !7570, line: 178, baseType: !232, size: 16, offset: 848)
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !7576, file: !7570, line: 178, baseType: !232, size: 16, offset: 864)
!7613 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !7576, file: !7570, line: 178, baseType: !232, size: 16, offset: 880)
!7614 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !7576, file: !7570, line: 179, baseType: !232, size: 16, offset: 896)
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !7576, file: !7570, line: 180, baseType: !232, size: 16, offset: 912)
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !7576, file: !7570, line: 181, baseType: !232, size: 16, offset: 928)
!7617 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !7576, file: !7570, line: 182, baseType: !232, size: 16, offset: 944)
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !7576, file: !7570, line: 183, baseType: !232, size: 16, offset: 960)
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !7576, file: !7570, line: 184, baseType: !232, size: 16, offset: 976)
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !7576, file: !7570, line: 185, baseType: !232, size: 16, offset: 992)
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !7576, file: !7570, line: 186, baseType: !232, size: 16, offset: 1008)
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !7576, file: !7570, line: 188, baseType: !142, size: 32, offset: 1024)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !7576, file: !7570, line: 190, baseType: !232, size: 16, offset: 1056)
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !7576, file: !7570, line: 191, baseType: !232, size: 16, offset: 1072)
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !7576, file: !7570, line: 194, baseType: !7626, size: 64, offset: 1088)
!7626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7627, size: 64)
!7627 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !7570, line: 43, flags: DIFlagFwdDecl)
!7628 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !7576, file: !7570, line: 196, baseType: !7629, size: 64, offset: 1152)
!7629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7630, size: 64)
!7630 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !7570, line: 55, flags: DIFlagFwdDecl)
!7631 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !7576, file: !7570, line: 198, baseType: !7632, size: 64, offset: 1216)
!7632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7633, size: 64)
!7633 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !7570, line: 44, flags: DIFlagFwdDecl)
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !7576, file: !7570, line: 200, baseType: !142, size: 32, offset: 1280)
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !7576, file: !7570, line: 200, baseType: !142, size: 32, offset: 1312)
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !7576, file: !7570, line: 201, baseType: !177, size: 64, offset: 1344)
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !7576, file: !7570, line: 203, baseType: !258, size: 128, offset: 1408)
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !7576, file: !7570, line: 204, baseType: !258, size: 128, offset: 1536)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !7576, file: !7570, line: 205, baseType: !258, size: 128, offset: 1664)
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !7576, file: !7570, line: 207, baseType: !258, size: 128, offset: 1792)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !7576, file: !7570, line: 208, baseType: !258, size: 128, offset: 1920)
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "winactive", scope: !7571, file: !7570, line: 131, baseType: !7575, size: 64, offset: 1024)
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "windows", scope: !7571, file: !7570, line: 132, baseType: !258, size: 128, offset: 1088)
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !7571, file: !7570, line: 134, baseType: !142, size: 32, offset: 1216)
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "file_saved", scope: !7571, file: !7570, line: 135, baseType: !232, size: 16, offset: 1248)
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "op_undo_depth", scope: !7571, file: !7570, line: 136, baseType: !232, size: 16, offset: 1264)
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "operators", scope: !7571, file: !7570, line: 138, baseType: !258, size: 128, offset: 1280)
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !7571, file: !7570, line: 140, baseType: !258, size: 128, offset: 1408)
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !7571, file: !7570, line: 142, baseType: !7650, size: 320, offset: 1536)
!7650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !7570, line: 106, size: 320, elements: !7651)
!7651 = !{!7652, !7653, !7654, !7655, !7656, !7657}
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7650, file: !7570, line: 107, baseType: !258, size: 128)
!7653 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !7650, file: !7570, line: 108, baseType: !142, size: 32, offset: 128)
!7654 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !7650, file: !7570, line: 109, baseType: !142, size: 32, offset: 160)
!7655 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7650, file: !7570, line: 110, baseType: !142, size: 32, offset: 192)
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7650, file: !7570, line: 110, baseType: !142, size: 32, offset: 224)
!7657 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !7650, file: !7570, line: 111, baseType: !1128, size: 64, offset: 256)
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "jobs", scope: !7571, file: !7570, line: 144, baseType: !258, size: 128, offset: 1856)
!7659 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursors", scope: !7571, file: !7570, line: 146, baseType: !258, size: 128, offset: 1984)
!7660 = !DIDerivedType(tag: DW_TAG_member, name: "drags", scope: !7571, file: !7570, line: 148, baseType: !258, size: 128, offset: 2112)
!7661 = !DIDerivedType(tag: DW_TAG_member, name: "keyconfigs", scope: !7571, file: !7570, line: 150, baseType: !258, size: 128, offset: 2240)
!7662 = !DIDerivedType(tag: DW_TAG_member, name: "defaultconf", scope: !7571, file: !7570, line: 151, baseType: !7663, size: 64, offset: 2368)
!7663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7664, size: 64)
!7664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyConfig", file: !7570, line: 310, size: 1344, elements: !7665)
!7665 = !{!7666, !7667, !7668, !7669, !7670, !7671, !7672}
!7666 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7664, file: !7570, line: 311, baseType: !7663, size: 64)
!7667 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7664, file: !7570, line: 311, baseType: !7663, size: 64, offset: 64)
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !7664, file: !7570, line: 313, baseType: !248, size: 512, offset: 128)
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "basename", scope: !7664, file: !7570, line: 314, baseType: !248, size: 512, offset: 640)
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "keymaps", scope: !7664, file: !7570, line: 316, baseType: !258, size: 128, offset: 1152)
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "actkeymap", scope: !7664, file: !7570, line: 317, baseType: !142, size: 32, offset: 1280)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7664, file: !7570, line: 317, baseType: !142, size: 32, offset: 1312)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "addonconf", scope: !7571, file: !7570, line: 152, baseType: !7663, size: 64, offset: 2432)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "userconf", scope: !7571, file: !7570, line: 153, baseType: !7663, size: 64, offset: 2496)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "timers", scope: !7571, file: !7570, line: 155, baseType: !258, size: 128, offset: 2560)
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "autosavetimer", scope: !7571, file: !7570, line: 156, baseType: !1128, size: 64, offset: 2688)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "is_interface_locked", scope: !7571, file: !7570, line: 158, baseType: !214, size: 8, offset: 2752)
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !7571, file: !7570, line: 159, baseType: !2203, size: 56, offset: 2760)
!7679 = !DILocation(line: 2160, column: 19, scope: !7553)
!7680 = !DILocalVariable(name: "win", scope: !7553, file: !3, line: 2161, type: !7681)
!7681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7682, size: 64)
!7682 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindow", file: !7570, line: 209, baseType: !7576)
!7683 = !DILocation(line: 2161, column: 12, scope: !7553)
!7684 = !DILocalVariable(name: "tex", scope: !7553, file: !3, line: 2162, type: !3609)
!7685 = !DILocation(line: 2162, column: 7, scope: !7553)
!7686 = !DILocation(line: 2165, column: 13, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 2165, column: 2)
!7688 = !DILocation(line: 2165, column: 20, scope: !7687)
!7689 = !DILocation(line: 2165, column: 24, scope: !7687)
!7690 = !DILocation(line: 2165, column: 11, scope: !7687)
!7691 = !DILocation(line: 2165, column: 7, scope: !7687)
!7692 = !DILocation(line: 2165, column: 31, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7687, file: !3, line: 2165, column: 2)
!7694 = !DILocation(line: 2165, column: 2, scope: !7687)
!7695 = !DILocation(line: 2166, column: 7, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 2166, column: 7)
!7697 = distinct !DILexicalBlock(scope: !7693, file: !3, line: 2165, column: 56)
!7698 = !DILocation(line: 2166, column: 12, scope: !7696)
!7699 = !DILocation(line: 2166, column: 17, scope: !7696)
!7700 = !DILocation(line: 2166, column: 30, scope: !7696)
!7701 = !DILocation(line: 2166, column: 33, scope: !7696)
!7702 = !DILocation(line: 2166, column: 38, scope: !7696)
!7703 = !DILocation(line: 2166, column: 7, scope: !7697)
!7704 = !DILocation(line: 2167, column: 4, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7696, file: !3, line: 2166, column: 43)
!7706 = !DILocation(line: 2167, column: 13, scope: !7705)
!7707 = !DILocation(line: 2167, column: 18, scope: !7705)
!7708 = !DILocation(line: 2167, column: 24, scope: !7705)
!7709 = !DILocation(line: 2167, column: 29, scope: !7705)
!7710 = !DILocation(line: 2167, column: 36, scope: !7705)
!7711 = !DILocation(line: 2168, column: 3, scope: !7705)
!7712 = !DILocation(line: 2169, column: 2, scope: !7697)
!7713 = !DILocation(line: 2165, column: 42, scope: !7693)
!7714 = !DILocation(line: 2165, column: 47, scope: !7693)
!7715 = !DILocation(line: 2165, column: 50, scope: !7693)
!7716 = !DILocation(line: 2165, column: 40, scope: !7693)
!7717 = !DILocation(line: 2165, column: 2, scope: !7693)
!7718 = distinct !{!7718, !7694, !7719}
!7719 = !DILocation(line: 2169, column: 2, scope: !7687)
!7720 = !DILocation(line: 2172, column: 12, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 2172, column: 2)
!7722 = !DILocation(line: 2172, column: 19, scope: !7721)
!7723 = !DILocation(line: 2172, column: 22, scope: !7721)
!7724 = !DILocation(line: 2172, column: 10, scope: !7721)
!7725 = !DILocation(line: 2172, column: 7, scope: !7721)
!7726 = !DILocation(line: 2172, column: 29, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7721, file: !3, line: 2172, column: 2)
!7728 = !DILocation(line: 2172, column: 2, scope: !7721)
!7729 = !DILocation(line: 2173, column: 14, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 2173, column: 3)
!7731 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 2172, column: 51)
!7732 = !DILocation(line: 2173, column: 18, scope: !7730)
!7733 = !DILocation(line: 2173, column: 26, scope: !7730)
!7734 = !DILocation(line: 2173, column: 12, scope: !7730)
!7735 = !DILocation(line: 2173, column: 8, scope: !7730)
!7736 = !DILocation(line: 2173, column: 33, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 2173, column: 3)
!7738 = !DILocation(line: 2173, column: 3, scope: !7730)
!7739 = !DILocalVariable(name: "sa", scope: !7740, file: !3, line: 2174, type: !7741)
!7740 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 2173, column: 55)
!7741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7742, size: 64)
!7742 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !1084, line: 228, baseType: !7743)
!7743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !1084, line: 203, size: 1280, elements: !7744)
!7744 = !{!7745, !7747, !7748, !7765, !7766, !7767, !7768, !7771, !7772, !7773, !7774, !7775, !7776, !7777, !7778, !7779, !7780, !7781, !7782, !7785, !7786, !7787, !7788}
!7745 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7743, file: !1084, line: 204, baseType: !7746, size: 64)
!7746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7743, size: 64)
!7747 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7743, file: !1084, line: 204, baseType: !7746, size: 64, offset: 64)
!7748 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7743, file: !1084, line: 206, baseType: !7749, size: 64, offset: 128)
!7749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7750, size: 64)
!7750 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !1084, line: 87, baseType: !7751)
!7751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !1084, line: 82, size: 256, elements: !7752)
!7752 = !{!7753, !7755, !7756, !7757, !7763, !7764}
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7751, file: !1084, line: 83, baseType: !7754, size: 64)
!7754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7751, size: 64)
!7755 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7751, file: !1084, line: 83, baseType: !7754, size: 64, offset: 64)
!7756 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !7751, file: !1084, line: 83, baseType: !7754, size: 64, offset: 128)
!7757 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !7751, file: !1084, line: 84, baseType: !7758, size: 32, offset: 192)
!7758 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !297, line: 43, baseType: !7759)
!7759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !297, line: 41, size: 32, elements: !7760)
!7760 = !{!7761, !7762}
!7761 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !7759, file: !297, line: 42, baseType: !232, size: 16)
!7762 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !7759, file: !297, line: 42, baseType: !232, size: 16, offset: 16)
!7763 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7751, file: !1084, line: 86, baseType: !232, size: 16, offset: 224)
!7764 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !7751, file: !1084, line: 86, baseType: !232, size: 16, offset: 240)
!7765 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7743, file: !1084, line: 206, baseType: !7749, size: 64, offset: 192)
!7766 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7743, file: !1084, line: 206, baseType: !7749, size: 64, offset: 256)
!7767 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7743, file: !1084, line: 206, baseType: !7749, size: 64, offset: 320)
!7768 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !7743, file: !1084, line: 207, baseType: !7769, size: 64, offset: 384)
!7769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7770, size: 64)
!7770 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !1084, line: 80, baseType: !7583)
!7771 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !7743, file: !1084, line: 209, baseType: !296, size: 128, offset: 448)
!7772 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !7743, file: !1084, line: 211, baseType: !214, size: 8, offset: 576)
!7773 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !7743, file: !1084, line: 211, baseType: !214, size: 8, offset: 584)
!7774 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !7743, file: !1084, line: 212, baseType: !232, size: 16, offset: 592)
!7775 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !7743, file: !1084, line: 212, baseType: !232, size: 16, offset: 608)
!7776 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !7743, file: !1084, line: 214, baseType: !232, size: 16, offset: 624)
!7777 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !7743, file: !1084, line: 215, baseType: !232, size: 16, offset: 640)
!7778 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7743, file: !1084, line: 216, baseType: !232, size: 16, offset: 656)
!7779 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !7743, file: !1084, line: 217, baseType: !232, size: 16, offset: 672)
!7780 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !7743, file: !1084, line: 219, baseType: !214, size: 8, offset: 688)
!7781 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7743, file: !1084, line: 219, baseType: !214, size: 8, offset: 696)
!7782 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7743, file: !1084, line: 221, baseType: !7783, size: 64, offset: 704)
!7783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7784, size: 64)
!7784 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !1084, line: 39, flags: DIFlagFwdDecl)
!7785 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !7743, file: !1084, line: 223, baseType: !258, size: 128, offset: 768)
!7786 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !7743, file: !1084, line: 224, baseType: !258, size: 128, offset: 896)
!7787 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !7743, file: !1084, line: 225, baseType: !258, size: 128, offset: 1024)
!7788 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !7743, file: !1084, line: 227, baseType: !258, size: 128, offset: 1152)
!7789 = !DILocation(line: 2174, column: 13, scope: !7740)
!7790 = !DILocation(line: 2175, column: 14, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7740, file: !3, line: 2175, column: 4)
!7792 = !DILocation(line: 2175, column: 19, scope: !7791)
!7793 = !DILocation(line: 2175, column: 27, scope: !7791)
!7794 = !DILocation(line: 2175, column: 36, scope: !7791)
!7795 = !DILocation(line: 2175, column: 12, scope: !7791)
!7796 = !DILocation(line: 2175, column: 9, scope: !7791)
!7797 = !DILocation(line: 2175, column: 43, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7791, file: !3, line: 2175, column: 4)
!7799 = !DILocation(line: 2175, column: 4, scope: !7791)
!7800 = !DILocation(line: 2176, column: 9, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 2176, column: 9)
!7802 = distinct !DILexicalBlock(scope: !7798, file: !3, line: 2175, column: 62)
!7803 = !DILocation(line: 2176, column: 13, scope: !7801)
!7804 = !DILocation(line: 2176, column: 23, scope: !7801)
!7805 = !DILocation(line: 2176, column: 9, scope: !7802)
!7806 = !DILocalVariable(name: "v3d", scope: !7807, file: !3, line: 2177, type: !7808)
!7807 = distinct !DILexicalBlock(scope: !7801, file: !3, line: 2176, column: 40)
!7808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7809, size: 64)
!7809 = !DIDerivedType(tag: DW_TAG_typedef, name: "View3D", file: !7810, line: 221, baseType: !7811)
!7810 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view3d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View3D", file: !7810, line: 151, size: 3008, elements: !7812)
!7812 = !{!7813, !7814, !7815, !7816, !7817, !7818, !7819, !7820, !7821, !7822, !7823, !7824, !7825, !7826, !7827, !7828, !7829, !7830, !7831, !7832, !7855, !7857, !7858, !7859, !7860, !7861, !7862, !7863, !7864, !7865, !7866, !7867, !7868, !7869, !7870, !7871, !7872, !7873, !7874, !7875, !7876, !7877, !7878, !7879, !7880, !7881, !7882, !7883, !7884, !7885, !7886, !7887, !7888, !7889}
!7813 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7811, file: !7810, line: 152, baseType: !1169, size: 64)
!7814 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7811, file: !7810, line: 152, baseType: !1169, size: 64, offset: 64)
!7815 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !7811, file: !7810, line: 153, baseType: !258, size: 128, offset: 128)
!7816 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !7811, file: !7810, line: 154, baseType: !142, size: 32, offset: 256)
!7817 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !7811, file: !7810, line: 155, baseType: !185, size: 32, offset: 288)
!7818 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !7811, file: !7810, line: 156, baseType: !1175, size: 128, offset: 320)
!7819 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !7811, file: !7810, line: 158, baseType: !452, size: 128, offset: 448)
!7820 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !7811, file: !7810, line: 159, baseType: !185, size: 32, offset: 576)
!7821 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_size", scope: !7811, file: !7810, line: 161, baseType: !185, size: 32, offset: 608)
!7822 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_drawtype", scope: !7811, file: !7810, line: 162, baseType: !214, size: 8, offset: 640)
!7823 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7811, file: !7810, line: 163, baseType: !1851, size: 24, offset: 648)
!7824 = !DIDerivedType(tag: DW_TAG_member, name: "lay_prev", scope: !7811, file: !7810, line: 165, baseType: !7, size: 32, offset: 672)
!7825 = !DIDerivedType(tag: DW_TAG_member, name: "lay_used", scope: !7811, file: !7810, line: 166, baseType: !7, size: 32, offset: 704)
!7826 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !7811, file: !7810, line: 168, baseType: !232, size: 16, offset: 736)
!7827 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !7811, file: !7810, line: 169, baseType: !232, size: 16, offset: 752)
!7828 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !7811, file: !7810, line: 171, baseType: !504, size: 64, offset: 768)
!7829 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre", scope: !7811, file: !7810, line: 171, baseType: !504, size: 64, offset: 832)
!7830 = !DIDerivedType(tag: DW_TAG_member, name: "render_border", scope: !7811, file: !7810, line: 172, baseType: !1094, size: 128, offset: 896)
!7831 = !DIDerivedType(tag: DW_TAG_member, name: "bgpicbase", scope: !7811, file: !7810, line: 174, baseType: !260, size: 128, offset: 1024)
!7832 = !DIDerivedType(tag: DW_TAG_member, name: "bgpic", scope: !7811, file: !7810, line: 175, baseType: !7833, size: 64, offset: 1152)
!7833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7834, size: 64)
!7834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BGpic", file: !7810, line: 70, size: 832, elements: !7835)
!7835 = !{!7836, !7837, !7838, !7839, !7840, !7841, !7847, !7848, !7849, !7850, !7851, !7852, !7853, !7854}
!7836 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7834, file: !7810, line: 71, baseType: !7833, size: 64)
!7837 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7834, file: !7810, line: 71, baseType: !7833, size: 64, offset: 64)
!7838 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !7834, file: !7810, line: 73, baseType: !190, size: 64, offset: 128)
!7839 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !7834, file: !7810, line: 74, baseType: !757, size: 320, offset: 192)
!7840 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !7834, file: !7810, line: 75, baseType: !1623, size: 64, offset: 512)
!7841 = !DIDerivedType(tag: DW_TAG_member, name: "cuser", scope: !7834, file: !7810, line: 76, baseType: !7842, size: 64, offset: 576)
!7842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipUser", file: !1625, line: 50, size: 64, elements: !7843)
!7843 = !{!7844, !7845, !7846}
!7844 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !7842, file: !1625, line: 51, baseType: !142, size: 32)
!7845 = !DIDerivedType(tag: DW_TAG_member, name: "render_size", scope: !7842, file: !1625, line: 52, baseType: !232, size: 16, offset: 32)
!7846 = !DIDerivedType(tag: DW_TAG_member, name: "render_flag", scope: !7842, file: !1625, line: 52, baseType: !232, size: 16, offset: 48)
!7847 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !7834, file: !7810, line: 77, baseType: !185, size: 32, offset: 640)
!7848 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !7834, file: !7810, line: 77, baseType: !185, size: 32, offset: 672)
!7849 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7834, file: !7810, line: 77, baseType: !185, size: 32, offset: 704)
!7850 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !7834, file: !7810, line: 77, baseType: !185, size: 32, offset: 736)
!7851 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !7834, file: !7810, line: 78, baseType: !232, size: 16, offset: 768)
!7852 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7834, file: !7810, line: 79, baseType: !232, size: 16, offset: 784)
!7853 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !7834, file: !7810, line: 80, baseType: !232, size: 16, offset: 800)
!7854 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7834, file: !7810, line: 80, baseType: !232, size: 16, offset: 816)
!7855 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !7811, file: !7810, line: 177, baseType: !7856, size: 64, offset: 1216)
!7856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7811, size: 64)
!7857 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_bone", scope: !7811, file: !7810, line: 179, baseType: !248, size: 512, offset: 1280)
!7858 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !7811, file: !7810, line: 181, baseType: !7, size: 32, offset: 1792)
!7859 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !7811, file: !7810, line: 182, baseType: !142, size: 32, offset: 1824)
!7860 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !7811, file: !7810, line: 187, baseType: !232, size: 16, offset: 1856)
!7861 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_cursor", scope: !7811, file: !7810, line: 188, baseType: !232, size: 16, offset: 1872)
!7862 = !DIDerivedType(tag: DW_TAG_member, name: "scenelock", scope: !7811, file: !7810, line: 189, baseType: !232, size: 16, offset: 1888)
!7863 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !7811, file: !7810, line: 189, baseType: !232, size: 16, offset: 1904)
!7864 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7811, file: !7810, line: 190, baseType: !232, size: 16, offset: 1920)
!7865 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !7811, file: !7810, line: 190, baseType: !232, size: 16, offset: 1936)
!7866 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !7811, file: !7810, line: 192, baseType: !185, size: 32, offset: 1952)
!7867 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !7811, file: !7810, line: 192, baseType: !185, size: 32, offset: 1984)
!7868 = !DIDerivedType(tag: DW_TAG_member, name: "near", scope: !7811, file: !7810, line: 193, baseType: !185, size: 32, offset: 2016)
!7869 = !DIDerivedType(tag: DW_TAG_member, name: "far", scope: !7811, file: !7810, line: 193, baseType: !185, size: 32, offset: 2048)
!7870 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !7811, file: !7810, line: 194, baseType: !370, size: 96, offset: 2080)
!7871 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !7811, file: !7810, line: 195, baseType: !370, size: 96, offset: 2176)
!7872 = !DIDerivedType(tag: DW_TAG_member, name: "matcap_icon", scope: !7811, file: !7810, line: 197, baseType: !232, size: 16, offset: 2272)
!7873 = !DIDerivedType(tag: DW_TAG_member, name: "gridlines", scope: !7811, file: !7810, line: 199, baseType: !232, size: 16, offset: 2288)
!7874 = !DIDerivedType(tag: DW_TAG_member, name: "gridsubdiv", scope: !7811, file: !7810, line: 200, baseType: !232, size: 16, offset: 2304)
!7875 = !DIDerivedType(tag: DW_TAG_member, name: "gridflag", scope: !7811, file: !7810, line: 201, baseType: !214, size: 8, offset: 2320)
!7876 = !DIDerivedType(tag: DW_TAG_member, name: "twtype", scope: !7811, file: !7810, line: 204, baseType: !214, size: 8, offset: 2328)
!7877 = !DIDerivedType(tag: DW_TAG_member, name: "twmode", scope: !7811, file: !7810, line: 204, baseType: !214, size: 8, offset: 2336)
!7878 = !DIDerivedType(tag: DW_TAG_member, name: "twflag", scope: !7811, file: !7810, line: 204, baseType: !214, size: 8, offset: 2344)
!7879 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !7811, file: !7810, line: 204, baseType: !2219, size: 16, offset: 2352)
!7880 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_transp", scope: !7811, file: !7810, line: 207, baseType: !260, size: 128, offset: 2368)
!7881 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xray", scope: !7811, file: !7810, line: 208, baseType: !260, size: 128, offset: 2496)
!7882 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xraytransp", scope: !7811, file: !7810, line: 209, baseType: !260, size: 128, offset: 2624)
!7883 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !7811, file: !7810, line: 212, baseType: !214, size: 8, offset: 2752)
!7884 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !7811, file: !7810, line: 212, baseType: !214, size: 8, offset: 2760)
!7885 = !DIDerivedType(tag: DW_TAG_member, name: "xray", scope: !7811, file: !7810, line: 212, baseType: !214, size: 8, offset: 2768)
!7886 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !7811, file: !7810, line: 213, baseType: !2084, size: 40, offset: 2776)
!7887 = !DIDerivedType(tag: DW_TAG_member, name: "properties_storage", scope: !7811, file: !7810, line: 215, baseType: !177, size: 64, offset: 2816)
!7888 = !DIDerivedType(tag: DW_TAG_member, name: "defmaterial", scope: !7811, file: !7810, line: 216, baseType: !329, size: 64, offset: 2880)
!7889 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !7811, file: !7810, line: 219, baseType: !595, size: 64, offset: 2944)
!7890 = !DILocation(line: 2177, column: 14, scope: !7807)
!7891 = !DILocation(line: 2177, column: 20, scope: !7807)
!7892 = !DILocation(line: 2177, column: 24, scope: !7807)
!7893 = !DILocation(line: 2177, column: 34, scope: !7807)
!7894 = !DILocalVariable(name: "bgpic", scope: !7807, file: !3, line: 2178, type: !7895)
!7895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7896, size: 64)
!7896 = !DIDerivedType(tag: DW_TAG_typedef, name: "BGpic", file: !7810, line: 81, baseType: !7834)
!7897 = !DILocation(line: 2178, column: 13, scope: !7807)
!7898 = !DILocation(line: 2179, column: 19, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7807, file: !3, line: 2179, column: 6)
!7900 = !DILocation(line: 2179, column: 24, scope: !7899)
!7901 = !DILocation(line: 2179, column: 34, scope: !7899)
!7902 = !DILocation(line: 2179, column: 17, scope: !7899)
!7903 = !DILocation(line: 2179, column: 11, scope: !7899)
!7904 = !DILocation(line: 2179, column: 41, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7899, file: !3, line: 2179, column: 6)
!7906 = !DILocation(line: 2179, column: 6, scope: !7899)
!7907 = !DILocation(line: 2180, column: 7, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2179, column: 69)
!7909 = !DILocation(line: 2180, column: 16, scope: !7908)
!7910 = !DILocation(line: 2180, column: 23, scope: !7908)
!7911 = !DILocation(line: 2180, column: 29, scope: !7908)
!7912 = !DILocation(line: 2180, column: 36, scope: !7908)
!7913 = !DILocation(line: 2180, column: 43, scope: !7908)
!7914 = !DILocation(line: 2181, column: 6, scope: !7908)
!7915 = !DILocation(line: 2179, column: 56, scope: !7905)
!7916 = !DILocation(line: 2179, column: 63, scope: !7905)
!7917 = !DILocation(line: 2179, column: 54, scope: !7905)
!7918 = !DILocation(line: 2179, column: 6, scope: !7905)
!7919 = distinct !{!7919, !7906, !7920}
!7920 = !DILocation(line: 2181, column: 6, scope: !7899)
!7921 = !DILocation(line: 2182, column: 5, scope: !7807)
!7922 = !DILocation(line: 2183, column: 14, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7801, file: !3, line: 2183, column: 14)
!7924 = !DILocation(line: 2183, column: 18, scope: !7923)
!7925 = !DILocation(line: 2183, column: 28, scope: !7923)
!7926 = !DILocation(line: 2183, column: 14, scope: !7801)
!7927 = !DILocalVariable(name: "sima", scope: !7928, file: !3, line: 2184, type: !7929)
!7928 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 2183, column: 44)
!7929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7930, size: 64)
!7930 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceImage", file: !73, line: 743, baseType: !7931)
!7931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceImage", file: !73, line: 710, size: 84672, elements: !7932)
!7932 = !{!7933, !7934, !7935, !7936, !7937, !7938, !7939, !7940, !7941, !7982, !7983, !7984, !7985, !7986, !7987, !7988, !7989, !7990, !7991, !7992, !7993, !7994, !7995, !7996, !7997, !7998, !7999}
!7933 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7931, file: !73, line: 711, baseType: !1164, size: 64)
!7934 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7931, file: !73, line: 711, baseType: !1164, size: 64, offset: 64)
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !7931, file: !73, line: 712, baseType: !258, size: 128, offset: 128)
!7936 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !7931, file: !73, line: 713, baseType: !142, size: 32, offset: 256)
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7931, file: !73, line: 715, baseType: !142, size: 32, offset: 288)
!7938 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !7931, file: !73, line: 717, baseType: !190, size: 64, offset: 320)
!7939 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !7931, file: !73, line: 718, baseType: !757, size: 320, offset: 384)
!7940 = !DIDerivedType(tag: DW_TAG_member, name: "cumap", scope: !7931, file: !73, line: 720, baseType: !1887, size: 64, offset: 704)
!7941 = !DIDerivedType(tag: DW_TAG_member, name: "scopes", scope: !7931, file: !73, line: 722, baseType: !7942, size: 42112, offset: 768)
!7942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scopes", file: !1615, line: 138, size: 42112, elements: !7943)
!7943 = !{!7944, !7945, !7946, !7947, !7948, !7949, !7950, !7951, !7952, !7953, !7954, !7957, !7976, !7977, !7978, !7979, !7980, !7981}
!7944 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !7942, file: !1615, line: 139, baseType: !142, size: 32)
!7945 = !DIDerivedType(tag: DW_TAG_member, name: "sample_full", scope: !7942, file: !1615, line: 140, baseType: !142, size: 32, offset: 32)
!7946 = !DIDerivedType(tag: DW_TAG_member, name: "sample_lines", scope: !7942, file: !1615, line: 141, baseType: !142, size: 32, offset: 64)
!7947 = !DIDerivedType(tag: DW_TAG_member, name: "accuracy", scope: !7942, file: !1615, line: 142, baseType: !185, size: 32, offset: 96)
!7948 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_mode", scope: !7942, file: !1615, line: 143, baseType: !142, size: 32, offset: 128)
!7949 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_alpha", scope: !7942, file: !1615, line: 144, baseType: !185, size: 32, offset: 160)
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_yfac", scope: !7942, file: !1615, line: 145, baseType: !185, size: 32, offset: 192)
!7951 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_height", scope: !7942, file: !1615, line: 146, baseType: !142, size: 32, offset: 224)
!7952 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_alpha", scope: !7942, file: !1615, line: 147, baseType: !185, size: 32, offset: 256)
!7953 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_height", scope: !7942, file: !1615, line: 148, baseType: !142, size: 32, offset: 288)
!7954 = !DIDerivedType(tag: DW_TAG_member, name: "minmax", scope: !7942, file: !1615, line: 149, baseType: !7955, size: 192, offset: 320)
!7955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 192, elements: !7956)
!7956 = !{!372, !188}
!7957 = !DIDerivedType(tag: DW_TAG_member, name: "hist", scope: !7942, file: !1615, line: 150, baseType: !7958, size: 41280, offset: 512)
!7958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Histogram", file: !1615, line: 118, size: 41280, elements: !7959)
!7959 = !{!7960, !7961, !7962, !7964, !7965, !7966, !7967, !7968, !7969, !7970, !7971, !7972, !7973}
!7960 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !7958, file: !1615, line: 119, baseType: !142, size: 32)
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !7958, file: !1615, line: 120, baseType: !142, size: 32, offset: 32)
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "data_luma", scope: !7958, file: !1615, line: 121, baseType: !7963, size: 8192, offset: 64)
!7963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 8192, elements: !877)
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "data_r", scope: !7958, file: !1615, line: 122, baseType: !7963, size: 8192, offset: 8256)
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "data_g", scope: !7958, file: !1615, line: 123, baseType: !7963, size: 8192, offset: 16448)
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "data_b", scope: !7958, file: !1615, line: 124, baseType: !7963, size: 8192, offset: 24640)
!7967 = !DIDerivedType(tag: DW_TAG_member, name: "data_a", scope: !7958, file: !1615, line: 125, baseType: !7963, size: 8192, offset: 32832)
!7968 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !7958, file: !1615, line: 126, baseType: !185, size: 32, offset: 41024)
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !7958, file: !1615, line: 126, baseType: !185, size: 32, offset: 41056)
!7970 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !7958, file: !1615, line: 127, baseType: !232, size: 16, offset: 41088)
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7958, file: !1615, line: 128, baseType: !232, size: 16, offset: 41104)
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !7958, file: !1615, line: 129, baseType: !142, size: 32, offset: 41120)
!7973 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !7958, file: !1615, line: 133, baseType: !7974, size: 128, offset: 41152)
!7974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 128, elements: !7975)
!7975 = !{!188, !188}
!7976 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_1", scope: !7942, file: !1615, line: 151, baseType: !293, size: 64, offset: 41792)
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_2", scope: !7942, file: !1615, line: 152, baseType: !293, size: 64, offset: 41856)
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_3", scope: !7942, file: !1615, line: 153, baseType: !293, size: 64, offset: 41920)
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope", scope: !7942, file: !1615, line: 154, baseType: !293, size: 64, offset: 41984)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_tot", scope: !7942, file: !1615, line: 155, baseType: !142, size: 32, offset: 42048)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7942, file: !1615, line: 156, baseType: !142, size: 32, offset: 42080)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "sample_line_hist", scope: !7931, file: !73, line: 723, baseType: !7958, size: 41280, offset: 42880)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !7931, file: !73, line: 725, baseType: !595, size: 64, offset: 84160)
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !7931, file: !73, line: 727, baseType: !752, size: 64, offset: 84224)
!7985 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !7931, file: !73, line: 728, baseType: !185, size: 32, offset: 84288)
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !7931, file: !73, line: 728, baseType: !185, size: 32, offset: 84320)
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !7931, file: !73, line: 729, baseType: !185, size: 32, offset: 84352)
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "centx", scope: !7931, file: !73, line: 730, baseType: !185, size: 32, offset: 84384)
!7989 = !DIDerivedType(tag: DW_TAG_member, name: "centy", scope: !7931, file: !73, line: 730, baseType: !185, size: 32, offset: 84416)
!7990 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !7931, file: !73, line: 732, baseType: !214, size: 8, offset: 84448)
!7991 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !7931, file: !73, line: 733, baseType: !214, size: 8, offset: 84456)
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7931, file: !73, line: 734, baseType: !232, size: 16, offset: 84464)
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "curtile", scope: !7931, file: !73, line: 735, baseType: !232, size: 16, offset: 84480)
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7931, file: !73, line: 736, baseType: !232, size: 16, offset: 84496)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uv", scope: !7931, file: !73, line: 737, baseType: !214, size: 8, offset: 84512)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "sticky", scope: !7931, file: !73, line: 738, baseType: !214, size: 8, offset: 84520)
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uvstretch", scope: !7931, file: !73, line: 739, baseType: !214, size: 8, offset: 84528)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !7931, file: !73, line: 740, baseType: !214, size: 8, offset: 84536)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "mask_info", scope: !7931, file: !73, line: 742, baseType: !8000, size: 128, offset: 84544)
!8000 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSpaceInfo", file: !73, line: 554, baseType: !8001)
!8001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSpaceInfo", file: !73, line: 545, size: 128, elements: !8002)
!8002 = !{!8003, !8004, !8005, !8006, !8007}
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !8001, file: !73, line: 548, baseType: !1826, size: 64)
!8004 = !DIDerivedType(tag: DW_TAG_member, name: "draw_flag", scope: !8001, file: !73, line: 550, baseType: !214, size: 8, offset: 64)
!8005 = !DIDerivedType(tag: DW_TAG_member, name: "draw_type", scope: !8001, file: !73, line: 551, baseType: !214, size: 8, offset: 72)
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_mode", scope: !8001, file: !73, line: 552, baseType: !214, size: 8, offset: 80)
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !8001, file: !73, line: 553, baseType: !2084, size: 40, offset: 88)
!8008 = !DILocation(line: 2184, column: 18, scope: !7928)
!8009 = !DILocation(line: 2184, column: 25, scope: !7928)
!8010 = !DILocation(line: 2184, column: 29, scope: !7928)
!8011 = !DILocation(line: 2184, column: 39, scope: !7928)
!8012 = !DILocation(line: 2185, column: 6, scope: !7928)
!8013 = !DILocation(line: 2185, column: 15, scope: !7928)
!8014 = !DILocation(line: 2185, column: 21, scope: !7928)
!8015 = !DILocation(line: 2185, column: 29, scope: !7928)
!8016 = !DILocation(line: 2185, column: 35, scope: !7928)
!8017 = !DILocation(line: 2185, column: 42, scope: !7928)
!8018 = !DILocation(line: 2186, column: 5, scope: !7928)
!8019 = !DILocation(line: 2187, column: 14, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 2187, column: 14)
!8021 = !DILocation(line: 2187, column: 18, scope: !8020)
!8022 = !DILocation(line: 2187, column: 28, scope: !8020)
!8023 = !DILocation(line: 2187, column: 14, scope: !7923)
!8024 = !DILocalVariable(name: "snode", scope: !8025, file: !3, line: 2188, type: !8026)
!8025 = distinct !DILexicalBlock(scope: !8020, file: !3, line: 2187, column: 43)
!8026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8027, size: 64)
!8027 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceNode", file: !73, line: 963, baseType: !1161)
!8028 = !DILocation(line: 2188, column: 17, scope: !8025)
!8029 = !DILocation(line: 2188, column: 25, scope: !8025)
!8030 = !DILocation(line: 2188, column: 29, scope: !8025)
!8031 = !DILocation(line: 2188, column: 39, scope: !8025)
!8032 = !DILocation(line: 2189, column: 10, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 2189, column: 10)
!8034 = !DILocation(line: 2189, column: 17, scope: !8033)
!8035 = !DILocation(line: 2189, column: 26, scope: !8033)
!8036 = !DILocation(line: 2189, column: 29, scope: !8033)
!8037 = !DILocation(line: 2189, column: 36, scope: !8033)
!8038 = !DILocation(line: 2189, column: 46, scope: !8033)
!8039 = !DILocation(line: 2189, column: 51, scope: !8033)
!8040 = !DILocation(line: 2189, column: 10, scope: !8025)
!8041 = !DILocalVariable(name: "node", scope: !8042, file: !3, line: 2190, type: !1049)
!8042 = distinct !DILexicalBlock(scope: !8033, file: !3, line: 2189, column: 70)
!8043 = !DILocation(line: 2190, column: 14, scope: !8042)
!8044 = !DILocation(line: 2191, column: 19, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 2191, column: 7)
!8046 = !DILocation(line: 2191, column: 26, scope: !8045)
!8047 = !DILocation(line: 2191, column: 36, scope: !8045)
!8048 = !DILocation(line: 2191, column: 42, scope: !8045)
!8049 = !DILocation(line: 2191, column: 17, scope: !8045)
!8050 = !DILocation(line: 2191, column: 12, scope: !8045)
!8051 = !DILocation(line: 2191, column: 49, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8045, file: !3, line: 2191, column: 7)
!8053 = !DILocation(line: 2191, column: 7, scope: !8045)
!8054 = !DILocation(line: 2192, column: 12, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8056, file: !3, line: 2192, column: 12)
!8056 = distinct !DILexicalBlock(scope: !8052, file: !3, line: 2191, column: 74)
!8057 = !DILocation(line: 2192, column: 18, scope: !8055)
!8058 = !DILocation(line: 2192, column: 21, scope: !8055)
!8059 = !DILocation(line: 2192, column: 24, scope: !8055)
!8060 = !DILocation(line: 2192, column: 30, scope: !8055)
!8061 = !DILocation(line: 2192, column: 35, scope: !8055)
!8062 = !DILocation(line: 2192, column: 12, scope: !8056)
!8063 = !DILocalVariable(name: "ima", scope: !8064, file: !3, line: 2193, type: !2937)
!8064 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2192, column: 54)
!8065 = !DILocation(line: 2193, column: 16, scope: !8064)
!8066 = !DILocation(line: 2193, column: 31, scope: !8064)
!8067 = !DILocation(line: 2193, column: 37, scope: !8064)
!8068 = !DILocation(line: 2193, column: 22, scope: !8064)
!8069 = !DILocalVariable(name: "iuser", scope: !8064, file: !3, line: 2194, type: !755)
!8070 = !DILocation(line: 2194, column: 20, scope: !8064)
!8071 = !DILocation(line: 2194, column: 28, scope: !8064)
!8072 = !DILocation(line: 2194, column: 34, scope: !8064)
!8073 = !DILocation(line: 2195, column: 9, scope: !8064)
!8074 = !DILocation(line: 2195, column: 18, scope: !8064)
!8075 = !DILocation(line: 2195, column: 23, scope: !8064)
!8076 = !DILocation(line: 2195, column: 30, scope: !8064)
!8077 = !DILocation(line: 2196, column: 8, scope: !8064)
!8078 = !DILocation(line: 2197, column: 7, scope: !8056)
!8079 = !DILocation(line: 2191, column: 62, scope: !8052)
!8080 = !DILocation(line: 2191, column: 68, scope: !8052)
!8081 = !DILocation(line: 2191, column: 60, scope: !8052)
!8082 = !DILocation(line: 2191, column: 7, scope: !8052)
!8083 = distinct !{!8083, !8053, !8084}
!8084 = !DILocation(line: 2197, column: 7, scope: !8045)
!8085 = !DILocation(line: 2198, column: 6, scope: !8042)
!8086 = !DILocation(line: 2199, column: 5, scope: !8025)
!8087 = !DILocation(line: 2200, column: 4, scope: !7802)
!8088 = !DILocation(line: 2175, column: 52, scope: !7798)
!8089 = !DILocation(line: 2175, column: 56, scope: !7798)
!8090 = !DILocation(line: 2175, column: 50, scope: !7798)
!8091 = !DILocation(line: 2175, column: 4, scope: !7798)
!8092 = distinct !{!8092, !7799, !8093}
!8093 = !DILocation(line: 2200, column: 4, scope: !7791)
!8094 = !DILocation(line: 2201, column: 3, scope: !7740)
!8095 = !DILocation(line: 2173, column: 44, scope: !7737)
!8096 = !DILocation(line: 2173, column: 49, scope: !7737)
!8097 = !DILocation(line: 2173, column: 42, scope: !7737)
!8098 = !DILocation(line: 2173, column: 3, scope: !7737)
!8099 = distinct !{!8099, !7738, !8100}
!8100 = !DILocation(line: 2201, column: 3, scope: !7730)
!8101 = !DILocation(line: 2202, column: 2, scope: !7731)
!8102 = !DILocation(line: 2172, column: 38, scope: !7727)
!8103 = !DILocation(line: 2172, column: 42, scope: !7727)
!8104 = !DILocation(line: 2172, column: 45, scope: !7727)
!8105 = !DILocation(line: 2172, column: 36, scope: !7727)
!8106 = !DILocation(line: 2172, column: 2, scope: !7727)
!8107 = distinct !{!8107, !7728, !8108}
!8108 = !DILocation(line: 2202, column: 2, scope: !7721)
!8109 = !DILocation(line: 2203, column: 1, scope: !7553)
!8110 = distinct !DISubprogram(name: "BKE_image_signal", scope: !3, file: !3, line: 2214, type: !8111, scopeLine: 2215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!8111 = !DISubroutineType(types: !8112)
!8112 = !{null, !2937, !755, !142}
!8113 = !DILocalVariable(name: "ima", arg: 1, scope: !8110, file: !3, line: 2214, type: !2937)
!8114 = !DILocation(line: 2214, column: 30, scope: !8110)
!8115 = !DILocalVariable(name: "iuser", arg: 2, scope: !8110, file: !3, line: 2214, type: !755)
!8116 = !DILocation(line: 2214, column: 46, scope: !8110)
!8117 = !DILocalVariable(name: "signal", arg: 3, scope: !8110, file: !3, line: 2214, type: !142)
!8118 = !DILocation(line: 2214, column: 57, scope: !8110)
!8119 = !DILocation(line: 2216, column: 6, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 2216, column: 6)
!8121 = !DILocation(line: 2216, column: 10, scope: !8120)
!8122 = !DILocation(line: 2216, column: 6, scope: !8110)
!8123 = !DILocation(line: 2217, column: 3, scope: !8120)
!8124 = !DILocation(line: 2219, column: 2, scope: !8110)
!8125 = !DILocation(line: 2221, column: 10, scope: !8110)
!8126 = !DILocation(line: 2221, column: 2, scope: !8110)
!8127 = !DILocation(line: 2223, column: 27, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 2221, column: 18)
!8129 = !DILocation(line: 2223, column: 4, scope: !8128)
!8130 = !DILocation(line: 2224, column: 8, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 2224, column: 8)
!8132 = !DILocation(line: 2224, column: 8, scope: !8128)
!8133 = !DILocation(line: 2225, column: 5, scope: !8131)
!8134 = !DILocation(line: 2225, column: 12, scope: !8131)
!8135 = !DILocation(line: 2225, column: 15, scope: !8131)
!8136 = !DILocation(line: 2226, column: 4, scope: !8128)
!8137 = !DILocation(line: 2228, column: 8, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 2228, column: 8)
!8139 = !DILocation(line: 2228, column: 13, scope: !8138)
!8140 = !DILocation(line: 2228, column: 18, scope: !8138)
!8141 = !DILocation(line: 2228, column: 8, scope: !8128)
!8142 = !DILocation(line: 2229, column: 9, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 2229, column: 9)
!8144 = !DILocation(line: 2229, column: 14, scope: !8143)
!8145 = !DILocation(line: 2229, column: 21, scope: !8143)
!8146 = !DILocation(line: 2229, column: 9, scope: !8138)
!8147 = !DILocation(line: 2230, column: 6, scope: !8143)
!8148 = !DILocation(line: 2230, column: 11, scope: !8143)
!8149 = !DILocation(line: 2230, column: 16, scope: !8143)
!8150 = !DILocation(line: 2229, column: 24, scope: !8143)
!8151 = !DILocation(line: 2232, column: 8, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 2232, column: 8)
!8153 = !DILocation(line: 2232, column: 13, scope: !8152)
!8154 = !DILocation(line: 2232, column: 20, scope: !8152)
!8155 = !DILocation(line: 2232, column: 8, scope: !8128)
!8156 = !DILocation(line: 2233, column: 9, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 2233, column: 9)
!8158 = distinct !DILexicalBlock(scope: !8152, file: !3, line: 2232, column: 42)
!8159 = !DILocation(line: 2233, column: 14, scope: !8157)
!8160 = !DILocation(line: 2233, column: 20, scope: !8157)
!8161 = !DILocation(line: 2233, column: 25, scope: !8157)
!8162 = !DILocation(line: 2233, column: 28, scope: !8157)
!8163 = !DILocation(line: 2233, column: 33, scope: !8157)
!8164 = !DILocation(line: 2233, column: 39, scope: !8157)
!8165 = !DILocation(line: 2233, column: 9, scope: !8158)
!8166 = !DILocalVariable(name: "ibuf", scope: !8167, file: !3, line: 2234, type: !2997)
!8167 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 2233, column: 45)
!8168 = !DILocation(line: 2234, column: 13, scope: !8167)
!8169 = !DILocation(line: 2234, column: 58, scope: !8167)
!8170 = !DILocation(line: 2234, column: 20, scope: !8167)
!8171 = !DILocation(line: 2235, column: 10, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8167, file: !3, line: 2235, column: 10)
!8173 = !DILocation(line: 2235, column: 10, scope: !8167)
!8174 = !DILocation(line: 2236, column: 20, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8172, file: !3, line: 2235, column: 16)
!8176 = !DILocation(line: 2236, column: 26, scope: !8175)
!8177 = !DILocation(line: 2236, column: 7, scope: !8175)
!8178 = !DILocation(line: 2236, column: 12, scope: !8175)
!8179 = !DILocation(line: 2236, column: 18, scope: !8175)
!8180 = !DILocation(line: 2237, column: 20, scope: !8175)
!8181 = !DILocation(line: 2237, column: 26, scope: !8175)
!8182 = !DILocation(line: 2237, column: 7, scope: !8175)
!8183 = !DILocation(line: 2237, column: 12, scope: !8175)
!8184 = !DILocation(line: 2237, column: 18, scope: !8175)
!8185 = !DILocation(line: 2238, column: 21, scope: !8175)
!8186 = !DILocation(line: 2238, column: 7, scope: !8175)
!8187 = !DILocation(line: 2239, column: 6, scope: !8175)
!8188 = !DILocation(line: 2240, column: 5, scope: !8167)
!8189 = !DILocation(line: 2249, column: 5, scope: !8158)
!8190 = !DILocation(line: 2249, column: 10, scope: !8158)
!8191 = !DILocation(line: 2249, column: 18, scope: !8158)
!8192 = !DILocation(line: 2250, column: 4, scope: !8158)
!8193 = !DILocation(line: 2264, column: 27, scope: !8128)
!8194 = !DILocation(line: 2264, column: 4, scope: !8128)
!8195 = !DILocation(line: 2267, column: 4, scope: !8128)
!8196 = !DILocation(line: 2267, column: 9, scope: !8128)
!8197 = !DILocation(line: 2267, column: 12, scope: !8128)
!8198 = !DILocation(line: 2268, column: 8, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 2268, column: 8)
!8200 = !DILocation(line: 2268, column: 8, scope: !8128)
!8201 = !DILocation(line: 2269, column: 5, scope: !8199)
!8202 = !DILocation(line: 2269, column: 12, scope: !8199)
!8203 = !DILocation(line: 2269, column: 15, scope: !8199)
!8204 = !DILocation(line: 2271, column: 31, scope: !8128)
!8205 = !DILocation(line: 2271, column: 37, scope: !8128)
!8206 = !DILocation(line: 2271, column: 4, scope: !8128)
!8207 = !DILocation(line: 2273, column: 4, scope: !8128)
!8208 = !DILocation(line: 2277, column: 8, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 2277, column: 8)
!8210 = !DILocation(line: 2277, column: 13, scope: !8209)
!8211 = !DILocation(line: 2277, column: 8, scope: !8128)
!8212 = !DILocalVariable(name: "pf", scope: !8213, file: !3, line: 2278, type: !5075)
!8213 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 2277, column: 25)
!8214 = !DILocation(line: 2278, column: 17, scope: !8213)
!8215 = !DILocation(line: 2279, column: 30, scope: !8213)
!8216 = !DILocation(line: 2279, column: 35, scope: !8213)
!8217 = !DILocation(line: 2279, column: 41, scope: !8213)
!8218 = !DILocation(line: 2279, column: 10, scope: !8213)
!8219 = !DILocation(line: 2279, column: 8, scope: !8213)
!8220 = !DILocation(line: 2280, column: 9, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 2280, column: 9)
!8222 = !DILocation(line: 2280, column: 9, scope: !8213)
!8223 = !DILocation(line: 2281, column: 21, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8221, file: !3, line: 2280, column: 13)
!8225 = !DILocation(line: 2281, column: 26, scope: !8224)
!8226 = !DILocation(line: 2281, column: 6, scope: !8224)
!8227 = !DILocation(line: 2282, column: 24, scope: !8224)
!8228 = !DILocation(line: 2282, column: 6, scope: !8224)
!8229 = !DILocation(line: 2282, column: 11, scope: !8224)
!8230 = !DILocation(line: 2282, column: 22, scope: !8224)
!8231 = !DILocation(line: 2283, column: 29, scope: !8224)
!8232 = !DILocation(line: 2283, column: 6, scope: !8224)
!8233 = !DILocation(line: 2284, column: 5, scope: !8224)
!8234 = !DILocation(line: 2286, column: 6, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8221, file: !3, line: 2285, column: 10)
!8236 = !DILocation(line: 2288, column: 4, scope: !8213)
!8237 = !DILocation(line: 2290, column: 28, scope: !8209)
!8238 = !DILocation(line: 2290, column: 5, scope: !8209)
!8239 = !DILocation(line: 2292, column: 8, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 2292, column: 8)
!8241 = !DILocation(line: 2292, column: 8, scope: !8128)
!8242 = !DILocation(line: 2293, column: 5, scope: !8240)
!8243 = !DILocation(line: 2293, column: 12, scope: !8240)
!8244 = !DILocation(line: 2293, column: 15, scope: !8240)
!8245 = !DILocation(line: 2295, column: 4, scope: !8128)
!8246 = !DILocation(line: 2297, column: 8, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 2297, column: 8)
!8248 = !DILocation(line: 2297, column: 8, scope: !8128)
!8249 = !DILocation(line: 2298, column: 5, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8247, file: !3, line: 2297, column: 15)
!8251 = !DILocation(line: 2298, column: 12, scope: !8250)
!8252 = !DILocation(line: 2298, column: 15, scope: !8250)
!8253 = !DILocation(line: 2299, column: 9, scope: !8254)
!8254 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 2299, column: 9)
!8255 = !DILocation(line: 2299, column: 14, scope: !8254)
!8256 = !DILocation(line: 2299, column: 21, scope: !8254)
!8257 = !DILocation(line: 2299, column: 37, scope: !8254)
!8258 = !DILocation(line: 2299, column: 40, scope: !8254)
!8259 = !DILocation(line: 2299, column: 45, scope: !8254)
!8260 = !DILocation(line: 2299, column: 52, scope: !8254)
!8261 = !DILocation(line: 2299, column: 9, scope: !8250)
!8262 = !DILocation(line: 2300, column: 10, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 2300, column: 10)
!8264 = distinct !DILexicalBlock(scope: !8254, file: !3, line: 2299, column: 73)
!8265 = !DILocation(line: 2300, column: 15, scope: !8263)
!8266 = !DILocation(line: 2300, column: 20, scope: !8263)
!8267 = !DILocation(line: 2300, column: 10, scope: !8264)
!8268 = !DILocation(line: 2301, column: 7, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8263, file: !3, line: 2300, column: 44)
!8270 = !DILocation(line: 2301, column: 14, scope: !8269)
!8271 = !DILocation(line: 2301, column: 26, scope: !8269)
!8272 = !DILocation(line: 2302, column: 22, scope: !8269)
!8273 = !DILocation(line: 2302, column: 29, scope: !8269)
!8274 = !DILocation(line: 2302, column: 34, scope: !8269)
!8275 = !DILocation(line: 2302, column: 7, scope: !8269)
!8276 = !DILocation(line: 2302, column: 14, scope: !8269)
!8277 = !DILocation(line: 2302, column: 20, scope: !8269)
!8278 = !DILocation(line: 2303, column: 6, scope: !8269)
!8279 = !DILocation(line: 2304, column: 5, scope: !8264)
!8280 = !DILocation(line: 2305, column: 4, scope: !8250)
!8281 = !DILocation(line: 2306, column: 4, scope: !8128)
!8282 = !DILocation(line: 2308, column: 27, scope: !8128)
!8283 = !DILocation(line: 2308, column: 4, scope: !8128)
!8284 = !DILocation(line: 2310, column: 4, scope: !8128)
!8285 = !DILocation(line: 2310, column: 9, scope: !8128)
!8286 = !DILocation(line: 2310, column: 12, scope: !8128)
!8287 = !DILocation(line: 2312, column: 8, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 2312, column: 8)
!8289 = !DILocation(line: 2312, column: 8, scope: !8128)
!8290 = !DILocation(line: 2313, column: 5, scope: !8288)
!8291 = !DILocation(line: 2313, column: 12, scope: !8288)
!8292 = !DILocation(line: 2313, column: 15, scope: !8288)
!8293 = !DILocation(line: 2315, column: 4, scope: !8128)
!8294 = !DILocation(line: 2318, column: 2, scope: !8110)
!8295 = !DILocalVariable(name: "scene", scope: !8296, file: !3, line: 2323, type: !6030)
!8296 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 2322, column: 2)
!8297 = !DILocation(line: 2323, column: 10, scope: !8296)
!8298 = !DILocation(line: 2324, column: 18, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 2324, column: 3)
!8300 = !DILocation(line: 2324, column: 24, scope: !8299)
!8301 = !DILocation(line: 2324, column: 30, scope: !8299)
!8302 = !DILocation(line: 2324, column: 16, scope: !8299)
!8303 = !DILocation(line: 2324, column: 14, scope: !8299)
!8304 = !DILocation(line: 2324, column: 8, scope: !8299)
!8305 = !DILocation(line: 2324, column: 37, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8299, file: !3, line: 2324, column: 3)
!8307 = !DILocation(line: 2324, column: 3, scope: !8299)
!8308 = !DILocation(line: 2325, column: 8, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 2325, column: 8)
!8310 = distinct !DILexicalBlock(scope: !8306, file: !3, line: 2324, column: 68)
!8311 = !DILocation(line: 2325, column: 15, scope: !8309)
!8312 = !DILocation(line: 2325, column: 8, scope: !8310)
!8313 = !DILocation(line: 2326, column: 18, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 2325, column: 25)
!8315 = !DILocation(line: 2326, column: 25, scope: !8314)
!8316 = !DILocation(line: 2326, column: 36, scope: !8314)
!8317 = !DILocation(line: 2326, column: 41, scope: !8314)
!8318 = !DILocation(line: 2326, column: 5, scope: !8314)
!8319 = !DILocation(line: 2327, column: 4, scope: !8314)
!8320 = !DILocation(line: 2328, column: 3, scope: !8310)
!8321 = !DILocation(line: 2324, column: 52, scope: !8306)
!8322 = !DILocation(line: 2324, column: 59, scope: !8306)
!8323 = !DILocation(line: 2324, column: 62, scope: !8306)
!8324 = !DILocation(line: 2324, column: 50, scope: !8306)
!8325 = !DILocation(line: 2324, column: 3, scope: !8306)
!8326 = distinct !{!8326, !8307, !8327}
!8327 = !DILocation(line: 2328, column: 3, scope: !8299)
!8328 = !DILocation(line: 2330, column: 1, scope: !8110)
!8329 = distinct !DISubprogram(name: "image_tag_frame_recalc", scope: !3, file: !3, line: 2205, type: !7559, scopeLine: 2206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!8330 = !DILocalVariable(name: "ima", arg: 1, scope: !8329, file: !3, line: 2205, type: !2937)
!8331 = !DILocation(line: 2205, column: 43, scope: !8329)
!8332 = !DILocalVariable(name: "iuser", arg: 2, scope: !8329, file: !3, line: 2205, type: !755)
!8333 = !DILocation(line: 2205, column: 59, scope: !8329)
!8334 = !DILocalVariable(name: "customdata", arg: 3, scope: !8329, file: !3, line: 2205, type: !177)
!8335 = !DILocation(line: 2205, column: 72, scope: !8329)
!8336 = !DILocalVariable(name: "changed_image", scope: !8329, file: !3, line: 2207, type: !2937)
!8337 = !DILocation(line: 2207, column: 9, scope: !8329)
!8338 = !DILocation(line: 2207, column: 25, scope: !8329)
!8339 = !DILocation(line: 2209, column: 6, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8329, file: !3, line: 2209, column: 6)
!8341 = !DILocation(line: 2209, column: 13, scope: !8340)
!8342 = !DILocation(line: 2209, column: 10, scope: !8340)
!8343 = !DILocation(line: 2209, column: 27, scope: !8340)
!8344 = !DILocation(line: 2209, column: 52, scope: !8340)
!8345 = !DILocation(line: 2209, column: 30, scope: !8340)
!8346 = !DILocation(line: 2209, column: 6, scope: !8329)
!8347 = !DILocation(line: 2210, column: 3, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8340, file: !3, line: 2209, column: 58)
!8349 = !DILocation(line: 2210, column: 10, scope: !8348)
!8350 = !DILocation(line: 2210, column: 15, scope: !8348)
!8351 = !DILocation(line: 2211, column: 2, scope: !8348)
!8352 = !DILocation(line: 2212, column: 1, scope: !8329)
!8353 = distinct !DISubprogram(name: "BKE_image_multilayer_index", scope: !3, file: !3, line: 2335, type: !8354, scopeLine: 2336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!8354 = !DISubroutineType(types: !8355)
!8355 = !{!8356, !8369, !755}
!8356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8357, size: 64)
!8357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderPass", file: !282, line: 68, size: 960, elements: !8358)
!8358 = !{!8359, !8360, !8361, !8362, !8363, !8364, !8365, !8366, !8367, !8368}
!8359 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8357, file: !282, line: 69, baseType: !8356, size: 64)
!8360 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8357, file: !282, line: 69, baseType: !8356, size: 64, offset: 64)
!8361 = !DIDerivedType(tag: DW_TAG_member, name: "passtype", scope: !8357, file: !282, line: 70, baseType: !142, size: 32, offset: 128)
!8362 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !8357, file: !282, line: 70, baseType: !142, size: 32, offset: 160)
!8363 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8357, file: !282, line: 71, baseType: !248, size: 512, offset: 192)
!8364 = !DIDerivedType(tag: DW_TAG_member, name: "chan_id", scope: !8357, file: !282, line: 72, baseType: !2161, size: 64, offset: 704)
!8365 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !8357, file: !282, line: 73, baseType: !293, size: 64, offset: 768)
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !8357, file: !282, line: 74, baseType: !142, size: 32, offset: 832)
!8367 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !8357, file: !282, line: 74, baseType: !142, size: 32, offset: 864)
!8368 = !DIDerivedType(tag: DW_TAG_member, name: "debug_type", scope: !8357, file: !282, line: 75, baseType: !142, size: 32, offset: 896)
!8369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8370, size: 64)
!8370 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderResult", file: !282, line: 148, baseType: !281)
!8371 = !DILocalVariable(name: "rr", arg: 1, scope: !8353, file: !3, line: 2335, type: !8369)
!8372 = !DILocation(line: 2335, column: 54, scope: !8353)
!8373 = !DILocalVariable(name: "iuser", arg: 2, scope: !8353, file: !3, line: 2335, type: !755)
!8374 = !DILocation(line: 2335, column: 69, scope: !8353)
!8375 = !DILocalVariable(name: "rl", scope: !8353, file: !3, line: 2337, type: !8376)
!8376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!8377 = !DILocation(line: 2337, column: 15, scope: !8353)
!8378 = !DILocalVariable(name: "rpass", scope: !8353, file: !3, line: 2338, type: !8379)
!8379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8380, size: 64)
!8380 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderPass", file: !282, line: 76, baseType: !8357)
!8381 = !DILocation(line: 2338, column: 14, scope: !8353)
!8382 = !DILocation(line: 2340, column: 6, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8353, file: !3, line: 2340, column: 6)
!8384 = !DILocation(line: 2340, column: 9, scope: !8383)
!8385 = !DILocation(line: 2340, column: 6, scope: !8353)
!8386 = !DILocation(line: 2341, column: 3, scope: !8383)
!8387 = !DILocation(line: 2343, column: 6, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8353, file: !3, line: 2343, column: 6)
!8389 = !DILocation(line: 2343, column: 6, scope: !8353)
!8390 = !DILocalVariable(name: "index", scope: !8391, file: !3, line: 2344, type: !232)
!8391 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 2343, column: 13)
!8392 = !DILocation(line: 2344, column: 9, scope: !8391)
!8393 = !DILocalVariable(name: "rl_index", scope: !8391, file: !3, line: 2344, type: !232)
!8394 = !DILocation(line: 2344, column: 20, scope: !8391)
!8395 = !DILocalVariable(name: "rp_index", scope: !8391, file: !3, line: 2344, type: !232)
!8396 = !DILocation(line: 2344, column: 34, scope: !8391)
!8397 = !DILocation(line: 2346, column: 13, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 2346, column: 3)
!8399 = !DILocation(line: 2346, column: 17, scope: !8398)
!8400 = !DILocation(line: 2346, column: 24, scope: !8398)
!8401 = !DILocation(line: 2346, column: 11, scope: !8398)
!8402 = !DILocation(line: 2346, column: 8, scope: !8398)
!8403 = !DILocation(line: 2346, column: 31, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 2346, column: 3)
!8405 = !DILocation(line: 2346, column: 3, scope: !8398)
!8406 = !DILocation(line: 2347, column: 13, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8404, file: !3, line: 2346, column: 62)
!8408 = !DILocation(line: 2348, column: 17, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8407, file: !3, line: 2348, column: 4)
!8410 = !DILocation(line: 2348, column: 21, scope: !8409)
!8411 = !DILocation(line: 2348, column: 28, scope: !8409)
!8412 = !DILocation(line: 2348, column: 15, scope: !8409)
!8413 = !DILocation(line: 2348, column: 9, scope: !8409)
!8414 = !DILocation(line: 2348, column: 35, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 2348, column: 4)
!8416 = !DILocation(line: 2348, column: 4, scope: !8409)
!8417 = !DILocation(line: 2349, column: 9, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8415, file: !3, line: 2349, column: 9)
!8419 = !DILocation(line: 2349, column: 16, scope: !8418)
!8420 = !DILocation(line: 2349, column: 25, scope: !8418)
!8421 = !DILocation(line: 2349, column: 22, scope: !8418)
!8422 = !DILocation(line: 2349, column: 34, scope: !8418)
!8423 = !DILocation(line: 2349, column: 37, scope: !8418)
!8424 = !DILocation(line: 2349, column: 44, scope: !8418)
!8425 = !DILocation(line: 2349, column: 52, scope: !8418)
!8426 = !DILocation(line: 2349, column: 49, scope: !8418)
!8427 = !DILocation(line: 2349, column: 9, scope: !8415)
!8428 = !DILocation(line: 2350, column: 6, scope: !8418)
!8429 = !DILocation(line: 2348, column: 50, scope: !8415)
!8430 = !DILocation(line: 2348, column: 57, scope: !8415)
!8431 = !DILocation(line: 2348, column: 48, scope: !8415)
!8432 = !DILocation(line: 2348, column: 68, scope: !8415)
!8433 = !DILocation(line: 2348, column: 80, scope: !8415)
!8434 = !DILocation(line: 2348, column: 4, scope: !8415)
!8435 = distinct !{!8435, !8416, !8436}
!8436 = !DILocation(line: 2350, column: 6, scope: !8409)
!8437 = !DILocation(line: 2351, column: 8, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8407, file: !3, line: 2351, column: 8)
!8439 = !DILocation(line: 2351, column: 8, scope: !8407)
!8440 = !DILocation(line: 2352, column: 5, scope: !8438)
!8441 = !DILocation(line: 2353, column: 3, scope: !8407)
!8442 = !DILocation(line: 2346, column: 40, scope: !8404)
!8443 = !DILocation(line: 2346, column: 44, scope: !8404)
!8444 = !DILocation(line: 2346, column: 38, scope: !8404)
!8445 = !DILocation(line: 2346, column: 58, scope: !8404)
!8446 = !DILocation(line: 2346, column: 3, scope: !8404)
!8447 = distinct !{!8447, !8405, !8448}
!8448 = !DILocation(line: 2353, column: 3, scope: !8398)
!8449 = !DILocation(line: 2355, column: 7, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 2355, column: 7)
!8451 = !DILocation(line: 2355, column: 7, scope: !8391)
!8452 = !DILocation(line: 2356, column: 25, scope: !8450)
!8453 = !DILocation(line: 2356, column: 4, scope: !8450)
!8454 = !DILocation(line: 2356, column: 11, scope: !8450)
!8455 = !DILocation(line: 2356, column: 23, scope: !8450)
!8456 = !DILocation(line: 2358, column: 4, scope: !8450)
!8457 = !DILocation(line: 2358, column: 11, scope: !8450)
!8458 = !DILocation(line: 2358, column: 23, scope: !8450)
!8459 = !DILocation(line: 2359, column: 2, scope: !8391)
!8460 = !DILocation(line: 2360, column: 6, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8353, file: !3, line: 2360, column: 6)
!8462 = !DILocation(line: 2360, column: 12, scope: !8461)
!8463 = !DILocation(line: 2360, column: 6, scope: !8353)
!8464 = !DILocation(line: 2361, column: 8, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8461, file: !3, line: 2360, column: 21)
!8466 = !DILocation(line: 2361, column: 12, scope: !8465)
!8467 = !DILocation(line: 2361, column: 19, scope: !8465)
!8468 = !DILocation(line: 2361, column: 6, scope: !8465)
!8469 = !DILocation(line: 2362, column: 7, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 2362, column: 7)
!8471 = !DILocation(line: 2362, column: 7, scope: !8465)
!8472 = !DILocation(line: 2363, column: 12, scope: !8470)
!8473 = !DILocation(line: 2363, column: 16, scope: !8470)
!8474 = !DILocation(line: 2363, column: 23, scope: !8470)
!8475 = !DILocation(line: 2363, column: 10, scope: !8470)
!8476 = !DILocation(line: 2363, column: 4, scope: !8470)
!8477 = !DILocation(line: 2364, column: 2, scope: !8465)
!8478 = !DILocation(line: 2366, column: 9, scope: !8353)
!8479 = !DILocation(line: 2366, column: 2, scope: !8353)
!8480 = !DILocation(line: 2367, column: 1, scope: !8353)
!8481 = distinct !DISubprogram(name: "BKE_image_acquire_renderresult", scope: !3, file: !3, line: 2369, type: !8482, scopeLine: 2370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!8482 = !DISubroutineType(types: !8483)
!8483 = !{!280, !6030, !2937}
!8484 = !DILocalVariable(name: "scene", arg: 1, scope: !8481, file: !3, line: 2369, type: !6030)
!8485 = !DILocation(line: 2369, column: 53, scope: !8481)
!8486 = !DILocalVariable(name: "ima", arg: 2, scope: !8481, file: !3, line: 2369, type: !2937)
!8487 = !DILocation(line: 2369, column: 67, scope: !8481)
!8488 = !DILocation(line: 2371, column: 6, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8481, file: !3, line: 2371, column: 6)
!8490 = !DILocation(line: 2371, column: 11, scope: !8489)
!8491 = !DILocation(line: 2371, column: 6, scope: !8481)
!8492 = !DILocation(line: 2372, column: 10, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 2371, column: 15)
!8494 = !DILocation(line: 2372, column: 15, scope: !8493)
!8495 = !DILocation(line: 2372, column: 3, scope: !8493)
!8496 = !DILocation(line: 2374, column: 11, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 2374, column: 11)
!8498 = !DILocation(line: 2374, column: 16, scope: !8497)
!8499 = !DILocation(line: 2374, column: 21, scope: !8497)
!8500 = !DILocation(line: 2374, column: 11, scope: !8489)
!8501 = !DILocation(line: 2375, column: 7, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8503, file: !3, line: 2375, column: 7)
!8503 = distinct !DILexicalBlock(scope: !8497, file: !3, line: 2374, column: 43)
!8504 = !DILocation(line: 2375, column: 12, scope: !8502)
!8505 = !DILocation(line: 2375, column: 27, scope: !8502)
!8506 = !DILocation(line: 2375, column: 32, scope: !8502)
!8507 = !DILocation(line: 2375, column: 24, scope: !8502)
!8508 = !DILocation(line: 2375, column: 7, scope: !8503)
!8509 = !DILocation(line: 2376, column: 45, scope: !8502)
!8510 = !DILocation(line: 2376, column: 52, scope: !8502)
!8511 = !DILocation(line: 2376, column: 55, scope: !8502)
!8512 = !DILocation(line: 2376, column: 32, scope: !8502)
!8513 = !DILocation(line: 2376, column: 11, scope: !8502)
!8514 = !DILocation(line: 2376, column: 4, scope: !8502)
!8515 = !DILocation(line: 2378, column: 11, scope: !8502)
!8516 = !DILocation(line: 2378, column: 16, scope: !8502)
!8517 = !DILocation(line: 2378, column: 24, scope: !8502)
!8518 = !DILocation(line: 2378, column: 29, scope: !8502)
!8519 = !DILocation(line: 2378, column: 4, scope: !8502)
!8520 = !DILocation(line: 2381, column: 3, scope: !8497)
!8521 = !DILocation(line: 2382, column: 1, scope: !8481)
!8522 = distinct !DISubprogram(name: "BKE_image_release_renderresult", scope: !3, file: !3, line: 2384, type: !8523, scopeLine: 2385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!8523 = !DISubroutineType(types: !8524)
!8524 = !{null, !6030, !2937}
!8525 = !DILocalVariable(name: "scene", arg: 1, scope: !8522, file: !3, line: 2384, type: !6030)
!8526 = !DILocation(line: 2384, column: 44, scope: !8522)
!8527 = !DILocalVariable(name: "ima", arg: 2, scope: !8522, file: !3, line: 2384, type: !2937)
!8528 = !DILocation(line: 2384, column: 58, scope: !8522)
!8529 = !DILocation(line: 2386, column: 6, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8522, file: !3, line: 2386, column: 6)
!8531 = !DILocation(line: 2386, column: 11, scope: !8530)
!8532 = !DILocation(line: 2386, column: 6, scope: !8522)
!8533 = !DILocation(line: 2388, column: 2, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8530, file: !3, line: 2386, column: 15)
!8535 = !DILocation(line: 2389, column: 11, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8530, file: !3, line: 2389, column: 11)
!8537 = !DILocation(line: 2389, column: 16, scope: !8536)
!8538 = !DILocation(line: 2389, column: 21, scope: !8536)
!8539 = !DILocation(line: 2389, column: 11, scope: !8530)
!8540 = !DILocation(line: 2390, column: 7, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 2390, column: 7)
!8542 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 2389, column: 43)
!8543 = !DILocation(line: 2390, column: 12, scope: !8541)
!8544 = !DILocation(line: 2390, column: 27, scope: !8541)
!8545 = !DILocation(line: 2390, column: 32, scope: !8541)
!8546 = !DILocation(line: 2390, column: 24, scope: !8541)
!8547 = !DILocation(line: 2390, column: 7, scope: !8542)
!8548 = !DILocation(line: 2391, column: 34, scope: !8541)
!8549 = !DILocation(line: 2391, column: 41, scope: !8541)
!8550 = !DILocation(line: 2391, column: 44, scope: !8541)
!8551 = !DILocation(line: 2391, column: 21, scope: !8541)
!8552 = !DILocation(line: 2391, column: 4, scope: !8541)
!8553 = !DILocation(line: 2392, column: 2, scope: !8542)
!8554 = !DILocation(line: 2393, column: 1, scope: !8522)
!8555 = distinct !DISubprogram(name: "BKE_image_backup_render", scope: !3, file: !3, line: 2395, type: !8523, scopeLine: 2396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!8556 = !DILocalVariable(name: "scene", arg: 1, scope: !8555, file: !3, line: 2395, type: !6030)
!8557 = !DILocation(line: 2395, column: 37, scope: !8555)
!8558 = !DILocalVariable(name: "ima", arg: 2, scope: !8555, file: !3, line: 2395, type: !2937)
!8559 = !DILocation(line: 2395, column: 51, scope: !8555)
!8560 = !DILocalVariable(name: "re", scope: !8555, file: !3, line: 2399, type: !6903)
!8561 = !DILocation(line: 2399, column: 10, scope: !8555)
!8562 = !DILocation(line: 2399, column: 28, scope: !8555)
!8563 = !DILocation(line: 2399, column: 35, scope: !8555)
!8564 = !DILocation(line: 2399, column: 38, scope: !8555)
!8565 = !DILocation(line: 2399, column: 15, scope: !8555)
!8566 = !DILocalVariable(name: "slot", scope: !8555, file: !3, line: 2400, type: !142)
!8567 = !DILocation(line: 2400, column: 6, scope: !8555)
!8568 = !DILocation(line: 2400, column: 13, scope: !8555)
!8569 = !DILocation(line: 2400, column: 18, scope: !8555)
!8570 = !DILocalVariable(name: "last", scope: !8555, file: !3, line: 2400, type: !142)
!8571 = !DILocation(line: 2400, column: 31, scope: !8555)
!8572 = !DILocation(line: 2400, column: 38, scope: !8555)
!8573 = !DILocation(line: 2400, column: 43, scope: !8555)
!8574 = !DILocation(line: 2402, column: 6, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 2402, column: 6)
!8576 = !DILocation(line: 2402, column: 14, scope: !8575)
!8577 = !DILocation(line: 2402, column: 11, scope: !8575)
!8578 = !DILocation(line: 2402, column: 6, scope: !8555)
!8579 = !DILocation(line: 2403, column: 7, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 2403, column: 7)
!8581 = distinct !DILexicalBlock(scope: !8575, file: !3, line: 2402, column: 20)
!8582 = !DILocation(line: 2403, column: 12, scope: !8580)
!8583 = !DILocation(line: 2403, column: 20, scope: !8580)
!8584 = !DILocation(line: 2403, column: 7, scope: !8581)
!8585 = !DILocation(line: 2404, column: 24, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8580, file: !3, line: 2403, column: 27)
!8587 = !DILocation(line: 2404, column: 29, scope: !8586)
!8588 = !DILocation(line: 2404, column: 37, scope: !8586)
!8589 = !DILocation(line: 2404, column: 4, scope: !8586)
!8590 = !DILocation(line: 2405, column: 4, scope: !8586)
!8591 = !DILocation(line: 2405, column: 9, scope: !8586)
!8592 = !DILocation(line: 2405, column: 17, scope: !8586)
!8593 = !DILocation(line: 2405, column: 23, scope: !8586)
!8594 = !DILocation(line: 2406, column: 3, scope: !8586)
!8595 = !DILocation(line: 2408, column: 3, scope: !8581)
!8596 = !DILocation(line: 2408, column: 8, scope: !8581)
!8597 = !DILocation(line: 2408, column: 16, scope: !8581)
!8598 = !DILocation(line: 2408, column: 22, scope: !8581)
!8599 = !DILocation(line: 2409, column: 17, scope: !8581)
!8600 = !DILocation(line: 2409, column: 22, scope: !8581)
!8601 = !DILocation(line: 2409, column: 27, scope: !8581)
!8602 = !DILocation(line: 2409, column: 35, scope: !8581)
!8603 = !DILocation(line: 2409, column: 3, scope: !8581)
!8604 = !DILocation(line: 2410, column: 2, scope: !8581)
!8605 = !DILocation(line: 2412, column: 26, scope: !8555)
!8606 = !DILocation(line: 2412, column: 2, scope: !8555)
!8607 = !DILocation(line: 2412, column: 7, scope: !8555)
!8608 = !DILocation(line: 2412, column: 24, scope: !8555)
!8609 = !DILocation(line: 2413, column: 1, scope: !8555)
!8610 = distinct !DISubprogram(name: "image_acquire_ibuf", scope: !3, file: !3, line: 2999, type: !8611, scopeLine: 3000, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!8611 = !DISubroutineType(types: !8612)
!8612 = !{!2997, !2937, !755, !3021}
!8613 = !DILocalVariable(name: "ima", arg: 1, scope: !8610, file: !3, line: 2999, type: !2937)
!8614 = !DILocation(line: 2999, column: 41, scope: !8610)
!8615 = !DILocalVariable(name: "iuser", arg: 2, scope: !8610, file: !3, line: 2999, type: !755)
!8616 = !DILocation(line: 2999, column: 57, scope: !8610)
!8617 = !DILocalVariable(name: "lock_r", arg: 3, scope: !8610, file: !3, line: 2999, type: !3021)
!8618 = !DILocation(line: 2999, column: 71, scope: !8610)
!8619 = !DILocalVariable(name: "ibuf", scope: !8610, file: !3, line: 3001, type: !2997)
!8620 = !DILocation(line: 3001, column: 9, scope: !8610)
!8621 = !DILocalVariable(name: "frame", scope: !8610, file: !3, line: 3002, type: !142)
!8622 = !DILocation(line: 3002, column: 6, scope: !8610)
!8623 = !DILocalVariable(name: "index", scope: !8610, file: !3, line: 3002, type: !142)
!8624 = !DILocation(line: 3002, column: 17, scope: !8610)
!8625 = !DILocation(line: 3004, column: 6, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8610, file: !3, line: 3004, column: 6)
!8627 = !DILocation(line: 3004, column: 6, scope: !8610)
!8628 = !DILocation(line: 3005, column: 4, scope: !8626)
!8629 = !DILocation(line: 3005, column: 11, scope: !8626)
!8630 = !DILocation(line: 3005, column: 3, scope: !8626)
!8631 = !DILocation(line: 3008, column: 24, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8610, file: !3, line: 3008, column: 6)
!8633 = !DILocation(line: 3008, column: 29, scope: !8632)
!8634 = !DILocation(line: 3008, column: 7, scope: !8632)
!8635 = !DILocation(line: 3008, column: 6, scope: !8610)
!8636 = !DILocation(line: 3009, column: 3, scope: !8632)
!8637 = !DILocation(line: 3011, column: 31, scope: !8610)
!8638 = !DILocation(line: 3011, column: 36, scope: !8610)
!8639 = !DILocation(line: 3011, column: 9, scope: !8610)
!8640 = !DILocation(line: 3011, column: 7, scope: !8610)
!8641 = !DILocation(line: 3013, column: 6, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8610, file: !3, line: 3013, column: 6)
!8643 = !DILocation(line: 3013, column: 11, scope: !8642)
!8644 = !DILocation(line: 3013, column: 6, scope: !8610)
!8645 = !DILocation(line: 3015, column: 7, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8647, file: !3, line: 3015, column: 7)
!8647 = distinct !DILexicalBlock(scope: !8642, file: !3, line: 3013, column: 20)
!8648 = !DILocation(line: 3015, column: 12, scope: !8646)
!8649 = !DILocation(line: 3015, column: 19, scope: !8646)
!8650 = !DILocation(line: 3015, column: 7, scope: !8647)
!8651 = !DILocation(line: 3017, column: 33, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8646, file: !3, line: 3015, column: 37)
!8653 = !DILocation(line: 3017, column: 38, scope: !8652)
!8654 = !DILocation(line: 3017, column: 45, scope: !8652)
!8655 = !DILocation(line: 3017, column: 11, scope: !8652)
!8656 = !DILocation(line: 3017, column: 9, scope: !8652)
!8657 = !DILocation(line: 3018, column: 3, scope: !8652)
!8658 = !DILocation(line: 3019, column: 12, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8646, file: !3, line: 3019, column: 12)
!8660 = !DILocation(line: 3019, column: 17, scope: !8659)
!8661 = !DILocation(line: 3019, column: 24, scope: !8659)
!8662 = !DILocation(line: 3019, column: 12, scope: !8646)
!8663 = !DILocation(line: 3020, column: 8, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8665, file: !3, line: 3020, column: 8)
!8665 = distinct !DILexicalBlock(scope: !8659, file: !3, line: 3019, column: 45)
!8666 = !DILocation(line: 3020, column: 13, scope: !8664)
!8667 = !DILocation(line: 3020, column: 18, scope: !8664)
!8668 = !DILocation(line: 3020, column: 8, scope: !8665)
!8669 = !DILocation(line: 3022, column: 37, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8664, file: !3, line: 3020, column: 37)
!8671 = !DILocation(line: 3022, column: 42, scope: !8670)
!8672 = !DILocation(line: 3022, column: 49, scope: !8670)
!8673 = !DILocation(line: 3022, column: 12, scope: !8670)
!8674 = !DILocation(line: 3022, column: 10, scope: !8670)
!8675 = !DILocation(line: 3023, column: 4, scope: !8670)
!8676 = !DILocation(line: 3025, column: 8, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8665, file: !3, line: 3025, column: 8)
!8678 = !DILocation(line: 3025, column: 13, scope: !8677)
!8679 = !DILocation(line: 3025, column: 18, scope: !8677)
!8680 = !DILocation(line: 3025, column: 8, scope: !8665)
!8681 = !DILocation(line: 3027, column: 43, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 3025, column: 42)
!8683 = !DILocation(line: 3027, column: 48, scope: !8682)
!8684 = !DILocation(line: 3027, column: 55, scope: !8682)
!8685 = !DILocation(line: 3027, column: 12, scope: !8682)
!8686 = !DILocation(line: 3027, column: 10, scope: !8682)
!8687 = !DILocation(line: 3028, column: 4, scope: !8682)
!8688 = !DILocation(line: 3029, column: 3, scope: !8665)
!8689 = !DILocation(line: 3030, column: 12, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8659, file: !3, line: 3030, column: 12)
!8691 = !DILocation(line: 3030, column: 17, scope: !8690)
!8692 = !DILocation(line: 3030, column: 24, scope: !8690)
!8693 = !DILocation(line: 3030, column: 12, scope: !8659)
!8694 = !DILocation(line: 3032, column: 8, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8696, file: !3, line: 3032, column: 8)
!8696 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 3030, column: 41)
!8697 = !DILocation(line: 3032, column: 13, scope: !8695)
!8698 = !DILocation(line: 3032, column: 18, scope: !8695)
!8699 = !DILocation(line: 3032, column: 8, scope: !8696)
!8700 = !DILocation(line: 3033, column: 34, scope: !8695)
!8701 = !DILocation(line: 3033, column: 39, scope: !8695)
!8702 = !DILocation(line: 3033, column: 46, scope: !8695)
!8703 = !DILocation(line: 3033, column: 12, scope: !8695)
!8704 = !DILocation(line: 3033, column: 10, scope: !8695)
!8705 = !DILocation(line: 3033, column: 5, scope: !8695)
!8706 = !DILocation(line: 3035, column: 8, scope: !8707)
!8707 = distinct !DILexicalBlock(scope: !8696, file: !3, line: 3035, column: 8)
!8708 = !DILocation(line: 3035, column: 13, scope: !8707)
!8709 = !DILocation(line: 3035, column: 18, scope: !8707)
!8710 = !DILocation(line: 3035, column: 8, scope: !8696)
!8711 = !DILocation(line: 3037, column: 38, scope: !8707)
!8712 = !DILocation(line: 3037, column: 43, scope: !8707)
!8713 = !DILocation(line: 3037, column: 12, scope: !8707)
!8714 = !DILocation(line: 3037, column: 10, scope: !8707)
!8715 = !DILocation(line: 3037, column: 5, scope: !8707)
!8716 = !DILocation(line: 3038, column: 3, scope: !8696)
!8717 = !DILocation(line: 3039, column: 12, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 3039, column: 12)
!8719 = !DILocation(line: 3039, column: 17, scope: !8718)
!8720 = !DILocation(line: 3039, column: 24, scope: !8718)
!8721 = !DILocation(line: 3039, column: 12, scope: !8690)
!8722 = !DILocation(line: 3042, column: 8, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8724, file: !3, line: 3042, column: 8)
!8724 = distinct !DILexicalBlock(scope: !8718, file: !3, line: 3039, column: 46)
!8725 = !DILocation(line: 3042, column: 13, scope: !8723)
!8726 = !DILocation(line: 3042, column: 19, scope: !8723)
!8727 = !DILocation(line: 3042, column: 8, scope: !8724)
!8728 = !DILocation(line: 3042, column: 25, scope: !8723)
!8729 = !DILocation(line: 3042, column: 30, scope: !8723)
!8730 = !DILocation(line: 3042, column: 36, scope: !8723)
!8731 = !DILocation(line: 3043, column: 8, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8724, file: !3, line: 3043, column: 8)
!8733 = !DILocation(line: 3043, column: 13, scope: !8732)
!8734 = !DILocation(line: 3043, column: 19, scope: !8732)
!8735 = !DILocation(line: 3043, column: 8, scope: !8724)
!8736 = !DILocation(line: 3043, column: 25, scope: !8732)
!8737 = !DILocation(line: 3043, column: 30, scope: !8732)
!8738 = !DILocation(line: 3043, column: 36, scope: !8732)
!8739 = !DILocation(line: 3044, column: 8, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8724, file: !3, line: 3044, column: 8)
!8741 = !DILocation(line: 3044, column: 13, scope: !8740)
!8742 = !DILocation(line: 3044, column: 23, scope: !8740)
!8743 = !DILocation(line: 3044, column: 8, scope: !8724)
!8744 = !DILocation(line: 3044, column: 29, scope: !8740)
!8745 = !DILocation(line: 3044, column: 34, scope: !8740)
!8746 = !DILocation(line: 3044, column: 44, scope: !8740)
!8747 = !DILocation(line: 3045, column: 25, scope: !8724)
!8748 = !DILocation(line: 3045, column: 30, scope: !8724)
!8749 = !DILocation(line: 3045, column: 37, scope: !8724)
!8750 = !DILocation(line: 3045, column: 42, scope: !8724)
!8751 = !DILocation(line: 3045, column: 49, scope: !8724)
!8752 = !DILocation(line: 3045, column: 54, scope: !8724)
!8753 = !DILocation(line: 3045, column: 60, scope: !8724)
!8754 = !DILocation(line: 3045, column: 65, scope: !8724)
!8755 = !DILocation(line: 3045, column: 77, scope: !8724)
!8756 = !DILocation(line: 3045, column: 82, scope: !8724)
!8757 = !DILocation(line: 3045, column: 91, scope: !8724)
!8758 = !DILocation(line: 3045, column: 108, scope: !8724)
!8759 = !DILocation(line: 3045, column: 114, scope: !8724)
!8760 = !DILocation(line: 3045, column: 119, scope: !8724)
!8761 = !DILocation(line: 3046, column: 25, scope: !8724)
!8762 = !DILocation(line: 3046, column: 30, scope: !8724)
!8763 = !DILocation(line: 3046, column: 42, scope: !8724)
!8764 = !DILocation(line: 3046, column: 47, scope: !8724)
!8765 = !DILocation(line: 3045, column: 11, scope: !8724)
!8766 = !DILocation(line: 3045, column: 9, scope: !8724)
!8767 = !DILocation(line: 3047, column: 22, scope: !8724)
!8768 = !DILocation(line: 3047, column: 27, scope: !8724)
!8769 = !DILocation(line: 3047, column: 4, scope: !8724)
!8770 = !DILocation(line: 3048, column: 4, scope: !8724)
!8771 = !DILocation(line: 3048, column: 9, scope: !8724)
!8772 = !DILocation(line: 3048, column: 12, scope: !8724)
!8773 = !DILocation(line: 3049, column: 3, scope: !8724)
!8774 = !DILocation(line: 3050, column: 12, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8718, file: !3, line: 3050, column: 12)
!8776 = !DILocation(line: 3050, column: 17, scope: !8775)
!8777 = !DILocation(line: 3050, column: 24, scope: !8775)
!8778 = !DILocation(line: 3050, column: 12, scope: !8718)
!8779 = !DILocation(line: 3051, column: 8, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8781, file: !3, line: 3051, column: 8)
!8781 = distinct !DILexicalBlock(scope: !8775, file: !3, line: 3050, column: 43)
!8782 = !DILocation(line: 3051, column: 13, scope: !8780)
!8783 = !DILocation(line: 3051, column: 18, scope: !8780)
!8784 = !DILocation(line: 3051, column: 8, scope: !8781)
!8785 = !DILocation(line: 3054, column: 36, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8780, file: !3, line: 3051, column: 40)
!8787 = !DILocation(line: 3054, column: 41, scope: !8786)
!8788 = !DILocation(line: 3054, column: 48, scope: !8786)
!8789 = !DILocation(line: 3054, column: 12, scope: !8786)
!8790 = !DILocation(line: 3054, column: 10, scope: !8786)
!8791 = !DILocation(line: 3055, column: 4, scope: !8786)
!8792 = !DILocation(line: 3056, column: 13, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8780, file: !3, line: 3056, column: 13)
!8794 = !DILocation(line: 3056, column: 18, scope: !8793)
!8795 = !DILocation(line: 3056, column: 23, scope: !8793)
!8796 = !DILocation(line: 3056, column: 13, scope: !8780)
!8797 = !DILocation(line: 3058, column: 9, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !8799, file: !3, line: 3058, column: 9)
!8799 = distinct !DILexicalBlock(scope: !8793, file: !3, line: 3056, column: 46)
!8800 = !DILocation(line: 3058, column: 9, scope: !8799)
!8801 = !DILocation(line: 3060, column: 6, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8798, file: !3, line: 3058, column: 17)
!8803 = !DILocation(line: 3061, column: 16, scope: !8802)
!8804 = !DILocation(line: 3061, column: 7, scope: !8802)
!8805 = !DILocation(line: 3061, column: 14, scope: !8802)
!8806 = !DILocation(line: 3064, column: 12, scope: !8802)
!8807 = !DILocation(line: 3065, column: 51, scope: !8802)
!8808 = !DILocation(line: 3065, column: 59, scope: !8802)
!8809 = !DILocation(line: 3065, column: 13, scope: !8802)
!8810 = !DILocation(line: 3065, column: 11, scope: !8802)
!8811 = !DILocation(line: 3067, column: 11, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8802, file: !3, line: 3067, column: 10)
!8813 = !DILocation(line: 3067, column: 10, scope: !8802)
!8814 = !DILocation(line: 3070, column: 14, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8812, file: !3, line: 3067, column: 17)
!8816 = !DILocation(line: 3070, column: 12, scope: !8815)
!8817 = !DILocation(line: 3071, column: 25, scope: !8815)
!8818 = !DILocation(line: 3071, column: 30, scope: !8815)
!8819 = !DILocation(line: 3071, column: 39, scope: !8815)
!8820 = !DILocation(line: 3071, column: 7, scope: !8815)
!8821 = !DILocation(line: 3072, column: 6, scope: !8815)
!8822 = !DILocation(line: 3073, column: 5, scope: !8802)
!8823 = !DILocation(line: 3074, column: 4, scope: !8799)
!8824 = !DILocation(line: 3075, column: 3, scope: !8781)
!8825 = !DILocation(line: 3078, column: 7, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8647, file: !3, line: 3078, column: 7)
!8827 = !DILocation(line: 3078, column: 12, scope: !8826)
!8828 = !DILocation(line: 3078, column: 20, scope: !8826)
!8829 = !DILocation(line: 3078, column: 24, scope: !8826)
!8830 = !DILocation(line: 3078, column: 7, scope: !8647)
!8831 = !DILocation(line: 3079, column: 4, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 3078, column: 76)
!8833 = !DILocation(line: 3079, column: 10, scope: !8832)
!8834 = !DILocation(line: 3079, column: 20, scope: !8832)
!8835 = !DILocation(line: 3080, column: 3, scope: !8832)
!8836 = !DILocation(line: 3081, column: 2, scope: !8647)
!8837 = !DILocation(line: 3083, column: 21, scope: !8610)
!8838 = !DILocation(line: 3083, column: 2, scope: !8610)
!8839 = !DILocation(line: 3085, column: 9, scope: !8610)
!8840 = !DILocation(line: 3085, column: 2, scope: !8610)
!8841 = !DILocation(line: 3086, column: 1, scope: !8610)
!8842 = distinct !DISubprogram(name: "BKE_image_has_ibuf", scope: !3, file: !3, line: 3129, type: !8843, scopeLine: 3130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!8843 = !DISubroutineType(types: !8844)
!8844 = !{!1231, !2937, !755}
!8845 = !DILocalVariable(name: "ima", arg: 1, scope: !8842, file: !3, line: 3129, type: !2937)
!8846 = !DILocation(line: 3129, column: 32, scope: !8842)
!8847 = !DILocalVariable(name: "iuser", arg: 2, scope: !8842, file: !3, line: 3129, type: !755)
!8848 = !DILocation(line: 3129, column: 48, scope: !8842)
!8849 = !DILocalVariable(name: "ibuf", scope: !8842, file: !3, line: 3131, type: !2997)
!8850 = !DILocation(line: 3131, column: 9, scope: !8842)
!8851 = !DILocation(line: 3134, column: 24, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8842, file: !3, line: 3134, column: 6)
!8853 = !DILocation(line: 3134, column: 29, scope: !8852)
!8854 = !DILocation(line: 3134, column: 7, scope: !8852)
!8855 = !DILocation(line: 3134, column: 6, scope: !8842)
!8856 = !DILocation(line: 3135, column: 3, scope: !8852)
!8857 = !DILocation(line: 3137, column: 2, scope: !8842)
!8858 = !DILocation(line: 3139, column: 31, scope: !8842)
!8859 = !DILocation(line: 3139, column: 36, scope: !8842)
!8860 = !DILocation(line: 3139, column: 9, scope: !8842)
!8861 = !DILocation(line: 3139, column: 7, scope: !8842)
!8862 = !DILocation(line: 3141, column: 7, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8842, file: !3, line: 3141, column: 6)
!8864 = !DILocation(line: 3141, column: 6, scope: !8842)
!8865 = !DILocation(line: 3142, column: 29, scope: !8863)
!8866 = !DILocation(line: 3142, column: 34, scope: !8863)
!8867 = !DILocation(line: 3142, column: 10, scope: !8863)
!8868 = !DILocation(line: 3142, column: 8, scope: !8863)
!8869 = !DILocation(line: 3142, column: 3, scope: !8863)
!8870 = !DILocation(line: 3144, column: 2, scope: !8842)
!8871 = !DILocation(line: 3146, column: 16, scope: !8842)
!8872 = !DILocation(line: 3146, column: 2, scope: !8842)
!8873 = !DILocation(line: 3148, column: 9, scope: !8842)
!8874 = !DILocation(line: 3148, column: 14, scope: !8842)
!8875 = !DILocation(line: 3148, column: 2, scope: !8842)
!8876 = !DILocation(line: 3149, column: 1, scope: !8842)
!8877 = distinct !DISubprogram(name: "image_quick_test", scope: !3, file: !3, line: 2980, type: !8843, scopeLine: 2981, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!8878 = !DILocalVariable(name: "ima", arg: 1, scope: !8877, file: !3, line: 2980, type: !2937)
!8879 = !DILocation(line: 2980, column: 41, scope: !8877)
!8880 = !DILocalVariable(name: "iuser", arg: 2, scope: !8877, file: !3, line: 2980, type: !755)
!8881 = !DILocation(line: 2980, column: 57, scope: !8877)
!8882 = !DILocation(line: 2982, column: 6, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8877, file: !3, line: 2982, column: 6)
!8884 = !DILocation(line: 2982, column: 10, scope: !8883)
!8885 = !DILocation(line: 2982, column: 6, scope: !8877)
!8886 = !DILocation(line: 2983, column: 3, scope: !8883)
!8887 = !DILocation(line: 2985, column: 6, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8877, file: !3, line: 2985, column: 6)
!8889 = !DILocation(line: 2985, column: 6, scope: !8877)
!8890 = !DILocation(line: 2986, column: 7, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8892, file: !3, line: 2986, column: 7)
!8892 = distinct !DILexicalBlock(scope: !8888, file: !3, line: 2985, column: 13)
!8893 = !DILocation(line: 2986, column: 14, scope: !8891)
!8894 = !DILocation(line: 2986, column: 17, scope: !8891)
!8895 = !DILocation(line: 2986, column: 7, scope: !8892)
!8896 = !DILocation(line: 2987, column: 4, scope: !8891)
!8897 = !DILocation(line: 2988, column: 2, scope: !8892)
!8898 = !DILocation(line: 2989, column: 11, scope: !8899)
!8899 = distinct !DILexicalBlock(scope: !8888, file: !3, line: 2989, column: 11)
!8900 = !DILocation(line: 2989, column: 16, scope: !8899)
!8901 = !DILocation(line: 2989, column: 19, scope: !8899)
!8902 = !DILocation(line: 2989, column: 11, scope: !8888)
!8903 = !DILocation(line: 2990, column: 3, scope: !8899)
!8904 = !DILocation(line: 2992, column: 2, scope: !8877)
!8905 = !DILocation(line: 2993, column: 1, scope: !8877)
!8906 = distinct !DISubprogram(name: "image_get_cached_ibuf", scope: !3, file: !3, line: 2925, type: !8907, scopeLine: 2926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!8907 = !DISubroutineType(types: !8908)
!8908 = !{!2997, !2937, !755, !291, !291}
!8909 = !DILocalVariable(name: "ima", arg: 1, scope: !8906, file: !3, line: 2925, type: !2937)
!8910 = !DILocation(line: 2925, column: 44, scope: !8906)
!8911 = !DILocalVariable(name: "iuser", arg: 2, scope: !8906, file: !3, line: 2925, type: !755)
!8912 = !DILocation(line: 2925, column: 60, scope: !8906)
!8913 = !DILocalVariable(name: "r_frame", arg: 3, scope: !8906, file: !3, line: 2925, type: !291)
!8914 = !DILocation(line: 2925, column: 72, scope: !8906)
!8915 = !DILocalVariable(name: "r_index", arg: 4, scope: !8906, file: !3, line: 2925, type: !291)
!8916 = !DILocation(line: 2925, column: 86, scope: !8906)
!8917 = !DILocalVariable(name: "ibuf", scope: !8906, file: !3, line: 2927, type: !2997)
!8918 = !DILocation(line: 2927, column: 9, scope: !8906)
!8919 = !DILocalVariable(name: "frame", scope: !8906, file: !3, line: 2928, type: !142)
!8920 = !DILocation(line: 2928, column: 6, scope: !8906)
!8921 = !DILocalVariable(name: "index", scope: !8906, file: !3, line: 2928, type: !142)
!8922 = !DILocation(line: 2928, column: 17, scope: !8906)
!8923 = !DILocation(line: 2931, column: 6, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8906, file: !3, line: 2931, column: 6)
!8925 = !DILocation(line: 2931, column: 11, scope: !8924)
!8926 = !DILocation(line: 2931, column: 18, scope: !8924)
!8927 = !DILocation(line: 2931, column: 6, scope: !8906)
!8928 = !DILocation(line: 2932, column: 11, scope: !8929)
!8929 = distinct !DILexicalBlock(scope: !8924, file: !3, line: 2931, column: 36)
!8930 = !DILocation(line: 2932, column: 19, scope: !8929)
!8931 = !DILocation(line: 2932, column: 26, scope: !8929)
!8932 = !DILocation(line: 2932, column: 36, scope: !8929)
!8933 = !DILocation(line: 2932, column: 41, scope: !8929)
!8934 = !DILocation(line: 2932, column: 9, scope: !8929)
!8935 = !DILocation(line: 2933, column: 48, scope: !8929)
!8936 = !DILocation(line: 2933, column: 56, scope: !8929)
!8937 = !DILocation(line: 2933, column: 10, scope: !8929)
!8938 = !DILocation(line: 2933, column: 8, scope: !8929)
!8939 = !DILocation(line: 2935, column: 7, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8929, file: !3, line: 2935, column: 7)
!8941 = !DILocation(line: 2935, column: 12, scope: !8940)
!8942 = !DILocation(line: 2935, column: 25, scope: !8940)
!8943 = !DILocation(line: 2935, column: 22, scope: !8940)
!8944 = !DILocation(line: 2935, column: 7, scope: !8929)
!8945 = !DILocation(line: 2936, column: 4, scope: !8940)
!8946 = !DILocation(line: 2936, column: 9, scope: !8940)
!8947 = !DILocation(line: 2936, column: 19, scope: !8940)
!8948 = !DILocation(line: 2937, column: 20, scope: !8929)
!8949 = !DILocation(line: 2937, column: 3, scope: !8929)
!8950 = !DILocation(line: 2937, column: 8, scope: !8929)
!8951 = !DILocation(line: 2937, column: 18, scope: !8929)
!8952 = !DILocation(line: 2938, column: 2, scope: !8929)
!8953 = !DILocation(line: 2939, column: 11, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8924, file: !3, line: 2939, column: 11)
!8955 = !DILocation(line: 2939, column: 16, scope: !8954)
!8956 = !DILocation(line: 2939, column: 23, scope: !8954)
!8957 = !DILocation(line: 2939, column: 11, scope: !8924)
!8958 = !DILocation(line: 2940, column: 7, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8960, file: !3, line: 2940, column: 7)
!8960 = distinct !DILexicalBlock(scope: !8954, file: !3, line: 2939, column: 44)
!8961 = !DILocation(line: 2940, column: 12, scope: !8959)
!8962 = !DILocation(line: 2940, column: 17, scope: !8959)
!8963 = !DILocation(line: 2940, column: 7, scope: !8960)
!8964 = !DILocation(line: 2941, column: 12, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8959, file: !3, line: 2940, column: 36)
!8966 = !DILocation(line: 2941, column: 20, scope: !8965)
!8967 = !DILocation(line: 2941, column: 27, scope: !8965)
!8968 = !DILocation(line: 2941, column: 37, scope: !8965)
!8969 = !DILocation(line: 2941, column: 42, scope: !8965)
!8970 = !DILocation(line: 2941, column: 10, scope: !8965)
!8971 = !DILocation(line: 2942, column: 49, scope: !8965)
!8972 = !DILocation(line: 2942, column: 57, scope: !8965)
!8973 = !DILocation(line: 2942, column: 11, scope: !8965)
!8974 = !DILocation(line: 2942, column: 9, scope: !8965)
!8975 = !DILocation(line: 2945, column: 8, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8965, file: !3, line: 2945, column: 8)
!8977 = !DILocation(line: 2945, column: 13, scope: !8976)
!8978 = !DILocation(line: 2945, column: 26, scope: !8976)
!8979 = !DILocation(line: 2945, column: 23, scope: !8976)
!8980 = !DILocation(line: 2945, column: 8, scope: !8965)
!8981 = !DILocation(line: 2946, column: 5, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8976, file: !3, line: 2945, column: 33)
!8983 = !DILocation(line: 2946, column: 10, scope: !8982)
!8984 = !DILocation(line: 2946, column: 20, scope: !8982)
!8985 = !DILocation(line: 2947, column: 4, scope: !8982)
!8986 = !DILocation(line: 2948, column: 21, scope: !8965)
!8987 = !DILocation(line: 2948, column: 4, scope: !8965)
!8988 = !DILocation(line: 2948, column: 9, scope: !8965)
!8989 = !DILocation(line: 2948, column: 19, scope: !8965)
!8990 = !DILocation(line: 2949, column: 3, scope: !8965)
!8991 = !DILocation(line: 2950, column: 12, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8959, file: !3, line: 2950, column: 12)
!8993 = !DILocation(line: 2950, column: 17, scope: !8992)
!8994 = !DILocation(line: 2950, column: 22, scope: !8992)
!8995 = !DILocation(line: 2950, column: 12, scope: !8959)
!8996 = !DILocation(line: 2951, column: 12, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8992, file: !3, line: 2950, column: 46)
!8998 = !DILocation(line: 2951, column: 20, scope: !8997)
!8999 = !DILocation(line: 2951, column: 27, scope: !8997)
!9000 = !DILocation(line: 2951, column: 37, scope: !8997)
!9001 = !DILocation(line: 2951, column: 42, scope: !8997)
!9002 = !DILocation(line: 2951, column: 10, scope: !8997)
!9003 = !DILocation(line: 2952, column: 12, scope: !8997)
!9004 = !DILocation(line: 2952, column: 20, scope: !8997)
!9005 = !DILocation(line: 2952, column: 27, scope: !8997)
!9006 = !DILocation(line: 2952, column: 10, scope: !8997)
!9007 = !DILocation(line: 2953, column: 49, scope: !8997)
!9008 = !DILocation(line: 2953, column: 54, scope: !8997)
!9009 = !DILocation(line: 2953, column: 61, scope: !8997)
!9010 = !DILocation(line: 2953, column: 11, scope: !8997)
!9011 = !DILocation(line: 2953, column: 9, scope: !8997)
!9012 = !DILocation(line: 2954, column: 3, scope: !8997)
!9013 = !DILocation(line: 2955, column: 2, scope: !8960)
!9014 = !DILocation(line: 2956, column: 11, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !8954, file: !3, line: 2956, column: 11)
!9016 = !DILocation(line: 2956, column: 16, scope: !9015)
!9017 = !DILocation(line: 2956, column: 23, scope: !9015)
!9018 = !DILocation(line: 2956, column: 11, scope: !8954)
!9019 = !DILocation(line: 2957, column: 7, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9021, file: !3, line: 2957, column: 7)
!9021 = distinct !DILexicalBlock(scope: !9015, file: !3, line: 2956, column: 40)
!9022 = !DILocation(line: 2957, column: 12, scope: !9020)
!9023 = !DILocation(line: 2957, column: 17, scope: !9020)
!9024 = !DILocation(line: 2957, column: 7, scope: !9021)
!9025 = !DILocation(line: 2958, column: 49, scope: !9020)
!9026 = !DILocation(line: 2958, column: 11, scope: !9020)
!9027 = !DILocation(line: 2958, column: 9, scope: !9020)
!9028 = !DILocation(line: 2958, column: 4, scope: !9020)
!9029 = !DILocation(line: 2959, column: 12, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9020, file: !3, line: 2959, column: 12)
!9031 = !DILocation(line: 2959, column: 17, scope: !9030)
!9032 = !DILocation(line: 2959, column: 22, scope: !9030)
!9033 = !DILocation(line: 2959, column: 12, scope: !9020)
!9034 = !DILocation(line: 2960, column: 49, scope: !9030)
!9035 = !DILocation(line: 2960, column: 54, scope: !9030)
!9036 = !DILocation(line: 2960, column: 62, scope: !9030)
!9037 = !DILocation(line: 2960, column: 69, scope: !9030)
!9038 = !DILocation(line: 2960, column: 11, scope: !9030)
!9039 = !DILocation(line: 2960, column: 9, scope: !9030)
!9040 = !DILocation(line: 2960, column: 4, scope: !9030)
!9041 = !DILocation(line: 2961, column: 2, scope: !9021)
!9042 = !DILocation(line: 2962, column: 11, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9015, file: !3, line: 2962, column: 11)
!9044 = !DILocation(line: 2962, column: 16, scope: !9043)
!9045 = !DILocation(line: 2962, column: 23, scope: !9043)
!9046 = !DILocation(line: 2962, column: 11, scope: !9015)
!9047 = !DILocation(line: 2963, column: 48, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9043, file: !3, line: 2962, column: 45)
!9049 = !DILocation(line: 2963, column: 10, scope: !9048)
!9050 = !DILocation(line: 2963, column: 8, scope: !9048)
!9051 = !DILocation(line: 2964, column: 2, scope: !9048)
!9052 = !DILocation(line: 2965, column: 11, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9043, file: !3, line: 2965, column: 11)
!9054 = !DILocation(line: 2965, column: 16, scope: !9053)
!9055 = !DILocation(line: 2965, column: 23, scope: !9053)
!9056 = !DILocation(line: 2965, column: 11, scope: !9043)
!9057 = !DILocation(line: 2969, column: 2, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9053, file: !3, line: 2965, column: 42)
!9059 = !DILocation(line: 2971, column: 6, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !8906, file: !3, line: 2971, column: 6)
!9061 = !DILocation(line: 2971, column: 6, scope: !8906)
!9062 = !DILocation(line: 2972, column: 14, scope: !9060)
!9063 = !DILocation(line: 2972, column: 4, scope: !9060)
!9064 = !DILocation(line: 2972, column: 12, scope: !9060)
!9065 = !DILocation(line: 2972, column: 3, scope: !9060)
!9066 = !DILocation(line: 2974, column: 6, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !8906, file: !3, line: 2974, column: 6)
!9068 = !DILocation(line: 2974, column: 6, scope: !8906)
!9069 = !DILocation(line: 2975, column: 14, scope: !9067)
!9070 = !DILocation(line: 2975, column: 4, scope: !9067)
!9071 = !DILocation(line: 2975, column: 12, scope: !9067)
!9072 = !DILocation(line: 2975, column: 3, scope: !9067)
!9073 = !DILocation(line: 2977, column: 9, scope: !8906)
!9074 = !DILocation(line: 2977, column: 2, scope: !8906)
!9075 = distinct !DISubprogram(name: "BKE_image_pool_new", scope: !3, file: !3, line: 3165, type: !9076, scopeLine: 3166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!9076 = !DISubroutineType(types: !9077)
!9077 = !{!9078}
!9078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9079, size: 64)
!9079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !3, line: 3161, size: 128, elements: !9080)
!9080 = !{!9081}
!9081 = !DIDerivedType(tag: DW_TAG_member, name: "image_buffers", scope: !9079, file: !3, line: 3162, baseType: !258, size: 128)
!9082 = !DILocalVariable(name: "pool", scope: !9075, file: !3, line: 3167, type: !9083)
!9083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9084, size: 64)
!9084 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImagePool", file: !3, line: 3163, baseType: !9079)
!9085 = !DILocation(line: 3167, column: 13, scope: !9075)
!9086 = !DILocation(line: 3167, column: 20, scope: !9075)
!9087 = !DILocation(line: 3169, column: 9, scope: !9075)
!9088 = !DILocation(line: 3169, column: 2, scope: !9075)
!9089 = distinct !DISubprogram(name: "BKE_image_pool_free", scope: !3, file: !3, line: 3172, type: !9090, scopeLine: 3173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!9090 = !DISubroutineType(types: !9091)
!9091 = !{null, !9083}
!9092 = !DILocalVariable(name: "pool", arg: 1, scope: !9089, file: !3, line: 3172, type: !9083)
!9093 = !DILocation(line: 3172, column: 37, scope: !9089)
!9094 = !DILocalVariable(name: "entry", scope: !9089, file: !3, line: 3174, type: !9095)
!9095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9096, size: 64)
!9096 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImagePoolEntry", file: !3, line: 3159, baseType: !9097)
!9097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePoolEntry", file: !3, line: 3153, size: 320, elements: !9098)
!9098 = !{!9099, !9101, !9102, !9103, !9104, !9105}
!9099 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9097, file: !3, line: 3154, baseType: !9100, size: 64)
!9100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9097, size: 64)
!9101 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9097, file: !3, line: 3154, baseType: !9100, size: 64, offset: 64)
!9102 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !9097, file: !3, line: 3155, baseType: !2937, size: 64, offset: 128)
!9103 = !DIDerivedType(tag: DW_TAG_member, name: "ibuf", scope: !9097, file: !3, line: 3156, baseType: !2997, size: 64, offset: 192)
!9104 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9097, file: !3, line: 3157, baseType: !142, size: 32, offset: 256)
!9105 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !9097, file: !3, line: 3158, baseType: !142, size: 32, offset: 288)
!9106 = !DILocation(line: 3174, column: 18, scope: !9089)
!9107 = !DILocalVariable(name: "next_entry", scope: !9089, file: !3, line: 3174, type: !9095)
!9108 = !DILocation(line: 3174, column: 26, scope: !9089)
!9109 = !DILocation(line: 3177, column: 2, scope: !9089)
!9110 = !DILocation(line: 3179, column: 15, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9089, file: !3, line: 3179, column: 2)
!9112 = !DILocation(line: 3179, column: 21, scope: !9111)
!9113 = !DILocation(line: 3179, column: 35, scope: !9111)
!9114 = !DILocation(line: 3179, column: 13, scope: !9111)
!9115 = !DILocation(line: 3179, column: 7, scope: !9111)
!9116 = !DILocation(line: 3179, column: 42, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9111, file: !3, line: 3179, column: 2)
!9118 = !DILocation(line: 3179, column: 2, scope: !9111)
!9119 = !DILocation(line: 3180, column: 16, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 3179, column: 69)
!9121 = !DILocation(line: 3180, column: 23, scope: !9120)
!9122 = !DILocation(line: 3180, column: 14, scope: !9120)
!9123 = !DILocation(line: 3182, column: 7, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9120, file: !3, line: 3182, column: 7)
!9125 = !DILocation(line: 3182, column: 14, scope: !9124)
!9126 = !DILocation(line: 3182, column: 7, scope: !9120)
!9127 = !DILocation(line: 3183, column: 18, scope: !9124)
!9128 = !DILocation(line: 3183, column: 25, scope: !9124)
!9129 = !DILocation(line: 3183, column: 4, scope: !9124)
!9130 = !DILocation(line: 3185, column: 3, scope: !9120)
!9131 = !DILocation(line: 3185, column: 13, scope: !9120)
!9132 = !DILocation(line: 3186, column: 2, scope: !9120)
!9133 = !DILocation(line: 3179, column: 57, scope: !9117)
!9134 = !DILocation(line: 3179, column: 55, scope: !9117)
!9135 = !DILocation(line: 3179, column: 2, scope: !9117)
!9136 = distinct !{!9136, !9118, !9137}
!9137 = !DILocation(line: 3186, column: 2, scope: !9111)
!9138 = !DILocation(line: 3188, column: 2, scope: !9089)
!9139 = !DILocation(line: 3190, column: 2, scope: !9089)
!9140 = !DILocation(line: 3190, column: 12, scope: !9089)
!9141 = !DILocation(line: 3191, column: 1, scope: !9089)
!9142 = distinct !DISubprogram(name: "BKE_image_pool_acquire_ibuf", scope: !3, file: !3, line: 3209, type: !9143, scopeLine: 3210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!9143 = !DISubroutineType(types: !9144)
!9144 = !{!1222, !2937, !755, !9083}
!9145 = !DILocalVariable(name: "ima", arg: 1, scope: !9142, file: !3, line: 3209, type: !2937)
!9146 = !DILocation(line: 3209, column: 43, scope: !9142)
!9147 = !DILocalVariable(name: "iuser", arg: 2, scope: !9142, file: !3, line: 3209, type: !755)
!9148 = !DILocation(line: 3209, column: 59, scope: !9142)
!9149 = !DILocalVariable(name: "pool", arg: 3, scope: !9142, file: !3, line: 3209, type: !9083)
!9150 = !DILocation(line: 3209, column: 77, scope: !9142)
!9151 = !DILocalVariable(name: "ibuf", scope: !9142, file: !3, line: 3211, type: !2997)
!9152 = !DILocation(line: 3211, column: 9, scope: !9142)
!9153 = !DILocalVariable(name: "index", scope: !9142, file: !3, line: 3212, type: !142)
!9154 = !DILocation(line: 3212, column: 6, scope: !9142)
!9155 = !DILocalVariable(name: "frame", scope: !9142, file: !3, line: 3212, type: !142)
!9156 = !DILocation(line: 3212, column: 13, scope: !9142)
!9157 = !DILocalVariable(name: "found", scope: !9142, file: !3, line: 3213, type: !1231)
!9158 = !DILocation(line: 3213, column: 7, scope: !9142)
!9159 = !DILocation(line: 3215, column: 24, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 3215, column: 6)
!9161 = !DILocation(line: 3215, column: 29, scope: !9160)
!9162 = !DILocation(line: 3215, column: 7, scope: !9160)
!9163 = !DILocation(line: 3215, column: 6, scope: !9142)
!9164 = !DILocation(line: 3216, column: 3, scope: !9160)
!9165 = !DILocation(line: 3218, column: 6, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 3218, column: 6)
!9167 = !DILocation(line: 3218, column: 11, scope: !9166)
!9168 = !DILocation(line: 3218, column: 6, scope: !9142)
!9169 = !DILocation(line: 3220, column: 33, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9166, file: !3, line: 3218, column: 20)
!9171 = !DILocation(line: 3220, column: 38, scope: !9170)
!9172 = !DILocation(line: 3220, column: 10, scope: !9170)
!9173 = !DILocation(line: 3220, column: 3, scope: !9170)
!9174 = !DILocation(line: 3223, column: 28, scope: !9142)
!9175 = !DILocation(line: 3223, column: 33, scope: !9142)
!9176 = !DILocation(line: 3223, column: 2, scope: !9142)
!9177 = !DILocation(line: 3225, column: 31, scope: !9142)
!9178 = !DILocation(line: 3225, column: 37, scope: !9142)
!9179 = !DILocation(line: 3225, column: 42, scope: !9142)
!9180 = !DILocation(line: 3225, column: 49, scope: !9142)
!9181 = !DILocation(line: 3225, column: 9, scope: !9142)
!9182 = !DILocation(line: 3225, column: 7, scope: !9142)
!9183 = !DILocation(line: 3226, column: 6, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 3226, column: 6)
!9185 = !DILocation(line: 3226, column: 6, scope: !9142)
!9186 = !DILocation(line: 3227, column: 10, scope: !9184)
!9187 = !DILocation(line: 3227, column: 3, scope: !9184)
!9188 = !DILocation(line: 3229, column: 2, scope: !9142)
!9189 = !DILocation(line: 3231, column: 31, scope: !9142)
!9190 = !DILocation(line: 3231, column: 37, scope: !9142)
!9191 = !DILocation(line: 3231, column: 42, scope: !9142)
!9192 = !DILocation(line: 3231, column: 49, scope: !9142)
!9193 = !DILocation(line: 3231, column: 9, scope: !9142)
!9194 = !DILocation(line: 3231, column: 7, scope: !9142)
!9195 = !DILocation(line: 3236, column: 7, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 3236, column: 6)
!9197 = !DILocation(line: 3236, column: 6, scope: !9142)
!9198 = !DILocalVariable(name: "entry", scope: !9199, file: !3, line: 3237, type: !9095)
!9199 = distinct !DILexicalBlock(scope: !9196, file: !3, line: 3236, column: 14)
!9200 = !DILocation(line: 3237, column: 19, scope: !9199)
!9201 = !DILocation(line: 3239, column: 29, scope: !9199)
!9202 = !DILocation(line: 3239, column: 34, scope: !9199)
!9203 = !DILocation(line: 3239, column: 10, scope: !9199)
!9204 = !DILocation(line: 3239, column: 8, scope: !9199)
!9205 = !DILocation(line: 3241, column: 11, scope: !9199)
!9206 = !DILocation(line: 3241, column: 9, scope: !9199)
!9207 = !DILocation(line: 3242, column: 18, scope: !9199)
!9208 = !DILocation(line: 3242, column: 3, scope: !9199)
!9209 = !DILocation(line: 3242, column: 10, scope: !9199)
!9210 = !DILocation(line: 3242, column: 16, scope: !9199)
!9211 = !DILocation(line: 3243, column: 18, scope: !9199)
!9212 = !DILocation(line: 3243, column: 3, scope: !9199)
!9213 = !DILocation(line: 3243, column: 10, scope: !9199)
!9214 = !DILocation(line: 3243, column: 16, scope: !9199)
!9215 = !DILocation(line: 3244, column: 18, scope: !9199)
!9216 = !DILocation(line: 3244, column: 3, scope: !9199)
!9217 = !DILocation(line: 3244, column: 10, scope: !9199)
!9218 = !DILocation(line: 3244, column: 16, scope: !9199)
!9219 = !DILocation(line: 3245, column: 17, scope: !9199)
!9220 = !DILocation(line: 3245, column: 3, scope: !9199)
!9221 = !DILocation(line: 3245, column: 10, scope: !9199)
!9222 = !DILocation(line: 3245, column: 15, scope: !9199)
!9223 = !DILocation(line: 3247, column: 16, scope: !9199)
!9224 = !DILocation(line: 3247, column: 22, scope: !9199)
!9225 = !DILocation(line: 3247, column: 37, scope: !9199)
!9226 = !DILocation(line: 3247, column: 3, scope: !9199)
!9227 = !DILocation(line: 3248, column: 2, scope: !9199)
!9228 = !DILocation(line: 3250, column: 2, scope: !9142)
!9229 = !DILocation(line: 3252, column: 9, scope: !9142)
!9230 = !DILocation(line: 3252, column: 2, scope: !9142)
!9231 = !DILocation(line: 3253, column: 1, scope: !9142)
!9232 = distinct !DISubprogram(name: "image_get_frame_and_index", scope: !3, file: !3, line: 2897, type: !9233, scopeLine: 2898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!9233 = !DISubroutineType(types: !9234)
!9234 = !{null, !2937, !755, !291, !291}
!9235 = !DILocalVariable(name: "ima", arg: 1, scope: !9232, file: !3, line: 2897, type: !2937)
!9236 = !DILocation(line: 2897, column: 46, scope: !9232)
!9237 = !DILocalVariable(name: "iuser", arg: 2, scope: !9232, file: !3, line: 2897, type: !755)
!9238 = !DILocation(line: 2897, column: 62, scope: !9232)
!9239 = !DILocalVariable(name: "r_frame", arg: 3, scope: !9232, file: !3, line: 2897, type: !291)
!9240 = !DILocation(line: 2897, column: 74, scope: !9232)
!9241 = !DILocalVariable(name: "r_index", arg: 4, scope: !9232, file: !3, line: 2897, type: !291)
!9242 = !DILocation(line: 2897, column: 88, scope: !9232)
!9243 = !DILocalVariable(name: "frame", scope: !9232, file: !3, line: 2899, type: !142)
!9244 = !DILocation(line: 2899, column: 6, scope: !9232)
!9245 = !DILocalVariable(name: "index", scope: !9232, file: !3, line: 2899, type: !142)
!9246 = !DILocation(line: 2899, column: 17, scope: !9232)
!9247 = !DILocation(line: 2902, column: 6, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9232, file: !3, line: 2902, column: 6)
!9249 = !DILocation(line: 2902, column: 11, scope: !9248)
!9250 = !DILocation(line: 2902, column: 18, scope: !9248)
!9251 = !DILocation(line: 2902, column: 6, scope: !9232)
!9252 = !DILocation(line: 2903, column: 11, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9248, file: !3, line: 2902, column: 36)
!9254 = !DILocation(line: 2903, column: 19, scope: !9253)
!9255 = !DILocation(line: 2903, column: 26, scope: !9253)
!9256 = !DILocation(line: 2903, column: 36, scope: !9253)
!9257 = !DILocation(line: 2903, column: 41, scope: !9253)
!9258 = !DILocation(line: 2903, column: 9, scope: !9253)
!9259 = !DILocation(line: 2904, column: 2, scope: !9253)
!9260 = !DILocation(line: 2905, column: 11, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9248, file: !3, line: 2905, column: 11)
!9262 = !DILocation(line: 2905, column: 16, scope: !9261)
!9263 = !DILocation(line: 2905, column: 23, scope: !9261)
!9264 = !DILocation(line: 2905, column: 11, scope: !9248)
!9265 = !DILocation(line: 2906, column: 7, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9267, file: !3, line: 2906, column: 7)
!9267 = distinct !DILexicalBlock(scope: !9261, file: !3, line: 2905, column: 44)
!9268 = !DILocation(line: 2906, column: 12, scope: !9266)
!9269 = !DILocation(line: 2906, column: 17, scope: !9266)
!9270 = !DILocation(line: 2906, column: 7, scope: !9267)
!9271 = !DILocation(line: 2907, column: 12, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 2906, column: 36)
!9273 = !DILocation(line: 2907, column: 20, scope: !9272)
!9274 = !DILocation(line: 2907, column: 27, scope: !9272)
!9275 = !DILocation(line: 2907, column: 37, scope: !9272)
!9276 = !DILocation(line: 2907, column: 42, scope: !9272)
!9277 = !DILocation(line: 2907, column: 10, scope: !9272)
!9278 = !DILocation(line: 2908, column: 3, scope: !9272)
!9279 = !DILocation(line: 2909, column: 12, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 2909, column: 12)
!9281 = !DILocation(line: 2909, column: 17, scope: !9280)
!9282 = !DILocation(line: 2909, column: 22, scope: !9280)
!9283 = !DILocation(line: 2909, column: 12, scope: !9266)
!9284 = !DILocation(line: 2910, column: 12, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9280, file: !3, line: 2909, column: 46)
!9286 = !DILocation(line: 2910, column: 20, scope: !9285)
!9287 = !DILocation(line: 2910, column: 27, scope: !9285)
!9288 = !DILocation(line: 2910, column: 37, scope: !9285)
!9289 = !DILocation(line: 2910, column: 42, scope: !9285)
!9290 = !DILocation(line: 2910, column: 10, scope: !9285)
!9291 = !DILocation(line: 2911, column: 12, scope: !9285)
!9292 = !DILocation(line: 2911, column: 20, scope: !9285)
!9293 = !DILocation(line: 2911, column: 27, scope: !9285)
!9294 = !DILocation(line: 2911, column: 10, scope: !9285)
!9295 = !DILocation(line: 2912, column: 3, scope: !9285)
!9296 = !DILocation(line: 2913, column: 2, scope: !9267)
!9297 = !DILocation(line: 2915, column: 13, scope: !9232)
!9298 = !DILocation(line: 2915, column: 3, scope: !9232)
!9299 = !DILocation(line: 2915, column: 11, scope: !9232)
!9300 = !DILocation(line: 2916, column: 13, scope: !9232)
!9301 = !DILocation(line: 2916, column: 3, scope: !9232)
!9302 = !DILocation(line: 2916, column: 11, scope: !9232)
!9303 = !DILocation(line: 2917, column: 1, scope: !9232)
!9304 = distinct !DISubprogram(name: "image_pool_find_entry", scope: !3, file: !3, line: 3193, type: !9305, scopeLine: 3194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!9305 = !DISubroutineType(types: !9306)
!9306 = !{!2997, !9083, !2937, !142, !142, !1269}
!9307 = !DILocalVariable(name: "pool", arg: 1, scope: !9304, file: !3, line: 3193, type: !9083)
!9308 = !DILocation(line: 3193, column: 52, scope: !9304)
!9309 = !DILocalVariable(name: "image", arg: 2, scope: !9304, file: !3, line: 3193, type: !2937)
!9310 = !DILocation(line: 3193, column: 65, scope: !9304)
!9311 = !DILocalVariable(name: "frame", arg: 3, scope: !9304, file: !3, line: 3193, type: !142)
!9312 = !DILocation(line: 3193, column: 76, scope: !9304)
!9313 = !DILocalVariable(name: "index", arg: 4, scope: !9304, file: !3, line: 3193, type: !142)
!9314 = !DILocation(line: 3193, column: 87, scope: !9304)
!9315 = !DILocalVariable(name: "found", arg: 5, scope: !9304, file: !3, line: 3193, type: !1269)
!9316 = !DILocation(line: 3193, column: 100, scope: !9304)
!9317 = !DILocalVariable(name: "entry", scope: !9304, file: !3, line: 3195, type: !9095)
!9318 = !DILocation(line: 3195, column: 18, scope: !9304)
!9319 = !DILocation(line: 3197, column: 3, scope: !9304)
!9320 = !DILocation(line: 3197, column: 9, scope: !9304)
!9321 = !DILocation(line: 3199, column: 15, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !9304, file: !3, line: 3199, column: 2)
!9323 = !DILocation(line: 3199, column: 21, scope: !9322)
!9324 = !DILocation(line: 3199, column: 35, scope: !9322)
!9325 = !DILocation(line: 3199, column: 13, scope: !9322)
!9326 = !DILocation(line: 3199, column: 7, scope: !9322)
!9327 = !DILocation(line: 3199, column: 42, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 3199, column: 2)
!9329 = !DILocation(line: 3199, column: 2, scope: !9322)
!9330 = !DILocation(line: 3200, column: 7, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9332, file: !3, line: 3200, column: 7)
!9332 = distinct !DILexicalBlock(scope: !9328, file: !3, line: 3199, column: 70)
!9333 = !DILocation(line: 3200, column: 14, scope: !9331)
!9334 = !DILocation(line: 3200, column: 23, scope: !9331)
!9335 = !DILocation(line: 3200, column: 20, scope: !9331)
!9336 = !DILocation(line: 3200, column: 29, scope: !9331)
!9337 = !DILocation(line: 3200, column: 32, scope: !9331)
!9338 = !DILocation(line: 3200, column: 39, scope: !9331)
!9339 = !DILocation(line: 3200, column: 48, scope: !9331)
!9340 = !DILocation(line: 3200, column: 45, scope: !9331)
!9341 = !DILocation(line: 3200, column: 54, scope: !9331)
!9342 = !DILocation(line: 3200, column: 57, scope: !9331)
!9343 = !DILocation(line: 3200, column: 64, scope: !9331)
!9344 = !DILocation(line: 3200, column: 73, scope: !9331)
!9345 = !DILocation(line: 3200, column: 70, scope: !9331)
!9346 = !DILocation(line: 3200, column: 7, scope: !9332)
!9347 = !DILocation(line: 3201, column: 5, scope: !9348)
!9348 = distinct !DILexicalBlock(scope: !9331, file: !3, line: 3200, column: 80)
!9349 = !DILocation(line: 3201, column: 11, scope: !9348)
!9350 = !DILocation(line: 3202, column: 11, scope: !9348)
!9351 = !DILocation(line: 3202, column: 18, scope: !9348)
!9352 = !DILocation(line: 3202, column: 4, scope: !9348)
!9353 = !DILocation(line: 3204, column: 2, scope: !9332)
!9354 = !DILocation(line: 3199, column: 57, scope: !9328)
!9355 = !DILocation(line: 3199, column: 64, scope: !9328)
!9356 = !DILocation(line: 3199, column: 55, scope: !9328)
!9357 = !DILocation(line: 3199, column: 2, scope: !9328)
!9358 = distinct !{!9358, !9329, !9359}
!9359 = !DILocation(line: 3204, column: 2, scope: !9322)
!9360 = !DILocation(line: 3206, column: 2, scope: !9304)
!9361 = !DILocation(line: 3207, column: 1, scope: !9304)
!9362 = distinct !DISubprogram(name: "BKE_image_pool_release_ibuf", scope: !3, file: !3, line: 3255, type: !9363, scopeLine: 3256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!9363 = !DISubroutineType(types: !9364)
!9364 = !{null, !2937, !2997, !9083}
!9365 = !DILocalVariable(name: "ima", arg: 1, scope: !9362, file: !3, line: 3255, type: !2937)
!9366 = !DILocation(line: 3255, column: 41, scope: !9362)
!9367 = !DILocalVariable(name: "ibuf", arg: 2, scope: !9362, file: !3, line: 3255, type: !2997)
!9368 = !DILocation(line: 3255, column: 53, scope: !9362)
!9369 = !DILocalVariable(name: "pool", arg: 3, scope: !9362, file: !3, line: 3255, type: !9083)
!9370 = !DILocation(line: 3255, column: 70, scope: !9362)
!9371 = !DILocation(line: 3260, column: 6, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 3260, column: 6)
!9373 = !DILocation(line: 3260, column: 11, scope: !9372)
!9374 = !DILocation(line: 3260, column: 6, scope: !9362)
!9375 = !DILocation(line: 3261, column: 26, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9372, file: !3, line: 3260, column: 20)
!9377 = !DILocation(line: 3261, column: 31, scope: !9376)
!9378 = !DILocation(line: 3261, column: 3, scope: !9376)
!9379 = !DILocation(line: 3262, column: 2, scope: !9376)
!9380 = !DILocation(line: 3263, column: 1, scope: !9362)
!9381 = distinct !DISubprogram(name: "BKE_image_user_frame_get", scope: !3, file: !3, line: 3265, type: !9382, scopeLine: 3266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!9382 = !DISubroutineType(types: !9383)
!9383 = !{!142, !9384, !142, !142, !1269}
!9384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9385, size: 64)
!9385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !756)
!9386 = !DILocalVariable(name: "iuser", arg: 1, scope: !9381, file: !3, line: 3265, type: !9384)
!9387 = !DILocation(line: 3265, column: 47, scope: !9381)
!9388 = !DILocalVariable(name: "cfra", arg: 2, scope: !9381, file: !3, line: 3265, type: !142)
!9389 = !DILocation(line: 3265, column: 58, scope: !9381)
!9390 = !DILocalVariable(name: "fieldnr", arg: 3, scope: !9381, file: !3, line: 3265, type: !142)
!9391 = !DILocation(line: 3265, column: 68, scope: !9381)
!9392 = !DILocalVariable(name: "r_is_in_range", arg: 4, scope: !9381, file: !3, line: 3265, type: !1269)
!9393 = !DILocation(line: 3265, column: 83, scope: !9381)
!9394 = !DILocalVariable(name: "len", scope: !9381, file: !3, line: 3267, type: !5557)
!9395 = !DILocation(line: 3267, column: 12, scope: !9381)
!9396 = !DILocation(line: 3267, column: 19, scope: !9381)
!9397 = !DILocation(line: 3267, column: 26, scope: !9381)
!9398 = !DILocation(line: 3267, column: 36, scope: !9381)
!9399 = !DILocation(line: 3267, column: 43, scope: !9381)
!9400 = !DILocation(line: 3267, column: 34, scope: !9381)
!9401 = !DILocation(line: 3267, column: 51, scope: !9381)
!9402 = !DILocation(line: 3269, column: 6, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9381, file: !3, line: 3269, column: 6)
!9404 = !DILocation(line: 3269, column: 6, scope: !9381)
!9405 = !DILocation(line: 3270, column: 4, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9403, file: !3, line: 3269, column: 21)
!9407 = !DILocation(line: 3270, column: 18, scope: !9406)
!9408 = !DILocation(line: 3271, column: 2, scope: !9406)
!9409 = !DILocation(line: 3273, column: 6, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9381, file: !3, line: 3273, column: 6)
!9411 = !DILocation(line: 3273, column: 10, scope: !9410)
!9412 = !DILocation(line: 3273, column: 6, scope: !9381)
!9413 = !DILocation(line: 3274, column: 3, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9410, file: !3, line: 3273, column: 16)
!9415 = !DILocalVariable(name: "framenr", scope: !9416, file: !3, line: 3277, type: !142)
!9416 = distinct !DILexicalBlock(scope: !9410, file: !3, line: 3276, column: 7)
!9417 = !DILocation(line: 3277, column: 7, scope: !9416)
!9418 = !DILocation(line: 3278, column: 10, scope: !9416)
!9419 = !DILocation(line: 3278, column: 17, scope: !9416)
!9420 = !DILocation(line: 3278, column: 24, scope: !9416)
!9421 = !DILocation(line: 3278, column: 15, scope: !9416)
!9422 = !DILocation(line: 3278, column: 29, scope: !9416)
!9423 = !DILocation(line: 3278, column: 8, scope: !9416)
!9424 = !DILocation(line: 3281, column: 7, scope: !9425)
!9425 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 3281, column: 7)
!9426 = !DILocation(line: 3281, column: 14, scope: !9425)
!9427 = !DILocation(line: 3281, column: 7, scope: !9416)
!9428 = !DILocation(line: 3282, column: 13, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9425, file: !3, line: 3281, column: 20)
!9430 = !DILocation(line: 3282, column: 21, scope: !9429)
!9431 = !DILocation(line: 3282, column: 19, scope: !9429)
!9432 = !DILocation(line: 3282, column: 9, scope: !9429)
!9433 = !DILocation(line: 3283, column: 8, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 3283, column: 8)
!9435 = !DILocation(line: 3283, column: 13, scope: !9434)
!9436 = !DILocation(line: 3283, column: 8, scope: !9429)
!9437 = !DILocation(line: 3283, column: 26, scope: !9434)
!9438 = !DILocation(line: 3283, column: 23, scope: !9434)
!9439 = !DILocation(line: 3283, column: 18, scope: !9434)
!9440 = !DILocation(line: 3284, column: 8, scope: !9441)
!9441 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 3284, column: 8)
!9442 = !DILocation(line: 3284, column: 13, scope: !9441)
!9443 = !DILocation(line: 3284, column: 8, scope: !9429)
!9444 = !DILocation(line: 3284, column: 26, scope: !9441)
!9445 = !DILocation(line: 3284, column: 24, scope: !9441)
!9446 = !DILocation(line: 3284, column: 19, scope: !9441)
!9447 = !DILocation(line: 3286, column: 8, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 3286, column: 8)
!9449 = !DILocation(line: 3286, column: 8, scope: !9429)
!9450 = !DILocation(line: 3287, column: 6, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9448, file: !3, line: 3286, column: 23)
!9452 = !DILocation(line: 3287, column: 20, scope: !9451)
!9453 = !DILocation(line: 3288, column: 4, scope: !9451)
!9454 = !DILocation(line: 3289, column: 3, scope: !9429)
!9455 = !DILocation(line: 3291, column: 7, scope: !9456)
!9456 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 3291, column: 7)
!9457 = !DILocation(line: 3291, column: 12, scope: !9456)
!9458 = !DILocation(line: 3291, column: 7, scope: !9416)
!9459 = !DILocation(line: 3292, column: 9, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9456, file: !3, line: 3291, column: 17)
!9461 = !DILocation(line: 3293, column: 3, scope: !9460)
!9462 = !DILocation(line: 3294, column: 12, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9456, file: !3, line: 3294, column: 12)
!9464 = !DILocation(line: 3294, column: 19, scope: !9463)
!9465 = !DILocation(line: 3294, column: 17, scope: !9463)
!9466 = !DILocation(line: 3294, column: 12, scope: !9456)
!9467 = !DILocation(line: 3295, column: 11, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9463, file: !3, line: 3294, column: 24)
!9469 = !DILocation(line: 3295, column: 9, scope: !9468)
!9470 = !DILocation(line: 3296, column: 3, scope: !9468)
!9471 = !DILocation(line: 3298, column: 8, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9473, file: !3, line: 3298, column: 8)
!9473 = distinct !DILexicalBlock(scope: !9463, file: !3, line: 3297, column: 8)
!9474 = !DILocation(line: 3298, column: 8, scope: !9473)
!9475 = !DILocation(line: 3299, column: 6, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 3298, column: 23)
!9477 = !DILocation(line: 3299, column: 20, scope: !9476)
!9478 = !DILocation(line: 3300, column: 4, scope: !9476)
!9479 = !DILocation(line: 3304, column: 15, scope: !9416)
!9480 = !DILocation(line: 3304, column: 12, scope: !9416)
!9481 = !DILocation(line: 3304, column: 8, scope: !9416)
!9482 = !DILocation(line: 3305, column: 7, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 3305, column: 7)
!9484 = !DILocation(line: 3305, column: 7, scope: !9416)
!9485 = !DILocation(line: 3305, column: 20, scope: !9483)
!9486 = !DILocation(line: 3305, column: 16, scope: !9483)
!9487 = !DILocation(line: 3308, column: 14, scope: !9416)
!9488 = !DILocation(line: 3308, column: 21, scope: !9416)
!9489 = !DILocation(line: 3308, column: 28, scope: !9416)
!9490 = !DILocation(line: 3308, column: 19, scope: !9416)
!9491 = !DILocation(line: 3308, column: 36, scope: !9416)
!9492 = !DILocation(line: 3308, column: 43, scope: !9416)
!9493 = !DILocation(line: 3308, column: 50, scope: !9416)
!9494 = !DILocation(line: 3308, column: 41, scope: !9416)
!9495 = !DILocation(line: 3308, column: 11, scope: !9416)
!9496 = !DILocation(line: 3309, column: 7, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 3309, column: 7)
!9498 = !DILocation(line: 3309, column: 17, scope: !9497)
!9499 = !DILocation(line: 3309, column: 24, scope: !9497)
!9500 = !DILocation(line: 3309, column: 15, scope: !9497)
!9501 = !DILocation(line: 3309, column: 7, scope: !9416)
!9502 = !DILocation(line: 3309, column: 42, scope: !9497)
!9503 = !DILocation(line: 3309, column: 49, scope: !9497)
!9504 = !DILocation(line: 3309, column: 40, scope: !9497)
!9505 = !DILocation(line: 3309, column: 32, scope: !9497)
!9506 = !DILocation(line: 3311, column: 7, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 3311, column: 7)
!9508 = !DILocation(line: 3311, column: 14, scope: !9507)
!9509 = !DILocation(line: 3311, column: 7, scope: !9416)
!9510 = !DILocation(line: 3312, column: 16, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9507, file: !3, line: 3311, column: 20)
!9512 = !DILocation(line: 3312, column: 27, scope: !9511)
!9513 = !DILocation(line: 3312, column: 25, scope: !9511)
!9514 = !DILocation(line: 3312, column: 12, scope: !9511)
!9515 = !DILocation(line: 3313, column: 4, scope: !9511)
!9516 = !DILocation(line: 3313, column: 11, scope: !9511)
!9517 = !DILocation(line: 3313, column: 19, scope: !9511)
!9518 = !DILocation(line: 3313, column: 35, scope: !9511)
!9519 = !DILocation(line: 3313, column: 32, scope: !9511)
!9520 = distinct !{!9520, !9515, !9518}
!9521 = !DILocation(line: 3314, column: 8, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9511, file: !3, line: 3314, column: 8)
!9523 = !DILocation(line: 3314, column: 16, scope: !9522)
!9524 = !DILocation(line: 3314, column: 8, scope: !9511)
!9525 = !DILocation(line: 3314, column: 32, scope: !9522)
!9526 = !DILocation(line: 3314, column: 30, scope: !9522)
!9527 = !DILocation(line: 3314, column: 22, scope: !9522)
!9528 = !DILocation(line: 3315, column: 3, scope: !9511)
!9529 = !DILocation(line: 3318, column: 14, scope: !9416)
!9530 = !DILocation(line: 3318, column: 21, scope: !9416)
!9531 = !DILocation(line: 3318, column: 11, scope: !9416)
!9532 = !DILocation(line: 3320, column: 10, scope: !9416)
!9533 = !DILocation(line: 3320, column: 3, scope: !9416)
!9534 = !DILocation(line: 3322, column: 1, scope: !9381)
!9535 = distinct !DISubprogram(name: "BKE_image_user_frame_calc", scope: !3, file: !3, line: 3324, type: !9536, scopeLine: 3325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!9536 = !DISubroutineType(types: !9537)
!9537 = !{null, !755, !142, !142}
!9538 = !DILocalVariable(name: "iuser", arg: 1, scope: !9535, file: !3, line: 3324, type: !755)
!9539 = !DILocation(line: 3324, column: 43, scope: !9535)
!9540 = !DILocalVariable(name: "cfra", arg: 2, scope: !9535, file: !3, line: 3324, type: !142)
!9541 = !DILocation(line: 3324, column: 54, scope: !9535)
!9542 = !DILocalVariable(name: "fieldnr", arg: 3, scope: !9535, file: !3, line: 3324, type: !142)
!9543 = !DILocation(line: 3324, column: 64, scope: !9535)
!9544 = !DILocation(line: 3326, column: 6, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9535, file: !3, line: 3326, column: 6)
!9546 = !DILocation(line: 3326, column: 6, scope: !9535)
!9547 = !DILocalVariable(name: "is_in_range", scope: !9548, file: !3, line: 3327, type: !1231)
!9548 = distinct !DILexicalBlock(scope: !9545, file: !3, line: 3326, column: 13)
!9549 = !DILocation(line: 3327, column: 8, scope: !9548)
!9550 = !DILocalVariable(name: "framenr", scope: !9548, file: !3, line: 3328, type: !5557)
!9551 = !DILocation(line: 3328, column: 13, scope: !9548)
!9552 = !DILocation(line: 3328, column: 48, scope: !9548)
!9553 = !DILocation(line: 3328, column: 55, scope: !9548)
!9554 = !DILocation(line: 3328, column: 61, scope: !9548)
!9555 = !DILocation(line: 3328, column: 23, scope: !9548)
!9556 = !DILocation(line: 3330, column: 7, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 3330, column: 7)
!9558 = !DILocation(line: 3330, column: 7, scope: !9548)
!9559 = !DILocation(line: 3331, column: 4, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9557, file: !3, line: 3330, column: 20)
!9561 = !DILocation(line: 3331, column: 11, scope: !9560)
!9562 = !DILocation(line: 3331, column: 16, scope: !9560)
!9563 = !DILocation(line: 3332, column: 3, scope: !9560)
!9564 = !DILocation(line: 3334, column: 4, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9557, file: !3, line: 3333, column: 8)
!9566 = !DILocation(line: 3334, column: 11, scope: !9565)
!9567 = !DILocation(line: 3334, column: 16, scope: !9565)
!9568 = !DILocation(line: 3338, column: 7, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 3338, column: 7)
!9570 = !DILocation(line: 3338, column: 14, scope: !9569)
!9571 = !DILocation(line: 3338, column: 19, scope: !9569)
!9572 = !DILocation(line: 3338, column: 7, scope: !9548)
!9573 = !DILocation(line: 3339, column: 8, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 3339, column: 8)
!9575 = !DILocation(line: 3339, column: 19, scope: !9574)
!9576 = !DILocation(line: 3339, column: 26, scope: !9574)
!9577 = !DILocation(line: 3339, column: 16, scope: !9574)
!9578 = !DILocation(line: 3339, column: 8, scope: !9569)
!9579 = !DILocation(line: 3340, column: 5, scope: !9574)
!9580 = !DILocation(line: 3340, column: 12, scope: !9574)
!9581 = !DILocation(line: 3340, column: 17, scope: !9574)
!9582 = !DILocation(line: 3342, column: 20, scope: !9548)
!9583 = !DILocation(line: 3342, column: 3, scope: !9548)
!9584 = !DILocation(line: 3342, column: 10, scope: !9548)
!9585 = !DILocation(line: 3342, column: 18, scope: !9548)
!9586 = !DILocation(line: 3343, column: 7, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 3343, column: 7)
!9588 = !DILocation(line: 3343, column: 14, scope: !9587)
!9589 = !DILocation(line: 3343, column: 17, scope: !9587)
!9590 = !DILocation(line: 3343, column: 7, scope: !9548)
!9591 = !DILocation(line: 3343, column: 23, scope: !9587)
!9592 = !DILocation(line: 3343, column: 30, scope: !9587)
!9593 = !DILocation(line: 3343, column: 33, scope: !9587)
!9594 = !DILocation(line: 3344, column: 2, scope: !9548)
!9595 = !DILocation(line: 3345, column: 1, scope: !9535)
!9596 = distinct !DISubprogram(name: "BKE_image_user_check_frame_calc", scope: !3, file: !3, line: 3347, type: !9536, scopeLine: 3348, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!9597 = !DILocalVariable(name: "iuser", arg: 1, scope: !9596, file: !3, line: 3347, type: !755)
!9598 = !DILocation(line: 3347, column: 49, scope: !9596)
!9599 = !DILocalVariable(name: "cfra", arg: 2, scope: !9596, file: !3, line: 3347, type: !142)
!9600 = !DILocation(line: 3347, column: 60, scope: !9596)
!9601 = !DILocalVariable(name: "fieldnr", arg: 3, scope: !9596, file: !3, line: 3347, type: !142)
!9602 = !DILocation(line: 3347, column: 70, scope: !9596)
!9603 = !DILocation(line: 3349, column: 7, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9596, file: !3, line: 3349, column: 6)
!9605 = !DILocation(line: 3349, column: 14, scope: !9604)
!9606 = !DILocation(line: 3349, column: 19, scope: !9604)
!9607 = !DILocation(line: 3349, column: 38, scope: !9604)
!9608 = !DILocation(line: 3349, column: 42, scope: !9604)
!9609 = !DILocation(line: 3349, column: 49, scope: !9604)
!9610 = !DILocation(line: 3349, column: 54, scope: !9604)
!9611 = !DILocation(line: 3349, column: 6, scope: !9596)
!9612 = !DILocation(line: 3350, column: 29, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9604, file: !3, line: 3349, column: 80)
!9614 = !DILocation(line: 3350, column: 36, scope: !9613)
!9615 = !DILocation(line: 3350, column: 42, scope: !9613)
!9616 = !DILocation(line: 3350, column: 3, scope: !9613)
!9617 = !DILocation(line: 3352, column: 3, scope: !9613)
!9618 = !DILocation(line: 3352, column: 10, scope: !9613)
!9619 = !DILocation(line: 3352, column: 15, scope: !9613)
!9620 = !DILocation(line: 3353, column: 2, scope: !9613)
!9621 = !DILocation(line: 3354, column: 1, scope: !9596)
!9622 = distinct !DISubprogram(name: "BKE_image_update_frame", scope: !3, file: !3, line: 3364, type: !9623, scopeLine: 3365, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!9623 = !DISubroutineType(types: !9624)
!9624 = !{null, !7556, !142}
!9625 = !DILocalVariable(name: "bmain", arg: 1, scope: !9622, file: !3, line: 3364, type: !7556)
!9626 = !DILocation(line: 3364, column: 41, scope: !9622)
!9627 = !DILocalVariable(name: "cfra", arg: 2, scope: !9622, file: !3, line: 3364, type: !142)
!9628 = !DILocation(line: 3364, column: 52, scope: !9622)
!9629 = !DILocation(line: 3366, column: 27, scope: !9622)
!9630 = !DILocation(line: 3366, column: 34, scope: !9622)
!9631 = !DILocation(line: 3366, column: 2, scope: !9622)
!9632 = !DILocation(line: 3367, column: 1, scope: !9622)
!9633 = distinct !DISubprogram(name: "image_update_frame", scope: !3, file: !3, line: 3357, type: !9634, scopeLine: 3358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!9634 = !DISubroutineType(types: !9635)
!9635 = !{null, !190, !9636, !177}
!9636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!9637 = !DILocalVariable(name: "UNUSED_ima", arg: 1, scope: !9633, file: !3, line: 3357, type: !190)
!9638 = !DILocation(line: 3357, column: 46, scope: !9633)
!9639 = !DILocalVariable(name: "iuser", arg: 2, scope: !9633, file: !3, line: 3357, type: !9636)
!9640 = !DILocation(line: 3357, column: 77, scope: !9633)
!9641 = !DILocalVariable(name: "customdata", arg: 3, scope: !9633, file: !3, line: 3357, type: !177)
!9642 = !DILocation(line: 3357, column: 90, scope: !9633)
!9643 = !DILocalVariable(name: "cfra", scope: !9633, file: !3, line: 3359, type: !142)
!9644 = !DILocation(line: 3359, column: 6, scope: !9633)
!9645 = !DILocation(line: 3359, column: 21, scope: !9633)
!9646 = !DILocation(line: 3359, column: 14, scope: !9633)
!9647 = !DILocation(line: 3359, column: 13, scope: !9633)
!9648 = !DILocation(line: 3361, column: 34, scope: !9633)
!9649 = !DILocation(line: 3361, column: 41, scope: !9633)
!9650 = !DILocation(line: 3361, column: 2, scope: !9633)
!9651 = !DILocation(line: 3362, column: 1, scope: !9633)
!9652 = distinct !DISubprogram(name: "BKE_image_user_file_path", scope: !3, file: !3, line: 3369, type: !9653, scopeLine: 3370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!9653 = !DISubroutineType(types: !9654)
!9654 = !{null, !755, !2937, !623}
!9655 = !DILocalVariable(name: "iuser", arg: 1, scope: !9652, file: !3, line: 3369, type: !755)
!9656 = !DILocation(line: 3369, column: 42, scope: !9652)
!9657 = !DILocalVariable(name: "ima", arg: 2, scope: !9652, file: !3, line: 3369, type: !2937)
!9658 = !DILocation(line: 3369, column: 56, scope: !9652)
!9659 = !DILocalVariable(name: "filepath", arg: 3, scope: !9652, file: !3, line: 3369, type: !623)
!9660 = !DILocation(line: 3369, column: 67, scope: !9652)
!9661 = !DILocation(line: 3371, column: 14, scope: !9652)
!9662 = !DILocation(line: 3371, column: 24, scope: !9652)
!9663 = !DILocation(line: 3371, column: 29, scope: !9652)
!9664 = !DILocation(line: 3371, column: 2, scope: !9652)
!9665 = !DILocation(line: 3373, column: 6, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 3373, column: 6)
!9667 = !DILocation(line: 3373, column: 11, scope: !9666)
!9668 = !DILocation(line: 3373, column: 18, scope: !9666)
!9669 = !DILocation(line: 3373, column: 6, scope: !9652)
!9670 = !DILocalVariable(name: "head", scope: !9671, file: !3, line: 3374, type: !213)
!9671 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 3373, column: 39)
!9672 = !DILocation(line: 3374, column: 8, scope: !9671)
!9673 = !DILocalVariable(name: "tail", scope: !9671, file: !3, line: 3374, type: !213)
!9674 = !DILocation(line: 3374, column: 24, scope: !9671)
!9675 = !DILocalVariable(name: "numlen", scope: !9671, file: !3, line: 3375, type: !677)
!9676 = !DILocation(line: 3375, column: 18, scope: !9671)
!9677 = !DILocalVariable(name: "frame", scope: !9671, file: !3, line: 3376, type: !142)
!9678 = !DILocation(line: 3376, column: 7, scope: !9671)
!9679 = !DILocation(line: 3376, column: 15, scope: !9671)
!9680 = !DILocation(line: 3376, column: 23, scope: !9671)
!9681 = !DILocation(line: 3376, column: 30, scope: !9671)
!9682 = !DILocation(line: 3376, column: 40, scope: !9671)
!9683 = !DILocation(line: 3376, column: 45, scope: !9671)
!9684 = !DILocation(line: 3378, column: 17, scope: !9671)
!9685 = !DILocation(line: 3378, column: 27, scope: !9671)
!9686 = !DILocation(line: 3378, column: 33, scope: !9671)
!9687 = !DILocation(line: 3378, column: 3, scope: !9671)
!9688 = !DILocation(line: 3379, column: 17, scope: !9671)
!9689 = !DILocation(line: 3379, column: 27, scope: !9671)
!9690 = !DILocation(line: 3379, column: 33, scope: !9671)
!9691 = !DILocation(line: 3379, column: 39, scope: !9671)
!9692 = !DILocation(line: 3379, column: 47, scope: !9671)
!9693 = !DILocation(line: 3379, column: 3, scope: !9671)
!9694 = !DILocation(line: 3380, column: 2, scope: !9671)
!9695 = !DILocation(line: 3382, column: 15, scope: !9652)
!9696 = !DILocation(line: 3382, column: 25, scope: !9652)
!9697 = !DILocation(line: 3382, column: 2, scope: !9652)
!9698 = !DILocation(line: 3383, column: 1, scope: !9652)
!9699 = distinct !DISubprogram(name: "BKE_image_has_alpha", scope: !3, file: !3, line: 3385, type: !9700, scopeLine: 3386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!9700 = !DISubroutineType(types: !9701)
!9701 = !{!1231, !190}
!9702 = !DILocalVariable(name: "image", arg: 1, scope: !9699, file: !3, line: 3385, type: !190)
!9703 = !DILocation(line: 3385, column: 40, scope: !9699)
!9704 = !DILocalVariable(name: "ibuf", scope: !9699, file: !3, line: 3387, type: !2997)
!9705 = !DILocation(line: 3387, column: 9, scope: !9699)
!9706 = !DILocalVariable(name: "lock", scope: !9699, file: !3, line: 3388, type: !177)
!9707 = !DILocation(line: 3388, column: 8, scope: !9699)
!9708 = !DILocalVariable(name: "planes", scope: !9699, file: !3, line: 3389, type: !142)
!9709 = !DILocation(line: 3389, column: 6, scope: !9699)
!9710 = !DILocation(line: 3391, column: 32, scope: !9699)
!9711 = !DILocation(line: 3391, column: 9, scope: !9699)
!9712 = !DILocation(line: 3391, column: 7, scope: !9699)
!9713 = !DILocation(line: 3392, column: 12, scope: !9699)
!9714 = !DILocation(line: 3392, column: 19, scope: !9699)
!9715 = !DILocation(line: 3392, column: 25, scope: !9699)
!9716 = !DILocation(line: 3392, column: 9, scope: !9699)
!9717 = !DILocation(line: 3393, column: 25, scope: !9699)
!9718 = !DILocation(line: 3393, column: 32, scope: !9699)
!9719 = !DILocation(line: 3393, column: 38, scope: !9699)
!9720 = !DILocation(line: 3393, column: 2, scope: !9699)
!9721 = !DILocation(line: 3395, column: 6, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9699, file: !3, line: 3395, column: 6)
!9723 = !DILocation(line: 3395, column: 13, scope: !9722)
!9724 = !DILocation(line: 3395, column: 6, scope: !9699)
!9725 = !DILocation(line: 3396, column: 3, scope: !9722)
!9726 = !DILocation(line: 3398, column: 3, scope: !9722)
!9727 = !DILocation(line: 3399, column: 1, scope: !9699)
!9728 = distinct !DISubprogram(name: "BKE_image_get_size", scope: !3, file: !3, line: 3401, type: !9233, scopeLine: 3402, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!9729 = !DILocalVariable(name: "image", arg: 1, scope: !9728, file: !3, line: 3401, type: !2937)
!9730 = !DILocation(line: 3401, column: 32, scope: !9728)
!9731 = !DILocalVariable(name: "iuser", arg: 2, scope: !9728, file: !3, line: 3401, type: !755)
!9732 = !DILocation(line: 3401, column: 50, scope: !9728)
!9733 = !DILocalVariable(name: "width", arg: 3, scope: !9728, file: !3, line: 3401, type: !291)
!9734 = !DILocation(line: 3401, column: 62, scope: !9728)
!9735 = !DILocalVariable(name: "height", arg: 4, scope: !9728, file: !3, line: 3401, type: !291)
!9736 = !DILocation(line: 3401, column: 74, scope: !9728)
!9737 = !DILocalVariable(name: "ibuf", scope: !9728, file: !3, line: 3403, type: !2997)
!9738 = !DILocation(line: 3403, column: 9, scope: !9728)
!9739 = !DILocalVariable(name: "lock", scope: !9728, file: !3, line: 3404, type: !177)
!9740 = !DILocation(line: 3404, column: 8, scope: !9728)
!9741 = !DILocation(line: 3406, column: 32, scope: !9728)
!9742 = !DILocation(line: 3406, column: 39, scope: !9728)
!9743 = !DILocation(line: 3406, column: 9, scope: !9728)
!9744 = !DILocation(line: 3406, column: 7, scope: !9728)
!9745 = !DILocation(line: 3408, column: 6, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9728, file: !3, line: 3408, column: 6)
!9747 = !DILocation(line: 3408, column: 11, scope: !9746)
!9748 = !DILocation(line: 3408, column: 14, scope: !9746)
!9749 = !DILocation(line: 3408, column: 20, scope: !9746)
!9750 = !DILocation(line: 3408, column: 22, scope: !9746)
!9751 = !DILocation(line: 3408, column: 26, scope: !9746)
!9752 = !DILocation(line: 3408, column: 29, scope: !9746)
!9753 = !DILocation(line: 3408, column: 35, scope: !9746)
!9754 = !DILocation(line: 3408, column: 37, scope: !9746)
!9755 = !DILocation(line: 3408, column: 6, scope: !9728)
!9756 = !DILocation(line: 3409, column: 12, scope: !9757)
!9757 = distinct !DILexicalBlock(scope: !9746, file: !3, line: 3408, column: 42)
!9758 = !DILocation(line: 3409, column: 18, scope: !9757)
!9759 = !DILocation(line: 3409, column: 4, scope: !9757)
!9760 = !DILocation(line: 3409, column: 10, scope: !9757)
!9761 = !DILocation(line: 3410, column: 13, scope: !9757)
!9762 = !DILocation(line: 3410, column: 19, scope: !9757)
!9763 = !DILocation(line: 3410, column: 4, scope: !9757)
!9764 = !DILocation(line: 3410, column: 11, scope: !9757)
!9765 = !DILocation(line: 3411, column: 2, scope: !9757)
!9766 = !DILocation(line: 3413, column: 4, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9746, file: !3, line: 3412, column: 7)
!9768 = !DILocation(line: 3413, column: 11, scope: !9767)
!9769 = !DILocation(line: 3414, column: 4, scope: !9767)
!9770 = !DILocation(line: 3414, column: 11, scope: !9767)
!9771 = !DILocation(line: 3417, column: 25, scope: !9728)
!9772 = !DILocation(line: 3417, column: 32, scope: !9728)
!9773 = !DILocation(line: 3417, column: 38, scope: !9728)
!9774 = !DILocation(line: 3417, column: 2, scope: !9728)
!9775 = !DILocation(line: 3418, column: 1, scope: !9728)
!9776 = distinct !DISubprogram(name: "BKE_image_get_size_fl", scope: !3, file: !3, line: 3420, type: !9777, scopeLine: 3421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!9777 = !DISubroutineType(types: !9778)
!9778 = !{null, !2937, !755, !293}
!9779 = !DILocalVariable(name: "image", arg: 1, scope: !9776, file: !3, line: 3420, type: !2937)
!9780 = !DILocation(line: 3420, column: 35, scope: !9776)
!9781 = !DILocalVariable(name: "iuser", arg: 2, scope: !9776, file: !3, line: 3420, type: !755)
!9782 = !DILocation(line: 3420, column: 53, scope: !9776)
!9783 = !DILocalVariable(name: "size", arg: 3, scope: !9776, file: !3, line: 3420, type: !293)
!9784 = !DILocation(line: 3420, column: 66, scope: !9776)
!9785 = !DILocalVariable(name: "width", scope: !9776, file: !3, line: 3422, type: !142)
!9786 = !DILocation(line: 3422, column: 6, scope: !9776)
!9787 = !DILocalVariable(name: "height", scope: !9776, file: !3, line: 3422, type: !142)
!9788 = !DILocation(line: 3422, column: 13, scope: !9776)
!9789 = !DILocation(line: 3423, column: 21, scope: !9776)
!9790 = !DILocation(line: 3423, column: 28, scope: !9776)
!9791 = !DILocation(line: 3423, column: 2, scope: !9776)
!9792 = !DILocation(line: 3425, column: 19, scope: !9776)
!9793 = !DILocation(line: 3425, column: 12, scope: !9776)
!9794 = !DILocation(line: 3425, column: 2, scope: !9776)
!9795 = !DILocation(line: 3425, column: 10, scope: !9776)
!9796 = !DILocation(line: 3426, column: 19, scope: !9776)
!9797 = !DILocation(line: 3426, column: 12, scope: !9776)
!9798 = !DILocation(line: 3426, column: 2, scope: !9776)
!9799 = !DILocation(line: 3426, column: 10, scope: !9776)
!9800 = !DILocation(line: 3428, column: 1, scope: !9776)
!9801 = distinct !DISubprogram(name: "BKE_image_get_aspect", scope: !3, file: !3, line: 3430, type: !9802, scopeLine: 3431, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!9802 = !DISubroutineType(types: !9803)
!9803 = !{null, !2937, !293, !293}
!9804 = !DILocalVariable(name: "image", arg: 1, scope: !9801, file: !3, line: 3430, type: !2937)
!9805 = !DILocation(line: 3430, column: 34, scope: !9801)
!9806 = !DILocalVariable(name: "aspx", arg: 2, scope: !9801, file: !3, line: 3430, type: !293)
!9807 = !DILocation(line: 3430, column: 48, scope: !9801)
!9808 = !DILocalVariable(name: "aspy", arg: 3, scope: !9801, file: !3, line: 3430, type: !293)
!9809 = !DILocation(line: 3430, column: 61, scope: !9801)
!9810 = !DILocation(line: 3432, column: 3, scope: !9801)
!9811 = !DILocation(line: 3432, column: 8, scope: !9801)
!9812 = !DILocation(line: 3435, column: 6, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9801, file: !3, line: 3435, column: 6)
!9814 = !DILocation(line: 3435, column: 6, scope: !9801)
!9815 = !DILocation(line: 3436, column: 11, scope: !9813)
!9816 = !DILocation(line: 3436, column: 18, scope: !9813)
!9817 = !DILocation(line: 3436, column: 25, scope: !9813)
!9818 = !DILocation(line: 3436, column: 32, scope: !9813)
!9819 = !DILocation(line: 3436, column: 23, scope: !9813)
!9820 = !DILocation(line: 3436, column: 4, scope: !9813)
!9821 = !DILocation(line: 3436, column: 9, scope: !9813)
!9822 = !DILocation(line: 3436, column: 3, scope: !9813)
!9823 = !DILocation(line: 3438, column: 4, scope: !9813)
!9824 = !DILocation(line: 3438, column: 9, scope: !9813)
!9825 = !DILocation(line: 3439, column: 1, scope: !9801)
!9826 = distinct !DISubprogram(name: "BKE_image_get_pixels_for_frame", scope: !3, file: !3, line: 3441, type: !9827, scopeLine: 3442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!9827 = !DISubroutineType(types: !9828)
!9828 = !{!1269, !190, !142}
!9829 = !DILocalVariable(name: "image", arg: 1, scope: !9826, file: !3, line: 3441, type: !190)
!9830 = !DILocation(line: 3441, column: 61, scope: !9826)
!9831 = !DILocalVariable(name: "frame", arg: 2, scope: !9826, file: !3, line: 3441, type: !142)
!9832 = !DILocation(line: 3441, column: 72, scope: !9826)
!9833 = !DILocalVariable(name: "iuser", scope: !9826, file: !3, line: 3443, type: !756)
!9834 = !DILocation(line: 3443, column: 12, scope: !9826)
!9835 = !DILocalVariable(name: "lock", scope: !9826, file: !3, line: 3444, type: !177)
!9836 = !DILocation(line: 3444, column: 8, scope: !9826)
!9837 = !DILocalVariable(name: "ibuf", scope: !9826, file: !3, line: 3445, type: !2997)
!9838 = !DILocation(line: 3445, column: 9, scope: !9826)
!9839 = !DILocalVariable(name: "pixels", scope: !9826, file: !3, line: 3446, type: !1269)
!9840 = !DILocation(line: 3446, column: 17, scope: !9826)
!9841 = !DILocation(line: 3448, column: 18, scope: !9826)
!9842 = !DILocation(line: 3448, column: 8, scope: !9826)
!9843 = !DILocation(line: 3448, column: 16, scope: !9826)
!9844 = !DILocation(line: 3449, column: 8, scope: !9826)
!9845 = !DILocation(line: 3449, column: 11, scope: !9826)
!9846 = !DILocation(line: 3451, column: 32, scope: !9826)
!9847 = !DILocation(line: 3451, column: 9, scope: !9826)
!9848 = !DILocation(line: 3451, column: 7, scope: !9826)
!9849 = !DILocation(line: 3453, column: 6, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9826, file: !3, line: 3453, column: 6)
!9851 = !DILocation(line: 3453, column: 6, scope: !9826)
!9852 = !DILocation(line: 3454, column: 30, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9850, file: !3, line: 3453, column: 12)
!9854 = !DILocation(line: 3454, column: 36, scope: !9853)
!9855 = !DILocation(line: 3454, column: 12, scope: !9853)
!9856 = !DILocation(line: 3454, column: 10, scope: !9853)
!9857 = !DILocation(line: 3456, column: 7, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9853, file: !3, line: 3456, column: 7)
!9859 = !DILocation(line: 3456, column: 7, scope: !9853)
!9860 = !DILocation(line: 3457, column: 13, scope: !9858)
!9861 = !DILocation(line: 3457, column: 27, scope: !9858)
!9862 = !DILocation(line: 3457, column: 11, scope: !9858)
!9863 = !DILocation(line: 3457, column: 4, scope: !9858)
!9864 = !DILocation(line: 3459, column: 26, scope: !9853)
!9865 = !DILocation(line: 3459, column: 33, scope: !9853)
!9866 = !DILocation(line: 3459, column: 39, scope: !9853)
!9867 = !DILocation(line: 3459, column: 3, scope: !9853)
!9868 = !DILocation(line: 3460, column: 2, scope: !9853)
!9869 = !DILocation(line: 3462, column: 7, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9826, file: !3, line: 3462, column: 6)
!9871 = !DILocation(line: 3462, column: 6, scope: !9826)
!9872 = !DILocation(line: 3463, column: 3, scope: !9870)
!9873 = !DILocation(line: 3465, column: 9, scope: !9826)
!9874 = !DILocation(line: 3465, column: 2, scope: !9826)
!9875 = !DILocation(line: 3466, column: 1, scope: !9826)
!9876 = distinct !DISubprogram(name: "BKE_image_get_float_pixels_for_frame", scope: !3, file: !3, line: 3468, type: !9877, scopeLine: 3469, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!9877 = !DISubroutineType(types: !9878)
!9878 = !{!293, !190, !142}
!9879 = !DILocalVariable(name: "image", arg: 1, scope: !9876, file: !3, line: 3468, type: !190)
!9880 = !DILocation(line: 3468, column: 59, scope: !9876)
!9881 = !DILocalVariable(name: "frame", arg: 2, scope: !9876, file: !3, line: 3468, type: !142)
!9882 = !DILocation(line: 3468, column: 70, scope: !9876)
!9883 = !DILocalVariable(name: "iuser", scope: !9876, file: !3, line: 3470, type: !756)
!9884 = !DILocation(line: 3470, column: 12, scope: !9876)
!9885 = !DILocalVariable(name: "lock", scope: !9876, file: !3, line: 3471, type: !177)
!9886 = !DILocation(line: 3471, column: 8, scope: !9876)
!9887 = !DILocalVariable(name: "ibuf", scope: !9876, file: !3, line: 3472, type: !2997)
!9888 = !DILocation(line: 3472, column: 9, scope: !9876)
!9889 = !DILocalVariable(name: "pixels", scope: !9876, file: !3, line: 3473, type: !293)
!9890 = !DILocation(line: 3473, column: 9, scope: !9876)
!9891 = !DILocation(line: 3475, column: 18, scope: !9876)
!9892 = !DILocation(line: 3475, column: 8, scope: !9876)
!9893 = !DILocation(line: 3475, column: 16, scope: !9876)
!9894 = !DILocation(line: 3476, column: 8, scope: !9876)
!9895 = !DILocation(line: 3476, column: 11, scope: !9876)
!9896 = !DILocation(line: 3478, column: 32, scope: !9876)
!9897 = !DILocation(line: 3478, column: 9, scope: !9876)
!9898 = !DILocation(line: 3478, column: 7, scope: !9876)
!9899 = !DILocation(line: 3480, column: 6, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9876, file: !3, line: 3480, column: 6)
!9901 = !DILocation(line: 3480, column: 6, scope: !9876)
!9902 = !DILocation(line: 3481, column: 12, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9900, file: !3, line: 3480, column: 12)
!9904 = !DILocation(line: 3481, column: 18, scope: !9903)
!9905 = !DILocation(line: 3481, column: 10, scope: !9903)
!9906 = !DILocation(line: 3483, column: 7, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9903, file: !3, line: 3483, column: 7)
!9908 = !DILocation(line: 3483, column: 7, scope: !9903)
!9909 = !DILocation(line: 3484, column: 13, scope: !9907)
!9910 = !DILocation(line: 3484, column: 27, scope: !9907)
!9911 = !DILocation(line: 3484, column: 11, scope: !9907)
!9912 = !DILocation(line: 3484, column: 4, scope: !9907)
!9913 = !DILocation(line: 3486, column: 26, scope: !9903)
!9914 = !DILocation(line: 3486, column: 33, scope: !9903)
!9915 = !DILocation(line: 3486, column: 39, scope: !9903)
!9916 = !DILocation(line: 3486, column: 3, scope: !9903)
!9917 = !DILocation(line: 3487, column: 2, scope: !9903)
!9918 = !DILocation(line: 3489, column: 7, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9876, file: !3, line: 3489, column: 6)
!9920 = !DILocation(line: 3489, column: 6, scope: !9876)
!9921 = !DILocation(line: 3490, column: 3, scope: !9919)
!9922 = !DILocation(line: 3492, column: 9, scope: !9876)
!9923 = !DILocation(line: 3492, column: 2, scope: !9876)
!9924 = !DILocation(line: 3493, column: 1, scope: !9876)
!9925 = distinct !DISubprogram(name: "BKE_image_sequence_guess_offset", scope: !3, file: !3, line: 3495, type: !9926, scopeLine: 3496, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!9926 = !DISubroutineType(types: !9927)
!9927 = !{!142, !2937}
!9928 = !DILocalVariable(name: "image", arg: 1, scope: !9925, file: !3, line: 3495, type: !2937)
!9929 = !DILocation(line: 3495, column: 44, scope: !9925)
!9930 = !DILocalVariable(name: "numlen", scope: !9925, file: !3, line: 3497, type: !677)
!9931 = !DILocation(line: 3497, column: 17, scope: !9925)
!9932 = !DILocalVariable(name: "head", scope: !9925, file: !3, line: 3498, type: !213)
!9933 = !DILocation(line: 3498, column: 7, scope: !9925)
!9934 = !DILocalVariable(name: "tail", scope: !9925, file: !3, line: 3498, type: !213)
!9935 = !DILocation(line: 3498, column: 23, scope: !9925)
!9936 = !DILocalVariable(name: "num", scope: !9925, file: !3, line: 3499, type: !213)
!9937 = !DILocation(line: 3499, column: 7, scope: !9925)
!9938 = !DILocation(line: 3501, column: 16, scope: !9925)
!9939 = !DILocation(line: 3501, column: 23, scope: !9925)
!9940 = !DILocation(line: 3501, column: 29, scope: !9925)
!9941 = !DILocation(line: 3501, column: 35, scope: !9925)
!9942 = !DILocation(line: 3501, column: 2, scope: !9925)
!9943 = !DILocation(line: 3502, column: 14, scope: !9925)
!9944 = !DILocation(line: 3502, column: 19, scope: !9925)
!9945 = !DILocation(line: 3502, column: 26, scope: !9925)
!9946 = !DILocation(line: 3502, column: 40, scope: !9925)
!9947 = !DILocation(line: 3502, column: 33, scope: !9925)
!9948 = !DILocation(line: 3502, column: 31, scope: !9925)
!9949 = !DILocation(line: 3502, column: 47, scope: !9925)
!9950 = !DILocation(line: 3502, column: 54, scope: !9925)
!9951 = !DILocation(line: 3502, column: 2, scope: !9925)
!9952 = !DILocation(line: 3504, column: 14, scope: !9925)
!9953 = !DILocation(line: 3504, column: 9, scope: !9925)
!9954 = !DILocation(line: 3504, column: 2, scope: !9925)
!9955 = distinct !DISubprogram(name: "BKE_image_is_dirty", scope: !3, file: !3, line: 3517, type: !5508, scopeLine: 3518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!9956 = !DILocalVariable(name: "image", arg: 1, scope: !9955, file: !3, line: 3517, type: !2937)
!9957 = !DILocation(line: 3517, column: 32, scope: !9955)
!9958 = !DILocalVariable(name: "is_dirty", scope: !9955, file: !3, line: 3519, type: !1231)
!9959 = !DILocation(line: 3519, column: 7, scope: !9955)
!9960 = !DILocation(line: 3521, column: 2, scope: !9955)
!9961 = !DILocation(line: 3522, column: 6, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9955, file: !3, line: 3522, column: 6)
!9963 = !DILocation(line: 3522, column: 13, scope: !9962)
!9964 = !DILocation(line: 3522, column: 19, scope: !9962)
!9965 = !DILocation(line: 3522, column: 6, scope: !9955)
!9966 = !DILocalVariable(name: "iter", scope: !9967, file: !3, line: 3523, type: !4401)
!9967 = distinct !DILexicalBlock(scope: !9962, file: !3, line: 3522, column: 28)
!9968 = !DILocation(line: 3523, column: 26, scope: !9967)
!9969 = !DILocation(line: 3523, column: 56, scope: !9967)
!9970 = !DILocation(line: 3523, column: 63, scope: !9967)
!9971 = !DILocation(line: 3523, column: 33, scope: !9967)
!9972 = !DILocation(line: 3525, column: 3, scope: !9967)
!9973 = !DILocation(line: 3525, column: 35, scope: !9967)
!9974 = !DILocation(line: 3525, column: 11, scope: !9967)
!9975 = !DILocation(line: 3525, column: 10, scope: !9967)
!9976 = !DILocalVariable(name: "ibuf", scope: !9977, file: !3, line: 3526, type: !2997)
!9977 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 3525, column: 42)
!9978 = !DILocation(line: 3526, column: 11, scope: !9977)
!9979 = !DILocation(line: 3526, column: 46, scope: !9977)
!9980 = !DILocation(line: 3526, column: 18, scope: !9977)
!9981 = !DILocation(line: 3527, column: 8, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9977, file: !3, line: 3527, column: 8)
!9983 = !DILocation(line: 3527, column: 14, scope: !9982)
!9984 = !DILocation(line: 3527, column: 24, scope: !9982)
!9985 = !DILocation(line: 3527, column: 8, scope: !9977)
!9986 = !DILocation(line: 3528, column: 14, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9982, file: !3, line: 3527, column: 42)
!9988 = !DILocation(line: 3529, column: 5, scope: !9987)
!9989 = !DILocation(line: 3531, column: 28, scope: !9977)
!9990 = !DILocation(line: 3531, column: 4, scope: !9977)
!9991 = distinct !{!9991, !9972, !9992}
!9992 = !DILocation(line: 3532, column: 3, scope: !9967)
!9993 = !DILocation(line: 3533, column: 27, scope: !9967)
!9994 = !DILocation(line: 3533, column: 3, scope: !9967)
!9995 = !DILocation(line: 3534, column: 2, scope: !9967)
!9996 = !DILocation(line: 3535, column: 2, scope: !9955)
!9997 = !DILocation(line: 3537, column: 9, scope: !9955)
!9998 = !DILocation(line: 3537, column: 2, scope: !9955)
!9999 = distinct !DISubprogram(name: "BKE_image_file_format_set", scope: !3, file: !3, line: 3540, type: !2990, scopeLine: 3541, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!10000 = !DILocalVariable(name: "image", arg: 1, scope: !9999, file: !3, line: 3540, type: !2937)
!10001 = !DILocation(line: 3540, column: 39, scope: !9999)
!10002 = !DILocalVariable(name: "ftype", arg: 2, scope: !9999, file: !3, line: 3540, type: !142)
!10003 = !DILocation(line: 3540, column: 50, scope: !9999)
!10004 = !DILocation(line: 3550, column: 2, scope: !9999)
!10005 = !DILocation(line: 3551, column: 6, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !9999, file: !3, line: 3551, column: 6)
!10007 = !DILocation(line: 3551, column: 13, scope: !10006)
!10008 = !DILocation(line: 3551, column: 19, scope: !10006)
!10009 = !DILocation(line: 3551, column: 6, scope: !9999)
!10010 = !DILocalVariable(name: "iter", scope: !10011, file: !3, line: 3552, type: !4401)
!10011 = distinct !DILexicalBlock(scope: !10006, file: !3, line: 3551, column: 28)
!10012 = !DILocation(line: 3552, column: 26, scope: !10011)
!10013 = !DILocation(line: 3552, column: 56, scope: !10011)
!10014 = !DILocation(line: 3552, column: 63, scope: !10011)
!10015 = !DILocation(line: 3552, column: 33, scope: !10011)
!10016 = !DILocation(line: 3554, column: 3, scope: !10011)
!10017 = !DILocation(line: 3554, column: 35, scope: !10011)
!10018 = !DILocation(line: 3554, column: 11, scope: !10011)
!10019 = !DILocation(line: 3554, column: 10, scope: !10011)
!10020 = !DILocalVariable(name: "ibuf", scope: !10021, file: !3, line: 3555, type: !2997)
!10021 = distinct !DILexicalBlock(scope: !10011, file: !3, line: 3554, column: 42)
!10022 = !DILocation(line: 3555, column: 11, scope: !10021)
!10023 = !DILocation(line: 3555, column: 46, scope: !10021)
!10024 = !DILocation(line: 3555, column: 18, scope: !10021)
!10025 = !DILocation(line: 3556, column: 18, scope: !10021)
!10026 = !DILocation(line: 3556, column: 4, scope: !10021)
!10027 = !DILocation(line: 3556, column: 10, scope: !10021)
!10028 = !DILocation(line: 3556, column: 16, scope: !10021)
!10029 = !DILocation(line: 3557, column: 28, scope: !10021)
!10030 = !DILocation(line: 3557, column: 4, scope: !10021)
!10031 = distinct !{!10031, !10016, !10032}
!10032 = !DILocation(line: 3558, column: 3, scope: !10011)
!10033 = !DILocation(line: 3559, column: 27, scope: !10011)
!10034 = !DILocation(line: 3559, column: 3, scope: !10011)
!10035 = !DILocation(line: 3560, column: 2, scope: !10011)
!10036 = !DILocation(line: 3561, column: 2, scope: !9999)
!10037 = !DILocation(line: 3562, column: 1, scope: !9999)
!10038 = distinct !DISubprogram(name: "BKE_image_has_loaded_ibuf", scope: !3, file: !3, line: 3564, type: !5508, scopeLine: 3565, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!10039 = !DILocalVariable(name: "image", arg: 1, scope: !10038, file: !3, line: 3564, type: !2937)
!10040 = !DILocation(line: 3564, column: 39, scope: !10038)
!10041 = !DILocalVariable(name: "has_loaded_ibuf", scope: !10038, file: !3, line: 3566, type: !1231)
!10042 = !DILocation(line: 3566, column: 7, scope: !10038)
!10043 = !DILocation(line: 3568, column: 2, scope: !10038)
!10044 = !DILocation(line: 3569, column: 6, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10038, file: !3, line: 3569, column: 6)
!10046 = !DILocation(line: 3569, column: 13, scope: !10045)
!10047 = !DILocation(line: 3569, column: 19, scope: !10045)
!10048 = !DILocation(line: 3569, column: 6, scope: !10038)
!10049 = !DILocalVariable(name: "iter", scope: !10050, file: !3, line: 3570, type: !4401)
!10050 = distinct !DILexicalBlock(scope: !10045, file: !3, line: 3569, column: 28)
!10051 = !DILocation(line: 3570, column: 26, scope: !10050)
!10052 = !DILocation(line: 3570, column: 56, scope: !10050)
!10053 = !DILocation(line: 3570, column: 63, scope: !10050)
!10054 = !DILocation(line: 3570, column: 33, scope: !10050)
!10055 = !DILocation(line: 3572, column: 3, scope: !10050)
!10056 = !DILocation(line: 3572, column: 35, scope: !10050)
!10057 = !DILocation(line: 3572, column: 11, scope: !10050)
!10058 = !DILocation(line: 3572, column: 10, scope: !10050)
!10059 = !DILocation(line: 3573, column: 20, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10050, file: !3, line: 3572, column: 42)
!10061 = !DILocation(line: 3574, column: 4, scope: !10060)
!10062 = !DILocation(line: 3576, column: 27, scope: !10050)
!10063 = !DILocation(line: 3576, column: 3, scope: !10050)
!10064 = !DILocation(line: 3577, column: 2, scope: !10050)
!10065 = !DILocation(line: 3578, column: 2, scope: !10038)
!10066 = !DILocation(line: 3580, column: 9, scope: !10038)
!10067 = !DILocation(line: 3580, column: 2, scope: !10038)
!10068 = distinct !DISubprogram(name: "BKE_image_get_ibuf_with_name", scope: !3, file: !3, line: 3586, type: !10069, scopeLine: 3587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!10069 = !DISubroutineType(types: !10070)
!10070 = !{!1222, !2937, !972}
!10071 = !DILocalVariable(name: "image", arg: 1, scope: !10068, file: !3, line: 3586, type: !2937)
!10072 = !DILocation(line: 3586, column: 44, scope: !10068)
!10073 = !DILocalVariable(name: "name", arg: 2, scope: !10068, file: !3, line: 3586, type: !972)
!10074 = !DILocation(line: 3586, column: 63, scope: !10068)
!10075 = !DILocalVariable(name: "ibuf", scope: !10068, file: !3, line: 3588, type: !2997)
!10076 = !DILocation(line: 3588, column: 9, scope: !10068)
!10077 = !DILocation(line: 3590, column: 2, scope: !10068)
!10078 = !DILocation(line: 3591, column: 6, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10068, file: !3, line: 3591, column: 6)
!10080 = !DILocation(line: 3591, column: 13, scope: !10079)
!10081 = !DILocation(line: 3591, column: 19, scope: !10079)
!10082 = !DILocation(line: 3591, column: 6, scope: !10068)
!10083 = !DILocalVariable(name: "iter", scope: !10084, file: !3, line: 3592, type: !4401)
!10084 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 3591, column: 28)
!10085 = !DILocation(line: 3592, column: 26, scope: !10084)
!10086 = !DILocation(line: 3592, column: 56, scope: !10084)
!10087 = !DILocation(line: 3592, column: 63, scope: !10084)
!10088 = !DILocation(line: 3592, column: 33, scope: !10084)
!10089 = !DILocation(line: 3594, column: 3, scope: !10084)
!10090 = !DILocation(line: 3594, column: 35, scope: !10084)
!10091 = !DILocation(line: 3594, column: 11, scope: !10084)
!10092 = !DILocation(line: 3594, column: 10, scope: !10084)
!10093 = !DILocalVariable(name: "current_ibuf", scope: !10094, file: !3, line: 3595, type: !2997)
!10094 = distinct !DILexicalBlock(scope: !10084, file: !3, line: 3594, column: 42)
!10095 = !DILocation(line: 3595, column: 11, scope: !10094)
!10096 = !DILocation(line: 3595, column: 54, scope: !10094)
!10097 = !DILocation(line: 3595, column: 26, scope: !10094)
!10098 = !DILocation(line: 3596, column: 8, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10094, file: !3, line: 3596, column: 8)
!10100 = !DILocation(line: 3596, column: 8, scope: !10094)
!10101 = !DILocation(line: 3597, column: 12, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10099, file: !3, line: 3596, column: 41)
!10103 = !DILocation(line: 3597, column: 10, scope: !10102)
!10104 = !DILocation(line: 3598, column: 18, scope: !10102)
!10105 = !DILocation(line: 3598, column: 5, scope: !10102)
!10106 = !DILocation(line: 3599, column: 5, scope: !10102)
!10107 = !DILocation(line: 3601, column: 28, scope: !10094)
!10108 = !DILocation(line: 3601, column: 4, scope: !10094)
!10109 = distinct !{!10109, !10089, !10110}
!10110 = !DILocation(line: 3602, column: 3, scope: !10084)
!10111 = !DILocation(line: 3603, column: 27, scope: !10084)
!10112 = !DILocation(line: 3603, column: 3, scope: !10084)
!10113 = !DILocation(line: 3604, column: 2, scope: !10084)
!10114 = !DILocation(line: 3605, column: 2, scope: !10068)
!10115 = !DILocation(line: 3607, column: 9, scope: !10068)
!10116 = !DILocation(line: 3607, column: 2, scope: !10068)
!10117 = distinct !DISubprogram(name: "BKE_image_get_first_ibuf", scope: !3, file: !3, line: 3618, type: !10118, scopeLine: 3619, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!10118 = !DISubroutineType(types: !10119)
!10119 = !{!1222, !2937}
!10120 = !DILocalVariable(name: "image", arg: 1, scope: !10117, file: !3, line: 3618, type: !2937)
!10121 = !DILocation(line: 3618, column: 40, scope: !10117)
!10122 = !DILocalVariable(name: "ibuf", scope: !10117, file: !3, line: 3620, type: !2997)
!10123 = !DILocation(line: 3620, column: 9, scope: !10117)
!10124 = !DILocation(line: 3622, column: 2, scope: !10117)
!10125 = !DILocation(line: 3623, column: 6, scope: !10126)
!10126 = distinct !DILexicalBlock(scope: !10117, file: !3, line: 3623, column: 6)
!10127 = !DILocation(line: 3623, column: 13, scope: !10126)
!10128 = !DILocation(line: 3623, column: 19, scope: !10126)
!10129 = !DILocation(line: 3623, column: 6, scope: !10117)
!10130 = !DILocalVariable(name: "iter", scope: !10131, file: !3, line: 3624, type: !4401)
!10131 = distinct !DILexicalBlock(scope: !10126, file: !3, line: 3623, column: 28)
!10132 = !DILocation(line: 3624, column: 26, scope: !10131)
!10133 = !DILocation(line: 3624, column: 56, scope: !10131)
!10134 = !DILocation(line: 3624, column: 63, scope: !10131)
!10135 = !DILocation(line: 3624, column: 33, scope: !10131)
!10136 = !DILocation(line: 3626, column: 3, scope: !10131)
!10137 = !DILocation(line: 3626, column: 35, scope: !10131)
!10138 = !DILocation(line: 3626, column: 11, scope: !10131)
!10139 = !DILocation(line: 3626, column: 10, scope: !10131)
!10140 = !DILocation(line: 3627, column: 39, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10131, file: !3, line: 3626, column: 42)
!10142 = !DILocation(line: 3627, column: 11, scope: !10141)
!10143 = !DILocation(line: 3627, column: 9, scope: !10141)
!10144 = !DILocation(line: 3628, column: 17, scope: !10141)
!10145 = !DILocation(line: 3628, column: 4, scope: !10141)
!10146 = !DILocation(line: 3629, column: 4, scope: !10141)
!10147 = !DILocation(line: 3631, column: 27, scope: !10131)
!10148 = !DILocation(line: 3631, column: 3, scope: !10131)
!10149 = !DILocation(line: 3632, column: 2, scope: !10131)
!10150 = !DILocation(line: 3633, column: 2, scope: !10117)
!10151 = !DILocation(line: 3635, column: 9, scope: !10117)
!10152 = !DILocation(line: 3635, column: 2, scope: !10117)
!10153 = distinct !DISubprogram(name: "imagecache_hashhash", scope: !3, file: !3, line: 118, type: !10154, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!10154 = !DISubroutineType(types: !10155)
!10155 = !{!7, !10156}
!10156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10157, size: 64)
!10157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!10158 = !DILocalVariable(name: "key_v", arg: 1, scope: !10153, file: !3, line: 118, type: !10156)
!10159 = !DILocation(line: 118, column: 53, scope: !10153)
!10160 = !DILocalVariable(name: "key", scope: !10153, file: !3, line: 120, type: !10161)
!10161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10162, size: 64)
!10162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2940)
!10163 = !DILocation(line: 120, column: 23, scope: !10153)
!10164 = !DILocation(line: 120, column: 47, scope: !10153)
!10165 = !DILocation(line: 120, column: 29, scope: !10153)
!10166 = !DILocation(line: 121, column: 9, scope: !10153)
!10167 = !DILocation(line: 121, column: 14, scope: !10153)
!10168 = !DILocation(line: 121, column: 2, scope: !10153)
!10169 = distinct !DISubprogram(name: "imagecache_hashcmp", scope: !3, file: !3, line: 124, type: !10170, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!10170 = !DISubroutineType(types: !10171)
!10171 = !{!1231, !10156, !10156}
!10172 = !DILocalVariable(name: "a_v", arg: 1, scope: !10169, file: !3, line: 124, type: !10156)
!10173 = !DILocation(line: 124, column: 44, scope: !10169)
!10174 = !DILocalVariable(name: "b_v", arg: 2, scope: !10169, file: !3, line: 124, type: !10156)
!10175 = !DILocation(line: 124, column: 61, scope: !10169)
!10176 = !DILocalVariable(name: "a", scope: !10169, file: !3, line: 126, type: !10161)
!10177 = !DILocation(line: 126, column: 23, scope: !10169)
!10178 = !DILocation(line: 126, column: 45, scope: !10169)
!10179 = !DILocation(line: 126, column: 27, scope: !10169)
!10180 = !DILocalVariable(name: "b", scope: !10169, file: !3, line: 127, type: !10161)
!10181 = !DILocation(line: 127, column: 23, scope: !10169)
!10182 = !DILocation(line: 127, column: 45, scope: !10169)
!10183 = !DILocation(line: 127, column: 27, scope: !10169)
!10184 = !DILocation(line: 129, column: 10, scope: !10169)
!10185 = !DILocation(line: 129, column: 13, scope: !10169)
!10186 = !DILocation(line: 129, column: 22, scope: !10169)
!10187 = !DILocation(line: 129, column: 25, scope: !10169)
!10188 = !DILocation(line: 129, column: 19, scope: !10169)
!10189 = !DILocation(line: 129, column: 9, scope: !10169)
!10190 = !DILocation(line: 129, column: 2, scope: !10169)
!10191 = distinct !DISubprogram(name: "imagecache_keydata", scope: !3, file: !3, line: 132, type: !10192, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!10192 = !DISubroutineType(types: !10193)
!10193 = !{null, !177, !291, !291, !291}
!10194 = !DILocalVariable(name: "userkey", arg: 1, scope: !10191, file: !3, line: 132, type: !177)
!10195 = !DILocation(line: 132, column: 38, scope: !10191)
!10196 = !DILocalVariable(name: "framenr", arg: 2, scope: !10191, file: !3, line: 132, type: !291)
!10197 = !DILocation(line: 132, column: 52, scope: !10191)
!10198 = !DILocalVariable(name: "proxy", arg: 3, scope: !10191, file: !3, line: 132, type: !291)
!10199 = !DILocation(line: 132, column: 66, scope: !10191)
!10200 = !DILocalVariable(name: "render_flags", arg: 4, scope: !10191, file: !3, line: 132, type: !291)
!10201 = !DILocation(line: 132, column: 78, scope: !10191)
!10202 = !DILocalVariable(name: "key", scope: !10191, file: !3, line: 134, type: !2939)
!10203 = !DILocation(line: 134, column: 17, scope: !10191)
!10204 = !DILocation(line: 134, column: 40, scope: !10191)
!10205 = !DILocation(line: 134, column: 23, scope: !10191)
!10206 = !DILocation(line: 136, column: 13, scope: !10191)
!10207 = !DILocation(line: 136, column: 3, scope: !10191)
!10208 = !DILocation(line: 136, column: 11, scope: !10191)
!10209 = !DILocation(line: 137, column: 3, scope: !10191)
!10210 = !DILocation(line: 137, column: 9, scope: !10191)
!10211 = !DILocation(line: 138, column: 3, scope: !10191)
!10212 = !DILocation(line: 138, column: 16, scope: !10191)
!10213 = !DILocation(line: 139, column: 1, scope: !10191)
!10214 = distinct !DISubprogram(name: "imagecache_get", scope: !3, file: !3, line: 159, type: !10215, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!10215 = !DISubroutineType(types: !10216)
!10216 = !{!1222, !2937, !142}
!10217 = !DILocalVariable(name: "image", arg: 1, scope: !10214, file: !3, line: 159, type: !2937)
!10218 = !DILocation(line: 159, column: 44, scope: !10214)
!10219 = !DILocalVariable(name: "index", arg: 2, scope: !10214, file: !3, line: 159, type: !142)
!10220 = !DILocation(line: 159, column: 55, scope: !10214)
!10221 = !DILocation(line: 161, column: 6, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10214, file: !3, line: 161, column: 6)
!10223 = !DILocation(line: 161, column: 13, scope: !10222)
!10224 = !DILocation(line: 161, column: 6, scope: !10214)
!10225 = !DILocalVariable(name: "key", scope: !10226, file: !3, line: 162, type: !2940)
!10226 = distinct !DILexicalBlock(scope: !10222, file: !3, line: 161, column: 20)
!10227 = !DILocation(line: 162, column: 17, scope: !10226)
!10228 = !DILocation(line: 163, column: 15, scope: !10226)
!10229 = !DILocation(line: 163, column: 7, scope: !10226)
!10230 = !DILocation(line: 163, column: 13, scope: !10226)
!10231 = !DILocation(line: 164, column: 29, scope: !10226)
!10232 = !DILocation(line: 164, column: 36, scope: !10226)
!10233 = !DILocation(line: 164, column: 43, scope: !10226)
!10234 = !DILocation(line: 164, column: 10, scope: !10226)
!10235 = !DILocation(line: 164, column: 3, scope: !10226)
!10236 = !DILocation(line: 167, column: 2, scope: !10214)
!10237 = !DILocation(line: 168, column: 1, scope: !10214)
!10238 = distinct !DISubprogram(name: "image_load_movie_file", scope: !3, file: !3, line: 2572, type: !10239, scopeLine: 2573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!10239 = !DISubroutineType(types: !10240)
!10240 = !{!2997, !2937, !755, !142}
!10241 = !DILocalVariable(name: "ima", arg: 1, scope: !10238, file: !3, line: 2572, type: !2937)
!10242 = !DILocation(line: 2572, column: 44, scope: !10238)
!10243 = !DILocalVariable(name: "iuser", arg: 2, scope: !10238, file: !3, line: 2572, type: !755)
!10244 = !DILocation(line: 2572, column: 60, scope: !10238)
!10245 = !DILocalVariable(name: "frame", arg: 3, scope: !10238, file: !3, line: 2572, type: !142)
!10246 = !DILocation(line: 2572, column: 71, scope: !10238)
!10247 = !DILocalVariable(name: "ibuf", scope: !10238, file: !3, line: 2574, type: !1222)
!10248 = !DILocation(line: 2574, column: 16, scope: !10238)
!10249 = !DILocation(line: 2576, column: 19, scope: !10238)
!10250 = !DILocation(line: 2576, column: 2, scope: !10238)
!10251 = !DILocation(line: 2576, column: 7, scope: !10238)
!10252 = !DILocation(line: 2576, column: 17, scope: !10238)
!10253 = !DILocation(line: 2578, column: 6, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10238, file: !3, line: 2578, column: 6)
!10255 = !DILocation(line: 2578, column: 11, scope: !10254)
!10256 = !DILocation(line: 2578, column: 16, scope: !10254)
!10257 = !DILocation(line: 2578, column: 6, scope: !10238)
!10258 = !DILocalVariable(name: "str", scope: !10259, file: !3, line: 2579, type: !213)
!10259 = distinct !DILexicalBlock(scope: !10254, file: !3, line: 2578, column: 25)
!10260 = !DILocation(line: 2579, column: 8, scope: !10259)
!10261 = !DILocation(line: 2581, column: 28, scope: !10259)
!10262 = !DILocation(line: 2581, column: 35, scope: !10259)
!10263 = !DILocation(line: 2581, column: 40, scope: !10259)
!10264 = !DILocation(line: 2581, column: 3, scope: !10259)
!10265 = !DILocation(line: 2584, column: 24, scope: !10259)
!10266 = !DILocation(line: 2584, column: 41, scope: !10259)
!10267 = !DILocation(line: 2584, column: 46, scope: !10259)
!10268 = !DILocation(line: 2584, column: 66, scope: !10259)
!10269 = !DILocation(line: 2584, column: 15, scope: !10259)
!10270 = !DILocation(line: 2584, column: 3, scope: !10259)
!10271 = !DILocation(line: 2584, column: 8, scope: !10259)
!10272 = !DILocation(line: 2584, column: 13, scope: !10259)
!10273 = !DILocation(line: 2587, column: 7, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10259, file: !3, line: 2587, column: 7)
!10275 = !DILocation(line: 2587, column: 12, scope: !10274)
!10276 = !DILocation(line: 2587, column: 17, scope: !10274)
!10277 = !DILocation(line: 2587, column: 20, scope: !10274)
!10278 = !DILocation(line: 2587, column: 26, scope: !10274)
!10279 = !DILocation(line: 2587, column: 29, scope: !10274)
!10280 = !DILocation(line: 2587, column: 36, scope: !10274)
!10281 = !DILocation(line: 2587, column: 43, scope: !10274)
!10282 = !DILocation(line: 2587, column: 7, scope: !10259)
!10283 = !DILocation(line: 2588, column: 42, scope: !10274)
!10284 = !DILocation(line: 2588, column: 47, scope: !10274)
!10285 = !DILocation(line: 2588, column: 20, scope: !10274)
!10286 = !DILocation(line: 2588, column: 4, scope: !10274)
!10287 = !DILocation(line: 2588, column: 11, scope: !10274)
!10288 = !DILocation(line: 2588, column: 18, scope: !10274)
!10289 = !DILocation(line: 2590, column: 2, scope: !10259)
!10290 = !DILocation(line: 2592, column: 6, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10238, file: !3, line: 2592, column: 6)
!10292 = !DILocation(line: 2592, column: 11, scope: !10291)
!10293 = !DILocation(line: 2592, column: 6, scope: !10238)
!10294 = !DILocalVariable(name: "dur", scope: !10295, file: !3, line: 2593, type: !142)
!10295 = distinct !DILexicalBlock(scope: !10291, file: !3, line: 2592, column: 17)
!10296 = !DILocation(line: 2593, column: 7, scope: !10295)
!10297 = !DILocation(line: 2593, column: 35, scope: !10295)
!10298 = !DILocation(line: 2593, column: 40, scope: !10295)
!10299 = !DILocation(line: 2593, column: 13, scope: !10295)
!10300 = !DILocalVariable(name: "fra", scope: !10295, file: !3, line: 2595, type: !142)
!10301 = !DILocation(line: 2595, column: 7, scope: !10295)
!10302 = !DILocation(line: 2595, column: 13, scope: !10295)
!10303 = !DILocation(line: 2595, column: 19, scope: !10295)
!10304 = !DILocation(line: 2597, column: 7, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10295, file: !3, line: 2597, column: 7)
!10306 = !DILocation(line: 2597, column: 11, scope: !10305)
!10307 = !DILocation(line: 2597, column: 7, scope: !10295)
!10308 = !DILocation(line: 2597, column: 20, scope: !10305)
!10309 = !DILocation(line: 2597, column: 16, scope: !10305)
!10310 = !DILocation(line: 2598, column: 7, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10295, file: !3, line: 2598, column: 7)
!10312 = !DILocation(line: 2598, column: 14, scope: !10311)
!10313 = !DILocation(line: 2598, column: 18, scope: !10311)
!10314 = !DILocation(line: 2598, column: 11, scope: !10311)
!10315 = !DILocation(line: 2598, column: 7, scope: !10295)
!10316 = !DILocation(line: 2598, column: 30, scope: !10311)
!10317 = !DILocation(line: 2598, column: 34, scope: !10311)
!10318 = !DILocation(line: 2598, column: 28, scope: !10311)
!10319 = !DILocation(line: 2598, column: 24, scope: !10311)
!10320 = !DILocation(line: 2600, column: 25, scope: !10295)
!10321 = !DILocation(line: 2600, column: 30, scope: !10295)
!10322 = !DILocation(line: 2600, column: 36, scope: !10295)
!10323 = !DILocation(line: 2600, column: 7, scope: !10295)
!10324 = !DILocation(line: 2599, column: 10, scope: !10295)
!10325 = !DILocation(line: 2599, column: 8, scope: !10295)
!10326 = !DILocation(line: 2604, column: 7, scope: !10327)
!10327 = distinct !DILexicalBlock(scope: !10295, file: !3, line: 2604, column: 7)
!10328 = !DILocation(line: 2604, column: 7, scope: !10295)
!10329 = !DILocation(line: 2605, column: 32, scope: !10330)
!10330 = distinct !DILexicalBlock(scope: !10327, file: !3, line: 2604, column: 13)
!10331 = !DILocation(line: 2605, column: 37, scope: !10330)
!10332 = !DILocation(line: 2605, column: 4, scope: !10330)
!10333 = !DILocation(line: 2606, column: 22, scope: !10330)
!10334 = !DILocation(line: 2606, column: 27, scope: !10330)
!10335 = !DILocation(line: 2606, column: 36, scope: !10330)
!10336 = !DILocation(line: 2606, column: 4, scope: !10330)
!10337 = !DILocation(line: 2607, column: 3, scope: !10330)
!10338 = !DILocation(line: 2609, column: 4, scope: !10327)
!10339 = !DILocation(line: 2609, column: 9, scope: !10327)
!10340 = !DILocation(line: 2609, column: 12, scope: !10327)
!10341 = !DILocation(line: 2610, column: 2, scope: !10295)
!10342 = !DILocation(line: 2612, column: 3, scope: !10291)
!10343 = !DILocation(line: 2612, column: 8, scope: !10291)
!10344 = !DILocation(line: 2612, column: 11, scope: !10291)
!10345 = !DILocation(line: 2614, column: 6, scope: !10346)
!10346 = distinct !DILexicalBlock(scope: !10238, file: !3, line: 2614, column: 6)
!10347 = !DILocation(line: 2614, column: 6, scope: !10238)
!10348 = !DILocation(line: 2615, column: 15, scope: !10346)
!10349 = !DILocation(line: 2615, column: 20, scope: !10346)
!10350 = !DILocation(line: 2615, column: 3, scope: !10346)
!10351 = !DILocation(line: 2615, column: 10, scope: !10346)
!10352 = !DILocation(line: 2615, column: 13, scope: !10346)
!10353 = !DILocation(line: 2617, column: 9, scope: !10238)
!10354 = !DILocation(line: 2617, column: 2, scope: !10238)
!10355 = distinct !DISubprogram(name: "image_load_sequence_file", scope: !3, file: !3, line: 2464, type: !10239, scopeLine: 2465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!10356 = !DILocalVariable(name: "ima", arg: 1, scope: !10355, file: !3, line: 2464, type: !2937)
!10357 = !DILocation(line: 2464, column: 47, scope: !10355)
!10358 = !DILocalVariable(name: "iuser", arg: 2, scope: !10355, file: !3, line: 2464, type: !755)
!10359 = !DILocation(line: 2464, column: 63, scope: !10355)
!10360 = !DILocalVariable(name: "frame", arg: 3, scope: !10355, file: !3, line: 2464, type: !142)
!10361 = !DILocation(line: 2464, column: 74, scope: !10355)
!10362 = !DILocalVariable(name: "ibuf", scope: !10355, file: !3, line: 2466, type: !1222)
!10363 = !DILocation(line: 2466, column: 16, scope: !10355)
!10364 = !DILocalVariable(name: "name", scope: !10355, file: !3, line: 2467, type: !213)
!10365 = !DILocation(line: 2467, column: 7, scope: !10355)
!10366 = !DILocalVariable(name: "flag", scope: !10355, file: !3, line: 2468, type: !142)
!10367 = !DILocation(line: 2468, column: 6, scope: !10355)
!10368 = !DILocation(line: 2471, column: 6, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !10355, file: !3, line: 2471, column: 6)
!10370 = !DILocation(line: 2471, column: 11, scope: !10369)
!10371 = !DILocation(line: 2471, column: 24, scope: !10369)
!10372 = !DILocation(line: 2471, column: 21, scope: !10369)
!10373 = !DILocation(line: 2471, column: 6, scope: !10355)
!10374 = !DILocation(line: 2472, column: 3, scope: !10369)
!10375 = !DILocation(line: 2472, column: 8, scope: !10369)
!10376 = !DILocation(line: 2472, column: 18, scope: !10369)
!10377 = !DILocation(line: 2474, column: 19, scope: !10355)
!10378 = !DILocation(line: 2474, column: 2, scope: !10355)
!10379 = !DILocation(line: 2474, column: 7, scope: !10355)
!10380 = !DILocation(line: 2474, column: 17, scope: !10355)
!10381 = !DILocation(line: 2475, column: 27, scope: !10355)
!10382 = !DILocation(line: 2475, column: 34, scope: !10355)
!10383 = !DILocation(line: 2475, column: 39, scope: !10355)
!10384 = !DILocation(line: 2475, column: 2, scope: !10355)
!10385 = !DILocation(line: 2477, column: 7, scope: !10355)
!10386 = !DILocation(line: 2478, column: 38, scope: !10355)
!10387 = !DILocation(line: 2478, column: 10, scope: !10355)
!10388 = !DILocation(line: 2478, column: 7, scope: !10355)
!10389 = !DILocation(line: 2481, column: 25, scope: !10355)
!10390 = !DILocation(line: 2481, column: 31, scope: !10355)
!10391 = !DILocation(line: 2481, column: 37, scope: !10355)
!10392 = !DILocation(line: 2481, column: 42, scope: !10355)
!10393 = !DILocation(line: 2481, column: 62, scope: !10355)
!10394 = !DILocation(line: 2481, column: 9, scope: !10355)
!10395 = !DILocation(line: 2481, column: 7, scope: !10355)
!10396 = !DILocation(line: 2492, column: 6, scope: !10397)
!10397 = distinct !DILexicalBlock(scope: !10355, file: !3, line: 2492, column: 6)
!10398 = !DILocation(line: 2492, column: 6, scope: !10355)
!10399 = !DILocation(line: 2506, column: 31, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10397, file: !3, line: 2492, column: 12)
!10401 = !DILocation(line: 2506, column: 36, scope: !10400)
!10402 = !DILocation(line: 2506, column: 3, scope: !10400)
!10403 = !DILocation(line: 2507, column: 21, scope: !10400)
!10404 = !DILocation(line: 2507, column: 26, scope: !10400)
!10405 = !DILocation(line: 2507, column: 35, scope: !10400)
!10406 = !DILocation(line: 2507, column: 3, scope: !10400)
!10407 = !DILocation(line: 2509, column: 2, scope: !10400)
!10408 = !DILocation(line: 2511, column: 3, scope: !10397)
!10409 = !DILocation(line: 2511, column: 8, scope: !10397)
!10410 = !DILocation(line: 2511, column: 11, scope: !10397)
!10411 = !DILocation(line: 2513, column: 6, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10355, file: !3, line: 2513, column: 6)
!10413 = !DILocation(line: 2513, column: 6, scope: !10355)
!10414 = !DILocation(line: 2514, column: 15, scope: !10412)
!10415 = !DILocation(line: 2514, column: 20, scope: !10412)
!10416 = !DILocation(line: 2514, column: 3, scope: !10412)
!10417 = !DILocation(line: 2514, column: 10, scope: !10412)
!10418 = !DILocation(line: 2514, column: 13, scope: !10412)
!10419 = !DILocation(line: 2516, column: 9, scope: !10355)
!10420 = !DILocation(line: 2516, column: 2, scope: !10355)
!10421 = distinct !DISubprogram(name: "image_load_sequence_multilayer", scope: !3, file: !3, line: 2519, type: !10239, scopeLine: 2520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!10422 = !DILocalVariable(name: "ima", arg: 1, scope: !10421, file: !3, line: 2519, type: !2937)
!10423 = !DILocation(line: 2519, column: 53, scope: !10421)
!10424 = !DILocalVariable(name: "iuser", arg: 2, scope: !10421, file: !3, line: 2519, type: !755)
!10425 = !DILocation(line: 2519, column: 69, scope: !10421)
!10426 = !DILocalVariable(name: "frame", arg: 3, scope: !10421, file: !3, line: 2519, type: !142)
!10427 = !DILocation(line: 2519, column: 80, scope: !10421)
!10428 = !DILocalVariable(name: "ibuf", scope: !10421, file: !3, line: 2521, type: !1222)
!10429 = !DILocation(line: 2521, column: 16, scope: !10421)
!10430 = !DILocation(line: 2526, column: 6, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10421, file: !3, line: 2526, column: 6)
!10432 = !DILocation(line: 2526, column: 11, scope: !10431)
!10433 = !DILocation(line: 2526, column: 14, scope: !10431)
!10434 = !DILocation(line: 2526, column: 22, scope: !10431)
!10435 = !DILocation(line: 2526, column: 25, scope: !10431)
!10436 = !DILocation(line: 2526, column: 34, scope: !10431)
!10437 = !DILocation(line: 2526, column: 39, scope: !10431)
!10438 = !DILocation(line: 2526, column: 43, scope: !10431)
!10439 = !DILocation(line: 2526, column: 31, scope: !10431)
!10440 = !DILocation(line: 2526, column: 6, scope: !10421)
!10441 = !DILocation(line: 2527, column: 7, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10443, file: !3, line: 2527, column: 7)
!10443 = distinct !DILexicalBlock(scope: !10431, file: !3, line: 2526, column: 52)
!10444 = !DILocation(line: 2527, column: 12, scope: !10442)
!10445 = !DILocation(line: 2527, column: 7, scope: !10443)
!10446 = !DILocation(line: 2532, column: 29, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10442, file: !3, line: 2527, column: 16)
!10448 = !DILocation(line: 2532, column: 4, scope: !10447)
!10449 = !DILocation(line: 2533, column: 24, scope: !10447)
!10450 = !DILocation(line: 2533, column: 29, scope: !10447)
!10451 = !DILocation(line: 2533, column: 4, scope: !10447)
!10452 = !DILocation(line: 2534, column: 4, scope: !10447)
!10453 = !DILocation(line: 2534, column: 9, scope: !10447)
!10454 = !DILocation(line: 2534, column: 12, scope: !10447)
!10455 = !DILocation(line: 2535, column: 3, scope: !10447)
!10456 = !DILocation(line: 2537, column: 35, scope: !10443)
!10457 = !DILocation(line: 2537, column: 40, scope: !10443)
!10458 = !DILocation(line: 2537, column: 47, scope: !10443)
!10459 = !DILocation(line: 2537, column: 10, scope: !10443)
!10460 = !DILocation(line: 2537, column: 8, scope: !10443)
!10461 = !DILocation(line: 2539, column: 7, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10443, file: !3, line: 2539, column: 7)
!10463 = !DILocation(line: 2539, column: 7, scope: !10443)
!10464 = !DILocation(line: 2540, column: 4, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10462, file: !3, line: 2539, column: 13)
!10466 = !DILocation(line: 2540, column: 9, scope: !10465)
!10467 = !DILocation(line: 2540, column: 14, scope: !10465)
!10468 = !DILocation(line: 2541, column: 4, scope: !10465)
!10469 = !DILocation(line: 2542, column: 3, scope: !10465)
!10470 = !DILocation(line: 2543, column: 2, scope: !10443)
!10471 = !DILocation(line: 2544, column: 6, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10421, file: !3, line: 2544, column: 6)
!10473 = !DILocation(line: 2544, column: 11, scope: !10472)
!10474 = !DILocation(line: 2544, column: 6, scope: !10421)
!10475 = !DILocalVariable(name: "rpass", scope: !10476, file: !3, line: 2545, type: !8379)
!10476 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 2544, column: 15)
!10477 = !DILocation(line: 2545, column: 15, scope: !10476)
!10478 = !DILocation(line: 2545, column: 50, scope: !10476)
!10479 = !DILocation(line: 2545, column: 55, scope: !10476)
!10480 = !DILocation(line: 2545, column: 59, scope: !10476)
!10481 = !DILocation(line: 2545, column: 23, scope: !10476)
!10482 = !DILocation(line: 2547, column: 7, scope: !10483)
!10483 = distinct !DILexicalBlock(scope: !10476, file: !3, line: 2547, column: 7)
!10484 = !DILocation(line: 2547, column: 7, scope: !10476)
!10485 = !DILocation(line: 2550, column: 26, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10483, file: !3, line: 2547, column: 14)
!10487 = !DILocation(line: 2550, column: 31, scope: !10486)
!10488 = !DILocation(line: 2550, column: 35, scope: !10486)
!10489 = !DILocation(line: 2550, column: 42, scope: !10486)
!10490 = !DILocation(line: 2550, column: 47, scope: !10486)
!10491 = !DILocation(line: 2550, column: 51, scope: !10486)
!10492 = !DILocation(line: 2550, column: 11, scope: !10486)
!10493 = !DILocation(line: 2550, column: 9, scope: !10486)
!10494 = !DILocation(line: 2551, column: 23, scope: !10486)
!10495 = !DILocation(line: 2551, column: 37, scope: !10486)
!10496 = !DILocation(line: 2551, column: 44, scope: !10486)
!10497 = !DILocation(line: 2551, column: 4, scope: !10486)
!10498 = !DILocation(line: 2551, column: 10, scope: !10486)
!10499 = !DILocation(line: 2551, column: 21, scope: !10486)
!10500 = !DILocation(line: 2552, column: 4, scope: !10486)
!10501 = !DILocation(line: 2552, column: 10, scope: !10486)
!10502 = !DILocation(line: 2552, column: 16, scope: !10486)
!10503 = !DILocation(line: 2553, column: 4, scope: !10486)
!10504 = !DILocation(line: 2553, column: 10, scope: !10486)
!10505 = !DILocation(line: 2553, column: 15, scope: !10486)
!10506 = !DILocation(line: 2554, column: 21, scope: !10486)
!10507 = !DILocation(line: 2554, column: 28, scope: !10486)
!10508 = !DILocation(line: 2554, column: 4, scope: !10486)
!10509 = !DILocation(line: 2554, column: 10, scope: !10486)
!10510 = !DILocation(line: 2554, column: 19, scope: !10486)
!10511 = !DILocation(line: 2556, column: 32, scope: !10486)
!10512 = !DILocation(line: 2556, column: 37, scope: !10486)
!10513 = !DILocation(line: 2556, column: 4, scope: !10486)
!10514 = !DILocation(line: 2557, column: 22, scope: !10486)
!10515 = !DILocation(line: 2557, column: 27, scope: !10486)
!10516 = !DILocation(line: 2557, column: 33, scope: !10486)
!10517 = !DILocation(line: 2557, column: 41, scope: !10486)
!10518 = !DILocation(line: 2557, column: 48, scope: !10486)
!10519 = !DILocation(line: 2557, column: 65, scope: !10486)
!10520 = !DILocation(line: 2557, column: 4, scope: !10486)
!10521 = !DILocation(line: 2559, column: 3, scope: !10486)
!10522 = !DILocation(line: 2561, column: 2, scope: !10476)
!10523 = !DILocation(line: 2563, column: 3, scope: !10472)
!10524 = !DILocation(line: 2563, column: 8, scope: !10472)
!10525 = !DILocation(line: 2563, column: 11, scope: !10472)
!10526 = !DILocation(line: 2565, column: 6, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10421, file: !3, line: 2565, column: 6)
!10528 = !DILocation(line: 2565, column: 6, scope: !10421)
!10529 = !DILocation(line: 2566, column: 15, scope: !10527)
!10530 = !DILocation(line: 2566, column: 20, scope: !10527)
!10531 = !DILocation(line: 2566, column: 3, scope: !10527)
!10532 = !DILocation(line: 2566, column: 10, scope: !10527)
!10533 = !DILocation(line: 2566, column: 13, scope: !10527)
!10534 = !DILocation(line: 2568, column: 9, scope: !10421)
!10535 = !DILocation(line: 2568, column: 2, scope: !10421)
!10536 = distinct !DISubprogram(name: "image_load_image_file", scope: !3, file: !3, line: 2621, type: !10239, scopeLine: 2622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!10537 = !DILocalVariable(name: "ima", arg: 1, scope: !10536, file: !3, line: 2621, type: !2937)
!10538 = !DILocation(line: 2621, column: 44, scope: !10536)
!10539 = !DILocalVariable(name: "iuser", arg: 2, scope: !10536, file: !3, line: 2621, type: !755)
!10540 = !DILocation(line: 2621, column: 60, scope: !10536)
!10541 = !DILocalVariable(name: "cfra", arg: 3, scope: !10536, file: !3, line: 2621, type: !142)
!10542 = !DILocation(line: 2621, column: 71, scope: !10536)
!10543 = !DILocalVariable(name: "ibuf", scope: !10536, file: !3, line: 2623, type: !1222)
!10544 = !DILocation(line: 2623, column: 16, scope: !10536)
!10545 = !DILocalVariable(name: "str", scope: !10536, file: !3, line: 2624, type: !213)
!10546 = !DILocation(line: 2624, column: 7, scope: !10536)
!10547 = !DILocalVariable(name: "assign", scope: !10536, file: !3, line: 2625, type: !142)
!10548 = !DILocation(line: 2625, column: 6, scope: !10536)
!10549 = !DILocalVariable(name: "flag", scope: !10536, file: !3, line: 2625, type: !142)
!10550 = !DILocation(line: 2625, column: 18, scope: !10536)
!10551 = !DILocation(line: 2628, column: 25, scope: !10536)
!10552 = !DILocation(line: 2628, column: 2, scope: !10536)
!10553 = !DILocation(line: 2631, column: 6, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10536, file: !3, line: 2631, column: 6)
!10555 = !DILocation(line: 2631, column: 11, scope: !10554)
!10556 = !DILocation(line: 2631, column: 6, scope: !10536)
!10557 = !DILocation(line: 2632, column: 8, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10554, file: !3, line: 2631, column: 23)
!10559 = !DILocation(line: 2633, column: 39, scope: !10558)
!10560 = !DILocation(line: 2633, column: 11, scope: !10558)
!10561 = !DILocation(line: 2633, column: 8, scope: !10558)
!10562 = !DILocation(line: 2635, column: 49, scope: !10558)
!10563 = !DILocation(line: 2635, column: 54, scope: !10558)
!10564 = !DILocation(line: 2635, column: 66, scope: !10558)
!10565 = !DILocation(line: 2635, column: 72, scope: !10558)
!10566 = !DILocation(line: 2635, column: 77, scope: !10558)
!10567 = !DILocation(line: 2635, column: 89, scope: !10558)
!10568 = !DILocation(line: 2635, column: 95, scope: !10558)
!10569 = !DILocation(line: 2636, column: 32, scope: !10558)
!10570 = !DILocation(line: 2636, column: 37, scope: !10558)
!10571 = !DILocation(line: 2636, column: 57, scope: !10558)
!10572 = !DILocation(line: 2635, column: 10, scope: !10558)
!10573 = !DILocation(line: 2635, column: 8, scope: !10558)
!10574 = !DILocation(line: 2637, column: 2, scope: !10558)
!10575 = !DILocation(line: 2639, column: 8, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10554, file: !3, line: 2638, column: 7)
!10577 = !DILocation(line: 2640, column: 39, scope: !10576)
!10578 = !DILocation(line: 2640, column: 11, scope: !10576)
!10579 = !DILocation(line: 2640, column: 8, scope: !10576)
!10580 = !DILocation(line: 2643, column: 29, scope: !10576)
!10581 = !DILocation(line: 2643, column: 36, scope: !10576)
!10582 = !DILocation(line: 2643, column: 3, scope: !10576)
!10583 = !DILocation(line: 2644, column: 28, scope: !10576)
!10584 = !DILocation(line: 2644, column: 35, scope: !10576)
!10585 = !DILocation(line: 2644, column: 40, scope: !10576)
!10586 = !DILocation(line: 2644, column: 3, scope: !10576)
!10587 = !DILocation(line: 2647, column: 26, scope: !10576)
!10588 = !DILocation(line: 2647, column: 31, scope: !10576)
!10589 = !DILocation(line: 2647, column: 37, scope: !10576)
!10590 = !DILocation(line: 2647, column: 42, scope: !10576)
!10591 = !DILocation(line: 2647, column: 62, scope: !10576)
!10592 = !DILocation(line: 2647, column: 10, scope: !10576)
!10593 = !DILocation(line: 2647, column: 8, scope: !10576)
!10594 = !DILocation(line: 2650, column: 6, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10536, file: !3, line: 2650, column: 6)
!10596 = !DILocation(line: 2650, column: 6, scope: !10536)
!10597 = !DILocation(line: 2652, column: 7, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10599, file: !3, line: 2652, column: 7)
!10599 = distinct !DILexicalBlock(scope: !10595, file: !3, line: 2650, column: 12)
!10600 = !DILocation(line: 2652, column: 13, scope: !10598)
!10601 = !DILocation(line: 2652, column: 19, scope: !10598)
!10602 = !DILocation(line: 2652, column: 30, scope: !10598)
!10603 = !DILocation(line: 2652, column: 33, scope: !10598)
!10604 = !DILocation(line: 2652, column: 39, scope: !10598)
!10605 = !DILocation(line: 2652, column: 7, scope: !10599)
!10606 = !DILocation(line: 2653, column: 28, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 2652, column: 49)
!10608 = !DILocation(line: 2653, column: 33, scope: !10607)
!10609 = !DILocation(line: 2653, column: 39, scope: !10607)
!10610 = !DILocation(line: 2653, column: 4, scope: !10607)
!10611 = !DILocation(line: 2654, column: 4, scope: !10607)
!10612 = !DILocation(line: 2654, column: 9, scope: !10607)
!10613 = !DILocation(line: 2654, column: 14, scope: !10607)
!10614 = !DILocation(line: 2655, column: 18, scope: !10607)
!10615 = !DILocation(line: 2655, column: 4, scope: !10607)
!10616 = !DILocation(line: 2656, column: 9, scope: !10607)
!10617 = !DILocation(line: 2657, column: 3, scope: !10607)
!10618 = !DILocation(line: 2659, column: 32, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 2658, column: 8)
!10620 = !DILocation(line: 2659, column: 37, scope: !10619)
!10621 = !DILocation(line: 2659, column: 4, scope: !10619)
!10622 = !DILocation(line: 2660, column: 11, scope: !10619)
!10623 = !DILocation(line: 2663, column: 21, scope: !10619)
!10624 = !DILocation(line: 2663, column: 4, scope: !10619)
!10625 = !DILocation(line: 2666, column: 9, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10619, file: !3, line: 2666, column: 8)
!10627 = !DILocation(line: 2666, column: 14, scope: !10626)
!10628 = !DILocation(line: 2666, column: 25, scope: !10626)
!10629 = !DILocation(line: 2666, column: 34, scope: !10626)
!10630 = !DILocation(line: 2666, column: 40, scope: !10626)
!10631 = !DILocation(line: 2666, column: 50, scope: !10626)
!10632 = !DILocation(line: 2666, column: 8, scope: !10619)
!10633 = !DILocation(line: 2667, column: 43, scope: !10626)
!10634 = !DILocation(line: 2667, column: 48, scope: !10626)
!10635 = !DILocation(line: 2667, column: 23, scope: !10626)
!10636 = !DILocation(line: 2667, column: 5, scope: !10626)
!10637 = !DILocation(line: 2667, column: 10, scope: !10626)
!10638 = !DILocation(line: 2667, column: 21, scope: !10626)
!10639 = !DILocation(line: 2669, column: 2, scope: !10599)
!10640 = !DILocation(line: 2671, column: 3, scope: !10595)
!10641 = !DILocation(line: 2671, column: 8, scope: !10595)
!10642 = !DILocation(line: 2671, column: 11, scope: !10595)
!10643 = !DILocation(line: 2673, column: 6, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10536, file: !3, line: 2673, column: 6)
!10645 = !DILocation(line: 2673, column: 6, scope: !10536)
!10646 = !DILocation(line: 2674, column: 21, scope: !10644)
!10647 = !DILocation(line: 2674, column: 26, scope: !10644)
!10648 = !DILocation(line: 2674, column: 3, scope: !10644)
!10649 = !DILocation(line: 2676, column: 6, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10536, file: !3, line: 2676, column: 6)
!10651 = !DILocation(line: 2676, column: 6, scope: !10536)
!10652 = !DILocation(line: 2677, column: 15, scope: !10650)
!10653 = !DILocation(line: 2677, column: 20, scope: !10650)
!10654 = !DILocation(line: 2677, column: 3, scope: !10650)
!10655 = !DILocation(line: 2677, column: 10, scope: !10650)
!10656 = !DILocation(line: 2677, column: 13, scope: !10650)
!10657 = !DILocation(line: 2679, column: 9, scope: !10536)
!10658 = !DILocation(line: 2679, column: 2, scope: !10536)
!10659 = distinct !DISubprogram(name: "image_get_ibuf_multilayer", scope: !3, file: !3, line: 2682, type: !10660, scopeLine: 2683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!10660 = !DISubroutineType(types: !10661)
!10661 = !{!2997, !2937, !755}
!10662 = !DILocalVariable(name: "ima", arg: 1, scope: !10659, file: !3, line: 2682, type: !2937)
!10663 = !DILocation(line: 2682, column: 48, scope: !10659)
!10664 = !DILocalVariable(name: "iuser", arg: 2, scope: !10659, file: !3, line: 2682, type: !755)
!10665 = !DILocation(line: 2682, column: 64, scope: !10659)
!10666 = !DILocalVariable(name: "ibuf", scope: !10659, file: !3, line: 2684, type: !2997)
!10667 = !DILocation(line: 2684, column: 9, scope: !10659)
!10668 = !DILocation(line: 2686, column: 6, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10659, file: !3, line: 2686, column: 6)
!10670 = !DILocation(line: 2686, column: 11, scope: !10669)
!10671 = !DILocation(line: 2686, column: 14, scope: !10669)
!10672 = !DILocation(line: 2686, column: 6, scope: !10659)
!10673 = !DILocation(line: 2687, column: 32, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 2686, column: 23)
!10675 = !DILocation(line: 2687, column: 37, scope: !10674)
!10676 = !DILocation(line: 2687, column: 10, scope: !10674)
!10677 = !DILocation(line: 2687, column: 8, scope: !10674)
!10678 = !DILocation(line: 2688, column: 7, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10674, file: !3, line: 2688, column: 7)
!10680 = !DILocation(line: 2688, column: 7, scope: !10674)
!10681 = !DILocation(line: 2689, column: 4, scope: !10682)
!10682 = distinct !DILexicalBlock(scope: !10679, file: !3, line: 2688, column: 13)
!10683 = !DILocation(line: 2689, column: 9, scope: !10682)
!10684 = !DILocation(line: 2689, column: 14, scope: !10682)
!10685 = !DILocation(line: 2690, column: 11, scope: !10682)
!10686 = !DILocation(line: 2690, column: 4, scope: !10682)
!10687 = !DILocation(line: 2692, column: 2, scope: !10674)
!10688 = !DILocation(line: 2693, column: 6, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10659, file: !3, line: 2693, column: 6)
!10690 = !DILocation(line: 2693, column: 11, scope: !10689)
!10691 = !DILocation(line: 2693, column: 6, scope: !10659)
!10692 = !DILocalVariable(name: "rpass", scope: !10693, file: !3, line: 2694, type: !8379)
!10693 = distinct !DILexicalBlock(scope: !10689, file: !3, line: 2693, column: 15)
!10694 = !DILocation(line: 2694, column: 15, scope: !10693)
!10695 = !DILocation(line: 2694, column: 50, scope: !10693)
!10696 = !DILocation(line: 2694, column: 55, scope: !10693)
!10697 = !DILocation(line: 2694, column: 59, scope: !10693)
!10698 = !DILocation(line: 2694, column: 23, scope: !10693)
!10699 = !DILocation(line: 2696, column: 7, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10693, file: !3, line: 2696, column: 7)
!10701 = !DILocation(line: 2696, column: 7, scope: !10693)
!10702 = !DILocation(line: 2697, column: 26, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10700, file: !3, line: 2696, column: 14)
!10704 = !DILocation(line: 2697, column: 31, scope: !10703)
!10705 = !DILocation(line: 2697, column: 35, scope: !10703)
!10706 = !DILocation(line: 2697, column: 42, scope: !10703)
!10707 = !DILocation(line: 2697, column: 47, scope: !10703)
!10708 = !DILocation(line: 2697, column: 51, scope: !10703)
!10709 = !DILocation(line: 2697, column: 11, scope: !10703)
!10710 = !DILocation(line: 2697, column: 9, scope: !10703)
!10711 = !DILocation(line: 2699, column: 32, scope: !10703)
!10712 = !DILocation(line: 2699, column: 37, scope: !10703)
!10713 = !DILocation(line: 2699, column: 4, scope: !10703)
!10714 = !DILocation(line: 2701, column: 23, scope: !10703)
!10715 = !DILocation(line: 2701, column: 30, scope: !10703)
!10716 = !DILocation(line: 2701, column: 4, scope: !10703)
!10717 = !DILocation(line: 2701, column: 10, scope: !10703)
!10718 = !DILocation(line: 2701, column: 21, scope: !10703)
!10719 = !DILocation(line: 2702, column: 4, scope: !10703)
!10720 = !DILocation(line: 2702, column: 10, scope: !10703)
!10721 = !DILocation(line: 2702, column: 16, scope: !10703)
!10722 = !DILocation(line: 2703, column: 21, scope: !10703)
!10723 = !DILocation(line: 2703, column: 28, scope: !10703)
!10724 = !DILocation(line: 2703, column: 4, scope: !10703)
!10725 = !DILocation(line: 2703, column: 10, scope: !10703)
!10726 = !DILocation(line: 2703, column: 19, scope: !10703)
!10727 = !DILocation(line: 2705, column: 22, scope: !10703)
!10728 = !DILocation(line: 2705, column: 27, scope: !10703)
!10729 = !DILocation(line: 2705, column: 33, scope: !10703)
!10730 = !DILocation(line: 2705, column: 41, scope: !10703)
!10731 = !DILocation(line: 2705, column: 48, scope: !10703)
!10732 = !DILocation(line: 2705, column: 4, scope: !10703)
!10733 = !DILocation(line: 2706, column: 3, scope: !10703)
!10734 = !DILocation(line: 2707, column: 2, scope: !10693)
!10735 = !DILocation(line: 2709, column: 6, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10659, file: !3, line: 2709, column: 6)
!10737 = !DILocation(line: 2709, column: 11, scope: !10736)
!10738 = !DILocation(line: 2709, column: 6, scope: !10659)
!10739 = !DILocation(line: 2710, column: 3, scope: !10736)
!10740 = !DILocation(line: 2710, column: 8, scope: !10736)
!10741 = !DILocation(line: 2710, column: 11, scope: !10736)
!10742 = !DILocation(line: 2711, column: 6, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10659, file: !3, line: 2711, column: 6)
!10744 = !DILocation(line: 2711, column: 6, scope: !10659)
!10745 = !DILocation(line: 2712, column: 15, scope: !10743)
!10746 = !DILocation(line: 2712, column: 20, scope: !10743)
!10747 = !DILocation(line: 2712, column: 3, scope: !10743)
!10748 = !DILocation(line: 2712, column: 10, scope: !10743)
!10749 = !DILocation(line: 2712, column: 13, scope: !10743)
!10750 = !DILocation(line: 2714, column: 9, scope: !10659)
!10751 = !DILocation(line: 2714, column: 2, scope: !10659)
!10752 = !DILocation(line: 2715, column: 1, scope: !10659)
!10753 = distinct !DISubprogram(name: "image_get_render_result", scope: !3, file: !3, line: 2721, type: !8611, scopeLine: 2722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!10754 = !DILocalVariable(name: "ima", arg: 1, scope: !10753, file: !3, line: 2721, type: !2937)
!10755 = !DILocation(line: 2721, column: 46, scope: !10753)
!10756 = !DILocalVariable(name: "iuser", arg: 2, scope: !10753, file: !3, line: 2721, type: !755)
!10757 = !DILocation(line: 2721, column: 62, scope: !10753)
!10758 = !DILocalVariable(name: "lock_r", arg: 3, scope: !10753, file: !3, line: 2721, type: !3021)
!10759 = !DILocation(line: 2721, column: 76, scope: !10753)
!10760 = !DILocalVariable(name: "re", scope: !10753, file: !3, line: 2723, type: !6903)
!10761 = !DILocation(line: 2723, column: 10, scope: !10753)
!10762 = !DILocalVariable(name: "rres", scope: !10753, file: !3, line: 2724, type: !8370)
!10763 = !DILocation(line: 2724, column: 15, scope: !10753)
!10764 = !DILocalVariable(name: "rectf", scope: !10753, file: !3, line: 2725, type: !293)
!10765 = !DILocation(line: 2725, column: 9, scope: !10753)
!10766 = !DILocalVariable(name: "rectz", scope: !10753, file: !3, line: 2725, type: !293)
!10767 = !DILocation(line: 2725, column: 17, scope: !10753)
!10768 = !DILocalVariable(name: "rect", scope: !10753, file: !3, line: 2726, type: !857)
!10769 = !DILocation(line: 2726, column: 16, scope: !10753)
!10770 = !DILocalVariable(name: "dither", scope: !10753, file: !3, line: 2727, type: !185)
!10771 = !DILocation(line: 2727, column: 8, scope: !10753)
!10772 = !DILocalVariable(name: "channels", scope: !10753, file: !3, line: 2728, type: !142)
!10773 = !DILocation(line: 2728, column: 6, scope: !10753)
!10774 = !DILocalVariable(name: "layer", scope: !10753, file: !3, line: 2728, type: !142)
!10775 = !DILocation(line: 2728, column: 16, scope: !10753)
!10776 = !DILocalVariable(name: "pass", scope: !10753, file: !3, line: 2728, type: !142)
!10777 = !DILocation(line: 2728, column: 23, scope: !10753)
!10778 = !DILocalVariable(name: "ibuf", scope: !10753, file: !3, line: 2729, type: !2997)
!10779 = !DILocation(line: 2729, column: 9, scope: !10753)
!10780 = !DILocalVariable(name: "from_render", scope: !10753, file: !3, line: 2730, type: !142)
!10781 = !DILocation(line: 2730, column: 6, scope: !10753)
!10782 = !DILocation(line: 2730, column: 21, scope: !10753)
!10783 = !DILocation(line: 2730, column: 26, scope: !10753)
!10784 = !DILocation(line: 2730, column: 41, scope: !10753)
!10785 = !DILocation(line: 2730, column: 46, scope: !10753)
!10786 = !DILocation(line: 2730, column: 38, scope: !10753)
!10787 = !DILocalVariable(name: "byte_buffer_in_display_space", scope: !10753, file: !3, line: 2731, type: !1231)
!10788 = !DILocation(line: 2731, column: 7, scope: !10753)
!10789 = !DILocation(line: 2733, column: 8, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 2733, column: 6)
!10791 = !DILocation(line: 2733, column: 14, scope: !10790)
!10792 = !DILocation(line: 2733, column: 17, scope: !10790)
!10793 = !DILocation(line: 2733, column: 24, scope: !10790)
!10794 = !DILocation(line: 2733, column: 6, scope: !10753)
!10795 = !DILocation(line: 2734, column: 3, scope: !10790)
!10796 = !DILocation(line: 2737, column: 7, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 2737, column: 6)
!10798 = !DILocation(line: 2737, column: 6, scope: !10753)
!10799 = !DILocation(line: 2738, column: 3, scope: !10797)
!10800 = !DILocation(line: 2740, column: 20, scope: !10753)
!10801 = !DILocation(line: 2740, column: 27, scope: !10753)
!10802 = !DILocation(line: 2740, column: 34, scope: !10753)
!10803 = !DILocation(line: 2740, column: 37, scope: !10753)
!10804 = !DILocation(line: 2740, column: 7, scope: !10753)
!10805 = !DILocation(line: 2740, column: 5, scope: !10753)
!10806 = !DILocation(line: 2742, column: 11, scope: !10753)
!10807 = !DILocation(line: 2743, column: 10, scope: !10753)
!10808 = !DILocation(line: 2743, column: 17, scope: !10753)
!10809 = !DILocation(line: 2743, column: 8, scope: !10753)
!10810 = !DILocation(line: 2744, column: 9, scope: !10753)
!10811 = !DILocation(line: 2744, column: 16, scope: !10753)
!10812 = !DILocation(line: 2744, column: 7, scope: !10753)
!10813 = !DILocation(line: 2746, column: 6, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 2746, column: 6)
!10815 = !DILocation(line: 2746, column: 6, scope: !10753)
!10816 = !DILocation(line: 2747, column: 25, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10814, file: !3, line: 2746, column: 19)
!10818 = !DILocation(line: 2747, column: 3, scope: !10817)
!10819 = !DILocation(line: 2748, column: 2, scope: !10817)
!10820 = !DILocation(line: 2749, column: 11, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10814, file: !3, line: 2749, column: 11)
!10822 = !DILocation(line: 2749, column: 16, scope: !10821)
!10823 = !DILocation(line: 2749, column: 24, scope: !10821)
!10824 = !DILocation(line: 2749, column: 29, scope: !10821)
!10825 = !DILocation(line: 2749, column: 11, scope: !10814)
!10826 = !DILocation(line: 2750, column: 12, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 2749, column: 43)
!10828 = !DILocation(line: 2750, column: 17, scope: !10827)
!10829 = !DILocation(line: 2750, column: 25, scope: !10827)
!10830 = !DILocation(line: 2750, column: 30, scope: !10827)
!10831 = !DILocation(line: 2750, column: 10, scope: !10827)
!10832 = !DILocation(line: 2751, column: 29, scope: !10827)
!10833 = !DILocation(line: 2751, column: 35, scope: !10827)
!10834 = !DILocation(line: 2751, column: 8, scope: !10827)
!10835 = !DILocation(line: 2751, column: 22, scope: !10827)
!10836 = !DILocation(line: 2752, column: 2, scope: !10827)
!10837 = !DILocation(line: 2754, column: 3, scope: !10821)
!10838 = !DILocation(line: 2756, column: 13, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 2756, column: 6)
!10840 = !DILocation(line: 2756, column: 19, scope: !10839)
!10841 = !DILocation(line: 2756, column: 23, scope: !10839)
!10842 = !DILocation(line: 2756, column: 31, scope: !10839)
!10843 = !DILocation(line: 2756, column: 37, scope: !10839)
!10844 = !DILocation(line: 2756, column: 6, scope: !10753)
!10845 = !DILocation(line: 2757, column: 7, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10847, file: !3, line: 2757, column: 7)
!10847 = distinct !DILexicalBlock(scope: !10839, file: !3, line: 2756, column: 43)
!10848 = !DILocation(line: 2757, column: 7, scope: !10847)
!10849 = !DILocation(line: 2758, column: 26, scope: !10846)
!10850 = !DILocation(line: 2758, column: 4, scope: !10846)
!10851 = !DILocation(line: 2759, column: 3, scope: !10847)
!10852 = !DILocation(line: 2763, column: 6, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 2763, column: 6)
!10854 = !DILocation(line: 2763, column: 6, scope: !10753)
!10855 = !DILocation(line: 2764, column: 3, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 2763, column: 19)
!10857 = !DILocation(line: 2765, column: 13, scope: !10856)
!10858 = !DILocation(line: 2765, column: 4, scope: !10856)
!10859 = !DILocation(line: 2765, column: 11, scope: !10856)
!10860 = !DILocation(line: 2766, column: 2, scope: !10856)
!10861 = !DILocation(line: 2769, column: 30, scope: !10753)
!10862 = !DILocation(line: 2769, column: 7, scope: !10753)
!10863 = !DILocation(line: 2770, column: 15, scope: !10753)
!10864 = !DILocation(line: 2770, column: 8, scope: !10753)
!10865 = !DILocation(line: 2771, column: 15, scope: !10753)
!10866 = !DILocation(line: 2771, column: 8, scope: !10753)
!10867 = !DILocation(line: 2772, column: 11, scope: !10753)
!10868 = !DILocation(line: 2772, column: 18, scope: !10753)
!10869 = !DILocation(line: 2772, column: 25, scope: !10753)
!10870 = !DILocation(line: 2772, column: 27, scope: !10753)
!10871 = !DILocation(line: 2772, column: 9, scope: !10753)
!10872 = !DILocation(line: 2775, column: 11, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 2775, column: 6)
!10874 = !DILocation(line: 2775, column: 6, scope: !10873)
!10875 = !DILocation(line: 2775, column: 25, scope: !10873)
!10876 = !DILocation(line: 2775, column: 28, scope: !10873)
!10877 = !DILocation(line: 2775, column: 34, scope: !10873)
!10878 = !DILocation(line: 2775, column: 6, scope: !10753)
!10879 = !DILocation(line: 2777, column: 2, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10873, file: !3, line: 2775, column: 40)
!10881 = !DILocation(line: 2778, column: 11, scope: !10882)
!10882 = distinct !DILexicalBlock(scope: !10873, file: !3, line: 2778, column: 11)
!10883 = !DILocation(line: 2778, column: 16, scope: !10882)
!10884 = !DILocation(line: 2778, column: 19, scope: !10882)
!10885 = !DILocation(line: 2778, column: 25, scope: !10882)
!10886 = !DILocation(line: 2778, column: 11, scope: !10873)
!10887 = !DILocation(line: 2784, column: 9, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10882, file: !3, line: 2778, column: 31)
!10889 = !DILocation(line: 2785, column: 2, scope: !10888)
!10890 = !DILocation(line: 2786, column: 16, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10882, file: !3, line: 2786, column: 11)
!10892 = !DILocation(line: 2786, column: 23, scope: !10891)
!10893 = !DILocation(line: 2786, column: 11, scope: !10891)
!10894 = !DILocation(line: 2786, column: 11, scope: !10882)
!10895 = !DILocalVariable(name: "rl", scope: !10896, file: !3, line: 2787, type: !8376)
!10896 = distinct !DILexicalBlock(scope: !10891, file: !3, line: 2786, column: 30)
!10897 = !DILocation(line: 2787, column: 16, scope: !10896)
!10898 = !DILocation(line: 2787, column: 40, scope: !10896)
!10899 = !DILocation(line: 2787, column: 48, scope: !10896)
!10900 = !DILocation(line: 2787, column: 62, scope: !10896)
!10901 = !DILocation(line: 2787, column: 57, scope: !10896)
!10902 = !DILocation(line: 2787, column: 54, scope: !10896)
!10903 = !DILocation(line: 2787, column: 21, scope: !10896)
!10904 = !DILocation(line: 2788, column: 7, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10896, file: !3, line: 2788, column: 7)
!10906 = !DILocation(line: 2788, column: 7, scope: !10896)
!10907 = !DILocalVariable(name: "rpass", scope: !10908, file: !3, line: 2789, type: !8379)
!10908 = distinct !DILexicalBlock(scope: !10905, file: !3, line: 2788, column: 11)
!10909 = !DILocation(line: 2789, column: 16, scope: !10908)
!10910 = !DILocation(line: 2792, column: 8, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10908, file: !3, line: 2792, column: 8)
!10912 = !DILocation(line: 2792, column: 13, scope: !10911)
!10913 = !DILocation(line: 2792, column: 8, scope: !10908)
!10914 = !DILocation(line: 2793, column: 13, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10911, file: !3, line: 2792, column: 19)
!10916 = !DILocation(line: 2793, column: 17, scope: !10915)
!10917 = !DILocation(line: 2793, column: 11, scope: !10915)
!10918 = !DILocation(line: 2794, column: 9, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10915, file: !3, line: 2794, column: 9)
!10920 = !DILocation(line: 2794, column: 15, scope: !10919)
!10921 = !DILocation(line: 2794, column: 9, scope: !10915)
!10922 = !DILocation(line: 2798, column: 30, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10919, file: !3, line: 2794, column: 24)
!10924 = !DILocation(line: 2798, column: 34, scope: !10923)
!10925 = !DILocation(line: 2798, column: 11, scope: !10923)
!10926 = !DILocation(line: 2799, column: 35, scope: !10923)
!10927 = !DILocation(line: 2800, column: 5, scope: !10923)
!10928 = !DILocation(line: 2801, column: 4, scope: !10915)
!10929 = !DILocation(line: 2803, column: 27, scope: !10930)
!10930 = distinct !DILexicalBlock(scope: !10911, file: !3, line: 2802, column: 9)
!10931 = !DILocation(line: 2803, column: 31, scope: !10930)
!10932 = !DILocation(line: 2803, column: 39, scope: !10930)
!10933 = !DILocation(line: 2803, column: 44, scope: !10930)
!10934 = !DILocation(line: 2803, column: 13, scope: !10930)
!10935 = !DILocation(line: 2803, column: 11, scope: !10930)
!10936 = !DILocation(line: 2804, column: 9, scope: !10937)
!10937 = distinct !DILexicalBlock(scope: !10930, file: !3, line: 2804, column: 9)
!10938 = !DILocation(line: 2804, column: 9, scope: !10930)
!10939 = !DILocation(line: 2805, column: 17, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10937, file: !3, line: 2804, column: 16)
!10941 = !DILocation(line: 2805, column: 24, scope: !10940)
!10942 = !DILocation(line: 2805, column: 15, scope: !10940)
!10943 = !DILocation(line: 2806, column: 14, scope: !10940)
!10944 = !DILocation(line: 2806, column: 21, scope: !10940)
!10945 = !DILocation(line: 2806, column: 12, scope: !10940)
!10946 = !DILocation(line: 2807, column: 13, scope: !10940)
!10947 = !DILocation(line: 2808, column: 5, scope: !10940)
!10948 = !DILocation(line: 2811, column: 17, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10908, file: !3, line: 2811, column: 4)
!10950 = !DILocation(line: 2811, column: 21, scope: !10949)
!10951 = !DILocation(line: 2811, column: 28, scope: !10949)
!10952 = !DILocation(line: 2811, column: 15, scope: !10949)
!10953 = !DILocation(line: 2811, column: 9, scope: !10949)
!10954 = !DILocation(line: 2811, column: 35, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10949, file: !3, line: 2811, column: 4)
!10956 = !DILocation(line: 2811, column: 4, scope: !10949)
!10957 = !DILocation(line: 2812, column: 9, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10955, file: !3, line: 2812, column: 9)
!10959 = !DILocation(line: 2812, column: 16, scope: !10958)
!10960 = !DILocation(line: 2812, column: 25, scope: !10958)
!10961 = !DILocation(line: 2812, column: 9, scope: !10955)
!10962 = !DILocation(line: 2813, column: 14, scope: !10958)
!10963 = !DILocation(line: 2813, column: 21, scope: !10958)
!10964 = !DILocation(line: 2813, column: 12, scope: !10958)
!10965 = !DILocation(line: 2813, column: 6, scope: !10958)
!10966 = !DILocation(line: 2812, column: 28, scope: !10958)
!10967 = !DILocation(line: 2811, column: 50, scope: !10955)
!10968 = !DILocation(line: 2811, column: 57, scope: !10955)
!10969 = !DILocation(line: 2811, column: 48, scope: !10955)
!10970 = !DILocation(line: 2811, column: 4, scope: !10955)
!10971 = distinct !{!10971, !10956, !10972}
!10972 = !DILocation(line: 2813, column: 21, scope: !10949)
!10973 = !DILocation(line: 2814, column: 3, scope: !10908)
!10974 = !DILocation(line: 2815, column: 2, scope: !10896)
!10975 = !DILocation(line: 2817, column: 47, scope: !10753)
!10976 = !DILocation(line: 2817, column: 9, scope: !10753)
!10977 = !DILocation(line: 2817, column: 7, scope: !10753)
!10978 = !DILocation(line: 2820, column: 6, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 2820, column: 6)
!10980 = !DILocation(line: 2820, column: 11, scope: !10979)
!10981 = !DILocation(line: 2820, column: 6, scope: !10753)
!10982 = !DILocation(line: 2821, column: 30, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10979, file: !3, line: 2820, column: 20)
!10984 = !DILocation(line: 2821, column: 42, scope: !10983)
!10985 = !DILocation(line: 2821, column: 10, scope: !10983)
!10986 = !DILocation(line: 2821, column: 8, scope: !10983)
!10987 = !DILocation(line: 2822, column: 21, scope: !10983)
!10988 = !DILocation(line: 2822, column: 26, scope: !10983)
!10989 = !DILocation(line: 2822, column: 3, scope: !10983)
!10990 = !DILocation(line: 2823, column: 2, scope: !10983)
!10991 = !DILocation(line: 2833, column: 6, scope: !10992)
!10992 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 2833, column: 6)
!10993 = !DILocation(line: 2833, column: 12, scope: !10992)
!10994 = !DILocation(line: 2833, column: 20, scope: !10992)
!10995 = !DILocation(line: 2833, column: 17, scope: !10992)
!10996 = !DILocation(line: 2833, column: 6, scope: !10753)
!10997 = !DILocation(line: 2834, column: 7, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10999, file: !3, line: 2834, column: 7)
!10999 = distinct !DILexicalBlock(scope: !10992, file: !3, line: 2833, column: 26)
!11000 = !DILocation(line: 2834, column: 7, scope: !10999)
!11001 = !DILocalVariable(name: "colorspace", scope: !11002, file: !3, line: 2835, type: !972)
!11002 = distinct !DILexicalBlock(scope: !10998, file: !3, line: 2834, column: 37)
!11003 = !DILocation(line: 2835, column: 16, scope: !11002)
!11004 = !DILocation(line: 2836, column: 54, scope: !11002)
!11005 = !DILocation(line: 2836, column: 61, scope: !11002)
!11006 = !DILocation(line: 2836, column: 68, scope: !11002)
!11007 = !DILocation(line: 2837, column: 57, scope: !11002)
!11008 = !DILocation(line: 2837, column: 64, scope: !11002)
!11009 = !DILocation(line: 2837, column: 71, scope: !11002)
!11010 = !DILocation(line: 2836, column: 5, scope: !11002)
!11011 = !DILocation(line: 2838, column: 47, scope: !11002)
!11012 = !DILocation(line: 2838, column: 53, scope: !11002)
!11013 = !DILocation(line: 2838, column: 4, scope: !11002)
!11014 = !DILocation(line: 2839, column: 3, scope: !11002)
!11015 = !DILocalVariable(name: "colorspace", scope: !11016, file: !3, line: 2841, type: !972)
!11016 = distinct !DILexicalBlock(scope: !10998, file: !3, line: 2840, column: 8)
!11017 = !DILocation(line: 2841, column: 16, scope: !11016)
!11018 = !DILocation(line: 2841, column: 29, scope: !11016)
!11019 = !DILocation(line: 2842, column: 47, scope: !11016)
!11020 = !DILocation(line: 2842, column: 53, scope: !11016)
!11021 = !DILocation(line: 2842, column: 4, scope: !11016)
!11022 = !DILocation(line: 2844, column: 2, scope: !10999)
!11023 = !DILocation(line: 2847, column: 2, scope: !10753)
!11024 = !DILocation(line: 2848, column: 6, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 2848, column: 6)
!11026 = !DILocation(line: 2848, column: 12, scope: !11025)
!11027 = !DILocation(line: 2848, column: 22, scope: !11025)
!11028 = !DILocation(line: 2848, column: 14, scope: !11025)
!11029 = !DILocation(line: 2848, column: 28, scope: !11025)
!11030 = !DILocation(line: 2848, column: 31, scope: !11025)
!11031 = !DILocation(line: 2848, column: 37, scope: !11025)
!11032 = !DILocation(line: 2848, column: 47, scope: !11025)
!11033 = !DILocation(line: 2848, column: 39, scope: !11025)
!11034 = !DILocation(line: 2848, column: 53, scope: !11025)
!11035 = !DILocation(line: 2848, column: 56, scope: !11025)
!11036 = !DILocation(line: 2848, column: 62, scope: !11025)
!11037 = !DILocation(line: 2848, column: 76, scope: !11025)
!11038 = !DILocation(line: 2848, column: 73, scope: !11025)
!11039 = !DILocation(line: 2848, column: 6, scope: !10753)
!11040 = !DILocation(line: 2849, column: 3, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11025, file: !3, line: 2848, column: 83)
!11042 = !DILocation(line: 2849, column: 9, scope: !11041)
!11043 = !DILocation(line: 2849, column: 19, scope: !11041)
!11044 = !DILocation(line: 2850, column: 2, scope: !11041)
!11045 = !DILocation(line: 2852, column: 17, scope: !10753)
!11046 = !DILocation(line: 2852, column: 2, scope: !10753)
!11047 = !DILocation(line: 2852, column: 8, scope: !10753)
!11048 = !DILocation(line: 2852, column: 10, scope: !10753)
!11049 = !DILocation(line: 2853, column: 17, scope: !10753)
!11050 = !DILocation(line: 2853, column: 2, scope: !10753)
!11051 = !DILocation(line: 2853, column: 8, scope: !10753)
!11052 = !DILocation(line: 2853, column: 10, scope: !10753)
!11053 = !DILocation(line: 2855, column: 6, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 2855, column: 6)
!11055 = !DILocation(line: 2855, column: 6, scope: !10753)
!11056 = !DILocation(line: 2856, column: 21, scope: !11057)
!11057 = distinct !DILexicalBlock(scope: !11054, file: !3, line: 2855, column: 12)
!11058 = !DILocation(line: 2856, column: 3, scope: !11057)
!11059 = !DILocation(line: 2857, column: 16, scope: !11057)
!11060 = !DILocation(line: 2857, column: 3, scope: !11057)
!11061 = !DILocation(line: 2857, column: 9, scope: !11057)
!11062 = !DILocation(line: 2857, column: 14, scope: !11057)
!11063 = !DILocation(line: 2858, column: 2, scope: !11057)
!11064 = !DILocation(line: 2865, column: 8, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11066, file: !3, line: 2865, column: 7)
!11066 = distinct !DILexicalBlock(scope: !11054, file: !3, line: 2859, column: 7)
!11067 = !DILocation(line: 2865, column: 14, scope: !11065)
!11068 = !DILocation(line: 2865, column: 19, scope: !11065)
!11069 = !DILocation(line: 2865, column: 30, scope: !11065)
!11070 = !DILocation(line: 2865, column: 7, scope: !11066)
!11071 = !DILocation(line: 2866, column: 4, scope: !11065)
!11072 = !DILocation(line: 2866, column: 10, scope: !11065)
!11073 = !DILocation(line: 2866, column: 15, scope: !11065)
!11074 = !DILocation(line: 2869, column: 6, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 2869, column: 6)
!11076 = !DILocation(line: 2869, column: 6, scope: !10753)
!11077 = !DILocation(line: 2870, column: 22, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 2869, column: 13)
!11079 = !DILocation(line: 2870, column: 3, scope: !11078)
!11080 = !DILocation(line: 2870, column: 9, scope: !11078)
!11081 = !DILocation(line: 2870, column: 20, scope: !11078)
!11082 = !DILocation(line: 2871, column: 3, scope: !11078)
!11083 = !DILocation(line: 2871, column: 9, scope: !11078)
!11084 = !DILocation(line: 2871, column: 15, scope: !11078)
!11085 = !DILocation(line: 2872, column: 20, scope: !11078)
!11086 = !DILocation(line: 2872, column: 3, scope: !11078)
!11087 = !DILocation(line: 2872, column: 9, scope: !11078)
!11088 = !DILocation(line: 2872, column: 18, scope: !11078)
!11089 = !DILocation(line: 2873, column: 2, scope: !11078)
!11090 = !DILocation(line: 2875, column: 3, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 2874, column: 7)
!11092 = !DILocation(line: 2875, column: 9, scope: !11091)
!11093 = !DILocation(line: 2875, column: 20, scope: !11091)
!11094 = !DILocation(line: 2876, column: 3, scope: !11091)
!11095 = !DILocation(line: 2876, column: 9, scope: !11091)
!11096 = !DILocation(line: 2876, column: 15, scope: !11091)
!11097 = !DILocation(line: 2879, column: 6, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 2879, column: 6)
!11099 = !DILocation(line: 2879, column: 6, scope: !10753)
!11100 = !DILocation(line: 2880, column: 22, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11098, file: !3, line: 2879, column: 13)
!11102 = !DILocation(line: 2880, column: 3, scope: !11101)
!11103 = !DILocation(line: 2880, column: 9, scope: !11101)
!11104 = !DILocation(line: 2880, column: 20, scope: !11101)
!11105 = !DILocation(line: 2881, column: 3, scope: !11101)
!11106 = !DILocation(line: 2881, column: 9, scope: !11101)
!11107 = !DILocation(line: 2881, column: 15, scope: !11101)
!11108 = !DILocation(line: 2882, column: 2, scope: !11101)
!11109 = !DILocation(line: 2884, column: 3, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11098, file: !3, line: 2883, column: 7)
!11111 = !DILocation(line: 2884, column: 9, scope: !11110)
!11112 = !DILocation(line: 2884, column: 20, scope: !11110)
!11113 = !DILocation(line: 2885, column: 3, scope: !11110)
!11114 = !DILocation(line: 2885, column: 9, scope: !11110)
!11115 = !DILocation(line: 2885, column: 15, scope: !11110)
!11116 = !DILocation(line: 2888, column: 2, scope: !10753)
!11117 = !DILocation(line: 2890, column: 17, scope: !10753)
!11118 = !DILocation(line: 2890, column: 2, scope: !10753)
!11119 = !DILocation(line: 2890, column: 8, scope: !10753)
!11120 = !DILocation(line: 2890, column: 15, scope: !10753)
!11121 = !DILocation(line: 2892, column: 2, scope: !10753)
!11122 = !DILocation(line: 2892, column: 7, scope: !10753)
!11123 = !DILocation(line: 2892, column: 10, scope: !10753)
!11124 = !DILocation(line: 2894, column: 9, scope: !10753)
!11125 = !DILocation(line: 2894, column: 2, scope: !10753)
!11126 = !DILocation(line: 2895, column: 1, scope: !10753)
!11127 = distinct !DISubprogram(name: "image_initialize_after_load", scope: !3, file: !3, line: 2434, type: !7543, scopeLine: 2435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!11128 = !DILocalVariable(name: "ima", arg: 1, scope: !11127, file: !3, line: 2434, type: !2937)
!11129 = !DILocation(line: 2434, column: 48, scope: !11127)
!11130 = !DILocalVariable(name: "ibuf", arg: 2, scope: !11127, file: !3, line: 2434, type: !2997)
!11131 = !DILocation(line: 2434, column: 60, scope: !11127)
!11132 = !DILocation(line: 2437, column: 8, scope: !11133)
!11133 = distinct !DILexicalBlock(scope: !11127, file: !3, line: 2437, column: 6)
!11134 = !DILocation(line: 2437, column: 6, scope: !11133)
!11135 = !DILocation(line: 2437, column: 19, scope: !11133)
!11136 = !DILocation(line: 2437, column: 24, scope: !11133)
!11137 = !DILocation(line: 2437, column: 27, scope: !11133)
!11138 = !DILocation(line: 2437, column: 32, scope: !11133)
!11139 = !DILocation(line: 2437, column: 40, scope: !11133)
!11140 = !DILocation(line: 2437, column: 6, scope: !11127)
!11141 = !DILocation(line: 2438, column: 36, scope: !11133)
!11142 = !DILocation(line: 2438, column: 41, scope: !11133)
!11143 = !DILocation(line: 2438, column: 20, scope: !11133)
!11144 = !DILocation(line: 2438, column: 3, scope: !11133)
!11145 = !DILocation(line: 2441, column: 6, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11127, file: !3, line: 2441, column: 6)
!11147 = !DILocation(line: 2441, column: 11, scope: !11146)
!11148 = !DILocation(line: 2441, column: 16, scope: !11146)
!11149 = !DILocation(line: 2441, column: 6, scope: !11127)
!11150 = !DILocation(line: 2442, column: 7, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11152, file: !3, line: 2442, column: 7)
!11152 = distinct !DILexicalBlock(scope: !11146, file: !3, line: 2441, column: 30)
!11153 = !DILocation(line: 2442, column: 12, scope: !11151)
!11154 = !DILocation(line: 2442, column: 17, scope: !11151)
!11155 = !DILocation(line: 2442, column: 7, scope: !11152)
!11156 = !DILocation(line: 2442, column: 50, scope: !11151)
!11157 = !DILocation(line: 2442, column: 34, scope: !11151)
!11158 = !DILocation(line: 2443, column: 24, scope: !11151)
!11159 = !DILocation(line: 2443, column: 8, scope: !11151)
!11160 = !DILocation(line: 2444, column: 2, scope: !11152)
!11161 = !DILocation(line: 2446, column: 21, scope: !11127)
!11162 = !DILocation(line: 2446, column: 2, scope: !11127)
!11163 = !DILocation(line: 2448, column: 2, scope: !11127)
!11164 = !DILocation(line: 2448, column: 7, scope: !11127)
!11165 = !DILocation(line: 2448, column: 10, scope: !11127)
!11166 = !DILocation(line: 2450, column: 1, scope: !11127)
!11167 = distinct !DISubprogram(name: "imbuf_alpha_flags_for_image", scope: !3, file: !3, line: 2452, type: !9926, scopeLine: 2453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!11168 = !DILocalVariable(name: "ima", arg: 1, scope: !11167, file: !3, line: 2452, type: !2937)
!11169 = !DILocation(line: 2452, column: 47, scope: !11167)
!11170 = !DILocalVariable(name: "flag", scope: !11167, file: !3, line: 2454, type: !142)
!11171 = !DILocation(line: 2454, column: 6, scope: !11167)
!11172 = !DILocation(line: 2456, column: 6, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11167, file: !3, line: 2456, column: 6)
!11174 = !DILocation(line: 2456, column: 11, scope: !11173)
!11175 = !DILocation(line: 2456, column: 16, scope: !11173)
!11176 = !DILocation(line: 2456, column: 6, scope: !11167)
!11177 = !DILocation(line: 2457, column: 8, scope: !11173)
!11178 = !DILocation(line: 2457, column: 3, scope: !11173)
!11179 = !DILocation(line: 2458, column: 11, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11173, file: !3, line: 2458, column: 11)
!11181 = !DILocation(line: 2458, column: 16, scope: !11180)
!11182 = !DILocation(line: 2458, column: 27, scope: !11180)
!11183 = !DILocation(line: 2458, column: 11, scope: !11173)
!11184 = !DILocation(line: 2459, column: 8, scope: !11180)
!11185 = !DILocation(line: 2459, column: 3, scope: !11180)
!11186 = !DILocation(line: 2461, column: 9, scope: !11167)
!11187 = !DILocation(line: 2461, column: 2, scope: !11167)
!11188 = distinct !DISubprogram(name: "image_create_multilayer", scope: !3, file: !3, line: 2417, type: !11189, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2983)
!11189 = !DISubroutineType(types: !11190)
!11190 = !{null, !2937, !2997, !142}
!11191 = !DILocalVariable(name: "ima", arg: 1, scope: !11188, file: !3, line: 2417, type: !2937)
!11192 = !DILocation(line: 2417, column: 44, scope: !11188)
!11193 = !DILocalVariable(name: "ibuf", arg: 2, scope: !11188, file: !3, line: 2417, type: !2997)
!11194 = !DILocation(line: 2417, column: 56, scope: !11188)
!11195 = !DILocalVariable(name: "framenr", arg: 3, scope: !11188, file: !3, line: 2417, type: !142)
!11196 = !DILocation(line: 2417, column: 66, scope: !11188)
!11197 = !DILocalVariable(name: "colorspace", scope: !11188, file: !3, line: 2419, type: !972)
!11198 = !DILocation(line: 2419, column: 14, scope: !11188)
!11199 = !DILocation(line: 2419, column: 27, scope: !11188)
!11200 = !DILocation(line: 2419, column: 32, scope: !11188)
!11201 = !DILocation(line: 2419, column: 52, scope: !11188)
!11202 = !DILocalVariable(name: "predivide", scope: !11188, file: !3, line: 2420, type: !1231)
!11203 = !DILocation(line: 2420, column: 7, scope: !11188)
!11204 = !DILocation(line: 2420, column: 20, scope: !11188)
!11205 = !DILocation(line: 2420, column: 25, scope: !11188)
!11206 = !DILocation(line: 2420, column: 36, scope: !11188)
!11207 = !DILocation(line: 2420, column: 19, scope: !11188)
!11208 = !DILocation(line: 2422, column: 33, scope: !11188)
!11209 = !DILocation(line: 2422, column: 39, scope: !11188)
!11210 = !DILocation(line: 2422, column: 49, scope: !11188)
!11211 = !DILocation(line: 2422, column: 61, scope: !11188)
!11212 = !DILocation(line: 2422, column: 72, scope: !11188)
!11213 = !DILocation(line: 2422, column: 78, scope: !11188)
!11214 = !DILocation(line: 2422, column: 81, scope: !11188)
!11215 = !DILocation(line: 2422, column: 87, scope: !11188)
!11216 = !DILocation(line: 2422, column: 12, scope: !11188)
!11217 = !DILocation(line: 2422, column: 2, scope: !11188)
!11218 = !DILocation(line: 2422, column: 7, scope: !11188)
!11219 = !DILocation(line: 2422, column: 10, scope: !11188)
!11220 = !DILocation(line: 2428, column: 2, scope: !11188)
!11221 = !DILocation(line: 2428, column: 8, scope: !11188)
!11222 = !DILocation(line: 2428, column: 17, scope: !11188)
!11223 = !DILocation(line: 2429, column: 6, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11188, file: !3, line: 2429, column: 6)
!11225 = !DILocation(line: 2429, column: 11, scope: !11224)
!11226 = !DILocation(line: 2429, column: 6, scope: !11188)
!11227 = !DILocation(line: 2430, column: 22, scope: !11224)
!11228 = !DILocation(line: 2430, column: 3, scope: !11224)
!11229 = !DILocation(line: 2430, column: 8, scope: !11224)
!11230 = !DILocation(line: 2430, column: 12, scope: !11224)
!11231 = !DILocation(line: 2430, column: 20, scope: !11224)
!11232 = !DILocation(line: 2431, column: 1, scope: !11188)
