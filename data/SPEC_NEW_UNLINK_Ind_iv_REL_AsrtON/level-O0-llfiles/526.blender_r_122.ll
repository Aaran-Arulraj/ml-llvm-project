; ModuleID = 'blender/source/blender/blenkernel/intern/DerivedMesh.c'
source_filename = "blender/source/blender/blenkernel/intern/DerivedMesh.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.DMWeightColorInfo = type { %struct.ColorBand*, i8* }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, {}*, void (%struct.DerivedMesh*, float)*, {}*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, {}*, {}*, void (%struct.DerivedMesh*, i8, i8)*, {}*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, {}* }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.LinkNode = type { %struct.LinkNode*, i8* }
%struct.GPUDrawObject = type { %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, i32*, %struct.GPUVertPointLink*, i32, %struct.GPUBufferMaterial*, i32, i32, i32, i32, i32, i8 }
%struct.GPUBuffer = type { i32, i8*, i32 }
%struct.GPUVertPointLink = type opaque
%struct.GPUBufferMaterial = type { i32, i32, i16 }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type opaque
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type { %struct.MultiresModifierData*, %struct.MVert*, %struct.MPoly*, %struct.MLoop*, i32, i32, [3 x float]*, %struct.KeyBlock*, float*, %struct.MeshElemMap*, %struct.BMesh*, i32, i32, i8, %struct.BMLog*, %struct.PBVH*, i8, i8, [3 x float]*, [3 x float]*, [3 x [3 x float]]*, i8, i32, i32*, i32, %struct.ImagePool*, [3 x float]*, %struct.SculptStroke*, %struct.StrokeCache*, i8, [3 x float], [3 x float], i32 }
%struct.MultiresModifierData = type { %struct.ModifierData, i8, i8, i8, i8, i8, i8, [2 x i8] }
%struct.ModifierData = type { %struct.ModifierData*, %struct.ModifierData*, i32, i32, i32, i32, [64 x i8], %struct.Scene*, i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type { %struct.ID, %struct.BrushClone, %struct.CurveMapping*, %struct.MTex, %struct.MTex, %struct.Brush*, %struct.ImBuf*, %struct.PreviewImage*, %struct.ColorBand*, %struct.PaintCurve*, [1024 x i8], float, i16, i16, float, i32, i32, i32, float, i32, i32, i32, i32, float, float, [3 x float], float, [3 x float], i32, float, float, i32, i32, i32, i8, i8, i8, i8, float, float, float, float, float, i32, i32, i32, float, float, i32, i32, float, [3 x float], [3 x float], [2 x float], [2 x float], [2 x float], [2 x float] }
%struct.BrushClone = type { %struct.Image*, [2 x float], float, float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.rctf = type { float, float, float, float }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ImBuf = type opaque
%struct.PaintCurve = type { %struct.ID, %struct.PaintCurvePoint*, i32, i32 }
%struct.PaintCurvePoint = type { %struct.BezTriple, float }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.Palette = type { %struct.ID, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.KeyBlock = type { %struct.KeyBlock*, %struct.KeyBlock*, float, float, i16, i16, i16, i16, i32, i32, i8*, [64 x i8], [64 x i8], float, float }
%struct.MeshElemMap = type { i32*, i32 }
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BMVert**, %struct.BMEdge**, %struct.BMFace**, i32, i32, i32, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, i32, %struct.BMOperator*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, %struct.BMFace*, %struct.ListBase, i8* }
%struct.BMVert = type { %struct.BMHeader, %struct.BMFlagLayer*, [3 x float], [3 x float], %struct.BMEdge* }
%struct.BMHeader = type { i8*, i32, i8, i8, i8 }
%struct.BMFlagLayer = type { i16 }
%struct.BMEdge = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMVert*, %struct.BMVert*, %struct.BMLoop*, %struct.BMDiskLink, %struct.BMDiskLink }
%struct.BMLoop = type { %struct.BMHeader, %struct.BMVert*, %struct.BMEdge*, %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMDiskLink = type { %struct.BMEdge*, %struct.BMEdge* }
%struct.BMOperator = type { [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot], void (%struct.BMesh*, %struct.BMOperator*)*, %struct.MemArena*, i32, i32, i32 }
%struct.BMOpSlot = type { i8*, i32, %union.eBMOpSlotSubType_Union, i32, %union.anon }
%union.eBMOpSlotSubType_Union = type { i32 }
%union.anon = type { i8*, [8 x i8] }
%struct.MemArena = type opaque
%struct.BMFace = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMLoop*, i32, [3 x float], i16 }
%struct.BMLog = type opaque
%struct.PBVH = type opaque
%struct.ImagePool = type opaque
%struct.SculptStroke = type opaque
%struct.StrokeCache = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.bNodeTree = type opaque
%struct.Ipo = type opaque
%struct.Group = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type opaque
%struct.DMFlagMat = type { i16, i8 }
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.Key = type { %struct.ID, %struct.AnimData*, %struct.KeyBlock*, [32 x i8], i32, i32, %struct.ListBase, %struct.Ipo*, %struct.ID*, i16, i16, i16, i16, float, i32 }
%struct.MSelect = type { i32, i32 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.BMEditMesh = type { %struct.BMesh*, %struct.BMEditMesh*, i32, [3 x %struct.BMLoop*]*, i32, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, [4 x i8]*, i32, [4 x i8]*, i32, i16, i16, %struct.Object*, i32 }
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.MDisps = type { i32, i32, [3 x float]*, i32* }
%struct.ModifierTypeInfo = type { [32 x i8], [32 x i8], i32, i32, i32, void (%struct.ModifierData*, %struct.ModifierData*)*, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, i32, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, [3 x [3 x float]]*, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, [3 x [3 x float]]*, i32)*, %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, i32)*, %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, i32)*, void (%struct.ModifierData*)*, i64 (%struct.Object*, %struct.ModifierData*)*, void (%struct.ModifierData*)*, i8 (%struct.ModifierData*, i32)*, void (%struct.ModifierData*, %struct.DagForest*, %struct.Scene*, %struct.Object*, %struct.DagNode*)*, i8 (%struct.ModifierData*)*, i8 (%struct.ModifierData*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.Object**)*, i8*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.ID**)*, i8*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.ModifierData*, i8*)*, i8*)* }
%struct.DagNode = type opaque
%struct.BMIter = type { %union.anon.0, void (i8*)*, i8* (i8*)*, i32, i8 }
%union.anon.0 = type { %struct.BMIter__face_of_vert }
%struct.BMIter__face_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.CDMaskLink = type { %struct.CDMaskLink*, i64 }
%struct.VirtualModifierData = type { %struct.ArmatureModifierData, %struct.CurveModifierData, %struct.LatticeModifierData, %struct.ShapeKeyModifierData }
%struct.ArmatureModifierData = type { %struct.ModifierData, i16, i16, i32, %struct.Object*, float*, [64 x i8] }
%struct.CurveModifierData = type { %struct.ModifierData, %struct.Object*, [64 x i8], i16, [6 x i8] }
%struct.LatticeModifierData = type { %struct.ModifierData, %struct.Object*, [64 x i8], float, [4 x i8] }
%struct.ShapeKeyModifierData = type { %struct.ModifierData }
%struct.MappedUserData = type { [3 x float]*, i32* }
%struct.SGLSLMeshToTangent = type { [3 x float]*, [4 x [3 x i16]]*, %struct.MTFace*, %struct.MFace*, %struct.MVert*, [3 x float]*, [4 x float]*, i32 }
%struct.SMikkTSpaceContext = type { %struct.SMikkTSpaceInterface*, i8* }
%struct.SMikkTSpaceInterface = type { i32 (%struct.SMikkTSpaceContext*)*, i32 (%struct.SMikkTSpaceContext*, i32)*, void (%struct.SMikkTSpaceContext*, float*, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, float, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, float*, float, float, i32, i32, i32)* }
%struct.GPUVertexAttribs = type { [32 x %struct.anon], i32 }
%struct.anon = type { i32, i32, i32, i32, [64 x i8] }
%struct.DMVertexAttribs = type { [8 x %struct.anon.1], [8 x %struct.anon.2], %struct.anon.3, %struct.anon.4, i32, i32, i32, i32 }
%struct.anon.1 = type { %struct.MTFace*, i32, i32, i32 }
%struct.anon.2 = type { %struct.MCol*, i32, i32 }
%struct.anon.3 = type { [4 x float]*, i32, i32 }
%struct.anon.4 = type { [3 x float]*, i32, i32, i32 }
%struct.OrigSpaceLoop = type { [2 x float] }
%struct.BMIter__elem_of_mesh = type { %struct.BLI_mempool_iter }
%struct.BLI_mempool_iter = type { %struct.BLI_mempool*, %struct.BLI_mempool_chunk*, i32 }
%struct.BLI_mempool_chunk = type opaque
%struct.BMIter__edge_of_vert = type { %struct.BMVert*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__loop_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__vert_of_edge = type { %struct.BMEdge* }
%struct.BMIter__face_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__vert_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__edge_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_loop = type { %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.ClothModifierData = type { %struct.ModifierData, %struct.Scene*, %struct.Cloth*, %struct.ClothSimSettings*, %struct.ClothCollSettings*, %struct.PointCache*, %struct.ListBase }
%struct.Cloth = type opaque
%struct.ClothSimSettings = type { %struct.LinkNode*, float, float, float, [3 x float], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, [4 x i8], %struct.EffectorWeights* }
%struct.EffectorWeights = type opaque
%struct.ClothCollSettings = type { %struct.LinkNode*, float, float, float, float, float, float, i32, i16, i16, %struct.Group*, i16, i16, i32 }
%struct.PointCache = type opaque

@CD_MASK_DERIVEDMESH = external dso_local constant i64, align 8
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str = private unnamed_addr constant [70 x i8] c"warning %s: could not create tessfaces from %d polygons, dm->type=%d\0A\00", align 1
@__func__.DM_ensure_tessface = private unnamed_addr constant [19 x i8] c"DM_ensure_tessface\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@__func__.DM_update_tessface_data = private unnamed_addr constant [24 x i8] c"DM_update_tessface_data\00", align 1
@G = external dso_local global %struct.Global, align 8
@.str.1 = private unnamed_addr constant [45 x i8] c"%s: Updated tessellated customdata of dm %p\0A\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.2 = private unnamed_addr constant [16 x i8] c"DerivedMesh.mat\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"%s: error - could not find active shapekey %d!\0A\00", align 1
@__func__.DM_to_mesh = private unnamed_addr constant [11 x i8] c"DM_to_mesh\00", align 1
@.str.4 = private unnamed_addr constant [60 x i8] c"%s: YEEK! this should be recoded! Shape key loss!: ID '%s'\0A\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"kb->data\00", align 1
@G_dm_wcinfo = internal global %struct.DMWeightColorInfo zeroinitializer, align 8, !dbg !0
@__func__.DM_update_weight_mcol = private unnamed_addr constant [22 x i8] c"DM_update_weight_mcol\00", align 1
@.str.6 = private unnamed_addr constant [40 x i8] c"Temp weight array DM_update_weight_mcol\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"vertexcos\00", align 1
@.str.8 = private unnamed_addr constant [52 x i8] c"Modifier requires original data, bad stack position\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"vertexcos flags\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"DM-BoundBox\00", align 1
@DM_init_origspace.default_osf = internal global [4 x [2 x float]] [[2 x float] zeroinitializer, [2 x float] [float 1.000000e+00, float 0.000000e+00], [2 x float] [float 1.000000e+00, float 1.000000e+00], [2 x float] [float 0.000000e+00, float 1.000000e+00]], align 16, !dbg !2934
@.str.11 = private unnamed_addr constant [21 x i8] c"dmvh vert data array\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"dm medge data array\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"dm loop data array\00", align 1
@.str.14 = private unnamed_addr constant [19 x i8] c"dm poly data array\00", align 1
@.str.15 = private unnamed_addr constant [21 x i8] c"bvh mface data array\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"dm_dupVertArray tmp\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"dm_dupEdgeArray tmp\00", align 1
@.str.18 = private unnamed_addr constant [20 x i8] c"dm_dupFaceArray tmp\00", align 1
@.str.19 = private unnamed_addr constant [20 x i8] c"dm_dupLoopArray tmp\00", align 1
@.str.20 = private unnamed_addr constant [20 x i8] c"dm_dupPolyArray tmp\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"kbcos DerivedMesh.c\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"kb->data derivedmesh.c\00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.23 = private unnamed_addr constant [57 x i8] c"%s: lost a shapekey layer: '%s'! (bmesh internal error)\0A\00", align 1
@__func__.shapekey_layers_to_keyblocks = private unnamed_addr constant [29 x i8] c"shapekey_layers_to_keyblocks\00", align 1
@.str.24 = private unnamed_addr constant [52 x i8] c"%s: vertex size mismatch (mesh/dm) '%s' (%d != %d)\0A\00", align 1
@__func__.add_shapekey_layers = private unnamed_addr constant [20 x i8] c"add_shapekey_layers\00", align 1
@.str.25 = private unnamed_addr constant [61 x i8] c"%s: vertex size mismatch (Mesh '%s':%d != KeyBlock '%s':%d)\0A\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"dfmv\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@.str.27 = private unnamed_addr constant [8 x i8] c"dm orco\00", align 1
@.str.28 = private unnamed_addr constant [16 x i8] c"BMEditMesh Orco\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"Not supported in dyntopo\00", align 1
@.str.30 = private unnamed_addr constant [29 x i8] c"Not supported in sculpt mode\00", align 1
@.str.31 = private unnamed_addr constant [42 x i8] c"Hide, Mask and optimized display disabled\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_init_funcs(%struct.DerivedMesh* %dm) #0 !dbg !2950 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2951, metadata !DIExpression()), !dbg !2952
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2953
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 31, !dbg !2954
  store %struct.MVert* (%struct.DerivedMesh*)* @dm_getVertArray, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !2955
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2956
  %getEdgeArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 32, !dbg !2957
  store %struct.MEdge* (%struct.DerivedMesh*)* @dm_getEdgeArray, %struct.MEdge* (%struct.DerivedMesh*)** %getEdgeArray, align 8, !dbg !2958
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2959
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 33, !dbg !2960
  store %struct.MFace* (%struct.DerivedMesh*)* @dm_getTessFaceArray, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !2961
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2962
  %getLoopArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 34, !dbg !2963
  store %struct.MLoop* (%struct.DerivedMesh*)* @dm_getLoopArray, %struct.MLoop* (%struct.DerivedMesh*)** %getLoopArray, align 8, !dbg !2964
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2965
  %getPolyArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 35, !dbg !2966
  store %struct.MPoly* (%struct.DerivedMesh*)* @dm_getPolyArray, %struct.MPoly* (%struct.DerivedMesh*)** %getPolyArray, align 8, !dbg !2967
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2968
  %dupVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 41, !dbg !2969
  store %struct.MVert* (%struct.DerivedMesh*)* @dm_dupVertArray, %struct.MVert* (%struct.DerivedMesh*)** %dupVertArray, align 8, !dbg !2970
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2971
  %dupEdgeArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 42, !dbg !2972
  store %struct.MEdge* (%struct.DerivedMesh*)* @dm_dupEdgeArray, %struct.MEdge* (%struct.DerivedMesh*)** %dupEdgeArray, align 8, !dbg !2973
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2974
  %dupTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 43, !dbg !2975
  store %struct.MFace* (%struct.DerivedMesh*)* @dm_dupFaceArray, %struct.MFace* (%struct.DerivedMesh*)** %dupTessFaceArray, align 8, !dbg !2976
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2977
  %dupLoopArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 44, !dbg !2978
  store %struct.MLoop* (%struct.DerivedMesh*)* @dm_dupLoopArray, %struct.MLoop* (%struct.DerivedMesh*)** %dupLoopArray, align 8, !dbg !2979
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2980
  %dupPolyArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 45, !dbg !2981
  store %struct.MPoly* (%struct.DerivedMesh*)* @dm_dupPolyArray, %struct.MPoly* (%struct.DerivedMesh*)** %dupPolyArray, align 8, !dbg !2982
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2983
  %getVertDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 55, !dbg !2984
  store %struct.CustomData* (%struct.DerivedMesh*)* @dm_getVertCData, %struct.CustomData* (%struct.DerivedMesh*)** %getVertDataLayout, align 8, !dbg !2985
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2986
  %getEdgeDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %11, i32 0, i32 56, !dbg !2987
  store %struct.CustomData* (%struct.DerivedMesh*)* @dm_getEdgeCData, %struct.CustomData* (%struct.DerivedMesh*)** %getEdgeDataLayout, align 8, !dbg !2988
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2989
  %getTessFaceDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 57, !dbg !2990
  store %struct.CustomData* (%struct.DerivedMesh*)* @dm_getTessFaceCData, %struct.CustomData* (%struct.DerivedMesh*)** %getTessFaceDataLayout, align 8, !dbg !2991
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2992
  %getLoopDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 58, !dbg !2993
  store %struct.CustomData* (%struct.DerivedMesh*)* @dm_getLoopCData, %struct.CustomData* (%struct.DerivedMesh*)** %getLoopDataLayout, align 8, !dbg !2994
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2995
  %getPolyDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %14, i32 0, i32 59, !dbg !2996
  store %struct.CustomData* (%struct.DerivedMesh*)* @dm_getPolyCData, %struct.CustomData* (%struct.DerivedMesh*)** %getPolyDataLayout, align 8, !dbg !2997
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2998
  %getVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 46, !dbg !2999
  store i8* (%struct.DerivedMesh*, i32, i32)* @DM_get_vert_data, i8* (%struct.DerivedMesh*, i32, i32)** %getVertData, align 8, !dbg !3000
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3001
  %getEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %16, i32 0, i32 47, !dbg !3002
  store i8* (%struct.DerivedMesh*, i32, i32)* @DM_get_edge_data, i8* (%struct.DerivedMesh*, i32, i32)** %getEdgeData, align 8, !dbg !3003
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3004
  %getTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %17, i32 0, i32 48, !dbg !3005
  store i8* (%struct.DerivedMesh*, i32, i32)* @DM_get_tessface_data, i8* (%struct.DerivedMesh*, i32, i32)** %getTessFaceData, align 8, !dbg !3006
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3007
  %getPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %18, i32 0, i32 49, !dbg !3008
  store i8* (%struct.DerivedMesh*, i32, i32)* @DM_get_poly_data, i8* (%struct.DerivedMesh*, i32, i32)** %getPolyData, align 8, !dbg !3009
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3010
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %19, i32 0, i32 50, !dbg !3011
  store i8* (%struct.DerivedMesh*, i32)* @DM_get_vert_data_layer, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !3012
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3013
  %getEdgeDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %20, i32 0, i32 51, !dbg !3014
  store i8* (%struct.DerivedMesh*, i32)* @DM_get_edge_data_layer, i8* (%struct.DerivedMesh*, i32)** %getEdgeDataArray, align 8, !dbg !3015
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3016
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %21, i32 0, i32 52, !dbg !3017
  store i8* (%struct.DerivedMesh*, i32)* @DM_get_tessface_data_layer, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !3018
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3019
  %getPolyDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %22, i32 0, i32 54, !dbg !3020
  store i8* (%struct.DerivedMesh*, i32)* @DM_get_poly_data_layer, i8* (%struct.DerivedMesh*, i32)** %getPolyDataArray, align 8, !dbg !3021
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3022
  %getLoopDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %23, i32 0, i32 53, !dbg !3023
  store i8* (%struct.DerivedMesh*, i32)* @DM_get_loop_data_layer, i8* (%struct.DerivedMesh*, i32)** %getLoopDataArray, align 8, !dbg !3024
  %24 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3025
  %bvhCache = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %24, i32 0, i32 12, !dbg !3026
  call void @bvhcache_init(%struct.LinkNode** %bvhCache), !dbg !3027
  ret void, !dbg !3028
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.MVert* @dm_getVertArray(%struct.DerivedMesh* %dm) #0 !dbg !3029 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mvert = alloca %struct.MVert*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3032, metadata !DIExpression()), !dbg !3033
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !3034, metadata !DIExpression()), !dbg !3035
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3036
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 0, !dbg !3037
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %vertData, i32 0), !dbg !3038
  %1 = bitcast i8* %call to %struct.MVert*, !dbg !3038
  store %struct.MVert* %1, %struct.MVert** %mvert, align 8, !dbg !3035
  %2 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !3039
  %tobool = icmp ne %struct.MVert* %2, null, !dbg !3039
  br i1 %tobool, label %if.end, label %if.then, !dbg !3041

if.then:                                          ; preds = %entry
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3042
  %vertData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 0, !dbg !3044
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3045
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 23, !dbg !3046
  %5 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !3046
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3047
  %call2 = call i32 %5(%struct.DerivedMesh* %6), !dbg !3045
  %call3 = call i8* @CustomData_add_layer(%struct.CustomData* %vertData1, i32 0, i32 1, i8* null, i32 %call2), !dbg !3048
  %7 = bitcast i8* %call3 to %struct.MVert*, !dbg !3048
  store %struct.MVert* %7, %struct.MVert** %mvert, align 8, !dbg !3049
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3050
  %vertData4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 0, !dbg !3051
  call void @CustomData_set_layer_flag(%struct.CustomData* %vertData4, i32 0, i32 5), !dbg !3052
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3053
  %copyVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 36, !dbg !3054
  %10 = load void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MVert*)** %copyVertArray, align 8, !dbg !3054
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3055
  %12 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !3056
  call void %10(%struct.DerivedMesh* %11, %struct.MVert* %12), !dbg !3053
  br label %if.end, !dbg !3057

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !3058
  ret %struct.MVert* %13, !dbg !3059
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.MEdge* @dm_getEdgeArray(%struct.DerivedMesh* %dm) #0 !dbg !3060 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %medge = alloca %struct.MEdge*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3065, metadata !DIExpression()), !dbg !3066
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge, metadata !3067, metadata !DIExpression()), !dbg !3068
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3069
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 1, !dbg !3070
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %edgeData, i32 3), !dbg !3071
  %1 = bitcast i8* %call to %struct.MEdge*, !dbg !3071
  store %struct.MEdge* %1, %struct.MEdge** %medge, align 8, !dbg !3068
  %2 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !3072
  %tobool = icmp ne %struct.MEdge* %2, null, !dbg !3072
  br i1 %tobool, label %if.end, label %if.then, !dbg !3074

if.then:                                          ; preds = %entry
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3075
  %edgeData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 1, !dbg !3077
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3078
  %getNumEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 24, !dbg !3079
  %5 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumEdges, align 8, !dbg !3079
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3080
  %call2 = call i32 %5(%struct.DerivedMesh* %6), !dbg !3078
  %call3 = call i8* @CustomData_add_layer(%struct.CustomData* %edgeData1, i32 3, i32 1, i8* null, i32 %call2), !dbg !3081
  %7 = bitcast i8* %call3 to %struct.MEdge*, !dbg !3081
  store %struct.MEdge* %7, %struct.MEdge** %medge, align 8, !dbg !3082
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3083
  %edgeData4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 1, !dbg !3084
  call void @CustomData_set_layer_flag(%struct.CustomData* %edgeData4, i32 3, i32 5), !dbg !3085
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3086
  %copyEdgeArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 37, !dbg !3087
  %10 = load void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MEdge*)** %copyEdgeArray, align 8, !dbg !3087
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3088
  %12 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !3089
  call void %10(%struct.DerivedMesh* %11, %struct.MEdge* %12), !dbg !3086
  br label %if.end, !dbg !3090

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !3091
  ret %struct.MEdge* %13, !dbg !3092
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.MFace* @dm_getTessFaceArray(%struct.DerivedMesh* %dm) #0 !dbg !3093 {
entry:
  %retval = alloca %struct.MFace*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mface = alloca %struct.MFace*, align 8
  %numTessFaces = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3096, metadata !DIExpression()), !dbg !3097
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !3098, metadata !DIExpression()), !dbg !3099
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3100
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 2, !dbg !3101
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %faceData, i32 4), !dbg !3102
  %1 = bitcast i8* %call to %struct.MFace*, !dbg !3102
  store %struct.MFace* %1, %struct.MFace** %mface, align 8, !dbg !3099
  %2 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !3103
  %tobool = icmp ne %struct.MFace* %2, null, !dbg !3103
  br i1 %tobool, label %if.end7, label %if.then, !dbg !3105

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %numTessFaces, metadata !3106, metadata !DIExpression()), !dbg !3108
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3109
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 25, !dbg !3110
  %4 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !3110
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3111
  %call1 = call i32 %4(%struct.DerivedMesh* %5), !dbg !3109
  store i32 %call1, i32* %numTessFaces, align 4, !dbg !3108
  %6 = load i32, i32* %numTessFaces, align 4, !dbg !3112
  %tobool2 = icmp ne i32 %6, 0, !dbg !3112
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !3114

if.then3:                                         ; preds = %if.then
  store %struct.MFace* null, %struct.MFace** %retval, align 8, !dbg !3115
  br label %return, !dbg !3115

if.end:                                           ; preds = %if.then
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3117
  %faceData4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 2, !dbg !3118
  %8 = load i32, i32* %numTessFaces, align 4, !dbg !3119
  %call5 = call i8* @CustomData_add_layer(%struct.CustomData* %faceData4, i32 4, i32 1, i8* null, i32 %8), !dbg !3120
  %9 = bitcast i8* %call5 to %struct.MFace*, !dbg !3120
  store %struct.MFace* %9, %struct.MFace** %mface, align 8, !dbg !3121
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3122
  %faceData6 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 2, !dbg !3123
  call void @CustomData_set_layer_flag(%struct.CustomData* %faceData6, i32 4, i32 5), !dbg !3124
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3125
  %copyTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %11, i32 0, i32 38, !dbg !3126
  %12 = load void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MFace*)** %copyTessFaceArray, align 8, !dbg !3126
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3127
  %14 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !3128
  call void %12(%struct.DerivedMesh* %13, %struct.MFace* %14), !dbg !3125
  br label %if.end7, !dbg !3129

if.end7:                                          ; preds = %if.end, %entry
  %15 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !3130
  store %struct.MFace* %15, %struct.MFace** %retval, align 8, !dbg !3131
  br label %return, !dbg !3131

return:                                           ; preds = %if.end7, %if.then3
  %16 = load %struct.MFace*, %struct.MFace** %retval, align 8, !dbg !3132
  ret %struct.MFace* %16, !dbg !3132
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.MLoop* @dm_getLoopArray(%struct.DerivedMesh* %dm) #0 !dbg !3133 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mloop = alloca %struct.MLoop*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3138, metadata !DIExpression()), !dbg !3139
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop, metadata !3140, metadata !DIExpression()), !dbg !3141
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3142
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 3, !dbg !3143
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %loopData, i32 26), !dbg !3144
  %1 = bitcast i8* %call to %struct.MLoop*, !dbg !3144
  store %struct.MLoop* %1, %struct.MLoop** %mloop, align 8, !dbg !3141
  %2 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !3145
  %tobool = icmp ne %struct.MLoop* %2, null, !dbg !3145
  br i1 %tobool, label %if.end, label %if.then, !dbg !3147

if.then:                                          ; preds = %entry
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3148
  %loopData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 3, !dbg !3150
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3151
  %getNumLoops = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 26, !dbg !3152
  %5 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumLoops, align 8, !dbg !3152
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3153
  %call2 = call i32 %5(%struct.DerivedMesh* %6), !dbg !3151
  %call3 = call i8* @CustomData_add_layer(%struct.CustomData* %loopData1, i32 26, i32 1, i8* null, i32 %call2), !dbg !3154
  %7 = bitcast i8* %call3 to %struct.MLoop*, !dbg !3154
  store %struct.MLoop* %7, %struct.MLoop** %mloop, align 8, !dbg !3155
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3156
  %loopData4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 3, !dbg !3157
  call void @CustomData_set_layer_flag(%struct.CustomData* %loopData4, i32 26, i32 5), !dbg !3158
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3159
  %copyLoopArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 39, !dbg !3160
  %10 = load void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MLoop*)** %copyLoopArray, align 8, !dbg !3160
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3161
  %12 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !3162
  call void %10(%struct.DerivedMesh* %11, %struct.MLoop* %12), !dbg !3159
  br label %if.end, !dbg !3163

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !3164
  ret %struct.MLoop* %13, !dbg !3165
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.MPoly* @dm_getPolyArray(%struct.DerivedMesh* %dm) #0 !dbg !3166 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mpoly = alloca %struct.MPoly*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3171, metadata !DIExpression()), !dbg !3172
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly, metadata !3173, metadata !DIExpression()), !dbg !3174
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3175
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 4, !dbg !3176
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %polyData, i32 25), !dbg !3177
  %1 = bitcast i8* %call to %struct.MPoly*, !dbg !3177
  store %struct.MPoly* %1, %struct.MPoly** %mpoly, align 8, !dbg !3174
  %2 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !3178
  %tobool = icmp ne %struct.MPoly* %2, null, !dbg !3178
  br i1 %tobool, label %if.end, label %if.then, !dbg !3180

if.then:                                          ; preds = %entry
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3181
  %polyData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 4, !dbg !3183
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3184
  %getNumPolys = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 27, !dbg !3185
  %5 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumPolys, align 8, !dbg !3185
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3186
  %call2 = call i32 %5(%struct.DerivedMesh* %6), !dbg !3184
  %call3 = call i8* @CustomData_add_layer(%struct.CustomData* %polyData1, i32 25, i32 1, i8* null, i32 %call2), !dbg !3187
  %7 = bitcast i8* %call3 to %struct.MPoly*, !dbg !3187
  store %struct.MPoly* %7, %struct.MPoly** %mpoly, align 8, !dbg !3188
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3189
  %polyData4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 4, !dbg !3190
  call void @CustomData_set_layer_flag(%struct.CustomData* %polyData4, i32 25, i32 5), !dbg !3191
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3192
  %copyPolyArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 40, !dbg !3193
  %10 = load void (%struct.DerivedMesh*, %struct.MPoly*)*, void (%struct.DerivedMesh*, %struct.MPoly*)** %copyPolyArray, align 8, !dbg !3193
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3194
  %12 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !3195
  call void %10(%struct.DerivedMesh* %11, %struct.MPoly* %12), !dbg !3192
  br label %if.end, !dbg !3196

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !3197
  ret %struct.MPoly* %13, !dbg !3198
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.MVert* @dm_dupVertArray(%struct.DerivedMesh* %dm) #0 !dbg !3199 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %tmp = alloca %struct.MVert*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3200, metadata !DIExpression()), !dbg !3201
  call void @llvm.dbg.declare(metadata %struct.MVert** %tmp, metadata !3202, metadata !DIExpression()), !dbg !3203
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3204
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3205
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 23, !dbg !3206
  %2 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !3206
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3207
  %call = call i32 %2(%struct.DerivedMesh* %3), !dbg !3205
  %conv = sext i32 %call to i64, !dbg !3205
  %mul = mul i64 20, %conv, !dbg !3208
  %call1 = call i8* %0(i64 %mul, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0)), !dbg !3204
  %4 = bitcast i8* %call1 to %struct.MVert*, !dbg !3204
  store %struct.MVert* %4, %struct.MVert** %tmp, align 8, !dbg !3203
  %5 = load %struct.MVert*, %struct.MVert** %tmp, align 8, !dbg !3209
  %tobool = icmp ne %struct.MVert* %5, null, !dbg !3209
  br i1 %tobool, label %if.then, label %if.end, !dbg !3211

if.then:                                          ; preds = %entry
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3212
  %copyVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 36, !dbg !3213
  %7 = load void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MVert*)** %copyVertArray, align 8, !dbg !3213
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3214
  %9 = load %struct.MVert*, %struct.MVert** %tmp, align 8, !dbg !3215
  call void %7(%struct.DerivedMesh* %8, %struct.MVert* %9), !dbg !3212
  br label %if.end, !dbg !3212

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.MVert*, %struct.MVert** %tmp, align 8, !dbg !3216
  ret %struct.MVert* %10, !dbg !3217
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.MEdge* @dm_dupEdgeArray(%struct.DerivedMesh* %dm) #0 !dbg !3218 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %tmp = alloca %struct.MEdge*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3219, metadata !DIExpression()), !dbg !3220
  call void @llvm.dbg.declare(metadata %struct.MEdge** %tmp, metadata !3221, metadata !DIExpression()), !dbg !3222
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3223
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3224
  %getNumEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 24, !dbg !3225
  %2 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumEdges, align 8, !dbg !3225
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3226
  %call = call i32 %2(%struct.DerivedMesh* %3), !dbg !3224
  %conv = sext i32 %call to i64, !dbg !3224
  %mul = mul i64 12, %conv, !dbg !3227
  %call1 = call i8* %0(i64 %mul, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0)), !dbg !3223
  %4 = bitcast i8* %call1 to %struct.MEdge*, !dbg !3223
  store %struct.MEdge* %4, %struct.MEdge** %tmp, align 8, !dbg !3222
  %5 = load %struct.MEdge*, %struct.MEdge** %tmp, align 8, !dbg !3228
  %tobool = icmp ne %struct.MEdge* %5, null, !dbg !3228
  br i1 %tobool, label %if.then, label %if.end, !dbg !3230

if.then:                                          ; preds = %entry
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3231
  %copyEdgeArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 37, !dbg !3232
  %7 = load void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MEdge*)** %copyEdgeArray, align 8, !dbg !3232
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3233
  %9 = load %struct.MEdge*, %struct.MEdge** %tmp, align 8, !dbg !3234
  call void %7(%struct.DerivedMesh* %8, %struct.MEdge* %9), !dbg !3231
  br label %if.end, !dbg !3231

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.MEdge*, %struct.MEdge** %tmp, align 8, !dbg !3235
  ret %struct.MEdge* %10, !dbg !3236
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.MFace* @dm_dupFaceArray(%struct.DerivedMesh* %dm) #0 !dbg !3237 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %tmp = alloca %struct.MFace*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3238, metadata !DIExpression()), !dbg !3239
  call void @llvm.dbg.declare(metadata %struct.MFace** %tmp, metadata !3240, metadata !DIExpression()), !dbg !3241
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3242
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3243
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 25, !dbg !3244
  %2 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !3244
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3245
  %call = call i32 %2(%struct.DerivedMesh* %3), !dbg !3243
  %conv = sext i32 %call to i64, !dbg !3243
  %mul = mul i64 20, %conv, !dbg !3246
  %call1 = call i8* %0(i64 %mul, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i64 0, i64 0)), !dbg !3242
  %4 = bitcast i8* %call1 to %struct.MFace*, !dbg !3242
  store %struct.MFace* %4, %struct.MFace** %tmp, align 8, !dbg !3241
  %5 = load %struct.MFace*, %struct.MFace** %tmp, align 8, !dbg !3247
  %tobool = icmp ne %struct.MFace* %5, null, !dbg !3247
  br i1 %tobool, label %if.then, label %if.end, !dbg !3249

if.then:                                          ; preds = %entry
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3250
  %copyTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 38, !dbg !3251
  %7 = load void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MFace*)** %copyTessFaceArray, align 8, !dbg !3251
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3252
  %9 = load %struct.MFace*, %struct.MFace** %tmp, align 8, !dbg !3253
  call void %7(%struct.DerivedMesh* %8, %struct.MFace* %9), !dbg !3250
  br label %if.end, !dbg !3250

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.MFace*, %struct.MFace** %tmp, align 8, !dbg !3254
  ret %struct.MFace* %10, !dbg !3255
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.MLoop* @dm_dupLoopArray(%struct.DerivedMesh* %dm) #0 !dbg !3256 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %tmp = alloca %struct.MLoop*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3257, metadata !DIExpression()), !dbg !3258
  call void @llvm.dbg.declare(metadata %struct.MLoop** %tmp, metadata !3259, metadata !DIExpression()), !dbg !3260
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3261
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3262
  %getNumLoops = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 26, !dbg !3263
  %2 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumLoops, align 8, !dbg !3263
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3264
  %call = call i32 %2(%struct.DerivedMesh* %3), !dbg !3262
  %conv = sext i32 %call to i64, !dbg !3262
  %mul = mul i64 8, %conv, !dbg !3265
  %call1 = call i8* %0(i64 %mul, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.19, i64 0, i64 0)), !dbg !3261
  %4 = bitcast i8* %call1 to %struct.MLoop*, !dbg !3261
  store %struct.MLoop* %4, %struct.MLoop** %tmp, align 8, !dbg !3260
  %5 = load %struct.MLoop*, %struct.MLoop** %tmp, align 8, !dbg !3266
  %tobool = icmp ne %struct.MLoop* %5, null, !dbg !3266
  br i1 %tobool, label %if.then, label %if.end, !dbg !3268

if.then:                                          ; preds = %entry
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3269
  %copyLoopArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 39, !dbg !3270
  %7 = load void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MLoop*)** %copyLoopArray, align 8, !dbg !3270
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3271
  %9 = load %struct.MLoop*, %struct.MLoop** %tmp, align 8, !dbg !3272
  call void %7(%struct.DerivedMesh* %8, %struct.MLoop* %9), !dbg !3269
  br label %if.end, !dbg !3269

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.MLoop*, %struct.MLoop** %tmp, align 8, !dbg !3273
  ret %struct.MLoop* %10, !dbg !3274
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.MPoly* @dm_dupPolyArray(%struct.DerivedMesh* %dm) #0 !dbg !3275 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %tmp = alloca %struct.MPoly*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3276, metadata !DIExpression()), !dbg !3277
  call void @llvm.dbg.declare(metadata %struct.MPoly** %tmp, metadata !3278, metadata !DIExpression()), !dbg !3279
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3280
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3281
  %getNumPolys = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 27, !dbg !3282
  %2 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumPolys, align 8, !dbg !3282
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3283
  %call = call i32 %2(%struct.DerivedMesh* %3), !dbg !3281
  %conv = sext i32 %call to i64, !dbg !3281
  %mul = mul i64 12, %conv, !dbg !3284
  %call1 = call i8* %0(i64 %mul, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i64 0, i64 0)), !dbg !3280
  %4 = bitcast i8* %call1 to %struct.MPoly*, !dbg !3280
  store %struct.MPoly* %4, %struct.MPoly** %tmp, align 8, !dbg !3279
  %5 = load %struct.MPoly*, %struct.MPoly** %tmp, align 8, !dbg !3285
  %tobool = icmp ne %struct.MPoly* %5, null, !dbg !3285
  br i1 %tobool, label %if.then, label %if.end, !dbg !3287

if.then:                                          ; preds = %entry
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3288
  %copyPolyArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 40, !dbg !3289
  %7 = load void (%struct.DerivedMesh*, %struct.MPoly*)*, void (%struct.DerivedMesh*, %struct.MPoly*)** %copyPolyArray, align 8, !dbg !3289
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3290
  %9 = load %struct.MPoly*, %struct.MPoly** %tmp, align 8, !dbg !3291
  call void %7(%struct.DerivedMesh* %8, %struct.MPoly* %9), !dbg !3288
  br label %if.end, !dbg !3288

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.MPoly*, %struct.MPoly** %tmp, align 8, !dbg !3292
  ret %struct.MPoly* %10, !dbg !3293
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CustomData* @dm_getVertCData(%struct.DerivedMesh* %dm) #0 !dbg !3294 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3295, metadata !DIExpression()), !dbg !3296
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3297
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 0, !dbg !3298
  ret %struct.CustomData* %vertData, !dbg !3299
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CustomData* @dm_getEdgeCData(%struct.DerivedMesh* %dm) #0 !dbg !3300 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3301, metadata !DIExpression()), !dbg !3302
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3303
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 1, !dbg !3304
  ret %struct.CustomData* %edgeData, !dbg !3305
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CustomData* @dm_getTessFaceCData(%struct.DerivedMesh* %dm) #0 !dbg !3306 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3307, metadata !DIExpression()), !dbg !3308
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3309
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 2, !dbg !3310
  ret %struct.CustomData* %faceData, !dbg !3311
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CustomData* @dm_getLoopCData(%struct.DerivedMesh* %dm) #0 !dbg !3312 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3313, metadata !DIExpression()), !dbg !3314
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3315
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 3, !dbg !3316
  ret %struct.CustomData* %loopData, !dbg !3317
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CustomData* @dm_getPolyCData(%struct.DerivedMesh* %dm) #0 !dbg !3318 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3319, metadata !DIExpression()), !dbg !3320
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3321
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 4, !dbg !3322
  ret %struct.CustomData* %polyData, !dbg !3323
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @DM_get_vert_data(%struct.DerivedMesh* %dm, i32 %index, i32 %type) #0 !dbg !3324 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3325, metadata !DIExpression()), !dbg !3326
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !3327, metadata !DIExpression()), !dbg !3328
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3329, metadata !DIExpression()), !dbg !3330
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3331
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 0, !dbg !3332
  %1 = load i32, i32* %index.addr, align 4, !dbg !3333
  %2 = load i32, i32* %type.addr, align 4, !dbg !3334
  %call = call i8* @CustomData_get(%struct.CustomData* %vertData, i32 %1, i32 %2), !dbg !3335
  ret i8* %call, !dbg !3336
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @DM_get_edge_data(%struct.DerivedMesh* %dm, i32 %index, i32 %type) #0 !dbg !3337 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3338, metadata !DIExpression()), !dbg !3339
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !3340, metadata !DIExpression()), !dbg !3341
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3342, metadata !DIExpression()), !dbg !3343
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3344
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 1, !dbg !3345
  %1 = load i32, i32* %index.addr, align 4, !dbg !3346
  %2 = load i32, i32* %type.addr, align 4, !dbg !3347
  %call = call i8* @CustomData_get(%struct.CustomData* %edgeData, i32 %1, i32 %2), !dbg !3348
  ret i8* %call, !dbg !3349
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @DM_get_tessface_data(%struct.DerivedMesh* %dm, i32 %index, i32 %type) #0 !dbg !3350 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3351, metadata !DIExpression()), !dbg !3352
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !3353, metadata !DIExpression()), !dbg !3354
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3355, metadata !DIExpression()), !dbg !3356
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3357
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 2, !dbg !3358
  %1 = load i32, i32* %index.addr, align 4, !dbg !3359
  %2 = load i32, i32* %type.addr, align 4, !dbg !3360
  %call = call i8* @CustomData_get(%struct.CustomData* %faceData, i32 %1, i32 %2), !dbg !3361
  ret i8* %call, !dbg !3362
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @DM_get_poly_data(%struct.DerivedMesh* %dm, i32 %index, i32 %type) #0 !dbg !3363 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3364, metadata !DIExpression()), !dbg !3365
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !3366, metadata !DIExpression()), !dbg !3367
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3368, metadata !DIExpression()), !dbg !3369
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3370
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 4, !dbg !3371
  %1 = load i32, i32* %index.addr, align 4, !dbg !3372
  %2 = load i32, i32* %type.addr, align 4, !dbg !3373
  %call = call i8* @CustomData_get(%struct.CustomData* %polyData, i32 %1, i32 %2), !dbg !3374
  ret i8* %call, !dbg !3375
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @DM_get_vert_data_layer(%struct.DerivedMesh* %dm, i32 %type) #0 !dbg !3376 {
entry:
  %retval = alloca i8*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %type.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3377, metadata !DIExpression()), !dbg !3378
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3379, metadata !DIExpression()), !dbg !3380
  %0 = load i32, i32* %type.addr, align 4, !dbg !3381
  %cmp = icmp eq i32 %0, 0, !dbg !3383
  br i1 %cmp, label %if.then, label %if.end, !dbg !3384

if.then:                                          ; preds = %entry
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3385
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 31, !dbg !3386
  %2 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !3386
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3387
  %call = call %struct.MVert* %2(%struct.DerivedMesh* %3), !dbg !3385
  %4 = bitcast %struct.MVert* %call to i8*, !dbg !3385
  store i8* %4, i8** %retval, align 8, !dbg !3388
  br label %return, !dbg !3388

if.end:                                           ; preds = %entry
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3389
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 0, !dbg !3390
  %6 = load i32, i32* %type.addr, align 4, !dbg !3391
  %call1 = call i8* @CustomData_get_layer(%struct.CustomData* %vertData, i32 %6), !dbg !3392
  store i8* %call1, i8** %retval, align 8, !dbg !3393
  br label %return, !dbg !3393

return:                                           ; preds = %if.end, %if.then
  %7 = load i8*, i8** %retval, align 8, !dbg !3394
  ret i8* %7, !dbg !3394
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @DM_get_edge_data_layer(%struct.DerivedMesh* %dm, i32 %type) #0 !dbg !3395 {
entry:
  %retval = alloca i8*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %type.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3396, metadata !DIExpression()), !dbg !3397
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3398, metadata !DIExpression()), !dbg !3399
  %0 = load i32, i32* %type.addr, align 4, !dbg !3400
  %cmp = icmp eq i32 %0, 3, !dbg !3402
  br i1 %cmp, label %if.then, label %if.end, !dbg !3403

if.then:                                          ; preds = %entry
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3404
  %getEdgeArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 32, !dbg !3405
  %2 = load %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)** %getEdgeArray, align 8, !dbg !3405
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3406
  %call = call %struct.MEdge* %2(%struct.DerivedMesh* %3), !dbg !3404
  %4 = bitcast %struct.MEdge* %call to i8*, !dbg !3404
  store i8* %4, i8** %retval, align 8, !dbg !3407
  br label %return, !dbg !3407

if.end:                                           ; preds = %entry
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3408
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 1, !dbg !3409
  %6 = load i32, i32* %type.addr, align 4, !dbg !3410
  %call1 = call i8* @CustomData_get_layer(%struct.CustomData* %edgeData, i32 %6), !dbg !3411
  store i8* %call1, i8** %retval, align 8, !dbg !3412
  br label %return, !dbg !3412

return:                                           ; preds = %if.end, %if.then
  %7 = load i8*, i8** %retval, align 8, !dbg !3413
  ret i8* %7, !dbg !3413
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %dm, i32 %type) #0 !dbg !3414 {
entry:
  %retval = alloca i8*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %type.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3415, metadata !DIExpression()), !dbg !3416
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3417, metadata !DIExpression()), !dbg !3418
  %0 = load i32, i32* %type.addr, align 4, !dbg !3419
  %cmp = icmp eq i32 %0, 4, !dbg !3421
  br i1 %cmp, label %if.then, label %if.end, !dbg !3422

if.then:                                          ; preds = %entry
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3423
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 33, !dbg !3424
  %2 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !3424
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3425
  %call = call %struct.MFace* %2(%struct.DerivedMesh* %3), !dbg !3423
  %4 = bitcast %struct.MFace* %call to i8*, !dbg !3423
  store i8* %4, i8** %retval, align 8, !dbg !3426
  br label %return, !dbg !3426

if.end:                                           ; preds = %entry
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3427
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 2, !dbg !3428
  %6 = load i32, i32* %type.addr, align 4, !dbg !3429
  %call1 = call i8* @CustomData_get_layer(%struct.CustomData* %faceData, i32 %6), !dbg !3430
  store i8* %call1, i8** %retval, align 8, !dbg !3431
  br label %return, !dbg !3431

return:                                           ; preds = %if.end, %if.then
  %7 = load i8*, i8** %retval, align 8, !dbg !3432
  ret i8* %7, !dbg !3432
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @DM_get_poly_data_layer(%struct.DerivedMesh* %dm, i32 %type) #0 !dbg !3433 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %type.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3434, metadata !DIExpression()), !dbg !3435
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3436, metadata !DIExpression()), !dbg !3437
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3438
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 4, !dbg !3439
  %1 = load i32, i32* %type.addr, align 4, !dbg !3440
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %polyData, i32 %1), !dbg !3441
  ret i8* %call, !dbg !3442
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @DM_get_loop_data_layer(%struct.DerivedMesh* %dm, i32 %type) #0 !dbg !3443 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %type.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3444, metadata !DIExpression()), !dbg !3445
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3446, metadata !DIExpression()), !dbg !3447
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3448
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 3, !dbg !3449
  %1 = load i32, i32* %type.addr, align 4, !dbg !3450
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %loopData, i32 %1), !dbg !3451
  ret i8* %call, !dbg !3452
}

declare dso_local void @bvhcache_init(%struct.LinkNode**) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_init(%struct.DerivedMesh* %dm, i32 %type, i32 %numVerts, i32 %numEdges, i32 %numTessFaces, i32 %numLoops, i32 %numPolys) #0 !dbg !3453 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %type.addr = alloca i32, align 4
  %numVerts.addr = alloca i32, align 4
  %numEdges.addr = alloca i32, align 4
  %numTessFaces.addr = alloca i32, align 4
  %numLoops.addr = alloca i32, align 4
  %numPolys.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3456, metadata !DIExpression()), !dbg !3457
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3458, metadata !DIExpression()), !dbg !3459
  store i32 %numVerts, i32* %numVerts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numVerts.addr, metadata !3460, metadata !DIExpression()), !dbg !3461
  store i32 %numEdges, i32* %numEdges.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numEdges.addr, metadata !3462, metadata !DIExpression()), !dbg !3463
  store i32 %numTessFaces, i32* %numTessFaces.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numTessFaces.addr, metadata !3464, metadata !DIExpression()), !dbg !3465
  store i32 %numLoops, i32* %numLoops.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numLoops.addr, metadata !3466, metadata !DIExpression()), !dbg !3467
  store i32 %numPolys, i32* %numPolys.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numPolys.addr, metadata !3468, metadata !DIExpression()), !dbg !3469
  %0 = load i32, i32* %type.addr, align 4, !dbg !3470
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3471
  %type1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 14, !dbg !3472
  store i32 %0, i32* %type1, align 8, !dbg !3473
  %2 = load i32, i32* %numVerts.addr, align 4, !dbg !3474
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3475
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 5, !dbg !3476
  store i32 %2, i32* %numVertData, align 8, !dbg !3477
  %4 = load i32, i32* %numEdges.addr, align 4, !dbg !3478
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3479
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 6, !dbg !3480
  store i32 %4, i32* %numEdgeData, align 4, !dbg !3481
  %6 = load i32, i32* %numTessFaces.addr, align 4, !dbg !3482
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3483
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 7, !dbg !3484
  store i32 %6, i32* %numTessFaceData, align 8, !dbg !3485
  %8 = load i32, i32* %numLoops.addr, align 4, !dbg !3486
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3487
  %numLoopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 8, !dbg !3488
  store i32 %8, i32* %numLoopData, align 4, !dbg !3489
  %10 = load i32, i32* %numPolys.addr, align 4, !dbg !3490
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3491
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %11, i32 0, i32 9, !dbg !3492
  store i32 %10, i32* %numPolyData, align 8, !dbg !3493
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3494
  call void @DM_init_funcs(%struct.DerivedMesh* %12), !dbg !3495
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3496
  %needsFree = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 10, !dbg !3497
  store i32 1, i32* %needsFree, align 4, !dbg !3498
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3499
  %auto_bump_scale = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %14, i32 0, i32 15, !dbg !3500
  store float -1.000000e+00, float* %auto_bump_scale, align 4, !dbg !3501
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3502
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 16, !dbg !3503
  store i32 0, i32* %dirty, align 8, !dbg !3504
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3505
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %16, i32 0, i32 0, !dbg !3506
  %typemap = getelementptr inbounds %struct.CustomData, %struct.CustomData* %vertData, i32 0, i32 1, !dbg !3507
  %arraydecay = getelementptr inbounds [41 x i32], [41 x i32]* %typemap, i64 0, i64 0, !dbg !3505
  call void @fill_vn_i(i32* %arraydecay, i32 41, i32 -1), !dbg !3508
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3509
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %17, i32 0, i32 1, !dbg !3510
  %typemap2 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %edgeData, i32 0, i32 1, !dbg !3511
  %arraydecay3 = getelementptr inbounds [41 x i32], [41 x i32]* %typemap2, i64 0, i64 0, !dbg !3509
  call void @fill_vn_i(i32* %arraydecay3, i32 41, i32 -1), !dbg !3512
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3513
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %18, i32 0, i32 2, !dbg !3514
  %typemap4 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %faceData, i32 0, i32 1, !dbg !3515
  %arraydecay5 = getelementptr inbounds [41 x i32], [41 x i32]* %typemap4, i64 0, i64 0, !dbg !3513
  call void @fill_vn_i(i32* %arraydecay5, i32 41, i32 -1), !dbg !3516
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3517
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %19, i32 0, i32 3, !dbg !3518
  %typemap6 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %loopData, i32 0, i32 1, !dbg !3519
  %arraydecay7 = getelementptr inbounds [41 x i32], [41 x i32]* %typemap6, i64 0, i64 0, !dbg !3517
  call void @fill_vn_i(i32* %arraydecay7, i32 41, i32 -1), !dbg !3520
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3521
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %20, i32 0, i32 4, !dbg !3522
  %typemap8 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %polyData, i32 0, i32 1, !dbg !3523
  %arraydecay9 = getelementptr inbounds [41 x i32], [41 x i32]* %typemap8, i64 0, i64 0, !dbg !3521
  call void @fill_vn_i(i32* %arraydecay9, i32 41, i32 -1), !dbg !3524
  ret void, !dbg !3525
}

declare dso_local void @fill_vn_i(i32*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_from_template(%struct.DerivedMesh* %dm, %struct.DerivedMesh* %source, i32 %type, i32 %numVerts, i32 %numEdges, i32 %numTessFaces, i32 %numLoops, i32 %numPolys) #0 !dbg !3526 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %source.addr = alloca %struct.DerivedMesh*, align 8
  %type.addr = alloca i32, align 4
  %numVerts.addr = alloca i32, align 4
  %numEdges.addr = alloca i32, align 4
  %numTessFaces.addr = alloca i32, align 4
  %numLoops.addr = alloca i32, align 4
  %numPolys.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3529, metadata !DIExpression()), !dbg !3530
  store %struct.DerivedMesh* %source, %struct.DerivedMesh** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %source.addr, metadata !3531, metadata !DIExpression()), !dbg !3532
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3533, metadata !DIExpression()), !dbg !3534
  store i32 %numVerts, i32* %numVerts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numVerts.addr, metadata !3535, metadata !DIExpression()), !dbg !3536
  store i32 %numEdges, i32* %numEdges.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numEdges.addr, metadata !3537, metadata !DIExpression()), !dbg !3538
  store i32 %numTessFaces, i32* %numTessFaces.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numTessFaces.addr, metadata !3539, metadata !DIExpression()), !dbg !3540
  store i32 %numLoops, i32* %numLoops.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numLoops.addr, metadata !3541, metadata !DIExpression()), !dbg !3542
  store i32 %numPolys, i32* %numPolys.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numPolys.addr, metadata !3543, metadata !DIExpression()), !dbg !3544
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3545
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 0, !dbg !3546
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3547
  %vertData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 0, !dbg !3548
  %2 = load i64, i64* @CD_MASK_DERIVEDMESH, align 8, !dbg !3549
  %3 = load i32, i32* %numVerts.addr, align 4, !dbg !3550
  call void @CustomData_copy(%struct.CustomData* %vertData, %struct.CustomData* %vertData1, i64 %2, i32 1, i32 %3), !dbg !3551
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3552
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 1, !dbg !3553
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3554
  %edgeData2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 1, !dbg !3555
  %6 = load i64, i64* @CD_MASK_DERIVEDMESH, align 8, !dbg !3556
  %7 = load i32, i32* %numEdges.addr, align 4, !dbg !3557
  call void @CustomData_copy(%struct.CustomData* %edgeData, %struct.CustomData* %edgeData2, i64 %6, i32 1, i32 %7), !dbg !3558
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3559
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 2, !dbg !3560
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3561
  %faceData3 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 2, !dbg !3562
  %10 = load i64, i64* @CD_MASK_DERIVEDMESH, align 8, !dbg !3563
  %11 = load i32, i32* %numTessFaces.addr, align 4, !dbg !3564
  call void @CustomData_copy(%struct.CustomData* %faceData, %struct.CustomData* %faceData3, i64 %10, i32 1, i32 %11), !dbg !3565
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3566
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 3, !dbg !3567
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3568
  %loopData4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 3, !dbg !3569
  %14 = load i64, i64* @CD_MASK_DERIVEDMESH, align 8, !dbg !3570
  %15 = load i32, i32* %numLoops.addr, align 4, !dbg !3571
  call void @CustomData_copy(%struct.CustomData* %loopData, %struct.CustomData* %loopData4, i64 %14, i32 1, i32 %15), !dbg !3572
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3573
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %16, i32 0, i32 4, !dbg !3574
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3575
  %polyData5 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %17, i32 0, i32 4, !dbg !3576
  %18 = load i64, i64* @CD_MASK_DERIVEDMESH, align 8, !dbg !3577
  %19 = load i32, i32* %numPolys.addr, align 4, !dbg !3578
  call void @CustomData_copy(%struct.CustomData* %polyData, %struct.CustomData* %polyData5, i64 %18, i32 1, i32 %19), !dbg !3579
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3580
  %cd_flag = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %20, i32 0, i32 19, !dbg !3581
  %21 = load i8, i8* %cd_flag, align 8, !dbg !3581
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3582
  %cd_flag6 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %22, i32 0, i32 19, !dbg !3583
  store i8 %21, i8* %cd_flag6, align 8, !dbg !3584
  %23 = load i32, i32* %type.addr, align 4, !dbg !3585
  %24 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3586
  %type7 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %24, i32 0, i32 14, !dbg !3587
  store i32 %23, i32* %type7, align 8, !dbg !3588
  %25 = load i32, i32* %numVerts.addr, align 4, !dbg !3589
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3590
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %26, i32 0, i32 5, !dbg !3591
  store i32 %25, i32* %numVertData, align 8, !dbg !3592
  %27 = load i32, i32* %numEdges.addr, align 4, !dbg !3593
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3594
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %28, i32 0, i32 6, !dbg !3595
  store i32 %27, i32* %numEdgeData, align 4, !dbg !3596
  %29 = load i32, i32* %numTessFaces.addr, align 4, !dbg !3597
  %30 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3598
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %30, i32 0, i32 7, !dbg !3599
  store i32 %29, i32* %numTessFaceData, align 8, !dbg !3600
  %31 = load i32, i32* %numLoops.addr, align 4, !dbg !3601
  %32 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3602
  %numLoopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %32, i32 0, i32 8, !dbg !3603
  store i32 %31, i32* %numLoopData, align 4, !dbg !3604
  %33 = load i32, i32* %numPolys.addr, align 4, !dbg !3605
  %34 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3606
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %34, i32 0, i32 9, !dbg !3607
  store i32 %33, i32* %numPolyData, align 8, !dbg !3608
  %35 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3609
  call void @DM_init_funcs(%struct.DerivedMesh* %35), !dbg !3610
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3611
  %needsFree = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %36, i32 0, i32 10, !dbg !3612
  store i32 1, i32* %needsFree, align 4, !dbg !3613
  %37 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3614
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %37, i32 0, i32 16, !dbg !3615
  store i32 0, i32* %dirty, align 8, !dbg !3616
  ret void, !dbg !3617
}

declare dso_local void @CustomData_copy(%struct.CustomData*, %struct.CustomData*, i64, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DM_release(%struct.DerivedMesh* %dm) #0 !dbg !3618 {
entry:
  %retval = alloca i32, align 4
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3619, metadata !DIExpression()), !dbg !3620
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3621
  %needsFree = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 10, !dbg !3623
  %1 = load i32, i32* %needsFree, align 4, !dbg !3623
  %tobool = icmp ne i32 %1, 0, !dbg !3621
  br i1 %tobool, label %if.then, label %if.else, !dbg !3624

if.then:                                          ; preds = %entry
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3625
  %bvhCache = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 12, !dbg !3627
  call void @bvhcache_free(%struct.LinkNode** %bvhCache), !dbg !3628
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3629
  call void @GPU_drawobject_free(%struct.DerivedMesh* %3), !dbg !3630
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3631
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 0, !dbg !3632
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3633
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 5, !dbg !3634
  %6 = load i32, i32* %numVertData, align 8, !dbg !3634
  call void @CustomData_free(%struct.CustomData* %vertData, i32 %6), !dbg !3635
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3636
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 1, !dbg !3637
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3638
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 6, !dbg !3639
  %9 = load i32, i32* %numEdgeData, align 4, !dbg !3639
  call void @CustomData_free(%struct.CustomData* %edgeData, i32 %9), !dbg !3640
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3641
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 2, !dbg !3642
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3643
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %11, i32 0, i32 7, !dbg !3644
  %12 = load i32, i32* %numTessFaceData, align 8, !dbg !3644
  call void @CustomData_free(%struct.CustomData* %faceData, i32 %12), !dbg !3645
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3646
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 3, !dbg !3647
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3648
  %numLoopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %14, i32 0, i32 8, !dbg !3649
  %15 = load i32, i32* %numLoopData, align 4, !dbg !3649
  call void @CustomData_free(%struct.CustomData* %loopData, i32 %15), !dbg !3650
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3651
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %16, i32 0, i32 4, !dbg !3652
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3653
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %17, i32 0, i32 9, !dbg !3654
  %18 = load i32, i32* %numPolyData, align 8, !dbg !3654
  call void @CustomData_free(%struct.CustomData* %polyData, i32 %18), !dbg !3655
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3656
  %mat = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %19, i32 0, i32 18, !dbg !3658
  %20 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !3658
  %tobool1 = icmp ne %struct.Material** %20, null, !dbg !3656
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !3659

if.then2:                                         ; preds = %if.then
  %21 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3660
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3662
  %mat3 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %22, i32 0, i32 18, !dbg !3663
  %23 = load %struct.Material**, %struct.Material*** %mat3, align 8, !dbg !3663
  %24 = bitcast %struct.Material** %23 to i8*, !dbg !3662
  call void %21(i8* %24), !dbg !3660
  %25 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3664
  %mat4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %25, i32 0, i32 18, !dbg !3665
  store %struct.Material** null, %struct.Material*** %mat4, align 8, !dbg !3666
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3667
  %totmat = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %26, i32 0, i32 17, !dbg !3668
  store i32 0, i32* %totmat, align 4, !dbg !3669
  br label %if.end, !dbg !3670

if.end:                                           ; preds = %if.then2, %if.then
  store i32 1, i32* %retval, align 4, !dbg !3671
  br label %return, !dbg !3671

if.else:                                          ; preds = %entry
  %27 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3672
  %vertData5 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %27, i32 0, i32 0, !dbg !3674
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3675
  %numVertData6 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %28, i32 0, i32 5, !dbg !3676
  %29 = load i32, i32* %numVertData6, align 8, !dbg !3676
  call void @CustomData_free_temporary(%struct.CustomData* %vertData5, i32 %29), !dbg !3677
  %30 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3678
  %edgeData7 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %30, i32 0, i32 1, !dbg !3679
  %31 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3680
  %numEdgeData8 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %31, i32 0, i32 6, !dbg !3681
  %32 = load i32, i32* %numEdgeData8, align 4, !dbg !3681
  call void @CustomData_free_temporary(%struct.CustomData* %edgeData7, i32 %32), !dbg !3682
  %33 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3683
  %faceData9 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %33, i32 0, i32 2, !dbg !3684
  %34 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3685
  %numTessFaceData10 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %34, i32 0, i32 7, !dbg !3686
  %35 = load i32, i32* %numTessFaceData10, align 8, !dbg !3686
  call void @CustomData_free_temporary(%struct.CustomData* %faceData9, i32 %35), !dbg !3687
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3688
  %loopData11 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %36, i32 0, i32 3, !dbg !3689
  %37 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3690
  %numLoopData12 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %37, i32 0, i32 8, !dbg !3691
  %38 = load i32, i32* %numLoopData12, align 4, !dbg !3691
  call void @CustomData_free_temporary(%struct.CustomData* %loopData11, i32 %38), !dbg !3692
  %39 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3693
  %polyData13 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %39, i32 0, i32 4, !dbg !3694
  %40 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3695
  %numPolyData14 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %40, i32 0, i32 9, !dbg !3696
  %41 = load i32, i32* %numPolyData14, align 8, !dbg !3696
  call void @CustomData_free_temporary(%struct.CustomData* %polyData13, i32 %41), !dbg !3697
  store i32 0, i32* %retval, align 4, !dbg !3698
  br label %return, !dbg !3698

return:                                           ; preds = %if.else, %if.end
  %42 = load i32, i32* %retval, align 4, !dbg !3699
  ret i32 %42, !dbg !3699
}

declare dso_local void @bvhcache_free(%struct.LinkNode**) #2

declare dso_local void @GPU_drawobject_free(%struct.DerivedMesh*) #2

declare dso_local void @CustomData_free(%struct.CustomData*, i32) #2

declare dso_local void @CustomData_free_temporary(%struct.CustomData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_DupPolys(%struct.DerivedMesh* %source, %struct.DerivedMesh* %target) #0 !dbg !3700 {
entry:
  %source.addr = alloca %struct.DerivedMesh*, align 8
  %target.addr = alloca %struct.DerivedMesh*, align 8
  %mpoly = alloca %struct.MPoly*, align 8
  %mloop = alloca %struct.MLoop*, align 8
  store %struct.DerivedMesh* %source, %struct.DerivedMesh** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %source.addr, metadata !3703, metadata !DIExpression()), !dbg !3704
  store %struct.DerivedMesh* %target, %struct.DerivedMesh** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %target.addr, metadata !3705, metadata !DIExpression()), !dbg !3706
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %target.addr, align 8, !dbg !3707
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 3, !dbg !3708
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3709
  %numLoopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 8, !dbg !3710
  %2 = load i32, i32* %numLoopData, align 4, !dbg !3710
  call void @CustomData_free(%struct.CustomData* %loopData, i32 %2), !dbg !3711
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %target.addr, align 8, !dbg !3712
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 4, !dbg !3713
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3714
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 9, !dbg !3715
  %5 = load i32, i32* %numPolyData, align 8, !dbg !3715
  call void @CustomData_free(%struct.CustomData* %polyData, i32 %5), !dbg !3716
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3717
  %loopData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 3, !dbg !3718
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %target.addr, align 8, !dbg !3719
  %loopData2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 3, !dbg !3720
  %8 = load i64, i64* @CD_MASK_DERIVEDMESH, align 8, !dbg !3721
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3722
  %numLoopData3 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 8, !dbg !3723
  %10 = load i32, i32* %numLoopData3, align 4, !dbg !3723
  call void @CustomData_copy(%struct.CustomData* %loopData1, %struct.CustomData* %loopData2, i64 %8, i32 4, i32 %10), !dbg !3724
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3725
  %polyData4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %11, i32 0, i32 4, !dbg !3726
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %target.addr, align 8, !dbg !3727
  %polyData5 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 4, !dbg !3728
  %13 = load i64, i64* @CD_MASK_DERIVEDMESH, align 8, !dbg !3729
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3730
  %numPolyData6 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %14, i32 0, i32 9, !dbg !3731
  %15 = load i32, i32* %numPolyData6, align 8, !dbg !3731
  call void @CustomData_copy(%struct.CustomData* %polyData4, %struct.CustomData* %polyData5, i64 %13, i32 4, i32 %15), !dbg !3732
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3733
  %numLoopData7 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %16, i32 0, i32 8, !dbg !3734
  %17 = load i32, i32* %numLoopData7, align 4, !dbg !3734
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %target.addr, align 8, !dbg !3735
  %numLoopData8 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %18, i32 0, i32 8, !dbg !3736
  store i32 %17, i32* %numLoopData8, align 4, !dbg !3737
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3738
  %numPolyData9 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %19, i32 0, i32 9, !dbg !3739
  %20 = load i32, i32* %numPolyData9, align 8, !dbg !3739
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %target.addr, align 8, !dbg !3740
  %numPolyData10 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %21, i32 0, i32 9, !dbg !3741
  store i32 %20, i32* %numPolyData10, align 8, !dbg !3742
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %target.addr, align 8, !dbg !3743
  %polyData11 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %22, i32 0, i32 4, !dbg !3745
  %call = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %polyData11, i32 25), !dbg !3746
  %tobool = icmp ne i8 %call, 0, !dbg !3746
  br i1 %tobool, label %if.end, label %if.then, !dbg !3747

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly, metadata !3748, metadata !DIExpression()), !dbg !3750
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop, metadata !3751, metadata !DIExpression()), !dbg !3752
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3753
  %dupLoopArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %23, i32 0, i32 44, !dbg !3754
  %24 = load %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)** %dupLoopArray, align 8, !dbg !3754
  %25 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3755
  %call12 = call %struct.MLoop* %24(%struct.DerivedMesh* %25), !dbg !3753
  store %struct.MLoop* %call12, %struct.MLoop** %mloop, align 8, !dbg !3756
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3757
  %dupPolyArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %26, i32 0, i32 45, !dbg !3758
  %27 = load %struct.MPoly* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)** %dupPolyArray, align 8, !dbg !3758
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3759
  %call13 = call %struct.MPoly* %27(%struct.DerivedMesh* %28), !dbg !3757
  store %struct.MPoly* %call13, %struct.MPoly** %mpoly, align 8, !dbg !3760
  %29 = load %struct.DerivedMesh*, %struct.DerivedMesh** %target.addr, align 8, !dbg !3761
  %loopData14 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %29, i32 0, i32 3, !dbg !3762
  %30 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !3763
  %31 = bitcast %struct.MLoop* %30 to i8*, !dbg !3763
  %32 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3764
  %numLoopData15 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %32, i32 0, i32 8, !dbg !3765
  %33 = load i32, i32* %numLoopData15, align 4, !dbg !3765
  %call16 = call i8* @CustomData_add_layer(%struct.CustomData* %loopData14, i32 26, i32 0, i8* %31, i32 %33), !dbg !3766
  %34 = load %struct.DerivedMesh*, %struct.DerivedMesh** %target.addr, align 8, !dbg !3767
  %polyData17 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %34, i32 0, i32 4, !dbg !3768
  %35 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !3769
  %36 = bitcast %struct.MPoly* %35 to i8*, !dbg !3769
  %37 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !3770
  %numPolyData18 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %37, i32 0, i32 9, !dbg !3771
  %38 = load i32, i32* %numPolyData18, align 8, !dbg !3771
  %call19 = call i8* @CustomData_add_layer(%struct.CustomData* %polyData17, i32 25, i32 0, i8* %36, i32 %38), !dbg !3772
  br label %if.end, !dbg !3773

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3774
}

declare dso_local zeroext i8 @CustomData_has_layer(%struct.CustomData*, i32) #2

declare dso_local i8* @CustomData_add_layer(%struct.CustomData*, i32, i32, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_ensure_normals(%struct.DerivedMesh* %dm) #0 !dbg !3775 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3776, metadata !DIExpression()), !dbg !3777
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3778
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 16, !dbg !3780
  %1 = load i32, i32* %dirty, align 8, !dbg !3780
  %and = and i32 %1, 4, !dbg !3781
  %tobool = icmp ne i32 %and, 0, !dbg !3781
  br i1 %tobool, label %if.then, label %if.end, !dbg !3782

if.then:                                          ; preds = %entry
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3783
  %calcNormals = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 20, !dbg !3785
  %calcNormals1 = bitcast {}** %calcNormals to void (%struct.DerivedMesh*)**, !dbg !3785
  %3 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %calcNormals1, align 8, !dbg !3785
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3786
  call void %3(%struct.DerivedMesh* %4), !dbg !3783
  br label %if.end, !dbg !3787

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3788
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_ensure_tessface(%struct.DerivedMesh* %dm) #0 !dbg !3789 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %numTessFaces = alloca i32, align 4
  %numPolys = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3790, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.declare(metadata i32* %numTessFaces, metadata !3792, metadata !DIExpression()), !dbg !3794
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3795
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 25, !dbg !3796
  %1 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !3796
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3797
  %call = call i32 %1(%struct.DerivedMesh* %2), !dbg !3795
  store i32 %call, i32* %numTessFaces, align 4, !dbg !3794
  call void @llvm.dbg.declare(metadata i32* %numPolys, metadata !3798, metadata !DIExpression()), !dbg !3799
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3800
  %getNumPolys = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 27, !dbg !3801
  %4 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumPolys, align 8, !dbg !3801
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3802
  %call1 = call i32 %4(%struct.DerivedMesh* %5), !dbg !3800
  store i32 %call1, i32* %numPolys, align 4, !dbg !3799
  %6 = load i32, i32* %numTessFaces, align 4, !dbg !3803
  %cmp = icmp eq i32 %6, 0, !dbg !3805
  br i1 %cmp, label %land.lhs.true, label %if.else9, !dbg !3806

land.lhs.true:                                    ; preds = %entry
  %7 = load i32, i32* %numPolys, align 4, !dbg !3807
  %cmp2 = icmp ne i32 %7, 0, !dbg !3808
  br i1 %cmp2, label %if.then, label %if.else9, !dbg !3809

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3810
  %recalcTessellation = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 22, !dbg !3812
  %recalcTessellation3 = bitcast {}** %recalcTessellation to void (%struct.DerivedMesh*)**, !dbg !3812
  %9 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %recalcTessellation3, align 8, !dbg !3812
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3813
  call void %9(%struct.DerivedMesh* %10), !dbg !3810
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3814
  %getNumTessFaces4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %11, i32 0, i32 25, !dbg !3816
  %12 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces4, align 8, !dbg !3816
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3817
  %call5 = call i32 %12(%struct.DerivedMesh* %13), !dbg !3814
  %cmp6 = icmp ne i32 %call5, 0, !dbg !3818
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !3819

if.then7:                                         ; preds = %if.then
  br label %if.end, !dbg !3820

if.else:                                          ; preds = %if.then
  %14 = load i32, i32* %numPolys, align 4, !dbg !3822
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3824
  %type = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 14, !dbg !3825
  %16 = load i32, i32* %type, align 8, !dbg !3825
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.DM_ensure_tessface, i64 0, i64 0), i32 %14, i32 %16), !dbg !3826
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  br label %if.end12, !dbg !3827

if.else9:                                         ; preds = %land.lhs.true, %entry
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3828
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %17, i32 0, i32 16, !dbg !3830
  %18 = load i32, i32* %dirty, align 8, !dbg !3830
  %and = and i32 %18, 1, !dbg !3831
  %tobool = icmp ne i32 %and, 0, !dbg !3831
  br i1 %tobool, label %if.then10, label %if.end11, !dbg !3832

if.then10:                                        ; preds = %if.else9
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3833
  call void @DM_update_tessface_data(%struct.DerivedMesh* %19), !dbg !3835
  br label %if.end11, !dbg !3836

if.end11:                                         ; preds = %if.then10, %if.else9
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3837
  %dirty13 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %20, i32 0, i32 16, !dbg !3838
  %21 = load i32, i32* %dirty13, align 8, !dbg !3839
  %and14 = and i32 %21, -2, !dbg !3839
  store i32 %and14, i32* %dirty13, align 8, !dbg !3839
  ret void, !dbg !3840
}

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_update_tessface_data(%struct.DerivedMesh* %dm) #0 !dbg !3841 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mf = alloca %struct.MFace*, align 8
  %mface = alloca %struct.MFace*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %ml = alloca %struct.MLoop*, align 8
  %fdata = alloca %struct.CustomData*, align 8
  %pdata = alloca %struct.CustomData*, align 8
  %ldata = alloca %struct.CustomData*, align 8
  %totface = alloca i32, align 4
  %mf_idx = alloca i32, align 4
  %polyindex = alloca i32*, align 8
  %loopindex = alloca [4 x i32]*, align 8
  %mf_len = alloca i32, align 4
  %ml_idx = alloca i32*, align 8
  %i = alloca i32, align 4
  %not_done = alloca i32, align 4
  %tf_v = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3842, metadata !DIExpression()), !dbg !3843
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !3844, metadata !DIExpression()), !dbg !3845
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !3846, metadata !DIExpression()), !dbg !3847
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3848
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 33, !dbg !3849
  %1 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !3849
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3850
  %call = call %struct.MFace* %1(%struct.DerivedMesh* %2), !dbg !3848
  store %struct.MFace* %call, %struct.MFace** %mface, align 8, !dbg !3847
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !3851, metadata !DIExpression()), !dbg !3852
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3853
  %getPolyArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 35, !dbg !3854
  %4 = load %struct.MPoly* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)** %getPolyArray, align 8, !dbg !3854
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3855
  %call1 = call %struct.MPoly* %4(%struct.DerivedMesh* %5), !dbg !3853
  store %struct.MPoly* %call1, %struct.MPoly** %mp, align 8, !dbg !3852
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !3856, metadata !DIExpression()), !dbg !3857
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3858
  %getLoopArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 34, !dbg !3859
  %7 = load %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)** %getLoopArray, align 8, !dbg !3859
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3860
  %call2 = call %struct.MLoop* %7(%struct.DerivedMesh* %8), !dbg !3858
  store %struct.MLoop* %call2, %struct.MLoop** %ml, align 8, !dbg !3857
  call void @llvm.dbg.declare(metadata %struct.CustomData** %fdata, metadata !3861, metadata !DIExpression()), !dbg !3862
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3863
  %getTessFaceDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 57, !dbg !3864
  %10 = load %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)** %getTessFaceDataLayout, align 8, !dbg !3864
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3865
  %call3 = call %struct.CustomData* %10(%struct.DerivedMesh* %11), !dbg !3863
  store %struct.CustomData* %call3, %struct.CustomData** %fdata, align 8, !dbg !3862
  call void @llvm.dbg.declare(metadata %struct.CustomData** %pdata, metadata !3866, metadata !DIExpression()), !dbg !3867
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3868
  %getPolyDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 59, !dbg !3869
  %13 = load %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)** %getPolyDataLayout, align 8, !dbg !3869
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3870
  %call4 = call %struct.CustomData* %13(%struct.DerivedMesh* %14), !dbg !3868
  store %struct.CustomData* %call4, %struct.CustomData** %pdata, align 8, !dbg !3867
  call void @llvm.dbg.declare(metadata %struct.CustomData** %ldata, metadata !3871, metadata !DIExpression()), !dbg !3872
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3873
  %getLoopDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 58, !dbg !3874
  %16 = load %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)** %getLoopDataLayout, align 8, !dbg !3874
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3875
  %call5 = call %struct.CustomData* %16(%struct.DerivedMesh* %17), !dbg !3873
  store %struct.CustomData* %call5, %struct.CustomData** %ldata, align 8, !dbg !3872
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !3876, metadata !DIExpression()), !dbg !3877
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3878
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %18, i32 0, i32 25, !dbg !3879
  %19 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !3879
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3880
  %call6 = call i32 %19(%struct.DerivedMesh* %20), !dbg !3878
  store i32 %call6, i32* %totface, align 4, !dbg !3877
  call void @llvm.dbg.declare(metadata i32* %mf_idx, metadata !3881, metadata !DIExpression()), !dbg !3882
  call void @llvm.dbg.declare(metadata i32** %polyindex, metadata !3883, metadata !DIExpression()), !dbg !3884
  %21 = load %struct.CustomData*, %struct.CustomData** %fdata, align 8, !dbg !3885
  %call7 = call i8* @CustomData_get_layer(%struct.CustomData* %21, i32 7), !dbg !3886
  %22 = bitcast i8* %call7 to i32*, !dbg !3886
  store i32* %22, i32** %polyindex, align 8, !dbg !3884
  call void @llvm.dbg.declare(metadata [4 x i32]** %loopindex, metadata !3887, metadata !DIExpression()), !dbg !3889
  %23 = load i32*, i32** %polyindex, align 8, !dbg !3890
  %tobool = icmp ne i32* %23, null, !dbg !3890
  br i1 %tobool, label %if.end, label %if.then, !dbg !3892

if.then:                                          ; preds = %entry
  br label %return, !dbg !3893

if.end:                                           ; preds = %entry
  %24 = load %struct.CustomData*, %struct.CustomData** %fdata, align 8, !dbg !3894
  %25 = load %struct.CustomData*, %struct.CustomData** %pdata, align 8, !dbg !3895
  %26 = load %struct.CustomData*, %struct.CustomData** %ldata, align 8, !dbg !3896
  %27 = load i32, i32* %totface, align 4, !dbg !3897
  call void @CustomData_from_bmeshpoly(%struct.CustomData* %24, %struct.CustomData* %25, %struct.CustomData* %26, i32 %27), !dbg !3898
  %28 = load %struct.CustomData*, %struct.CustomData** %fdata, align 8, !dbg !3899
  %call8 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %28, i32 5), !dbg !3901
  %conv = zext i8 %call8 to i32, !dbg !3901
  %tobool9 = icmp ne i32 %conv, 0, !dbg !3901
  br i1 %tobool9, label %if.then25, label %lor.lhs.false, !dbg !3902

lor.lhs.false:                                    ; preds = %if.end
  %29 = load %struct.CustomData*, %struct.CustomData** %fdata, align 8, !dbg !3903
  %call10 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %29, i32 6), !dbg !3904
  %conv11 = zext i8 %call10 to i32, !dbg !3904
  %tobool12 = icmp ne i32 %conv11, 0, !dbg !3904
  br i1 %tobool12, label %if.then25, label %lor.lhs.false13, !dbg !3905

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %30 = load %struct.CustomData*, %struct.CustomData** %fdata, align 8, !dbg !3906
  %call14 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %30, i32 20), !dbg !3907
  %conv15 = zext i8 %call14 to i32, !dbg !3907
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !3907
  br i1 %tobool16, label %if.then25, label %lor.lhs.false17, !dbg !3908

lor.lhs.false17:                                  ; preds = %lor.lhs.false13
  %31 = load %struct.CustomData*, %struct.CustomData** %fdata, align 8, !dbg !3909
  %call18 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %31, i32 13), !dbg !3910
  %conv19 = zext i8 %call18 to i32, !dbg !3910
  %tobool20 = icmp ne i32 %conv19, 0, !dbg !3910
  br i1 %tobool20, label %if.then25, label %lor.lhs.false21, !dbg !3911

lor.lhs.false21:                                  ; preds = %lor.lhs.false17
  %32 = load %struct.CustomData*, %struct.CustomData** %fdata, align 8, !dbg !3912
  %call22 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %32, i32 40), !dbg !3913
  %conv23 = zext i8 %call22 to i32, !dbg !3913
  %tobool24 = icmp ne i32 %conv23, 0, !dbg !3913
  br i1 %tobool24, label %if.then25, label %if.end78, !dbg !3914

if.then25:                                        ; preds = %lor.lhs.false21, %lor.lhs.false17, %lor.lhs.false13, %lor.lhs.false, %if.end
  %33 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3915
  %34 = load i32, i32* %totface, align 4, !dbg !3917
  %conv26 = sext i32 %34 to i64, !dbg !3917
  %mul = mul i64 16, %conv26, !dbg !3918
  %call27 = call i8* %33(i64 %mul, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.DM_update_tessface_data, i64 0, i64 0)), !dbg !3915
  %35 = bitcast i8* %call27 to [4 x i32]*, !dbg !3915
  store [4 x i32]* %35, [4 x i32]** %loopindex, align 8, !dbg !3919
  store i32 0, i32* %mf_idx, align 4, !dbg !3920
  %36 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !3922
  store %struct.MFace* %36, %struct.MFace** %mf, align 8, !dbg !3923
  br label %for.cond, !dbg !3924

for.cond:                                         ; preds = %for.inc75, %if.then25
  %37 = load i32, i32* %mf_idx, align 4, !dbg !3925
  %38 = load i32, i32* %totface, align 4, !dbg !3927
  %cmp = icmp slt i32 %37, %38, !dbg !3928
  br i1 %cmp, label %for.body, label %for.end77, !dbg !3929

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %mf_len, metadata !3930, metadata !DIExpression()), !dbg !3932
  %39 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !3933
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %39, i32 0, i32 3, !dbg !3934
  %40 = load i32, i32* %v4, align 4, !dbg !3934
  %tobool29 = icmp ne i32 %40, 0, !dbg !3933
  %41 = zext i1 %tobool29 to i64, !dbg !3933
  %cond = select i1 %tobool29, i32 4, i32 3, !dbg !3933
  store i32 %cond, i32* %mf_len, align 4, !dbg !3932
  call void @llvm.dbg.declare(metadata i32** %ml_idx, metadata !3935, metadata !DIExpression()), !dbg !3936
  %42 = load [4 x i32]*, [4 x i32]** %loopindex, align 8, !dbg !3937
  %43 = load i32, i32* %mf_idx, align 4, !dbg !3938
  %idxprom = sext i32 %43 to i64, !dbg !3937
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %42, i64 %idxprom, !dbg !3937
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx, i64 0, i64 0, !dbg !3937
  store i32* %arraydecay, i32** %ml_idx, align 8, !dbg !3936
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3939, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.declare(metadata i32* %not_done, metadata !3941, metadata !DIExpression()), !dbg !3942
  %44 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !3943
  %45 = load i32*, i32** %polyindex, align 8, !dbg !3945
  %46 = load i32, i32* %mf_idx, align 4, !dbg !3946
  %idxprom30 = sext i32 %46 to i64, !dbg !3945
  %arrayidx31 = getelementptr inbounds i32, i32* %45, i64 %idxprom30, !dbg !3945
  %47 = load i32, i32* %arrayidx31, align 4, !dbg !3945
  %idxprom32 = sext i32 %47 to i64, !dbg !3943
  %arrayidx33 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %44, i64 %idxprom32, !dbg !3943
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx33, i32 0, i32 0, !dbg !3947
  %48 = load i32, i32* %loopstart, align 4, !dbg !3947
  store i32 %48, i32* %i, align 4, !dbg !3948
  %49 = load i32, i32* %mf_len, align 4, !dbg !3949
  store i32 %49, i32* %not_done, align 4, !dbg !3950
  br label %for.cond34, !dbg !3951

for.cond34:                                       ; preds = %for.inc, %for.body
  %50 = load i32, i32* %not_done, align 4, !dbg !3952
  %tobool35 = icmp ne i32 %50, 0, !dbg !3954
  br i1 %tobool35, label %for.body36, label %for.end, !dbg !3954

for.body36:                                       ; preds = %for.cond34
  call void @llvm.dbg.declare(metadata i32* %tf_v, metadata !3955, metadata !DIExpression()), !dbg !3957
  %51 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !3958
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %51, i32 0, i32 0, !dbg !3958
  %52 = load i32, i32* %v1, align 4, !dbg !3958
  %53 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !3958
  %54 = load i32, i32* %i, align 4, !dbg !3958
  %idxprom37 = sext i32 %54 to i64, !dbg !3958
  %arrayidx38 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %53, i64 %idxprom37, !dbg !3958
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx38, i32 0, i32 0, !dbg !3958
  %55 = load i32, i32* %v, align 4, !dbg !3958
  %cmp39 = icmp eq i32 %52, %55, !dbg !3958
  br i1 %cmp39, label %cond.true, label %cond.false, !dbg !3958

cond.true:                                        ; preds = %for.body36
  br label %cond.end67, !dbg !3958

cond.false:                                       ; preds = %for.body36
  %56 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !3958
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %56, i32 0, i32 1, !dbg !3958
  %57 = load i32, i32* %v2, align 4, !dbg !3958
  %58 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !3958
  %59 = load i32, i32* %i, align 4, !dbg !3958
  %idxprom41 = sext i32 %59 to i64, !dbg !3958
  %arrayidx42 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %58, i64 %idxprom41, !dbg !3958
  %v43 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx42, i32 0, i32 0, !dbg !3958
  %60 = load i32, i32* %v43, align 4, !dbg !3958
  %cmp44 = icmp eq i32 %57, %60, !dbg !3958
  br i1 %cmp44, label %cond.true46, label %cond.false47, !dbg !3958

cond.true46:                                      ; preds = %cond.false
  br label %cond.end65, !dbg !3958

cond.false47:                                     ; preds = %cond.false
  %61 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !3958
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %61, i32 0, i32 2, !dbg !3958
  %62 = load i32, i32* %v3, align 4, !dbg !3958
  %63 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !3958
  %64 = load i32, i32* %i, align 4, !dbg !3958
  %idxprom48 = sext i32 %64 to i64, !dbg !3958
  %arrayidx49 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %63, i64 %idxprom48, !dbg !3958
  %v50 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx49, i32 0, i32 0, !dbg !3958
  %65 = load i32, i32* %v50, align 4, !dbg !3958
  %cmp51 = icmp eq i32 %62, %65, !dbg !3958
  br i1 %cmp51, label %cond.true53, label %cond.false54, !dbg !3958

cond.true53:                                      ; preds = %cond.false47
  br label %cond.end, !dbg !3958

cond.false54:                                     ; preds = %cond.false47
  %66 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !3958
  %v455 = getelementptr inbounds %struct.MFace, %struct.MFace* %66, i32 0, i32 3, !dbg !3958
  %67 = load i32, i32* %v455, align 4, !dbg !3958
  %tobool56 = icmp ne i32 %67, 0, !dbg !3958
  br i1 %tobool56, label %land.rhs, label %land.end, !dbg !3958

land.rhs:                                         ; preds = %cond.false54
  %68 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !3958
  %v457 = getelementptr inbounds %struct.MFace, %struct.MFace* %68, i32 0, i32 3, !dbg !3958
  %69 = load i32, i32* %v457, align 4, !dbg !3958
  %70 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !3958
  %71 = load i32, i32* %i, align 4, !dbg !3958
  %idxprom58 = sext i32 %71 to i64, !dbg !3958
  %arrayidx59 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %70, i64 %idxprom58, !dbg !3958
  %v60 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx59, i32 0, i32 0, !dbg !3958
  %72 = load i32, i32* %v60, align 4, !dbg !3958
  %cmp61 = icmp eq i32 %69, %72, !dbg !3958
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.false54
  %73 = phi i1 [ false, %cond.false54 ], [ %cmp61, %land.rhs ], !dbg !3959
  %74 = zext i1 %73 to i64, !dbg !3958
  %cond63 = select i1 %73, i32 3, i32 -1, !dbg !3958
  br label %cond.end, !dbg !3958

cond.end:                                         ; preds = %land.end, %cond.true53
  %cond64 = phi i32 [ 2, %cond.true53 ], [ %cond63, %land.end ], !dbg !3958
  br label %cond.end65, !dbg !3958

cond.end65:                                       ; preds = %cond.end, %cond.true46
  %cond66 = phi i32 [ 1, %cond.true46 ], [ %cond64, %cond.end ], !dbg !3958
  br label %cond.end67, !dbg !3958

cond.end67:                                       ; preds = %cond.end65, %cond.true
  %cond68 = phi i32 [ 0, %cond.true ], [ %cond66, %cond.end65 ], !dbg !3958
  store i32 %cond68, i32* %tf_v, align 4, !dbg !3957
  %75 = load i32, i32* %tf_v, align 4, !dbg !3960
  %cmp69 = icmp ne i32 %75, -1, !dbg !3962
  br i1 %cmp69, label %if.then71, label %if.end74, !dbg !3963

if.then71:                                        ; preds = %cond.end67
  %76 = load i32, i32* %i, align 4, !dbg !3964
  %77 = load i32*, i32** %ml_idx, align 8, !dbg !3966
  %78 = load i32, i32* %tf_v, align 4, !dbg !3967
  %idxprom72 = sext i32 %78 to i64, !dbg !3966
  %arrayidx73 = getelementptr inbounds i32, i32* %77, i64 %idxprom72, !dbg !3966
  store i32 %76, i32* %arrayidx73, align 4, !dbg !3968
  %79 = load i32, i32* %not_done, align 4, !dbg !3969
  %dec = add nsw i32 %79, -1, !dbg !3969
  store i32 %dec, i32* %not_done, align 4, !dbg !3969
  br label %if.end74, !dbg !3970

if.end74:                                         ; preds = %if.then71, %cond.end67
  br label %for.inc, !dbg !3971

for.inc:                                          ; preds = %if.end74
  %80 = load i32, i32* %i, align 4, !dbg !3972
  %inc = add nsw i32 %80, 1, !dbg !3972
  store i32 %inc, i32* %i, align 4, !dbg !3972
  br label %for.cond34, !dbg !3973, !llvm.loop !3974

for.end:                                          ; preds = %for.cond34
  br label %for.inc75, !dbg !3976

for.inc75:                                        ; preds = %for.end
  %81 = load i32, i32* %mf_idx, align 4, !dbg !3977
  %inc76 = add nsw i32 %81, 1, !dbg !3977
  store i32 %inc76, i32* %mf_idx, align 4, !dbg !3977
  %82 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !3978
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %82, i32 1, !dbg !3978
  store %struct.MFace* %incdec.ptr, %struct.MFace** %mf, align 8, !dbg !3978
  br label %for.cond, !dbg !3979, !llvm.loop !3980

for.end77:                                        ; preds = %for.cond
  %83 = load %struct.CustomData*, %struct.CustomData** %fdata, align 8, !dbg !3982
  %84 = load %struct.CustomData*, %struct.CustomData** %ldata, align 8, !dbg !3983
  %85 = load %struct.CustomData*, %struct.CustomData** %pdata, align 8, !dbg !3984
  %86 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !3985
  %87 = load i32*, i32** %polyindex, align 8, !dbg !3986
  %88 = load [4 x i32]*, [4 x i32]** %loopindex, align 8, !dbg !3987
  %89 = load i32, i32* %totface, align 4, !dbg !3988
  call void @BKE_mesh_loops_to_tessdata(%struct.CustomData* %83, %struct.CustomData* %84, %struct.CustomData* %85, %struct.MFace* %86, i32* %87, [4 x i32]* %88, i32 %89), !dbg !3989
  %90 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3990
  %91 = load [4 x i32]*, [4 x i32]** %loopindex, align 8, !dbg !3991
  %92 = bitcast [4 x i32]* %91 to i8*, !dbg !3991
  call void %90(i8* %92), !dbg !3990
  br label %if.end78, !dbg !3992

if.end78:                                         ; preds = %for.end77, %lor.lhs.false21
  %93 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !3993
  %and = and i32 %93, 1, !dbg !3995
  %tobool79 = icmp ne i32 %and, 0, !dbg !3995
  br i1 %tobool79, label %if.then80, label %if.end82, !dbg !3996

if.then80:                                        ; preds = %if.end78
  %94 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3997
  %95 = bitcast %struct.DerivedMesh* %94 to i8*, !dbg !3998
  %call81 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.DM_update_tessface_data, i64 0, i64 0), i8* %95), !dbg !3999
  br label %if.end82, !dbg !3999

if.end82:                                         ; preds = %if.then80, %if.end78
  %96 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4000
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %96, i32 0, i32 16, !dbg !4001
  %97 = load i32, i32* %dirty, align 8, !dbg !4002
  %and83 = and i32 %97, -2, !dbg !4002
  store i32 %and83, i32* %dirty, align 8, !dbg !4002
  br label %return, !dbg !4003

return:                                           ; preds = %if.end82, %if.then
  ret void, !dbg !4003
}

declare dso_local i8* @CustomData_get_layer(%struct.CustomData*, i32) #2

declare dso_local void @CustomData_from_bmeshpoly(%struct.CustomData*, %struct.CustomData*, %struct.CustomData*, i32) #2

declare dso_local void @BKE_mesh_loops_to_tessdata(%struct.CustomData*, %struct.CustomData*, %struct.CustomData*, %struct.MFace*, i32*, [4 x i32]*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_update_materials(%struct.DerivedMesh* %dm, %struct.Object* %ob) #0 !dbg !4004 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %i = alloca i32, align 4
  %totmat = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4009, metadata !DIExpression()), !dbg !4010
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4011, metadata !DIExpression()), !dbg !4012
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4013, metadata !DIExpression()), !dbg !4014
  call void @llvm.dbg.declare(metadata i32* %totmat, metadata !4015, metadata !DIExpression()), !dbg !4016
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4017
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 31, !dbg !4018
  %1 = load i32, i32* %totcol, align 8, !dbg !4018
  %add = add nsw i32 %1, 1, !dbg !4019
  store i32 %add, i32* %totmat, align 4, !dbg !4016
  %2 = load i32, i32* %totmat, align 4, !dbg !4020
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4021
  %totmat1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 17, !dbg !4022
  store i32 %2, i32* %totmat1, align 4, !dbg !4023
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4024
  %mat = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 18, !dbg !4026
  %5 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !4026
  %tobool = icmp ne %struct.Material** %5, null, !dbg !4024
  br i1 %tobool, label %if.then, label %if.end, !dbg !4027

if.then:                                          ; preds = %entry
  %6 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4028
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4029
  %mat2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 18, !dbg !4030
  %8 = load %struct.Material**, %struct.Material*** %mat2, align 8, !dbg !4030
  %9 = bitcast %struct.Material** %8 to i8*, !dbg !4029
  call void %6(i8* %9), !dbg !4028
  br label %if.end, !dbg !4028

if.end:                                           ; preds = %if.then, %entry
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4031
  %11 = load i32, i32* %totmat, align 4, !dbg !4032
  %conv = sext i32 %11 to i64, !dbg !4032
  %mul = mul i64 %conv, 8, !dbg !4033
  %call = call i8* %10(i64 %mul, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)), !dbg !4031
  %12 = bitcast i8* %call to %struct.Material**, !dbg !4031
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4034
  %mat3 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 18, !dbg !4035
  store %struct.Material** %12, %struct.Material*** %mat3, align 8, !dbg !4036
  store i32 0, i32* %i, align 4, !dbg !4037
  br label %for.cond, !dbg !4039

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load i32, i32* %i, align 4, !dbg !4040
  %15 = load i32, i32* %totmat, align 4, !dbg !4042
  %sub = sub nsw i32 %15, 1, !dbg !4043
  %cmp = icmp slt i32 %14, %sub, !dbg !4044
  br i1 %cmp, label %for.body, label %for.end, !dbg !4045

for.body:                                         ; preds = %for.cond
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4046
  %17 = load i32, i32* %i, align 4, !dbg !4048
  %add5 = add nsw i32 %17, 1, !dbg !4049
  %conv6 = trunc i32 %add5 to i16, !dbg !4048
  %call7 = call %struct.Material* @give_current_material(%struct.Object* %16, i16 signext %conv6), !dbg !4050
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4051
  %mat8 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %18, i32 0, i32 18, !dbg !4052
  %19 = load %struct.Material**, %struct.Material*** %mat8, align 8, !dbg !4052
  %20 = load i32, i32* %i, align 4, !dbg !4053
  %idxprom = sext i32 %20 to i64, !dbg !4051
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %19, i64 %idxprom, !dbg !4051
  store %struct.Material* %call7, %struct.Material** %arrayidx, align 8, !dbg !4054
  br label %for.inc, !dbg !4055

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !4056
  %inc = add nsw i32 %21, 1, !dbg !4056
  store i32 %inc, i32* %i, align 4, !dbg !4056
  br label %for.cond, !dbg !4057, !llvm.loop !4058

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4060
}

declare dso_local %struct.Material* @give_current_material(%struct.Object*, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MTFace* @DM_paint_uvlayer_active_get(%struct.DerivedMesh* %dm, i32 %mat_nr) #0 !dbg !4061 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mat_nr.addr = alloca i32, align 4
  %tf_base = alloca %struct.MTFace*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4064, metadata !DIExpression()), !dbg !4065
  store i32 %mat_nr, i32* %mat_nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mat_nr.addr, metadata !4066, metadata !DIExpression()), !dbg !4067
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf_base, metadata !4068, metadata !DIExpression()), !dbg !4069
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4070
  %mat = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 18, !dbg !4072
  %1 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !4072
  %2 = load i32, i32* %mat_nr.addr, align 4, !dbg !4073
  %idxprom = sext i32 %2 to i64, !dbg !4070
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %1, i64 %idxprom, !dbg !4070
  %3 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !4070
  %tobool = icmp ne %struct.Material* %3, null, !dbg !4070
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !4074

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4075
  %mat1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 18, !dbg !4076
  %5 = load %struct.Material**, %struct.Material*** %mat1, align 8, !dbg !4076
  %6 = load i32, i32* %mat_nr.addr, align 4, !dbg !4077
  %idxprom2 = sext i32 %6 to i64, !dbg !4075
  %arrayidx3 = getelementptr inbounds %struct.Material*, %struct.Material** %5, i64 %idxprom2, !dbg !4075
  %7 = load %struct.Material*, %struct.Material** %arrayidx3, align 8, !dbg !4075
  %texpaintslot = getelementptr inbounds %struct.Material, %struct.Material* %7, i32 0, i32 135, !dbg !4078
  %8 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %texpaintslot, align 8, !dbg !4078
  %tobool4 = icmp ne %struct.TexPaintSlot* %8, null, !dbg !4075
  br i1 %tobool4, label %land.lhs.true5, label %if.else, !dbg !4079

land.lhs.true5:                                   ; preds = %land.lhs.true
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4080
  %mat6 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 18, !dbg !4081
  %10 = load %struct.Material**, %struct.Material*** %mat6, align 8, !dbg !4081
  %11 = load i32, i32* %mat_nr.addr, align 4, !dbg !4082
  %idxprom7 = sext i32 %11 to i64, !dbg !4080
  %arrayidx8 = getelementptr inbounds %struct.Material*, %struct.Material** %10, i64 %idxprom7, !dbg !4080
  %12 = load %struct.Material*, %struct.Material** %arrayidx8, align 8, !dbg !4080
  %texpaintslot9 = getelementptr inbounds %struct.Material, %struct.Material* %12, i32 0, i32 135, !dbg !4083
  %13 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %texpaintslot9, align 8, !dbg !4083
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4084
  %mat10 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %14, i32 0, i32 18, !dbg !4085
  %15 = load %struct.Material**, %struct.Material*** %mat10, align 8, !dbg !4085
  %16 = load i32, i32* %mat_nr.addr, align 4, !dbg !4086
  %idxprom11 = sext i32 %16 to i64, !dbg !4084
  %arrayidx12 = getelementptr inbounds %struct.Material*, %struct.Material** %15, i64 %idxprom11, !dbg !4084
  %17 = load %struct.Material*, %struct.Material** %arrayidx12, align 8, !dbg !4084
  %paint_active_slot = getelementptr inbounds %struct.Material, %struct.Material* %17, i32 0, i32 131, !dbg !4087
  %18 = load i16, i16* %paint_active_slot, align 4, !dbg !4087
  %idxprom13 = sext i16 %18 to i64, !dbg !4080
  %arrayidx14 = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %13, i64 %idxprom13, !dbg !4080
  %uvname = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %arrayidx14, i32 0, i32 1, !dbg !4088
  %19 = load i8*, i8** %uvname, align 8, !dbg !4088
  %tobool15 = icmp ne i8* %19, null, !dbg !4080
  br i1 %tobool15, label %if.then, label %if.else, !dbg !4089

if.then:                                          ; preds = %land.lhs.true5
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4090
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %20, i32 0, i32 2, !dbg !4092
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4093
  %mat16 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %21, i32 0, i32 18, !dbg !4094
  %22 = load %struct.Material**, %struct.Material*** %mat16, align 8, !dbg !4094
  %23 = load i32, i32* %mat_nr.addr, align 4, !dbg !4095
  %idxprom17 = sext i32 %23 to i64, !dbg !4093
  %arrayidx18 = getelementptr inbounds %struct.Material*, %struct.Material** %22, i64 %idxprom17, !dbg !4093
  %24 = load %struct.Material*, %struct.Material** %arrayidx18, align 8, !dbg !4093
  %texpaintslot19 = getelementptr inbounds %struct.Material, %struct.Material* %24, i32 0, i32 135, !dbg !4096
  %25 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %texpaintslot19, align 8, !dbg !4096
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4097
  %mat20 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %26, i32 0, i32 18, !dbg !4098
  %27 = load %struct.Material**, %struct.Material*** %mat20, align 8, !dbg !4098
  %28 = load i32, i32* %mat_nr.addr, align 4, !dbg !4099
  %idxprom21 = sext i32 %28 to i64, !dbg !4097
  %arrayidx22 = getelementptr inbounds %struct.Material*, %struct.Material** %27, i64 %idxprom21, !dbg !4097
  %29 = load %struct.Material*, %struct.Material** %arrayidx22, align 8, !dbg !4097
  %paint_active_slot23 = getelementptr inbounds %struct.Material, %struct.Material* %29, i32 0, i32 131, !dbg !4100
  %30 = load i16, i16* %paint_active_slot23, align 4, !dbg !4100
  %idxprom24 = sext i16 %30 to i64, !dbg !4093
  %arrayidx25 = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %25, i64 %idxprom24, !dbg !4093
  %uvname26 = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %arrayidx25, i32 0, i32 1, !dbg !4101
  %31 = load i8*, i8** %uvname26, align 8, !dbg !4101
  %call = call i8* @CustomData_get_layer_named(%struct.CustomData* %faceData, i32 5, i8* %31), !dbg !4102
  %32 = bitcast i8* %call to %struct.MTFace*, !dbg !4102
  store %struct.MTFace* %32, %struct.MTFace** %tf_base, align 8, !dbg !4103
  %33 = load %struct.MTFace*, %struct.MTFace** %tf_base, align 8, !dbg !4104
  %tobool27 = icmp ne %struct.MTFace* %33, null, !dbg !4104
  br i1 %tobool27, label %if.end, label %if.then28, !dbg !4106

if.then28:                                        ; preds = %if.then
  %34 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4107
  %faceData29 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %34, i32 0, i32 2, !dbg !4108
  %call30 = call i8* @CustomData_get_layer(%struct.CustomData* %faceData29, i32 5), !dbg !4109
  %35 = bitcast i8* %call30 to %struct.MTFace*, !dbg !4109
  store %struct.MTFace* %35, %struct.MTFace** %tf_base, align 8, !dbg !4110
  br label %if.end, !dbg !4111

if.end:                                           ; preds = %if.then28, %if.then
  br label %if.end33, !dbg !4112

if.else:                                          ; preds = %land.lhs.true5, %land.lhs.true, %entry
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4113
  %faceData31 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %36, i32 0, i32 2, !dbg !4115
  %call32 = call i8* @CustomData_get_layer(%struct.CustomData* %faceData31, i32 5), !dbg !4116
  %37 = bitcast i8* %call32 to %struct.MTFace*, !dbg !4116
  store %struct.MTFace* %37, %struct.MTFace** %tf_base, align 8, !dbg !4117
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.end
  %38 = load %struct.MTFace*, %struct.MTFace** %tf_base, align 8, !dbg !4118
  ret %struct.MTFace* %38, !dbg !4119
}

declare dso_local i8* @CustomData_get_layer_named(%struct.CustomData*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_to_mesh(%struct.DerivedMesh* %dm, %struct.Mesh* %me, %struct.Object* %ob, i64 %mask) #0 !dbg !4120 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %me.addr = alloca %struct.Mesh*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %mask.addr = alloca i64, align 8
  %tmp = alloca %struct.Mesh, align 8
  %totvert = alloca i32, align 4
  %totedge = alloca i32, align 4
  %totloop = alloca i32, align 4
  %totpoly = alloca i32, align 4
  %did_shapekeys = alloca i32, align 4
  %kb = alloca %struct.KeyBlock*, align 8
  %uid = alloca i32, align 4
  %mdisps = alloca %struct.MDisps*, align 8
  %non_const = alloca i8*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4123, metadata !DIExpression()), !dbg !4124
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !4125, metadata !DIExpression()), !dbg !4126
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4127, metadata !DIExpression()), !dbg !4128
  store i64 %mask, i64* %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mask.addr, metadata !4129, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.declare(metadata %struct.Mesh* %tmp, metadata !4131, metadata !DIExpression()), !dbg !4132
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4133
  %1 = bitcast %struct.Mesh* %tmp to i8*, !dbg !4134
  %2 = bitcast %struct.Mesh* %0 to i8*, !dbg !4134
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 1376, i1 false), !dbg !4134
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !4135, metadata !DIExpression()), !dbg !4136
  call void @llvm.dbg.declare(metadata i32* %totedge, metadata !4137, metadata !DIExpression()), !dbg !4138
  call void @llvm.dbg.declare(metadata i32* %totloop, metadata !4139, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.declare(metadata i32* %totpoly, metadata !4141, metadata !DIExpression()), !dbg !4142
  call void @llvm.dbg.declare(metadata i32* %did_shapekeys, metadata !4143, metadata !DIExpression()), !dbg !4144
  store i32 0, i32* %did_shapekeys, align 4, !dbg !4144
  %vdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 21, !dbg !4145
  call void @CustomData_reset(%struct.CustomData* %vdata), !dbg !4146
  %edata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 22, !dbg !4147
  call void @CustomData_reset(%struct.CustomData* %edata), !dbg !4148
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 23, !dbg !4149
  call void @CustomData_reset(%struct.CustomData* %fdata), !dbg !4150
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 25, !dbg !4151
  call void @CustomData_reset(%struct.CustomData* %ldata), !dbg !4152
  %pdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 24, !dbg !4153
  call void @CustomData_reset(%struct.CustomData* %pdata), !dbg !4154
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4155
  call void @DM_ensure_normals(%struct.DerivedMesh* %3), !dbg !4156
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4157
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 23, !dbg !4158
  %5 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !4158
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4159
  %call = call i32 %5(%struct.DerivedMesh* %6), !dbg !4157
  %totvert1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 26, !dbg !4160
  store i32 %call, i32* %totvert1, align 8, !dbg !4161
  store i32 %call, i32* %totvert, align 4, !dbg !4162
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4163
  %getNumEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 24, !dbg !4164
  %8 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumEdges, align 8, !dbg !4164
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4165
  %call2 = call i32 %8(%struct.DerivedMesh* %9), !dbg !4163
  %totedge3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 27, !dbg !4166
  store i32 %call2, i32* %totedge3, align 4, !dbg !4167
  store i32 %call2, i32* %totedge, align 4, !dbg !4168
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4169
  %getNumLoops = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 26, !dbg !4170
  %11 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumLoops, align 8, !dbg !4170
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4171
  %call4 = call i32 %11(%struct.DerivedMesh* %12), !dbg !4169
  %totloop5 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 31, !dbg !4172
  store i32 %call4, i32* %totloop5, align 4, !dbg !4173
  store i32 %call4, i32* %totloop, align 4, !dbg !4174
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4175
  %getNumPolys = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 27, !dbg !4176
  %14 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumPolys, align 8, !dbg !4176
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4177
  %call6 = call i32 %14(%struct.DerivedMesh* %15), !dbg !4175
  %totpoly7 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 30, !dbg !4178
  store i32 %call6, i32* %totpoly7, align 8, !dbg !4179
  store i32 %call6, i32* %totpoly, align 4, !dbg !4180
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 28, !dbg !4181
  store i32 0, i32* %totface, align 8, !dbg !4182
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4183
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %16, i32 0, i32 0, !dbg !4184
  %vdata8 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 21, !dbg !4185
  %17 = load i64, i64* %mask.addr, align 8, !dbg !4186
  %18 = load i32, i32* %totvert, align 4, !dbg !4187
  call void @CustomData_copy(%struct.CustomData* %vertData, %struct.CustomData* %vdata8, i64 %17, i32 4, i32 %18), !dbg !4188
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4189
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %19, i32 0, i32 1, !dbg !4190
  %edata9 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 22, !dbg !4191
  %20 = load i64, i64* %mask.addr, align 8, !dbg !4192
  %21 = load i32, i32* %totedge, align 4, !dbg !4193
  call void @CustomData_copy(%struct.CustomData* %edgeData, %struct.CustomData* %edata9, i64 %20, i32 4, i32 %21), !dbg !4194
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4195
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %22, i32 0, i32 3, !dbg !4196
  %ldata10 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 25, !dbg !4197
  %23 = load i64, i64* %mask.addr, align 8, !dbg !4198
  %24 = load i32, i32* %totloop, align 4, !dbg !4199
  call void @CustomData_copy(%struct.CustomData* %loopData, %struct.CustomData* %ldata10, i64 %23, i32 4, i32 %24), !dbg !4200
  %25 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4201
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %25, i32 0, i32 4, !dbg !4202
  %pdata11 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 24, !dbg !4203
  %26 = load i64, i64* %mask.addr, align 8, !dbg !4204
  %27 = load i32, i32* %totpoly, align 4, !dbg !4205
  call void @CustomData_copy(%struct.CustomData* %polyData, %struct.CustomData* %pdata11, i64 %26, i32 4, i32 %27), !dbg !4206
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4207
  %cd_flag = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %28, i32 0, i32 19, !dbg !4208
  %29 = load i8, i8* %cd_flag, align 8, !dbg !4208
  %cd_flag12 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 41, !dbg !4209
  store i8 %29, i8* %cd_flag12, align 8, !dbg !4210
  %30 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4211
  %vertData13 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %30, i32 0, i32 0, !dbg !4213
  %call14 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %vertData13, i32 28), !dbg !4214
  %tobool = icmp ne i8 %call14, 0, !dbg !4214
  br i1 %tobool, label %if.then, label %if.end27, !dbg !4215

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !4216, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !4219, metadata !DIExpression()), !dbg !4220
  %31 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4221
  %tobool15 = icmp ne %struct.Object* %31, null, !dbg !4221
  br i1 %tobool15, label %if.then16, label %if.else25, !dbg !4223

if.then16:                                        ; preds = %if.then
  %32 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4224
  %key = getelementptr inbounds %struct.Mesh, %struct.Mesh* %32, i32 0, i32 4, !dbg !4226
  %33 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !4226
  %block = getelementptr inbounds %struct.Key, %struct.Key* %33, i32 0, i32 6, !dbg !4227
  %34 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4228
  %shapenr = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 115, !dbg !4229
  %35 = load i16, i16* %shapenr, align 2, !dbg !4229
  %conv = sext i16 %35 to i32, !dbg !4228
  %sub = sub nsw i32 %conv, 1, !dbg !4230
  %call17 = call i8* @BLI_findlink(%struct.ListBase* %block, i32 %sub), !dbg !4231
  %36 = bitcast i8* %call17 to %struct.KeyBlock*, !dbg !4231
  store %struct.KeyBlock* %36, %struct.KeyBlock** %kb, align 8, !dbg !4232
  %37 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4233
  %tobool18 = icmp ne %struct.KeyBlock* %37, null, !dbg !4233
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !4235

if.then19:                                        ; preds = %if.then16
  %38 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4236
  %uid20 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %38, i32 0, i32 9, !dbg !4238
  %39 = load i32, i32* %uid20, align 4, !dbg !4238
  store i32 %39, i32* %uid, align 4, !dbg !4239
  br label %if.end, !dbg !4240

if.else:                                          ; preds = %if.then16
  %40 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4241
  %shapenr21 = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 115, !dbg !4243
  %41 = load i16, i16* %shapenr21, align 2, !dbg !4243
  %conv22 = sext i16 %41 to i32, !dbg !4241
  %sub23 = sub nsw i32 %conv22, 1, !dbg !4244
  %call24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.DM_to_mesh, i64 0, i64 0), i32 %sub23), !dbg !4245
  store i32 2147483647, i32* %uid, align 4, !dbg !4246
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then19
  br label %if.end26, !dbg !4247

if.else25:                                        ; preds = %if.then
  store i32 2147483647, i32* %uid, align 4, !dbg !4248
  br label %if.end26

if.end26:                                         ; preds = %if.else25, %if.end
  %42 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4250
  %43 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4251
  %44 = load i32, i32* %uid, align 4, !dbg !4252
  call void @shapekey_layers_to_keyblocks(%struct.DerivedMesh* %42, %struct.Mesh* %43, i32 %44), !dbg !4253
  store i32 1, i32* %did_shapekeys, align 4, !dbg !4254
  br label %if.end27, !dbg !4255

if.end27:                                         ; preds = %if.end26, %entry
  %45 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4256
  %tobool28 = icmp ne %struct.Object* %45, null, !dbg !4256
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !4258

if.then29:                                        ; preds = %if.end27
  %46 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4259
  call void @BKE_mesh_texspace_copy_from_object(%struct.Mesh* %tmp, %struct.Object* %46), !dbg !4261
  br label %if.end30, !dbg !4262

if.end30:                                         ; preds = %if.then29, %if.end27
  %vdata31 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 21, !dbg !4263
  %call32 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %vdata31, i32 0), !dbg !4265
  %tobool33 = icmp ne i8 %call32, 0, !dbg !4265
  br i1 %tobool33, label %if.end38, label %if.then34, !dbg !4266

if.then34:                                        ; preds = %if.end30
  %vdata35 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 21, !dbg !4267
  %47 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4268
  %dupVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %47, i32 0, i32 41, !dbg !4269
  %48 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %dupVertArray, align 8, !dbg !4269
  %49 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4270
  %call36 = call %struct.MVert* %48(%struct.DerivedMesh* %49), !dbg !4268
  %50 = bitcast %struct.MVert* %call36 to i8*, !dbg !4268
  %51 = load i32, i32* %totvert, align 4, !dbg !4271
  %call37 = call i8* @CustomData_add_layer(%struct.CustomData* %vdata35, i32 0, i32 0, i8* %50, i32 %51), !dbg !4272
  br label %if.end38, !dbg !4272

if.end38:                                         ; preds = %if.then34, %if.end30
  %edata39 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 22, !dbg !4273
  %call40 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %edata39, i32 3), !dbg !4275
  %tobool41 = icmp ne i8 %call40, 0, !dbg !4275
  br i1 %tobool41, label %if.end46, label %if.then42, !dbg !4276

if.then42:                                        ; preds = %if.end38
  %edata43 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 22, !dbg !4277
  %52 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4278
  %dupEdgeArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %52, i32 0, i32 42, !dbg !4279
  %53 = load %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)** %dupEdgeArray, align 8, !dbg !4279
  %54 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4280
  %call44 = call %struct.MEdge* %53(%struct.DerivedMesh* %54), !dbg !4278
  %55 = bitcast %struct.MEdge* %call44 to i8*, !dbg !4278
  %56 = load i32, i32* %totedge, align 4, !dbg !4281
  %call45 = call i8* @CustomData_add_layer(%struct.CustomData* %edata43, i32 3, i32 0, i8* %55, i32 %56), !dbg !4282
  br label %if.end46, !dbg !4282

if.end46:                                         ; preds = %if.then42, %if.end38
  %pdata47 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 24, !dbg !4283
  %call48 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %pdata47, i32 25), !dbg !4285
  %tobool49 = icmp ne i8 %call48, 0, !dbg !4285
  br i1 %tobool49, label %if.end61, label %if.then50, !dbg !4286

if.then50:                                        ; preds = %if.end46
  %57 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4287
  %dupLoopArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %57, i32 0, i32 44, !dbg !4289
  %58 = load %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)** %dupLoopArray, align 8, !dbg !4289
  %59 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4290
  %call51 = call %struct.MLoop* %58(%struct.DerivedMesh* %59), !dbg !4287
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 9, !dbg !4291
  store %struct.MLoop* %call51, %struct.MLoop** %mloop, align 8, !dbg !4292
  %60 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4293
  %dupPolyArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %60, i32 0, i32 45, !dbg !4294
  %61 = load %struct.MPoly* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)** %dupPolyArray, align 8, !dbg !4294
  %62 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4295
  %call52 = call %struct.MPoly* %61(%struct.DerivedMesh* %62), !dbg !4293
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 7, !dbg !4296
  store %struct.MPoly* %call52, %struct.MPoly** %mpoly, align 8, !dbg !4297
  %ldata53 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 25, !dbg !4298
  %mloop54 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 9, !dbg !4299
  %63 = load %struct.MLoop*, %struct.MLoop** %mloop54, align 8, !dbg !4299
  %64 = bitcast %struct.MLoop* %63 to i8*, !dbg !4300
  %totloop55 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 31, !dbg !4301
  %65 = load i32, i32* %totloop55, align 4, !dbg !4301
  %call56 = call i8* @CustomData_add_layer(%struct.CustomData* %ldata53, i32 26, i32 0, i8* %64, i32 %65), !dbg !4302
  %pdata57 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 24, !dbg !4303
  %mpoly58 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 7, !dbg !4304
  %66 = load %struct.MPoly*, %struct.MPoly** %mpoly58, align 8, !dbg !4304
  %67 = bitcast %struct.MPoly* %66 to i8*, !dbg !4305
  %totpoly59 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 30, !dbg !4306
  %68 = load i32, i32* %totpoly59, align 8, !dbg !4306
  %call60 = call i8* @CustomData_add_layer(%struct.CustomData* %pdata57, i32 25, i32 0, i8* %67, i32 %68), !dbg !4307
  br label %if.end61, !dbg !4308

if.end61:                                         ; preds = %if.then50, %if.end46
  %69 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4309
  %ldata62 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %69, i32 0, i32 25, !dbg !4311
  %call63 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %ldata62, i32 19), !dbg !4312
  %tobool64 = icmp ne i8 %call63, 0, !dbg !4312
  br i1 %tobool64, label %if.then65, label %if.end74, !dbg !4313

if.then65:                                        ; preds = %if.end61
  %70 = load i32, i32* %totloop, align 4, !dbg !4314
  %71 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4317
  %totloop66 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %71, i32 0, i32 31, !dbg !4318
  %72 = load i32, i32* %totloop66, align 4, !dbg !4318
  %cmp = icmp eq i32 %70, %72, !dbg !4319
  br i1 %cmp, label %if.then68, label %if.end73, !dbg !4320

if.then68:                                        ; preds = %if.then65
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisps, metadata !4321, metadata !DIExpression()), !dbg !4331
  %73 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4332
  %ldata69 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %73, i32 0, i32 25, !dbg !4333
  %call70 = call i8* @CustomData_get_layer(%struct.CustomData* %ldata69, i32 19), !dbg !4334
  %74 = bitcast i8* %call70 to %struct.MDisps*, !dbg !4334
  store %struct.MDisps* %74, %struct.MDisps** %mdisps, align 8, !dbg !4331
  %ldata71 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 25, !dbg !4335
  %75 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !4336
  %76 = bitcast %struct.MDisps* %75 to i8*, !dbg !4336
  %77 = load i32, i32* %totloop, align 4, !dbg !4337
  %call72 = call i8* @CustomData_add_layer(%struct.CustomData* %ldata71, i32 19, i32 4, i8* %76, i32 %77), !dbg !4338
  br label %if.end73, !dbg !4339

if.end73:                                         ; preds = %if.then68, %if.then65
  br label %if.end74, !dbg !4340

if.end74:                                         ; preds = %if.end73, %if.end61
  call void @BKE_mesh_update_customdata_pointers(%struct.Mesh* %tmp, i8 zeroext 0), !dbg !4341
  %78 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4342
  %vdata75 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %78, i32 0, i32 21, !dbg !4343
  %79 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4344
  %totvert76 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %79, i32 0, i32 26, !dbg !4345
  %80 = load i32, i32* %totvert76, align 8, !dbg !4345
  call void @CustomData_free(%struct.CustomData* %vdata75, i32 %80), !dbg !4346
  %81 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4347
  %edata77 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %81, i32 0, i32 22, !dbg !4348
  %82 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4349
  %totedge78 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %82, i32 0, i32 27, !dbg !4350
  %83 = load i32, i32* %totedge78, align 4, !dbg !4350
  call void @CustomData_free(%struct.CustomData* %edata77, i32 %83), !dbg !4351
  %84 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4352
  %fdata79 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %84, i32 0, i32 23, !dbg !4353
  %85 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4354
  %totface80 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %85, i32 0, i32 28, !dbg !4355
  %86 = load i32, i32* %totface80, align 8, !dbg !4355
  call void @CustomData_free(%struct.CustomData* %fdata79, i32 %86), !dbg !4356
  %87 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4357
  %ldata81 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %87, i32 0, i32 25, !dbg !4358
  %88 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4359
  %totloop82 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %88, i32 0, i32 31, !dbg !4360
  %89 = load i32, i32* %totloop82, align 4, !dbg !4360
  call void @CustomData_free(%struct.CustomData* %ldata81, i32 %89), !dbg !4361
  %90 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4362
  %pdata83 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %90, i32 0, i32 24, !dbg !4363
  %91 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4364
  %totpoly84 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %91, i32 0, i32 30, !dbg !4365
  %92 = load i32, i32* %totpoly84, align 8, !dbg !4365
  call void @CustomData_free(%struct.CustomData* %pdata83, i32 %92), !dbg !4366
  %totvert85 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 26, !dbg !4367
  %93 = load i32, i32* %totvert85, align 8, !dbg !4367
  %94 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4369
  %totvert86 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %94, i32 0, i32 26, !dbg !4370
  %95 = load i32, i32* %totvert86, align 8, !dbg !4370
  %cmp87 = icmp ne i32 %93, %95, !dbg !4371
  br i1 %cmp87, label %land.lhs.true, label %if.end102, !dbg !4372

land.lhs.true:                                    ; preds = %if.end74
  %96 = load i32, i32* %did_shapekeys, align 4, !dbg !4373
  %tobool89 = icmp ne i32 %96, 0, !dbg !4373
  br i1 %tobool89, label %if.end102, label %land.lhs.true90, !dbg !4374

land.lhs.true90:                                  ; preds = %land.lhs.true
  %97 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4375
  %key91 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %97, i32 0, i32 4, !dbg !4376
  %98 = load %struct.Key*, %struct.Key** %key91, align 8, !dbg !4376
  %tobool92 = icmp ne %struct.Key* %98, null, !dbg !4375
  br i1 %tobool92, label %if.then93, label %if.end102, !dbg !4377

if.then93:                                        ; preds = %land.lhs.true90
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 0, !dbg !4378
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !4380
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !4381
  %call94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.DM_to_mesh, i64 0, i64 0), i8* %arraydecay), !dbg !4382
  %key95 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 4, !dbg !4383
  %99 = load %struct.Key*, %struct.Key** %key95, align 8, !dbg !4383
  %tobool96 = icmp ne %struct.Key* %99, null, !dbg !4385
  br i1 %tobool96, label %if.then97, label %if.end100, !dbg !4386

if.then97:                                        ; preds = %if.then93
  %key98 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 4, !dbg !4387
  %100 = load %struct.Key*, %struct.Key** %key98, align 8, !dbg !4387
  %id99 = getelementptr inbounds %struct.Key, %struct.Key* %100, i32 0, i32 0, !dbg !4388
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id99, i32 0, i32 6, !dbg !4389
  %101 = load i32, i32* %us, align 4, !dbg !4390
  %dec = add nsw i32 %101, -1, !dbg !4390
  store i32 %dec, i32* %us, align 4, !dbg !4390
  br label %if.end100, !dbg !4391

if.end100:                                        ; preds = %if.then97, %if.then93
  %key101 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 4, !dbg !4392
  store %struct.Key* null, %struct.Key** %key101, align 8, !dbg !4393
  br label %if.end102, !dbg !4394

if.end102:                                        ; preds = %if.end100, %land.lhs.true90, %land.lhs.true, %if.end74
  %mselect = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 6, !dbg !4395
  store %struct.MSelect* null, %struct.MSelect** %mselect, align 8, !dbg !4396
  %totselect = getelementptr inbounds %struct.Mesh, %struct.Mesh* %tmp, i32 0, i32 29, !dbg !4397
  store i32 0, i32* %totselect, align 4, !dbg !4398
  %102 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4399
  %mselect103 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %102, i32 0, i32 6, !dbg !4401
  %103 = load %struct.MSelect*, %struct.MSelect** %mselect103, align 8, !dbg !4401
  %tobool104 = icmp ne %struct.MSelect* %103, null, !dbg !4399
  br i1 %tobool104, label %if.then105, label %if.end107, !dbg !4402

if.then105:                                       ; preds = %if.end102
  %104 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4403
  %105 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4405
  %mselect106 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %105, i32 0, i32 6, !dbg !4406
  %106 = load %struct.MSelect*, %struct.MSelect** %mselect106, align 8, !dbg !4406
  %107 = bitcast %struct.MSelect* %106 to i8*, !dbg !4405
  call void %104(i8* %107), !dbg !4403
  br label %if.end107, !dbg !4407

if.end107:                                        ; preds = %if.then105, %if.end102
  call void @llvm.dbg.declare(metadata i8** %non_const, metadata !4408, metadata !DIExpression()), !dbg !4411
  store i8* null, i8** %non_const, align 8, !dbg !4411
  %108 = load i8*, i8** %non_const, align 8, !dbg !4411
  %109 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4412
  %cmp108 = icmp eq %struct.Mesh* %109, %tmp, !dbg !4412
  %conv109 = zext i1 %cmp108 to i32, !dbg !4412
  %110 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4412
  %111 = bitcast %struct.Mesh* %110 to i8*, !dbg !4412
  %112 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4412
  %id110 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %112, i32 0, i32 0, !dbg !4412
  %prev = getelementptr inbounds %struct.ID, %struct.ID* %id110, i32 0, i32 1, !dbg !4412
  %113 = bitcast i8** %prev to i8*, !dbg !4412
  %114 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4412
  %115 = bitcast %struct.Mesh* %114 to i8*, !dbg !4412
  %sub.ptr.lhs.cast = ptrtoint i8* %113 to i64, !dbg !4412
  %sub.ptr.rhs.cast = ptrtoint i8* %115 to i64, !dbg !4412
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4412
  %add = add i64 %sub.ptr.sub, 8, !dbg !4412
  %add.ptr = getelementptr inbounds i8, i8* %111, i64 %add, !dbg !4412
  %116 = bitcast %struct.Mesh* %tmp to i8*, !dbg !4412
  %117 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4412
  %id111 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %117, i32 0, i32 0, !dbg !4412
  %prev112 = getelementptr inbounds %struct.ID, %struct.ID* %id111, i32 0, i32 1, !dbg !4412
  %118 = bitcast i8** %prev112 to i8*, !dbg !4412
  %119 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4412
  %120 = bitcast %struct.Mesh* %119 to i8*, !dbg !4412
  %sub.ptr.lhs.cast113 = ptrtoint i8* %118 to i64, !dbg !4412
  %sub.ptr.rhs.cast114 = ptrtoint i8* %120 to i64, !dbg !4412
  %sub.ptr.sub115 = sub i64 %sub.ptr.lhs.cast113, %sub.ptr.rhs.cast114, !dbg !4412
  %add116 = add i64 %sub.ptr.sub115, 8, !dbg !4412
  %add.ptr117 = getelementptr inbounds i8, i8* %116, i64 %add116, !dbg !4412
  %121 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4412
  %id118 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %121, i32 0, i32 0, !dbg !4412
  %prev119 = getelementptr inbounds %struct.ID, %struct.ID* %id118, i32 0, i32 1, !dbg !4412
  %122 = bitcast i8** %prev119 to i8*, !dbg !4412
  %123 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4412
  %124 = bitcast %struct.Mesh* %123 to i8*, !dbg !4412
  %sub.ptr.lhs.cast120 = ptrtoint i8* %122 to i64, !dbg !4412
  %sub.ptr.rhs.cast121 = ptrtoint i8* %124 to i64, !dbg !4412
  %sub.ptr.sub122 = sub i64 %sub.ptr.lhs.cast120, %sub.ptr.rhs.cast121, !dbg !4412
  %add123 = add i64 %sub.ptr.sub122, 8, !dbg !4412
  %sub124 = sub i64 1376, %add123, !dbg !4412
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %add.ptr117, i64 %sub124, i1 false), !dbg !4412
  ret void, !dbg !4413
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local void @CustomData_reset(%struct.CustomData*) #2

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @shapekey_layers_to_keyblocks(%struct.DerivedMesh* %dm, %struct.Mesh* %me, i32 %actshape_uid) #0 !dbg !4414 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %me.addr = alloca %struct.Mesh*, align 8
  %actshape_uid.addr = alloca i32, align 4
  %kb = alloca %struct.KeyBlock*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %tot = alloca i32, align 4
  %layer = alloca %struct.CustomDataLayer*, align 8
  %cos = alloca [3 x float]*, align 8
  %kbcos = alloca [3 x float]*, align 8
  %mvert = alloca %struct.MVert*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4417, metadata !DIExpression()), !dbg !4418
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !4419, metadata !DIExpression()), !dbg !4420
  store i32 %actshape_uid, i32* %actshape_uid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %actshape_uid.addr, metadata !4421, metadata !DIExpression()), !dbg !4422
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !4423, metadata !DIExpression()), !dbg !4424
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4425, metadata !DIExpression()), !dbg !4426
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4427, metadata !DIExpression()), !dbg !4428
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !4429, metadata !DIExpression()), !dbg !4430
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4431
  %key = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 4, !dbg !4433
  %1 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !4433
  %tobool = icmp ne %struct.Key* %1, null, !dbg !4431
  br i1 %tobool, label %if.end, label %if.then, !dbg !4434

if.then:                                          ; preds = %entry
  br label %for.end88, !dbg !4435

if.end:                                           ; preds = %entry
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4436
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 0, !dbg !4437
  %call = call i32 @CustomData_number_of_layers(%struct.CustomData* %vertData, i32 28), !dbg !4438
  store i32 %call, i32* %tot, align 4, !dbg !4439
  store i32 0, i32* %i, align 4, !dbg !4440
  br label %for.cond, !dbg !4442

for.cond:                                         ; preds = %for.inc56, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !4443
  %4 = load i32, i32* %tot, align 4, !dbg !4445
  %cmp = icmp slt i32 %3, %4, !dbg !4446
  br i1 %cmp, label %for.body, label %for.end58, !dbg !4447

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CustomDataLayer** %layer, metadata !4448, metadata !DIExpression()), !dbg !4450
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4451
  %vertData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 0, !dbg !4452
  %layers = getelementptr inbounds %struct.CustomData, %struct.CustomData* %vertData1, i32 0, i32 0, !dbg !4453
  %6 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers, align 8, !dbg !4453
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4454
  %vertData2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 0, !dbg !4455
  %8 = load i32, i32* %i, align 4, !dbg !4456
  %call3 = call i32 @CustomData_get_layer_index_n(%struct.CustomData* %vertData2, i32 28, i32 %8), !dbg !4457
  %idxprom = sext i32 %call3 to i64, !dbg !4451
  %arrayidx = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %6, i64 %idxprom, !dbg !4451
  store %struct.CustomDataLayer* %arrayidx, %struct.CustomDataLayer** %layer, align 8, !dbg !4450
  call void @llvm.dbg.declare(metadata [3 x float]** %cos, metadata !4458, metadata !DIExpression()), !dbg !4459
  call void @llvm.dbg.declare(metadata [3 x float]** %kbcos, metadata !4460, metadata !DIExpression()), !dbg !4461
  %9 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4462
  %key4 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 4, !dbg !4464
  %10 = load %struct.Key*, %struct.Key** %key4, align 8, !dbg !4464
  %block = getelementptr inbounds %struct.Key, %struct.Key* %10, i32 0, i32 6, !dbg !4465
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block, i32 0, i32 0, !dbg !4466
  %11 = load i8*, i8** %first, align 8, !dbg !4466
  %12 = bitcast i8* %11 to %struct.KeyBlock*, !dbg !4462
  store %struct.KeyBlock* %12, %struct.KeyBlock** %kb, align 8, !dbg !4467
  br label %for.cond5, !dbg !4468

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4469
  %tobool6 = icmp ne %struct.KeyBlock* %13, null, !dbg !4471
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !4471

for.body7:                                        ; preds = %for.cond5
  %14 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4472
  %uid = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %14, i32 0, i32 9, !dbg !4475
  %15 = load i32, i32* %uid, align 4, !dbg !4475
  %16 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !4476
  %uid8 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %16, i32 0, i32 7, !dbg !4477
  %17 = load i32, i32* %uid8, align 4, !dbg !4477
  %cmp9 = icmp eq i32 %15, %17, !dbg !4478
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !4479

if.then10:                                        ; preds = %for.body7
  br label %for.end, !dbg !4480

if.end11:                                         ; preds = %for.body7
  br label %for.inc, !dbg !4481

for.inc:                                          ; preds = %if.end11
  %18 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4482
  %next = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %18, i32 0, i32 0, !dbg !4483
  %19 = load %struct.KeyBlock*, %struct.KeyBlock** %next, align 8, !dbg !4483
  store %struct.KeyBlock* %19, %struct.KeyBlock** %kb, align 8, !dbg !4484
  br label %for.cond5, !dbg !4485, !llvm.loop !4486

for.end:                                          ; preds = %if.then10, %for.cond5
  %20 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4488
  %tobool12 = icmp ne %struct.KeyBlock* %20, null, !dbg !4488
  br i1 %tobool12, label %if.end18, label %if.then13, !dbg !4490

if.then13:                                        ; preds = %for.end
  %21 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4491
  %key14 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %21, i32 0, i32 4, !dbg !4493
  %22 = load %struct.Key*, %struct.Key** %key14, align 8, !dbg !4493
  %23 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !4494
  %name = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %23, i32 0, i32 8, !dbg !4495
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !4494
  %call15 = call %struct.KeyBlock* @BKE_keyblock_add(%struct.Key* %22, i8* %arraydecay), !dbg !4496
  store %struct.KeyBlock* %call15, %struct.KeyBlock** %kb, align 8, !dbg !4497
  %24 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !4498
  %uid16 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %24, i32 0, i32 7, !dbg !4499
  %25 = load i32, i32* %uid16, align 4, !dbg !4499
  %26 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4500
  %uid17 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %26, i32 0, i32 9, !dbg !4501
  store i32 %25, i32* %uid17, align 4, !dbg !4502
  br label %if.end18, !dbg !4503

if.end18:                                         ; preds = %if.then13, %for.end
  %27 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4504
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %27, i32 0, i32 10, !dbg !4506
  %28 = load i8*, i8** %data, align 8, !dbg !4506
  %tobool19 = icmp ne i8* %28, null, !dbg !4504
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !4507

if.then20:                                        ; preds = %if.end18
  %29 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4508
  %30 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4509
  %data21 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %30, i32 0, i32 10, !dbg !4510
  %31 = load i8*, i8** %data21, align 8, !dbg !4510
  call void %29(i8* %31), !dbg !4508
  br label %if.end22, !dbg !4508

if.end22:                                         ; preds = %if.then20, %if.end18
  %32 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4511
  %vertData23 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %32, i32 0, i32 0, !dbg !4512
  %33 = load i32, i32* %i, align 4, !dbg !4513
  %call24 = call i8* @CustomData_get_layer_n(%struct.CustomData* %vertData23, i32 28, i32 %33), !dbg !4514
  %34 = bitcast i8* %call24 to [3 x float]*, !dbg !4514
  store [3 x float]* %34, [3 x float]** %cos, align 8, !dbg !4515
  %35 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4516
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %35, i32 0, i32 5, !dbg !4517
  %36 = load i32, i32* %numVertData, align 8, !dbg !4517
  %37 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4518
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %37, i32 0, i32 8, !dbg !4519
  store i32 %36, i32* %totelem, align 8, !dbg !4520
  %38 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4521
  %39 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4522
  %totelem25 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %39, i32 0, i32 8, !dbg !4523
  %40 = load i32, i32* %totelem25, align 8, !dbg !4523
  %conv = sext i32 %40 to i64, !dbg !4522
  %mul = mul i64 12, %conv, !dbg !4524
  %call26 = call i8* %38(i64 %mul, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)), !dbg !4521
  %41 = bitcast i8* %call26 to [3 x float]*, !dbg !4521
  store [3 x float]* %41, [3 x float]** %kbcos, align 8, !dbg !4525
  %42 = bitcast [3 x float]* %41 to i8*, !dbg !4526
  %43 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4527
  %data27 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %43, i32 0, i32 10, !dbg !4528
  store i8* %42, i8** %data27, align 8, !dbg !4529
  %44 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4530
  %uid28 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %44, i32 0, i32 9, !dbg !4532
  %45 = load i32, i32* %uid28, align 4, !dbg !4532
  %46 = load i32, i32* %actshape_uid.addr, align 4, !dbg !4533
  %cmp29 = icmp eq i32 %45, %46, !dbg !4534
  br i1 %cmp29, label %if.then31, label %if.else, !dbg !4535

if.then31:                                        ; preds = %if.end22
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !4536, metadata !DIExpression()), !dbg !4538
  %47 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4539
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %47, i32 0, i32 31, !dbg !4540
  %48 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !4540
  %49 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4541
  %call32 = call %struct.MVert* %48(%struct.DerivedMesh* %49), !dbg !4539
  store %struct.MVert* %call32, %struct.MVert** %mvert, align 8, !dbg !4538
  store i32 0, i32* %j, align 4, !dbg !4542
  br label %for.cond33, !dbg !4544

for.cond33:                                       ; preds = %for.inc40, %if.then31
  %50 = load i32, i32* %j, align 4, !dbg !4545
  %51 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4547
  %numVertData34 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %51, i32 0, i32 5, !dbg !4548
  %52 = load i32, i32* %numVertData34, align 8, !dbg !4548
  %cmp35 = icmp slt i32 %50, %52, !dbg !4549
  br i1 %cmp35, label %for.body37, label %for.end42, !dbg !4550

for.body37:                                       ; preds = %for.cond33
  %53 = load [3 x float]*, [3 x float]** %kbcos, align 8, !dbg !4551
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %53, i64 0, i64 0, !dbg !4553
  %54 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !4554
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %54, i32 0, i32 0, !dbg !4555
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !4554
  call void @copy_v3_v3(float* %arraydecay38, float* %arraydecay39), !dbg !4556
  br label %for.inc40, !dbg !4557

for.inc40:                                        ; preds = %for.body37
  %55 = load i32, i32* %j, align 4, !dbg !4558
  %inc = add nsw i32 %55, 1, !dbg !4558
  store i32 %inc, i32* %j, align 4, !dbg !4558
  %56 = load [3 x float]*, [3 x float]** %kbcos, align 8, !dbg !4559
  %incdec.ptr = getelementptr inbounds [3 x float], [3 x float]* %56, i32 1, !dbg !4559
  store [3 x float]* %incdec.ptr, [3 x float]** %kbcos, align 8, !dbg !4559
  %57 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !4560
  %incdec.ptr41 = getelementptr inbounds %struct.MVert, %struct.MVert* %57, i32 1, !dbg !4560
  store %struct.MVert* %incdec.ptr41, %struct.MVert** %mvert, align 8, !dbg !4560
  br label %for.cond33, !dbg !4561, !llvm.loop !4562

for.end42:                                        ; preds = %for.cond33
  br label %if.end55, !dbg !4564

if.else:                                          ; preds = %if.end22
  store i32 0, i32* %j, align 4, !dbg !4565
  br label %for.cond43, !dbg !4568

for.cond43:                                       ; preds = %for.inc50, %if.else
  %58 = load i32, i32* %j, align 4, !dbg !4569
  %59 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4571
  %totelem44 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %59, i32 0, i32 8, !dbg !4572
  %60 = load i32, i32* %totelem44, align 8, !dbg !4572
  %cmp45 = icmp slt i32 %58, %60, !dbg !4573
  br i1 %cmp45, label %for.body47, label %for.end54, !dbg !4574

for.body47:                                       ; preds = %for.cond43
  %61 = load [3 x float]*, [3 x float]** %kbcos, align 8, !dbg !4575
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %61, i64 0, i64 0, !dbg !4577
  %62 = load [3 x float]*, [3 x float]** %cos, align 8, !dbg !4578
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %62, i64 0, i64 0, !dbg !4579
  call void @copy_v3_v3(float* %arraydecay48, float* %arraydecay49), !dbg !4580
  br label %for.inc50, !dbg !4581

for.inc50:                                        ; preds = %for.body47
  %63 = load i32, i32* %j, align 4, !dbg !4582
  %inc51 = add nsw i32 %63, 1, !dbg !4582
  store i32 %inc51, i32* %j, align 4, !dbg !4582
  %64 = load [3 x float]*, [3 x float]** %cos, align 8, !dbg !4583
  %incdec.ptr52 = getelementptr inbounds [3 x float], [3 x float]* %64, i32 1, !dbg !4583
  store [3 x float]* %incdec.ptr52, [3 x float]** %cos, align 8, !dbg !4583
  %65 = load [3 x float]*, [3 x float]** %kbcos, align 8, !dbg !4584
  %incdec.ptr53 = getelementptr inbounds [3 x float], [3 x float]* %65, i32 1, !dbg !4584
  store [3 x float]* %incdec.ptr53, [3 x float]** %kbcos, align 8, !dbg !4584
  br label %for.cond43, !dbg !4585, !llvm.loop !4586

for.end54:                                        ; preds = %for.cond43
  br label %if.end55

if.end55:                                         ; preds = %for.end54, %for.end42
  br label %for.inc56, !dbg !4588

for.inc56:                                        ; preds = %if.end55
  %66 = load i32, i32* %i, align 4, !dbg !4589
  %inc57 = add nsw i32 %66, 1, !dbg !4589
  store i32 %inc57, i32* %i, align 4, !dbg !4589
  br label %for.cond, !dbg !4590, !llvm.loop !4591

for.end58:                                        ; preds = %for.cond
  %67 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4593
  %key59 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %67, i32 0, i32 4, !dbg !4595
  %68 = load %struct.Key*, %struct.Key** %key59, align 8, !dbg !4595
  %block60 = getelementptr inbounds %struct.Key, %struct.Key* %68, i32 0, i32 6, !dbg !4596
  %first61 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block60, i32 0, i32 0, !dbg !4597
  %69 = load i8*, i8** %first61, align 8, !dbg !4597
  %70 = bitcast i8* %69 to %struct.KeyBlock*, !dbg !4593
  store %struct.KeyBlock* %70, %struct.KeyBlock** %kb, align 8, !dbg !4598
  br label %for.cond62, !dbg !4599

for.cond62:                                       ; preds = %for.inc86, %for.end58
  %71 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4600
  %tobool63 = icmp ne %struct.KeyBlock* %71, null, !dbg !4602
  br i1 %tobool63, label %for.body64, label %for.end88, !dbg !4602

for.body64:                                       ; preds = %for.cond62
  %72 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4603
  %totelem65 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %72, i32 0, i32 8, !dbg !4606
  %73 = load i32, i32* %totelem65, align 8, !dbg !4606
  %74 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4607
  %numVertData66 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %74, i32 0, i32 5, !dbg !4608
  %75 = load i32, i32* %numVertData66, align 8, !dbg !4608
  %cmp67 = icmp ne i32 %73, %75, !dbg !4609
  br i1 %cmp67, label %if.then69, label %if.end85, !dbg !4610

if.then69:                                        ; preds = %for.body64
  %76 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4611
  %data70 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %76, i32 0, i32 10, !dbg !4614
  %77 = load i8*, i8** %data70, align 8, !dbg !4614
  %tobool71 = icmp ne i8* %77, null, !dbg !4611
  br i1 %tobool71, label %if.then72, label %if.end74, !dbg !4615

if.then72:                                        ; preds = %if.then69
  %78 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4616
  %79 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4617
  %data73 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %79, i32 0, i32 10, !dbg !4618
  %80 = load i8*, i8** %data73, align 8, !dbg !4618
  call void %78(i8* %80), !dbg !4616
  br label %if.end74, !dbg !4616

if.end74:                                         ; preds = %if.then72, %if.then69
  %81 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4619
  %numVertData75 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %81, i32 0, i32 5, !dbg !4620
  %82 = load i32, i32* %numVertData75, align 8, !dbg !4620
  %83 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4621
  %totelem76 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %83, i32 0, i32 8, !dbg !4622
  store i32 %82, i32* %totelem76, align 8, !dbg !4623
  %84 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4624
  %85 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4625
  %totelem77 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %85, i32 0, i32 8, !dbg !4626
  %86 = load i32, i32* %totelem77, align 8, !dbg !4626
  %conv78 = sext i32 %86 to i64, !dbg !4625
  %mul79 = mul i64 12, %conv78, !dbg !4627
  %call80 = call i8* %84(i64 %mul79, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0)), !dbg !4624
  %87 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4628
  %data81 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %87, i32 0, i32 10, !dbg !4629
  store i8* %call80, i8** %data81, align 8, !dbg !4630
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4631
  %89 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4632
  %name82 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %89, i32 0, i32 11, !dbg !4633
  %arraydecay83 = getelementptr inbounds [64 x i8], [64 x i8]* %name82, i64 0, i64 0, !dbg !4632
  %call84 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %88, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.shapekey_layers_to_keyblocks, i64 0, i64 0), i8* %arraydecay83), !dbg !4634
  br label %if.end85, !dbg !4635

if.end85:                                         ; preds = %if.end74, %for.body64
  br label %for.inc86, !dbg !4636

for.inc86:                                        ; preds = %if.end85
  %90 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !4637
  %next87 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %90, i32 0, i32 0, !dbg !4638
  %91 = load %struct.KeyBlock*, %struct.KeyBlock** %next87, align 8, !dbg !4638
  store %struct.KeyBlock* %91, %struct.KeyBlock** %kb, align 8, !dbg !4639
  br label %for.cond62, !dbg !4640, !llvm.loop !4641

for.end88:                                        ; preds = %if.then, %for.cond62
  ret void, !dbg !4643
}

declare dso_local void @BKE_mesh_texspace_copy_from_object(%struct.Mesh*, %struct.Object*) #2

declare dso_local void @BKE_mesh_update_customdata_pointers(%struct.Mesh*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_to_meshkey(%struct.DerivedMesh* %dm, %struct.Mesh* %me, %struct.KeyBlock* %kb) #0 !dbg !4644 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %me.addr = alloca %struct.Mesh*, align 8
  %kb.addr = alloca %struct.KeyBlock*, align 8
  %a = alloca i32, align 4
  %totvert = alloca i32, align 4
  %fp = alloca float*, align 8
  %mvert = alloca %struct.MVert*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4647, metadata !DIExpression()), !dbg !4648
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !4649, metadata !DIExpression()), !dbg !4650
  store %struct.KeyBlock* %kb, %struct.KeyBlock** %kb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb.addr, metadata !4651, metadata !DIExpression()), !dbg !4652
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4653, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !4655, metadata !DIExpression()), !dbg !4656
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4657
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 23, !dbg !4658
  %1 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !4658
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4659
  %call = call i32 %1(%struct.DerivedMesh* %2), !dbg !4657
  store i32 %call, i32* %totvert, align 4, !dbg !4656
  call void @llvm.dbg.declare(metadata float** %fp, metadata !4660, metadata !DIExpression()), !dbg !4661
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !4662, metadata !DIExpression()), !dbg !4663
  %3 = load i32, i32* %totvert, align 4, !dbg !4664
  %cmp = icmp eq i32 %3, 0, !dbg !4666
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4667

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4668
  %totvert1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 26, !dbg !4669
  %5 = load i32, i32* %totvert1, align 8, !dbg !4669
  %cmp2 = icmp eq i32 %5, 0, !dbg !4670
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !4671

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %6 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4672
  %totvert4 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 26, !dbg !4673
  %7 = load i32, i32* %totvert4, align 8, !dbg !4673
  %8 = load i32, i32* %totvert, align 4, !dbg !4674
  %cmp5 = icmp ne i32 %7, %8, !dbg !4675
  br i1 %cmp5, label %if.then, label %if.end, !dbg !4676

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  br label %for.end, !dbg !4677

if.end:                                           ; preds = %lor.lhs.false3
  %9 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !4678
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %9, i32 0, i32 10, !dbg !4680
  %10 = load i8*, i8** %data, align 8, !dbg !4680
  %tobool = icmp ne i8* %10, null, !dbg !4678
  br i1 %tobool, label %if.then6, label %if.end8, !dbg !4681

if.then6:                                         ; preds = %if.end
  %11 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4682
  %12 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !4683
  %data7 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %12, i32 0, i32 10, !dbg !4684
  %13 = load i8*, i8** %data7, align 8, !dbg !4684
  call void %11(i8* %13), !dbg !4682
  br label %if.end8, !dbg !4682

if.end8:                                          ; preds = %if.then6, %if.end
  %14 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4685
  %15 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4686
  %key = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 4, !dbg !4687
  %16 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !4687
  %elemsize = getelementptr inbounds %struct.Key, %struct.Key* %16, i32 0, i32 4, !dbg !4688
  %17 = load i32, i32* %elemsize, align 8, !dbg !4688
  %18 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4689
  %totvert9 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 26, !dbg !4690
  %19 = load i32, i32* %totvert9, align 8, !dbg !4690
  %mul = mul nsw i32 %17, %19, !dbg !4691
  %conv = sext i32 %mul to i64, !dbg !4686
  %call10 = call i8* %14(i64 %conv, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0)), !dbg !4685
  %20 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !4692
  %data11 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %20, i32 0, i32 10, !dbg !4693
  store i8* %call10, i8** %data11, align 8, !dbg !4694
  %21 = load i32, i32* %totvert, align 4, !dbg !4695
  %22 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !4696
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %22, i32 0, i32 8, !dbg !4697
  store i32 %21, i32* %totelem, align 8, !dbg !4698
  %23 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !4699
  %data12 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %23, i32 0, i32 10, !dbg !4700
  %24 = load i8*, i8** %data12, align 8, !dbg !4700
  %25 = bitcast i8* %24 to float*, !dbg !4699
  store float* %25, float** %fp, align 8, !dbg !4701
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4702
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %26, i32 0, i32 50, !dbg !4703
  %27 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !4703
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4704
  %call13 = call i8* %27(%struct.DerivedMesh* %28, i32 0), !dbg !4702
  %29 = bitcast i8* %call13 to %struct.MVert*, !dbg !4702
  store %struct.MVert* %29, %struct.MVert** %mvert, align 8, !dbg !4705
  store i32 0, i32* %a, align 4, !dbg !4706
  br label %for.cond, !dbg !4708

for.cond:                                         ; preds = %for.inc, %if.end8
  %30 = load i32, i32* %a, align 4, !dbg !4709
  %31 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !4711
  %totelem14 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %31, i32 0, i32 8, !dbg !4712
  %32 = load i32, i32* %totelem14, align 8, !dbg !4712
  %cmp15 = icmp slt i32 %30, %32, !dbg !4713
  br i1 %cmp15, label %for.body, label %for.end, !dbg !4714

for.body:                                         ; preds = %for.cond
  %33 = load float*, float** %fp, align 8, !dbg !4715
  %34 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !4717
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %34, i32 0, i32 0, !dbg !4718
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !4717
  call void @copy_v3_v3(float* %33, float* %arraydecay), !dbg !4719
  br label %for.inc, !dbg !4720

for.inc:                                          ; preds = %for.body
  %35 = load i32, i32* %a, align 4, !dbg !4721
  %inc = add nsw i32 %35, 1, !dbg !4721
  store i32 %inc, i32* %a, align 4, !dbg !4721
  %36 = load float*, float** %fp, align 8, !dbg !4722
  %add.ptr = getelementptr inbounds float, float* %36, i64 3, !dbg !4722
  store float* %add.ptr, float** %fp, align 8, !dbg !4722
  %37 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !4723
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %37, i32 1, !dbg !4723
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mvert, align 8, !dbg !4723
  br label %for.cond, !dbg !4724, !llvm.loop !4725

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !4727
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !4728 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4732, metadata !DIExpression()), !dbg !4733
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4734, metadata !DIExpression()), !dbg !4735
  %0 = load float*, float** %a.addr, align 8, !dbg !4736
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4736
  %1 = load float, float* %arrayidx, align 4, !dbg !4736
  %2 = load float*, float** %r.addr, align 8, !dbg !4737
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4737
  store float %1, float* %arrayidx1, align 4, !dbg !4738
  %3 = load float*, float** %a.addr, align 8, !dbg !4739
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !4739
  %4 = load float, float* %arrayidx2, align 4, !dbg !4739
  %5 = load float*, float** %r.addr, align 8, !dbg !4740
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !4740
  store float %4, float* %arrayidx3, align 4, !dbg !4741
  %6 = load float*, float** %a.addr, align 8, !dbg !4742
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !4742
  %7 = load float, float* %arrayidx4, align 4, !dbg !4742
  %8 = load float*, float** %r.addr, align 8, !dbg !4743
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !4743
  store float %7, float* %arrayidx5, align 4, !dbg !4744
  ret void, !dbg !4745
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_set_only_copy(%struct.DerivedMesh* %dm, i64 %mask) #0 !dbg !4746 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mask.addr = alloca i64, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4749, metadata !DIExpression()), !dbg !4750
  store i64 %mask, i64* %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mask.addr, metadata !4751, metadata !DIExpression()), !dbg !4752
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4753
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 0, !dbg !4754
  %1 = load i64, i64* %mask.addr, align 8, !dbg !4755
  call void @CustomData_set_only_copy(%struct.CustomData* %vertData, i64 %1), !dbg !4756
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4757
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 1, !dbg !4758
  %3 = load i64, i64* %mask.addr, align 8, !dbg !4759
  call void @CustomData_set_only_copy(%struct.CustomData* %edgeData, i64 %3), !dbg !4760
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4761
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 2, !dbg !4762
  %5 = load i64, i64* %mask.addr, align 8, !dbg !4763
  call void @CustomData_set_only_copy(%struct.CustomData* %faceData, i64 %5), !dbg !4764
  ret void, !dbg !4765
}

declare dso_local void @CustomData_set_only_copy(%struct.CustomData*, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_add_vert_layer(%struct.DerivedMesh* %dm, i32 %type, i32 %alloctype, i8* %layer) #0 !dbg !4766 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %type.addr = alloca i32, align 4
  %alloctype.addr = alloca i32, align 4
  %layer.addr = alloca i8*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4769, metadata !DIExpression()), !dbg !4770
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4771, metadata !DIExpression()), !dbg !4772
  store i32 %alloctype, i32* %alloctype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloctype.addr, metadata !4773, metadata !DIExpression()), !dbg !4774
  store i8* %layer, i8** %layer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %layer.addr, metadata !4775, metadata !DIExpression()), !dbg !4776
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4777
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 0, !dbg !4778
  %1 = load i32, i32* %type.addr, align 4, !dbg !4779
  %2 = load i32, i32* %alloctype.addr, align 4, !dbg !4780
  %3 = load i8*, i8** %layer.addr, align 8, !dbg !4781
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4782
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 5, !dbg !4783
  %5 = load i32, i32* %numVertData, align 8, !dbg !4783
  %call = call i8* @CustomData_add_layer(%struct.CustomData* %vertData, i32 %1, i32 %2, i8* %3, i32 %5), !dbg !4784
  ret void, !dbg !4785
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_add_edge_layer(%struct.DerivedMesh* %dm, i32 %type, i32 %alloctype, i8* %layer) #0 !dbg !4786 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %type.addr = alloca i32, align 4
  %alloctype.addr = alloca i32, align 4
  %layer.addr = alloca i8*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4787, metadata !DIExpression()), !dbg !4788
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4789, metadata !DIExpression()), !dbg !4790
  store i32 %alloctype, i32* %alloctype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloctype.addr, metadata !4791, metadata !DIExpression()), !dbg !4792
  store i8* %layer, i8** %layer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %layer.addr, metadata !4793, metadata !DIExpression()), !dbg !4794
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4795
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 1, !dbg !4796
  %1 = load i32, i32* %type.addr, align 4, !dbg !4797
  %2 = load i32, i32* %alloctype.addr, align 4, !dbg !4798
  %3 = load i8*, i8** %layer.addr, align 8, !dbg !4799
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4800
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 6, !dbg !4801
  %5 = load i32, i32* %numEdgeData, align 4, !dbg !4801
  %call = call i8* @CustomData_add_layer(%struct.CustomData* %edgeData, i32 %1, i32 %2, i8* %3, i32 %5), !dbg !4802
  ret void, !dbg !4803
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_add_tessface_layer(%struct.DerivedMesh* %dm, i32 %type, i32 %alloctype, i8* %layer) #0 !dbg !4804 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %type.addr = alloca i32, align 4
  %alloctype.addr = alloca i32, align 4
  %layer.addr = alloca i8*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4805, metadata !DIExpression()), !dbg !4806
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4807, metadata !DIExpression()), !dbg !4808
  store i32 %alloctype, i32* %alloctype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloctype.addr, metadata !4809, metadata !DIExpression()), !dbg !4810
  store i8* %layer, i8** %layer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %layer.addr, metadata !4811, metadata !DIExpression()), !dbg !4812
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4813
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 2, !dbg !4814
  %1 = load i32, i32* %type.addr, align 4, !dbg !4815
  %2 = load i32, i32* %alloctype.addr, align 4, !dbg !4816
  %3 = load i8*, i8** %layer.addr, align 8, !dbg !4817
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4818
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 7, !dbg !4819
  %5 = load i32, i32* %numTessFaceData, align 8, !dbg !4819
  %call = call i8* @CustomData_add_layer(%struct.CustomData* %faceData, i32 %1, i32 %2, i8* %3, i32 %5), !dbg !4820
  ret void, !dbg !4821
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_add_loop_layer(%struct.DerivedMesh* %dm, i32 %type, i32 %alloctype, i8* %layer) #0 !dbg !4822 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %type.addr = alloca i32, align 4
  %alloctype.addr = alloca i32, align 4
  %layer.addr = alloca i8*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4823, metadata !DIExpression()), !dbg !4824
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4825, metadata !DIExpression()), !dbg !4826
  store i32 %alloctype, i32* %alloctype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloctype.addr, metadata !4827, metadata !DIExpression()), !dbg !4828
  store i8* %layer, i8** %layer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %layer.addr, metadata !4829, metadata !DIExpression()), !dbg !4830
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4831
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 3, !dbg !4832
  %1 = load i32, i32* %type.addr, align 4, !dbg !4833
  %2 = load i32, i32* %alloctype.addr, align 4, !dbg !4834
  %3 = load i8*, i8** %layer.addr, align 8, !dbg !4835
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4836
  %numLoopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 8, !dbg !4837
  %5 = load i32, i32* %numLoopData, align 4, !dbg !4837
  %call = call i8* @CustomData_add_layer(%struct.CustomData* %loopData, i32 %1, i32 %2, i8* %3, i32 %5), !dbg !4838
  ret void, !dbg !4839
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_add_poly_layer(%struct.DerivedMesh* %dm, i32 %type, i32 %alloctype, i8* %layer) #0 !dbg !4840 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %type.addr = alloca i32, align 4
  %alloctype.addr = alloca i32, align 4
  %layer.addr = alloca i8*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4841, metadata !DIExpression()), !dbg !4842
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4843, metadata !DIExpression()), !dbg !4844
  store i32 %alloctype, i32* %alloctype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloctype.addr, metadata !4845, metadata !DIExpression()), !dbg !4846
  store i8* %layer, i8** %layer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %layer.addr, metadata !4847, metadata !DIExpression()), !dbg !4848
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4849
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 4, !dbg !4850
  %1 = load i32, i32* %type.addr, align 4, !dbg !4851
  %2 = load i32, i32* %alloctype.addr, align 4, !dbg !4852
  %3 = load i8*, i8** %layer.addr, align 8, !dbg !4853
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4854
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 9, !dbg !4855
  %5 = load i32, i32* %numPolyData, align 8, !dbg !4855
  %call = call i8* @CustomData_add_layer(%struct.CustomData* %polyData, i32 %1, i32 %2, i8* %3, i32 %5), !dbg !4856
  ret void, !dbg !4857
}

declare dso_local i8* @CustomData_get(%struct.CustomData*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_set_vert_data(%struct.DerivedMesh* %dm, i32 %index, i32 %type, i8* %data) #0 !dbg !4858 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4859, metadata !DIExpression()), !dbg !4860
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4861, metadata !DIExpression()), !dbg !4862
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4863, metadata !DIExpression()), !dbg !4864
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !4865, metadata !DIExpression()), !dbg !4866
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4867
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 0, !dbg !4868
  %1 = load i32, i32* %index.addr, align 4, !dbg !4869
  %2 = load i32, i32* %type.addr, align 4, !dbg !4870
  %3 = load i8*, i8** %data.addr, align 8, !dbg !4871
  call void @CustomData_set(%struct.CustomData* %vertData, i32 %1, i32 %2, i8* %3), !dbg !4872
  ret void, !dbg !4873
}

declare dso_local void @CustomData_set(%struct.CustomData*, i32, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_set_edge_data(%struct.DerivedMesh* %dm, i32 %index, i32 %type, i8* %data) #0 !dbg !4874 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4875, metadata !DIExpression()), !dbg !4876
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4877, metadata !DIExpression()), !dbg !4878
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4879, metadata !DIExpression()), !dbg !4880
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !4881, metadata !DIExpression()), !dbg !4882
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4883
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 1, !dbg !4884
  %1 = load i32, i32* %index.addr, align 4, !dbg !4885
  %2 = load i32, i32* %type.addr, align 4, !dbg !4886
  %3 = load i8*, i8** %data.addr, align 8, !dbg !4887
  call void @CustomData_set(%struct.CustomData* %edgeData, i32 %1, i32 %2, i8* %3), !dbg !4888
  ret void, !dbg !4889
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_set_tessface_data(%struct.DerivedMesh* %dm, i32 %index, i32 %type, i8* %data) #0 !dbg !4890 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4891, metadata !DIExpression()), !dbg !4892
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4893, metadata !DIExpression()), !dbg !4894
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4895, metadata !DIExpression()), !dbg !4896
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !4897, metadata !DIExpression()), !dbg !4898
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4899
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 2, !dbg !4900
  %1 = load i32, i32* %index.addr, align 4, !dbg !4901
  %2 = load i32, i32* %type.addr, align 4, !dbg !4902
  %3 = load i8*, i8** %data.addr, align 8, !dbg !4903
  call void @CustomData_set(%struct.CustomData* %faceData, i32 %1, i32 %2, i8* %3), !dbg !4904
  ret void, !dbg !4905
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_copy_vert_data(%struct.DerivedMesh* %source, %struct.DerivedMesh* %dest, i32 %source_index, i32 %dest_index, i32 %count) #0 !dbg !4906 {
entry:
  %source.addr = alloca %struct.DerivedMesh*, align 8
  %dest.addr = alloca %struct.DerivedMesh*, align 8
  %source_index.addr = alloca i32, align 4
  %dest_index.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  store %struct.DerivedMesh* %source, %struct.DerivedMesh** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %source.addr, metadata !4909, metadata !DIExpression()), !dbg !4910
  store %struct.DerivedMesh* %dest, %struct.DerivedMesh** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dest.addr, metadata !4911, metadata !DIExpression()), !dbg !4912
  store i32 %source_index, i32* %source_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_index.addr, metadata !4913, metadata !DIExpression()), !dbg !4914
  store i32 %dest_index, i32* %dest_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_index.addr, metadata !4915, metadata !DIExpression()), !dbg !4916
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !4917, metadata !DIExpression()), !dbg !4918
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !4919
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 0, !dbg !4920
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dest.addr, align 8, !dbg !4921
  %vertData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 0, !dbg !4922
  %2 = load i32, i32* %source_index.addr, align 4, !dbg !4923
  %3 = load i32, i32* %dest_index.addr, align 4, !dbg !4924
  %4 = load i32, i32* %count.addr, align 4, !dbg !4925
  call void @CustomData_copy_data(%struct.CustomData* %vertData, %struct.CustomData* %vertData1, i32 %2, i32 %3, i32 %4), !dbg !4926
  ret void, !dbg !4927
}

declare dso_local void @CustomData_copy_data(%struct.CustomData*, %struct.CustomData*, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_copy_edge_data(%struct.DerivedMesh* %source, %struct.DerivedMesh* %dest, i32 %source_index, i32 %dest_index, i32 %count) #0 !dbg !4928 {
entry:
  %source.addr = alloca %struct.DerivedMesh*, align 8
  %dest.addr = alloca %struct.DerivedMesh*, align 8
  %source_index.addr = alloca i32, align 4
  %dest_index.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  store %struct.DerivedMesh* %source, %struct.DerivedMesh** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %source.addr, metadata !4929, metadata !DIExpression()), !dbg !4930
  store %struct.DerivedMesh* %dest, %struct.DerivedMesh** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dest.addr, metadata !4931, metadata !DIExpression()), !dbg !4932
  store i32 %source_index, i32* %source_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_index.addr, metadata !4933, metadata !DIExpression()), !dbg !4934
  store i32 %dest_index, i32* %dest_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_index.addr, metadata !4935, metadata !DIExpression()), !dbg !4936
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !4937, metadata !DIExpression()), !dbg !4938
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !4939
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 1, !dbg !4940
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dest.addr, align 8, !dbg !4941
  %edgeData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 1, !dbg !4942
  %2 = load i32, i32* %source_index.addr, align 4, !dbg !4943
  %3 = load i32, i32* %dest_index.addr, align 4, !dbg !4944
  %4 = load i32, i32* %count.addr, align 4, !dbg !4945
  call void @CustomData_copy_data(%struct.CustomData* %edgeData, %struct.CustomData* %edgeData1, i32 %2, i32 %3, i32 %4), !dbg !4946
  ret void, !dbg !4947
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_copy_tessface_data(%struct.DerivedMesh* %source, %struct.DerivedMesh* %dest, i32 %source_index, i32 %dest_index, i32 %count) #0 !dbg !4948 {
entry:
  %source.addr = alloca %struct.DerivedMesh*, align 8
  %dest.addr = alloca %struct.DerivedMesh*, align 8
  %source_index.addr = alloca i32, align 4
  %dest_index.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  store %struct.DerivedMesh* %source, %struct.DerivedMesh** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %source.addr, metadata !4949, metadata !DIExpression()), !dbg !4950
  store %struct.DerivedMesh* %dest, %struct.DerivedMesh** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dest.addr, metadata !4951, metadata !DIExpression()), !dbg !4952
  store i32 %source_index, i32* %source_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_index.addr, metadata !4953, metadata !DIExpression()), !dbg !4954
  store i32 %dest_index, i32* %dest_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_index.addr, metadata !4955, metadata !DIExpression()), !dbg !4956
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !4957, metadata !DIExpression()), !dbg !4958
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !4959
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 2, !dbg !4960
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dest.addr, align 8, !dbg !4961
  %faceData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 2, !dbg !4962
  %2 = load i32, i32* %source_index.addr, align 4, !dbg !4963
  %3 = load i32, i32* %dest_index.addr, align 4, !dbg !4964
  %4 = load i32, i32* %count.addr, align 4, !dbg !4965
  call void @CustomData_copy_data(%struct.CustomData* %faceData, %struct.CustomData* %faceData1, i32 %2, i32 %3, i32 %4), !dbg !4966
  ret void, !dbg !4967
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_copy_loop_data(%struct.DerivedMesh* %source, %struct.DerivedMesh* %dest, i32 %source_index, i32 %dest_index, i32 %count) #0 !dbg !4968 {
entry:
  %source.addr = alloca %struct.DerivedMesh*, align 8
  %dest.addr = alloca %struct.DerivedMesh*, align 8
  %source_index.addr = alloca i32, align 4
  %dest_index.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  store %struct.DerivedMesh* %source, %struct.DerivedMesh** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %source.addr, metadata !4969, metadata !DIExpression()), !dbg !4970
  store %struct.DerivedMesh* %dest, %struct.DerivedMesh** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dest.addr, metadata !4971, metadata !DIExpression()), !dbg !4972
  store i32 %source_index, i32* %source_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_index.addr, metadata !4973, metadata !DIExpression()), !dbg !4974
  store i32 %dest_index, i32* %dest_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_index.addr, metadata !4975, metadata !DIExpression()), !dbg !4976
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !4977, metadata !DIExpression()), !dbg !4978
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !4979
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 3, !dbg !4980
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dest.addr, align 8, !dbg !4981
  %loopData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 3, !dbg !4982
  %2 = load i32, i32* %source_index.addr, align 4, !dbg !4983
  %3 = load i32, i32* %dest_index.addr, align 4, !dbg !4984
  %4 = load i32, i32* %count.addr, align 4, !dbg !4985
  call void @CustomData_copy_data(%struct.CustomData* %loopData, %struct.CustomData* %loopData1, i32 %2, i32 %3, i32 %4), !dbg !4986
  ret void, !dbg !4987
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_copy_poly_data(%struct.DerivedMesh* %source, %struct.DerivedMesh* %dest, i32 %source_index, i32 %dest_index, i32 %count) #0 !dbg !4988 {
entry:
  %source.addr = alloca %struct.DerivedMesh*, align 8
  %dest.addr = alloca %struct.DerivedMesh*, align 8
  %source_index.addr = alloca i32, align 4
  %dest_index.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  store %struct.DerivedMesh* %source, %struct.DerivedMesh** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %source.addr, metadata !4989, metadata !DIExpression()), !dbg !4990
  store %struct.DerivedMesh* %dest, %struct.DerivedMesh** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dest.addr, metadata !4991, metadata !DIExpression()), !dbg !4992
  store i32 %source_index, i32* %source_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_index.addr, metadata !4993, metadata !DIExpression()), !dbg !4994
  store i32 %dest_index, i32* %dest_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_index.addr, metadata !4995, metadata !DIExpression()), !dbg !4996
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !4997, metadata !DIExpression()), !dbg !4998
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !4999
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 4, !dbg !5000
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dest.addr, align 8, !dbg !5001
  %polyData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 4, !dbg !5002
  %2 = load i32, i32* %source_index.addr, align 4, !dbg !5003
  %3 = load i32, i32* %dest_index.addr, align 4, !dbg !5004
  %4 = load i32, i32* %count.addr, align 4, !dbg !5005
  call void @CustomData_copy_data(%struct.CustomData* %polyData, %struct.CustomData* %polyData1, i32 %2, i32 %3, i32 %4), !dbg !5006
  ret void, !dbg !5007
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_free_vert_data(%struct.DerivedMesh* %dm, i32 %index, i32 %count) #0 !dbg !5008 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5011, metadata !DIExpression()), !dbg !5012
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5013, metadata !DIExpression()), !dbg !5014
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !5015, metadata !DIExpression()), !dbg !5016
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5017
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 0, !dbg !5018
  %1 = load i32, i32* %index.addr, align 4, !dbg !5019
  %2 = load i32, i32* %count.addr, align 4, !dbg !5020
  call void @CustomData_free_elem(%struct.CustomData* %vertData, i32 %1, i32 %2), !dbg !5021
  ret void, !dbg !5022
}

declare dso_local void @CustomData_free_elem(%struct.CustomData*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_free_edge_data(%struct.DerivedMesh* %dm, i32 %index, i32 %count) #0 !dbg !5023 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5024, metadata !DIExpression()), !dbg !5025
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5026, metadata !DIExpression()), !dbg !5027
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !5028, metadata !DIExpression()), !dbg !5029
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5030
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 1, !dbg !5031
  %1 = load i32, i32* %index.addr, align 4, !dbg !5032
  %2 = load i32, i32* %count.addr, align 4, !dbg !5033
  call void @CustomData_free_elem(%struct.CustomData* %edgeData, i32 %1, i32 %2), !dbg !5034
  ret void, !dbg !5035
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_free_tessface_data(%struct.DerivedMesh* %dm, i32 %index, i32 %count) #0 !dbg !5036 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5037, metadata !DIExpression()), !dbg !5038
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5039, metadata !DIExpression()), !dbg !5040
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !5041, metadata !DIExpression()), !dbg !5042
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5043
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 2, !dbg !5044
  %1 = load i32, i32* %index.addr, align 4, !dbg !5045
  %2 = load i32, i32* %count.addr, align 4, !dbg !5046
  call void @CustomData_free_elem(%struct.CustomData* %faceData, i32 %1, i32 %2), !dbg !5047
  ret void, !dbg !5048
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_free_loop_data(%struct.DerivedMesh* %dm, i32 %index, i32 %count) #0 !dbg !5049 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5050, metadata !DIExpression()), !dbg !5051
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5052, metadata !DIExpression()), !dbg !5053
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !5054, metadata !DIExpression()), !dbg !5055
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5056
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 3, !dbg !5057
  %1 = load i32, i32* %index.addr, align 4, !dbg !5058
  %2 = load i32, i32* %count.addr, align 4, !dbg !5059
  call void @CustomData_free_elem(%struct.CustomData* %loopData, i32 %1, i32 %2), !dbg !5060
  ret void, !dbg !5061
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_free_poly_data(%struct.DerivedMesh* %dm, i32 %index, i32 %count) #0 !dbg !5062 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5063, metadata !DIExpression()), !dbg !5064
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5065, metadata !DIExpression()), !dbg !5066
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !5067, metadata !DIExpression()), !dbg !5068
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5069
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 4, !dbg !5070
  %1 = load i32, i32* %index.addr, align 4, !dbg !5071
  %2 = load i32, i32* %count.addr, align 4, !dbg !5072
  call void @CustomData_free_elem(%struct.CustomData* %polyData, i32 %1, i32 %2), !dbg !5073
  ret void, !dbg !5074
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_interp_vert_data(%struct.DerivedMesh* %source, %struct.DerivedMesh* %dest, i32* %src_indices, float* %weights, i32 %count, i32 %dest_index) #0 !dbg !5075 {
entry:
  %source.addr = alloca %struct.DerivedMesh*, align 8
  %dest.addr = alloca %struct.DerivedMesh*, align 8
  %src_indices.addr = alloca i32*, align 8
  %weights.addr = alloca float*, align 8
  %count.addr = alloca i32, align 4
  %dest_index.addr = alloca i32, align 4
  store %struct.DerivedMesh* %source, %struct.DerivedMesh** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %source.addr, metadata !5078, metadata !DIExpression()), !dbg !5079
  store %struct.DerivedMesh* %dest, %struct.DerivedMesh** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dest.addr, metadata !5080, metadata !DIExpression()), !dbg !5081
  store i32* %src_indices, i32** %src_indices.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %src_indices.addr, metadata !5082, metadata !DIExpression()), !dbg !5083
  store float* %weights, float** %weights.addr, align 8
  call void @llvm.dbg.declare(metadata float** %weights.addr, metadata !5084, metadata !DIExpression()), !dbg !5085
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !5086, metadata !DIExpression()), !dbg !5087
  store i32 %dest_index, i32* %dest_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_index.addr, metadata !5088, metadata !DIExpression()), !dbg !5089
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !5090
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 0, !dbg !5091
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dest.addr, align 8, !dbg !5092
  %vertData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 0, !dbg !5093
  %2 = load i32*, i32** %src_indices.addr, align 8, !dbg !5094
  %3 = load float*, float** %weights.addr, align 8, !dbg !5095
  %4 = load i32, i32* %count.addr, align 4, !dbg !5096
  %5 = load i32, i32* %dest_index.addr, align 4, !dbg !5097
  call void @CustomData_interp(%struct.CustomData* %vertData, %struct.CustomData* %vertData1, i32* %2, float* %3, float* null, i32 %4, i32 %5), !dbg !5098
  ret void, !dbg !5099
}

declare dso_local void @CustomData_interp(%struct.CustomData*, %struct.CustomData*, i32*, float*, float*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_interp_edge_data(%struct.DerivedMesh* %source, %struct.DerivedMesh* %dest, i32* %src_indices, float* %weights, [2 x [2 x float]]* %vert_weights, i32 %count, i32 %dest_index) #0 !dbg !5100 {
entry:
  %source.addr = alloca %struct.DerivedMesh*, align 8
  %dest.addr = alloca %struct.DerivedMesh*, align 8
  %src_indices.addr = alloca i32*, align 8
  %weights.addr = alloca float*, align 8
  %vert_weights.addr = alloca [2 x [2 x float]]*, align 8
  %count.addr = alloca i32, align 4
  %dest_index.addr = alloca i32, align 4
  store %struct.DerivedMesh* %source, %struct.DerivedMesh** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %source.addr, metadata !5107, metadata !DIExpression()), !dbg !5108
  store %struct.DerivedMesh* %dest, %struct.DerivedMesh** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dest.addr, metadata !5109, metadata !DIExpression()), !dbg !5110
  store i32* %src_indices, i32** %src_indices.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %src_indices.addr, metadata !5111, metadata !DIExpression()), !dbg !5112
  store float* %weights, float** %weights.addr, align 8
  call void @llvm.dbg.declare(metadata float** %weights.addr, metadata !5113, metadata !DIExpression()), !dbg !5114
  store [2 x [2 x float]]* %vert_weights, [2 x [2 x float]]** %vert_weights.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x [2 x float]]** %vert_weights.addr, metadata !5115, metadata !DIExpression()), !dbg !5116
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !5117, metadata !DIExpression()), !dbg !5118
  store i32 %dest_index, i32* %dest_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_index.addr, metadata !5119, metadata !DIExpression()), !dbg !5120
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !5121
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 1, !dbg !5122
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dest.addr, align 8, !dbg !5123
  %edgeData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 1, !dbg !5124
  %2 = load i32*, i32** %src_indices.addr, align 8, !dbg !5125
  %3 = load float*, float** %weights.addr, align 8, !dbg !5126
  %4 = load [2 x [2 x float]]*, [2 x [2 x float]]** %vert_weights.addr, align 8, !dbg !5127
  %5 = bitcast [2 x [2 x float]]* %4 to float*, !dbg !5128
  %6 = load i32, i32* %count.addr, align 4, !dbg !5129
  %7 = load i32, i32* %dest_index.addr, align 4, !dbg !5130
  call void @CustomData_interp(%struct.CustomData* %edgeData, %struct.CustomData* %edgeData1, i32* %2, float* %3, float* %5, i32 %6, i32 %7), !dbg !5131
  ret void, !dbg !5132
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_interp_tessface_data(%struct.DerivedMesh* %source, %struct.DerivedMesh* %dest, i32* %src_indices, float* %weights, [50 x [50 x float]]* %vert_weights, i32 %count, i32 %dest_index) #0 !dbg !5133 {
entry:
  %source.addr = alloca %struct.DerivedMesh*, align 8
  %dest.addr = alloca %struct.DerivedMesh*, align 8
  %src_indices.addr = alloca i32*, align 8
  %weights.addr = alloca float*, align 8
  %vert_weights.addr = alloca [50 x [50 x float]]*, align 8
  %count.addr = alloca i32, align 4
  %dest_index.addr = alloca i32, align 4
  store %struct.DerivedMesh* %source, %struct.DerivedMesh** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %source.addr, metadata !5141, metadata !DIExpression()), !dbg !5142
  store %struct.DerivedMesh* %dest, %struct.DerivedMesh** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dest.addr, metadata !5143, metadata !DIExpression()), !dbg !5144
  store i32* %src_indices, i32** %src_indices.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %src_indices.addr, metadata !5145, metadata !DIExpression()), !dbg !5146
  store float* %weights, float** %weights.addr, align 8
  call void @llvm.dbg.declare(metadata float** %weights.addr, metadata !5147, metadata !DIExpression()), !dbg !5148
  store [50 x [50 x float]]* %vert_weights, [50 x [50 x float]]** %vert_weights.addr, align 8
  call void @llvm.dbg.declare(metadata [50 x [50 x float]]** %vert_weights.addr, metadata !5149, metadata !DIExpression()), !dbg !5150
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !5151, metadata !DIExpression()), !dbg !5152
  store i32 %dest_index, i32* %dest_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_index.addr, metadata !5153, metadata !DIExpression()), !dbg !5154
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !5155
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 2, !dbg !5156
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dest.addr, align 8, !dbg !5157
  %faceData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 2, !dbg !5158
  %2 = load i32*, i32** %src_indices.addr, align 8, !dbg !5159
  %3 = load float*, float** %weights.addr, align 8, !dbg !5160
  %4 = load [50 x [50 x float]]*, [50 x [50 x float]]** %vert_weights.addr, align 8, !dbg !5161
  %5 = bitcast [50 x [50 x float]]* %4 to float*, !dbg !5162
  %6 = load i32, i32* %count.addr, align 4, !dbg !5163
  %7 = load i32, i32* %dest_index.addr, align 4, !dbg !5164
  call void @CustomData_interp(%struct.CustomData* %faceData, %struct.CustomData* %faceData1, i32* %2, float* %3, float* %5, i32 %6, i32 %7), !dbg !5165
  ret void, !dbg !5166
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_swap_tessface_data(%struct.DerivedMesh* %dm, i32 %index, i32* %corner_indices) #0 !dbg !5167 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %corner_indices.addr = alloca i32*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5171, metadata !DIExpression()), !dbg !5172
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5173, metadata !DIExpression()), !dbg !5174
  store i32* %corner_indices, i32** %corner_indices.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %corner_indices.addr, metadata !5175, metadata !DIExpression()), !dbg !5176
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5177
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 2, !dbg !5178
  %1 = load i32, i32* %index.addr, align 4, !dbg !5179
  %2 = load i32*, i32** %corner_indices.addr, align 8, !dbg !5180
  call void @CustomData_swap(%struct.CustomData* %faceData, i32 %1, i32* %2), !dbg !5181
  ret void, !dbg !5182
}

declare dso_local void @CustomData_swap(%struct.CustomData*, i32, i32*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_interp_loop_data(%struct.DerivedMesh* %source, %struct.DerivedMesh* %dest, i32* %src_indices, float* %weights, i32 %count, i32 %dest_index) #0 !dbg !5183 {
entry:
  %source.addr = alloca %struct.DerivedMesh*, align 8
  %dest.addr = alloca %struct.DerivedMesh*, align 8
  %src_indices.addr = alloca i32*, align 8
  %weights.addr = alloca float*, align 8
  %count.addr = alloca i32, align 4
  %dest_index.addr = alloca i32, align 4
  store %struct.DerivedMesh* %source, %struct.DerivedMesh** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %source.addr, metadata !5184, metadata !DIExpression()), !dbg !5185
  store %struct.DerivedMesh* %dest, %struct.DerivedMesh** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dest.addr, metadata !5186, metadata !DIExpression()), !dbg !5187
  store i32* %src_indices, i32** %src_indices.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %src_indices.addr, metadata !5188, metadata !DIExpression()), !dbg !5189
  store float* %weights, float** %weights.addr, align 8
  call void @llvm.dbg.declare(metadata float** %weights.addr, metadata !5190, metadata !DIExpression()), !dbg !5191
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !5192, metadata !DIExpression()), !dbg !5193
  store i32 %dest_index, i32* %dest_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_index.addr, metadata !5194, metadata !DIExpression()), !dbg !5195
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !5196
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 3, !dbg !5197
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dest.addr, align 8, !dbg !5198
  %loopData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 3, !dbg !5199
  %2 = load i32*, i32** %src_indices.addr, align 8, !dbg !5200
  %3 = load float*, float** %weights.addr, align 8, !dbg !5201
  %4 = load i32, i32* %count.addr, align 4, !dbg !5202
  %5 = load i32, i32* %dest_index.addr, align 4, !dbg !5203
  call void @CustomData_interp(%struct.CustomData* %loopData, %struct.CustomData* %loopData1, i32* %2, float* %3, float* null, i32 %4, i32 %5), !dbg !5204
  ret void, !dbg !5205
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_interp_poly_data(%struct.DerivedMesh* %source, %struct.DerivedMesh* %dest, i32* %src_indices, float* %weights, i32 %count, i32 %dest_index) #0 !dbg !5206 {
entry:
  %source.addr = alloca %struct.DerivedMesh*, align 8
  %dest.addr = alloca %struct.DerivedMesh*, align 8
  %src_indices.addr = alloca i32*, align 8
  %weights.addr = alloca float*, align 8
  %count.addr = alloca i32, align 4
  %dest_index.addr = alloca i32, align 4
  store %struct.DerivedMesh* %source, %struct.DerivedMesh** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %source.addr, metadata !5207, metadata !DIExpression()), !dbg !5208
  store %struct.DerivedMesh* %dest, %struct.DerivedMesh** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dest.addr, metadata !5209, metadata !DIExpression()), !dbg !5210
  store i32* %src_indices, i32** %src_indices.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %src_indices.addr, metadata !5211, metadata !DIExpression()), !dbg !5212
  store float* %weights, float** %weights.addr, align 8
  call void @llvm.dbg.declare(metadata float** %weights.addr, metadata !5213, metadata !DIExpression()), !dbg !5214
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !5215, metadata !DIExpression()), !dbg !5216
  store i32 %dest_index, i32* %dest_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_index.addr, metadata !5217, metadata !DIExpression()), !dbg !5218
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %source.addr, align 8, !dbg !5219
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 4, !dbg !5220
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dest.addr, align 8, !dbg !5221
  %polyData1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 4, !dbg !5222
  %2 = load i32*, i32** %src_indices.addr, align 8, !dbg !5223
  %3 = load float*, float** %weights.addr, align 8, !dbg !5224
  %4 = load i32, i32* %count.addr, align 4, !dbg !5225
  %5 = load i32, i32* %dest_index.addr, align 4, !dbg !5226
  call void @CustomData_interp(%struct.CustomData* %polyData, %struct.CustomData* %polyData1, i32* %2, float* %3, float* null, i32 %4, i32 %5), !dbg !5227
  ret void, !dbg !5228
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @mesh_create_derived(%struct.Mesh* %me, [3 x float]* %vertCos) #0 !dbg !5229 {
entry:
  %retval = alloca %struct.DerivedMesh*, align 8
  %me.addr = alloca %struct.Mesh*, align 8
  %vertCos.addr = alloca [3 x float]*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !5232, metadata !DIExpression()), !dbg !5233
  store [3 x float]* %vertCos, [3 x float]** %vertCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertCos.addr, metadata !5234, metadata !DIExpression()), !dbg !5235
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !5236, metadata !DIExpression()), !dbg !5237
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5238
  %call = call %struct.DerivedMesh* @CDDM_from_mesh(%struct.Mesh* %0), !dbg !5239
  store %struct.DerivedMesh* %call, %struct.DerivedMesh** %dm, align 8, !dbg !5237
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5240
  %tobool = icmp ne %struct.DerivedMesh* %1, null, !dbg !5240
  br i1 %tobool, label %if.end, label %if.then, !dbg !5242

if.then:                                          ; preds = %entry
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %retval, align 8, !dbg !5243
  br label %return, !dbg !5243

if.end:                                           ; preds = %entry
  %2 = load [3 x float]*, [3 x float]** %vertCos.addr, align 8, !dbg !5244
  %tobool1 = icmp ne [3 x float]* %2, null, !dbg !5244
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !5246

if.then2:                                         ; preds = %if.end
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5247
  %4 = load [3 x float]*, [3 x float]** %vertCos.addr, align 8, !dbg !5249
  call void @CDDM_apply_vert_coords(%struct.DerivedMesh* %3, [3 x float]* %4), !dbg !5250
  br label %if.end3, !dbg !5251

if.end3:                                          ; preds = %if.then2, %if.end
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5252
  store %struct.DerivedMesh* %5, %struct.DerivedMesh** %retval, align 8, !dbg !5253
  br label %return, !dbg !5253

return:                                           ; preds = %if.end3, %if.then
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %retval, align 8, !dbg !5254
  ret %struct.DerivedMesh* %6, !dbg !5254
}

declare dso_local %struct.DerivedMesh* @CDDM_from_mesh(%struct.Mesh*) #2

declare dso_local void @CDDM_apply_vert_coords(%struct.DerivedMesh*, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @mesh_create_derived_for_modifier(%struct.Scene* %scene, %struct.Object* %ob, %struct.ModifierData* %md, i32 %build_shapekey_layers) #0 !dbg !5255 {
entry:
  %retval = alloca %struct.DerivedMesh*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %md.addr = alloca %struct.ModifierData*, align 8
  %build_shapekey_layers.addr = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %mti = alloca %struct.ModifierTypeInfo*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  %numVerts = alloca i32, align 4
  %deformedVerts = alloca [3 x float]*, align 8
  %tdm = alloca %struct.DerivedMesh*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5261, metadata !DIExpression()), !dbg !5262
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5263, metadata !DIExpression()), !dbg !5264
  store %struct.ModifierData* %md, %struct.ModifierData** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md.addr, metadata !5265, metadata !DIExpression()), !dbg !5266
  store i32 %build_shapekey_layers, i32* %build_shapekey_layers.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %build_shapekey_layers.addr, metadata !5267, metadata !DIExpression()), !dbg !5268
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !5269, metadata !DIExpression()), !dbg !5270
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5271
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !5272
  %1 = load i8*, i8** %data, align 8, !dbg !5272
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !5271
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !5270
  call void @llvm.dbg.declare(metadata %struct.ModifierTypeInfo** %mti, metadata !5273, metadata !DIExpression()), !dbg !5364
  %3 = load %struct.ModifierData*, %struct.ModifierData** %md.addr, align 8, !dbg !5365
  %type = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %3, i32 0, i32 2, !dbg !5366
  %4 = load i32, i32* %type, align 8, !dbg !5366
  %call = call %struct.ModifierTypeInfo* @modifierType_getInfo(i32 %4), !dbg !5367
  store %struct.ModifierTypeInfo* %call, %struct.ModifierTypeInfo** %mti, align 8, !dbg !5364
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !5368, metadata !DIExpression()), !dbg !5369
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !5370, metadata !DIExpression()), !dbg !5371
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5372
  %6 = load %struct.ModifierData*, %struct.ModifierData** %md.addr, align 8, !dbg !5373
  %scene1 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %6, i32 0, i32 7, !dbg !5374
  store %struct.Scene* %5, %struct.Scene** %scene1, align 8, !dbg !5375
  %7 = load %struct.ModifierData*, %struct.ModifierData** %md.addr, align 8, !dbg !5376
  %mode = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %7, i32 0, i32 3, !dbg !5378
  %8 = load i32, i32* %mode, align 4, !dbg !5378
  %and = and i32 %8, 1, !dbg !5379
  %tobool = icmp ne i32 %and, 0, !dbg !5379
  br i1 %tobool, label %if.end, label %if.then, !dbg !5380

if.then:                                          ; preds = %entry
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %retval, align 8, !dbg !5381
  br label %return, !dbg !5381

if.end:                                           ; preds = %entry
  %9 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !5382
  %isDisabled = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %9, i32 0, i32 15, !dbg !5384
  %10 = load i8 (%struct.ModifierData*, i32)*, i8 (%struct.ModifierData*, i32)** %isDisabled, align 8, !dbg !5384
  %tobool2 = icmp ne i8 (%struct.ModifierData*, i32)* %10, null, !dbg !5382
  br i1 %tobool2, label %land.lhs.true, label %if.end7, !dbg !5385

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !5386
  %isDisabled3 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %11, i32 0, i32 15, !dbg !5387
  %12 = load i8 (%struct.ModifierData*, i32)*, i8 (%struct.ModifierData*, i32)** %isDisabled3, align 8, !dbg !5387
  %13 = load %struct.ModifierData*, %struct.ModifierData** %md.addr, align 8, !dbg !5388
  %call4 = call zeroext i8 %12(%struct.ModifierData* %13, i32 0), !dbg !5386
  %conv = zext i8 %call4 to i32, !dbg !5386
  %tobool5 = icmp ne i32 %conv, 0, !dbg !5386
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !5389

if.then6:                                         ; preds = %land.lhs.true
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %retval, align 8, !dbg !5390
  br label %return, !dbg !5390

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %14 = load i32, i32* %build_shapekey_layers.addr, align 4, !dbg !5391
  %tobool8 = icmp ne i32 %14, 0, !dbg !5391
  br i1 %tobool8, label %land.lhs.true9, label %if.end17, !dbg !5393

land.lhs.true9:                                   ; preds = %if.end7
  %15 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5394
  %key = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 4, !dbg !5395
  %16 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !5395
  %tobool10 = icmp ne %struct.Key* %16, null, !dbg !5394
  br i1 %tobool10, label %land.lhs.true11, label %if.end17, !dbg !5396

land.lhs.true11:                                  ; preds = %land.lhs.true9
  %17 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5397
  %key12 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 4, !dbg !5398
  %18 = load %struct.Key*, %struct.Key** %key12, align 8, !dbg !5398
  %block = getelementptr inbounds %struct.Key, %struct.Key* %18, i32 0, i32 6, !dbg !5399
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5400
  %shapenr = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 115, !dbg !5401
  %20 = load i16, i16* %shapenr, align 2, !dbg !5401
  %conv13 = sext i16 %20 to i32, !dbg !5400
  %sub = sub nsw i32 %conv13, 1, !dbg !5402
  %call14 = call i8* @BLI_findlink(%struct.ListBase* %block, i32 %sub), !dbg !5403
  %21 = bitcast i8* %call14 to %struct.KeyBlock*, !dbg !5403
  store %struct.KeyBlock* %21, %struct.KeyBlock** %kb, align 8, !dbg !5404
  %tobool15 = icmp ne %struct.KeyBlock* %21, null, !dbg !5404
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !5405

if.then16:                                        ; preds = %land.lhs.true11
  %22 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5406
  %23 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5408
  call void @BKE_key_convert_to_mesh(%struct.KeyBlock* %22, %struct.Mesh* %23), !dbg !5409
  br label %if.end17, !dbg !5410

if.end17:                                         ; preds = %if.then16, %land.lhs.true11, %land.lhs.true9, %if.end7
  %24 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !5411
  %type18 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %24, i32 0, i32 3, !dbg !5413
  %25 = load i32, i32* %type18, align 4, !dbg !5413
  %cmp = icmp eq i32 %25, 1, !dbg !5414
  br i1 %cmp, label %if.then20, label %if.else, !dbg !5415

if.then20:                                        ; preds = %if.end17
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !5416, metadata !DIExpression()), !dbg !5418
  call void @llvm.dbg.declare(metadata [3 x float]** %deformedVerts, metadata !5419, metadata !DIExpression()), !dbg !5420
  %26 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5421
  %call21 = call [3 x float]* @BKE_mesh_vertexCos_get(%struct.Mesh* %26, i32* %numVerts), !dbg !5422
  store [3 x float]* %call21, [3 x float]** %deformedVerts, align 8, !dbg !5420
  %27 = load %struct.ModifierData*, %struct.ModifierData** %md.addr, align 8, !dbg !5423
  %28 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5424
  %29 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !5425
  %30 = load i32, i32* %numVerts, align 4, !dbg !5426
  call void @modwrap_deformVerts(%struct.ModifierData* %27, %struct.Object* %28, %struct.DerivedMesh* null, [3 x float]* %29, i32 %30, i32 0), !dbg !5427
  %31 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5428
  %32 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !5429
  %call22 = call %struct.DerivedMesh* @mesh_create_derived(%struct.Mesh* %31, [3 x float]* %32), !dbg !5430
  store %struct.DerivedMesh* %call22, %struct.DerivedMesh** %dm, align 8, !dbg !5431
  %33 = load i32, i32* %build_shapekey_layers.addr, align 4, !dbg !5432
  %tobool23 = icmp ne i32 %33, 0, !dbg !5432
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !5434

if.then24:                                        ; preds = %if.then20
  %34 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5435
  %35 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5436
  %36 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5437
  call void @add_shapekey_layers(%struct.DerivedMesh* %34, %struct.Mesh* %35, %struct.Object* %36), !dbg !5438
  br label %if.end25, !dbg !5438

if.end25:                                         ; preds = %if.then24, %if.then20
  %37 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5439
  %38 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !5440
  %39 = bitcast [3 x float]* %38 to i8*, !dbg !5440
  call void %37(i8* %39), !dbg !5439
  br label %if.end36, !dbg !5441

if.else:                                          ; preds = %if.end17
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %tdm, metadata !5442, metadata !DIExpression()), !dbg !5444
  %40 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5445
  %call26 = call %struct.DerivedMesh* @mesh_create_derived(%struct.Mesh* %40, [3 x float]* null), !dbg !5446
  store %struct.DerivedMesh* %call26, %struct.DerivedMesh** %tdm, align 8, !dbg !5444
  %41 = load i32, i32* %build_shapekey_layers.addr, align 4, !dbg !5447
  %tobool27 = icmp ne i32 %41, 0, !dbg !5447
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !5449

if.then28:                                        ; preds = %if.else
  %42 = load %struct.DerivedMesh*, %struct.DerivedMesh** %tdm, align 8, !dbg !5450
  %43 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5451
  %44 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5452
  call void @add_shapekey_layers(%struct.DerivedMesh* %42, %struct.Mesh* %43, %struct.Object* %44), !dbg !5453
  br label %if.end29, !dbg !5453

if.end29:                                         ; preds = %if.then28, %if.else
  %45 = load %struct.ModifierData*, %struct.ModifierData** %md.addr, align 8, !dbg !5454
  %46 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5455
  %47 = load %struct.DerivedMesh*, %struct.DerivedMesh** %tdm, align 8, !dbg !5456
  %call30 = call %struct.DerivedMesh* @modwrap_applyModifier(%struct.ModifierData* %45, %struct.Object* %46, %struct.DerivedMesh* %47, i32 0), !dbg !5457
  store %struct.DerivedMesh* %call30, %struct.DerivedMesh** %dm, align 8, !dbg !5458
  %48 = load %struct.DerivedMesh*, %struct.DerivedMesh** %tdm, align 8, !dbg !5459
  %49 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5461
  %cmp31 = icmp ne %struct.DerivedMesh* %48, %49, !dbg !5462
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !5463

if.then33:                                        ; preds = %if.end29
  %50 = load %struct.DerivedMesh*, %struct.DerivedMesh** %tdm, align 8, !dbg !5464
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %50, i32 0, i32 95, !dbg !5465
  %release34 = bitcast {}** %release to void (%struct.DerivedMesh*)**, !dbg !5465
  %51 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release34, align 8, !dbg !5465
  %52 = load %struct.DerivedMesh*, %struct.DerivedMesh** %tdm, align 8, !dbg !5466
  call void %51(%struct.DerivedMesh* %52), !dbg !5464
  br label %if.end35, !dbg !5464

if.end35:                                         ; preds = %if.then33, %if.end29
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end25
  %53 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5467
  store %struct.DerivedMesh* %53, %struct.DerivedMesh** %retval, align 8, !dbg !5468
  br label %return, !dbg !5468

return:                                           ; preds = %if.end36, %if.then6, %if.then
  %54 = load %struct.DerivedMesh*, %struct.DerivedMesh** %retval, align 8, !dbg !5469
  ret %struct.DerivedMesh* %54, !dbg !5469
}

declare dso_local %struct.ModifierTypeInfo* @modifierType_getInfo(i32) #2

declare dso_local void @BKE_key_convert_to_mesh(%struct.KeyBlock*, %struct.Mesh*) #2

declare dso_local [3 x float]* @BKE_mesh_vertexCos_get(%struct.Mesh*, i32*) #2

declare dso_local void @modwrap_deformVerts(%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_shapekey_layers(%struct.DerivedMesh* %dm, %struct.Mesh* %me, %struct.Object* %UNUSED_ob) #0 !dbg !5470 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %me.addr = alloca %struct.Mesh*, align 8
  %UNUSED_ob.addr = alloca %struct.Object*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  %key = alloca %struct.Key*, align 8
  %i = alloca i32, align 4
  %shape_alloc_len = alloca i64, align 8
  %ci = alloca i32, align 4
  %array = alloca float*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5473, metadata !DIExpression()), !dbg !5474
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !5475, metadata !DIExpression()), !dbg !5476
  store %struct.Object* %UNUSED_ob, %struct.Object** %UNUSED_ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %UNUSED_ob.addr, metadata !5477, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !5479, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.declare(metadata %struct.Key** %key, metadata !5481, metadata !DIExpression()), !dbg !5484
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5485
  %key1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 4, !dbg !5486
  %1 = load %struct.Key*, %struct.Key** %key1, align 8, !dbg !5486
  store %struct.Key* %1, %struct.Key** %key, align 8, !dbg !5484
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5487, metadata !DIExpression()), !dbg !5488
  call void @llvm.dbg.declare(metadata i64* %shape_alloc_len, metadata !5489, metadata !DIExpression()), !dbg !5493
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5494
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 26, !dbg !5495
  %3 = load i32, i32* %totvert, align 8, !dbg !5495
  %conv = sext i32 %3 to i64, !dbg !5494
  %mul = mul i64 12, %conv, !dbg !5496
  store i64 %mul, i64* %shape_alloc_len, align 8, !dbg !5493
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5497
  %key2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 4, !dbg !5499
  %5 = load %struct.Key*, %struct.Key** %key2, align 8, !dbg !5499
  %tobool = icmp ne %struct.Key* %5, null, !dbg !5497
  br i1 %tobool, label %if.end, label %if.then, !dbg !5500

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !5501

if.end:                                           ; preds = %entry
  %6 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5502
  %totvert3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 26, !dbg !5504
  %7 = load i32, i32* %totvert3, align 8, !dbg !5504
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5505
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 23, !dbg !5506
  %9 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !5506
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5507
  %call = call i32 %9(%struct.DerivedMesh* %10), !dbg !5505
  %cmp = icmp ne i32 %7, %call, !dbg !5508
  br i1 %cmp, label %if.then5, label %if.end10, !dbg !5509

if.then5:                                         ; preds = %if.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5510
  %12 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5512
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 0, !dbg !5513
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !5514
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !5512
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !5515
  %13 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5516
  %totvert6 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %13, i32 0, i32 26, !dbg !5517
  %14 = load i32, i32* %totvert6, align 8, !dbg !5517
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5518
  %getNumVerts7 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 23, !dbg !5519
  %16 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts7, align 8, !dbg !5519
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5520
  %call8 = call i32 %16(%struct.DerivedMesh* %17), !dbg !5518
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.add_shapekey_layers, i64 0, i64 0), i8* %add.ptr, i32 %14, i32 %call8), !dbg !5521
  br label %for.end, !dbg !5522

if.end10:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !5523
  %18 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !5525
  %block = getelementptr inbounds %struct.Key, %struct.Key* %18, i32 0, i32 6, !dbg !5526
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block, i32 0, i32 0, !dbg !5527
  %19 = load i8*, i8** %first, align 8, !dbg !5527
  %20 = bitcast i8* %19 to %struct.KeyBlock*, !dbg !5525
  store %struct.KeyBlock* %20, %struct.KeyBlock** %kb, align 8, !dbg !5528
  br label %for.cond, !dbg !5529

for.cond:                                         ; preds = %for.inc, %if.end10
  %21 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5530
  %tobool11 = icmp ne %struct.KeyBlock* %21, null, !dbg !5532
  br i1 %tobool11, label %for.body, label %for.end, !dbg !5532

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %ci, metadata !5533, metadata !DIExpression()), !dbg !5535
  call void @llvm.dbg.declare(metadata float** %array, metadata !5536, metadata !DIExpression()), !dbg !5537
  %22 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5538
  %totvert12 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %22, i32 0, i32 26, !dbg !5540
  %23 = load i32, i32* %totvert12, align 8, !dbg !5540
  %24 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5541
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %24, i32 0, i32 8, !dbg !5542
  %25 = load i32, i32* %totelem, align 8, !dbg !5542
  %cmp13 = icmp ne i32 %23, %25, !dbg !5543
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !5544

if.then15:                                        ; preds = %for.body
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5545
  %27 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5547
  %id16 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %27, i32 0, i32 0, !dbg !5548
  %name17 = getelementptr inbounds %struct.ID, %struct.ID* %id16, i32 0, i32 4, !dbg !5549
  %arraydecay18 = getelementptr inbounds [66 x i8], [66 x i8]* %name17, i64 0, i64 0, !dbg !5547
  %add.ptr19 = getelementptr inbounds i8, i8* %arraydecay18, i64 2, !dbg !5550
  %28 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5551
  %totvert20 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %28, i32 0, i32 26, !dbg !5552
  %29 = load i32, i32* %totvert20, align 8, !dbg !5552
  %30 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5553
  %name21 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %30, i32 0, i32 11, !dbg !5554
  %arraydecay22 = getelementptr inbounds [64 x i8], [64 x i8]* %name21, i64 0, i64 0, !dbg !5553
  %31 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5555
  %totelem23 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %31, i32 0, i32 8, !dbg !5556
  %32 = load i32, i32* %totelem23, align 8, !dbg !5556
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.add_shapekey_layers, i64 0, i64 0), i8* %add.ptr19, i32 %29, i8* %arraydecay22, i32 %32), !dbg !5557
  %33 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5558
  %34 = load i64, i64* %shape_alloc_len, align 8, !dbg !5559
  %call25 = call i8* %33(i64 %34, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.add_shapekey_layers, i64 0, i64 0)), !dbg !5558
  %35 = bitcast i8* %call25 to float*, !dbg !5558
  store float* %35, float** %array, align 8, !dbg !5560
  br label %if.end27, !dbg !5561

if.else:                                          ; preds = %for.body
  %36 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5562
  %37 = load i64, i64* %shape_alloc_len, align 8, !dbg !5564
  %call26 = call i8* %36(i64 %37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.add_shapekey_layers, i64 0, i64 0)), !dbg !5562
  %38 = bitcast i8* %call26 to float*, !dbg !5562
  store float* %38, float** %array, align 8, !dbg !5565
  %39 = load float*, float** %array, align 8, !dbg !5566
  %40 = bitcast float* %39 to i8*, !dbg !5567
  %41 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5568
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %41, i32 0, i32 10, !dbg !5569
  %42 = load i8*, i8** %data, align 8, !dbg !5569
  %43 = load i64, i64* %shape_alloc_len, align 8, !dbg !5570
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 1 %42, i64 %43, i1 false), !dbg !5567
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then15
  %44 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5571
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %44, i32 0, i32 0, !dbg !5572
  %45 = load float*, float** %array, align 8, !dbg !5573
  %46 = bitcast float* %45 to i8*, !dbg !5573
  %47 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5574
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %47, i32 0, i32 5, !dbg !5575
  %48 = load i32, i32* %numVertData, align 8, !dbg !5575
  %49 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5576
  %name28 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %49, i32 0, i32 11, !dbg !5577
  %arraydecay29 = getelementptr inbounds [64 x i8], [64 x i8]* %name28, i64 0, i64 0, !dbg !5576
  %call30 = call i8* @CustomData_add_layer_named(%struct.CustomData* %vertData, i32 28, i32 0, i8* %46, i32 %48, i8* %arraydecay29), !dbg !5578
  %50 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5579
  %vertData31 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %50, i32 0, i32 0, !dbg !5580
  %51 = load i32, i32* %i, align 4, !dbg !5581
  %call32 = call i32 @CustomData_get_layer_index_n(%struct.CustomData* %vertData31, i32 28, i32 %51), !dbg !5582
  store i32 %call32, i32* %ci, align 4, !dbg !5583
  %52 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5584
  %uid = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %52, i32 0, i32 9, !dbg !5585
  %53 = load i32, i32* %uid, align 4, !dbg !5585
  %54 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5586
  %vertData33 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %54, i32 0, i32 0, !dbg !5587
  %layers = getelementptr inbounds %struct.CustomData, %struct.CustomData* %vertData33, i32 0, i32 0, !dbg !5588
  %55 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers, align 8, !dbg !5588
  %56 = load i32, i32* %ci, align 4, !dbg !5589
  %idxprom = sext i32 %56 to i64, !dbg !5586
  %arrayidx = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %55, i64 %idxprom, !dbg !5586
  %uid34 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx, i32 0, i32 7, !dbg !5590
  store i32 %53, i32* %uid34, align 4, !dbg !5591
  br label %for.inc, !dbg !5592

for.inc:                                          ; preds = %if.end27
  %57 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5593
  %next = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %57, i32 0, i32 0, !dbg !5594
  %58 = load %struct.KeyBlock*, %struct.KeyBlock** %next, align 8, !dbg !5594
  store %struct.KeyBlock* %58, %struct.KeyBlock** %kb, align 8, !dbg !5595
  %59 = load i32, i32* %i, align 4, !dbg !5596
  %inc = add nsw i32 %59, 1, !dbg !5596
  store i32 %inc, i32* %i, align 4, !dbg !5596
  br label %for.cond, !dbg !5597, !llvm.loop !5598

for.end:                                          ; preds = %if.then, %if.then5, %for.cond
  ret void, !dbg !5600
}

declare dso_local %struct.DerivedMesh* @modwrap_applyModifier(%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @weight_to_rgb(float* %r_rgb, float %weight) #0 !dbg !5601 {
entry:
  %r_rgb.addr = alloca float*, align 8
  %weight.addr = alloca float, align 4
  %blend = alloca float, align 4
  store float* %r_rgb, float** %r_rgb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_rgb.addr, metadata !5604, metadata !DIExpression()), !dbg !5605
  store float %weight, float* %weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %weight.addr, metadata !5606, metadata !DIExpression()), !dbg !5607
  call void @llvm.dbg.declare(metadata float* %blend, metadata !5608, metadata !DIExpression()), !dbg !5609
  %0 = load float, float* %weight.addr, align 4, !dbg !5610
  %div = fdiv float %0, 2.000000e+00, !dbg !5611
  %add = fadd float %div, 5.000000e-01, !dbg !5612
  store float %add, float* %blend, align 4, !dbg !5609
  %1 = load float, float* %weight.addr, align 4, !dbg !5613
  %cmp = fcmp ole float %1, 2.500000e-01, !dbg !5615
  br i1 %cmp, label %if.then, label %if.else, !dbg !5616

if.then:                                          ; preds = %entry
  %2 = load float*, float** %r_rgb.addr, align 8, !dbg !5617
  %arrayidx = getelementptr inbounds float, float* %2, i64 0, !dbg !5617
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !5619
  %3 = load float, float* %blend, align 4, !dbg !5620
  %4 = load float, float* %weight.addr, align 4, !dbg !5621
  %mul = fmul float %3, %4, !dbg !5622
  %mul1 = fmul float %mul, 4.000000e+00, !dbg !5623
  %5 = load float*, float** %r_rgb.addr, align 8, !dbg !5624
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1, !dbg !5624
  store float %mul1, float* %arrayidx2, align 4, !dbg !5625
  %6 = load float, float* %blend, align 4, !dbg !5626
  %7 = load float*, float** %r_rgb.addr, align 8, !dbg !5627
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !5627
  store float %6, float* %arrayidx3, align 4, !dbg !5628
  br label %if.end37, !dbg !5629

if.else:                                          ; preds = %entry
  %8 = load float, float* %weight.addr, align 4, !dbg !5630
  %cmp4 = fcmp ole float %8, 5.000000e-01, !dbg !5632
  br i1 %cmp4, label %if.then5, label %if.else12, !dbg !5633

if.then5:                                         ; preds = %if.else
  %9 = load float*, float** %r_rgb.addr, align 8, !dbg !5634
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 0, !dbg !5634
  store float 0.000000e+00, float* %arrayidx6, align 4, !dbg !5636
  %10 = load float, float* %blend, align 4, !dbg !5637
  %11 = load float*, float** %r_rgb.addr, align 8, !dbg !5638
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 1, !dbg !5638
  store float %10, float* %arrayidx7, align 4, !dbg !5639
  %12 = load float, float* %blend, align 4, !dbg !5640
  %13 = load float, float* %weight.addr, align 4, !dbg !5641
  %sub = fsub float %13, 2.500000e-01, !dbg !5642
  %mul8 = fmul float %sub, 4.000000e+00, !dbg !5643
  %sub9 = fsub float 1.000000e+00, %mul8, !dbg !5644
  %mul10 = fmul float %12, %sub9, !dbg !5645
  %14 = load float*, float** %r_rgb.addr, align 8, !dbg !5646
  %arrayidx11 = getelementptr inbounds float, float* %14, i64 2, !dbg !5646
  store float %mul10, float* %arrayidx11, align 4, !dbg !5647
  br label %if.end36, !dbg !5648

if.else12:                                        ; preds = %if.else
  %15 = load float, float* %weight.addr, align 4, !dbg !5649
  %cmp13 = fcmp ole float %15, 7.500000e-01, !dbg !5651
  br i1 %cmp13, label %if.then14, label %if.else21, !dbg !5652

if.then14:                                        ; preds = %if.else12
  %16 = load float, float* %blend, align 4, !dbg !5653
  %17 = load float, float* %weight.addr, align 4, !dbg !5655
  %sub15 = fsub float %17, 5.000000e-01, !dbg !5656
  %mul16 = fmul float %sub15, 4.000000e+00, !dbg !5657
  %mul17 = fmul float %16, %mul16, !dbg !5658
  %18 = load float*, float** %r_rgb.addr, align 8, !dbg !5659
  %arrayidx18 = getelementptr inbounds float, float* %18, i64 0, !dbg !5659
  store float %mul17, float* %arrayidx18, align 4, !dbg !5660
  %19 = load float, float* %blend, align 4, !dbg !5661
  %20 = load float*, float** %r_rgb.addr, align 8, !dbg !5662
  %arrayidx19 = getelementptr inbounds float, float* %20, i64 1, !dbg !5662
  store float %19, float* %arrayidx19, align 4, !dbg !5663
  %21 = load float*, float** %r_rgb.addr, align 8, !dbg !5664
  %arrayidx20 = getelementptr inbounds float, float* %21, i64 2, !dbg !5664
  store float 0.000000e+00, float* %arrayidx20, align 4, !dbg !5665
  br label %if.end35, !dbg !5666

if.else21:                                        ; preds = %if.else12
  %22 = load float, float* %weight.addr, align 4, !dbg !5667
  %cmp22 = fcmp ole float %22, 1.000000e+00, !dbg !5669
  br i1 %cmp22, label %if.then23, label %if.else31, !dbg !5670

if.then23:                                        ; preds = %if.else21
  %23 = load float, float* %blend, align 4, !dbg !5671
  %24 = load float*, float** %r_rgb.addr, align 8, !dbg !5673
  %arrayidx24 = getelementptr inbounds float, float* %24, i64 0, !dbg !5673
  store float %23, float* %arrayidx24, align 4, !dbg !5674
  %25 = load float, float* %blend, align 4, !dbg !5675
  %26 = load float, float* %weight.addr, align 4, !dbg !5676
  %sub25 = fsub float %26, 7.500000e-01, !dbg !5677
  %mul26 = fmul float %sub25, 4.000000e+00, !dbg !5678
  %sub27 = fsub float 1.000000e+00, %mul26, !dbg !5679
  %mul28 = fmul float %25, %sub27, !dbg !5680
  %27 = load float*, float** %r_rgb.addr, align 8, !dbg !5681
  %arrayidx29 = getelementptr inbounds float, float* %27, i64 1, !dbg !5681
  store float %mul28, float* %arrayidx29, align 4, !dbg !5682
  %28 = load float*, float** %r_rgb.addr, align 8, !dbg !5683
  %arrayidx30 = getelementptr inbounds float, float* %28, i64 2, !dbg !5683
  store float 0.000000e+00, float* %arrayidx30, align 4, !dbg !5684
  br label %if.end, !dbg !5685

if.else31:                                        ; preds = %if.else21
  %29 = load float*, float** %r_rgb.addr, align 8, !dbg !5686
  %arrayidx32 = getelementptr inbounds float, float* %29, i64 0, !dbg !5686
  store float 1.000000e+00, float* %arrayidx32, align 4, !dbg !5688
  %30 = load float*, float** %r_rgb.addr, align 8, !dbg !5689
  %arrayidx33 = getelementptr inbounds float, float* %30, i64 1, !dbg !5689
  store float 0.000000e+00, float* %arrayidx33, align 4, !dbg !5690
  %31 = load float*, float** %r_rgb.addr, align 8, !dbg !5691
  %arrayidx34 = getelementptr inbounds float, float* %31, i64 2, !dbg !5691
  store float 1.000000e+00, float* %arrayidx34, align 4, !dbg !5692
  br label %if.end

if.end:                                           ; preds = %if.else31, %if.then23
  br label %if.end35

if.end35:                                         ; preds = %if.end, %if.then14
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then5
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then
  ret void, !dbg !5693
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @vDM_ColorBand_store(%struct.ColorBand* %coba, i8* %alert_color) #0 !dbg !5694 {
entry:
  %coba.addr = alloca %struct.ColorBand*, align 8
  %alert_color.addr = alloca i8*, align 8
  store %struct.ColorBand* %coba, %struct.ColorBand** %coba.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ColorBand** %coba.addr, metadata !5697, metadata !DIExpression()), !dbg !5698
  store i8* %alert_color, i8** %alert_color.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %alert_color.addr, metadata !5699, metadata !DIExpression()), !dbg !5700
  %0 = load %struct.ColorBand*, %struct.ColorBand** %coba.addr, align 8, !dbg !5701
  store %struct.ColorBand* %0, %struct.ColorBand** getelementptr inbounds (%struct.DMWeightColorInfo, %struct.DMWeightColorInfo* @G_dm_wcinfo, i32 0, i32 0), align 8, !dbg !5702
  %1 = load i8*, i8** %alert_color.addr, align 8, !dbg !5703
  store i8* %1, i8** getelementptr inbounds (%struct.DMWeightColorInfo, %struct.DMWeightColorInfo* @G_dm_wcinfo, i32 0, i32 1), align 8, !dbg !5704
  ret void, !dbg !5705
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_update_weight_mcol(%struct.Object* %ob, %struct.DerivedMesh* %dm, i32 %draw_flag, float* %weights, i32 %num, i32* %indices) #0 !dbg !5706 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %draw_flag.addr = alloca i32, align 4
  %weights.addr = alloca float*, align 8
  %num.addr = alloca i32, align 4
  %indices.addr = alloca i32*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %wtcol_v = alloca [4 x i8]*, align 8
  %numVerts = alloca i32, align 4
  %i = alloca i32, align 4
  %w = alloca float*, align 8
  %dm_totpoly = alloca i32, align 4
  %dm_totloop = alloca i32, align 4
  %wtcol_l = alloca [4 x i8]*, align 8
  %mloop = alloca %struct.MLoop*, align 8
  %ml = alloca %struct.MLoop*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %l_index = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5709, metadata !DIExpression()), !dbg !5710
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5711, metadata !DIExpression()), !dbg !5712
  store i32 %draw_flag, i32* %draw_flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %draw_flag.addr, metadata !5713, metadata !DIExpression()), !dbg !5714
  store float* %weights, float** %weights.addr, align 8
  call void @llvm.dbg.declare(metadata float** %weights.addr, metadata !5715, metadata !DIExpression()), !dbg !5716
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !5717, metadata !DIExpression()), !dbg !5718
  store i32* %indices, i32** %indices.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %indices.addr, metadata !5719, metadata !DIExpression()), !dbg !5720
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5721, metadata !DIExpression()), !dbg !5724
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5725
  %type = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 14, !dbg !5726
  %1 = load i32, i32* %type, align 8, !dbg !5726
  %cmp = icmp eq i32 %1, 1, !dbg !5727
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5728

cond.true:                                        ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5729
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %2), !dbg !5730
  br label %cond.end, !dbg !5728

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5728

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.BMEditMesh* [ %call, %cond.true ], [ null, %cond.false ], !dbg !5728
  store %struct.BMEditMesh* %cond, %struct.BMEditMesh** %em, align 8, !dbg !5724
  call void @llvm.dbg.declare(metadata [4 x i8]** %wtcol_v, metadata !5731, metadata !DIExpression()), !dbg !5732
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !5733, metadata !DIExpression()), !dbg !5734
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5735
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 23, !dbg !5736
  %4 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !5736
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5737
  %call1 = call i32 %4(%struct.DerivedMesh* %5), !dbg !5735
  store i32 %call1, i32* %numVerts, align 4, !dbg !5734
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5738, metadata !DIExpression()), !dbg !5739
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5740
  %tobool = icmp ne %struct.BMEditMesh* %6, null, !dbg !5740
  br i1 %tobool, label %if.then, label %if.else, !dbg !5742

if.then:                                          ; preds = %cond.end
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5743
  call void @BKE_editmesh_color_ensure(%struct.BMEditMesh* %7, i8 zeroext 1), !dbg !5745
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5746
  %derivedVertColor = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %8, i32 0, i32 8, !dbg !5747
  %9 = load [4 x i8]*, [4 x i8]** %derivedVertColor, align 8, !dbg !5747
  store [4 x i8]* %9, [4 x i8]** %wtcol_v, align 8, !dbg !5748
  br label %if.end, !dbg !5749

if.else:                                          ; preds = %cond.end
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5750
  %11 = load i32, i32* %numVerts, align 4, !dbg !5752
  %conv = sext i32 %11 to i64, !dbg !5752
  %mul = mul i64 4, %conv, !dbg !5753
  %call2 = call i8* %10(i64 %mul, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.DM_update_weight_mcol, i64 0, i64 0)), !dbg !5750
  %12 = bitcast i8* %call2 to [4 x i8]*, !dbg !5750
  store [4 x i8]* %12, [4 x i8]** %wtcol_v, align 8, !dbg !5754
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load float*, float** %weights.addr, align 8, !dbg !5755
  %tobool3 = icmp ne float* %13, null, !dbg !5755
  br i1 %tobool3, label %if.then4, label %if.else19, !dbg !5757

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata float** %w, metadata !5758, metadata !DIExpression()), !dbg !5760
  %14 = load float*, float** %weights.addr, align 8, !dbg !5761
  store float* %14, float** %w, align 8, !dbg !5760
  %15 = load i32*, i32** %indices.addr, align 8, !dbg !5762
  %tobool5 = icmp ne i32* %15, null, !dbg !5762
  br i1 %tobool5, label %if.then6, label %if.end15, !dbg !5764

if.then6:                                         ; preds = %if.then4
  %16 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5765
  %17 = load i32, i32* %numVerts, align 4, !dbg !5767
  %conv7 = sext i32 %17 to i64, !dbg !5767
  %mul8 = mul i64 4, %conv7, !dbg !5768
  %call9 = call i8* %16(i64 %mul8, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6, i64 0, i64 0)), !dbg !5765
  %18 = bitcast i8* %call9 to float*, !dbg !5765
  store float* %18, float** %w, align 8, !dbg !5769
  %19 = load i32, i32* %num.addr, align 4, !dbg !5770
  store i32 %19, i32* %i, align 4, !dbg !5771
  br label %while.cond, !dbg !5772

while.cond:                                       ; preds = %while.body, %if.then6
  %20 = load i32, i32* %i, align 4, !dbg !5773
  %dec = add nsw i32 %20, -1, !dbg !5773
  store i32 %dec, i32* %i, align 4, !dbg !5773
  %tobool10 = icmp ne i32 %20, 0, !dbg !5772
  br i1 %tobool10, label %while.body, label %while.end, !dbg !5772

while.body:                                       ; preds = %while.cond
  %21 = load float*, float** %weights.addr, align 8, !dbg !5774
  %22 = load i32, i32* %i, align 4, !dbg !5775
  %idxprom = sext i32 %22 to i64, !dbg !5774
  %arrayidx = getelementptr inbounds float, float* %21, i64 %idxprom, !dbg !5774
  %23 = load float, float* %arrayidx, align 4, !dbg !5774
  %24 = load float*, float** %w, align 8, !dbg !5776
  %25 = load i32*, i32** %indices.addr, align 8, !dbg !5777
  %26 = load i32, i32* %i, align 4, !dbg !5778
  %idxprom11 = sext i32 %26 to i64, !dbg !5777
  %arrayidx12 = getelementptr inbounds i32, i32* %25, i64 %idxprom11, !dbg !5777
  %27 = load i32, i32* %arrayidx12, align 4, !dbg !5777
  %idxprom13 = sext i32 %27 to i64, !dbg !5776
  %arrayidx14 = getelementptr inbounds float, float* %24, i64 %idxprom13, !dbg !5776
  store float %23, float* %arrayidx14, align 4, !dbg !5779
  br label %while.cond, !dbg !5772, !llvm.loop !5780

while.end:                                        ; preds = %while.cond
  br label %if.end15, !dbg !5782

if.end15:                                         ; preds = %while.end, %if.then4
  %28 = load i32, i32* %numVerts, align 4, !dbg !5783
  %29 = load float*, float** %w, align 8, !dbg !5784
  %30 = load [4 x i8]*, [4 x i8]** %wtcol_v, align 8, !dbg !5785
  call void @calc_colors_from_weights_array(i32 %28, float* %29, [4 x i8]* %30), !dbg !5786
  %31 = load i32*, i32** %indices.addr, align 8, !dbg !5787
  %tobool16 = icmp ne i32* %31, null, !dbg !5787
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !5789

if.then17:                                        ; preds = %if.end15
  %32 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5790
  %33 = load float*, float** %w, align 8, !dbg !5791
  %34 = bitcast float* %33 to i8*, !dbg !5791
  call void %32(i8* %34), !dbg !5790
  br label %if.end18, !dbg !5790

if.end18:                                         ; preds = %if.then17, %if.end15
  br label %if.end20, !dbg !5792

if.else19:                                        ; preds = %if.end
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5793
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5795
  %37 = load i32, i32* %draw_flag.addr, align 4, !dbg !5796
  %38 = load [4 x i8]*, [4 x i8]** %wtcol_v, align 8, !dbg !5797
  call void @calc_weightpaint_vert_array(%struct.Object* %35, %struct.DerivedMesh* %36, i32 %37, %struct.DMWeightColorInfo* @G_dm_wcinfo, [4 x i8]* %38), !dbg !5798
  br label %if.end20

if.end20:                                         ; preds = %if.else19, %if.end18
  %39 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5799
  %type21 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %39, i32 0, i32 14, !dbg !5801
  %40 = load i32, i32* %type21, align 8, !dbg !5801
  %cmp22 = icmp eq i32 %40, 1, !dbg !5802
  br i1 %cmp22, label %if.then24, label %if.else25, !dbg !5803

if.then24:                                        ; preds = %if.end20
  br label %if.end54, !dbg !5804

if.else25:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata i32* %dm_totpoly, metadata !5806, metadata !DIExpression()), !dbg !5808
  %41 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5809
  %getNumPolys = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %41, i32 0, i32 27, !dbg !5810
  %42 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumPolys, align 8, !dbg !5810
  %43 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5811
  %call26 = call i32 %42(%struct.DerivedMesh* %43), !dbg !5809
  store i32 %call26, i32* %dm_totpoly, align 4, !dbg !5808
  call void @llvm.dbg.declare(metadata i32* %dm_totloop, metadata !5812, metadata !DIExpression()), !dbg !5813
  %44 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5814
  %getNumLoops = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %44, i32 0, i32 26, !dbg !5815
  %45 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumLoops, align 8, !dbg !5815
  %46 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5816
  %call27 = call i32 %45(%struct.DerivedMesh* %46), !dbg !5814
  store i32 %call27, i32* %dm_totloop, align 4, !dbg !5813
  call void @llvm.dbg.declare(metadata [4 x i8]** %wtcol_l, metadata !5817, metadata !DIExpression()), !dbg !5818
  %47 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5819
  %getLoopDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %47, i32 0, i32 58, !dbg !5820
  %48 = load %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)** %getLoopDataLayout, align 8, !dbg !5820
  %49 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5821
  %call28 = call %struct.CustomData* %48(%struct.DerivedMesh* %49), !dbg !5819
  %call29 = call i8* @CustomData_get_layer(%struct.CustomData* %call28, i32 32), !dbg !5822
  %50 = bitcast i8* %call29 to [4 x i8]*, !dbg !5822
  store [4 x i8]* %50, [4 x i8]** %wtcol_l, align 8, !dbg !5818
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop, metadata !5823, metadata !DIExpression()), !dbg !5824
  %51 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5825
  %getLoopArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %51, i32 0, i32 34, !dbg !5826
  %52 = load %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)** %getLoopArray, align 8, !dbg !5826
  %53 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5827
  %call30 = call %struct.MLoop* %52(%struct.DerivedMesh* %53), !dbg !5825
  store %struct.MLoop* %call30, %struct.MLoop** %mloop, align 8, !dbg !5824
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !5828, metadata !DIExpression()), !dbg !5829
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !5830, metadata !DIExpression()), !dbg !5831
  %54 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5832
  %getPolyArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %54, i32 0, i32 35, !dbg !5833
  %55 = load %struct.MPoly* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)** %getPolyArray, align 8, !dbg !5833
  %56 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5834
  %call31 = call %struct.MPoly* %55(%struct.DerivedMesh* %56), !dbg !5832
  store %struct.MPoly* %call31, %struct.MPoly** %mp, align 8, !dbg !5831
  call void @llvm.dbg.declare(metadata i32* %l_index, metadata !5835, metadata !DIExpression()), !dbg !5836
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5837, metadata !DIExpression()), !dbg !5838
  %57 = load [4 x i8]*, [4 x i8]** %wtcol_l, align 8, !dbg !5839
  %tobool32 = icmp ne [4 x i8]* %57, null, !dbg !5839
  br i1 %tobool32, label %if.end38, label %if.then33, !dbg !5841

if.then33:                                        ; preds = %if.else25
  %58 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5842
  %59 = load i32, i32* %dm_totloop, align 4, !dbg !5844
  %conv34 = sext i32 %59 to i64, !dbg !5844
  %mul35 = mul i64 4, %conv34, !dbg !5845
  %call36 = call i8* %58(i64 %mul35, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.DM_update_weight_mcol, i64 0, i64 0)), !dbg !5842
  %60 = bitcast i8* %call36 to [4 x i8]*, !dbg !5842
  store [4 x i8]* %60, [4 x i8]** %wtcol_l, align 8, !dbg !5846
  %61 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5847
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %61, i32 0, i32 3, !dbg !5848
  %62 = load [4 x i8]*, [4 x i8]** %wtcol_l, align 8, !dbg !5849
  %63 = bitcast [4 x i8]* %62 to i8*, !dbg !5849
  %64 = load i32, i32* %dm_totloop, align 4, !dbg !5850
  %call37 = call i8* @CustomData_add_layer(%struct.CustomData* %loopData, i32 32, i32 0, i8* %63, i32 %64), !dbg !5851
  br label %if.end38, !dbg !5852

if.end38:                                         ; preds = %if.then33, %if.else25
  store i32 0, i32* %l_index, align 4, !dbg !5853
  store i32 0, i32* %i, align 4, !dbg !5854
  br label %for.cond, !dbg !5856

for.cond:                                         ; preds = %for.inc50, %if.end38
  %65 = load i32, i32* %i, align 4, !dbg !5857
  %66 = load i32, i32* %dm_totpoly, align 4, !dbg !5859
  %cmp39 = icmp slt i32 %65, %66, !dbg !5860
  br i1 %cmp39, label %for.body, label %for.end53, !dbg !5861

for.body:                                         ; preds = %for.cond
  %67 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !5862
  %68 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5864
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %68, i32 0, i32 0, !dbg !5865
  %69 = load i32, i32* %loopstart, align 4, !dbg !5865
  %idx.ext = sext i32 %69 to i64, !dbg !5866
  %add.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %67, i64 %idx.ext, !dbg !5866
  store %struct.MLoop* %add.ptr, %struct.MLoop** %ml, align 8, !dbg !5867
  store i32 0, i32* %j, align 4, !dbg !5868
  br label %for.cond41, !dbg !5870

for.cond41:                                       ; preds = %for.inc, %for.body
  %70 = load i32, i32* %j, align 4, !dbg !5871
  %71 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5873
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %71, i32 0, i32 1, !dbg !5874
  %72 = load i32, i32* %totloop, align 4, !dbg !5874
  %cmp42 = icmp slt i32 %70, %72, !dbg !5875
  br i1 %cmp42, label %for.body44, label %for.end, !dbg !5876

for.body44:                                       ; preds = %for.cond41
  %73 = load [4 x i8]*, [4 x i8]** %wtcol_l, align 8, !dbg !5877
  %74 = load i32, i32* %l_index, align 4, !dbg !5879
  %idxprom45 = sext i32 %74 to i64, !dbg !5877
  %arrayidx46 = getelementptr inbounds [4 x i8], [4 x i8]* %73, i64 %idxprom45, !dbg !5877
  %75 = bitcast [4 x i8]* %arrayidx46 to i8*, !dbg !5880
  %76 = load [4 x i8]*, [4 x i8]** %wtcol_v, align 8, !dbg !5881
  %77 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5882
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %77, i32 0, i32 0, !dbg !5883
  %78 = load i32, i32* %v, align 4, !dbg !5883
  %idxprom47 = zext i32 %78 to i64, !dbg !5881
  %arrayidx48 = getelementptr inbounds [4 x i8], [4 x i8]* %76, i64 %idxprom47, !dbg !5881
  %79 = bitcast [4 x i8]* %arrayidx48 to i8*, !dbg !5884
  call void @copy_v4_v4_char(i8* %75, i8* %79), !dbg !5885
  br label %for.inc, !dbg !5886

for.inc:                                          ; preds = %for.body44
  %80 = load i32, i32* %j, align 4, !dbg !5887
  %inc = add nsw i32 %80, 1, !dbg !5887
  store i32 %inc, i32* %j, align 4, !dbg !5887
  %81 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5888
  %incdec.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %81, i32 1, !dbg !5888
  store %struct.MLoop* %incdec.ptr, %struct.MLoop** %ml, align 8, !dbg !5888
  %82 = load i32, i32* %l_index, align 4, !dbg !5889
  %inc49 = add nsw i32 %82, 1, !dbg !5889
  store i32 %inc49, i32* %l_index, align 4, !dbg !5889
  br label %for.cond41, !dbg !5890, !llvm.loop !5891

for.end:                                          ; preds = %for.cond41
  br label %for.inc50, !dbg !5893

for.inc50:                                        ; preds = %for.end
  %83 = load i32, i32* %i, align 4, !dbg !5894
  %inc51 = add nsw i32 %83, 1, !dbg !5894
  store i32 %inc51, i32* %i, align 4, !dbg !5894
  %84 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5895
  %incdec.ptr52 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %84, i32 1, !dbg !5895
  store %struct.MPoly* %incdec.ptr52, %struct.MPoly** %mp, align 8, !dbg !5895
  br label %for.cond, !dbg !5896, !llvm.loop !5897

for.end53:                                        ; preds = %for.cond
  %85 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5899
  %86 = load [4 x i8]*, [4 x i8]** %wtcol_v, align 8, !dbg !5900
  %87 = bitcast [4 x i8]* %86 to i8*, !dbg !5900
  call void %85(i8* %87), !dbg !5899
  %88 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5901
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %88, i32 0, i32 16, !dbg !5902
  %89 = load i32, i32* %dirty, align 8, !dbg !5903
  %or = or i32 %89, 1, !dbg !5903
  store i32 %or, i32* %dirty, align 8, !dbg !5903
  br label %if.end54

if.end54:                                         ; preds = %for.end53, %if.then24
  ret void, !dbg !5904
}

declare dso_local %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object*) #2

declare dso_local void @BKE_editmesh_color_ensure(%struct.BMEditMesh*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @calc_colors_from_weights_array(i32 %num, float* %weights, [4 x i8]* %r_wtcol_v) #0 !dbg !5905 {
entry:
  %num.addr = alloca i32, align 4
  %weights.addr = alloca float*, align 8
  %r_wtcol_v.addr = alloca [4 x i8]*, align 8
  %wc = alloca [4 x i8]*, align 8
  %i = alloca i32, align 4
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !5908, metadata !DIExpression()), !dbg !5909
  store float* %weights, float** %weights.addr, align 8
  call void @llvm.dbg.declare(metadata float** %weights.addr, metadata !5910, metadata !DIExpression()), !dbg !5911
  store [4 x i8]* %r_wtcol_v, [4 x i8]** %r_wtcol_v.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x i8]** %r_wtcol_v.addr, metadata !5912, metadata !DIExpression()), !dbg !5913
  call void @llvm.dbg.declare(metadata [4 x i8]** %wc, metadata !5914, metadata !DIExpression()), !dbg !5915
  %0 = load [4 x i8]*, [4 x i8]** %r_wtcol_v.addr, align 8, !dbg !5916
  store [4 x i8]* %0, [4 x i8]** %wc, align 8, !dbg !5915
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5917, metadata !DIExpression()), !dbg !5918
  store i32 0, i32* %i, align 4, !dbg !5919
  br label %for.cond, !dbg !5921

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !5922
  %2 = load i32, i32* %num.addr, align 4, !dbg !5924
  %cmp = icmp slt i32 %1, %2, !dbg !5925
  br i1 %cmp, label %for.body, label %for.end, !dbg !5926

for.body:                                         ; preds = %for.cond
  %3 = load [4 x i8]*, [4 x i8]** %wc, align 8, !dbg !5927
  %4 = bitcast [4 x i8]* %3 to i8*, !dbg !5929
  %5 = load float*, float** %weights.addr, align 8, !dbg !5930
  %6 = load float, float* %5, align 4, !dbg !5931
  call void @weightpaint_color(i8* %4, %struct.DMWeightColorInfo* null, float %6), !dbg !5932
  br label %for.inc, !dbg !5933

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !5934
  %inc = add nsw i32 %7, 1, !dbg !5934
  store i32 %inc, i32* %i, align 4, !dbg !5934
  %8 = load [4 x i8]*, [4 x i8]** %wc, align 8, !dbg !5935
  %incdec.ptr = getelementptr inbounds [4 x i8], [4 x i8]* %8, i32 1, !dbg !5935
  store [4 x i8]* %incdec.ptr, [4 x i8]** %wc, align 8, !dbg !5935
  %9 = load float*, float** %weights.addr, align 8, !dbg !5936
  %incdec.ptr1 = getelementptr inbounds float, float* %9, i32 1, !dbg !5936
  store float* %incdec.ptr1, float** %weights.addr, align 8, !dbg !5936
  br label %for.cond, !dbg !5937, !llvm.loop !5938

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5940
}

; Function Attrs: noinline nounwind uwtable
define internal void @calc_weightpaint_vert_array(%struct.Object* %ob, %struct.DerivedMesh* %dm, i32 %draw_flag, %struct.DMWeightColorInfo* %dm_wcinfo, [4 x i8]* %r_wtcol_v) #0 !dbg !5941 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %draw_flag.addr = alloca i32, align 4
  %dm_wcinfo.addr = alloca %struct.DMWeightColorInfo*, align 8
  %r_wtcol_v.addr = alloca [4 x i8]*, align 8
  %dv = alloca %struct.MDeformVert*, align 8
  %numVerts = alloca i32, align 4
  %wc = alloca [4 x i8]*, align 8
  %i = alloca i32, align 4
  %defbase_tot = alloca i32, align 4
  %defbase_act = alloca i32, align 4
  %defbase_sel_tot = alloca i32, align 4
  %defbase_sel = alloca i8*, align 8
  %col = alloca [4 x i8], align 1
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5945, metadata !DIExpression()), !dbg !5946
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5947, metadata !DIExpression()), !dbg !5948
  store i32 %draw_flag, i32* %draw_flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %draw_flag.addr, metadata !5949, metadata !DIExpression()), !dbg !5950
  store %struct.DMWeightColorInfo* %dm_wcinfo, %struct.DMWeightColorInfo** %dm_wcinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DMWeightColorInfo** %dm_wcinfo.addr, metadata !5951, metadata !DIExpression()), !dbg !5952
  store [4 x i8]* %r_wtcol_v, [4 x i8]** %r_wtcol_v.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x i8]** %r_wtcol_v.addr, metadata !5953, metadata !DIExpression()), !dbg !5954
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !5955, metadata !DIExpression()), !dbg !5958
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5959
  %call = call i8* @DM_get_vert_data_layer(%struct.DerivedMesh* %0, i32 2), !dbg !5960
  %1 = bitcast i8* %call to %struct.MDeformVert*, !dbg !5960
  store %struct.MDeformVert* %1, %struct.MDeformVert** %dv, align 8, !dbg !5958
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !5961, metadata !DIExpression()), !dbg !5962
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5963
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 23, !dbg !5964
  %3 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !5964
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5965
  %call1 = call i32 %3(%struct.DerivedMesh* %4), !dbg !5963
  store i32 %call1, i32* %numVerts, align 4, !dbg !5962
  %5 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !5966
  %tobool = icmp ne %struct.MDeformVert* %5, null, !dbg !5966
  br i1 %tobool, label %if.then, label %if.else, !dbg !5968

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [4 x i8]** %wc, metadata !5969, metadata !DIExpression()), !dbg !5971
  %6 = load [4 x i8]*, [4 x i8]** %r_wtcol_v.addr, align 8, !dbg !5972
  store [4 x i8]* %6, [4 x i8]** %wc, align 8, !dbg !5971
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5973, metadata !DIExpression()), !dbg !5974
  call void @llvm.dbg.declare(metadata i32* %defbase_tot, metadata !5975, metadata !DIExpression()), !dbg !5976
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5977
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 25, !dbg !5978
  %call2 = call i32 @BLI_countlist(%struct.ListBase* %defbase), !dbg !5979
  store i32 %call2, i32* %defbase_tot, align 4, !dbg !5976
  call void @llvm.dbg.declare(metadata i32* %defbase_act, metadata !5980, metadata !DIExpression()), !dbg !5981
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5982
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 97, !dbg !5983
  %9 = load i16, i16* %actdef, align 2, !dbg !5983
  %conv = zext i16 %9 to i32, !dbg !5982
  %sub = sub nsw i32 %conv, 1, !dbg !5984
  store i32 %sub, i32* %defbase_act, align 4, !dbg !5981
  call void @llvm.dbg.declare(metadata i32* %defbase_sel_tot, metadata !5985, metadata !DIExpression()), !dbg !5986
  store i32 0, i32* %defbase_sel_tot, align 4, !dbg !5986
  call void @llvm.dbg.declare(metadata i8** %defbase_sel, metadata !5987, metadata !DIExpression()), !dbg !5988
  store i8* null, i8** %defbase_sel, align 8, !dbg !5988
  %10 = load i32, i32* %draw_flag.addr, align 4, !dbg !5989
  %and = and i32 %10, 8, !dbg !5991
  %tobool3 = icmp ne i32 %and, 0, !dbg !5991
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !5992

if.then4:                                         ; preds = %if.then
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5993
  %12 = load i32, i32* %defbase_tot, align 4, !dbg !5995
  %call5 = call i8* @BKE_objdef_selected_get(%struct.Object* %11, i32 %12, i32* %defbase_sel_tot), !dbg !5996
  store i8* %call5, i8** %defbase_sel, align 8, !dbg !5997
  br label %if.end, !dbg !5998

if.end:                                           ; preds = %if.then4, %if.then
  %13 = load i32, i32* %numVerts, align 4, !dbg !5999
  store i32 %13, i32* %i, align 4, !dbg !6001
  br label %for.cond, !dbg !6002

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load i32, i32* %i, align 4, !dbg !6003
  %cmp = icmp ne i32 %14, 0, !dbg !6005
  br i1 %cmp, label %for.body, label %for.end, !dbg !6006

for.body:                                         ; preds = %for.cond
  %15 = load [4 x i8]*, [4 x i8]** %wc, align 8, !dbg !6007
  %16 = bitcast [4 x i8]* %15 to i8*, !dbg !6009
  %17 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !6010
  %18 = load %struct.DMWeightColorInfo*, %struct.DMWeightColorInfo** %dm_wcinfo.addr, align 8, !dbg !6011
  %19 = load i32, i32* %defbase_tot, align 4, !dbg !6012
  %20 = load i32, i32* %defbase_act, align 4, !dbg !6013
  %21 = load i8*, i8** %defbase_sel, align 8, !dbg !6014
  %22 = load i32, i32* %defbase_sel_tot, align 4, !dbg !6015
  %23 = load i32, i32* %draw_flag.addr, align 4, !dbg !6016
  call void @calc_weightpaint_vert_color(i8* %16, %struct.MDeformVert* %17, %struct.DMWeightColorInfo* %18, i32 %19, i32 %20, i8* %21, i32 %22, i32 %23), !dbg !6017
  br label %for.inc, !dbg !6018

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !dbg !6019
  %dec = add i32 %24, -1, !dbg !6019
  store i32 %dec, i32* %i, align 4, !dbg !6019
  %25 = load [4 x i8]*, [4 x i8]** %wc, align 8, !dbg !6020
  %incdec.ptr = getelementptr inbounds [4 x i8], [4 x i8]* %25, i32 1, !dbg !6020
  store [4 x i8]* %incdec.ptr, [4 x i8]** %wc, align 8, !dbg !6020
  %26 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !6021
  %incdec.ptr7 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %26, i32 1, !dbg !6021
  store %struct.MDeformVert* %incdec.ptr7, %struct.MDeformVert** %dv, align 8, !dbg !6021
  br label %for.cond, !dbg !6022, !llvm.loop !6023

for.end:                                          ; preds = %for.cond
  %27 = load i8*, i8** %defbase_sel, align 8, !dbg !6025
  %tobool8 = icmp ne i8* %27, null, !dbg !6025
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !6027

if.then9:                                         ; preds = %for.end
  %28 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6028
  %29 = load i8*, i8** %defbase_sel, align 8, !dbg !6030
  call void %28(i8* %29), !dbg !6028
  br label %if.end10, !dbg !6031

if.end10:                                         ; preds = %if.then9, %for.end
  br label %if.end18, !dbg !6032

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [4 x i8]* %col, metadata !6033, metadata !DIExpression()), !dbg !6035
  %30 = load i32, i32* %draw_flag.addr, align 4, !dbg !6036
  %and11 = and i32 %30, 6, !dbg !6038
  %tobool12 = icmp ne i32 %and11, 0, !dbg !6038
  br i1 %tobool12, label %if.then13, label %if.else14, !dbg !6039

if.then13:                                        ; preds = %if.else
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !6040
  %31 = load %struct.DMWeightColorInfo*, %struct.DMWeightColorInfo** %dm_wcinfo.addr, align 8, !dbg !6042
  %alert_color = getelementptr inbounds %struct.DMWeightColorInfo, %struct.DMWeightColorInfo* %31, i32 0, i32 1, !dbg !6043
  %32 = load i8*, i8** %alert_color, align 8, !dbg !6043
  call void @copy_v3_v3_char(i8* %arraydecay, i8* %32), !dbg !6044
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 3, !dbg !6045
  store i8 -1, i8* %arrayidx, align 1, !dbg !6046
  br label %if.end16, !dbg !6047

if.else14:                                        ; preds = %if.else
  %arraydecay15 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !6048
  %33 = load %struct.DMWeightColorInfo*, %struct.DMWeightColorInfo** %dm_wcinfo.addr, align 8, !dbg !6050
  call void @weightpaint_color(i8* %arraydecay15, %struct.DMWeightColorInfo* %33, float 0.000000e+00), !dbg !6051
  br label %if.end16

if.end16:                                         ; preds = %if.else14, %if.then13
  %34 = load [4 x i8]*, [4 x i8]** %r_wtcol_v.addr, align 8, !dbg !6052
  %35 = bitcast [4 x i8]* %34 to i32*, !dbg !6053
  %36 = load i32, i32* %numVerts, align 4, !dbg !6054
  %arraydecay17 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !6055
  %37 = bitcast i8* %arraydecay17 to i32*, !dbg !6055
  %38 = load i32, i32* %37, align 1, !dbg !6055
  call void @fill_vn_i(i32* %35, i32 %36, i32 %38), !dbg !6056
  br label %if.end18

if.end18:                                         ; preds = %if.end16, %if.end10
  ret void, !dbg !6057
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_v4_char(i8* %r, i8* %a) #0 !dbg !6058 {
entry:
  %r.addr = alloca i8*, align 8
  %a.addr = alloca i8*, align 8
  store i8* %r, i8** %r.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r.addr, metadata !6061, metadata !DIExpression()), !dbg !6062
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !6063, metadata !DIExpression()), !dbg !6064
  %0 = load i8*, i8** %a.addr, align 8, !dbg !6065
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !6065
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6065
  %2 = load i8*, i8** %r.addr, align 8, !dbg !6066
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i64 0, !dbg !6066
  store i8 %1, i8* %arrayidx1, align 1, !dbg !6067
  %3 = load i8*, i8** %a.addr, align 8, !dbg !6068
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !6068
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !6068
  %5 = load i8*, i8** %r.addr, align 8, !dbg !6069
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !6069
  store i8 %4, i8* %arrayidx3, align 1, !dbg !6070
  %6 = load i8*, i8** %a.addr, align 8, !dbg !6071
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 2, !dbg !6071
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !6071
  %8 = load i8*, i8** %r.addr, align 8, !dbg !6072
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 2, !dbg !6072
  store i8 %7, i8* %arrayidx5, align 1, !dbg !6073
  %9 = load i8*, i8** %a.addr, align 8, !dbg !6074
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 3, !dbg !6074
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !6074
  %11 = load i8*, i8** %r.addr, align 8, !dbg !6075
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !6075
  store i8 %10, i8* %arrayidx7, align 1, !dbg !6076
  ret void, !dbg !6077
}

; Function Attrs: noinline nounwind uwtable
define dso_local [3 x float]* @editbmesh_get_vertex_cos(%struct.BMEditMesh* %em, i32* %r_numVerts) #0 !dbg !6078 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %r_numVerts.addr = alloca i32*, align 8
  %iter = alloca %struct.BMIter, align 8
  %eve = alloca %struct.BMVert*, align 8
  %cos = alloca [3 x float]*, align 8
  %i = alloca i32, align 4
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !6081, metadata !DIExpression()), !dbg !6082
  store i32* %r_numVerts, i32** %r_numVerts.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_numVerts.addr, metadata !6083, metadata !DIExpression()), !dbg !6084
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !6085, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !6174, metadata !DIExpression()), !dbg !6175
  call void @llvm.dbg.declare(metadata [3 x float]** %cos, metadata !6176, metadata !DIExpression()), !dbg !6177
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6178, metadata !DIExpression()), !dbg !6179
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6180
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 0, !dbg !6181
  %1 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6181
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %1, i32 0, i32 0, !dbg !6182
  %2 = load i32, i32* %totvert, align 8, !dbg !6182
  %3 = load i32*, i32** %r_numVerts.addr, align 8, !dbg !6183
  store i32 %2, i32* %3, align 4, !dbg !6184
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6185
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6186
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %5, i32 0, i32 0, !dbg !6187
  %6 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !6187
  %totvert2 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %6, i32 0, i32 0, !dbg !6188
  %7 = load i32, i32* %totvert2, align 8, !dbg !6188
  %conv = sext i32 %7 to i64, !dbg !6186
  %mul = mul i64 12, %conv, !dbg !6189
  %call = call i8* %4(i64 %mul, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0)), !dbg !6185
  %8 = bitcast i8* %call to [3 x float]*, !dbg !6185
  store [3 x float]* %8, [3 x float]** %cos, align 8, !dbg !6190
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6191
  %bm3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 0, !dbg !6191
  %10 = load %struct.BMesh*, %struct.BMesh** %bm3, align 8, !dbg !6191
  %call4 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %10, i8 zeroext 1, i8* null), !dbg !6191
  %11 = bitcast i8* %call4 to %struct.BMVert*, !dbg !6191
  store %struct.BMVert* %11, %struct.BMVert** %eve, align 8, !dbg !6191
  store i32 0, i32* %i, align 4, !dbg !6191
  br label %for.cond, !dbg !6191

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6193
  %tobool = icmp ne %struct.BMVert* %12, null, !dbg !6191
  br i1 %tobool, label %for.body, label %for.end, !dbg !6191

for.body:                                         ; preds = %for.cond
  %13 = load [3 x float]*, [3 x float]** %cos, align 8, !dbg !6195
  %14 = load i32, i32* %i, align 4, !dbg !6197
  %idxprom = sext i32 %14 to i64, !dbg !6195
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %13, i64 %idxprom, !dbg !6195
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !6195
  %15 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6198
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %15, i32 0, i32 2, !dbg !6199
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6198
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay5), !dbg !6200
  br label %for.inc, !dbg !6201

for.inc:                                          ; preds = %for.body
  %call6 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !6193
  %16 = bitcast i8* %call6 to %struct.BMVert*, !dbg !6193
  store %struct.BMVert* %16, %struct.BMVert** %eve, align 8, !dbg !6193
  %17 = load i32, i32* %i, align 4, !dbg !6193
  %inc = add nsw i32 %17, 1, !dbg !6193
  store i32 %inc, i32* %i, align 4, !dbg !6193
  br label %for.cond, !dbg !6193, !llvm.loop !6202

for.end:                                          ; preds = %for.cond
  %18 = load [3 x float]*, [3 x float]** %cos, align 8, !dbg !6204
  ret [3 x float]* %18, !dbg !6205
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !6206 {
entry:
  %retval = alloca i8*, align 8
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !6211, metadata !DIExpression()), !dbg !6212
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !6213, metadata !DIExpression()), !dbg !6214
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !6215, metadata !DIExpression()), !dbg !6216
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6217, metadata !DIExpression()), !dbg !6218
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6219
  %1 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !6219
  %2 = load i8, i8* %itype.addr, align 1, !dbg !6219
  %3 = load i8*, i8** %data.addr, align 8, !dbg !6219
  %call = call zeroext i8 @BM_iter_init(%struct.BMIter* %0, %struct.BMesh* %1, i8 zeroext %2, i8* %3), !dbg !6219
  %tobool = icmp ne i8 %call, 0, !dbg !6219
  br i1 %tobool, label %if.then, label %if.else, !dbg !6221

if.then:                                          ; preds = %entry
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6222
  %call1 = call i8* @BM_iter_step(%struct.BMIter* %4), !dbg !6224
  store i8* %call1, i8** %retval, align 8, !dbg !6225
  br label %return, !dbg !6225

if.else:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !6226
  br label %return, !dbg !6226

return:                                           ; preds = %if.else, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !6228
  ret i8* %5, !dbg !6228
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_step(%struct.BMIter* %iter) #0 !dbg !6229 {
entry:
  %iter.addr = alloca %struct.BMIter*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !6232, metadata !DIExpression()), !dbg !6233
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6234
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %0, i32 0, i32 2, !dbg !6235
  %1 = load i8* (i8*)*, i8* (i8*)** %step, align 8, !dbg !6235
  %2 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !6236
  %3 = bitcast %struct.BMIter* %2 to i8*, !dbg !6236
  %call = call i8* %1(i8* %3), !dbg !6234
  ret i8* %call, !dbg !6237
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @editbmesh_modifier_is_enabled(%struct.Scene* %scene, %struct.ModifierData* %md, %struct.DerivedMesh* %dm) #0 !dbg !6238 {
entry:
  %retval = alloca i8, align 1
  %scene.addr = alloca %struct.Scene*, align 8
  %md.addr = alloca %struct.ModifierData*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mti = alloca %struct.ModifierTypeInfo*, align 8
  %required_mode = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6241, metadata !DIExpression()), !dbg !6242
  store %struct.ModifierData* %md, %struct.ModifierData** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md.addr, metadata !6243, metadata !DIExpression()), !dbg !6244
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6245, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.declare(metadata %struct.ModifierTypeInfo** %mti, metadata !6247, metadata !DIExpression()), !dbg !6248
  %0 = load %struct.ModifierData*, %struct.ModifierData** %md.addr, align 8, !dbg !6249
  %type = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %0, i32 0, i32 2, !dbg !6250
  %1 = load i32, i32* %type, align 8, !dbg !6250
  %call = call %struct.ModifierTypeInfo* @modifierType_getInfo(i32 %1), !dbg !6251
  store %struct.ModifierTypeInfo* %call, %struct.ModifierTypeInfo** %mti, align 8, !dbg !6248
  call void @llvm.dbg.declare(metadata i32* %required_mode, metadata !6252, metadata !DIExpression()), !dbg !6253
  store i32 5, i32* %required_mode, align 4, !dbg !6253
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6254
  %3 = load %struct.ModifierData*, %struct.ModifierData** %md.addr, align 8, !dbg !6256
  %4 = load i32, i32* %required_mode, align 4, !dbg !6257
  %call1 = call zeroext i8 @modifier_isEnabled(%struct.Scene* %2, %struct.ModifierData* %3, i32 %4), !dbg !6258
  %tobool = icmp ne i8 %call1, 0, !dbg !6258
  br i1 %tobool, label %if.end, label %if.then, !dbg !6259

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !6260
  br label %return, !dbg !6260

if.end:                                           ; preds = %entry
  %5 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !6261
  %flags = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %5, i32 0, i32 4, !dbg !6263
  %6 = load i32, i32* %flags, align 8, !dbg !6263
  %and = and i32 %6, 32, !dbg !6264
  %tobool2 = icmp ne i32 %and, 0, !dbg !6264
  br i1 %tobool2, label %land.lhs.true, label %if.end5, !dbg !6265

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6266
  %tobool3 = icmp ne %struct.DerivedMesh* %7, null, !dbg !6266
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !6267

if.then4:                                         ; preds = %land.lhs.true
  %8 = load %struct.ModifierData*, %struct.ModifierData** %md.addr, align 8, !dbg !6268
  call void (%struct.ModifierData*, i8*, ...) @modifier_setError(%struct.ModifierData* %8, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.8, i64 0, i64 0)), !dbg !6270
  store i8 0, i8* %retval, align 1, !dbg !6271
  br label %return, !dbg !6271

if.end5:                                          ; preds = %land.lhs.true, %if.end
  store i8 1, i8* %retval, align 1, !dbg !6272
  br label %return, !dbg !6272

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %9 = load i8, i8* %retval, align 1, !dbg !6273
  ret i8 %9, !dbg !6273
}

declare dso_local zeroext i8 @modifier_isEnabled(%struct.Scene*, %struct.ModifierData*, i32) #2

declare dso_local void @modifier_setError(%struct.ModifierData*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @makeDerivedMesh(%struct.Scene* %scene, %struct.Object* %ob, %struct.BMEditMesh* %em, i64 %dataMask, i32 %build_shapekey_layers) #0 !dbg !6274 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %dataMask.addr = alloca i64, align 8
  %build_shapekey_layers.addr = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6277, metadata !DIExpression()), !dbg !6278
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6279, metadata !DIExpression()), !dbg !6280
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !6281, metadata !DIExpression()), !dbg !6282
  store i64 %dataMask, i64* %dataMask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dataMask.addr, metadata !6283, metadata !DIExpression()), !dbg !6284
  store i32 %build_shapekey_layers, i32* %build_shapekey_layers.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %build_shapekey_layers.addr, metadata !6285, metadata !DIExpression()), !dbg !6286
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6287
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6288
  %call = call i64 @object_get_datamask(%struct.Scene* %0, %struct.Object* %1), !dbg !6289
  %2 = load i64, i64* %dataMask.addr, align 8, !dbg !6290
  %or = or i64 %2, %call, !dbg !6290
  store i64 %or, i64* %dataMask.addr, align 8, !dbg !6290
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6291
  %tobool = icmp ne %struct.BMEditMesh* %3, null, !dbg !6291
  br i1 %tobool, label %if.then, label %if.else, !dbg !6293

if.then:                                          ; preds = %entry
  %4 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6294
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6296
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6297
  %7 = load i64, i64* %dataMask.addr, align 8, !dbg !6298
  call void @editbmesh_build_data(%struct.Scene* %4, %struct.Object* %5, %struct.BMEditMesh* %6, i64 %7), !dbg !6299
  br label %if.end, !dbg !6300

if.else:                                          ; preds = %entry
  %8 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6301
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6303
  %10 = load i64, i64* %dataMask.addr, align 8, !dbg !6304
  %11 = load i32, i32* %build_shapekey_layers.addr, align 4, !dbg !6305
  call void @mesh_build_data(%struct.Scene* %8, %struct.Object* %9, i64 %10, i32 %11), !dbg !6306
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !6307
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @object_get_datamask(%struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !6308 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %actob = alloca %struct.Object*, align 8
  %mask = alloca i64, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6311, metadata !DIExpression()), !dbg !6312
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6313, metadata !DIExpression()), !dbg !6314
  call void @llvm.dbg.declare(metadata %struct.Object** %actob, metadata !6315, metadata !DIExpression()), !dbg !6316
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6317
  %basact = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 6, !dbg !6318
  %1 = load %struct.Base*, %struct.Base** %basact, align 8, !dbg !6318
  %tobool = icmp ne %struct.Base* %1, null, !dbg !6317
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6317

cond.true:                                        ; preds = %entry
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6319
  %basact1 = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 6, !dbg !6320
  %3 = load %struct.Base*, %struct.Base** %basact1, align 8, !dbg !6320
  %object = getelementptr inbounds %struct.Base, %struct.Base* %3, i32 0, i32 7, !dbg !6321
  %4 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !6321
  br label %cond.end, !dbg !6317

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6317

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.Object* [ %4, %cond.true ], [ null, %cond.false ], !dbg !6317
  store %struct.Object* %cond, %struct.Object** %actob, align 8, !dbg !6316
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !6322, metadata !DIExpression()), !dbg !6323
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6324
  %customdata_mask = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 122, !dbg !6325
  %6 = load i64, i64* %customdata_mask, align 8, !dbg !6325
  store i64 %6, i64* %mask, align 8, !dbg !6323
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6326
  %8 = load %struct.Object*, %struct.Object** %actob, align 8, !dbg !6328
  %cmp = icmp eq %struct.Object* %7, %8, !dbg !6329
  br i1 %cmp, label %if.then, label %if.end23, !dbg !6330

if.then:                                          ; preds = %cond.end
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6331
  %call = call zeroext i8 @BKE_paint_select_face_test(%struct.Object* %9), !dbg !6334
  %conv = zext i8 %call to i32, !dbg !6334
  %tobool2 = icmp ne i32 %conv, 0, !dbg !6334
  br i1 %tobool2, label %if.then4, label %lor.lhs.false, !dbg !6335

lor.lhs.false:                                    ; preds = %if.then
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6336
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 27, !dbg !6337
  %11 = load i32, i32* %mode, align 8, !dbg !6337
  %and = and i32 %11, 16, !dbg !6338
  %tobool3 = icmp ne i32 %and, 0, !dbg !6338
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !6339

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  %12 = load i64, i64* %mask, align 8, !dbg !6340
  %or = or i64 %12, 96, !dbg !6340
  store i64 %or, i64* %mask, align 8, !dbg !6340
  br label %if.end, !dbg !6342

if.end:                                           ; preds = %if.then4, %lor.lhs.false
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6343
  %mode5 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 27, !dbg !6345
  %14 = load i32, i32* %mode5, align 8, !dbg !6345
  %and6 = and i32 %14, 4, !dbg !6346
  %tobool7 = icmp ne i32 %and6, 0, !dbg !6346
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !6347

if.then8:                                         ; preds = %if.end
  %15 = load i64, i64* %mask, align 8, !dbg !6348
  %or9 = or i64 %15, 64, !dbg !6348
  store i64 %or9, i64* %mask, align 8, !dbg !6348
  br label %if.end10, !dbg !6350

if.end10:                                         ; preds = %if.then8, %if.end
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6351
  %mode11 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 27, !dbg !6353
  %17 = load i32, i32* %mode11, align 8, !dbg !6353
  %and12 = and i32 %17, 8, !dbg !6354
  %tobool13 = icmp ne i32 %and12, 0, !dbg !6354
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !6355

if.then14:                                        ; preds = %if.end10
  %18 = load i64, i64* %mask, align 8, !dbg !6356
  %or15 = or i64 %18, 1048576, !dbg !6356
  store i64 %or15, i64* %mask, align 8, !dbg !6356
  br label %if.end16, !dbg !6358

if.end16:                                         ; preds = %if.then14, %if.end10
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6359
  %mode17 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 27, !dbg !6361
  %20 = load i32, i32* %mode17, align 8, !dbg !6361
  %and18 = and i32 %20, 1, !dbg !6362
  %tobool19 = icmp ne i32 %and18, 0, !dbg !6362
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !6363

if.then20:                                        ; preds = %if.end16
  %21 = load i64, i64* %mask, align 8, !dbg !6364
  %or21 = or i64 %21, 68719476736, !dbg !6364
  store i64 %or21, i64* %mask, align 8, !dbg !6364
  br label %if.end22, !dbg !6365

if.end22:                                         ; preds = %if.then20, %if.end16
  br label %if.end23, !dbg !6366

if.end23:                                         ; preds = %if.end22, %cond.end
  %22 = load i64, i64* %mask, align 8, !dbg !6367
  ret i64 %22, !dbg !6368
}

; Function Attrs: noinline nounwind uwtable
define internal void @editbmesh_build_data(%struct.Scene* %scene, %struct.Object* %obedit, %struct.BMEditMesh* %em, i64 %dataMask) #0 !dbg !6369 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %obedit.addr = alloca %struct.Object*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %dataMask.addr = alloca i64, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6372, metadata !DIExpression()), !dbg !6373
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !6374, metadata !DIExpression()), !dbg !6375
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !6376, metadata !DIExpression()), !dbg !6377
  store i64 %dataMask, i64* %dataMask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dataMask.addr, metadata !6378, metadata !DIExpression()), !dbg !6379
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !6380
  call void @BKE_object_free_derived_caches(%struct.Object* %0), !dbg !6381
  %1 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !6382
  call void @BKE_object_sculpt_modifiers_changed(%struct.Object* %1), !dbg !6383
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6384
  call void @BKE_editmesh_free_derivedmesh(%struct.BMEditMesh* %2), !dbg !6385
  %3 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6386
  %4 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !6387
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6388
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6389
  %derivedCage = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 6, !dbg !6390
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6391
  %derivedFinal = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 5, !dbg !6392
  %8 = load i64, i64* %dataMask.addr, align 8, !dbg !6393
  call void @editbmesh_calc_modifiers(%struct.Scene* %3, %struct.Object* %4, %struct.BMEditMesh* %5, %struct.DerivedMesh** %derivedCage, %struct.DerivedMesh** %derivedFinal, i64 %8), !dbg !6394
  %9 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !6395
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6396
  %derivedFinal1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %10, i32 0, i32 5, !dbg !6397
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal1, align 8, !dbg !6397
  call void @DM_set_object_boundbox(%struct.Object* %9, %struct.DerivedMesh* %11), !dbg !6398
  %12 = load i64, i64* %dataMask.addr, align 8, !dbg !6399
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6400
  %lastDataMask = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %13, i32 0, i32 7, !dbg !6401
  store i64 %12, i64* %lastDataMask, align 8, !dbg !6402
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6403
  %derivedFinal2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %14, i32 0, i32 5, !dbg !6404
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal2, align 8, !dbg !6404
  %needsFree = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 10, !dbg !6405
  store i32 0, i32* %needsFree, align 4, !dbg !6406
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6407
  %derivedCage3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 6, !dbg !6408
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedCage3, align 8, !dbg !6408
  %needsFree4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %17, i32 0, i32 10, !dbg !6409
  store i32 0, i32* %needsFree4, align 4, !dbg !6410
  ret void, !dbg !6411
}

; Function Attrs: noinline nounwind uwtable
define internal void @mesh_build_data(%struct.Scene* %scene, %struct.Object* %ob, i64 %dataMask, i32 %build_shapekey_layers) #0 !dbg !6412 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dataMask.addr = alloca i64, align 8
  %build_shapekey_layers.addr = alloca i32, align 4
  %obact = alloca %struct.Object*, align 8
  %editing = alloca i8, align 1
  %needMapping = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6415, metadata !DIExpression()), !dbg !6416
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6417, metadata !DIExpression()), !dbg !6418
  store i64 %dataMask, i64* %dataMask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dataMask.addr, metadata !6419, metadata !DIExpression()), !dbg !6420
  store i32 %build_shapekey_layers, i32* %build_shapekey_layers.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %build_shapekey_layers.addr, metadata !6421, metadata !DIExpression()), !dbg !6422
  call void @llvm.dbg.declare(metadata %struct.Object** %obact, metadata !6423, metadata !DIExpression()), !dbg !6424
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6425
  %basact = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 6, !dbg !6426
  %1 = load %struct.Base*, %struct.Base** %basact, align 8, !dbg !6426
  %tobool = icmp ne %struct.Base* %1, null, !dbg !6425
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6425

cond.true:                                        ; preds = %entry
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6427
  %basact1 = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 6, !dbg !6428
  %3 = load %struct.Base*, %struct.Base** %basact1, align 8, !dbg !6428
  %object = getelementptr inbounds %struct.Base, %struct.Base* %3, i32 0, i32 7, !dbg !6429
  %4 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !6429
  br label %cond.end, !dbg !6425

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6425

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.Object* [ %4, %cond.true ], [ null, %cond.false ], !dbg !6425
  store %struct.Object* %cond, %struct.Object** %obact, align 8, !dbg !6424
  call void @llvm.dbg.declare(metadata i8* %editing, metadata !6430, metadata !DIExpression()), !dbg !6431
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6432
  %call = call zeroext i8 @BKE_paint_select_face_test(%struct.Object* %5), !dbg !6433
  store i8 %call, i8* %editing, align 1, !dbg !6431
  call void @llvm.dbg.declare(metadata i32* %needMapping, metadata !6434, metadata !DIExpression()), !dbg !6435
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6436
  %7 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !6437
  %cmp = icmp eq %struct.Object* %6, %7, !dbg !6438
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6439

land.rhs:                                         ; preds = %cond.end
  %8 = load i8, i8* %editing, align 1, !dbg !6440
  %conv = zext i8 %8 to i32, !dbg !6440
  %tobool2 = icmp ne i32 %conv, 0, !dbg !6440
  br i1 %tobool2, label %lor.end, label %lor.rhs, !dbg !6441

lor.rhs:                                          ; preds = %land.rhs
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6442
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 27, !dbg !6443
  %10 = load i32, i32* %mode, align 8, !dbg !6443
  %and = and i32 %10, 28, !dbg !6444
  %tobool3 = icmp ne i32 %and, 0, !dbg !6441
  br label %lor.end, !dbg !6441

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %11 = phi i1 [ true, %land.rhs ], [ %tobool3, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %cond.end
  %12 = phi i1 [ false, %cond.end ], [ %11, %lor.end ], !dbg !6445
  %land.ext = zext i1 %12 to i32, !dbg !6439
  store i32 %land.ext, i32* %needMapping, align 4, !dbg !6435
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6446
  call void @BKE_object_free_derived_caches(%struct.Object* %13), !dbg !6447
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6448
  call void @BKE_object_sculpt_modifiers_changed(%struct.Object* %14), !dbg !6449
  %15 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6450
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6451
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6452
  %derivedDeform = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 119, !dbg !6453
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6454
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 120, !dbg !6455
  %19 = load i32, i32* %needMapping, align 4, !dbg !6456
  %20 = load i64, i64* %dataMask.addr, align 8, !dbg !6457
  %21 = load i32, i32* %build_shapekey_layers.addr, align 4, !dbg !6458
  call void @mesh_calc_modifiers(%struct.Scene* %15, %struct.Object* %16, [3 x float]* null, %struct.DerivedMesh** %derivedDeform, %struct.DerivedMesh** %derivedFinal, i32 0, i32 1, i32 %19, i64 %20, i32 -1, i32 1, i32 %21), !dbg !6459
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6460
  %23 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6461
  %derivedFinal4 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 120, !dbg !6462
  %24 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal4, align 8, !dbg !6462
  call void @DM_set_object_boundbox(%struct.Object* %22, %struct.DerivedMesh* %24), !dbg !6463
  %25 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6464
  %derivedFinal5 = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 120, !dbg !6465
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal5, align 8, !dbg !6465
  %needsFree = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %26, i32 0, i32 10, !dbg !6466
  store i32 0, i32* %needsFree, align 4, !dbg !6467
  %27 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6468
  %derivedDeform6 = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 119, !dbg !6469
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedDeform6, align 8, !dbg !6469
  %needsFree7 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %28, i32 0, i32 10, !dbg !6470
  store i32 0, i32* %needsFree7, align 4, !dbg !6471
  %29 = load i64, i64* %dataMask.addr, align 8, !dbg !6472
  %30 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6473
  %lastDataMask = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 121, !dbg !6474
  store i64 %29, i64* %lastDataMask, align 8, !dbg !6475
  %31 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6476
  %mode8 = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 27, !dbg !6478
  %32 = load i32, i32* %mode8, align 8, !dbg !6478
  %and9 = and i32 %32, 2, !dbg !6479
  %tobool10 = icmp ne i32 %and9, 0, !dbg !6479
  br i1 %tobool10, label %land.lhs.true, label %if.end, !dbg !6480

land.lhs.true:                                    ; preds = %land.end
  %33 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6481
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 2, !dbg !6482
  %34 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !6482
  %tobool11 = icmp ne %struct.SculptSession* %34, null, !dbg !6481
  br i1 %tobool11, label %if.then, label %if.end, !dbg !6483

if.then:                                          ; preds = %land.lhs.true
  %35 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6484
  %36 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6486
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %36, i32 0, i32 20, !dbg !6487
  %37 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !6487
  %sculpt12 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %37, i32 0, i32 2, !dbg !6488
  %38 = load %struct.Sculpt*, %struct.Sculpt** %sculpt12, align 8, !dbg !6488
  %39 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6489
  call void @BKE_sculpt_update_mesh_elements(%struct.Scene* %35, %struct.Sculpt* %38, %struct.Object* %39, i8 zeroext 0, i8 zeroext 0), !dbg !6490
  br label %if.end, !dbg !6491

if.end:                                           ; preds = %if.then, %land.lhs.true, %land.end
  ret void, !dbg !6492
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @mesh_get_derived_final(%struct.Scene* %scene, %struct.Object* %ob, i64 %dataMask) #0 !dbg !6493 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dataMask.addr = alloca i64, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6496, metadata !DIExpression()), !dbg !6497
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6498, metadata !DIExpression()), !dbg !6499
  store i64 %dataMask, i64* %dataMask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dataMask.addr, metadata !6500, metadata !DIExpression()), !dbg !6501
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6502
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6503
  %call = call i64 @object_get_datamask(%struct.Scene* %0, %struct.Object* %1), !dbg !6504
  %2 = load i64, i64* %dataMask.addr, align 8, !dbg !6505
  %or = or i64 %2, %call, !dbg !6505
  store i64 %or, i64* %dataMask.addr, align 8, !dbg !6505
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6506
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 120, !dbg !6508
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !6508
  %tobool = icmp ne %struct.DerivedMesh* %4, null, !dbg !6506
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6509

lor.lhs.false:                                    ; preds = %entry
  %5 = load i64, i64* %dataMask.addr, align 8, !dbg !6510
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6511
  %lastDataMask = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 121, !dbg !6512
  %7 = load i64, i64* %lastDataMask, align 8, !dbg !6512
  %and = and i64 %5, %7, !dbg !6513
  %8 = load i64, i64* %dataMask.addr, align 8, !dbg !6514
  %cmp = icmp ne i64 %and, %8, !dbg !6515
  br i1 %cmp, label %if.then, label %if.end, !dbg !6516

if.then:                                          ; preds = %lor.lhs.false, %entry
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6517
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6518
  %11 = load i64, i64* %dataMask.addr, align 8, !dbg !6519
  call void @mesh_build_data(%struct.Scene* %9, %struct.Object* %10, i64 %11, i32 0), !dbg !6520
  br label %if.end, !dbg !6520

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6521
  %derivedFinal1 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 120, !dbg !6523
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal1, align 8, !dbg !6523
  %tobool2 = icmp ne %struct.DerivedMesh* %13, null, !dbg !6521
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !6524

if.then3:                                         ; preds = %if.end
  br label %if.end4, !dbg !6525

if.end4:                                          ; preds = %if.then3, %if.end
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6527
  %derivedFinal5 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 120, !dbg !6528
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal5, align 8, !dbg !6528
  ret %struct.DerivedMesh* %15, !dbg !6529
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @mesh_get_derived_deform(%struct.Scene* %scene, %struct.Object* %ob, i64 %dataMask) #0 !dbg !6530 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dataMask.addr = alloca i64, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6531, metadata !DIExpression()), !dbg !6532
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6533, metadata !DIExpression()), !dbg !6534
  store i64 %dataMask, i64* %dataMask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dataMask.addr, metadata !6535, metadata !DIExpression()), !dbg !6536
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6537
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6538
  %call = call i64 @object_get_datamask(%struct.Scene* %0, %struct.Object* %1), !dbg !6539
  %2 = load i64, i64* %dataMask.addr, align 8, !dbg !6540
  %or = or i64 %2, %call, !dbg !6540
  store i64 %or, i64* %dataMask.addr, align 8, !dbg !6540
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6541
  %derivedDeform = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 119, !dbg !6543
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedDeform, align 8, !dbg !6543
  %tobool = icmp ne %struct.DerivedMesh* %4, null, !dbg !6541
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6544

lor.lhs.false:                                    ; preds = %entry
  %5 = load i64, i64* %dataMask.addr, align 8, !dbg !6545
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6546
  %lastDataMask = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 121, !dbg !6547
  %7 = load i64, i64* %lastDataMask, align 8, !dbg !6547
  %and = and i64 %5, %7, !dbg !6548
  %8 = load i64, i64* %dataMask.addr, align 8, !dbg !6549
  %cmp = icmp ne i64 %and, %8, !dbg !6550
  br i1 %cmp, label %if.then, label %if.end, !dbg !6551

if.then:                                          ; preds = %lor.lhs.false, %entry
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6552
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6553
  %11 = load i64, i64* %dataMask.addr, align 8, !dbg !6554
  call void @mesh_build_data(%struct.Scene* %9, %struct.Object* %10, i64 %11, i32 0), !dbg !6555
  br label %if.end, !dbg !6555

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6556
  %derivedDeform1 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 119, !dbg !6557
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedDeform1, align 8, !dbg !6557
  ret %struct.DerivedMesh* %13, !dbg !6558
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @mesh_create_derived_render(%struct.Scene* %scene, %struct.Object* %ob, i64 %dataMask) #0 !dbg !6559 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dataMask.addr = alloca i64, align 8
  %final = alloca %struct.DerivedMesh*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6560, metadata !DIExpression()), !dbg !6561
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6562, metadata !DIExpression()), !dbg !6563
  store i64 %dataMask, i64* %dataMask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dataMask.addr, metadata !6564, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %final, metadata !6566, metadata !DIExpression()), !dbg !6567
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6568
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6569
  %2 = load i64, i64* %dataMask.addr, align 8, !dbg !6570
  call void @mesh_calc_modifiers(%struct.Scene* %0, %struct.Object* %1, [3 x float]* null, %struct.DerivedMesh** null, %struct.DerivedMesh** %final, i32 1, i32 1, i32 0, i64 %2, i32 -1, i32 0, i32 0), !dbg !6571
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %final, align 8, !dbg !6572
  ret %struct.DerivedMesh* %3, !dbg !6573
}

; Function Attrs: noinline nounwind uwtable
define internal void @mesh_calc_modifiers(%struct.Scene* %scene, %struct.Object* %ob, [3 x float]* %inputVertexCos, %struct.DerivedMesh** %deform_r, %struct.DerivedMesh** %final_r, i32 %useRenderParams, i32 %useDeform, i32 %needMapping, i64 %dataMask, i32 %index, i32 %useCache, i32 %build_shapekey_layers) #0 !dbg !6574 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %inputVertexCos.addr = alloca [3 x float]*, align 8
  %deform_r.addr = alloca %struct.DerivedMesh**, align 8
  %final_r.addr = alloca %struct.DerivedMesh**, align 8
  %useRenderParams.addr = alloca i32, align 4
  %useDeform.addr = alloca i32, align 4
  %needMapping.addr = alloca i32, align 4
  %dataMask.addr = alloca i64, align 8
  %index.addr = alloca i32, align 4
  %useCache.addr = alloca i32, align 4
  %build_shapekey_layers.addr = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %firstmd = alloca %struct.ModifierData*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %previewmd = alloca %struct.ModifierData*, align 8
  %datamasks = alloca %struct.CDMaskLink*, align 8
  %curr = alloca %struct.CDMaskLink*, align 8
  %mask = alloca i64, align 8
  %nextmask = alloca i64, align 8
  %previewmask = alloca i64, align 8
  %append_mask = alloca i64, align 8
  %deformedVerts = alloca [3 x float]*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %orcodm = alloca %struct.DerivedMesh*, align 8
  %clothorcodm = alloca %struct.DerivedMesh*, align 8
  %finaldm = alloca %struct.DerivedMesh*, align 8
  %numVerts = alloca i32, align 4
  %required_mode = alloca i32, align 4
  %isPrevDeform = alloca i8, align 1
  %skipVirtualArmature = alloca i8, align 1
  %mmd = alloca %struct.MultiresModifierData*, align 8
  %has_multires = alloca i8, align 1
  %multires_applied = alloca i8, align 1
  %sculpt_mode = alloca i8, align 1
  %sculpt_dyntopo = alloca i8, align 1
  %draw_flag = alloca i32, align 4
  %do_mod_mcol = alloca i8, align 1
  %do_final_wmcol = alloca i8, align 1
  %do_init_wmcol = alloca i8, align 1
  %do_mod_wmcol = alloca i8, align 1
  %do_loop_normals = alloca i8, align 1
  %loop_normals_split_angle = alloca float, align 4
  %virtualModifierData = alloca %struct.VirtualModifierData, align 8
  %app_flags = alloca i32, align 4
  %deform_app_flags = alloca i32, align 4
  %mti = alloca %struct.ModifierTypeInfo*, align 8
  %mti141 = alloca %struct.ModifierTypeInfo*, align 8
  %unsupported = alloca i8, align 1
  %ndm = alloca %struct.DerivedMesh*, align 8
  %tdm = alloca %struct.DerivedMesh*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6578, metadata !DIExpression()), !dbg !6579
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6580, metadata !DIExpression()), !dbg !6581
  store [3 x float]* %inputVertexCos, [3 x float]** %inputVertexCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %inputVertexCos.addr, metadata !6582, metadata !DIExpression()), !dbg !6583
  store %struct.DerivedMesh** %deform_r, %struct.DerivedMesh*** %deform_r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh*** %deform_r.addr, metadata !6584, metadata !DIExpression()), !dbg !6585
  store %struct.DerivedMesh** %final_r, %struct.DerivedMesh*** %final_r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh*** %final_r.addr, metadata !6586, metadata !DIExpression()), !dbg !6587
  store i32 %useRenderParams, i32* %useRenderParams.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %useRenderParams.addr, metadata !6588, metadata !DIExpression()), !dbg !6589
  store i32 %useDeform, i32* %useDeform.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %useDeform.addr, metadata !6590, metadata !DIExpression()), !dbg !6591
  store i32 %needMapping, i32* %needMapping.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %needMapping.addr, metadata !6592, metadata !DIExpression()), !dbg !6593
  store i64 %dataMask, i64* %dataMask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dataMask.addr, metadata !6594, metadata !DIExpression()), !dbg !6595
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6596, metadata !DIExpression()), !dbg !6597
  store i32 %useCache, i32* %useCache.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %useCache.addr, metadata !6598, metadata !DIExpression()), !dbg !6599
  store i32 %build_shapekey_layers, i32* %build_shapekey_layers.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %build_shapekey_layers.addr, metadata !6600, metadata !DIExpression()), !dbg !6601
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !6602, metadata !DIExpression()), !dbg !6603
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6604
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !6605
  %1 = load i8*, i8** %data, align 8, !dbg !6605
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !6604
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !6603
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %firstmd, metadata !6606, metadata !DIExpression()), !dbg !6607
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !6608, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %previewmd, metadata !6610, metadata !DIExpression()), !dbg !6611
  store %struct.ModifierData* null, %struct.ModifierData** %previewmd, align 8, !dbg !6611
  call void @llvm.dbg.declare(metadata %struct.CDMaskLink** %datamasks, metadata !6612, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.declare(metadata %struct.CDMaskLink** %curr, metadata !6621, metadata !DIExpression()), !dbg !6622
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !6623, metadata !DIExpression()), !dbg !6624
  call void @llvm.dbg.declare(metadata i64* %nextmask, metadata !6625, metadata !DIExpression()), !dbg !6626
  call void @llvm.dbg.declare(metadata i64* %previewmask, metadata !6627, metadata !DIExpression()), !dbg !6628
  store i64 0, i64* %previewmask, align 8, !dbg !6628
  call void @llvm.dbg.declare(metadata i64* %append_mask, metadata !6629, metadata !DIExpression()), !dbg !6630
  store i64 128, i64* %append_mask, align 8, !dbg !6630
  call void @llvm.dbg.declare(metadata [3 x float]** %deformedVerts, metadata !6631, metadata !DIExpression()), !dbg !6632
  store [3 x float]* null, [3 x float]** %deformedVerts, align 8, !dbg !6632
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !6633, metadata !DIExpression()), !dbg !6634
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %dm, align 8, !dbg !6634
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %orcodm, metadata !6635, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %clothorcodm, metadata !6637, metadata !DIExpression()), !dbg !6638
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %finaldm, metadata !6639, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !6641, metadata !DIExpression()), !dbg !6642
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6643
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 26, !dbg !6644
  %4 = load i32, i32* %totvert, align 8, !dbg !6644
  store i32 %4, i32* %numVerts, align 4, !dbg !6642
  call void @llvm.dbg.declare(metadata i32* %required_mode, metadata !6645, metadata !DIExpression()), !dbg !6646
  call void @llvm.dbg.declare(metadata i8* %isPrevDeform, metadata !6647, metadata !DIExpression()), !dbg !6648
  store i8 0, i8* %isPrevDeform, align 1, !dbg !6648
  call void @llvm.dbg.declare(metadata i8* %skipVirtualArmature, metadata !6649, metadata !DIExpression()), !dbg !6650
  %5 = load i32, i32* %useDeform.addr, align 4, !dbg !6651
  %cmp = icmp slt i32 %5, 0, !dbg !6652
  %conv = zext i1 %cmp to i32, !dbg !6652
  %conv1 = trunc i32 %conv to i8, !dbg !6653
  store i8 %conv1, i8* %skipVirtualArmature, align 1, !dbg !6650
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd, metadata !6654, metadata !DIExpression()), !dbg !6655
  %6 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6656
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6657
  %call = call %struct.MultiresModifierData* @get_multires_modifier(%struct.Scene* %6, %struct.Object* %7, i8 zeroext 0), !dbg !6658
  store %struct.MultiresModifierData* %call, %struct.MultiresModifierData** %mmd, align 8, !dbg !6655
  call void @llvm.dbg.declare(metadata i8* %has_multires, metadata !6659, metadata !DIExpression()), !dbg !6660
  %8 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !6661
  %tobool = icmp ne %struct.MultiresModifierData* %8, null, !dbg !6661
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !6662

land.rhs:                                         ; preds = %entry
  %9 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !6663
  %sculptlvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %9, i32 0, i32 2, !dbg !6664
  %10 = load i8, i8* %sculptlvl, align 1, !dbg !6664
  %conv2 = zext i8 %10 to i32, !dbg !6663
  %cmp3 = icmp ne i32 %conv2, 0, !dbg !6665
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %11 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !6666
  %land.ext = zext i1 %11 to i32, !dbg !6662
  %conv5 = trunc i32 %land.ext to i8, !dbg !6667
  store i8 %conv5, i8* %has_multires, align 1, !dbg !6660
  call void @llvm.dbg.declare(metadata i8* %multires_applied, metadata !6668, metadata !DIExpression()), !dbg !6669
  store i8 0, i8* %multires_applied, align 1, !dbg !6669
  call void @llvm.dbg.declare(metadata i8* %sculpt_mode, metadata !6670, metadata !DIExpression()), !dbg !6671
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6672
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 27, !dbg !6673
  %13 = load i32, i32* %mode, align 8, !dbg !6673
  %and = and i32 %13, 2, !dbg !6674
  %tobool6 = icmp ne i32 %and, 0, !dbg !6674
  br i1 %tobool6, label %land.rhs7, label %land.end9, !dbg !6675

land.rhs7:                                        ; preds = %land.end
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6676
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 2, !dbg !6677
  %15 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !6677
  %tobool8 = icmp ne %struct.SculptSession* %15, null, !dbg !6675
  br label %land.end9

land.end9:                                        ; preds = %land.rhs7, %land.end
  %16 = phi i1 [ false, %land.end ], [ %tobool8, %land.rhs7 ], !dbg !6666
  %land.ext10 = zext i1 %16 to i32, !dbg !6675
  %conv11 = trunc i32 %land.ext10 to i8, !dbg !6672
  store i8 %conv11, i8* %sculpt_mode, align 1, !dbg !6671
  call void @llvm.dbg.declare(metadata i8* %sculpt_dyntopo, metadata !6678, metadata !DIExpression()), !dbg !6679
  %17 = load i8, i8* %sculpt_mode, align 1, !dbg !6680
  %conv12 = zext i8 %17 to i32, !dbg !6680
  %tobool13 = icmp ne i32 %conv12, 0, !dbg !6680
  br i1 %tobool13, label %land.rhs14, label %land.end17, !dbg !6681

land.rhs14:                                       ; preds = %land.end9
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6682
  %sculpt15 = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 2, !dbg !6683
  %19 = load %struct.SculptSession*, %struct.SculptSession** %sculpt15, align 8, !dbg !6683
  %bm = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %19, i32 0, i32 10, !dbg !6684
  %20 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6684
  %tobool16 = icmp ne %struct.BMesh* %20, null, !dbg !6681
  br label %land.end17

land.end17:                                       ; preds = %land.rhs14, %land.end9
  %21 = phi i1 [ false, %land.end9 ], [ %tobool16, %land.rhs14 ], !dbg !6666
  %land.ext18 = zext i1 %21 to i32, !dbg !6681
  %conv19 = trunc i32 %land.ext18 to i8, !dbg !6685
  store i8 %conv19, i8* %sculpt_dyntopo, align 1, !dbg !6679
  call void @llvm.dbg.declare(metadata i32* %draw_flag, metadata !6686, metadata !DIExpression()), !dbg !6687
  %22 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6688
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %22, i32 0, i32 20, !dbg !6689
  %23 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !6689
  %call20 = call i32 @dm_drawflag_calc(%struct.ToolSettings* %23), !dbg !6690
  store i32 %call20, i32* %draw_flag, align 4, !dbg !6687
  call void @llvm.dbg.declare(metadata i8* %do_mod_mcol, metadata !6691, metadata !DIExpression()), !dbg !6692
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6693
  %mode21 = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 27, !dbg !6694
  %25 = load i32, i32* %mode21, align 8, !dbg !6694
  %cmp22 = icmp eq i32 %25, 0, !dbg !6695
  %conv23 = zext i1 %cmp22 to i32, !dbg !6695
  %conv24 = trunc i32 %conv23 to i8, !dbg !6696
  store i8 %conv24, i8* %do_mod_mcol, align 1, !dbg !6692
  call void @llvm.dbg.declare(metadata i8* %do_final_wmcol, metadata !6697, metadata !DIExpression()), !dbg !6698
  store i8 0, i8* %do_final_wmcol, align 1, !dbg !6698
  call void @llvm.dbg.declare(metadata i8* %do_init_wmcol, metadata !6699, metadata !DIExpression()), !dbg !6700
  %26 = load i64, i64* %dataMask.addr, align 8, !dbg !6701
  %and25 = and i64 %26, 1048576, !dbg !6702
  %tobool26 = icmp ne i64 %and25, 0, !dbg !6702
  br i1 %tobool26, label %land.lhs.true, label %land.end31, !dbg !6703

land.lhs.true:                                    ; preds = %land.end17
  %27 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6704
  %mode27 = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 27, !dbg !6705
  %28 = load i32, i32* %mode27, align 8, !dbg !6705
  %and28 = and i32 %28, 8, !dbg !6706
  %tobool29 = icmp ne i32 %and28, 0, !dbg !6706
  br i1 %tobool29, label %land.rhs30, label %land.end31, !dbg !6707

land.rhs30:                                       ; preds = %land.lhs.true
  br label %land.end31

land.end31:                                       ; preds = %land.rhs30, %land.lhs.true, %land.end17
  %29 = phi i1 [ false, %land.lhs.true ], [ false, %land.end17 ], [ true, %land.rhs30 ], !dbg !6666
  %land.ext32 = zext i1 %29 to i32, !dbg !6707
  %conv33 = trunc i32 %land.ext32 to i8, !dbg !6708
  store i8 %conv33, i8* %do_init_wmcol, align 1, !dbg !6700
  call void @llvm.dbg.declare(metadata i8* %do_mod_wmcol, metadata !6709, metadata !DIExpression()), !dbg !6710
  %30 = load i8, i8* %do_init_wmcol, align 1, !dbg !6711
  store i8 %30, i8* %do_mod_wmcol, align 1, !dbg !6710
  call void @llvm.dbg.declare(metadata i8* %do_loop_normals, metadata !6712, metadata !DIExpression()), !dbg !6713
  %31 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6714
  %flag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %31, i32 0, i32 38, !dbg !6715
  %32 = load i16, i16* %flag, align 2, !dbg !6715
  %conv34 = sext i16 %32 to i32, !dbg !6714
  %and35 = and i32 %conv34, 32, !dbg !6716
  %conv36 = trunc i32 %and35 to i8, !dbg !6717
  store i8 %conv36, i8* %do_loop_normals, align 1, !dbg !6713
  call void @llvm.dbg.declare(metadata float* %loop_normals_split_angle, metadata !6718, metadata !DIExpression()), !dbg !6719
  %33 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6720
  %smoothresh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %33, i32 0, i32 39, !dbg !6721
  %34 = load float, float* %smoothresh, align 8, !dbg !6721
  store float %34, float* %loop_normals_split_angle, align 4, !dbg !6719
  call void @llvm.dbg.declare(metadata %struct.VirtualModifierData* %virtualModifierData, metadata !6722, metadata !DIExpression()), !dbg !6760
  call void @llvm.dbg.declare(metadata i32* %app_flags, metadata !6761, metadata !DIExpression()), !dbg !6762
  %35 = load i32, i32* %useRenderParams.addr, align 4, !dbg !6763
  %tobool37 = icmp ne i32 %35, 0, !dbg !6763
  %36 = zext i1 %tobool37 to i64, !dbg !6763
  %cond = select i1 %tobool37, i32 1, i32 0, !dbg !6763
  store i32 %cond, i32* %app_flags, align 4, !dbg !6762
  call void @llvm.dbg.declare(metadata i32* %deform_app_flags, metadata !6764, metadata !DIExpression()), !dbg !6765
  %37 = load i32, i32* %app_flags, align 4, !dbg !6766
  store i32 %37, i32* %deform_app_flags, align 4, !dbg !6765
  %38 = load i32, i32* %useCache.addr, align 4, !dbg !6767
  %tobool38 = icmp ne i32 %38, 0, !dbg !6767
  br i1 %tobool38, label %if.then, label %if.end, !dbg !6769

if.then:                                          ; preds = %land.end31
  %39 = load i32, i32* %app_flags, align 4, !dbg !6770
  %or = or i32 %39, 2, !dbg !6770
  store i32 %or, i32* %app_flags, align 4, !dbg !6770
  br label %if.end, !dbg !6771

if.end:                                           ; preds = %if.then, %land.end31
  %40 = load i32, i32* %useDeform.addr, align 4, !dbg !6772
  %tobool39 = icmp ne i32 %40, 0, !dbg !6772
  br i1 %tobool39, label %if.then40, label %if.end42, !dbg !6774

if.then40:                                        ; preds = %if.end
  %41 = load i32, i32* %deform_app_flags, align 4, !dbg !6775
  %or41 = or i32 %41, 2, !dbg !6775
  store i32 %or41, i32* %deform_app_flags, align 4, !dbg !6775
  br label %if.end42, !dbg !6776

if.end42:                                         ; preds = %if.then40, %if.end
  %42 = load i8, i8* %skipVirtualArmature, align 1, !dbg !6777
  %tobool43 = icmp ne i8 %42, 0, !dbg !6777
  br i1 %tobool43, label %if.else, label %if.then44, !dbg !6779

if.then44:                                        ; preds = %if.end42
  %43 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6780
  %call45 = call %struct.ModifierData* @modifiers_getVirtualModifierList(%struct.Object* %43, %struct.VirtualModifierData* %virtualModifierData), !dbg !6782
  store %struct.ModifierData* %call45, %struct.ModifierData** %firstmd, align 8, !dbg !6783
  br label %if.end52, !dbg !6784

if.else:                                          ; preds = %if.end42
  %44 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6785
  %modifiers = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 26, !dbg !6787
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modifiers, i32 0, i32 0, !dbg !6788
  %45 = load i8*, i8** %first, align 8, !dbg !6788
  %46 = bitcast i8* %45 to %struct.ModifierData*, !dbg !6785
  store %struct.ModifierData* %46, %struct.ModifierData** %firstmd, align 8, !dbg !6789
  %47 = load %struct.ModifierData*, %struct.ModifierData** %firstmd, align 8, !dbg !6790
  %tobool46 = icmp ne %struct.ModifierData* %47, null, !dbg !6790
  br i1 %tobool46, label %land.lhs.true47, label %if.end51, !dbg !6792

land.lhs.true47:                                  ; preds = %if.else
  %48 = load %struct.ModifierData*, %struct.ModifierData** %firstmd, align 8, !dbg !6793
  %type = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %48, i32 0, i32 2, !dbg !6794
  %49 = load i32, i32* %type, align 8, !dbg !6794
  %cmp48 = icmp eq i32 %49, 8, !dbg !6795
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !6796

if.then50:                                        ; preds = %land.lhs.true47
  %50 = load %struct.ModifierData*, %struct.ModifierData** %firstmd, align 8, !dbg !6797
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %50, i32 0, i32 0, !dbg !6798
  %51 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !6798
  store %struct.ModifierData* %51, %struct.ModifierData** %firstmd, align 8, !dbg !6799
  br label %if.end51, !dbg !6800

if.end51:                                         ; preds = %if.then50, %land.lhs.true47, %if.else
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then44
  %52 = load %struct.ModifierData*, %struct.ModifierData** %firstmd, align 8, !dbg !6801
  store %struct.ModifierData* %52, %struct.ModifierData** %md, align 8, !dbg !6802
  %53 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6803
  call void @modifiers_clearErrors(%struct.Object* %53), !dbg !6804
  %54 = load i32, i32* %useRenderParams.addr, align 4, !dbg !6805
  %tobool53 = icmp ne i32 %54, 0, !dbg !6805
  br i1 %tobool53, label %if.then54, label %if.else55, !dbg !6807

if.then54:                                        ; preds = %if.end52
  store i32 2, i32* %required_mode, align 4, !dbg !6808
  br label %if.end56, !dbg !6809

if.else55:                                        ; preds = %if.end52
  store i32 1, i32* %required_mode, align 4, !dbg !6810
  br label %if.end56

if.end56:                                         ; preds = %if.else55, %if.then54
  %55 = load i8, i8* %do_mod_wmcol, align 1, !dbg !6811
  %conv57 = zext i8 %55 to i32, !dbg !6811
  %tobool58 = icmp ne i32 %conv57, 0, !dbg !6811
  br i1 %tobool58, label %if.then61, label %lor.lhs.false, !dbg !6813

lor.lhs.false:                                    ; preds = %if.end56
  %56 = load i8, i8* %do_mod_mcol, align 1, !dbg !6814
  %conv59 = zext i8 %56 to i32, !dbg !6814
  %tobool60 = icmp ne i32 %conv59, 0, !dbg !6814
  br i1 %tobool60, label %if.then61, label %if.end69, !dbg !6815

if.then61:                                        ; preds = %lor.lhs.false, %if.end56
  %57 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6816
  %58 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6818
  %59 = load i32, i32* %required_mode, align 4, !dbg !6819
  %call62 = call %struct.ModifierData* @modifiers_getLastPreview(%struct.Scene* %57, %struct.ModifierData* %58, i32 %59), !dbg !6820
  store %struct.ModifierData* %call62, %struct.ModifierData** %previewmd, align 8, !dbg !6821
  %60 = load %struct.ModifierData*, %struct.ModifierData** %previewmd, align 8, !dbg !6822
  %tobool63 = icmp ne %struct.ModifierData* %60, null, !dbg !6822
  br i1 %tobool63, label %if.then64, label %if.end68, !dbg !6824

if.then64:                                        ; preds = %if.then61
  %61 = load i8, i8* %do_mod_wmcol, align 1, !dbg !6825
  %tobool65 = icmp ne i8 %61, 0, !dbg !6825
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !6828

if.then66:                                        ; preds = %if.then64
  store i64 4, i64* %previewmask, align 8, !dbg !6829
  br label %if.end67, !dbg !6831

if.end67:                                         ; preds = %if.then66, %if.then64
  br label %if.end68, !dbg !6832

if.end68:                                         ; preds = %if.end67, %if.then61
  br label %if.end69, !dbg !6833

if.end69:                                         ; preds = %if.end68, %lor.lhs.false
  %62 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6834
  %63 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6835
  %64 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6836
  %65 = load i64, i64* %dataMask.addr, align 8, !dbg !6837
  %66 = load i32, i32* %required_mode, align 4, !dbg !6838
  %67 = load %struct.ModifierData*, %struct.ModifierData** %previewmd, align 8, !dbg !6839
  %68 = load i64, i64* %previewmask, align 8, !dbg !6840
  %call70 = call %struct.CDMaskLink* @modifiers_calcDataMasks(%struct.Scene* %62, %struct.Object* %63, %struct.ModifierData* %64, i64 %65, i32 %66, %struct.ModifierData* %67, i64 %68), !dbg !6841
  store %struct.CDMaskLink* %call70, %struct.CDMaskLink** %datamasks, align 8, !dbg !6842
  %69 = load %struct.CDMaskLink*, %struct.CDMaskLink** %datamasks, align 8, !dbg !6843
  store %struct.CDMaskLink* %69, %struct.CDMaskLink** %curr, align 8, !dbg !6844
  %70 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %deform_r.addr, align 8, !dbg !6845
  %tobool71 = icmp ne %struct.DerivedMesh** %70, null, !dbg !6845
  br i1 %tobool71, label %if.then72, label %if.end73, !dbg !6847

if.then72:                                        ; preds = %if.end69
  %71 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %deform_r.addr, align 8, !dbg !6848
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %71, align 8, !dbg !6849
  br label %if.end73, !dbg !6850

if.end73:                                         ; preds = %if.then72, %if.end69
  %72 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %final_r.addr, align 8, !dbg !6851
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %72, align 8, !dbg !6852
  %73 = load i32, i32* %useDeform.addr, align 4, !dbg !6853
  %tobool74 = icmp ne i32 %73, 0, !dbg !6853
  br i1 %tobool74, label %if.then75, label %if.else131, !dbg !6855

if.then75:                                        ; preds = %if.end73
  %74 = load [3 x float]*, [3 x float]** %inputVertexCos.addr, align 8, !dbg !6856
  %tobool76 = icmp ne [3 x float]* %74, null, !dbg !6856
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !6859

if.then77:                                        ; preds = %if.then75
  %75 = load [3 x float]*, [3 x float]** %inputVertexCos.addr, align 8, !dbg !6860
  store [3 x float]* %75, [3 x float]** %deformedVerts, align 8, !dbg !6861
  br label %if.end78, !dbg !6862

if.end78:                                         ; preds = %if.then77, %if.then75
  br label %for.cond, !dbg !6863

for.cond:                                         ; preds = %for.inc, %if.end78
  %76 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6864
  %tobool79 = icmp ne %struct.ModifierData* %76, null, !dbg !6867
  br i1 %tobool79, label %for.body, label %for.end, !dbg !6867

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ModifierTypeInfo** %mti, metadata !6868, metadata !DIExpression()), !dbg !6870
  %77 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6871
  %type80 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %77, i32 0, i32 2, !dbg !6872
  %78 = load i32, i32* %type80, align 8, !dbg !6872
  %call81 = call %struct.ModifierTypeInfo* @modifierType_getInfo(i32 %78), !dbg !6873
  store %struct.ModifierTypeInfo* %call81, %struct.ModifierTypeInfo** %mti, align 8, !dbg !6870
  %79 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6874
  %80 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6875
  %scene82 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %80, i32 0, i32 7, !dbg !6876
  store %struct.Scene* %79, %struct.Scene** %scene82, align 8, !dbg !6877
  %81 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6878
  %82 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6880
  %83 = load i32, i32* %required_mode, align 4, !dbg !6881
  %call83 = call zeroext i8 @modifier_isEnabled(%struct.Scene* %81, %struct.ModifierData* %82, i32 %83), !dbg !6882
  %tobool84 = icmp ne i8 %call83, 0, !dbg !6882
  br i1 %tobool84, label %if.end86, label %if.then85, !dbg !6883

if.then85:                                        ; preds = %for.body
  br label %for.inc, !dbg !6884

if.end86:                                         ; preds = %for.body
  %84 = load i32, i32* %useDeform.addr, align 4, !dbg !6885
  %cmp87 = icmp slt i32 %84, 0, !dbg !6887
  br i1 %cmp87, label %land.lhs.true89, label %if.end97, !dbg !6888

land.lhs.true89:                                  ; preds = %if.end86
  %85 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !6889
  %dependsOnTime = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %85, i32 0, i32 17, !dbg !6890
  %86 = load i8 (%struct.ModifierData*)*, i8 (%struct.ModifierData*)** %dependsOnTime, align 8, !dbg !6890
  %tobool90 = icmp ne i8 (%struct.ModifierData*)* %86, null, !dbg !6889
  br i1 %tobool90, label %land.lhs.true91, label %if.end97, !dbg !6891

land.lhs.true91:                                  ; preds = %land.lhs.true89
  %87 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !6892
  %dependsOnTime92 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %87, i32 0, i32 17, !dbg !6893
  %88 = load i8 (%struct.ModifierData*)*, i8 (%struct.ModifierData*)** %dependsOnTime92, align 8, !dbg !6893
  %89 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6894
  %call93 = call zeroext i8 %88(%struct.ModifierData* %89), !dbg !6892
  %conv94 = zext i8 %call93 to i32, !dbg !6892
  %tobool95 = icmp ne i32 %conv94, 0, !dbg !6892
  br i1 %tobool95, label %if.then96, label %if.end97, !dbg !6895

if.then96:                                        ; preds = %land.lhs.true91
  br label %for.inc, !dbg !6896

if.end97:                                         ; preds = %land.lhs.true91, %land.lhs.true89, %if.end86
  %90 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !6897
  %type98 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %90, i32 0, i32 3, !dbg !6899
  %91 = load i32, i32* %type98, align 4, !dbg !6899
  %cmp99 = icmp eq i32 %91, 1, !dbg !6900
  br i1 %cmp99, label %land.lhs.true101, label %if.else108, !dbg !6901

land.lhs.true101:                                 ; preds = %if.end97
  %92 = load i8, i8* %sculpt_dyntopo, align 1, !dbg !6902
  %tobool102 = icmp ne i8 %92, 0, !dbg !6902
  br i1 %tobool102, label %if.else108, label %if.then103, !dbg !6903

if.then103:                                       ; preds = %land.lhs.true101
  %93 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !6904
  %tobool104 = icmp ne [3 x float]* %93, null, !dbg !6904
  br i1 %tobool104, label %if.end107, label %if.then105, !dbg !6907

if.then105:                                       ; preds = %if.then103
  %94 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6908
  %call106 = call [3 x float]* @BKE_mesh_vertexCos_get(%struct.Mesh* %94, i32* %numVerts), !dbg !6909
  store [3 x float]* %call106, [3 x float]** %deformedVerts, align 8, !dbg !6910
  br label %if.end107, !dbg !6911

if.end107:                                        ; preds = %if.then105, %if.then103
  %95 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6912
  %96 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6913
  %97 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !6914
  %98 = load i32, i32* %numVerts, align 4, !dbg !6915
  %99 = load i32, i32* %deform_app_flags, align 4, !dbg !6916
  call void @modwrap_deformVerts(%struct.ModifierData* %95, %struct.Object* %96, %struct.DerivedMesh* null, [3 x float]* %97, i32 %98, i32 %99), !dbg !6917
  br label %if.end109, !dbg !6918

if.else108:                                       ; preds = %land.lhs.true101, %if.end97
  br label %for.end, !dbg !6919

if.end109:                                        ; preds = %if.end107
  %100 = load i32, i32* %index.addr, align 4, !dbg !6921
  %cmp110 = icmp sge i32 %100, 0, !dbg !6923
  br i1 %cmp110, label %land.lhs.true112, label %if.end118, !dbg !6924

land.lhs.true112:                                 ; preds = %if.end109
  %101 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6925
  %modifiers113 = getelementptr inbounds %struct.Object, %struct.Object* %101, i32 0, i32 26, !dbg !6926
  %102 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6927
  %103 = bitcast %struct.ModifierData* %102 to i8*, !dbg !6927
  %call114 = call i32 @BLI_findindex(%struct.ListBase* %modifiers113, i8* %103), !dbg !6928
  %104 = load i32, i32* %index.addr, align 4, !dbg !6929
  %cmp115 = icmp sge i32 %call114, %104, !dbg !6930
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !6931

if.then117:                                       ; preds = %land.lhs.true112
  br label %for.end, !dbg !6932

if.end118:                                        ; preds = %land.lhs.true112, %if.end109
  br label %for.inc, !dbg !6933

for.inc:                                          ; preds = %if.end118, %if.then96, %if.then85
  %105 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6934
  %next119 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %105, i32 0, i32 0, !dbg !6935
  %106 = load %struct.ModifierData*, %struct.ModifierData** %next119, align 8, !dbg !6935
  store %struct.ModifierData* %106, %struct.ModifierData** %md, align 8, !dbg !6936
  %107 = load %struct.CDMaskLink*, %struct.CDMaskLink** %curr, align 8, !dbg !6937
  %next120 = getelementptr inbounds %struct.CDMaskLink, %struct.CDMaskLink* %107, i32 0, i32 0, !dbg !6938
  %108 = load %struct.CDMaskLink*, %struct.CDMaskLink** %next120, align 8, !dbg !6938
  store %struct.CDMaskLink* %108, %struct.CDMaskLink** %curr, align 8, !dbg !6939
  br label %for.cond, !dbg !6940, !llvm.loop !6941

for.end:                                          ; preds = %if.then117, %if.else108, %for.cond
  %109 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %deform_r.addr, align 8, !dbg !6943
  %tobool121 = icmp ne %struct.DerivedMesh** %109, null, !dbg !6943
  br i1 %tobool121, label %if.then122, label %if.end130, !dbg !6945

if.then122:                                       ; preds = %for.end
  %110 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6946
  %call123 = call %struct.DerivedMesh* @CDDM_from_mesh(%struct.Mesh* %110), !dbg !6948
  %111 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %deform_r.addr, align 8, !dbg !6949
  store %struct.DerivedMesh* %call123, %struct.DerivedMesh** %111, align 8, !dbg !6950
  %112 = load i32, i32* %build_shapekey_layers.addr, align 4, !dbg !6951
  %tobool124 = icmp ne i32 %112, 0, !dbg !6951
  br i1 %tobool124, label %if.then125, label %if.end126, !dbg !6953

if.then125:                                       ; preds = %if.then122
  %113 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !6954
  %114 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6955
  %115 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6956
  call void @add_shapekey_layers(%struct.DerivedMesh* %113, %struct.Mesh* %114, %struct.Object* %115), !dbg !6957
  br label %if.end126, !dbg !6957

if.end126:                                        ; preds = %if.then125, %if.then122
  %116 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !6958
  %tobool127 = icmp ne [3 x float]* %116, null, !dbg !6958
  br i1 %tobool127, label %if.then128, label %if.end129, !dbg !6960

if.then128:                                       ; preds = %if.end126
  %117 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %deform_r.addr, align 8, !dbg !6961
  %118 = load %struct.DerivedMesh*, %struct.DerivedMesh** %117, align 8, !dbg !6963
  %119 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !6964
  call void @CDDM_apply_vert_coords(%struct.DerivedMesh* %118, [3 x float]* %119), !dbg !6965
  br label %if.end129, !dbg !6966

if.end129:                                        ; preds = %if.then128, %if.end126
  br label %if.end130, !dbg !6967

if.end130:                                        ; preds = %if.end129, %for.end
  br label %if.end137, !dbg !6968

if.else131:                                       ; preds = %if.end73
  %120 = load [3 x float]*, [3 x float]** %inputVertexCos.addr, align 8, !dbg !6969
  %tobool132 = icmp ne [3 x float]* %120, null, !dbg !6969
  br i1 %tobool132, label %if.then133, label %if.else134, !dbg !6972

if.then133:                                       ; preds = %if.else131
  %121 = load [3 x float]*, [3 x float]** %inputVertexCos.addr, align 8, !dbg !6973
  store [3 x float]* %121, [3 x float]** %deformedVerts, align 8, !dbg !6974
  br label %if.end136, !dbg !6975

if.else134:                                       ; preds = %if.else131
  %122 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6976
  %call135 = call [3 x float]* @BKE_mesh_vertexCos_get(%struct.Mesh* %122, i32* %numVerts), !dbg !6977
  store [3 x float]* %call135, [3 x float]** %deformedVerts, align 8, !dbg !6978
  br label %if.end136

if.end136:                                        ; preds = %if.else134, %if.then133
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.end130
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %dm, align 8, !dbg !6979
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %orcodm, align 8, !dbg !6980
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %clothorcodm, align 8, !dbg !6981
  br label %for.cond138, !dbg !6982

for.cond138:                                      ; preds = %for.inc446, %if.end137
  %123 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6983
  %tobool139 = icmp ne %struct.ModifierData* %123, null, !dbg !6986
  br i1 %tobool139, label %for.body140, label %for.end449, !dbg !6986

for.body140:                                      ; preds = %for.cond138
  call void @llvm.dbg.declare(metadata %struct.ModifierTypeInfo** %mti141, metadata !6987, metadata !DIExpression()), !dbg !6989
  %124 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6990
  %type142 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %124, i32 0, i32 2, !dbg !6991
  %125 = load i32, i32* %type142, align 8, !dbg !6991
  %call143 = call %struct.ModifierTypeInfo* @modifierType_getInfo(i32 %125), !dbg !6992
  store %struct.ModifierTypeInfo* %call143, %struct.ModifierTypeInfo** %mti141, align 8, !dbg !6989
  %126 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6993
  %127 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6994
  %scene144 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %127, i32 0, i32 7, !dbg !6995
  store %struct.Scene* %126, %struct.Scene** %scene144, align 8, !dbg !6996
  %128 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6997
  %129 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6999
  %130 = load i32, i32* %required_mode, align 4, !dbg !7000
  %call145 = call zeroext i8 @modifier_isEnabled(%struct.Scene* %128, %struct.ModifierData* %129, i32 %130), !dbg !7001
  %tobool146 = icmp ne i8 %call145, 0, !dbg !7001
  br i1 %tobool146, label %if.end148, label %if.then147, !dbg !7002

if.then147:                                       ; preds = %for.body140
  br label %for.inc446, !dbg !7003

if.end148:                                        ; preds = %for.body140
  %131 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti141, align 8, !dbg !7004
  %type149 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %131, i32 0, i32 3, !dbg !7006
  %132 = load i32, i32* %type149, align 4, !dbg !7006
  %cmp150 = icmp eq i32 %132, 1, !dbg !7007
  br i1 %cmp150, label %land.lhs.true152, label %if.end155, !dbg !7008

land.lhs.true152:                                 ; preds = %if.end148
  %133 = load i32, i32* %useDeform.addr, align 4, !dbg !7009
  %tobool153 = icmp ne i32 %133, 0, !dbg !7009
  br i1 %tobool153, label %if.end155, label %if.then154, !dbg !7010

if.then154:                                       ; preds = %land.lhs.true152
  br label %for.inc446, !dbg !7011

if.end155:                                        ; preds = %land.lhs.true152, %if.end148
  %134 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti141, align 8, !dbg !7012
  %flags = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %134, i32 0, i32 4, !dbg !7014
  %135 = load i32, i32* %flags, align 8, !dbg !7014
  %and156 = and i32 %135, 32, !dbg !7015
  %tobool157 = icmp ne i32 %and156, 0, !dbg !7015
  br i1 %tobool157, label %land.lhs.true158, label %if.end161, !dbg !7016

land.lhs.true158:                                 ; preds = %if.end155
  %136 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7017
  %tobool159 = icmp ne %struct.DerivedMesh* %136, null, !dbg !7017
  br i1 %tobool159, label %if.then160, label %if.end161, !dbg !7018

if.then160:                                       ; preds = %land.lhs.true158
  %137 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7019
  call void (%struct.ModifierData*, i8*, ...) @modifier_setError(%struct.ModifierData* %137, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.8, i64 0, i64 0)), !dbg !7021
  br label %for.inc446, !dbg !7022

if.end161:                                        ; preds = %land.lhs.true158, %if.end155
  %138 = load i8, i8* %sculpt_mode, align 1, !dbg !7023
  %conv162 = zext i8 %138 to i32, !dbg !7023
  %tobool163 = icmp ne i32 %conv162, 0, !dbg !7023
  br i1 %tobool163, label %land.lhs.true164, label %if.end217, !dbg !7025

land.lhs.true164:                                 ; preds = %if.end161
  %139 = load i8, i8* %has_multires, align 1, !dbg !7026
  %tobool165 = icmp ne i8 %139, 0, !dbg !7026
  br i1 %tobool165, label %lor.lhs.false166, label %if.then172, !dbg !7027

lor.lhs.false166:                                 ; preds = %land.lhs.true164
  %140 = load i8, i8* %multires_applied, align 1, !dbg !7028
  %conv167 = zext i8 %140 to i32, !dbg !7028
  %tobool168 = icmp ne i32 %conv167, 0, !dbg !7028
  br i1 %tobool168, label %if.then172, label %lor.lhs.false169, !dbg !7029

lor.lhs.false169:                                 ; preds = %lor.lhs.false166
  %141 = load i8, i8* %sculpt_dyntopo, align 1, !dbg !7030
  %conv170 = zext i8 %141 to i32, !dbg !7030
  %tobool171 = icmp ne i32 %conv170, 0, !dbg !7030
  br i1 %tobool171, label %if.then172, label %if.end217, !dbg !7031

if.then172:                                       ; preds = %lor.lhs.false169, %lor.lhs.false166, %land.lhs.true164
  call void @llvm.dbg.declare(metadata i8* %unsupported, metadata !7032, metadata !DIExpression()), !dbg !7034
  store i8 0, i8* %unsupported, align 1, !dbg !7034
  %142 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7035
  %type173 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %142, i32 0, i32 2, !dbg !7037
  %143 = load i32, i32* %type173, align 8, !dbg !7037
  %cmp174 = icmp eq i32 %143, 29, !dbg !7038
  br i1 %cmp174, label %land.lhs.true176, label %if.end185, !dbg !7039

land.lhs.true176:                                 ; preds = %if.then172
  %144 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7040
  %145 = bitcast %struct.ModifierData* %144 to %struct.MultiresModifierData*, !dbg !7041
  %sculptlvl177 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %145, i32 0, i32 2, !dbg !7041
  %146 = load i8, i8* %sculptlvl177, align 1, !dbg !7041
  %conv178 = zext i8 %146 to i32, !dbg !7042
  %cmp179 = icmp eq i32 %conv178, 0, !dbg !7043
  br i1 %cmp179, label %if.then181, label %if.end185, !dbg !7044

if.then181:                                       ; preds = %land.lhs.true176
  %147 = load i8, i8* %sculpt_dyntopo, align 1, !dbg !7045
  %tobool182 = icmp ne i8 %147, 0, !dbg !7045
  br i1 %tobool182, label %if.end184, label %if.then183, !dbg !7048

if.then183:                                       ; preds = %if.then181
  br label %for.inc446, !dbg !7049

if.end184:                                        ; preds = %if.then181
  br label %if.end185, !dbg !7050

if.end185:                                        ; preds = %if.end184, %land.lhs.true176, %if.then172
  %148 = load i8, i8* %sculpt_dyntopo, align 1, !dbg !7051
  %conv186 = zext i8 %148 to i32, !dbg !7051
  %tobool187 = icmp ne i32 %conv186, 0, !dbg !7051
  br i1 %tobool187, label %land.lhs.true188, label %if.end191, !dbg !7053

land.lhs.true188:                                 ; preds = %if.end185
  %149 = load i32, i32* %useRenderParams.addr, align 4, !dbg !7054
  %tobool189 = icmp ne i32 %149, 0, !dbg !7054
  br i1 %tobool189, label %if.end191, label %if.then190, !dbg !7055

if.then190:                                       ; preds = %land.lhs.true188
  store i8 1, i8* %unsupported, align 1, !dbg !7056
  br label %if.end191, !dbg !7057

if.end191:                                        ; preds = %if.then190, %land.lhs.true188, %if.end185
  %150 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7058
  %toolsettings192 = getelementptr inbounds %struct.Scene, %struct.Scene* %150, i32 0, i32 20, !dbg !7060
  %151 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings192, align 8, !dbg !7060
  %sculpt193 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %151, i32 0, i32 2, !dbg !7061
  %152 = load %struct.Sculpt*, %struct.Sculpt** %sculpt193, align 8, !dbg !7061
  %flags194 = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %152, i32 0, i32 1, !dbg !7062
  %153 = load i32, i32* %flags194, align 8, !dbg !7062
  %and195 = and i32 %153, 256, !dbg !7063
  %tobool196 = icmp ne i32 %and195, 0, !dbg !7063
  br i1 %tobool196, label %if.then197, label %if.end204, !dbg !7064

if.then197:                                       ; preds = %if.end191
  %154 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti141, align 8, !dbg !7065
  %type198 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %154, i32 0, i32 3, !dbg !7066
  %155 = load i32, i32* %type198, align 4, !dbg !7066
  %cmp199 = icmp ne i32 %155, 1, !dbg !7067
  %conv200 = zext i1 %cmp199 to i32, !dbg !7067
  %156 = load i8, i8* %unsupported, align 1, !dbg !7068
  %conv201 = zext i8 %156 to i32, !dbg !7068
  %or202 = or i32 %conv201, %conv200, !dbg !7068
  %conv203 = trunc i32 %or202 to i8, !dbg !7068
  store i8 %conv203, i8* %unsupported, align 1, !dbg !7068
  br label %if.end204, !dbg !7069

if.end204:                                        ; preds = %if.then197, %if.end191
  %157 = load i8, i8* %multires_applied, align 1, !dbg !7070
  %conv205 = zext i8 %157 to i32, !dbg !7070
  %158 = load i8, i8* %unsupported, align 1, !dbg !7071
  %conv206 = zext i8 %158 to i32, !dbg !7071
  %or207 = or i32 %conv206, %conv205, !dbg !7071
  %conv208 = trunc i32 %or207 to i8, !dbg !7071
  store i8 %conv208, i8* %unsupported, align 1, !dbg !7071
  %159 = load i8, i8* %unsupported, align 1, !dbg !7072
  %tobool209 = icmp ne i8 %159, 0, !dbg !7072
  br i1 %tobool209, label %if.then210, label %if.else215, !dbg !7074

if.then210:                                       ; preds = %if.end204
  %160 = load i8, i8* %sculpt_dyntopo, align 1, !dbg !7075
  %tobool211 = icmp ne i8 %160, 0, !dbg !7075
  br i1 %tobool211, label %if.then212, label %if.else213, !dbg !7078

if.then212:                                       ; preds = %if.then210
  %161 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7079
  call void (%struct.ModifierData*, i8*, ...) @modifier_setError(%struct.ModifierData* %161, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i64 0, i64 0)), !dbg !7080
  br label %if.end214, !dbg !7080

if.else213:                                       ; preds = %if.then210
  %162 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7081
  call void (%struct.ModifierData*, i8*, ...) @modifier_setError(%struct.ModifierData* %162, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.30, i64 0, i64 0)), !dbg !7082
  br label %if.end214

if.end214:                                        ; preds = %if.else213, %if.then212
  br label %for.inc446, !dbg !7083

if.else215:                                       ; preds = %if.end204
  %163 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7084
  call void (%struct.ModifierData*, i8*, ...) @modifier_setError(%struct.ModifierData* %163, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.31, i64 0, i64 0)), !dbg !7086
  br label %if.end216

if.end216:                                        ; preds = %if.else215
  br label %if.end217, !dbg !7087

if.end217:                                        ; preds = %if.end216, %lor.lhs.false169, %if.end161
  %164 = load i32, i32* %needMapping.addr, align 4, !dbg !7088
  %tobool218 = icmp ne i32 %164, 0, !dbg !7088
  br i1 %tobool218, label %land.lhs.true219, label %if.end223, !dbg !7090

land.lhs.true219:                                 ; preds = %if.end217
  %165 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7091
  %call220 = call zeroext i8 @modifier_supportsMapping(%struct.ModifierData* %165), !dbg !7092
  %tobool221 = icmp ne i8 %call220, 0, !dbg !7092
  br i1 %tobool221, label %if.end223, label %if.then222, !dbg !7093

if.then222:                                       ; preds = %land.lhs.true219
  br label %for.inc446, !dbg !7094

if.end223:                                        ; preds = %land.lhs.true219, %if.end217
  %166 = load i32, i32* %useDeform.addr, align 4, !dbg !7095
  %cmp224 = icmp slt i32 %166, 0, !dbg !7097
  br i1 %cmp224, label %land.lhs.true226, label %if.end235, !dbg !7098

land.lhs.true226:                                 ; preds = %if.end223
  %167 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti141, align 8, !dbg !7099
  %dependsOnTime227 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %167, i32 0, i32 17, !dbg !7100
  %168 = load i8 (%struct.ModifierData*)*, i8 (%struct.ModifierData*)** %dependsOnTime227, align 8, !dbg !7100
  %tobool228 = icmp ne i8 (%struct.ModifierData*)* %168, null, !dbg !7099
  br i1 %tobool228, label %land.lhs.true229, label %if.end235, !dbg !7101

land.lhs.true229:                                 ; preds = %land.lhs.true226
  %169 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti141, align 8, !dbg !7102
  %dependsOnTime230 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %169, i32 0, i32 17, !dbg !7103
  %170 = load i8 (%struct.ModifierData*)*, i8 (%struct.ModifierData*)** %dependsOnTime230, align 8, !dbg !7103
  %171 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7104
  %call231 = call zeroext i8 %170(%struct.ModifierData* %171), !dbg !7102
  %conv232 = zext i8 %call231 to i32, !dbg !7102
  %tobool233 = icmp ne i32 %conv232, 0, !dbg !7102
  br i1 %tobool233, label %if.then234, label %if.end235, !dbg !7105

if.then234:                                       ; preds = %land.lhs.true229
  br label %for.inc446, !dbg !7106

if.end235:                                        ; preds = %land.lhs.true229, %land.lhs.true226, %if.end223
  %172 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti141, align 8, !dbg !7107
  %requiredDataMask = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %172, i32 0, i32 13, !dbg !7109
  %173 = load i64 (%struct.Object*, %struct.ModifierData*)*, i64 (%struct.Object*, %struct.ModifierData*)** %requiredDataMask, align 8, !dbg !7109
  %tobool236 = icmp ne i64 (%struct.Object*, %struct.ModifierData*)* %173, null, !dbg !7107
  br i1 %tobool236, label %if.then237, label %if.else240, !dbg !7110

if.then237:                                       ; preds = %if.end235
  %174 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti141, align 8, !dbg !7111
  %requiredDataMask238 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %174, i32 0, i32 13, !dbg !7112
  %175 = load i64 (%struct.Object*, %struct.ModifierData*)*, i64 (%struct.Object*, %struct.ModifierData*)** %requiredDataMask238, align 8, !dbg !7112
  %176 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7113
  %177 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7114
  %call239 = call i64 %175(%struct.Object* %176, %struct.ModifierData* %177), !dbg !7111
  store i64 %call239, i64* %mask, align 8, !dbg !7115
  br label %if.end241, !dbg !7116

if.else240:                                       ; preds = %if.end235
  store i64 0, i64* %mask, align 8, !dbg !7117
  br label %if.end241

if.end241:                                        ; preds = %if.else240, %if.then237
  %178 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7118
  %tobool242 = icmp ne %struct.DerivedMesh* %178, null, !dbg !7118
  br i1 %tobool242, label %land.lhs.true243, label %if.end247, !dbg !7120

land.lhs.true243:                                 ; preds = %if.end241
  %179 = load i64, i64* %mask, align 8, !dbg !7121
  %and244 = and i64 %179, 16384, !dbg !7122
  %tobool245 = icmp ne i64 %and244, 0, !dbg !7122
  br i1 %tobool245, label %if.then246, label %if.end247, !dbg !7123

if.then246:                                       ; preds = %land.lhs.true243
  %180 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7124
  %181 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7125
  %182 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !7126
  call void @add_orco_dm(%struct.Object* %180, %struct.BMEditMesh* null, %struct.DerivedMesh* %181, %struct.DerivedMesh* %182, i32 14), !dbg !7127
  br label %if.end247, !dbg !7127

if.end247:                                        ; preds = %if.then246, %land.lhs.true243, %if.end241
  %183 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti141, align 8, !dbg !7128
  %type248 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %183, i32 0, i32 3, !dbg !7130
  %184 = load i32, i32* %type248, align 4, !dbg !7130
  %cmp249 = icmp eq i32 %184, 1, !dbg !7131
  br i1 %cmp249, label %if.then251, label %if.else281, !dbg !7132

if.then251:                                       ; preds = %if.end247
  %185 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !7133
  %tobool252 = icmp ne [3 x float]* %185, null, !dbg !7133
  br i1 %tobool252, label %if.end262, label %if.then253, !dbg !7136

if.then253:                                       ; preds = %if.then251
  %186 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7137
  %tobool254 = icmp ne %struct.DerivedMesh* %186, null, !dbg !7137
  br i1 %tobool254, label %if.then255, label %if.else259, !dbg !7140

if.then255:                                       ; preds = %if.then253
  %187 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7141
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %187, i32 0, i32 23, !dbg !7143
  %188 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !7143
  %189 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7144
  %call256 = call i32 %188(%struct.DerivedMesh* %189), !dbg !7141
  store i32 %call256, i32* %numVerts, align 4, !dbg !7145
  %190 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7146
  %191 = load i32, i32* %numVerts, align 4, !dbg !7147
  %conv257 = sext i32 %191 to i64, !dbg !7147
  %mul = mul i64 12, %conv257, !dbg !7148
  %call258 = call i8* %190(i64 %mul, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0)), !dbg !7146
  %192 = bitcast i8* %call258 to [3 x float]*, !dbg !7146
  store [3 x float]* %192, [3 x float]** %deformedVerts, align 8, !dbg !7149
  %193 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7150
  %getVertCos = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %193, i32 0, i32 77, !dbg !7151
  %194 = load void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, [3 x float]*)** %getVertCos, align 8, !dbg !7151
  %195 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7152
  %196 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !7153
  call void %194(%struct.DerivedMesh* %195, [3 x float]* %196), !dbg !7150
  br label %if.end261, !dbg !7154

if.else259:                                       ; preds = %if.then253
  %197 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7155
  %call260 = call [3 x float]* @BKE_mesh_vertexCos_get(%struct.Mesh* %197, i32* %numVerts), !dbg !7157
  store [3 x float]* %call260, [3 x float]** %deformedVerts, align 8, !dbg !7158
  br label %if.end261

if.end261:                                        ; preds = %if.else259, %if.then255
  br label %if.end262, !dbg !7159

if.end262:                                        ; preds = %if.end261, %if.then251
  %198 = load i8, i8* %isPrevDeform, align 1, !dbg !7160
  %conv263 = zext i8 %198 to i32, !dbg !7160
  %tobool264 = icmp ne i32 %conv263, 0, !dbg !7160
  br i1 %tobool264, label %land.lhs.true265, label %if.end280, !dbg !7162

land.lhs.true265:                                 ; preds = %if.end262
  %199 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti141, align 8, !dbg !7163
  %dependsOnNormals = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %199, i32 0, i32 18, !dbg !7164
  %200 = load i8 (%struct.ModifierData*)*, i8 (%struct.ModifierData*)** %dependsOnNormals, align 8, !dbg !7164
  %tobool266 = icmp ne i8 (%struct.ModifierData*)* %200, null, !dbg !7163
  br i1 %tobool266, label %land.lhs.true267, label %if.end280, !dbg !7165

land.lhs.true267:                                 ; preds = %land.lhs.true265
  %201 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti141, align 8, !dbg !7166
  %dependsOnNormals268 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %201, i32 0, i32 18, !dbg !7167
  %202 = load i8 (%struct.ModifierData*)*, i8 (%struct.ModifierData*)** %dependsOnNormals268, align 8, !dbg !7167
  %203 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7168
  %call269 = call zeroext i8 %202(%struct.ModifierData* %203), !dbg !7166
  %conv270 = zext i8 %call269 to i32, !dbg !7166
  %tobool271 = icmp ne i32 %conv270, 0, !dbg !7166
  br i1 %tobool271, label %if.then272, label %if.end280, !dbg !7169

if.then272:                                       ; preds = %land.lhs.true267
  %204 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7170
  %tobool273 = icmp ne %struct.DerivedMesh* %204, null, !dbg !7170
  br i1 %tobool273, label %land.lhs.true274, label %if.end279, !dbg !7173

land.lhs.true274:                                 ; preds = %if.then272
  %205 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7174
  %type275 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %205, i32 0, i32 14, !dbg !7175
  %206 = load i32, i32* %type275, align 8, !dbg !7175
  %cmp276 = icmp eq i32 %206, 0, !dbg !7176
  br i1 %cmp276, label %if.then278, label %if.end279, !dbg !7177

if.then278:                                       ; preds = %land.lhs.true274
  %207 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7178
  %208 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !7180
  call void @CDDM_apply_vert_coords(%struct.DerivedMesh* %207, [3 x float]* %208), !dbg !7181
  br label %if.end279, !dbg !7182

if.end279:                                        ; preds = %if.then278, %land.lhs.true274, %if.then272
  br label %if.end280, !dbg !7183

if.end280:                                        ; preds = %if.end279, %land.lhs.true267, %land.lhs.true265, %if.end262
  %209 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7184
  %210 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7185
  %211 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7186
  %212 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !7187
  %213 = load i32, i32* %numVerts, align 4, !dbg !7188
  %214 = load i32, i32* %deform_app_flags, align 4, !dbg !7189
  call void @modwrap_deformVerts(%struct.ModifierData* %209, %struct.Object* %210, %struct.DerivedMesh* %211, [3 x float]* %212, i32 %213, i32 %214), !dbg !7190
  br label %if.end424, !dbg !7191

if.else281:                                       ; preds = %if.end247
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %ndm, metadata !7192, metadata !DIExpression()), !dbg !7194
  %215 = load %struct.CDMaskLink*, %struct.CDMaskLink** %curr, align 8, !dbg !7195
  %next282 = getelementptr inbounds %struct.CDMaskLink, %struct.CDMaskLink* %215, i32 0, i32 0, !dbg !7197
  %216 = load %struct.CDMaskLink*, %struct.CDMaskLink** %next282, align 8, !dbg !7197
  %tobool283 = icmp ne %struct.CDMaskLink* %216, null, !dbg !7195
  br i1 %tobool283, label %if.then284, label %if.else287, !dbg !7198

if.then284:                                       ; preds = %if.else281
  %217 = load %struct.CDMaskLink*, %struct.CDMaskLink** %curr, align 8, !dbg !7199
  %next285 = getelementptr inbounds %struct.CDMaskLink, %struct.CDMaskLink* %217, i32 0, i32 0, !dbg !7200
  %218 = load %struct.CDMaskLink*, %struct.CDMaskLink** %next285, align 8, !dbg !7200
  %mask286 = getelementptr inbounds %struct.CDMaskLink, %struct.CDMaskLink* %218, i32 0, i32 1, !dbg !7201
  %219 = load i64, i64* %mask286, align 8, !dbg !7201
  store i64 %219, i64* %nextmask, align 8, !dbg !7202
  br label %if.end288, !dbg !7203

if.else287:                                       ; preds = %if.else281
  %220 = load i64, i64* %dataMask.addr, align 8, !dbg !7204
  store i64 %220, i64* %nextmask, align 8, !dbg !7205
  br label %if.end288

if.end288:                                        ; preds = %if.else287, %if.then284
  %221 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7206
  %tobool289 = icmp ne %struct.DerivedMesh* %221, null, !dbg !7206
  br i1 %tobool289, label %if.then290, label %if.else296, !dbg !7208

if.then290:                                       ; preds = %if.end288
  %222 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !7209
  %tobool291 = icmp ne [3 x float]* %222, null, !dbg !7209
  br i1 %tobool291, label %if.then292, label %if.end295, !dbg !7212

if.then292:                                       ; preds = %if.then290
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %tdm, metadata !7213, metadata !DIExpression()), !dbg !7215
  %223 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7216
  %call293 = call %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh* %223), !dbg !7217
  store %struct.DerivedMesh* %call293, %struct.DerivedMesh** %tdm, align 8, !dbg !7215
  %224 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7218
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %224, i32 0, i32 95, !dbg !7219
  %release294 = bitcast {}** %release to void (%struct.DerivedMesh*)**, !dbg !7219
  %225 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release294, align 8, !dbg !7219
  %226 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7220
  call void %225(%struct.DerivedMesh* %226), !dbg !7218
  %227 = load %struct.DerivedMesh*, %struct.DerivedMesh** %tdm, align 8, !dbg !7221
  store %struct.DerivedMesh* %227, %struct.DerivedMesh** %dm, align 8, !dbg !7222
  %228 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7223
  %229 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !7224
  call void @CDDM_apply_vert_coords(%struct.DerivedMesh* %228, [3 x float]* %229), !dbg !7225
  br label %if.end295, !dbg !7226

if.end295:                                        ; preds = %if.then292, %if.then290
  br label %if.end316, !dbg !7227

if.else296:                                       ; preds = %if.end288
  %230 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7228
  %call297 = call %struct.DerivedMesh* @CDDM_from_mesh(%struct.Mesh* %230), !dbg !7230
  store %struct.DerivedMesh* %call297, %struct.DerivedMesh** %dm, align 8, !dbg !7231
  %231 = load i32, i32* %build_shapekey_layers.addr, align 4, !dbg !7232
  %tobool298 = icmp ne i32 %231, 0, !dbg !7232
  br i1 %tobool298, label %if.then299, label %if.end300, !dbg !7234

if.then299:                                       ; preds = %if.else296
  %232 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7235
  %233 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7236
  %234 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7237
  call void @add_shapekey_layers(%struct.DerivedMesh* %232, %struct.Mesh* %233, %struct.Object* %234), !dbg !7238
  br label %if.end300, !dbg !7238

if.end300:                                        ; preds = %if.then299, %if.else296
  %235 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !7239
  %tobool301 = icmp ne [3 x float]* %235, null, !dbg !7239
  br i1 %tobool301, label %if.then302, label %if.end303, !dbg !7241

if.then302:                                       ; preds = %if.end300
  %236 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7242
  %237 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !7244
  call void @CDDM_apply_vert_coords(%struct.DerivedMesh* %236, [3 x float]* %237), !dbg !7245
  br label %if.end303, !dbg !7246

if.end303:                                        ; preds = %if.then302, %if.end300
  %238 = load i8, i8* %do_init_wmcol, align 1, !dbg !7247
  %tobool304 = icmp ne i8 %238, 0, !dbg !7247
  br i1 %tobool304, label %if.then305, label %if.end306, !dbg !7249

if.then305:                                       ; preds = %if.end303
  %239 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7250
  %240 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7251
  %241 = load i32, i32* %draw_flag, align 4, !dbg !7252
  call void @DM_update_weight_mcol(%struct.Object* %239, %struct.DerivedMesh* %240, i32 %241, float* null, i32 0, i32* null), !dbg !7253
  br label %if.end306, !dbg !7253

if.end306:                                        ; preds = %if.then305, %if.end303
  %242 = load i32, i32* %needMapping.addr, align 4, !dbg !7254
  %tobool307 = icmp ne i32 %242, 0, !dbg !7254
  br i1 %tobool307, label %if.then311, label %lor.lhs.false308, !dbg !7256

lor.lhs.false308:                                 ; preds = %if.end306
  %243 = load i64, i64* %nextmask, align 8, !dbg !7257
  %and309 = and i64 %243, 128, !dbg !7258
  %tobool310 = icmp ne i64 %and309, 0, !dbg !7258
  br i1 %tobool310, label %if.then311, label %if.end315, !dbg !7259

if.then311:                                       ; preds = %lor.lhs.false308, %if.end306
  %244 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7260
  call void @DM_add_vert_layer(%struct.DerivedMesh* %244, i32 7, i32 1, i8* null), !dbg !7262
  %245 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7263
  call void @DM_add_edge_layer(%struct.DerivedMesh* %245, i32 7, i32 1, i8* null), !dbg !7264
  %246 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7265
  call void @DM_add_poly_layer(%struct.DerivedMesh* %246, i32 7, i32 1, i8* null), !dbg !7266
  %247 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7267
  %call312 = call i8* @DM_get_vert_data_layer(%struct.DerivedMesh* %247, i32 7), !dbg !7270
  %248 = bitcast i8* %call312 to i32*, !dbg !7270
  %249 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7271
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %249, i32 0, i32 5, !dbg !7272
  %250 = load i32, i32* %numVertData, align 8, !dbg !7272
  call void @range_vn_i(i32* %248, i32 %250, i32 0), !dbg !7273
  %251 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7274
  %call313 = call i8* @DM_get_edge_data_layer(%struct.DerivedMesh* %251, i32 7), !dbg !7276
  %252 = bitcast i8* %call313 to i32*, !dbg !7276
  %253 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7277
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %253, i32 0, i32 6, !dbg !7278
  %254 = load i32, i32* %numEdgeData, align 4, !dbg !7278
  call void @range_vn_i(i32* %252, i32 %254, i32 0), !dbg !7279
  %255 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7280
  %call314 = call i8* @DM_get_poly_data_layer(%struct.DerivedMesh* %255, i32 7), !dbg !7282
  %256 = bitcast i8* %call314 to i32*, !dbg !7282
  %257 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7283
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %257, i32 0, i32 9, !dbg !7284
  %258 = load i32, i32* %numPolyData, align 8, !dbg !7284
  call void @range_vn_i(i32* %256, i32 %258, i32 0), !dbg !7285
  br label %if.end315, !dbg !7286

if.end315:                                        ; preds = %if.then311, %lor.lhs.false308
  br label %if.end316

if.end316:                                        ; preds = %if.end315, %if.end295
  %259 = load %struct.CDMaskLink*, %struct.CDMaskLink** %curr, align 8, !dbg !7287
  %mask317 = getelementptr inbounds %struct.CDMaskLink, %struct.CDMaskLink* %259, i32 0, i32 1, !dbg !7288
  %260 = load i64, i64* %mask317, align 8, !dbg !7288
  store i64 %260, i64* %mask, align 8, !dbg !7289
  %261 = load i64, i64* %append_mask, align 8, !dbg !7290
  %262 = load i64, i64* %mask, align 8, !dbg !7291
  %or318 = or i64 %262, %261, !dbg !7291
  store i64 %or318, i64* %mask, align 8, !dbg !7291
  %263 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7292
  %264 = load i64, i64* %mask, align 8, !dbg !7293
  %265 = load i32, i32* %needMapping.addr, align 4, !dbg !7294
  %tobool319 = icmp ne i32 %265, 0, !dbg !7294
  %266 = zext i1 %tobool319 to i64, !dbg !7294
  %cond320 = select i1 %tobool319, i32 128, i32 0, !dbg !7294
  %conv321 = sext i32 %cond320 to i64, !dbg !7295
  %or322 = or i64 %264, %conv321, !dbg !7296
  call void @DM_set_only_copy(%struct.DerivedMesh* %263, i64 %or322), !dbg !7297
  %267 = load i64, i64* %mask, align 8, !dbg !7298
  %and323 = and i64 %267, 8388608, !dbg !7300
  %tobool324 = icmp ne i64 %and323, 0, !dbg !7300
  br i1 %tobool324, label %if.then325, label %if.end326, !dbg !7301

if.then325:                                       ; preds = %if.end316
  %268 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7302
  %269 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7303
  %270 = load %struct.DerivedMesh*, %struct.DerivedMesh** %clothorcodm, align 8, !dbg !7304
  call void @add_orco_dm(%struct.Object* %268, %struct.BMEditMesh* null, %struct.DerivedMesh* %269, %struct.DerivedMesh* %270, i32 23), !dbg !7305
  br label %if.end326, !dbg !7305

if.end326:                                        ; preds = %if.then325, %if.end316
  %271 = load %struct.CDMaskLink*, %struct.CDMaskLink** %curr, align 8, !dbg !7306
  %mask327 = getelementptr inbounds %struct.CDMaskLink, %struct.CDMaskLink* %271, i32 0, i32 1, !dbg !7308
  %272 = load i64, i64* %mask327, align 8, !dbg !7308
  %and328 = and i64 %272, 2147483648, !dbg !7309
  %tobool329 = icmp ne i64 %and328, 0, !dbg !7309
  br i1 %tobool329, label %if.then330, label %if.end335, !dbg !7310

if.then330:                                       ; preds = %if.end326
  %273 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7311
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %273, i32 0, i32 3, !dbg !7314
  %call331 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %loopData, i32 31), !dbg !7315
  %tobool332 = icmp ne i8 %call331, 0, !dbg !7315
  br i1 %tobool332, label %if.end334, label %if.then333, !dbg !7316

if.then333:                                       ; preds = %if.then330
  %274 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7317
  call void @DM_add_loop_layer(%struct.DerivedMesh* %274, i32 31, i32 1, i8* null), !dbg !7319
  %275 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7320
  call void @DM_init_origspace(%struct.DerivedMesh* %275), !dbg !7321
  br label %if.end334, !dbg !7322

if.end334:                                        ; preds = %if.then333, %if.then330
  br label %if.end335, !dbg !7323

if.end335:                                        ; preds = %if.end334, %if.end326
  %276 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7324
  %277 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7325
  %278 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7326
  %279 = load i32, i32* %app_flags, align 4, !dbg !7327
  %call336 = call %struct.DerivedMesh* @modwrap_applyModifier(%struct.ModifierData* %276, %struct.Object* %277, %struct.DerivedMesh* %278, i32 %279), !dbg !7328
  store %struct.DerivedMesh* %call336, %struct.DerivedMesh** %ndm, align 8, !dbg !7329
  %280 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !7330
  %tobool337 = icmp ne %struct.DerivedMesh* %280, null, !dbg !7330
  br i1 %tobool337, label %if.then338, label %if.end354, !dbg !7332

if.then338:                                       ; preds = %if.end335
  %281 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7333
  %tobool339 = icmp ne %struct.DerivedMesh* %281, null, !dbg !7333
  br i1 %tobool339, label %land.lhs.true340, label %if.end346, !dbg !7336

land.lhs.true340:                                 ; preds = %if.then338
  %282 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7337
  %283 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !7338
  %cmp341 = icmp ne %struct.DerivedMesh* %282, %283, !dbg !7339
  br i1 %cmp341, label %if.then343, label %if.end346, !dbg !7340

if.then343:                                       ; preds = %land.lhs.true340
  %284 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7341
  %release344 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %284, i32 0, i32 95, !dbg !7342
  %release345 = bitcast {}** %release344 to void (%struct.DerivedMesh*)**, !dbg !7342
  %285 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release345, align 8, !dbg !7342
  %286 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7343
  call void %285(%struct.DerivedMesh* %286), !dbg !7341
  br label %if.end346, !dbg !7341

if.end346:                                        ; preds = %if.then343, %land.lhs.true340, %if.then338
  %287 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !7344
  store %struct.DerivedMesh* %287, %struct.DerivedMesh** %dm, align 8, !dbg !7345
  %288 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !7346
  %tobool347 = icmp ne [3 x float]* %288, null, !dbg !7346
  br i1 %tobool347, label %if.then348, label %if.end353, !dbg !7348

if.then348:                                       ; preds = %if.end346
  %289 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !7349
  %290 = load [3 x float]*, [3 x float]** %inputVertexCos.addr, align 8, !dbg !7352
  %cmp349 = icmp ne [3 x float]* %289, %290, !dbg !7353
  br i1 %cmp349, label %if.then351, label %if.end352, !dbg !7354

if.then351:                                       ; preds = %if.then348
  %291 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7355
  %292 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !7356
  %293 = bitcast [3 x float]* %292 to i8*, !dbg !7356
  call void %291(i8* %293), !dbg !7355
  br label %if.end352, !dbg !7355

if.end352:                                        ; preds = %if.then351, %if.then348
  store [3 x float]* null, [3 x float]** %deformedVerts, align 8, !dbg !7357
  br label %if.end353, !dbg !7358

if.end353:                                        ; preds = %if.end352, %if.end346
  br label %if.end354, !dbg !7359

if.end354:                                        ; preds = %if.end353, %if.end335
  %294 = load i64, i64* %nextmask, align 8, !dbg !7360
  %and355 = and i64 %294, 16384, !dbg !7362
  %tobool356 = icmp ne i64 %and355, 0, !dbg !7362
  br i1 %tobool356, label %if.then357, label %if.end384, !dbg !7363

if.then357:                                       ; preds = %if.end354
  %295 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !7364
  %tobool358 = icmp ne %struct.DerivedMesh* %295, null, !dbg !7364
  br i1 %tobool358, label %if.end361, label %if.then359, !dbg !7367

if.then359:                                       ; preds = %if.then357
  %296 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7368
  %297 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7369
  %call360 = call %struct.DerivedMesh* @create_orco_dm(%struct.Object* %296, %struct.Mesh* %297, %struct.BMEditMesh* null, i32 14), !dbg !7370
  store %struct.DerivedMesh* %call360, %struct.DerivedMesh** %orcodm, align 8, !dbg !7371
  br label %if.end361, !dbg !7372

if.end361:                                        ; preds = %if.then359, %if.then357
  %298 = load i64, i64* %nextmask, align 8, !dbg !7373
  %and362 = and i64 %298, -16385, !dbg !7373
  store i64 %and362, i64* %nextmask, align 8, !dbg !7373
  %299 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !7374
  %300 = load i64, i64* %nextmask, align 8, !dbg !7375
  %or363 = or i64 %300, 128, !dbg !7376
  %301 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti141, align 8, !dbg !7377
  %requiredDataMask364 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %301, i32 0, i32 13, !dbg !7378
  %302 = load i64 (%struct.Object*, %struct.ModifierData*)*, i64 (%struct.Object*, %struct.ModifierData*)** %requiredDataMask364, align 8, !dbg !7378
  %tobool365 = icmp ne i64 (%struct.Object*, %struct.ModifierData*)* %302, null, !dbg !7377
  br i1 %tobool365, label %cond.true, label %cond.false, !dbg !7377

cond.true:                                        ; preds = %if.end361
  %303 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti141, align 8, !dbg !7379
  %requiredDataMask366 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %303, i32 0, i32 13, !dbg !7380
  %304 = load i64 (%struct.Object*, %struct.ModifierData*)*, i64 (%struct.Object*, %struct.ModifierData*)** %requiredDataMask366, align 8, !dbg !7380
  %305 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7381
  %306 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7382
  %call367 = call i64 %304(%struct.Object* %305, %struct.ModifierData* %306), !dbg !7379
  br label %cond.end, !dbg !7377

cond.false:                                       ; preds = %if.end361
  br label %cond.end, !dbg !7377

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond368 = phi i64 [ %call367, %cond.true ], [ 0, %cond.false ], !dbg !7377
  %or369 = or i64 %or363, %cond368, !dbg !7383
  call void @DM_set_only_copy(%struct.DerivedMesh* %299, i64 %or369), !dbg !7384
  %307 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7385
  %308 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7386
  %309 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !7387
  %310 = load i32, i32* %app_flags, align 4, !dbg !7388
  %and370 = and i32 %310, -3, !dbg !7389
  %or371 = or i32 %and370, 4, !dbg !7390
  %call372 = call %struct.DerivedMesh* @modwrap_applyModifier(%struct.ModifierData* %307, %struct.Object* %308, %struct.DerivedMesh* %309, i32 %or371), !dbg !7391
  store %struct.DerivedMesh* %call372, %struct.DerivedMesh** %ndm, align 8, !dbg !7392
  %311 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !7393
  %tobool373 = icmp ne %struct.DerivedMesh* %311, null, !dbg !7393
  br i1 %tobool373, label %if.then374, label %if.end383, !dbg !7395

if.then374:                                       ; preds = %cond.end
  %312 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !7396
  %tobool375 = icmp ne %struct.DerivedMesh* %312, null, !dbg !7396
  br i1 %tobool375, label %land.lhs.true376, label %if.end382, !dbg !7399

land.lhs.true376:                                 ; preds = %if.then374
  %313 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !7400
  %314 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !7401
  %cmp377 = icmp ne %struct.DerivedMesh* %313, %314, !dbg !7402
  br i1 %cmp377, label %if.then379, label %if.end382, !dbg !7403

if.then379:                                       ; preds = %land.lhs.true376
  %315 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !7404
  %release380 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %315, i32 0, i32 95, !dbg !7405
  %release381 = bitcast {}** %release380 to void (%struct.DerivedMesh*)**, !dbg !7405
  %316 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release381, align 8, !dbg !7405
  %317 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !7406
  call void %316(%struct.DerivedMesh* %317), !dbg !7404
  br label %if.end382, !dbg !7404

if.end382:                                        ; preds = %if.then379, %land.lhs.true376, %if.then374
  %318 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !7407
  store %struct.DerivedMesh* %318, %struct.DerivedMesh** %orcodm, align 8, !dbg !7408
  br label %if.end383, !dbg !7409

if.end383:                                        ; preds = %if.end382, %cond.end
  br label %if.end384, !dbg !7410

if.end384:                                        ; preds = %if.end383, %if.end354
  %319 = load i64, i64* %nextmask, align 8, !dbg !7411
  %and385 = and i64 %319, 8388608, !dbg !7413
  %tobool386 = icmp ne i64 %and385, 0, !dbg !7413
  br i1 %tobool386, label %if.then387, label %if.end408, !dbg !7414

if.then387:                                       ; preds = %if.end384
  %320 = load %struct.DerivedMesh*, %struct.DerivedMesh** %clothorcodm, align 8, !dbg !7415
  %tobool388 = icmp ne %struct.DerivedMesh* %320, null, !dbg !7415
  br i1 %tobool388, label %if.end391, label %if.then389, !dbg !7418

if.then389:                                       ; preds = %if.then387
  %321 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7419
  %322 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7420
  %call390 = call %struct.DerivedMesh* @create_orco_dm(%struct.Object* %321, %struct.Mesh* %322, %struct.BMEditMesh* null, i32 23), !dbg !7421
  store %struct.DerivedMesh* %call390, %struct.DerivedMesh** %clothorcodm, align 8, !dbg !7422
  br label %if.end391, !dbg !7423

if.end391:                                        ; preds = %if.then389, %if.then387
  %323 = load i64, i64* %nextmask, align 8, !dbg !7424
  %and392 = and i64 %323, -8388609, !dbg !7424
  store i64 %and392, i64* %nextmask, align 8, !dbg !7424
  %324 = load %struct.DerivedMesh*, %struct.DerivedMesh** %clothorcodm, align 8, !dbg !7425
  %325 = load i64, i64* %nextmask, align 8, !dbg !7426
  %or393 = or i64 %325, 128, !dbg !7427
  call void @DM_set_only_copy(%struct.DerivedMesh* %324, i64 %or393), !dbg !7428
  %326 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7429
  %327 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7430
  %328 = load %struct.DerivedMesh*, %struct.DerivedMesh** %clothorcodm, align 8, !dbg !7431
  %329 = load i32, i32* %app_flags, align 4, !dbg !7432
  %and394 = and i32 %329, -3, !dbg !7433
  %or395 = or i32 %and394, 4, !dbg !7434
  %call396 = call %struct.DerivedMesh* @modwrap_applyModifier(%struct.ModifierData* %326, %struct.Object* %327, %struct.DerivedMesh* %328, i32 %or395), !dbg !7435
  store %struct.DerivedMesh* %call396, %struct.DerivedMesh** %ndm, align 8, !dbg !7436
  %330 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !7437
  %tobool397 = icmp ne %struct.DerivedMesh* %330, null, !dbg !7437
  br i1 %tobool397, label %if.then398, label %if.end407, !dbg !7439

if.then398:                                       ; preds = %if.end391
  %331 = load %struct.DerivedMesh*, %struct.DerivedMesh** %clothorcodm, align 8, !dbg !7440
  %tobool399 = icmp ne %struct.DerivedMesh* %331, null, !dbg !7440
  br i1 %tobool399, label %land.lhs.true400, label %if.end406, !dbg !7443

land.lhs.true400:                                 ; preds = %if.then398
  %332 = load %struct.DerivedMesh*, %struct.DerivedMesh** %clothorcodm, align 8, !dbg !7444
  %333 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !7445
  %cmp401 = icmp ne %struct.DerivedMesh* %332, %333, !dbg !7446
  br i1 %cmp401, label %if.then403, label %if.end406, !dbg !7447

if.then403:                                       ; preds = %land.lhs.true400
  %334 = load %struct.DerivedMesh*, %struct.DerivedMesh** %clothorcodm, align 8, !dbg !7448
  %release404 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %334, i32 0, i32 95, !dbg !7449
  %release405 = bitcast {}** %release404 to void (%struct.DerivedMesh*)**, !dbg !7449
  %335 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release405, align 8, !dbg !7449
  %336 = load %struct.DerivedMesh*, %struct.DerivedMesh** %clothorcodm, align 8, !dbg !7450
  call void %335(%struct.DerivedMesh* %336), !dbg !7448
  br label %if.end406, !dbg !7448

if.end406:                                        ; preds = %if.then403, %land.lhs.true400, %if.then398
  %337 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !7451
  store %struct.DerivedMesh* %337, %struct.DerivedMesh** %clothorcodm, align 8, !dbg !7452
  br label %if.end407, !dbg !7453

if.end407:                                        ; preds = %if.end406, %if.end391
  br label %if.end408, !dbg !7454

if.end408:                                        ; preds = %if.end407, %if.end384
  %338 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7455
  %type409 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %338, i32 0, i32 2, !dbg !7457
  %339 = load i32, i32* %type409, align 8, !dbg !7457
  %cmp410 = icmp eq i32 %339, 40, !dbg !7458
  br i1 %cmp410, label %if.then412, label %if.else414, !dbg !7459

if.then412:                                       ; preds = %if.end408
  %340 = load i64, i64* %append_mask, align 8, !dbg !7460
  %or413 = or i64 %340, 4294967296, !dbg !7460
  store i64 %or413, i64* %append_mask, align 8, !dbg !7460
  br label %if.end423, !dbg !7461

if.else414:                                       ; preds = %if.end408
  %341 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7462
  %342 = load %struct.ModifierData*, %struct.ModifierData** %previewmd, align 8, !dbg !7464
  %cmp415 = icmp eq %struct.ModifierData* %341, %342, !dbg !7465
  br i1 %cmp415, label %land.lhs.true417, label %if.end422, !dbg !7466

land.lhs.true417:                                 ; preds = %if.else414
  %343 = load i8, i8* %do_mod_wmcol, align 1, !dbg !7467
  %conv418 = zext i8 %343 to i32, !dbg !7468
  %tobool419 = icmp ne i32 %conv418, 0, !dbg !7468
  br i1 %tobool419, label %if.then420, label %if.end422, !dbg !7469

if.then420:                                       ; preds = %land.lhs.true417
  %344 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7470
  %345 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7472
  %346 = load i32, i32* %draw_flag, align 4, !dbg !7473
  call void @DM_update_weight_mcol(%struct.Object* %344, %struct.DerivedMesh* %345, i32 %346, float* null, i32 0, i32* null), !dbg !7474
  %347 = load i64, i64* %append_mask, align 8, !dbg !7475
  %or421 = or i64 %347, 4294967296, !dbg !7475
  store i64 %or421, i64* %append_mask, align 8, !dbg !7475
  br label %if.end422, !dbg !7476

if.end422:                                        ; preds = %if.then420, %land.lhs.true417, %if.else414
  br label %if.end423

if.end423:                                        ; preds = %if.end422, %if.then412
  br label %if.end424

if.end424:                                        ; preds = %if.end423, %if.end280
  %348 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti141, align 8, !dbg !7477
  %type425 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %348, i32 0, i32 3, !dbg !7478
  %349 = load i32, i32* %type425, align 4, !dbg !7478
  %cmp426 = icmp eq i32 %349, 1, !dbg !7479
  %conv427 = zext i1 %cmp426 to i32, !dbg !7479
  %conv428 = trunc i32 %conv427 to i8, !dbg !7480
  store i8 %conv428, i8* %isPrevDeform, align 1, !dbg !7481
  %350 = load i32, i32* %index.addr, align 4, !dbg !7482
  %cmp429 = icmp sge i32 %350, 0, !dbg !7484
  br i1 %cmp429, label %land.lhs.true431, label %if.end437, !dbg !7485

land.lhs.true431:                                 ; preds = %if.end424
  %351 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7486
  %modifiers432 = getelementptr inbounds %struct.Object, %struct.Object* %351, i32 0, i32 26, !dbg !7487
  %352 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7488
  %353 = bitcast %struct.ModifierData* %352 to i8*, !dbg !7488
  %call433 = call i32 @BLI_findindex(%struct.ListBase* %modifiers432, i8* %353), !dbg !7489
  %354 = load i32, i32* %index.addr, align 4, !dbg !7490
  %cmp434 = icmp sge i32 %call433, %354, !dbg !7491
  br i1 %cmp434, label %if.then436, label %if.end437, !dbg !7492

if.then436:                                       ; preds = %land.lhs.true431
  br label %for.end449, !dbg !7493

if.end437:                                        ; preds = %land.lhs.true431, %if.end424
  %355 = load i8, i8* %sculpt_mode, align 1, !dbg !7494
  %conv438 = zext i8 %355 to i32, !dbg !7494
  %tobool439 = icmp ne i32 %conv438, 0, !dbg !7494
  br i1 %tobool439, label %land.lhs.true440, label %if.end445, !dbg !7496

land.lhs.true440:                                 ; preds = %if.end437
  %356 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7497
  %type441 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %356, i32 0, i32 2, !dbg !7498
  %357 = load i32, i32* %type441, align 8, !dbg !7498
  %cmp442 = icmp eq i32 %357, 29, !dbg !7499
  br i1 %cmp442, label %if.then444, label %if.end445, !dbg !7500

if.then444:                                       ; preds = %land.lhs.true440
  store i8 1, i8* %multires_applied, align 1, !dbg !7501
  br label %if.end445, !dbg !7503

if.end445:                                        ; preds = %if.then444, %land.lhs.true440, %if.end437
  br label %for.inc446, !dbg !7504

for.inc446:                                       ; preds = %if.end445, %if.then234, %if.then222, %if.end214, %if.then183, %if.then160, %if.then154, %if.then147
  %358 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7505
  %next447 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %358, i32 0, i32 0, !dbg !7506
  %359 = load %struct.ModifierData*, %struct.ModifierData** %next447, align 8, !dbg !7506
  store %struct.ModifierData* %359, %struct.ModifierData** %md, align 8, !dbg !7507
  %360 = load %struct.CDMaskLink*, %struct.CDMaskLink** %curr, align 8, !dbg !7508
  %next448 = getelementptr inbounds %struct.CDMaskLink, %struct.CDMaskLink* %360, i32 0, i32 0, !dbg !7509
  %361 = load %struct.CDMaskLink*, %struct.CDMaskLink** %next448, align 8, !dbg !7509
  store %struct.CDMaskLink* %361, %struct.CDMaskLink** %curr, align 8, !dbg !7510
  br label %for.cond138, !dbg !7511, !llvm.loop !7512

for.end449:                                       ; preds = %if.then436, %for.cond138
  %362 = load %struct.ModifierData*, %struct.ModifierData** %firstmd, align 8, !dbg !7514
  store %struct.ModifierData* %362, %struct.ModifierData** %md, align 8, !dbg !7516
  br label %for.cond450, !dbg !7517

for.cond450:                                      ; preds = %for.inc453, %for.end449
  %363 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7518
  %tobool451 = icmp ne %struct.ModifierData* %363, null, !dbg !7520
  br i1 %tobool451, label %for.body452, label %for.end455, !dbg !7520

for.body452:                                      ; preds = %for.cond450
  %364 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7521
  call void @modifier_freeTemporaryData(%struct.ModifierData* %364), !dbg !7522
  br label %for.inc453, !dbg !7522

for.inc453:                                       ; preds = %for.body452
  %365 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7523
  %next454 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %365, i32 0, i32 0, !dbg !7524
  %366 = load %struct.ModifierData*, %struct.ModifierData** %next454, align 8, !dbg !7524
  store %struct.ModifierData* %366, %struct.ModifierData** %md, align 8, !dbg !7525
  br label %for.cond450, !dbg !7526, !llvm.loop !7527

for.end455:                                       ; preds = %for.cond450
  %367 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7529
  %tobool456 = icmp ne %struct.DerivedMesh* %367, null, !dbg !7529
  br i1 %tobool456, label %land.lhs.true457, label %if.else463, !dbg !7531

land.lhs.true457:                                 ; preds = %for.end455
  %368 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !7532
  %tobool458 = icmp ne [3 x float]* %368, null, !dbg !7532
  br i1 %tobool458, label %if.then459, label %if.else463, !dbg !7533

if.then459:                                       ; preds = %land.lhs.true457
  %369 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7534
  %call460 = call %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh* %369), !dbg !7536
  store %struct.DerivedMesh* %call460, %struct.DerivedMesh** %finaldm, align 8, !dbg !7537
  %370 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7538
  %release461 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %370, i32 0, i32 95, !dbg !7539
  %release462 = bitcast {}** %release461 to void (%struct.DerivedMesh*)**, !dbg !7539
  %371 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release462, align 8, !dbg !7539
  %372 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7540
  call void %371(%struct.DerivedMesh* %372), !dbg !7538
  %373 = load %struct.DerivedMesh*, %struct.DerivedMesh** %finaldm, align 8, !dbg !7541
  %374 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !7542
  call void @CDDM_apply_vert_coords(%struct.DerivedMesh* %373, [3 x float]* %374), !dbg !7543
  br label %if.end478, !dbg !7544

if.else463:                                       ; preds = %land.lhs.true457, %for.end455
  %375 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7545
  %tobool464 = icmp ne %struct.DerivedMesh* %375, null, !dbg !7545
  br i1 %tobool464, label %if.then465, label %if.else466, !dbg !7547

if.then465:                                       ; preds = %if.else463
  %376 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7548
  store %struct.DerivedMesh* %376, %struct.DerivedMesh** %finaldm, align 8, !dbg !7550
  br label %if.end477, !dbg !7551

if.else466:                                       ; preds = %if.else463
  %377 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7552
  %call467 = call %struct.DerivedMesh* @CDDM_from_mesh(%struct.Mesh* %377), !dbg !7554
  store %struct.DerivedMesh* %call467, %struct.DerivedMesh** %finaldm, align 8, !dbg !7555
  %378 = load i32, i32* %build_shapekey_layers.addr, align 4, !dbg !7556
  %tobool468 = icmp ne i32 %378, 0, !dbg !7556
  br i1 %tobool468, label %if.then469, label %if.end470, !dbg !7558

if.then469:                                       ; preds = %if.else466
  %379 = load %struct.DerivedMesh*, %struct.DerivedMesh** %finaldm, align 8, !dbg !7559
  %380 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7561
  %381 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7562
  call void @add_shapekey_layers(%struct.DerivedMesh* %379, %struct.Mesh* %380, %struct.Object* %381), !dbg !7563
  br label %if.end470, !dbg !7564

if.end470:                                        ; preds = %if.then469, %if.else466
  %382 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !7565
  %tobool471 = icmp ne [3 x float]* %382, null, !dbg !7565
  br i1 %tobool471, label %if.then472, label %if.end473, !dbg !7567

if.then472:                                       ; preds = %if.end470
  %383 = load %struct.DerivedMesh*, %struct.DerivedMesh** %finaldm, align 8, !dbg !7568
  %384 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !7570
  call void @CDDM_apply_vert_coords(%struct.DerivedMesh* %383, [3 x float]* %384), !dbg !7571
  br label %if.end473, !dbg !7572

if.end473:                                        ; preds = %if.then472, %if.end470
  %385 = load i8, i8* %do_init_wmcol, align 1, !dbg !7573
  %tobool474 = icmp ne i8 %385, 0, !dbg !7573
  br i1 %tobool474, label %if.then475, label %if.end476, !dbg !7575

if.then475:                                       ; preds = %if.end473
  %386 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7576
  %387 = load %struct.DerivedMesh*, %struct.DerivedMesh** %finaldm, align 8, !dbg !7577
  %388 = load i32, i32* %draw_flag, align 4, !dbg !7578
  call void @DM_update_weight_mcol(%struct.Object* %386, %struct.DerivedMesh* %387, i32 %388, float* null, i32 0, i32* null), !dbg !7579
  br label %if.end476, !dbg !7579

if.end476:                                        ; preds = %if.then475, %if.end473
  br label %if.end477

if.end477:                                        ; preds = %if.end476, %if.then465
  br label %if.end478

if.end478:                                        ; preds = %if.end477, %if.then459
  %389 = load i64, i64* %dataMask.addr, align 8, !dbg !7580
  %and479 = and i64 %389, 16384, !dbg !7582
  %tobool480 = icmp ne i64 %and479, 0, !dbg !7582
  br i1 %tobool480, label %if.then481, label %if.end487, !dbg !7583

if.then481:                                       ; preds = %if.end478
  %390 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7584
  %391 = load %struct.DerivedMesh*, %struct.DerivedMesh** %finaldm, align 8, !dbg !7586
  %392 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !7587
  call void @add_orco_dm(%struct.Object* %390, %struct.BMEditMesh* null, %struct.DerivedMesh* %391, %struct.DerivedMesh* %392, i32 14), !dbg !7588
  %393 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %deform_r.addr, align 8, !dbg !7589
  %tobool482 = icmp ne %struct.DerivedMesh** %393, null, !dbg !7589
  br i1 %tobool482, label %land.lhs.true483, label %if.end486, !dbg !7591

land.lhs.true483:                                 ; preds = %if.then481
  %394 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %deform_r.addr, align 8, !dbg !7592
  %395 = load %struct.DerivedMesh*, %struct.DerivedMesh** %394, align 8, !dbg !7593
  %tobool484 = icmp ne %struct.DerivedMesh* %395, null, !dbg !7593
  br i1 %tobool484, label %if.then485, label %if.end486, !dbg !7594

if.then485:                                       ; preds = %land.lhs.true483
  %396 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7595
  %397 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %deform_r.addr, align 8, !dbg !7596
  %398 = load %struct.DerivedMesh*, %struct.DerivedMesh** %397, align 8, !dbg !7597
  call void @add_orco_dm(%struct.Object* %396, %struct.BMEditMesh* null, %struct.DerivedMesh* %398, %struct.DerivedMesh* null, i32 14), !dbg !7598
  br label %if.end486, !dbg !7598

if.end486:                                        ; preds = %if.then485, %land.lhs.true483, %if.then481
  br label %if.end487, !dbg !7599

if.end487:                                        ; preds = %if.end486, %if.end478
  %399 = load i8, i8* %do_loop_normals, align 1, !dbg !7600
  %tobool488 = icmp ne i8 %399, 0, !dbg !7600
  br i1 %tobool488, label %if.then489, label %if.end490, !dbg !7602

if.then489:                                       ; preds = %if.end487
  %400 = load %struct.DerivedMesh*, %struct.DerivedMesh** %finaldm, align 8, !dbg !7603
  %401 = load float, float* %loop_normals_split_angle, align 4, !dbg !7605
  call void @DM_calc_loop_normals(%struct.DerivedMesh* %400, float %401), !dbg !7606
  br label %if.end490, !dbg !7607

if.end490:                                        ; preds = %if.then489, %if.end487
  %402 = load %struct.DerivedMesh*, %struct.DerivedMesh** %finaldm, align 8, !dbg !7608
  call void @DM_ensure_tessface(%struct.DerivedMesh* %402), !dbg !7610
  %403 = load i8, i8* %do_loop_normals, align 1, !dbg !7611
  %tobool491 = icmp ne i8 %403, 0, !dbg !7611
  br i1 %tobool491, label %if.end493, label %if.then492, !dbg !7613

if.then492:                                       ; preds = %if.end490
  %404 = load %struct.DerivedMesh*, %struct.DerivedMesh** %finaldm, align 8, !dbg !7614
  call void @dm_ensure_display_normals(%struct.DerivedMesh* %404), !dbg !7616
  br label %if.end493, !dbg !7617

if.end493:                                        ; preds = %if.then492, %if.end490
  %405 = load %struct.DerivedMesh*, %struct.DerivedMesh** %finaldm, align 8, !dbg !7618
  %406 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %final_r.addr, align 8, !dbg !7619
  store %struct.DerivedMesh* %405, %struct.DerivedMesh** %406, align 8, !dbg !7620
  %407 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !7621
  %tobool494 = icmp ne %struct.DerivedMesh* %407, null, !dbg !7621
  br i1 %tobool494, label %if.then495, label %if.end498, !dbg !7623

if.then495:                                       ; preds = %if.end493
  %408 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !7624
  %release496 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %408, i32 0, i32 95, !dbg !7625
  %release497 = bitcast {}** %release496 to void (%struct.DerivedMesh*)**, !dbg !7625
  %409 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release497, align 8, !dbg !7625
  %410 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !7626
  call void %409(%struct.DerivedMesh* %410), !dbg !7624
  br label %if.end498, !dbg !7624

if.end498:                                        ; preds = %if.then495, %if.end493
  %411 = load %struct.DerivedMesh*, %struct.DerivedMesh** %clothorcodm, align 8, !dbg !7627
  %tobool499 = icmp ne %struct.DerivedMesh* %411, null, !dbg !7627
  br i1 %tobool499, label %if.then500, label %if.end503, !dbg !7629

if.then500:                                       ; preds = %if.end498
  %412 = load %struct.DerivedMesh*, %struct.DerivedMesh** %clothorcodm, align 8, !dbg !7630
  %release501 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %412, i32 0, i32 95, !dbg !7631
  %release502 = bitcast {}** %release501 to void (%struct.DerivedMesh*)**, !dbg !7631
  %413 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release502, align 8, !dbg !7631
  %414 = load %struct.DerivedMesh*, %struct.DerivedMesh** %clothorcodm, align 8, !dbg !7632
  call void %413(%struct.DerivedMesh* %414), !dbg !7630
  br label %if.end503, !dbg !7630

if.end503:                                        ; preds = %if.then500, %if.end498
  %415 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !7633
  %tobool504 = icmp ne [3 x float]* %415, null, !dbg !7633
  br i1 %tobool504, label %land.lhs.true505, label %if.end509, !dbg !7635

land.lhs.true505:                                 ; preds = %if.end503
  %416 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !7636
  %417 = load [3 x float]*, [3 x float]** %inputVertexCos.addr, align 8, !dbg !7637
  %cmp506 = icmp ne [3 x float]* %416, %417, !dbg !7638
  br i1 %cmp506, label %if.then508, label %if.end509, !dbg !7639

if.then508:                                       ; preds = %land.lhs.true505
  %418 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7640
  %419 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !7641
  %420 = bitcast [3 x float]* %419 to i8*, !dbg !7641
  call void %418(i8* %420), !dbg !7640
  br label %if.end509, !dbg !7640

if.end509:                                        ; preds = %if.then508, %land.lhs.true505, %if.end503
  %421 = load %struct.CDMaskLink*, %struct.CDMaskLink** %datamasks, align 8, !dbg !7642
  %422 = bitcast %struct.CDMaskLink* %421 to %struct.LinkNode*, !dbg !7643
  call void @BLI_linklist_free(%struct.LinkNode* %422, void (i8*)* null), !dbg !7644
  ret void, !dbg !7645
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @mesh_create_derived_index_render(%struct.Scene* %scene, %struct.Object* %ob, i64 %dataMask, i32 %index) #0 !dbg !7646 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dataMask.addr = alloca i64, align 8
  %index.addr = alloca i32, align 4
  %final = alloca %struct.DerivedMesh*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7649, metadata !DIExpression()), !dbg !7650
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7651, metadata !DIExpression()), !dbg !7652
  store i64 %dataMask, i64* %dataMask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dataMask.addr, metadata !7653, metadata !DIExpression()), !dbg !7654
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7655, metadata !DIExpression()), !dbg !7656
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %final, metadata !7657, metadata !DIExpression()), !dbg !7658
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7659
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7660
  %2 = load i64, i64* %dataMask.addr, align 8, !dbg !7661
  %3 = load i32, i32* %index.addr, align 4, !dbg !7662
  call void @mesh_calc_modifiers(%struct.Scene* %0, %struct.Object* %1, [3 x float]* null, %struct.DerivedMesh** null, %struct.DerivedMesh** %final, i32 1, i32 1, i32 0, i64 %2, i32 %3, i32 0, i32 0), !dbg !7663
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %final, align 8, !dbg !7664
  ret %struct.DerivedMesh* %4, !dbg !7665
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @mesh_create_derived_view(%struct.Scene* %scene, %struct.Object* %ob, i64 %dataMask) #0 !dbg !7666 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dataMask.addr = alloca i64, align 8
  %final = alloca %struct.DerivedMesh*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7667, metadata !DIExpression()), !dbg !7668
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7669, metadata !DIExpression()), !dbg !7670
  store i64 %dataMask, i64* %dataMask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dataMask.addr, metadata !7671, metadata !DIExpression()), !dbg !7672
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %final, metadata !7673, metadata !DIExpression()), !dbg !7674
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7675
  %transflag = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 55, !dbg !7676
  %1 = load i16, i16* %transflag, align 8, !dbg !7677
  %conv = sext i16 %1 to i32, !dbg !7677
  %or = or i32 %conv, 16384, !dbg !7677
  %conv1 = trunc i32 %or to i16, !dbg !7677
  store i16 %conv1, i16* %transflag, align 8, !dbg !7677
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7678
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7679
  %4 = load i64, i64* %dataMask.addr, align 8, !dbg !7680
  call void @mesh_calc_modifiers(%struct.Scene* %2, %struct.Object* %3, [3 x float]* null, %struct.DerivedMesh** null, %struct.DerivedMesh** %final, i32 0, i32 1, i32 0, i64 %4, i32 -1, i32 0, i32 0), !dbg !7681
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7682
  %transflag2 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 55, !dbg !7683
  %6 = load i16, i16* %transflag2, align 8, !dbg !7684
  %conv3 = sext i16 %6 to i32, !dbg !7684
  %and = and i32 %conv3, -16385, !dbg !7684
  %conv4 = trunc i32 %and to i16, !dbg !7684
  store i16 %conv4, i16* %transflag2, align 8, !dbg !7684
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %final, align 8, !dbg !7685
  ret %struct.DerivedMesh* %7, !dbg !7686
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @mesh_create_derived_no_deform(%struct.Scene* %scene, %struct.Object* %ob, [3 x float]* %vertCos, i64 %dataMask) #0 !dbg !7687 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %vertCos.addr = alloca [3 x float]*, align 8
  %dataMask.addr = alloca i64, align 8
  %final = alloca %struct.DerivedMesh*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7690, metadata !DIExpression()), !dbg !7691
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7692, metadata !DIExpression()), !dbg !7693
  store [3 x float]* %vertCos, [3 x float]** %vertCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertCos.addr, metadata !7694, metadata !DIExpression()), !dbg !7695
  store i64 %dataMask, i64* %dataMask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dataMask.addr, metadata !7696, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %final, metadata !7698, metadata !DIExpression()), !dbg !7699
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7700
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7701
  %2 = load [3 x float]*, [3 x float]** %vertCos.addr, align 8, !dbg !7702
  %3 = load i64, i64* %dataMask.addr, align 8, !dbg !7703
  call void @mesh_calc_modifiers(%struct.Scene* %0, %struct.Object* %1, [3 x float]* %2, %struct.DerivedMesh** null, %struct.DerivedMesh** %final, i32 0, i32 0, i32 0, i64 %3, i32 -1, i32 0, i32 0), !dbg !7704
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %final, align 8, !dbg !7705
  ret %struct.DerivedMesh* %4, !dbg !7706
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @mesh_create_derived_no_virtual(%struct.Scene* %scene, %struct.Object* %ob, [3 x float]* %vertCos, i64 %dataMask) #0 !dbg !7707 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %vertCos.addr = alloca [3 x float]*, align 8
  %dataMask.addr = alloca i64, align 8
  %final = alloca %struct.DerivedMesh*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7708, metadata !DIExpression()), !dbg !7709
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7710, metadata !DIExpression()), !dbg !7711
  store [3 x float]* %vertCos, [3 x float]** %vertCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertCos.addr, metadata !7712, metadata !DIExpression()), !dbg !7713
  store i64 %dataMask, i64* %dataMask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dataMask.addr, metadata !7714, metadata !DIExpression()), !dbg !7715
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %final, metadata !7716, metadata !DIExpression()), !dbg !7717
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7718
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7719
  %2 = load [3 x float]*, [3 x float]** %vertCos.addr, align 8, !dbg !7720
  %3 = load i64, i64* %dataMask.addr, align 8, !dbg !7721
  call void @mesh_calc_modifiers(%struct.Scene* %0, %struct.Object* %1, [3 x float]* %2, %struct.DerivedMesh** null, %struct.DerivedMesh** %final, i32 0, i32 -1, i32 0, i64 %3, i32 -1, i32 0, i32 0), !dbg !7722
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %final, align 8, !dbg !7723
  ret %struct.DerivedMesh* %4, !dbg !7724
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @mesh_create_derived_physics(%struct.Scene* %scene, %struct.Object* %ob, [3 x float]* %vertCos, i64 %dataMask) #0 !dbg !7725 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %vertCos.addr = alloca [3 x float]*, align 8
  %dataMask.addr = alloca i64, align 8
  %final = alloca %struct.DerivedMesh*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7726, metadata !DIExpression()), !dbg !7727
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7728, metadata !DIExpression()), !dbg !7729
  store [3 x float]* %vertCos, [3 x float]** %vertCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertCos.addr, metadata !7730, metadata !DIExpression()), !dbg !7731
  store i64 %dataMask, i64* %dataMask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dataMask.addr, metadata !7732, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %final, metadata !7734, metadata !DIExpression()), !dbg !7735
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7736
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7737
  %2 = load [3 x float]*, [3 x float]** %vertCos.addr, align 8, !dbg !7738
  %3 = load i64, i64* %dataMask.addr, align 8, !dbg !7739
  call void @mesh_calc_modifiers(%struct.Scene* %0, %struct.Object* %1, [3 x float]* %2, %struct.DerivedMesh** null, %struct.DerivedMesh** %final, i32 0, i32 -1, i32 1, i64 %3, i32 -1, i32 0, i32 0), !dbg !7740
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %final, align 8, !dbg !7741
  ret %struct.DerivedMesh* %4, !dbg !7742
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @mesh_create_derived_no_deform_render(%struct.Scene* %scene, %struct.Object* %ob, [3 x float]* %vertCos, i64 %dataMask) #0 !dbg !7743 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %vertCos.addr = alloca [3 x float]*, align 8
  %dataMask.addr = alloca i64, align 8
  %final = alloca %struct.DerivedMesh*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7744, metadata !DIExpression()), !dbg !7745
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7746, metadata !DIExpression()), !dbg !7747
  store [3 x float]* %vertCos, [3 x float]** %vertCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertCos.addr, metadata !7748, metadata !DIExpression()), !dbg !7749
  store i64 %dataMask, i64* %dataMask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dataMask.addr, metadata !7750, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %final, metadata !7752, metadata !DIExpression()), !dbg !7753
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7754
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7755
  %2 = load [3 x float]*, [3 x float]** %vertCos.addr, align 8, !dbg !7756
  %3 = load i64, i64* %dataMask.addr, align 8, !dbg !7757
  call void @mesh_calc_modifiers(%struct.Scene* %0, %struct.Object* %1, [3 x float]* %2, %struct.DerivedMesh** null, %struct.DerivedMesh** %final, i32 1, i32 0, i32 0, i64 %3, i32 -1, i32 0, i32 0), !dbg !7758
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %final, align 8, !dbg !7759
  ret %struct.DerivedMesh* %4, !dbg !7760
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @editbmesh_get_derived_cage_and_final(%struct.Scene* %scene, %struct.Object* %obedit, %struct.BMEditMesh* %em, %struct.DerivedMesh** %r_final, i64 %dataMask) #0 !dbg !7761 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %obedit.addr = alloca %struct.Object*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %r_final.addr = alloca %struct.DerivedMesh**, align 8
  %dataMask.addr = alloca i64, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7764, metadata !DIExpression()), !dbg !7765
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !7766, metadata !DIExpression()), !dbg !7767
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !7768, metadata !DIExpression()), !dbg !7769
  store %struct.DerivedMesh** %r_final, %struct.DerivedMesh*** %r_final.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh*** %r_final.addr, metadata !7770, metadata !DIExpression()), !dbg !7771
  store i64 %dataMask, i64* %dataMask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dataMask.addr, metadata !7772, metadata !DIExpression()), !dbg !7773
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7774
  %1 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !7775
  %call = call i64 @object_get_datamask(%struct.Scene* %0, %struct.Object* %1), !dbg !7776
  %2 = load i64, i64* %dataMask.addr, align 8, !dbg !7777
  %or = or i64 %2, %call, !dbg !7777
  store i64 %or, i64* %dataMask.addr, align 8, !dbg !7777
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7778
  %derivedCage = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 6, !dbg !7780
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedCage, align 8, !dbg !7780
  %tobool = icmp ne %struct.DerivedMesh* %4, null, !dbg !7778
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7781

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7782
  %lastDataMask = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %5, i32 0, i32 7, !dbg !7783
  %6 = load i64, i64* %lastDataMask, align 8, !dbg !7783
  %7 = load i64, i64* %dataMask.addr, align 8, !dbg !7784
  %and = and i64 %6, %7, !dbg !7785
  %8 = load i64, i64* %dataMask.addr, align 8, !dbg !7786
  %cmp = icmp ne i64 %and, %8, !dbg !7787
  br i1 %cmp, label %if.then, label %if.end, !dbg !7788

if.then:                                          ; preds = %lor.lhs.false, %entry
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7789
  %10 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !7791
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7792
  %12 = load i64, i64* %dataMask.addr, align 8, !dbg !7793
  call void @editbmesh_build_data(%struct.Scene* %9, %struct.Object* %10, %struct.BMEditMesh* %11, i64 %12), !dbg !7794
  br label %if.end, !dbg !7795

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7796
  %derivedFinal = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %13, i32 0, i32 5, !dbg !7797
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !7797
  %15 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %r_final.addr, align 8, !dbg !7798
  store %struct.DerivedMesh* %14, %struct.DerivedMesh** %15, align 8, !dbg !7799
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7800
  %derivedFinal1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 5, !dbg !7802
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal1, align 8, !dbg !7802
  %tobool2 = icmp ne %struct.DerivedMesh* %17, null, !dbg !7800
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7803

if.then3:                                         ; preds = %if.end
  br label %if.end4, !dbg !7804

if.end4:                                          ; preds = %if.then3, %if.end
  %18 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7806
  %derivedCage5 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %18, i32 0, i32 6, !dbg !7807
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedCage5, align 8, !dbg !7807
  ret %struct.DerivedMesh* %19, !dbg !7808
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @editbmesh_get_derived_cage(%struct.Scene* %scene, %struct.Object* %obedit, %struct.BMEditMesh* %em, i64 %dataMask) #0 !dbg !7809 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %obedit.addr = alloca %struct.Object*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %dataMask.addr = alloca i64, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7812, metadata !DIExpression()), !dbg !7813
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !7814, metadata !DIExpression()), !dbg !7815
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !7816, metadata !DIExpression()), !dbg !7817
  store i64 %dataMask, i64* %dataMask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dataMask.addr, metadata !7818, metadata !DIExpression()), !dbg !7819
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7820
  %1 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !7821
  %call = call i64 @object_get_datamask(%struct.Scene* %0, %struct.Object* %1), !dbg !7822
  %2 = load i64, i64* %dataMask.addr, align 8, !dbg !7823
  %or = or i64 %2, %call, !dbg !7823
  store i64 %or, i64* %dataMask.addr, align 8, !dbg !7823
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7824
  %derivedCage = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 6, !dbg !7826
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedCage, align 8, !dbg !7826
  %tobool = icmp ne %struct.DerivedMesh* %4, null, !dbg !7824
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7827

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7828
  %lastDataMask = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %5, i32 0, i32 7, !dbg !7829
  %6 = load i64, i64* %lastDataMask, align 8, !dbg !7829
  %7 = load i64, i64* %dataMask.addr, align 8, !dbg !7830
  %and = and i64 %6, %7, !dbg !7831
  %8 = load i64, i64* %dataMask.addr, align 8, !dbg !7832
  %cmp = icmp ne i64 %and, %8, !dbg !7833
  br i1 %cmp, label %if.then, label %if.end, !dbg !7834

if.then:                                          ; preds = %lor.lhs.false, %entry
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7835
  %10 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !7837
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7838
  %12 = load i64, i64* %dataMask.addr, align 8, !dbg !7839
  call void @editbmesh_build_data(%struct.Scene* %9, %struct.Object* %10, %struct.BMEditMesh* %11, i64 %12), !dbg !7840
  br label %if.end, !dbg !7841

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7842
  %derivedCage1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %13, i32 0, i32 6, !dbg !7843
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedCage1, align 8, !dbg !7843
  ret %struct.DerivedMesh* %14, !dbg !7844
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @editbmesh_get_derived_base(%struct.Object* %obedit, %struct.BMEditMesh* %em) #0 !dbg !7845 {
entry:
  %obedit.addr = alloca %struct.Object*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !7848, metadata !DIExpression()), !dbg !7849
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !7850, metadata !DIExpression()), !dbg !7851
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7852
  %1 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !7853
  %call = call %struct.DerivedMesh* @getEditDerivedBMesh(%struct.BMEditMesh* %0, %struct.Object* %1, [3 x float]* null), !dbg !7854
  ret %struct.DerivedMesh* %call, !dbg !7855
}

declare dso_local %struct.DerivedMesh* @getEditDerivedBMesh(%struct.BMEditMesh*, %struct.Object*, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @object_get_derived_final(%struct.Object* %ob, i8 zeroext %for_render) #0 !dbg !7856 {
entry:
  %retval = alloca %struct.DerivedMesh*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %for_render.addr = alloca i8, align 1
  %me = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7859, metadata !DIExpression()), !dbg !7860
  store i8 %for_render, i8* %for_render.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %for_render.addr, metadata !7861, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !7863, metadata !DIExpression()), !dbg !7864
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7865
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !7866
  %1 = load i8*, i8** %data, align 8, !dbg !7866
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !7865
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !7864
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !7867, metadata !DIExpression()), !dbg !7868
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7869
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 20, !dbg !7870
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !7870
  store %struct.BMEditMesh* %4, %struct.BMEditMesh** %em, align 8, !dbg !7868
  %5 = load i8, i8* %for_render.addr, align 1, !dbg !7871
  %tobool = icmp ne i8 %5, 0, !dbg !7871
  br i1 %tobool, label %if.then, label %if.end, !dbg !7873

if.then:                                          ; preds = %entry
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7874
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 120, !dbg !7876
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !7876
  store %struct.DerivedMesh* %7, %struct.DerivedMesh** %retval, align 8, !dbg !7877
  br label %return, !dbg !7877

if.end:                                           ; preds = %entry
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7878
  %tobool1 = icmp ne %struct.BMEditMesh* %8, null, !dbg !7878
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !7880

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !7881, metadata !DIExpression()), !dbg !7883
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7884
  %derivedFinal3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 5, !dbg !7885
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal3, align 8, !dbg !7885
  store %struct.DerivedMesh* %10, %struct.DerivedMesh** %dm, align 8, !dbg !7883
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7886
  store %struct.DerivedMesh* %11, %struct.DerivedMesh** %retval, align 8, !dbg !7887
  br label %return, !dbg !7887

if.end4:                                          ; preds = %if.end
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7888
  %derivedFinal5 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 120, !dbg !7889
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal5, align 8, !dbg !7889
  store %struct.DerivedMesh* %13, %struct.DerivedMesh** %retval, align 8, !dbg !7890
  br label %return, !dbg !7890

return:                                           ; preds = %if.end4, %if.then2, %if.then
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %retval, align 8, !dbg !7891
  ret %struct.DerivedMesh* %14, !dbg !7891
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @mesh_get_mapped_verts_coords(%struct.DerivedMesh* %dm, [3 x float]* %r_cos, i32 %totcos) #0 !dbg !7892 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %r_cos.addr = alloca [3 x float]*, align 8
  %totcos.addr = alloca i32, align 4
  %userData = alloca %struct.MappedUserData, align 8
  %i = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !7895, metadata !DIExpression()), !dbg !7896
  store [3 x float]* %r_cos, [3 x float]** %r_cos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %r_cos.addr, metadata !7897, metadata !DIExpression()), !dbg !7898
  store i32 %totcos, i32* %totcos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totcos.addr, metadata !7899, metadata !DIExpression()), !dbg !7900
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7901
  %foreachMappedVert = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 71, !dbg !7903
  %1 = load void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)** %foreachMappedVert, align 8, !dbg !7903
  %tobool = icmp ne void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)* %1, null, !dbg !7901
  br i1 %tobool, label %if.then, label %if.else, !dbg !7904

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MappedUserData* %userData, metadata !7905, metadata !DIExpression()), !dbg !7907
  %2 = load [3 x float]*, [3 x float]** %r_cos.addr, align 8, !dbg !7908
  %3 = bitcast [3 x float]* %2 to i8*, !dbg !7909
  %4 = load i32, i32* %totcos.addr, align 4, !dbg !7910
  %conv = sext i32 %4 to i64, !dbg !7910
  %mul = mul i64 12, %conv, !dbg !7911
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 %mul, i1 false), !dbg !7909
  %5 = load [3 x float]*, [3 x float]** %r_cos.addr, align 8, !dbg !7912
  %vertexcos = getelementptr inbounds %struct.MappedUserData, %struct.MappedUserData* %userData, i32 0, i32 0, !dbg !7913
  store [3 x float]* %5, [3 x float]** %vertexcos, align 8, !dbg !7914
  %6 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7915
  %7 = load i32, i32* %totcos.addr, align 4, !dbg !7915
  %shr = ashr i32 %7, 5, !dbg !7915
  %add = add nsw i32 %shr, 1, !dbg !7915
  %conv1 = sext i32 %add to i64, !dbg !7915
  %mul2 = mul i64 %conv1, 4, !dbg !7915
  %call = call i8* %6(i64 %mul2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0)), !dbg !7915
  %8 = bitcast i8* %call to i32*, !dbg !7915
  %vertex_visit = getelementptr inbounds %struct.MappedUserData, %struct.MappedUserData* %userData, i32 0, i32 1, !dbg !7916
  store i32* %8, i32** %vertex_visit, align 8, !dbg !7917
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7918
  %foreachMappedVert3 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 71, !dbg !7919
  %10 = load void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)** %foreachMappedVert3, align 8, !dbg !7919
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7920
  %12 = bitcast %struct.MappedUserData* %userData to i8*, !dbg !7921
  call void %10(%struct.DerivedMesh* %11, void (i8*, i32, float*, float*, i16*)* @make_vertexcos__mapFunc, i8* %12, i32 0), !dbg !7918
  %13 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7922
  %vertex_visit4 = getelementptr inbounds %struct.MappedUserData, %struct.MappedUserData* %userData, i32 0, i32 1, !dbg !7923
  %14 = load i32*, i32** %vertex_visit4, align 8, !dbg !7923
  %15 = bitcast i32* %14 to i8*, !dbg !7924
  call void %13(i8* %15), !dbg !7922
  br label %if.end, !dbg !7925

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7926, metadata !DIExpression()), !dbg !7928
  store i32 0, i32* %i, align 4, !dbg !7929
  br label %for.cond, !dbg !7931

for.cond:                                         ; preds = %for.inc, %if.else
  %16 = load i32, i32* %i, align 4, !dbg !7932
  %17 = load i32, i32* %totcos.addr, align 4, !dbg !7934
  %cmp = icmp slt i32 %16, %17, !dbg !7935
  br i1 %cmp, label %for.body, label %for.end, !dbg !7936

for.body:                                         ; preds = %for.cond
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7937
  %getVertCo = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %18, i32 0, i32 76, !dbg !7939
  %19 = load void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)** %getVertCo, align 8, !dbg !7939
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7940
  %21 = load i32, i32* %i, align 4, !dbg !7941
  %22 = load [3 x float]*, [3 x float]** %r_cos.addr, align 8, !dbg !7942
  %23 = load i32, i32* %i, align 4, !dbg !7943
  %idxprom = sext i32 %23 to i64, !dbg !7942
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %22, i64 %idxprom, !dbg !7942
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !7942
  call void %19(%struct.DerivedMesh* %20, i32 %21, float* %arraydecay), !dbg !7937
  br label %for.inc, !dbg !7944

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !dbg !7945
  %inc = add nsw i32 %24, 1, !dbg !7945
  store i32 %inc, i32* %i, align 4, !dbg !7945
  br label %for.cond, !dbg !7946, !llvm.loop !7947

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  ret void, !dbg !7949
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @make_vertexcos__mapFunc(i8* %userData, i32 %index, float* %co, float* %UNUSED_no_f, i16* %UNUSED_no_s) #0 !dbg !7950 {
entry:
  %userData.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %co.addr = alloca float*, align 8
  %UNUSED_no_f.addr = alloca float*, align 8
  %UNUSED_no_s.addr = alloca i16*, align 8
  %mappedData = alloca %struct.MappedUserData*, align 8
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !7951, metadata !DIExpression()), !dbg !7952
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7953, metadata !DIExpression()), !dbg !7954
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !7955, metadata !DIExpression()), !dbg !7956
  store float* %UNUSED_no_f, float** %UNUSED_no_f.addr, align 8
  call void @llvm.dbg.declare(metadata float** %UNUSED_no_f.addr, metadata !7957, metadata !DIExpression()), !dbg !7958
  store i16* %UNUSED_no_s, i16** %UNUSED_no_s.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %UNUSED_no_s.addr, metadata !7959, metadata !DIExpression()), !dbg !7960
  call void @llvm.dbg.declare(metadata %struct.MappedUserData** %mappedData, metadata !7961, metadata !DIExpression()), !dbg !7962
  %0 = load i8*, i8** %userData.addr, align 8, !dbg !7963
  %1 = bitcast i8* %0 to %struct.MappedUserData*, !dbg !7964
  store %struct.MappedUserData* %1, %struct.MappedUserData** %mappedData, align 8, !dbg !7962
  %2 = load %struct.MappedUserData*, %struct.MappedUserData** %mappedData, align 8, !dbg !7965
  %vertex_visit = getelementptr inbounds %struct.MappedUserData, %struct.MappedUserData* %2, i32 0, i32 1, !dbg !7965
  %3 = load i32*, i32** %vertex_visit, align 8, !dbg !7965
  %4 = load i32, i32* %index.addr, align 4, !dbg !7965
  %shr = ashr i32 %4, 5, !dbg !7965
  %idxprom = sext i32 %shr to i64, !dbg !7965
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom, !dbg !7965
  %5 = load i32, i32* %arrayidx, align 4, !dbg !7965
  %6 = load i32, i32* %index.addr, align 4, !dbg !7965
  %and = and i32 %6, 31, !dbg !7965
  %shl = shl i32 1, %and, !dbg !7965
  %and1 = and i32 %5, %shl, !dbg !7965
  %cmp = icmp eq i32 %and1, 0, !dbg !7967
  br i1 %cmp, label %if.then, label %if.end, !dbg !7968

if.then:                                          ; preds = %entry
  %7 = load %struct.MappedUserData*, %struct.MappedUserData** %mappedData, align 8, !dbg !7969
  %vertexcos = getelementptr inbounds %struct.MappedUserData, %struct.MappedUserData* %7, i32 0, i32 0, !dbg !7971
  %8 = load [3 x float]*, [3 x float]** %vertexcos, align 8, !dbg !7971
  %9 = load i32, i32* %index.addr, align 4, !dbg !7972
  %idxprom2 = sext i32 %9 to i64, !dbg !7969
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %8, i64 %idxprom2, !dbg !7969
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx3, i64 0, i64 0, !dbg !7969
  %10 = load float*, float** %co.addr, align 8, !dbg !7973
  call void @copy_v3_v3(float* %arraydecay, float* %10), !dbg !7974
  %11 = load i32, i32* %index.addr, align 4, !dbg !7975
  %and4 = and i32 %11, 31, !dbg !7975
  %shl5 = shl i32 1, %and4, !dbg !7975
  %12 = load %struct.MappedUserData*, %struct.MappedUserData** %mappedData, align 8, !dbg !7975
  %vertex_visit6 = getelementptr inbounds %struct.MappedUserData, %struct.MappedUserData* %12, i32 0, i32 1, !dbg !7975
  %13 = load i32*, i32** %vertex_visit6, align 8, !dbg !7975
  %14 = load i32, i32* %index.addr, align 4, !dbg !7975
  %shr7 = ashr i32 %14, 5, !dbg !7975
  %idxprom8 = sext i32 %shr7 to i64, !dbg !7975
  %arrayidx9 = getelementptr inbounds i32, i32* %13, i64 %idxprom8, !dbg !7975
  %15 = load i32, i32* %arrayidx9, align 4, !dbg !7975
  %or = or i32 %15, %shl5, !dbg !7975
  store i32 %or, i32* %arrayidx9, align 4, !dbg !7975
  br label %if.end, !dbg !7976

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7977
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_add_tangent_layer(%struct.DerivedMesh* %dm) #0 !dbg !7978 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %mtface = alloca %struct.MTFace*, align 8
  %mface = alloca %struct.MFace*, align 8
  %orco = alloca [3 x float]*, align 8
  %tangent = alloca [4 x float]*, align 8
  %totface = alloca i32, align 4
  %fnors = alloca [3 x float]*, align 8
  %tlnors = alloca [4 x [3 x i16]]*, align 8
  %mesh2tangent = alloca %struct.SGLSLMeshToTangent, align 8
  %sContext = alloca %struct.SMikkTSpaceContext, align 8
  %sInterface = alloca %struct.SMikkTSpaceInterface, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !7979, metadata !DIExpression()), !dbg !7980
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !7981, metadata !DIExpression()), !dbg !7982
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtface, metadata !7983, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !7985, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.declare(metadata [3 x float]** %orco, metadata !7987, metadata !DIExpression()), !dbg !7988
  store [3 x float]* null, [3 x float]** %orco, align 8, !dbg !7988
  call void @llvm.dbg.declare(metadata [4 x float]** %tangent, metadata !7989, metadata !DIExpression()), !dbg !7990
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !7991, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.declare(metadata [3 x float]** %fnors, metadata !7993, metadata !DIExpression()), !dbg !7994
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %tlnors, metadata !7995, metadata !DIExpression()), !dbg !7996
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7997
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 2, !dbg !7999
  %call = call i32 @CustomData_get_layer_index(%struct.CustomData* %faceData, i32 18), !dbg !8000
  %cmp = icmp ne i32 %call, -1, !dbg !8001
  br i1 %cmp, label %if.then, label %if.end, !dbg !8002

if.then:                                          ; preds = %entry
  br label %return, !dbg !8003

if.end:                                           ; preds = %entry
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8004
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 52, !dbg !8005
  %2 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !8005
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8006
  %call1 = call i8* %2(%struct.DerivedMesh* %3, i32 8), !dbg !8004
  %4 = bitcast i8* %call1 to [3 x float]*, !dbg !8004
  store [3 x float]* %4, [3 x float]** %fnors, align 8, !dbg !8007
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8008
  %getTessFaceDataArray2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 52, !dbg !8009
  %6 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray2, align 8, !dbg !8009
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8010
  %call3 = call i8* %6(%struct.DerivedMesh* %7, i32 40), !dbg !8008
  %8 = bitcast i8* %call3 to [4 x [3 x i16]]*, !dbg !8008
  store [4 x [3 x i16]]* %8, [4 x [3 x i16]]** %tlnors, align 8, !dbg !8011
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8012
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 25, !dbg !8013
  %10 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !8013
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8014
  %call4 = call i32 %10(%struct.DerivedMesh* %11), !dbg !8012
  store i32 %call4, i32* %totface, align 4, !dbg !8015
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8016
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 31, !dbg !8017
  %13 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !8017
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8018
  %call5 = call %struct.MVert* %13(%struct.DerivedMesh* %14), !dbg !8016
  store %struct.MVert* %call5, %struct.MVert** %mvert, align 8, !dbg !8019
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8020
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 33, !dbg !8021
  %16 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !8021
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8022
  %call6 = call %struct.MFace* %16(%struct.DerivedMesh* %17), !dbg !8020
  store %struct.MFace* %call6, %struct.MFace** %mface, align 8, !dbg !8023
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8024
  %getTessFaceDataArray7 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %18, i32 0, i32 52, !dbg !8025
  %19 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray7, align 8, !dbg !8025
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8026
  %call8 = call i8* %19(%struct.DerivedMesh* %20, i32 5), !dbg !8024
  %21 = bitcast i8* %call8 to %struct.MTFace*, !dbg !8024
  store %struct.MTFace* %21, %struct.MTFace** %mtface, align 8, !dbg !8027
  %22 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !8028
  %tobool = icmp ne %struct.MTFace* %22, null, !dbg !8028
  br i1 %tobool, label %if.end14, label %if.then9, !dbg !8030

if.then9:                                         ; preds = %if.end
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8031
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %23, i32 0, i32 50, !dbg !8033
  %24 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !8033
  %25 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8034
  %call10 = call i8* %24(%struct.DerivedMesh* %25, i32 14), !dbg !8031
  %26 = bitcast i8* %call10 to [3 x float]*, !dbg !8031
  store [3 x float]* %26, [3 x float]** %orco, align 8, !dbg !8035
  %27 = load [3 x float]*, [3 x float]** %orco, align 8, !dbg !8036
  %tobool11 = icmp ne [3 x float]* %27, null, !dbg !8036
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !8038

if.then12:                                        ; preds = %if.then9
  br label %return, !dbg !8039

if.end13:                                         ; preds = %if.then9
  br label %if.end14, !dbg !8040

if.end14:                                         ; preds = %if.end13, %if.end
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8041
  call void @DM_add_tessface_layer(%struct.DerivedMesh* %28, i32 18, i32 1, i8* null), !dbg !8042
  %29 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8043
  %call15 = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %29, i32 18), !dbg !8044
  %30 = bitcast i8* %call15 to [4 x float]*, !dbg !8044
  store [4 x float]* %30, [4 x float]** %tangent, align 8, !dbg !8045
  call void @llvm.dbg.declare(metadata %struct.SGLSLMeshToTangent* %mesh2tangent, metadata !8046, metadata !DIExpression()), !dbg !8048
  %31 = bitcast %struct.SGLSLMeshToTangent* %mesh2tangent to i8*, !dbg !8048
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 64, i1 false), !dbg !8048
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext* %sContext, metadata !8049, metadata !DIExpression()), !dbg !8086
  %32 = bitcast %struct.SMikkTSpaceContext* %sContext to i8*, !dbg !8086
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false), !dbg !8086
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceInterface* %sInterface, metadata !8087, metadata !DIExpression()), !dbg !8088
  %33 = bitcast %struct.SMikkTSpaceInterface* %sInterface to i8*, !dbg !8088
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 56, i1 false), !dbg !8088
  %34 = load [3 x float]*, [3 x float]** %fnors, align 8, !dbg !8089
  %precomputedFaceNormals = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %mesh2tangent, i32 0, i32 0, !dbg !8090
  store [3 x float]* %34, [3 x float]** %precomputedFaceNormals, align 8, !dbg !8091
  %35 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %tlnors, align 8, !dbg !8092
  %precomputedLoopNormals = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %mesh2tangent, i32 0, i32 1, !dbg !8093
  store [4 x [3 x i16]]* %35, [4 x [3 x i16]]** %precomputedLoopNormals, align 8, !dbg !8094
  %36 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !8095
  %mtface16 = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %mesh2tangent, i32 0, i32 2, !dbg !8096
  store %struct.MTFace* %36, %struct.MTFace** %mtface16, align 8, !dbg !8097
  %37 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8098
  %mface17 = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %mesh2tangent, i32 0, i32 3, !dbg !8099
  store %struct.MFace* %37, %struct.MFace** %mface17, align 8, !dbg !8100
  %38 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8101
  %mvert18 = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %mesh2tangent, i32 0, i32 4, !dbg !8102
  store %struct.MVert* %38, %struct.MVert** %mvert18, align 8, !dbg !8103
  %39 = load [3 x float]*, [3 x float]** %orco, align 8, !dbg !8104
  %orco19 = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %mesh2tangent, i32 0, i32 5, !dbg !8105
  store [3 x float]* %39, [3 x float]** %orco19, align 8, !dbg !8106
  %40 = load [4 x float]*, [4 x float]** %tangent, align 8, !dbg !8107
  %tangent20 = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %mesh2tangent, i32 0, i32 6, !dbg !8108
  store [4 x float]* %40, [4 x float]** %tangent20, align 8, !dbg !8109
  %41 = load i32, i32* %totface, align 4, !dbg !8110
  %numTessFaces = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %mesh2tangent, i32 0, i32 7, !dbg !8111
  store i32 %41, i32* %numTessFaces, align 8, !dbg !8112
  %42 = bitcast %struct.SGLSLMeshToTangent* %mesh2tangent to i8*, !dbg !8113
  %m_pUserData = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %sContext, i32 0, i32 1, !dbg !8114
  store i8* %42, i8** %m_pUserData, align 8, !dbg !8115
  %m_pInterface = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %sContext, i32 0, i32 0, !dbg !8116
  store %struct.SMikkTSpaceInterface* %sInterface, %struct.SMikkTSpaceInterface** %m_pInterface, align 8, !dbg !8117
  %m_getNumFaces = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %sInterface, i32 0, i32 0, !dbg !8118
  store i32 (%struct.SMikkTSpaceContext*)* @GetNumFaces, i32 (%struct.SMikkTSpaceContext*)** %m_getNumFaces, align 8, !dbg !8119
  %m_getNumVerticesOfFace = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %sInterface, i32 0, i32 1, !dbg !8120
  store i32 (%struct.SMikkTSpaceContext*, i32)* @GetNumVertsOfFace, i32 (%struct.SMikkTSpaceContext*, i32)** %m_getNumVerticesOfFace, align 8, !dbg !8121
  %m_getPosition = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %sInterface, i32 0, i32 2, !dbg !8122
  store void (%struct.SMikkTSpaceContext*, float*, i32, i32)* @GetPosition, void (%struct.SMikkTSpaceContext*, float*, i32, i32)** %m_getPosition, align 8, !dbg !8123
  %m_getTexCoord = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %sInterface, i32 0, i32 4, !dbg !8124
  store void (%struct.SMikkTSpaceContext*, float*, i32, i32)* @GetTextureCoordinate, void (%struct.SMikkTSpaceContext*, float*, i32, i32)** %m_getTexCoord, align 8, !dbg !8125
  %m_getNormal = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %sInterface, i32 0, i32 3, !dbg !8126
  store void (%struct.SMikkTSpaceContext*, float*, i32, i32)* @GetNormal, void (%struct.SMikkTSpaceContext*, float*, i32, i32)** %m_getNormal, align 8, !dbg !8127
  %m_setTSpaceBasic = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %sInterface, i32 0, i32 5, !dbg !8128
  store void (%struct.SMikkTSpaceContext*, float*, float, i32, i32)* @SetTSpace, void (%struct.SMikkTSpaceContext*, float*, float, i32, i32)** %m_setTSpaceBasic, align 8, !dbg !8129
  %call21 = call i32 @genTangSpaceDefault(%struct.SMikkTSpaceContext* %sContext), !dbg !8130
  br label %return, !dbg !8131

return:                                           ; preds = %if.end14, %if.then12, %if.then
  ret void, !dbg !8131
}

declare dso_local i32 @CustomData_get_layer_index(%struct.CustomData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @GetNumFaces(%struct.SMikkTSpaceContext* %pContext) #0 !dbg !8132 {
entry:
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %pMesh = alloca %struct.SGLSLMeshToTangent*, align 8
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !8133, metadata !DIExpression()), !dbg !8134
  call void @llvm.dbg.declare(metadata %struct.SGLSLMeshToTangent** %pMesh, metadata !8135, metadata !DIExpression()), !dbg !8136
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !8137
  %m_pUserData = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %0, i32 0, i32 1, !dbg !8138
  %1 = load i8*, i8** %m_pUserData, align 8, !dbg !8138
  %2 = bitcast i8* %1 to %struct.SGLSLMeshToTangent*, !dbg !8139
  store %struct.SGLSLMeshToTangent* %2, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8136
  %3 = load %struct.SGLSLMeshToTangent*, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8140
  %numTessFaces = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %3, i32 0, i32 7, !dbg !8141
  %4 = load i32, i32* %numTessFaces, align 8, !dbg !8141
  ret i32 %4, !dbg !8142
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @GetNumVertsOfFace(%struct.SMikkTSpaceContext* %pContext, i32 %face_num) #0 !dbg !8143 {
entry:
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %face_num.addr = alloca i32, align 4
  %pMesh = alloca %struct.SGLSLMeshToTangent*, align 8
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !8144, metadata !DIExpression()), !dbg !8145
  store i32 %face_num, i32* %face_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_num.addr, metadata !8146, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.declare(metadata %struct.SGLSLMeshToTangent** %pMesh, metadata !8148, metadata !DIExpression()), !dbg !8149
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !8150
  %m_pUserData = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %0, i32 0, i32 1, !dbg !8151
  %1 = load i8*, i8** %m_pUserData, align 8, !dbg !8151
  %2 = bitcast i8* %1 to %struct.SGLSLMeshToTangent*, !dbg !8152
  store %struct.SGLSLMeshToTangent* %2, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8149
  %3 = load %struct.SGLSLMeshToTangent*, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8153
  %mface = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %3, i32 0, i32 3, !dbg !8154
  %4 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8154
  %5 = load i32, i32* %face_num.addr, align 4, !dbg !8155
  %idxprom = sext i32 %5 to i64, !dbg !8153
  %arrayidx = getelementptr inbounds %struct.MFace, %struct.MFace* %4, i64 %idxprom, !dbg !8153
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx, i32 0, i32 3, !dbg !8156
  %6 = load i32, i32* %v4, align 4, !dbg !8156
  %cmp = icmp ne i32 %6, 0, !dbg !8157
  %7 = zext i1 %cmp to i64, !dbg !8153
  %cond = select i1 %cmp, i32 4, i32 3, !dbg !8153
  ret i32 %cond, !dbg !8158
}

; Function Attrs: noinline nounwind uwtable
define internal void @GetPosition(%struct.SMikkTSpaceContext* %pContext, float* %r_co, i32 %face_num, i32 %vert_index) #0 !dbg !8159 {
entry:
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %r_co.addr = alloca float*, align 8
  %face_num.addr = alloca i32, align 4
  %vert_index.addr = alloca i32, align 4
  %pMesh = alloca %struct.SGLSLMeshToTangent*, align 8
  %co = alloca float*, align 8
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !8160, metadata !DIExpression()), !dbg !8161
  store float* %r_co, float** %r_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_co.addr, metadata !8162, metadata !DIExpression()), !dbg !8163
  store i32 %face_num, i32* %face_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_num.addr, metadata !8164, metadata !DIExpression()), !dbg !8165
  store i32 %vert_index, i32* %vert_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vert_index.addr, metadata !8166, metadata !DIExpression()), !dbg !8167
  call void @llvm.dbg.declare(metadata %struct.SGLSLMeshToTangent** %pMesh, metadata !8168, metadata !DIExpression()), !dbg !8169
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !8170
  %m_pUserData = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %0, i32 0, i32 1, !dbg !8171
  %1 = load i8*, i8** %m_pUserData, align 8, !dbg !8171
  %2 = bitcast i8* %1 to %struct.SGLSLMeshToTangent*, !dbg !8172
  store %struct.SGLSLMeshToTangent* %2, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8169
  call void @llvm.dbg.declare(metadata float** %co, metadata !8173, metadata !DIExpression()), !dbg !8174
  %3 = load %struct.SGLSLMeshToTangent*, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8175
  %mvert = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %3, i32 0, i32 4, !dbg !8176
  %4 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8176
  %5 = load %struct.SGLSLMeshToTangent*, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8177
  %mface = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %5, i32 0, i32 3, !dbg !8178
  %6 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8178
  %7 = load i32, i32* %face_num.addr, align 4, !dbg !8179
  %idxprom = sext i32 %7 to i64, !dbg !8177
  %arrayidx = getelementptr inbounds %struct.MFace, %struct.MFace* %6, i64 %idxprom, !dbg !8177
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx, i32 0, i32 0, !dbg !8180
  %8 = load i32, i32* %vert_index.addr, align 4, !dbg !8181
  %idxprom1 = sext i32 %8 to i64, !dbg !8182
  %arrayidx2 = getelementptr inbounds i32, i32* %v1, i64 %idxprom1, !dbg !8182
  %9 = load i32, i32* %arrayidx2, align 4, !dbg !8182
  %idxprom3 = zext i32 %9 to i64, !dbg !8175
  %arrayidx4 = getelementptr inbounds %struct.MVert, %struct.MVert* %4, i64 %idxprom3, !dbg !8175
  %co5 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx4, i32 0, i32 0, !dbg !8183
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co5, i64 0, i64 0, !dbg !8175
  store float* %arraydecay, float** %co, align 8, !dbg !8174
  %10 = load float*, float** %r_co.addr, align 8, !dbg !8184
  %11 = load float*, float** %co, align 8, !dbg !8185
  call void @copy_v3_v3(float* %10, float* %11), !dbg !8186
  ret void, !dbg !8187
}

; Function Attrs: noinline nounwind uwtable
define internal void @GetTextureCoordinate(%struct.SMikkTSpaceContext* %pContext, float* %r_uv, i32 %face_num, i32 %vert_index) #0 !dbg !8188 {
entry:
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %r_uv.addr = alloca float*, align 8
  %face_num.addr = alloca i32, align 4
  %vert_index.addr = alloca i32, align 4
  %pMesh = alloca %struct.SGLSLMeshToTangent*, align 8
  %uv = alloca float*, align 8
  %orco = alloca float*, align 8
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !8189, metadata !DIExpression()), !dbg !8190
  store float* %r_uv, float** %r_uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_uv.addr, metadata !8191, metadata !DIExpression()), !dbg !8192
  store i32 %face_num, i32* %face_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_num.addr, metadata !8193, metadata !DIExpression()), !dbg !8194
  store i32 %vert_index, i32* %vert_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vert_index.addr, metadata !8195, metadata !DIExpression()), !dbg !8196
  call void @llvm.dbg.declare(metadata %struct.SGLSLMeshToTangent** %pMesh, metadata !8197, metadata !DIExpression()), !dbg !8198
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !8199
  %m_pUserData = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %0, i32 0, i32 1, !dbg !8200
  %1 = load i8*, i8** %m_pUserData, align 8, !dbg !8200
  %2 = bitcast i8* %1 to %struct.SGLSLMeshToTangent*, !dbg !8201
  store %struct.SGLSLMeshToTangent* %2, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8198
  %3 = load %struct.SGLSLMeshToTangent*, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8202
  %mtface = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %3, i32 0, i32 2, !dbg !8204
  %4 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !8204
  %cmp = icmp ne %struct.MTFace* %4, null, !dbg !8205
  br i1 %cmp, label %if.then, label %if.else, !dbg !8206

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %uv, metadata !8207, metadata !DIExpression()), !dbg !8209
  %5 = load %struct.SGLSLMeshToTangent*, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8210
  %mtface1 = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %5, i32 0, i32 2, !dbg !8211
  %6 = load %struct.MTFace*, %struct.MTFace** %mtface1, align 8, !dbg !8211
  %7 = load i32, i32* %face_num.addr, align 4, !dbg !8212
  %idxprom = sext i32 %7 to i64, !dbg !8210
  %arrayidx = getelementptr inbounds %struct.MTFace, %struct.MTFace* %6, i64 %idxprom, !dbg !8210
  %uv2 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx, i32 0, i32 0, !dbg !8213
  %8 = load i32, i32* %vert_index.addr, align 4, !dbg !8214
  %idxprom3 = sext i32 %8 to i64, !dbg !8210
  %arrayidx4 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv2, i64 0, i64 %idxprom3, !dbg !8210
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx4, i64 0, i64 0, !dbg !8210
  store float* %arraydecay, float** %uv, align 8, !dbg !8209
  %9 = load float*, float** %r_uv.addr, align 8, !dbg !8215
  %10 = load float*, float** %uv, align 8, !dbg !8216
  call void @copy_v2_v2(float* %9, float* %10), !dbg !8217
  br label %if.end, !dbg !8218

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %orco, metadata !8219, metadata !DIExpression()), !dbg !8221
  %11 = load %struct.SGLSLMeshToTangent*, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8222
  %orco5 = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %11, i32 0, i32 5, !dbg !8223
  %12 = load [3 x float]*, [3 x float]** %orco5, align 8, !dbg !8223
  %13 = load %struct.SGLSLMeshToTangent*, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8224
  %mface = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %13, i32 0, i32 3, !dbg !8225
  %14 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8225
  %15 = load i32, i32* %face_num.addr, align 4, !dbg !8226
  %idxprom6 = sext i32 %15 to i64, !dbg !8224
  %arrayidx7 = getelementptr inbounds %struct.MFace, %struct.MFace* %14, i64 %idxprom6, !dbg !8224
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx7, i32 0, i32 0, !dbg !8227
  %16 = load i32, i32* %vert_index.addr, align 4, !dbg !8228
  %idxprom8 = sext i32 %16 to i64, !dbg !8229
  %arrayidx9 = getelementptr inbounds i32, i32* %v1, i64 %idxprom8, !dbg !8229
  %17 = load i32, i32* %arrayidx9, align 4, !dbg !8229
  %idxprom10 = zext i32 %17 to i64, !dbg !8222
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %12, i64 %idxprom10, !dbg !8222
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx11, i64 0, i64 0, !dbg !8222
  store float* %arraydecay12, float** %orco, align 8, !dbg !8221
  %18 = load float*, float** %r_uv.addr, align 8, !dbg !8230
  %arrayidx13 = getelementptr inbounds float, float* %18, i64 0, !dbg !8230
  %19 = load float*, float** %r_uv.addr, align 8, !dbg !8231
  %arrayidx14 = getelementptr inbounds float, float* %19, i64 1, !dbg !8231
  %20 = load float*, float** %orco, align 8, !dbg !8232
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 0, !dbg !8232
  %21 = load float, float* %arrayidx15, align 4, !dbg !8232
  %22 = load float*, float** %orco, align 8, !dbg !8233
  %arrayidx16 = getelementptr inbounds float, float* %22, i64 1, !dbg !8233
  %23 = load float, float* %arrayidx16, align 4, !dbg !8233
  %24 = load float*, float** %orco, align 8, !dbg !8234
  %arrayidx17 = getelementptr inbounds float, float* %24, i64 2, !dbg !8234
  %25 = load float, float* %arrayidx17, align 4, !dbg !8234
  call void @map_to_sphere(float* %arrayidx13, float* %arrayidx14, float %21, float %23, float %25), !dbg !8235
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !8236
}

; Function Attrs: noinline nounwind uwtable
define internal void @GetNormal(%struct.SMikkTSpaceContext* %pContext, float* %r_no, i32 %face_num, i32 %vert_index) #0 !dbg !8237 {
entry:
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %r_no.addr = alloca float*, align 8
  %face_num.addr = alloca i32, align 4
  %vert_index.addr = alloca i32, align 4
  %pMesh = alloca %struct.SGLSLMeshToTangent*, align 8
  %smoothnormal = alloca i8, align 1
  %mf = alloca %struct.MFace*, align 8
  %p0 = alloca float*, align 8
  %p1 = alloca float*, align 8
  %p2 = alloca float*, align 8
  %p3 = alloca float*, align 8
  %no = alloca i16*, align 8
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !8238, metadata !DIExpression()), !dbg !8239
  store float* %r_no, float** %r_no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_no.addr, metadata !8240, metadata !DIExpression()), !dbg !8241
  store i32 %face_num, i32* %face_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_num.addr, metadata !8242, metadata !DIExpression()), !dbg !8243
  store i32 %vert_index, i32* %vert_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vert_index.addr, metadata !8244, metadata !DIExpression()), !dbg !8245
  call void @llvm.dbg.declare(metadata %struct.SGLSLMeshToTangent** %pMesh, metadata !8246, metadata !DIExpression()), !dbg !8247
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !8248
  %m_pUserData = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %0, i32 0, i32 1, !dbg !8249
  %1 = load i8*, i8** %m_pUserData, align 8, !dbg !8249
  %2 = bitcast i8* %1 to %struct.SGLSLMeshToTangent*, !dbg !8250
  store %struct.SGLSLMeshToTangent* %2, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8247
  call void @llvm.dbg.declare(metadata i8* %smoothnormal, metadata !8251, metadata !DIExpression()), !dbg !8252
  %3 = load %struct.SGLSLMeshToTangent*, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8253
  %mface = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %3, i32 0, i32 3, !dbg !8254
  %4 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8254
  %5 = load i32, i32* %face_num.addr, align 4, !dbg !8255
  %idxprom = sext i32 %5 to i64, !dbg !8253
  %arrayidx = getelementptr inbounds %struct.MFace, %struct.MFace* %4, i64 %idxprom, !dbg !8253
  %flag = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx, i32 0, i32 6, !dbg !8256
  %6 = load i8, i8* %flag, align 1, !dbg !8256
  %conv = zext i8 %6 to i32, !dbg !8253
  %and = and i32 %conv, 1, !dbg !8257
  %cmp = icmp ne i32 %and, 0, !dbg !8258
  %conv1 = zext i1 %cmp to i32, !dbg !8258
  %conv2 = trunc i32 %conv1 to i8, !dbg !8259
  store i8 %conv2, i8* %smoothnormal, align 1, !dbg !8252
  %7 = load %struct.SGLSLMeshToTangent*, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8260
  %precomputedLoopNormals = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %7, i32 0, i32 1, !dbg !8262
  %8 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %precomputedLoopNormals, align 8, !dbg !8262
  %tobool = icmp ne [4 x [3 x i16]]* %8, null, !dbg !8260
  br i1 %tobool, label %if.then, label %if.else, !dbg !8263

if.then:                                          ; preds = %entry
  %9 = load float*, float** %r_no.addr, align 8, !dbg !8264
  %10 = load %struct.SGLSLMeshToTangent*, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8266
  %precomputedLoopNormals3 = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %10, i32 0, i32 1, !dbg !8267
  %11 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %precomputedLoopNormals3, align 8, !dbg !8267
  %12 = load i32, i32* %face_num.addr, align 4, !dbg !8268
  %idxprom4 = sext i32 %12 to i64, !dbg !8266
  %arrayidx5 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %11, i64 %idxprom4, !dbg !8266
  %13 = load i32, i32* %vert_index.addr, align 4, !dbg !8269
  %idxprom6 = sext i32 %13 to i64, !dbg !8266
  %arrayidx7 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx5, i64 0, i64 %idxprom6, !dbg !8266
  %arraydecay = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx7, i64 0, i64 0, !dbg !8266
  call void @normal_short_to_float_v3(float* %9, i16* %arraydecay), !dbg !8270
  br label %if.end57, !dbg !8271

if.else:                                          ; preds = %entry
  %14 = load i8, i8* %smoothnormal, align 1, !dbg !8272
  %tobool8 = icmp ne i8 %14, 0, !dbg !8272
  br i1 %tobool8, label %if.else44, label %if.then9, !dbg !8274

if.then9:                                         ; preds = %if.else
  %15 = load %struct.SGLSLMeshToTangent*, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8275
  %precomputedFaceNormals = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %15, i32 0, i32 0, !dbg !8278
  %16 = load [3 x float]*, [3 x float]** %precomputedFaceNormals, align 8, !dbg !8278
  %tobool10 = icmp ne [3 x float]* %16, null, !dbg !8275
  br i1 %tobool10, label %if.then11, label %if.else16, !dbg !8279

if.then11:                                        ; preds = %if.then9
  %17 = load float*, float** %r_no.addr, align 8, !dbg !8280
  %18 = load %struct.SGLSLMeshToTangent*, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8282
  %precomputedFaceNormals12 = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %18, i32 0, i32 0, !dbg !8283
  %19 = load [3 x float]*, [3 x float]** %precomputedFaceNormals12, align 8, !dbg !8283
  %20 = load i32, i32* %face_num.addr, align 4, !dbg !8284
  %idxprom13 = sext i32 %20 to i64, !dbg !8282
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %19, i64 %idxprom13, !dbg !8282
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx14, i64 0, i64 0, !dbg !8282
  call void @copy_v3_v3(float* %17, float* %arraydecay15), !dbg !8285
  br label %if.end43, !dbg !8286

if.else16:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !8287, metadata !DIExpression()), !dbg !8289
  %21 = load %struct.SGLSLMeshToTangent*, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8290
  %mface17 = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %21, i32 0, i32 3, !dbg !8291
  %22 = load %struct.MFace*, %struct.MFace** %mface17, align 8, !dbg !8291
  %23 = load i32, i32* %face_num.addr, align 4, !dbg !8292
  %idxprom18 = sext i32 %23 to i64, !dbg !8290
  %arrayidx19 = getelementptr inbounds %struct.MFace, %struct.MFace* %22, i64 %idxprom18, !dbg !8290
  store %struct.MFace* %arrayidx19, %struct.MFace** %mf, align 8, !dbg !8289
  call void @llvm.dbg.declare(metadata float** %p0, metadata !8293, metadata !DIExpression()), !dbg !8294
  %24 = load %struct.SGLSLMeshToTangent*, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8295
  %mvert = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %24, i32 0, i32 4, !dbg !8296
  %25 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8296
  %26 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8297
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %26, i32 0, i32 0, !dbg !8298
  %27 = load i32, i32* %v1, align 4, !dbg !8298
  %idxprom20 = zext i32 %27 to i64, !dbg !8295
  %arrayidx21 = getelementptr inbounds %struct.MVert, %struct.MVert* %25, i64 %idxprom20, !dbg !8295
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx21, i32 0, i32 0, !dbg !8299
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !8295
  store float* %arraydecay22, float** %p0, align 8, !dbg !8294
  call void @llvm.dbg.declare(metadata float** %p1, metadata !8300, metadata !DIExpression()), !dbg !8301
  %28 = load %struct.SGLSLMeshToTangent*, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8302
  %mvert23 = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %28, i32 0, i32 4, !dbg !8303
  %29 = load %struct.MVert*, %struct.MVert** %mvert23, align 8, !dbg !8303
  %30 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8304
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %30, i32 0, i32 1, !dbg !8305
  %31 = load i32, i32* %v2, align 4, !dbg !8305
  %idxprom24 = zext i32 %31 to i64, !dbg !8302
  %arrayidx25 = getelementptr inbounds %struct.MVert, %struct.MVert* %29, i64 %idxprom24, !dbg !8302
  %co26 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx25, i32 0, i32 0, !dbg !8306
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %co26, i64 0, i64 0, !dbg !8302
  store float* %arraydecay27, float** %p1, align 8, !dbg !8301
  call void @llvm.dbg.declare(metadata float** %p2, metadata !8307, metadata !DIExpression()), !dbg !8308
  %32 = load %struct.SGLSLMeshToTangent*, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8309
  %mvert28 = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %32, i32 0, i32 4, !dbg !8310
  %33 = load %struct.MVert*, %struct.MVert** %mvert28, align 8, !dbg !8310
  %34 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8311
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %34, i32 0, i32 2, !dbg !8312
  %35 = load i32, i32* %v3, align 4, !dbg !8312
  %idxprom29 = zext i32 %35 to i64, !dbg !8309
  %arrayidx30 = getelementptr inbounds %struct.MVert, %struct.MVert* %33, i64 %idxprom29, !dbg !8309
  %co31 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx30, i32 0, i32 0, !dbg !8313
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %co31, i64 0, i64 0, !dbg !8309
  store float* %arraydecay32, float** %p2, align 8, !dbg !8308
  %36 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8314
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %36, i32 0, i32 3, !dbg !8316
  %37 = load i32, i32* %v4, align 4, !dbg !8316
  %tobool33 = icmp ne i32 %37, 0, !dbg !8314
  br i1 %tobool33, label %if.then34, label %if.else41, !dbg !8317

if.then34:                                        ; preds = %if.else16
  call void @llvm.dbg.declare(metadata float** %p3, metadata !8318, metadata !DIExpression()), !dbg !8320
  %38 = load %struct.SGLSLMeshToTangent*, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8321
  %mvert35 = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %38, i32 0, i32 4, !dbg !8322
  %39 = load %struct.MVert*, %struct.MVert** %mvert35, align 8, !dbg !8322
  %40 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8323
  %v436 = getelementptr inbounds %struct.MFace, %struct.MFace* %40, i32 0, i32 3, !dbg !8324
  %41 = load i32, i32* %v436, align 4, !dbg !8324
  %idxprom37 = zext i32 %41 to i64, !dbg !8321
  %arrayidx38 = getelementptr inbounds %struct.MVert, %struct.MVert* %39, i64 %idxprom37, !dbg !8321
  %co39 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx38, i32 0, i32 0, !dbg !8325
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %co39, i64 0, i64 0, !dbg !8321
  store float* %arraydecay40, float** %p3, align 8, !dbg !8320
  %42 = load float*, float** %r_no.addr, align 8, !dbg !8326
  %43 = load float*, float** %p0, align 8, !dbg !8327
  %44 = load float*, float** %p1, align 8, !dbg !8328
  %45 = load float*, float** %p2, align 8, !dbg !8329
  %46 = load float*, float** %p3, align 8, !dbg !8330
  %call = call float @normal_quad_v3(float* %42, float* %43, float* %44, float* %45, float* %46), !dbg !8331
  br label %if.end, !dbg !8332

if.else41:                                        ; preds = %if.else16
  %47 = load float*, float** %r_no.addr, align 8, !dbg !8333
  %48 = load float*, float** %p0, align 8, !dbg !8335
  %49 = load float*, float** %p1, align 8, !dbg !8336
  %50 = load float*, float** %p2, align 8, !dbg !8337
  %call42 = call float @normal_tri_v3(float* %47, float* %48, float* %49, float* %50), !dbg !8338
  br label %if.end

if.end:                                           ; preds = %if.else41, %if.then34
  br label %if.end43

if.end43:                                         ; preds = %if.end, %if.then11
  br label %if.end56, !dbg !8339

if.else44:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i16** %no, metadata !8340, metadata !DIExpression()), !dbg !8342
  %51 = load %struct.SGLSLMeshToTangent*, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8343
  %mvert45 = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %51, i32 0, i32 4, !dbg !8344
  %52 = load %struct.MVert*, %struct.MVert** %mvert45, align 8, !dbg !8344
  %53 = load %struct.SGLSLMeshToTangent*, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8345
  %mface46 = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %53, i32 0, i32 3, !dbg !8346
  %54 = load %struct.MFace*, %struct.MFace** %mface46, align 8, !dbg !8346
  %55 = load i32, i32* %face_num.addr, align 4, !dbg !8347
  %idxprom47 = sext i32 %55 to i64, !dbg !8345
  %arrayidx48 = getelementptr inbounds %struct.MFace, %struct.MFace* %54, i64 %idxprom47, !dbg !8345
  %v149 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx48, i32 0, i32 0, !dbg !8348
  %56 = load i32, i32* %vert_index.addr, align 4, !dbg !8349
  %idxprom50 = sext i32 %56 to i64, !dbg !8350
  %arrayidx51 = getelementptr inbounds i32, i32* %v149, i64 %idxprom50, !dbg !8350
  %57 = load i32, i32* %arrayidx51, align 4, !dbg !8350
  %idxprom52 = zext i32 %57 to i64, !dbg !8343
  %arrayidx53 = getelementptr inbounds %struct.MVert, %struct.MVert* %52, i64 %idxprom52, !dbg !8343
  %no54 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx53, i32 0, i32 1, !dbg !8351
  %arraydecay55 = getelementptr inbounds [3 x i16], [3 x i16]* %no54, i64 0, i64 0, !dbg !8343
  store i16* %arraydecay55, i16** %no, align 8, !dbg !8342
  %58 = load float*, float** %r_no.addr, align 8, !dbg !8352
  %59 = load i16*, i16** %no, align 8, !dbg !8353
  call void @normal_short_to_float_v3(float* %58, i16* %59), !dbg !8354
  br label %if.end56

if.end56:                                         ; preds = %if.else44, %if.end43
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then
  ret void, !dbg !8355
}

; Function Attrs: noinline nounwind uwtable
define internal void @SetTSpace(%struct.SMikkTSpaceContext* %pContext, float* %fvTangent, float %fSign, i32 %face_num, i32 %iVert) #0 !dbg !8356 {
entry:
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %fvTangent.addr = alloca float*, align 8
  %fSign.addr = alloca float, align 4
  %face_num.addr = alloca i32, align 4
  %iVert.addr = alloca i32, align 4
  %pMesh = alloca %struct.SGLSLMeshToTangent*, align 8
  %pRes = alloca float*, align 8
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !8357, metadata !DIExpression()), !dbg !8358
  store float* %fvTangent, float** %fvTangent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %fvTangent.addr, metadata !8359, metadata !DIExpression()), !dbg !8360
  store float %fSign, float* %fSign.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fSign.addr, metadata !8361, metadata !DIExpression()), !dbg !8362
  store i32 %face_num, i32* %face_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_num.addr, metadata !8363, metadata !DIExpression()), !dbg !8364
  store i32 %iVert, i32* %iVert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iVert.addr, metadata !8365, metadata !DIExpression()), !dbg !8366
  call void @llvm.dbg.declare(metadata %struct.SGLSLMeshToTangent** %pMesh, metadata !8367, metadata !DIExpression()), !dbg !8368
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !8369
  %m_pUserData = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %0, i32 0, i32 1, !dbg !8370
  %1 = load i8*, i8** %m_pUserData, align 8, !dbg !8370
  %2 = bitcast i8* %1 to %struct.SGLSLMeshToTangent*, !dbg !8371
  store %struct.SGLSLMeshToTangent* %2, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8368
  call void @llvm.dbg.declare(metadata float** %pRes, metadata !8372, metadata !DIExpression()), !dbg !8373
  %3 = load %struct.SGLSLMeshToTangent*, %struct.SGLSLMeshToTangent** %pMesh, align 8, !dbg !8374
  %tangent = getelementptr inbounds %struct.SGLSLMeshToTangent, %struct.SGLSLMeshToTangent* %3, i32 0, i32 6, !dbg !8375
  %4 = load [4 x float]*, [4 x float]** %tangent, align 8, !dbg !8375
  %5 = load i32, i32* %face_num.addr, align 4, !dbg !8376
  %mul = mul nsw i32 4, %5, !dbg !8377
  %6 = load i32, i32* %iVert.addr, align 4, !dbg !8378
  %add = add nsw i32 %mul, %6, !dbg !8379
  %idxprom = sext i32 %add to i64, !dbg !8374
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %4, i64 %idxprom, !dbg !8374
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !8374
  store float* %arraydecay, float** %pRes, align 8, !dbg !8373
  %7 = load float*, float** %pRes, align 8, !dbg !8380
  %8 = load float*, float** %fvTangent.addr, align 8, !dbg !8381
  call void @copy_v3_v3(float* %7, float* %8), !dbg !8382
  %9 = load float, float* %fSign.addr, align 4, !dbg !8383
  %10 = load float*, float** %pRes, align 8, !dbg !8384
  %arrayidx1 = getelementptr inbounds float, float* %10, i64 3, !dbg !8384
  store float %9, float* %arrayidx1, align 4, !dbg !8385
  ret void, !dbg !8386
}

declare dso_local i32 @genTangSpaceDefault(%struct.SMikkTSpaceContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_calc_auto_bump_scale(%struct.DerivedMesh* %dm) #0 !dbg !8387 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %totface = alloca i32, align 4
  %mvert = alloca %struct.MVert*, align 8
  %mface = alloca %struct.MFace*, align 8
  %mtface = alloca %struct.MTFace*, align 8
  %dsum = alloca double, align 8
  %nr_accumulated = alloca i32, align 4
  %f = alloca i32, align 4
  %verts = alloca [4 x float*], align 16
  %tex_coords = alloca [4 x float*], align 16
  %nr_verts = alloca i32, align 4
  %is_degenerate = alloca i8, align 1
  %i = alloca i32, align 4
  %prev_edge = alloca [2 x float], align 4
  %is_signed = alloca i8, align 1
  %cur_edge = alloca [2 x float], align 4
  %signed_area = alloca float, align 4
  %nr_tris_to_pile = alloca i32, align 4
  %offs = alloca i32, align 4
  %pos_len_diag0 = alloca float, align 4
  %pos_len_diag1 = alloca float, align 4
  %tex_len_diag0 = alloca float, align 4
  %tex_len_diag1 = alloca float, align 4
  %indices = alloca [6 x i32], align 16
  %t = alloca i32, align 4
  %f2x_area_uv = alloca float, align 4
  %p0 = alloca float*, align 8
  %p1 = alloca float*, align 8
  %p2 = alloca float*, align 8
  %edge_t0 = alloca [2 x float], align 4
  %edge_t1 = alloca [2 x float], align 4
  %norm = alloca [3 x float], align 4
  %v0 = alloca [3 x float], align 4
  %v1292 = alloca [3 x float], align 4
  %f2x_surf_area = alloca float, align 4
  %fsurf_ratio = alloca float, align 4
  %avg_area_ratio = alloca float, align 4
  %use_as_render_bump_scale = alloca float, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !8388, metadata !DIExpression()), !dbg !8389
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !8390, metadata !DIExpression()), !dbg !8391
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8392
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 25, !dbg !8393
  %1 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !8393
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8394
  %call = call i32 %1(%struct.DerivedMesh* %2), !dbg !8392
  store i32 %call, i32* %totface, align 4, !dbg !8391
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !8395, metadata !DIExpression()), !dbg !8396
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8397
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 31, !dbg !8398
  %4 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !8398
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8399
  %call1 = call %struct.MVert* %4(%struct.DerivedMesh* %5), !dbg !8397
  store %struct.MVert* %call1, %struct.MVert** %mvert, align 8, !dbg !8396
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !8400, metadata !DIExpression()), !dbg !8401
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8402
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 33, !dbg !8403
  %7 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !8403
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8404
  %call2 = call %struct.MFace* %7(%struct.DerivedMesh* %8), !dbg !8402
  store %struct.MFace* %call2, %struct.MFace** %mface, align 8, !dbg !8401
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtface, metadata !8405, metadata !DIExpression()), !dbg !8406
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8407
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 52, !dbg !8408
  %10 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !8408
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8409
  %call3 = call i8* %10(%struct.DerivedMesh* %11, i32 5), !dbg !8407
  %12 = bitcast i8* %call3 to %struct.MTFace*, !dbg !8407
  store %struct.MTFace* %12, %struct.MTFace** %mtface, align 8, !dbg !8406
  %13 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !8410
  %tobool = icmp ne %struct.MTFace* %13, null, !dbg !8410
  br i1 %tobool, label %if.then, label %if.else317, !dbg !8412

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata double* %dsum, metadata !8413, metadata !DIExpression()), !dbg !8415
  store double 0.000000e+00, double* %dsum, align 8, !dbg !8415
  call void @llvm.dbg.declare(metadata i32* %nr_accumulated, metadata !8416, metadata !DIExpression()), !dbg !8417
  store i32 0, i32* %nr_accumulated, align 4, !dbg !8417
  call void @llvm.dbg.declare(metadata i32* %f, metadata !8418, metadata !DIExpression()), !dbg !8419
  store i32 0, i32* %f, align 4, !dbg !8420
  br label %for.cond, !dbg !8422

for.cond:                                         ; preds = %for.inc307, %if.then
  %14 = load i32, i32* %f, align 4, !dbg !8423
  %15 = load i32, i32* %totface, align 4, !dbg !8425
  %cmp = icmp slt i32 %14, %15, !dbg !8426
  br i1 %cmp, label %for.body, label %for.end309, !dbg !8427

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [4 x float*]* %verts, metadata !8428, metadata !DIExpression()), !dbg !8432
  call void @llvm.dbg.declare(metadata [4 x float*]* %tex_coords, metadata !8433, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.declare(metadata i32* %nr_verts, metadata !8435, metadata !DIExpression()), !dbg !8436
  %16 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8437
  %17 = load i32, i32* %f, align 4, !dbg !8438
  %idxprom = sext i32 %17 to i64, !dbg !8437
  %arrayidx = getelementptr inbounds %struct.MFace, %struct.MFace* %16, i64 %idxprom, !dbg !8437
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx, i32 0, i32 3, !dbg !8439
  %18 = load i32, i32* %v4, align 4, !dbg !8439
  %cmp4 = icmp ne i32 %18, 0, !dbg !8440
  %19 = zext i1 %cmp4 to i64, !dbg !8437
  %cond = select i1 %cmp4, i32 4, i32 3, !dbg !8437
  store i32 %cond, i32* %nr_verts, align 4, !dbg !8436
  call void @llvm.dbg.declare(metadata i8* %is_degenerate, metadata !8441, metadata !DIExpression()), !dbg !8442
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8443, metadata !DIExpression()), !dbg !8444
  %20 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8445
  %21 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8446
  %22 = load i32, i32* %f, align 4, !dbg !8447
  %idxprom5 = sext i32 %22 to i64, !dbg !8446
  %arrayidx6 = getelementptr inbounds %struct.MFace, %struct.MFace* %21, i64 %idxprom5, !dbg !8446
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx6, i32 0, i32 0, !dbg !8448
  %23 = load i32, i32* %v1, align 4, !dbg !8448
  %idxprom7 = zext i32 %23 to i64, !dbg !8445
  %arrayidx8 = getelementptr inbounds %struct.MVert, %struct.MVert* %20, i64 %idxprom7, !dbg !8445
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx8, i32 0, i32 0, !dbg !8449
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !8445
  %arrayidx9 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 0, !dbg !8450
  store float* %arraydecay, float** %arrayidx9, align 16, !dbg !8451
  %24 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8452
  %25 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8453
  %26 = load i32, i32* %f, align 4, !dbg !8454
  %idxprom10 = sext i32 %26 to i64, !dbg !8453
  %arrayidx11 = getelementptr inbounds %struct.MFace, %struct.MFace* %25, i64 %idxprom10, !dbg !8453
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx11, i32 0, i32 1, !dbg !8455
  %27 = load i32, i32* %v2, align 4, !dbg !8455
  %idxprom12 = zext i32 %27 to i64, !dbg !8452
  %arrayidx13 = getelementptr inbounds %struct.MVert, %struct.MVert* %24, i64 %idxprom12, !dbg !8452
  %co14 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx13, i32 0, i32 0, !dbg !8456
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %co14, i64 0, i64 0, !dbg !8452
  %arrayidx16 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 1, !dbg !8457
  store float* %arraydecay15, float** %arrayidx16, align 8, !dbg !8458
  %28 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8459
  %29 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8460
  %30 = load i32, i32* %f, align 4, !dbg !8461
  %idxprom17 = sext i32 %30 to i64, !dbg !8460
  %arrayidx18 = getelementptr inbounds %struct.MFace, %struct.MFace* %29, i64 %idxprom17, !dbg !8460
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx18, i32 0, i32 2, !dbg !8462
  %31 = load i32, i32* %v3, align 4, !dbg !8462
  %idxprom19 = zext i32 %31 to i64, !dbg !8459
  %arrayidx20 = getelementptr inbounds %struct.MVert, %struct.MVert* %28, i64 %idxprom19, !dbg !8459
  %co21 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx20, i32 0, i32 0, !dbg !8463
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %co21, i64 0, i64 0, !dbg !8459
  %arrayidx23 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 2, !dbg !8464
  store float* %arraydecay22, float** %arrayidx23, align 16, !dbg !8465
  %32 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !8466
  %33 = load i32, i32* %f, align 4, !dbg !8467
  %idxprom24 = sext i32 %33 to i64, !dbg !8466
  %arrayidx25 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %32, i64 %idxprom24, !dbg !8466
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx25, i32 0, i32 0, !dbg !8468
  %arrayidx26 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 0, !dbg !8466
  %arraydecay27 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx26, i64 0, i64 0, !dbg !8466
  %arrayidx28 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 0, !dbg !8469
  store float* %arraydecay27, float** %arrayidx28, align 16, !dbg !8470
  %34 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !8471
  %35 = load i32, i32* %f, align 4, !dbg !8472
  %idxprom29 = sext i32 %35 to i64, !dbg !8471
  %arrayidx30 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %34, i64 %idxprom29, !dbg !8471
  %uv31 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx30, i32 0, i32 0, !dbg !8473
  %arrayidx32 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv31, i64 0, i64 1, !dbg !8471
  %arraydecay33 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx32, i64 0, i64 0, !dbg !8471
  %arrayidx34 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 1, !dbg !8474
  store float* %arraydecay33, float** %arrayidx34, align 8, !dbg !8475
  %36 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !8476
  %37 = load i32, i32* %f, align 4, !dbg !8477
  %idxprom35 = sext i32 %37 to i64, !dbg !8476
  %arrayidx36 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %36, i64 %idxprom35, !dbg !8476
  %uv37 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx36, i32 0, i32 0, !dbg !8478
  %arrayidx38 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv37, i64 0, i64 2, !dbg !8476
  %arraydecay39 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx38, i64 0, i64 0, !dbg !8476
  %arrayidx40 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 2, !dbg !8479
  store float* %arraydecay39, float** %arrayidx40, align 16, !dbg !8480
  %38 = load i32, i32* %nr_verts, align 4, !dbg !8481
  %cmp41 = icmp eq i32 %38, 4, !dbg !8483
  br i1 %cmp41, label %if.then42, label %if.end, !dbg !8484

if.then42:                                        ; preds = %for.body
  %39 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8485
  %40 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8487
  %41 = load i32, i32* %f, align 4, !dbg !8488
  %idxprom43 = sext i32 %41 to i64, !dbg !8487
  %arrayidx44 = getelementptr inbounds %struct.MFace, %struct.MFace* %40, i64 %idxprom43, !dbg !8487
  %v445 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx44, i32 0, i32 3, !dbg !8489
  %42 = load i32, i32* %v445, align 4, !dbg !8489
  %idxprom46 = zext i32 %42 to i64, !dbg !8485
  %arrayidx47 = getelementptr inbounds %struct.MVert, %struct.MVert* %39, i64 %idxprom46, !dbg !8485
  %co48 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx47, i32 0, i32 0, !dbg !8490
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %co48, i64 0, i64 0, !dbg !8485
  %arrayidx50 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 3, !dbg !8491
  store float* %arraydecay49, float** %arrayidx50, align 8, !dbg !8492
  %43 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !8493
  %44 = load i32, i32* %f, align 4, !dbg !8494
  %idxprom51 = sext i32 %44 to i64, !dbg !8493
  %arrayidx52 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %43, i64 %idxprom51, !dbg !8493
  %uv53 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx52, i32 0, i32 0, !dbg !8495
  %arrayidx54 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv53, i64 0, i64 3, !dbg !8493
  %arraydecay55 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx54, i64 0, i64 0, !dbg !8493
  %arrayidx56 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 3, !dbg !8496
  store float* %arraydecay55, float** %arrayidx56, align 8, !dbg !8497
  br label %if.end, !dbg !8498

if.end:                                           ; preds = %if.then42, %for.body
  store i8 0, i8* %is_degenerate, align 1, !dbg !8499
  %arrayidx57 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 0, !dbg !8500
  %45 = load float*, float** %arrayidx57, align 16, !dbg !8500
  %arrayidx58 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 1, !dbg !8502
  %46 = load float*, float** %arrayidx58, align 8, !dbg !8502
  %call59 = call zeroext i8 @equals_v3v3(float* %45, float* %46), !dbg !8503
  %conv = zext i8 %call59 to i32, !dbg !8503
  %tobool60 = icmp ne i32 %conv, 0, !dbg !8503
  br i1 %tobool60, label %if.then90, label %lor.lhs.false, !dbg !8504

lor.lhs.false:                                    ; preds = %if.end
  %arrayidx61 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 0, !dbg !8505
  %47 = load float*, float** %arrayidx61, align 16, !dbg !8505
  %arrayidx62 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 2, !dbg !8506
  %48 = load float*, float** %arrayidx62, align 16, !dbg !8506
  %call63 = call zeroext i8 @equals_v3v3(float* %47, float* %48), !dbg !8507
  %conv64 = zext i8 %call63 to i32, !dbg !8507
  %tobool65 = icmp ne i32 %conv64, 0, !dbg !8507
  br i1 %tobool65, label %if.then90, label %lor.lhs.false66, !dbg !8508

lor.lhs.false66:                                  ; preds = %lor.lhs.false
  %arrayidx67 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 1, !dbg !8509
  %49 = load float*, float** %arrayidx67, align 8, !dbg !8509
  %arrayidx68 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 2, !dbg !8510
  %50 = load float*, float** %arrayidx68, align 16, !dbg !8510
  %call69 = call zeroext i8 @equals_v3v3(float* %49, float* %50), !dbg !8511
  %conv70 = zext i8 %call69 to i32, !dbg !8511
  %tobool71 = icmp ne i32 %conv70, 0, !dbg !8511
  br i1 %tobool71, label %if.then90, label %lor.lhs.false72, !dbg !8512

lor.lhs.false72:                                  ; preds = %lor.lhs.false66
  %arrayidx73 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 0, !dbg !8513
  %51 = load float*, float** %arrayidx73, align 16, !dbg !8513
  %arrayidx74 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 1, !dbg !8514
  %52 = load float*, float** %arrayidx74, align 8, !dbg !8514
  %call75 = call zeroext i8 @equals_v2v2(float* %51, float* %52), !dbg !8515
  %conv76 = zext i8 %call75 to i32, !dbg !8515
  %tobool77 = icmp ne i32 %conv76, 0, !dbg !8515
  br i1 %tobool77, label %if.then90, label %lor.lhs.false78, !dbg !8516

lor.lhs.false78:                                  ; preds = %lor.lhs.false72
  %arrayidx79 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 0, !dbg !8517
  %53 = load float*, float** %arrayidx79, align 16, !dbg !8517
  %arrayidx80 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 2, !dbg !8518
  %54 = load float*, float** %arrayidx80, align 16, !dbg !8518
  %call81 = call zeroext i8 @equals_v2v2(float* %53, float* %54), !dbg !8519
  %conv82 = zext i8 %call81 to i32, !dbg !8519
  %tobool83 = icmp ne i32 %conv82, 0, !dbg !8519
  br i1 %tobool83, label %if.then90, label %lor.lhs.false84, !dbg !8520

lor.lhs.false84:                                  ; preds = %lor.lhs.false78
  %arrayidx85 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 1, !dbg !8521
  %55 = load float*, float** %arrayidx85, align 8, !dbg !8521
  %arrayidx86 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 2, !dbg !8522
  %56 = load float*, float** %arrayidx86, align 16, !dbg !8522
  %call87 = call zeroext i8 @equals_v2v2(float* %55, float* %56), !dbg !8523
  %conv88 = zext i8 %call87 to i32, !dbg !8523
  %tobool89 = icmp ne i32 %conv88, 0, !dbg !8523
  br i1 %tobool89, label %if.then90, label %if.end91, !dbg !8524

if.then90:                                        ; preds = %lor.lhs.false84, %lor.lhs.false78, %lor.lhs.false72, %lor.lhs.false66, %lor.lhs.false, %if.end
  store i8 1, i8* %is_degenerate, align 1, !dbg !8525
  br label %if.end91, !dbg !8527

if.end91:                                         ; preds = %if.then90, %lor.lhs.false84
  %57 = load i8, i8* %is_degenerate, align 1, !dbg !8528
  %conv92 = zext i8 %57 to i32, !dbg !8528
  %cmp93 = icmp eq i32 %conv92, 0, !dbg !8530
  br i1 %cmp93, label %land.lhs.true, label %if.end182, !dbg !8531

land.lhs.true:                                    ; preds = %if.end91
  %58 = load i32, i32* %nr_verts, align 4, !dbg !8532
  %cmp95 = icmp eq i32 %58, 4, !dbg !8533
  br i1 %cmp95, label %if.then97, label %if.end182, !dbg !8534

if.then97:                                        ; preds = %land.lhs.true
  %arrayidx98 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 3, !dbg !8535
  %59 = load float*, float** %arrayidx98, align 8, !dbg !8535
  %arrayidx99 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 0, !dbg !8538
  %60 = load float*, float** %arrayidx99, align 16, !dbg !8538
  %call100 = call zeroext i8 @equals_v3v3(float* %59, float* %60), !dbg !8539
  %conv101 = zext i8 %call100 to i32, !dbg !8539
  %tobool102 = icmp ne i32 %conv101, 0, !dbg !8539
  br i1 %tobool102, label %if.then133, label %lor.lhs.false103, !dbg !8540

lor.lhs.false103:                                 ; preds = %if.then97
  %arrayidx104 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 3, !dbg !8541
  %61 = load float*, float** %arrayidx104, align 8, !dbg !8541
  %arrayidx105 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 1, !dbg !8542
  %62 = load float*, float** %arrayidx105, align 8, !dbg !8542
  %call106 = call zeroext i8 @equals_v3v3(float* %61, float* %62), !dbg !8543
  %conv107 = zext i8 %call106 to i32, !dbg !8543
  %tobool108 = icmp ne i32 %conv107, 0, !dbg !8543
  br i1 %tobool108, label %if.then133, label %lor.lhs.false109, !dbg !8544

lor.lhs.false109:                                 ; preds = %lor.lhs.false103
  %arrayidx110 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 3, !dbg !8545
  %63 = load float*, float** %arrayidx110, align 8, !dbg !8545
  %arrayidx111 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 2, !dbg !8546
  %64 = load float*, float** %arrayidx111, align 16, !dbg !8546
  %call112 = call zeroext i8 @equals_v3v3(float* %63, float* %64), !dbg !8547
  %conv113 = zext i8 %call112 to i32, !dbg !8547
  %tobool114 = icmp ne i32 %conv113, 0, !dbg !8547
  br i1 %tobool114, label %if.then133, label %lor.lhs.false115, !dbg !8548

lor.lhs.false115:                                 ; preds = %lor.lhs.false109
  %arrayidx116 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 3, !dbg !8549
  %65 = load float*, float** %arrayidx116, align 8, !dbg !8549
  %arrayidx117 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 0, !dbg !8550
  %66 = load float*, float** %arrayidx117, align 16, !dbg !8550
  %call118 = call zeroext i8 @equals_v2v2(float* %65, float* %66), !dbg !8551
  %conv119 = zext i8 %call118 to i32, !dbg !8551
  %tobool120 = icmp ne i32 %conv119, 0, !dbg !8551
  br i1 %tobool120, label %if.then133, label %lor.lhs.false121, !dbg !8552

lor.lhs.false121:                                 ; preds = %lor.lhs.false115
  %arrayidx122 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 3, !dbg !8553
  %67 = load float*, float** %arrayidx122, align 8, !dbg !8553
  %arrayidx123 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 1, !dbg !8554
  %68 = load float*, float** %arrayidx123, align 8, !dbg !8554
  %call124 = call zeroext i8 @equals_v2v2(float* %67, float* %68), !dbg !8555
  %conv125 = zext i8 %call124 to i32, !dbg !8555
  %tobool126 = icmp ne i32 %conv125, 0, !dbg !8555
  br i1 %tobool126, label %if.then133, label %lor.lhs.false127, !dbg !8556

lor.lhs.false127:                                 ; preds = %lor.lhs.false121
  %arrayidx128 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 3, !dbg !8557
  %69 = load float*, float** %arrayidx128, align 8, !dbg !8557
  %arrayidx129 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 2, !dbg !8558
  %70 = load float*, float** %arrayidx129, align 16, !dbg !8558
  %call130 = call zeroext i8 @equals_v2v2(float* %69, float* %70), !dbg !8559
  %conv131 = zext i8 %call130 to i32, !dbg !8559
  %tobool132 = icmp ne i32 %conv131, 0, !dbg !8559
  br i1 %tobool132, label %if.then133, label %if.end134, !dbg !8560

if.then133:                                       ; preds = %lor.lhs.false127, %lor.lhs.false121, %lor.lhs.false115, %lor.lhs.false109, %lor.lhs.false103, %if.then97
  store i8 1, i8* %is_degenerate, align 1, !dbg !8561
  br label %if.end134, !dbg !8563

if.end134:                                        ; preds = %if.then133, %lor.lhs.false127
  %71 = load i8, i8* %is_degenerate, align 1, !dbg !8564
  %conv135 = zext i8 %71 to i32, !dbg !8564
  %cmp136 = icmp eq i32 %conv135, 0, !dbg !8566
  br i1 %cmp136, label %if.then138, label %if.end181, !dbg !8567

if.then138:                                       ; preds = %if.end134
  call void @llvm.dbg.declare(metadata [2 x float]* %prev_edge, metadata !8568, metadata !DIExpression()), !dbg !8570
  call void @llvm.dbg.declare(metadata i8* %is_signed, metadata !8571, metadata !DIExpression()), !dbg !8572
  store i8 0, i8* %is_signed, align 1, !dbg !8572
  %arraydecay139 = getelementptr inbounds [2 x float], [2 x float]* %prev_edge, i64 0, i64 0, !dbg !8573
  %arrayidx140 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 0, !dbg !8574
  %72 = load float*, float** %arrayidx140, align 16, !dbg !8574
  %arrayidx141 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 3, !dbg !8575
  %73 = load float*, float** %arrayidx141, align 8, !dbg !8575
  call void @sub_v2_v2v2(float* %arraydecay139, float* %72, float* %73), !dbg !8576
  store i32 0, i32* %i, align 4, !dbg !8577
  br label %while.cond, !dbg !8578

while.cond:                                       ; preds = %if.end180, %if.then138
  %74 = load i8, i8* %is_degenerate, align 1, !dbg !8579
  %conv142 = zext i8 %74 to i32, !dbg !8579
  %cmp143 = icmp eq i32 %conv142, 0, !dbg !8580
  br i1 %cmp143, label %land.rhs, label %land.end, !dbg !8581

land.rhs:                                         ; preds = %while.cond
  %75 = load i32, i32* %i, align 4, !dbg !8582
  %cmp145 = icmp slt i32 %75, 4, !dbg !8583
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %76 = phi i1 [ false, %while.cond ], [ %cmp145, %land.rhs ], !dbg !8584
  br i1 %76, label %while.body, label %while.end, !dbg !8578

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata [2 x float]* %cur_edge, metadata !8585, metadata !DIExpression()), !dbg !8587
  call void @llvm.dbg.declare(metadata float* %signed_area, metadata !8588, metadata !DIExpression()), !dbg !8589
  %arraydecay147 = getelementptr inbounds [2 x float], [2 x float]* %cur_edge, i64 0, i64 0, !dbg !8590
  %77 = load i32, i32* %i, align 4, !dbg !8591
  %add = add nsw i32 %77, 1, !dbg !8592
  %and = and i32 %add, 3, !dbg !8593
  %idxprom148 = sext i32 %and to i64, !dbg !8594
  %arrayidx149 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 %idxprom148, !dbg !8594
  %78 = load float*, float** %arrayidx149, align 8, !dbg !8594
  %79 = load i32, i32* %i, align 4, !dbg !8595
  %idxprom150 = sext i32 %79 to i64, !dbg !8596
  %arrayidx151 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 %idxprom150, !dbg !8596
  %80 = load float*, float** %arrayidx151, align 8, !dbg !8596
  call void @sub_v2_v2v2(float* %arraydecay147, float* %78, float* %80), !dbg !8597
  %arrayidx152 = getelementptr inbounds [2 x float], [2 x float]* %prev_edge, i64 0, i64 0, !dbg !8598
  %81 = load float, float* %arrayidx152, align 4, !dbg !8598
  %arrayidx153 = getelementptr inbounds [2 x float], [2 x float]* %cur_edge, i64 0, i64 1, !dbg !8599
  %82 = load float, float* %arrayidx153, align 4, !dbg !8599
  %mul = fmul float %81, %82, !dbg !8600
  %arrayidx154 = getelementptr inbounds [2 x float], [2 x float]* %prev_edge, i64 0, i64 1, !dbg !8601
  %83 = load float, float* %arrayidx154, align 4, !dbg !8601
  %arrayidx155 = getelementptr inbounds [2 x float], [2 x float]* %cur_edge, i64 0, i64 0, !dbg !8602
  %84 = load float, float* %arrayidx155, align 4, !dbg !8602
  %mul156 = fmul float %83, %84, !dbg !8603
  %sub = fsub float %mul, %mul156, !dbg !8604
  store float %sub, float* %signed_area, align 4, !dbg !8605
  %85 = load i32, i32* %i, align 4, !dbg !8606
  %cmp157 = icmp eq i32 %85, 0, !dbg !8608
  br i1 %cmp157, label %if.then159, label %if.else, !dbg !8609

if.then159:                                       ; preds = %while.body
  %86 = load float, float* %signed_area, align 4, !dbg !8610
  %cmp160 = fcmp olt float %86, 0.000000e+00, !dbg !8612
  %87 = zext i1 %cmp160 to i64, !dbg !8613
  %cond162 = select i1 %cmp160, i32 1, i32 0, !dbg !8613
  %conv163 = trunc i32 %cond162 to i8, !dbg !8613
  store i8 %conv163, i8* %is_signed, align 1, !dbg !8614
  br label %if.end173, !dbg !8615

if.else:                                          ; preds = %while.body
  %88 = load i8, i8* %is_signed, align 1, !dbg !8616
  %conv164 = zext i8 %88 to i32, !dbg !8616
  %cmp165 = icmp ne i32 %conv164, 0, !dbg !8618
  %conv166 = zext i1 %cmp165 to i32, !dbg !8618
  %89 = load float, float* %signed_area, align 4, !dbg !8619
  %cmp167 = fcmp olt float %89, 0.000000e+00, !dbg !8620
  %conv168 = zext i1 %cmp167 to i32, !dbg !8620
  %cmp169 = icmp ne i32 %conv166, %conv168, !dbg !8621
  br i1 %cmp169, label %if.then171, label %if.end172, !dbg !8622

if.then171:                                       ; preds = %if.else
  store i8 1, i8* %is_degenerate, align 1, !dbg !8623
  br label %if.end172, !dbg !8625

if.end172:                                        ; preds = %if.then171, %if.else
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %if.then159
  %90 = load i8, i8* %is_degenerate, align 1, !dbg !8626
  %conv174 = zext i8 %90 to i32, !dbg !8626
  %cmp175 = icmp eq i32 %conv174, 0, !dbg !8628
  br i1 %cmp175, label %if.then177, label %if.end180, !dbg !8629

if.then177:                                       ; preds = %if.end173
  %arraydecay178 = getelementptr inbounds [2 x float], [2 x float]* %prev_edge, i64 0, i64 0, !dbg !8630
  %arraydecay179 = getelementptr inbounds [2 x float], [2 x float]* %cur_edge, i64 0, i64 0, !dbg !8632
  call void @copy_v2_v2(float* %arraydecay178, float* %arraydecay179), !dbg !8633
  %91 = load i32, i32* %i, align 4, !dbg !8634
  %inc = add nsw i32 %91, 1, !dbg !8634
  store i32 %inc, i32* %i, align 4, !dbg !8634
  br label %if.end180, !dbg !8635

if.end180:                                        ; preds = %if.then177, %if.end173
  br label %while.cond, !dbg !8578, !llvm.loop !8636

while.end:                                        ; preds = %land.end
  br label %if.end181, !dbg !8638

if.end181:                                        ; preds = %while.end, %if.end134
  br label %if.end182, !dbg !8639

if.end182:                                        ; preds = %if.end181, %land.lhs.true, %if.end91
  %92 = load i8, i8* %is_degenerate, align 1, !dbg !8640
  %conv183 = zext i8 %92 to i32, !dbg !8640
  %cmp184 = icmp eq i32 %conv183, 0, !dbg !8642
  br i1 %cmp184, label %if.then186, label %if.end306, !dbg !8643

if.then186:                                       ; preds = %if.end182
  call void @llvm.dbg.declare(metadata i32* %nr_tris_to_pile, metadata !8644, metadata !DIExpression()), !dbg !8646
  store i32 0, i32* %nr_tris_to_pile, align 4, !dbg !8646
  call void @llvm.dbg.declare(metadata i32* %offs, metadata !8647, metadata !DIExpression()), !dbg !8648
  store i32 0, i32* %offs, align 4, !dbg !8648
  %93 = load i32, i32* %nr_verts, align 4, !dbg !8649
  %cmp187 = icmp eq i32 %93, 4, !dbg !8651
  br i1 %cmp187, label %if.then189, label %if.end215, !dbg !8652

if.then189:                                       ; preds = %if.then186
  call void @llvm.dbg.declare(metadata float* %pos_len_diag0, metadata !8653, metadata !DIExpression()), !dbg !8655
  call void @llvm.dbg.declare(metadata float* %pos_len_diag1, metadata !8656, metadata !DIExpression()), !dbg !8657
  %arrayidx190 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 2, !dbg !8658
  %94 = load float*, float** %arrayidx190, align 16, !dbg !8658
  %arrayidx191 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 0, !dbg !8659
  %95 = load float*, float** %arrayidx191, align 16, !dbg !8659
  %call192 = call float @len_squared_v3v3(float* %94, float* %95), !dbg !8660
  store float %call192, float* %pos_len_diag0, align 4, !dbg !8661
  %arrayidx193 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 3, !dbg !8662
  %96 = load float*, float** %arrayidx193, align 8, !dbg !8662
  %arrayidx194 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 1, !dbg !8663
  %97 = load float*, float** %arrayidx194, align 8, !dbg !8663
  %call195 = call float @len_squared_v3v3(float* %96, float* %97), !dbg !8664
  store float %call195, float* %pos_len_diag1, align 4, !dbg !8665
  %98 = load float, float* %pos_len_diag1, align 4, !dbg !8666
  %99 = load float, float* %pos_len_diag0, align 4, !dbg !8668
  %cmp196 = fcmp olt float %98, %99, !dbg !8669
  br i1 %cmp196, label %if.then198, label %if.else199, !dbg !8670

if.then198:                                       ; preds = %if.then189
  store i32 1, i32* %offs, align 4, !dbg !8671
  br label %if.end214, !dbg !8673

if.else199:                                       ; preds = %if.then189
  %100 = load float, float* %pos_len_diag0, align 4, !dbg !8674
  %101 = load float, float* %pos_len_diag1, align 4, !dbg !8676
  %cmp200 = fcmp oeq float %100, %101, !dbg !8677
  br i1 %cmp200, label %if.then202, label %if.end213, !dbg !8678

if.then202:                                       ; preds = %if.else199
  call void @llvm.dbg.declare(metadata float* %tex_len_diag0, metadata !8679, metadata !DIExpression()), !dbg !8681
  call void @llvm.dbg.declare(metadata float* %tex_len_diag1, metadata !8682, metadata !DIExpression()), !dbg !8683
  %arrayidx203 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 2, !dbg !8684
  %102 = load float*, float** %arrayidx203, align 16, !dbg !8684
  %arrayidx204 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 0, !dbg !8685
  %103 = load float*, float** %arrayidx204, align 16, !dbg !8685
  %call205 = call float @len_squared_v2v2(float* %102, float* %103), !dbg !8686
  store float %call205, float* %tex_len_diag0, align 4, !dbg !8687
  %arrayidx206 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 3, !dbg !8688
  %104 = load float*, float** %arrayidx206, align 8, !dbg !8688
  %arrayidx207 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 1, !dbg !8689
  %105 = load float*, float** %arrayidx207, align 8, !dbg !8689
  %call208 = call float @len_squared_v2v2(float* %104, float* %105), !dbg !8690
  store float %call208, float* %tex_len_diag1, align 4, !dbg !8691
  %106 = load float, float* %tex_len_diag1, align 4, !dbg !8692
  %107 = load float, float* %tex_len_diag0, align 4, !dbg !8694
  %cmp209 = fcmp olt float %106, %107, !dbg !8695
  br i1 %cmp209, label %if.then211, label %if.end212, !dbg !8696

if.then211:                                       ; preds = %if.then202
  store i32 1, i32* %offs, align 4, !dbg !8697
  br label %if.end212, !dbg !8699

if.end212:                                        ; preds = %if.then211, %if.then202
  br label %if.end213, !dbg !8700

if.end213:                                        ; preds = %if.end212, %if.else199
  br label %if.end214

if.end214:                                        ; preds = %if.end213, %if.then198
  br label %if.end215, !dbg !8701

if.end215:                                        ; preds = %if.end214, %if.then186
  %108 = load i32, i32* %nr_verts, align 4, !dbg !8702
  %sub216 = sub nsw i32 %108, 2, !dbg !8703
  store i32 %sub216, i32* %nr_tris_to_pile, align 4, !dbg !8704
  %109 = load i32, i32* %nr_tris_to_pile, align 4, !dbg !8705
  %cmp217 = icmp eq i32 %109, 1, !dbg !8707
  br i1 %cmp217, label %if.then222, label %lor.lhs.false219, !dbg !8708

lor.lhs.false219:                                 ; preds = %if.end215
  %110 = load i32, i32* %nr_tris_to_pile, align 4, !dbg !8709
  %cmp220 = icmp eq i32 %110, 2, !dbg !8710
  br i1 %cmp220, label %if.then222, label %if.end305, !dbg !8711

if.then222:                                       ; preds = %lor.lhs.false219, %if.end215
  call void @llvm.dbg.declare(metadata [6 x i32]* %indices, metadata !8712, metadata !DIExpression()), !dbg !8715
  %arrayinit.begin = getelementptr inbounds [6 x i32], [6 x i32]* %indices, i64 0, i64 0, !dbg !8716
  %111 = load i32, i32* %offs, align 4, !dbg !8717
  %add223 = add nsw i32 %111, 0, !dbg !8718
  store i32 %add223, i32* %arrayinit.begin, align 4, !dbg !8716
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !8716
  %112 = load i32, i32* %offs, align 4, !dbg !8719
  %add224 = add nsw i32 %112, 1, !dbg !8720
  store i32 %add224, i32* %arrayinit.element, align 4, !dbg !8716
  %arrayinit.element225 = getelementptr inbounds i32, i32* %arrayinit.element, i64 1, !dbg !8716
  %113 = load i32, i32* %offs, align 4, !dbg !8721
  %add226 = add nsw i32 %113, 2, !dbg !8722
  store i32 %add226, i32* %arrayinit.element225, align 4, !dbg !8716
  %arrayinit.element227 = getelementptr inbounds i32, i32* %arrayinit.element225, i64 1, !dbg !8716
  %114 = load i32, i32* %offs, align 4, !dbg !8723
  %add228 = add nsw i32 %114, 0, !dbg !8724
  store i32 %add228, i32* %arrayinit.element227, align 4, !dbg !8716
  %arrayinit.element229 = getelementptr inbounds i32, i32* %arrayinit.element227, i64 1, !dbg !8716
  %115 = load i32, i32* %offs, align 4, !dbg !8725
  %add230 = add nsw i32 %115, 2, !dbg !8726
  store i32 %add230, i32* %arrayinit.element229, align 4, !dbg !8716
  %arrayinit.element231 = getelementptr inbounds i32, i32* %arrayinit.element229, i64 1, !dbg !8716
  %116 = load i32, i32* %offs, align 4, !dbg !8727
  %add232 = add nsw i32 %116, 3, !dbg !8728
  %and233 = and i32 %add232, 3, !dbg !8729
  store i32 %and233, i32* %arrayinit.element231, align 4, !dbg !8716
  call void @llvm.dbg.declare(metadata i32* %t, metadata !8730, metadata !DIExpression()), !dbg !8731
  store i32 0, i32* %t, align 4, !dbg !8732
  br label %for.cond234, !dbg !8734

for.cond234:                                      ; preds = %for.inc, %if.then222
  %117 = load i32, i32* %t, align 4, !dbg !8735
  %118 = load i32, i32* %nr_tris_to_pile, align 4, !dbg !8737
  %cmp235 = icmp slt i32 %117, %118, !dbg !8738
  br i1 %cmp235, label %for.body237, label %for.end, !dbg !8739

for.body237:                                      ; preds = %for.cond234
  call void @llvm.dbg.declare(metadata float* %f2x_area_uv, metadata !8740, metadata !DIExpression()), !dbg !8742
  call void @llvm.dbg.declare(metadata float** %p0, metadata !8743, metadata !DIExpression()), !dbg !8744
  %119 = load i32, i32* %t, align 4, !dbg !8745
  %mul238 = mul nsw i32 %119, 3, !dbg !8746
  %add239 = add nsw i32 %mul238, 0, !dbg !8747
  %idxprom240 = sext i32 %add239 to i64, !dbg !8748
  %arrayidx241 = getelementptr inbounds [6 x i32], [6 x i32]* %indices, i64 0, i64 %idxprom240, !dbg !8748
  %120 = load i32, i32* %arrayidx241, align 4, !dbg !8748
  %idxprom242 = sext i32 %120 to i64, !dbg !8749
  %arrayidx243 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 %idxprom242, !dbg !8749
  %121 = load float*, float** %arrayidx243, align 8, !dbg !8749
  store float* %121, float** %p0, align 8, !dbg !8744
  call void @llvm.dbg.declare(metadata float** %p1, metadata !8750, metadata !DIExpression()), !dbg !8751
  %122 = load i32, i32* %t, align 4, !dbg !8752
  %mul244 = mul nsw i32 %122, 3, !dbg !8753
  %add245 = add nsw i32 %mul244, 1, !dbg !8754
  %idxprom246 = sext i32 %add245 to i64, !dbg !8755
  %arrayidx247 = getelementptr inbounds [6 x i32], [6 x i32]* %indices, i64 0, i64 %idxprom246, !dbg !8755
  %123 = load i32, i32* %arrayidx247, align 4, !dbg !8755
  %idxprom248 = sext i32 %123 to i64, !dbg !8756
  %arrayidx249 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 %idxprom248, !dbg !8756
  %124 = load float*, float** %arrayidx249, align 8, !dbg !8756
  store float* %124, float** %p1, align 8, !dbg !8751
  call void @llvm.dbg.declare(metadata float** %p2, metadata !8757, metadata !DIExpression()), !dbg !8758
  %125 = load i32, i32* %t, align 4, !dbg !8759
  %mul250 = mul nsw i32 %125, 3, !dbg !8760
  %add251 = add nsw i32 %mul250, 2, !dbg !8761
  %idxprom252 = sext i32 %add251 to i64, !dbg !8762
  %arrayidx253 = getelementptr inbounds [6 x i32], [6 x i32]* %indices, i64 0, i64 %idxprom252, !dbg !8762
  %126 = load i32, i32* %arrayidx253, align 4, !dbg !8762
  %idxprom254 = sext i32 %126 to i64, !dbg !8763
  %arrayidx255 = getelementptr inbounds [4 x float*], [4 x float*]* %verts, i64 0, i64 %idxprom254, !dbg !8763
  %127 = load float*, float** %arrayidx255, align 8, !dbg !8763
  store float* %127, float** %p2, align 8, !dbg !8758
  call void @llvm.dbg.declare(metadata [2 x float]* %edge_t0, metadata !8764, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.declare(metadata [2 x float]* %edge_t1, metadata !8766, metadata !DIExpression()), !dbg !8767
  %arraydecay256 = getelementptr inbounds [2 x float], [2 x float]* %edge_t0, i64 0, i64 0, !dbg !8768
  %128 = load i32, i32* %t, align 4, !dbg !8769
  %mul257 = mul nsw i32 %128, 3, !dbg !8770
  %add258 = add nsw i32 %mul257, 1, !dbg !8771
  %idxprom259 = sext i32 %add258 to i64, !dbg !8772
  %arrayidx260 = getelementptr inbounds [6 x i32], [6 x i32]* %indices, i64 0, i64 %idxprom259, !dbg !8772
  %129 = load i32, i32* %arrayidx260, align 4, !dbg !8772
  %idxprom261 = sext i32 %129 to i64, !dbg !8773
  %arrayidx262 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 %idxprom261, !dbg !8773
  %130 = load float*, float** %arrayidx262, align 8, !dbg !8773
  %131 = load i32, i32* %t, align 4, !dbg !8774
  %mul263 = mul nsw i32 %131, 3, !dbg !8775
  %add264 = add nsw i32 %mul263, 0, !dbg !8776
  %idxprom265 = sext i32 %add264 to i64, !dbg !8777
  %arrayidx266 = getelementptr inbounds [6 x i32], [6 x i32]* %indices, i64 0, i64 %idxprom265, !dbg !8777
  %132 = load i32, i32* %arrayidx266, align 4, !dbg !8777
  %idxprom267 = sext i32 %132 to i64, !dbg !8778
  %arrayidx268 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 %idxprom267, !dbg !8778
  %133 = load float*, float** %arrayidx268, align 8, !dbg !8778
  call void @sub_v2_v2v2(float* %arraydecay256, float* %130, float* %133), !dbg !8779
  %arraydecay269 = getelementptr inbounds [2 x float], [2 x float]* %edge_t1, i64 0, i64 0, !dbg !8780
  %134 = load i32, i32* %t, align 4, !dbg !8781
  %mul270 = mul nsw i32 %134, 3, !dbg !8782
  %add271 = add nsw i32 %mul270, 2, !dbg !8783
  %idxprom272 = sext i32 %add271 to i64, !dbg !8784
  %arrayidx273 = getelementptr inbounds [6 x i32], [6 x i32]* %indices, i64 0, i64 %idxprom272, !dbg !8784
  %135 = load i32, i32* %arrayidx273, align 4, !dbg !8784
  %idxprom274 = sext i32 %135 to i64, !dbg !8785
  %arrayidx275 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 %idxprom274, !dbg !8785
  %136 = load float*, float** %arrayidx275, align 8, !dbg !8785
  %137 = load i32, i32* %t, align 4, !dbg !8786
  %mul276 = mul nsw i32 %137, 3, !dbg !8787
  %add277 = add nsw i32 %mul276, 0, !dbg !8788
  %idxprom278 = sext i32 %add277 to i64, !dbg !8789
  %arrayidx279 = getelementptr inbounds [6 x i32], [6 x i32]* %indices, i64 0, i64 %idxprom278, !dbg !8789
  %138 = load i32, i32* %arrayidx279, align 4, !dbg !8789
  %idxprom280 = sext i32 %138 to i64, !dbg !8790
  %arrayidx281 = getelementptr inbounds [4 x float*], [4 x float*]* %tex_coords, i64 0, i64 %idxprom280, !dbg !8790
  %139 = load float*, float** %arrayidx281, align 8, !dbg !8790
  call void @sub_v2_v2v2(float* %arraydecay269, float* %136, float* %139), !dbg !8791
  %arrayidx282 = getelementptr inbounds [2 x float], [2 x float]* %edge_t0, i64 0, i64 0, !dbg !8792
  %140 = load float, float* %arrayidx282, align 4, !dbg !8792
  %arrayidx283 = getelementptr inbounds [2 x float], [2 x float]* %edge_t1, i64 0, i64 1, !dbg !8793
  %141 = load float, float* %arrayidx283, align 4, !dbg !8793
  %mul284 = fmul float %140, %141, !dbg !8794
  %arrayidx285 = getelementptr inbounds [2 x float], [2 x float]* %edge_t0, i64 0, i64 1, !dbg !8795
  %142 = load float, float* %arrayidx285, align 4, !dbg !8795
  %arrayidx286 = getelementptr inbounds [2 x float], [2 x float]* %edge_t1, i64 0, i64 0, !dbg !8796
  %143 = load float, float* %arrayidx286, align 4, !dbg !8796
  %mul287 = fmul float %142, %143, !dbg !8797
  %sub288 = fsub float %mul284, %mul287, !dbg !8798
  %144 = call float @llvm.fabs.f32(float %sub288), !dbg !8799
  store float %144, float* %f2x_area_uv, align 4, !dbg !8800
  %145 = load float, float* %f2x_area_uv, align 4, !dbg !8801
  %cmp289 = fcmp ogt float %145, 0x3E80000000000000, !dbg !8803
  br i1 %cmp289, label %if.then291, label %if.end303, !dbg !8804

if.then291:                                       ; preds = %for.body237
  call void @llvm.dbg.declare(metadata [3 x float]* %norm, metadata !8805, metadata !DIExpression()), !dbg !8807
  call void @llvm.dbg.declare(metadata [3 x float]* %v0, metadata !8808, metadata !DIExpression()), !dbg !8809
  call void @llvm.dbg.declare(metadata [3 x float]* %v1292, metadata !8810, metadata !DIExpression()), !dbg !8811
  call void @llvm.dbg.declare(metadata float* %f2x_surf_area, metadata !8812, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.declare(metadata float* %fsurf_ratio, metadata !8814, metadata !DIExpression()), !dbg !8815
  %arraydecay293 = getelementptr inbounds [3 x float], [3 x float]* %v0, i64 0, i64 0, !dbg !8816
  %146 = load float*, float** %p1, align 8, !dbg !8817
  %147 = load float*, float** %p0, align 8, !dbg !8818
  call void @sub_v3_v3v3(float* %arraydecay293, float* %146, float* %147), !dbg !8819
  %arraydecay294 = getelementptr inbounds [3 x float], [3 x float]* %v1292, i64 0, i64 0, !dbg !8820
  %148 = load float*, float** %p2, align 8, !dbg !8821
  %149 = load float*, float** %p0, align 8, !dbg !8822
  call void @sub_v3_v3v3(float* %arraydecay294, float* %148, float* %149), !dbg !8823
  %arraydecay295 = getelementptr inbounds [3 x float], [3 x float]* %norm, i64 0, i64 0, !dbg !8824
  %arraydecay296 = getelementptr inbounds [3 x float], [3 x float]* %v0, i64 0, i64 0, !dbg !8825
  %arraydecay297 = getelementptr inbounds [3 x float], [3 x float]* %v1292, i64 0, i64 0, !dbg !8826
  call void @cross_v3_v3v3(float* %arraydecay295, float* %arraydecay296, float* %arraydecay297), !dbg !8827
  %arraydecay298 = getelementptr inbounds [3 x float], [3 x float]* %norm, i64 0, i64 0, !dbg !8828
  %call299 = call float @len_v3(float* %arraydecay298), !dbg !8829
  store float %call299, float* %f2x_surf_area, align 4, !dbg !8830
  %150 = load float, float* %f2x_surf_area, align 4, !dbg !8831
  %151 = load float, float* %f2x_area_uv, align 4, !dbg !8832
  %div = fdiv float %150, %151, !dbg !8833
  store float %div, float* %fsurf_ratio, align 4, !dbg !8834
  %152 = load i32, i32* %nr_accumulated, align 4, !dbg !8835
  %inc300 = add nsw i32 %152, 1, !dbg !8835
  store i32 %inc300, i32* %nr_accumulated, align 4, !dbg !8835
  %153 = load float, float* %fsurf_ratio, align 4, !dbg !8836
  %conv301 = fpext float %153 to double, !dbg !8837
  %154 = load double, double* %dsum, align 8, !dbg !8838
  %add302 = fadd double %154, %conv301, !dbg !8838
  store double %add302, double* %dsum, align 8, !dbg !8838
  br label %if.end303, !dbg !8839

if.end303:                                        ; preds = %if.then291, %for.body237
  br label %for.inc, !dbg !8840

for.inc:                                          ; preds = %if.end303
  %155 = load i32, i32* %t, align 4, !dbg !8841
  %inc304 = add nsw i32 %155, 1, !dbg !8841
  store i32 %inc304, i32* %t, align 4, !dbg !8841
  br label %for.cond234, !dbg !8842, !llvm.loop !8843

for.end:                                          ; preds = %for.cond234
  br label %if.end305, !dbg !8845

if.end305:                                        ; preds = %for.end, %lor.lhs.false219
  br label %if.end306, !dbg !8846

if.end306:                                        ; preds = %if.end305, %if.end182
  br label %for.inc307, !dbg !8847

for.inc307:                                       ; preds = %if.end306
  %156 = load i32, i32* %f, align 4, !dbg !8848
  %inc308 = add nsw i32 %156, 1, !dbg !8848
  store i32 %inc308, i32* %f, align 4, !dbg !8848
  br label %for.cond, !dbg !8849, !llvm.loop !8850

for.end309:                                       ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %avg_area_ratio, metadata !8852, metadata !DIExpression()), !dbg !8854
  %157 = load i32, i32* %nr_accumulated, align 4, !dbg !8855
  %cmp310 = icmp sgt i32 %157, 0, !dbg !8856
  br i1 %cmp310, label %cond.true, label %cond.false, !dbg !8857

cond.true:                                        ; preds = %for.end309
  %158 = load double, double* %dsum, align 8, !dbg !8858
  %159 = load i32, i32* %nr_accumulated, align 4, !dbg !8859
  %conv312 = sitofp i32 %159 to double, !dbg !8859
  %div313 = fdiv double %158, %conv312, !dbg !8860
  %conv314 = fptrunc double %div313 to float, !dbg !8861
  br label %cond.end, !dbg !8857

cond.false:                                       ; preds = %for.end309
  br label %cond.end, !dbg !8857

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond315 = phi float [ %conv314, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !8857
  store float %cond315, float* %avg_area_ratio, align 4, !dbg !8854
  call void @llvm.dbg.declare(metadata float* %use_as_render_bump_scale, metadata !8862, metadata !DIExpression()), !dbg !8863
  %160 = load float, float* %avg_area_ratio, align 4, !dbg !8864
  %call316 = call float @sqrtf(float %160) #5, !dbg !8865
  store float %call316, float* %use_as_render_bump_scale, align 4, !dbg !8863
  %161 = load float, float* %use_as_render_bump_scale, align 4, !dbg !8866
  %162 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8867
  %auto_bump_scale = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %162, i32 0, i32 15, !dbg !8868
  store float %161, float* %auto_bump_scale, align 4, !dbg !8869
  br label %if.end319, !dbg !8870

if.else317:                                       ; preds = %entry
  %163 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8871
  %auto_bump_scale318 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %163, i32 0, i32 15, !dbg !8873
  store float 1.000000e+00, float* %auto_bump_scale318, align 4, !dbg !8874
  br label %if.end319

if.end319:                                        ; preds = %if.else317, %cond.end
  ret void, !dbg !8875
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @equals_v3v3(float* %v1, float* %v2) #0 !dbg !8876 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !8879, metadata !DIExpression()), !dbg !8880
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !8881, metadata !DIExpression()), !dbg !8882
  %0 = load float*, float** %v1.addr, align 8, !dbg !8883
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8883
  %1 = load float, float* %arrayidx, align 4, !dbg !8883
  %2 = load float*, float** %v2.addr, align 8, !dbg !8884
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8884
  %3 = load float, float* %arrayidx1, align 4, !dbg !8884
  %cmp = fcmp oeq float %1, %3, !dbg !8885
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !8886

land.lhs.true:                                    ; preds = %entry
  %4 = load float*, float** %v1.addr, align 8, !dbg !8887
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8887
  %5 = load float, float* %arrayidx2, align 4, !dbg !8887
  %6 = load float*, float** %v2.addr, align 8, !dbg !8888
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !8888
  %7 = load float, float* %arrayidx3, align 4, !dbg !8888
  %cmp4 = fcmp oeq float %5, %7, !dbg !8889
  br i1 %cmp4, label %land.rhs, label %land.end, !dbg !8890

land.rhs:                                         ; preds = %land.lhs.true
  %8 = load float*, float** %v1.addr, align 8, !dbg !8891
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !8891
  %9 = load float, float* %arrayidx5, align 4, !dbg !8891
  %10 = load float*, float** %v2.addr, align 8, !dbg !8892
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !8892
  %11 = load float, float* %arrayidx6, align 4, !dbg !8892
  %cmp7 = fcmp oeq float %9, %11, !dbg !8893
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %12 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp7, %land.rhs ], !dbg !8894
  %land.ext = zext i1 %12 to i32, !dbg !8890
  %conv = trunc i32 %land.ext to i8, !dbg !8895
  ret i8 %conv, !dbg !8896
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @equals_v2v2(float* %v1, float* %v2) #0 !dbg !8897 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !8898, metadata !DIExpression()), !dbg !8899
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !8900, metadata !DIExpression()), !dbg !8901
  %0 = load float*, float** %v1.addr, align 8, !dbg !8902
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8902
  %1 = load float, float* %arrayidx, align 4, !dbg !8902
  %2 = load float*, float** %v2.addr, align 8, !dbg !8903
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8903
  %3 = load float, float* %arrayidx1, align 4, !dbg !8903
  %cmp = fcmp oeq float %1, %3, !dbg !8904
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8905

land.rhs:                                         ; preds = %entry
  %4 = load float*, float** %v1.addr, align 8, !dbg !8906
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8906
  %5 = load float, float* %arrayidx2, align 4, !dbg !8906
  %6 = load float*, float** %v2.addr, align 8, !dbg !8907
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !8907
  %7 = load float, float* %arrayidx3, align 4, !dbg !8907
  %cmp4 = fcmp oeq float %5, %7, !dbg !8908
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp4, %land.rhs ], !dbg !8909
  %land.ext = zext i1 %8 to i32, !dbg !8905
  %conv = trunc i32 %land.ext to i8, !dbg !8910
  ret i8 %conv, !dbg !8911
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v2_v2v2(float* %r, float* %a, float* %b) #0 !dbg !8912 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8915, metadata !DIExpression()), !dbg !8916
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8917, metadata !DIExpression()), !dbg !8918
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8919, metadata !DIExpression()), !dbg !8920
  %0 = load float*, float** %a.addr, align 8, !dbg !8921
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8921
  %1 = load float, float* %arrayidx, align 4, !dbg !8921
  %2 = load float*, float** %b.addr, align 8, !dbg !8922
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8922
  %3 = load float, float* %arrayidx1, align 4, !dbg !8922
  %sub = fsub float %1, %3, !dbg !8923
  %4 = load float*, float** %r.addr, align 8, !dbg !8924
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !8924
  store float %sub, float* %arrayidx2, align 4, !dbg !8925
  %5 = load float*, float** %a.addr, align 8, !dbg !8926
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !8926
  %6 = load float, float* %arrayidx3, align 4, !dbg !8926
  %7 = load float*, float** %b.addr, align 8, !dbg !8927
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !8927
  %8 = load float, float* %arrayidx4, align 4, !dbg !8927
  %sub5 = fsub float %6, %8, !dbg !8928
  %9 = load float*, float** %r.addr, align 8, !dbg !8929
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !8929
  store float %sub5, float* %arrayidx6, align 4, !dbg !8930
  ret void, !dbg !8931
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2(float* %r, float* %a) #0 !dbg !8932 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8933, metadata !DIExpression()), !dbg !8934
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8935, metadata !DIExpression()), !dbg !8936
  %0 = load float*, float** %a.addr, align 8, !dbg !8937
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8937
  %1 = load float, float* %arrayidx, align 4, !dbg !8937
  %2 = load float*, float** %r.addr, align 8, !dbg !8938
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8938
  store float %1, float* %arrayidx1, align 4, !dbg !8939
  %3 = load float*, float** %a.addr, align 8, !dbg !8940
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !8940
  %4 = load float, float* %arrayidx2, align 4, !dbg !8940
  %5 = load float*, float** %r.addr, align 8, !dbg !8941
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !8941
  store float %4, float* %arrayidx3, align 4, !dbg !8942
  ret void, !dbg !8943
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v3v3(float* %a, float* %b) #0 !dbg !8944 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8947, metadata !DIExpression()), !dbg !8948
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8949, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !8951, metadata !DIExpression()), !dbg !8952
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !8953
  %0 = load float*, float** %b.addr, align 8, !dbg !8954
  %1 = load float*, float** %a.addr, align 8, !dbg !8955
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !8956
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !8957
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !8958
  %call = call float @dot_v3v3(float* %arraydecay1, float* %arraydecay2), !dbg !8959
  ret float %call, !dbg !8960
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v2v2(float* %a, float* %b) #0 !dbg !8961 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [2 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8962, metadata !DIExpression()), !dbg !8963
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8964, metadata !DIExpression()), !dbg !8965
  call void @llvm.dbg.declare(metadata [2 x float]* %d, metadata !8966, metadata !DIExpression()), !dbg !8967
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !8968
  %0 = load float*, float** %b.addr, align 8, !dbg !8969
  %1 = load float*, float** %a.addr, align 8, !dbg !8970
  call void @sub_v2_v2v2(float* %arraydecay, float* %0, float* %1), !dbg !8971
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !8972
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !8973
  %call = call float @dot_v2v2(float* %arraydecay1, float* %arraydecay2), !dbg !8974
  ret float %call, !dbg !8975
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !8976 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8977, metadata !DIExpression()), !dbg !8978
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8979, metadata !DIExpression()), !dbg !8980
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8981, metadata !DIExpression()), !dbg !8982
  %0 = load float*, float** %a.addr, align 8, !dbg !8983
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8983
  %1 = load float, float* %arrayidx, align 4, !dbg !8983
  %2 = load float*, float** %b.addr, align 8, !dbg !8984
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8984
  %3 = load float, float* %arrayidx1, align 4, !dbg !8984
  %sub = fsub float %1, %3, !dbg !8985
  %4 = load float*, float** %r.addr, align 8, !dbg !8986
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !8986
  store float %sub, float* %arrayidx2, align 4, !dbg !8987
  %5 = load float*, float** %a.addr, align 8, !dbg !8988
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !8988
  %6 = load float, float* %arrayidx3, align 4, !dbg !8988
  %7 = load float*, float** %b.addr, align 8, !dbg !8989
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !8989
  %8 = load float, float* %arrayidx4, align 4, !dbg !8989
  %sub5 = fsub float %6, %8, !dbg !8990
  %9 = load float*, float** %r.addr, align 8, !dbg !8991
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !8991
  store float %sub5, float* %arrayidx6, align 4, !dbg !8992
  %10 = load float*, float** %a.addr, align 8, !dbg !8993
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !8993
  %11 = load float, float* %arrayidx7, align 4, !dbg !8993
  %12 = load float*, float** %b.addr, align 8, !dbg !8994
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !8994
  %13 = load float, float* %arrayidx8, align 4, !dbg !8994
  %sub9 = fsub float %11, %13, !dbg !8995
  %14 = load float*, float** %r.addr, align 8, !dbg !8996
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !8996
  store float %sub9, float* %arrayidx10, align 4, !dbg !8997
  ret void, !dbg !8998
}

; Function Attrs: noinline nounwind uwtable
define internal void @cross_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !8999 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9000, metadata !DIExpression()), !dbg !9001
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9002, metadata !DIExpression()), !dbg !9003
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9004, metadata !DIExpression()), !dbg !9005
  %0 = load float*, float** %a.addr, align 8, !dbg !9006
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !9006
  %1 = load float, float* %arrayidx, align 4, !dbg !9006
  %2 = load float*, float** %b.addr, align 8, !dbg !9007
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !9007
  %3 = load float, float* %arrayidx1, align 4, !dbg !9007
  %mul = fmul float %1, %3, !dbg !9008
  %4 = load float*, float** %a.addr, align 8, !dbg !9009
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !9009
  %5 = load float, float* %arrayidx2, align 4, !dbg !9009
  %6 = load float*, float** %b.addr, align 8, !dbg !9010
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !9010
  %7 = load float, float* %arrayidx3, align 4, !dbg !9010
  %mul4 = fmul float %5, %7, !dbg !9011
  %sub = fsub float %mul, %mul4, !dbg !9012
  %8 = load float*, float** %r.addr, align 8, !dbg !9013
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !9013
  store float %sub, float* %arrayidx5, align 4, !dbg !9014
  %9 = load float*, float** %a.addr, align 8, !dbg !9015
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 2, !dbg !9015
  %10 = load float, float* %arrayidx6, align 4, !dbg !9015
  %11 = load float*, float** %b.addr, align 8, !dbg !9016
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 0, !dbg !9016
  %12 = load float, float* %arrayidx7, align 4, !dbg !9016
  %mul8 = fmul float %10, %12, !dbg !9017
  %13 = load float*, float** %a.addr, align 8, !dbg !9018
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 0, !dbg !9018
  %14 = load float, float* %arrayidx9, align 4, !dbg !9018
  %15 = load float*, float** %b.addr, align 8, !dbg !9019
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 2, !dbg !9019
  %16 = load float, float* %arrayidx10, align 4, !dbg !9019
  %mul11 = fmul float %14, %16, !dbg !9020
  %sub12 = fsub float %mul8, %mul11, !dbg !9021
  %17 = load float*, float** %r.addr, align 8, !dbg !9022
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 1, !dbg !9022
  store float %sub12, float* %arrayidx13, align 4, !dbg !9023
  %18 = load float*, float** %a.addr, align 8, !dbg !9024
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !9024
  %19 = load float, float* %arrayidx14, align 4, !dbg !9024
  %20 = load float*, float** %b.addr, align 8, !dbg !9025
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !9025
  %21 = load float, float* %arrayidx15, align 4, !dbg !9025
  %mul16 = fmul float %19, %21, !dbg !9026
  %22 = load float*, float** %a.addr, align 8, !dbg !9027
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 1, !dbg !9027
  %23 = load float, float* %arrayidx17, align 4, !dbg !9027
  %24 = load float*, float** %b.addr, align 8, !dbg !9028
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !9028
  %25 = load float, float* %arrayidx18, align 4, !dbg !9028
  %mul19 = fmul float %23, %25, !dbg !9029
  %sub20 = fsub float %mul16, %mul19, !dbg !9030
  %26 = load float*, float** %r.addr, align 8, !dbg !9031
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 2, !dbg !9031
  store float %sub20, float* %arrayidx21, align 4, !dbg !9032
  ret void, !dbg !9033
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !9034 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9037, metadata !DIExpression()), !dbg !9038
  %0 = load float*, float** %a.addr, align 8, !dbg !9039
  %1 = load float*, float** %a.addr, align 8, !dbg !9040
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !9041
  %call1 = call float @sqrtf(float %call) #5, !dbg !9042
  ret float %call1, !dbg !9043
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_vertex_attributes_from_gpu(%struct.DerivedMesh* %dm, %struct.GPUVertexAttribs* %gattribs, %struct.DMVertexAttribs* %attribs) #0 !dbg !9044 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %gattribs.addr = alloca %struct.GPUVertexAttribs*, align 8
  %attribs.addr = alloca %struct.DMVertexAttribs*, align 8
  %vdata = alloca %struct.CustomData*, align 8
  %fdata = alloca %struct.CustomData*, align 8
  %tfdata = alloca %struct.CustomData*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %layer = alloca i32, align 4
  %ldata = alloca %struct.CustomData*, align 8
  %ldata145 = alloca %struct.CustomData*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !9098, metadata !DIExpression()), !dbg !9099
  store %struct.GPUVertexAttribs* %gattribs, %struct.GPUVertexAttribs** %gattribs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GPUVertexAttribs** %gattribs.addr, metadata !9100, metadata !DIExpression()), !dbg !9101
  store %struct.DMVertexAttribs* %attribs, %struct.DMVertexAttribs** %attribs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DMVertexAttribs** %attribs.addr, metadata !9102, metadata !DIExpression()), !dbg !9103
  call void @llvm.dbg.declare(metadata %struct.CustomData** %vdata, metadata !9104, metadata !DIExpression()), !dbg !9105
  call void @llvm.dbg.declare(metadata %struct.CustomData** %fdata, metadata !9106, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.declare(metadata %struct.CustomData** %tfdata, metadata !9108, metadata !DIExpression()), !dbg !9109
  store %struct.CustomData* null, %struct.CustomData** %tfdata, align 8, !dbg !9109
  call void @llvm.dbg.declare(metadata i32* %a, metadata !9110, metadata !DIExpression()), !dbg !9111
  call void @llvm.dbg.declare(metadata i32* %b, metadata !9112, metadata !DIExpression()), !dbg !9113
  call void @llvm.dbg.declare(metadata i32* %layer, metadata !9114, metadata !DIExpression()), !dbg !9115
  %0 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9116
  %1 = bitcast %struct.DMVertexAttribs* %0 to i8*, !dbg !9117
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 376, i1 false), !dbg !9117
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9118
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 0, !dbg !9119
  store %struct.CustomData* %vertData, %struct.CustomData** %vdata, align 8, !dbg !9120
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9121
  %getTessFaceDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 57, !dbg !9122
  %4 = load %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)** %getTessFaceDataLayout, align 8, !dbg !9122
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9123
  %call = call %struct.CustomData* %4(%struct.DerivedMesh* %5), !dbg !9121
  store %struct.CustomData* %call, %struct.CustomData** %tfdata, align 8, !dbg !9124
  store %struct.CustomData* %call, %struct.CustomData** %fdata, align 8, !dbg !9125
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9126
  %auto_bump_scale = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 15, !dbg !9128
  %7 = load float, float* %auto_bump_scale, align 4, !dbg !9128
  %cmp = fcmp ole float %7, 0.000000e+00, !dbg !9129
  br i1 %cmp, label %if.then, label %if.end, !dbg !9130

if.then:                                          ; preds = %entry
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9131
  call void @DM_calc_auto_bump_scale(%struct.DerivedMesh* %8), !dbg !9132
  br label %if.end, !dbg !9132

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %b, align 4, !dbg !9133
  br label %for.cond, !dbg !9135

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %b, align 4, !dbg !9136
  %10 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9138
  %totlayer = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %10, i32 0, i32 1, !dbg !9139
  %11 = load i32, i32* %totlayer, align 4, !dbg !9139
  %cmp1 = icmp slt i32 %9, %11, !dbg !9140
  br i1 %cmp1, label %for.body, label %for.end, !dbg !9141

for.body:                                         ; preds = %for.cond
  %12 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9142
  %layer2 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %12, i32 0, i32 0, !dbg !9144
  %13 = load i32, i32* %b, align 4, !dbg !9145
  %idxprom = sext i32 %13 to i64, !dbg !9142
  %arrayidx = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer2, i64 0, i64 %idxprom, !dbg !9142
  %type = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx, i32 0, i32 0, !dbg !9146
  %14 = load i32, i32* %type, align 4, !dbg !9146
  %cmp3 = icmp eq i32 %14, 18, !dbg !9147
  br i1 %cmp3, label %if.then4, label %if.end9, !dbg !9148

if.then4:                                         ; preds = %for.body
  %15 = load %struct.CustomData*, %struct.CustomData** %fdata, align 8, !dbg !9149
  %call5 = call i32 @CustomData_get_layer_index(%struct.CustomData* %15, i32 18), !dbg !9151
  %cmp6 = icmp eq i32 %call5, -1, !dbg !9152
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !9153

if.then7:                                         ; preds = %if.then4
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9154
  call void @DM_add_tangent_layer(%struct.DerivedMesh* %16), !dbg !9155
  br label %if.end8, !dbg !9155

if.end8:                                          ; preds = %if.then7, %if.then4
  br label %if.end9, !dbg !9156

if.end9:                                          ; preds = %if.end8, %for.body
  br label %for.inc, !dbg !9157

for.inc:                                          ; preds = %if.end9
  %17 = load i32, i32* %b, align 4, !dbg !9158
  %inc = add nsw i32 %17, 1, !dbg !9158
  store i32 %inc, i32* %b, align 4, !dbg !9158
  br label %for.cond, !dbg !9159, !llvm.loop !9160

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %b, align 4, !dbg !9162
  br label %for.cond10, !dbg !9164

for.cond10:                                       ; preds = %for.inc332, %for.end
  %18 = load i32, i32* %b, align 4, !dbg !9165
  %19 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9167
  %totlayer11 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %19, i32 0, i32 1, !dbg !9168
  %20 = load i32, i32* %totlayer11, align 4, !dbg !9168
  %cmp12 = icmp slt i32 %18, %20, !dbg !9169
  br i1 %cmp12, label %for.body13, label %for.end334, !dbg !9170

for.body13:                                       ; preds = %for.cond10
  %21 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9171
  %layer14 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %21, i32 0, i32 0, !dbg !9174
  %22 = load i32, i32* %b, align 4, !dbg !9175
  %idxprom15 = sext i32 %22 to i64, !dbg !9171
  %arrayidx16 = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer14, i64 0, i64 %idxprom15, !dbg !9171
  %type17 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx16, i32 0, i32 0, !dbg !9176
  %23 = load i32, i32* %type17, align 4, !dbg !9176
  %cmp18 = icmp eq i32 %23, 5, !dbg !9177
  br i1 %cmp18, label %if.then19, label %if.else135, !dbg !9178

if.then19:                                        ; preds = %for.body13
  %24 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9179
  %type20 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %24, i32 0, i32 14, !dbg !9182
  %25 = load i32, i32* %type20, align 8, !dbg !9182
  %cmp21 = icmp eq i32 %25, 1, !dbg !9183
  br i1 %cmp21, label %if.then22, label %if.else71, !dbg !9184

if.then22:                                        ; preds = %if.then19
  call void @llvm.dbg.declare(metadata %struct.CustomData** %ldata, metadata !9185, metadata !DIExpression()), !dbg !9187
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9188
  %getLoopDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %26, i32 0, i32 58, !dbg !9189
  %27 = load %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)** %getLoopDataLayout, align 8, !dbg !9189
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9190
  %call23 = call %struct.CustomData* %27(%struct.DerivedMesh* %28), !dbg !9188
  store %struct.CustomData* %call23, %struct.CustomData** %ldata, align 8, !dbg !9187
  %29 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9191
  %layer24 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %29, i32 0, i32 0, !dbg !9193
  %30 = load i32, i32* %b, align 4, !dbg !9194
  %idxprom25 = sext i32 %30 to i64, !dbg !9191
  %arrayidx26 = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer24, i64 0, i64 %idxprom25, !dbg !9191
  %name = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx26, i32 0, i32 4, !dbg !9195
  %arrayidx27 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !9191
  %31 = load i8, i8* %arrayidx27, align 4, !dbg !9191
  %tobool = icmp ne i8 %31, 0, !dbg !9191
  br i1 %tobool, label %if.then28, label %if.else, !dbg !9196

if.then28:                                        ; preds = %if.then22
  %32 = load %struct.CustomData*, %struct.CustomData** %ldata, align 8, !dbg !9197
  %33 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9198
  %layer29 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %33, i32 0, i32 0, !dbg !9199
  %34 = load i32, i32* %b, align 4, !dbg !9200
  %idxprom30 = sext i32 %34 to i64, !dbg !9198
  %arrayidx31 = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer29, i64 0, i64 %idxprom30, !dbg !9198
  %name32 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx31, i32 0, i32 4, !dbg !9201
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name32, i64 0, i64 0, !dbg !9198
  %call33 = call i32 @CustomData_get_named_layer_index(%struct.CustomData* %32, i32 16, i8* %arraydecay), !dbg !9202
  store i32 %call33, i32* %layer, align 4, !dbg !9203
  br label %if.end35, !dbg !9204

if.else:                                          ; preds = %if.then22
  %35 = load %struct.CustomData*, %struct.CustomData** %ldata, align 8, !dbg !9205
  %call34 = call i32 @CustomData_get_active_layer_index(%struct.CustomData* %35, i32 16), !dbg !9206
  store i32 %call34, i32* %layer, align 4, !dbg !9207
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then28
  %36 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9208
  %tottface = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %36, i32 0, i32 4, !dbg !9209
  %37 = load i32, i32* %tottface, align 8, !dbg !9210
  %inc36 = add nsw i32 %37, 1, !dbg !9210
  store i32 %inc36, i32* %tottface, align 8, !dbg !9210
  store i32 %37, i32* %a, align 4, !dbg !9211
  %38 = load i32, i32* %layer, align 4, !dbg !9212
  %cmp37 = icmp ne i32 %38, -1, !dbg !9214
  br i1 %cmp37, label %if.then38, label %if.else49, !dbg !9215

if.then38:                                        ; preds = %if.end35
  %39 = load %struct.CustomData*, %struct.CustomData** %tfdata, align 8, !dbg !9216
  %layers = getelementptr inbounds %struct.CustomData, %struct.CustomData* %39, i32 0, i32 0, !dbg !9218
  %40 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers, align 8, !dbg !9218
  %41 = load i32, i32* %layer, align 4, !dbg !9219
  %idxprom39 = sext i32 %41 to i64, !dbg !9216
  %arrayidx40 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %40, i64 %idxprom39, !dbg !9216
  %data = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx40, i32 0, i32 9, !dbg !9220
  %42 = load i8*, i8** %data, align 8, !dbg !9220
  %43 = bitcast i8* %42 to %struct.MTFace*, !dbg !9216
  %44 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9221
  %tface = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %44, i32 0, i32 0, !dbg !9222
  %45 = load i32, i32* %a, align 4, !dbg !9223
  %idxprom41 = sext i32 %45 to i64, !dbg !9221
  %arrayidx42 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %tface, i64 0, i64 %idxprom41, !dbg !9221
  %array = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx42, i32 0, i32 0, !dbg !9224
  store %struct.MTFace* %43, %struct.MTFace** %array, align 8, !dbg !9225
  %46 = load %struct.CustomData*, %struct.CustomData** %ldata, align 8, !dbg !9226
  %layers43 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %46, i32 0, i32 0, !dbg !9227
  %47 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers43, align 8, !dbg !9227
  %48 = load i32, i32* %layer, align 4, !dbg !9228
  %idxprom44 = sext i32 %48 to i64, !dbg !9226
  %arrayidx45 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %47, i64 %idxprom44, !dbg !9226
  %offset = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx45, i32 0, i32 1, !dbg !9229
  %49 = load i32, i32* %offset, align 4, !dbg !9229
  %50 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9230
  %tface46 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %50, i32 0, i32 0, !dbg !9231
  %51 = load i32, i32* %a, align 4, !dbg !9232
  %idxprom47 = sext i32 %51 to i64, !dbg !9230
  %arrayidx48 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %tface46, i64 0, i64 %idxprom47, !dbg !9230
  %em_offset = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx48, i32 0, i32 1, !dbg !9233
  store i32 %49, i32* %em_offset, align 8, !dbg !9234
  br label %if.end58, !dbg !9235

if.else49:                                        ; preds = %if.end35
  %52 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9236
  %tface50 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %52, i32 0, i32 0, !dbg !9238
  %53 = load i32, i32* %a, align 4, !dbg !9239
  %idxprom51 = sext i32 %53 to i64, !dbg !9236
  %arrayidx52 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %tface50, i64 0, i64 %idxprom51, !dbg !9236
  %array53 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx52, i32 0, i32 0, !dbg !9240
  store %struct.MTFace* null, %struct.MTFace** %array53, align 8, !dbg !9241
  %54 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9242
  %tface54 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %54, i32 0, i32 0, !dbg !9243
  %55 = load i32, i32* %a, align 4, !dbg !9244
  %idxprom55 = sext i32 %55 to i64, !dbg !9242
  %arrayidx56 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %tface54, i64 0, i64 %idxprom55, !dbg !9242
  %em_offset57 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx56, i32 0, i32 1, !dbg !9245
  store i32 -1, i32* %em_offset57, align 8, !dbg !9246
  br label %if.end58

if.end58:                                         ; preds = %if.else49, %if.then38
  %56 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9247
  %layer59 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %56, i32 0, i32 0, !dbg !9248
  %57 = load i32, i32* %b, align 4, !dbg !9249
  %idxprom60 = sext i32 %57 to i64, !dbg !9247
  %arrayidx61 = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer59, i64 0, i64 %idxprom60, !dbg !9247
  %glindex = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx61, i32 0, i32 1, !dbg !9250
  %58 = load i32, i32* %glindex, align 4, !dbg !9250
  %59 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9251
  %tface62 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %59, i32 0, i32 0, !dbg !9252
  %60 = load i32, i32* %a, align 4, !dbg !9253
  %idxprom63 = sext i32 %60 to i64, !dbg !9251
  %arrayidx64 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %tface62, i64 0, i64 %idxprom63, !dbg !9251
  %gl_index = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx64, i32 0, i32 2, !dbg !9254
  store i32 %58, i32* %gl_index, align 4, !dbg !9255
  %61 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9256
  %layer65 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %61, i32 0, i32 0, !dbg !9257
  %62 = load i32, i32* %b, align 4, !dbg !9258
  %idxprom66 = sext i32 %62 to i64, !dbg !9256
  %arrayidx67 = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer65, i64 0, i64 %idxprom66, !dbg !9256
  %gltexco = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx67, i32 0, i32 2, !dbg !9259
  %63 = load i32, i32* %gltexco, align 4, !dbg !9259
  %64 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9260
  %tface68 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %64, i32 0, i32 0, !dbg !9261
  %65 = load i32, i32* %a, align 4, !dbg !9262
  %idxprom69 = sext i32 %65 to i64, !dbg !9260
  %arrayidx70 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %tface68, i64 0, i64 %idxprom69, !dbg !9260
  %gl_texco = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx70, i32 0, i32 3, !dbg !9263
  store i32 %63, i32* %gl_texco, align 8, !dbg !9264
  br label %if.end134, !dbg !9265

if.else71:                                        ; preds = %if.then19
  %66 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9266
  %layer72 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %66, i32 0, i32 0, !dbg !9269
  %67 = load i32, i32* %b, align 4, !dbg !9270
  %idxprom73 = sext i32 %67 to i64, !dbg !9266
  %arrayidx74 = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer72, i64 0, i64 %idxprom73, !dbg !9266
  %name75 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx74, i32 0, i32 4, !dbg !9271
  %arrayidx76 = getelementptr inbounds [64 x i8], [64 x i8]* %name75, i64 0, i64 0, !dbg !9266
  %68 = load i8, i8* %arrayidx76, align 4, !dbg !9266
  %tobool77 = icmp ne i8 %68, 0, !dbg !9266
  br i1 %tobool77, label %if.then78, label %if.else85, !dbg !9272

if.then78:                                        ; preds = %if.else71
  %69 = load %struct.CustomData*, %struct.CustomData** %tfdata, align 8, !dbg !9273
  %70 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9274
  %layer79 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %70, i32 0, i32 0, !dbg !9275
  %71 = load i32, i32* %b, align 4, !dbg !9276
  %idxprom80 = sext i32 %71 to i64, !dbg !9274
  %arrayidx81 = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer79, i64 0, i64 %idxprom80, !dbg !9274
  %name82 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx81, i32 0, i32 4, !dbg !9277
  %arraydecay83 = getelementptr inbounds [64 x i8], [64 x i8]* %name82, i64 0, i64 0, !dbg !9274
  %call84 = call i32 @CustomData_get_named_layer_index(%struct.CustomData* %69, i32 5, i8* %arraydecay83), !dbg !9278
  store i32 %call84, i32* %layer, align 4, !dbg !9279
  br label %if.end87, !dbg !9280

if.else85:                                        ; preds = %if.else71
  %72 = load %struct.CustomData*, %struct.CustomData** %tfdata, align 8, !dbg !9281
  %call86 = call i32 @CustomData_get_active_layer_index(%struct.CustomData* %72, i32 5), !dbg !9282
  store i32 %call86, i32* %layer, align 4, !dbg !9283
  br label %if.end87

if.end87:                                         ; preds = %if.else85, %if.then78
  %73 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9284
  %tottface88 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %73, i32 0, i32 4, !dbg !9285
  %74 = load i32, i32* %tottface88, align 8, !dbg !9286
  %inc89 = add nsw i32 %74, 1, !dbg !9286
  store i32 %inc89, i32* %tottface88, align 8, !dbg !9286
  store i32 %74, i32* %a, align 4, !dbg !9287
  %75 = load i32, i32* %layer, align 4, !dbg !9288
  %cmp90 = icmp ne i32 %75, -1, !dbg !9290
  br i1 %cmp90, label %if.then91, label %if.else108, !dbg !9291

if.then91:                                        ; preds = %if.end87
  %76 = load %struct.CustomData*, %struct.CustomData** %tfdata, align 8, !dbg !9292
  %layers92 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %76, i32 0, i32 0, !dbg !9294
  %77 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers92, align 8, !dbg !9294
  %78 = load i32, i32* %layer, align 4, !dbg !9295
  %idxprom93 = sext i32 %78 to i64, !dbg !9292
  %arrayidx94 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %77, i64 %idxprom93, !dbg !9292
  %data95 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx94, i32 0, i32 9, !dbg !9296
  %79 = load i8*, i8** %data95, align 8, !dbg !9296
  %80 = bitcast i8* %79 to %struct.MTFace*, !dbg !9292
  %81 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9297
  %tface96 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %81, i32 0, i32 0, !dbg !9298
  %82 = load i32, i32* %a, align 4, !dbg !9299
  %idxprom97 = sext i32 %82 to i64, !dbg !9297
  %arrayidx98 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %tface96, i64 0, i64 %idxprom97, !dbg !9297
  %array99 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx98, i32 0, i32 0, !dbg !9300
  store %struct.MTFace* %80, %struct.MTFace** %array99, align 8, !dbg !9301
  %83 = load %struct.CustomData*, %struct.CustomData** %tfdata, align 8, !dbg !9302
  %layers100 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %83, i32 0, i32 0, !dbg !9303
  %84 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers100, align 8, !dbg !9303
  %85 = load i32, i32* %layer, align 4, !dbg !9304
  %idxprom101 = sext i32 %85 to i64, !dbg !9302
  %arrayidx102 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %84, i64 %idxprom101, !dbg !9302
  %offset103 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx102, i32 0, i32 1, !dbg !9305
  %86 = load i32, i32* %offset103, align 4, !dbg !9305
  %87 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9306
  %tface104 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %87, i32 0, i32 0, !dbg !9307
  %88 = load i32, i32* %a, align 4, !dbg !9308
  %idxprom105 = sext i32 %88 to i64, !dbg !9306
  %arrayidx106 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %tface104, i64 0, i64 %idxprom105, !dbg !9306
  %em_offset107 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx106, i32 0, i32 1, !dbg !9309
  store i32 %86, i32* %em_offset107, align 8, !dbg !9310
  br label %if.end117, !dbg !9311

if.else108:                                       ; preds = %if.end87
  %89 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9312
  %tface109 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %89, i32 0, i32 0, !dbg !9314
  %90 = load i32, i32* %a, align 4, !dbg !9315
  %idxprom110 = sext i32 %90 to i64, !dbg !9312
  %arrayidx111 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %tface109, i64 0, i64 %idxprom110, !dbg !9312
  %array112 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx111, i32 0, i32 0, !dbg !9316
  store %struct.MTFace* null, %struct.MTFace** %array112, align 8, !dbg !9317
  %91 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9318
  %tface113 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %91, i32 0, i32 0, !dbg !9319
  %92 = load i32, i32* %a, align 4, !dbg !9320
  %idxprom114 = sext i32 %92 to i64, !dbg !9318
  %arrayidx115 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %tface113, i64 0, i64 %idxprom114, !dbg !9318
  %em_offset116 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx115, i32 0, i32 1, !dbg !9321
  store i32 -1, i32* %em_offset116, align 8, !dbg !9322
  br label %if.end117

if.end117:                                        ; preds = %if.else108, %if.then91
  %93 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9323
  %layer118 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %93, i32 0, i32 0, !dbg !9324
  %94 = load i32, i32* %b, align 4, !dbg !9325
  %idxprom119 = sext i32 %94 to i64, !dbg !9323
  %arrayidx120 = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer118, i64 0, i64 %idxprom119, !dbg !9323
  %glindex121 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx120, i32 0, i32 1, !dbg !9326
  %95 = load i32, i32* %glindex121, align 4, !dbg !9326
  %96 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9327
  %tface122 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %96, i32 0, i32 0, !dbg !9328
  %97 = load i32, i32* %a, align 4, !dbg !9329
  %idxprom123 = sext i32 %97 to i64, !dbg !9327
  %arrayidx124 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %tface122, i64 0, i64 %idxprom123, !dbg !9327
  %gl_index125 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx124, i32 0, i32 2, !dbg !9330
  store i32 %95, i32* %gl_index125, align 4, !dbg !9331
  %98 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9332
  %layer126 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %98, i32 0, i32 0, !dbg !9333
  %99 = load i32, i32* %b, align 4, !dbg !9334
  %idxprom127 = sext i32 %99 to i64, !dbg !9332
  %arrayidx128 = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer126, i64 0, i64 %idxprom127, !dbg !9332
  %gltexco129 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx128, i32 0, i32 2, !dbg !9335
  %100 = load i32, i32* %gltexco129, align 4, !dbg !9335
  %101 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9336
  %tface130 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %101, i32 0, i32 0, !dbg !9337
  %102 = load i32, i32* %a, align 4, !dbg !9338
  %idxprom131 = sext i32 %102 to i64, !dbg !9336
  %arrayidx132 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %tface130, i64 0, i64 %idxprom131, !dbg !9336
  %gl_texco133 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx132, i32 0, i32 3, !dbg !9339
  store i32 %100, i32* %gl_texco133, align 8, !dbg !9340
  br label %if.end134

if.end134:                                        ; preds = %if.end117, %if.end58
  br label %if.end331, !dbg !9341

if.else135:                                       ; preds = %for.body13
  %103 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9342
  %layer136 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %103, i32 0, i32 0, !dbg !9344
  %104 = load i32, i32* %b, align 4, !dbg !9345
  %idxprom137 = sext i32 %104 to i64, !dbg !9342
  %arrayidx138 = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer136, i64 0, i64 %idxprom137, !dbg !9342
  %type139 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx138, i32 0, i32 0, !dbg !9346
  %105 = load i32, i32* %type139, align 4, !dbg !9346
  %cmp140 = icmp eq i32 %105, 6, !dbg !9347
  br i1 %cmp140, label %if.then141, label %if.else256, !dbg !9348

if.then141:                                       ; preds = %if.else135
  %106 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9349
  %type142 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %106, i32 0, i32 14, !dbg !9352
  %107 = load i32, i32* %type142, align 8, !dbg !9352
  %cmp143 = icmp eq i32 %107, 1, !dbg !9353
  br i1 %cmp143, label %if.then144, label %if.else200, !dbg !9354

if.then144:                                       ; preds = %if.then141
  call void @llvm.dbg.declare(metadata %struct.CustomData** %ldata145, metadata !9355, metadata !DIExpression()), !dbg !9357
  %108 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9358
  %getLoopDataLayout146 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %108, i32 0, i32 58, !dbg !9359
  %109 = load %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)** %getLoopDataLayout146, align 8, !dbg !9359
  %110 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9360
  %call147 = call %struct.CustomData* %109(%struct.DerivedMesh* %110), !dbg !9358
  store %struct.CustomData* %call147, %struct.CustomData** %ldata145, align 8, !dbg !9357
  %111 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9361
  %layer148 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %111, i32 0, i32 0, !dbg !9363
  %112 = load i32, i32* %b, align 4, !dbg !9364
  %idxprom149 = sext i32 %112 to i64, !dbg !9361
  %arrayidx150 = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer148, i64 0, i64 %idxprom149, !dbg !9361
  %name151 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx150, i32 0, i32 4, !dbg !9365
  %arrayidx152 = getelementptr inbounds [64 x i8], [64 x i8]* %name151, i64 0, i64 0, !dbg !9361
  %113 = load i8, i8* %arrayidx152, align 4, !dbg !9361
  %tobool153 = icmp ne i8 %113, 0, !dbg !9361
  br i1 %tobool153, label %if.then154, label %if.else161, !dbg !9366

if.then154:                                       ; preds = %if.then144
  %114 = load %struct.CustomData*, %struct.CustomData** %ldata145, align 8, !dbg !9367
  %115 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9368
  %layer155 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %115, i32 0, i32 0, !dbg !9369
  %116 = load i32, i32* %b, align 4, !dbg !9370
  %idxprom156 = sext i32 %116 to i64, !dbg !9368
  %arrayidx157 = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer155, i64 0, i64 %idxprom156, !dbg !9368
  %name158 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx157, i32 0, i32 4, !dbg !9371
  %arraydecay159 = getelementptr inbounds [64 x i8], [64 x i8]* %name158, i64 0, i64 0, !dbg !9368
  %call160 = call i32 @CustomData_get_named_layer_index(%struct.CustomData* %114, i32 17, i8* %arraydecay159), !dbg !9372
  store i32 %call160, i32* %layer, align 4, !dbg !9373
  br label %if.end163, !dbg !9374

if.else161:                                       ; preds = %if.then144
  %117 = load %struct.CustomData*, %struct.CustomData** %ldata145, align 8, !dbg !9375
  %call162 = call i32 @CustomData_get_active_layer_index(%struct.CustomData* %117, i32 17), !dbg !9376
  store i32 %call162, i32* %layer, align 4, !dbg !9377
  br label %if.end163

if.end163:                                        ; preds = %if.else161, %if.then154
  %118 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9378
  %totmcol = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %118, i32 0, i32 5, !dbg !9379
  %119 = load i32, i32* %totmcol, align 4, !dbg !9380
  %inc164 = add nsw i32 %119, 1, !dbg !9380
  store i32 %inc164, i32* %totmcol, align 4, !dbg !9380
  store i32 %119, i32* %a, align 4, !dbg !9381
  %120 = load i32, i32* %layer, align 4, !dbg !9382
  %cmp165 = icmp ne i32 %120, -1, !dbg !9384
  br i1 %cmp165, label %if.then166, label %if.else182, !dbg !9385

if.then166:                                       ; preds = %if.end163
  %121 = load %struct.CustomData*, %struct.CustomData** %tfdata, align 8, !dbg !9386
  %layers167 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %121, i32 0, i32 0, !dbg !9388
  %122 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers167, align 8, !dbg !9388
  %123 = load i32, i32* %layer, align 4, !dbg !9389
  %idxprom168 = sext i32 %123 to i64, !dbg !9386
  %arrayidx169 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %122, i64 %idxprom168, !dbg !9386
  %data170 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx169, i32 0, i32 9, !dbg !9390
  %124 = load i8*, i8** %data170, align 8, !dbg !9390
  %125 = bitcast i8* %124 to %struct.MCol*, !dbg !9386
  %126 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9391
  %mcol = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %126, i32 0, i32 1, !dbg !9392
  %127 = load i32, i32* %a, align 4, !dbg !9393
  %idxprom171 = sext i32 %127 to i64, !dbg !9391
  %arrayidx172 = getelementptr inbounds [8 x %struct.anon.2], [8 x %struct.anon.2]* %mcol, i64 0, i64 %idxprom171, !dbg !9391
  %array173 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx172, i32 0, i32 0, !dbg !9394
  store %struct.MCol* %125, %struct.MCol** %array173, align 8, !dbg !9395
  %128 = load %struct.CustomData*, %struct.CustomData** %ldata145, align 8, !dbg !9396
  %layers174 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %128, i32 0, i32 0, !dbg !9397
  %129 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers174, align 8, !dbg !9397
  %130 = load i32, i32* %layer, align 4, !dbg !9398
  %idxprom175 = sext i32 %130 to i64, !dbg !9396
  %arrayidx176 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %129, i64 %idxprom175, !dbg !9396
  %offset177 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx176, i32 0, i32 1, !dbg !9399
  %131 = load i32, i32* %offset177, align 4, !dbg !9399
  %132 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9400
  %mcol178 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %132, i32 0, i32 1, !dbg !9401
  %133 = load i32, i32* %a, align 4, !dbg !9402
  %idxprom179 = sext i32 %133 to i64, !dbg !9400
  %arrayidx180 = getelementptr inbounds [8 x %struct.anon.2], [8 x %struct.anon.2]* %mcol178, i64 0, i64 %idxprom179, !dbg !9400
  %em_offset181 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx180, i32 0, i32 1, !dbg !9403
  store i32 %131, i32* %em_offset181, align 8, !dbg !9404
  br label %if.end191, !dbg !9405

if.else182:                                       ; preds = %if.end163
  %134 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9406
  %mcol183 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %134, i32 0, i32 1, !dbg !9408
  %135 = load i32, i32* %a, align 4, !dbg !9409
  %idxprom184 = sext i32 %135 to i64, !dbg !9406
  %arrayidx185 = getelementptr inbounds [8 x %struct.anon.2], [8 x %struct.anon.2]* %mcol183, i64 0, i64 %idxprom184, !dbg !9406
  %array186 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx185, i32 0, i32 0, !dbg !9410
  store %struct.MCol* null, %struct.MCol** %array186, align 8, !dbg !9411
  %136 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9412
  %mcol187 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %136, i32 0, i32 1, !dbg !9413
  %137 = load i32, i32* %a, align 4, !dbg !9414
  %idxprom188 = sext i32 %137 to i64, !dbg !9412
  %arrayidx189 = getelementptr inbounds [8 x %struct.anon.2], [8 x %struct.anon.2]* %mcol187, i64 0, i64 %idxprom188, !dbg !9412
  %em_offset190 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx189, i32 0, i32 1, !dbg !9415
  store i32 -1, i32* %em_offset190, align 8, !dbg !9416
  br label %if.end191

if.end191:                                        ; preds = %if.else182, %if.then166
  %138 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9417
  %layer192 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %138, i32 0, i32 0, !dbg !9418
  %139 = load i32, i32* %b, align 4, !dbg !9419
  %idxprom193 = sext i32 %139 to i64, !dbg !9417
  %arrayidx194 = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer192, i64 0, i64 %idxprom193, !dbg !9417
  %glindex195 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx194, i32 0, i32 1, !dbg !9420
  %140 = load i32, i32* %glindex195, align 4, !dbg !9420
  %141 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9421
  %mcol196 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %141, i32 0, i32 1, !dbg !9422
  %142 = load i32, i32* %a, align 4, !dbg !9423
  %idxprom197 = sext i32 %142 to i64, !dbg !9421
  %arrayidx198 = getelementptr inbounds [8 x %struct.anon.2], [8 x %struct.anon.2]* %mcol196, i64 0, i64 %idxprom197, !dbg !9421
  %gl_index199 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx198, i32 0, i32 2, !dbg !9424
  store i32 %140, i32* %gl_index199, align 4, !dbg !9425
  br label %if.end255, !dbg !9426

if.else200:                                       ; preds = %if.then141
  %143 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9427
  %layer201 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %143, i32 0, i32 0, !dbg !9430
  %144 = load i32, i32* %b, align 4, !dbg !9431
  %idxprom202 = sext i32 %144 to i64, !dbg !9427
  %arrayidx203 = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer201, i64 0, i64 %idxprom202, !dbg !9427
  %name204 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx203, i32 0, i32 4, !dbg !9432
  %arrayidx205 = getelementptr inbounds [64 x i8], [64 x i8]* %name204, i64 0, i64 0, !dbg !9427
  %145 = load i8, i8* %arrayidx205, align 4, !dbg !9427
  %tobool206 = icmp ne i8 %145, 0, !dbg !9427
  br i1 %tobool206, label %if.then207, label %if.else214, !dbg !9433

if.then207:                                       ; preds = %if.else200
  %146 = load %struct.CustomData*, %struct.CustomData** %tfdata, align 8, !dbg !9434
  %147 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9435
  %layer208 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %147, i32 0, i32 0, !dbg !9436
  %148 = load i32, i32* %b, align 4, !dbg !9437
  %idxprom209 = sext i32 %148 to i64, !dbg !9435
  %arrayidx210 = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer208, i64 0, i64 %idxprom209, !dbg !9435
  %name211 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx210, i32 0, i32 4, !dbg !9438
  %arraydecay212 = getelementptr inbounds [64 x i8], [64 x i8]* %name211, i64 0, i64 0, !dbg !9435
  %call213 = call i32 @CustomData_get_named_layer_index(%struct.CustomData* %146, i32 6, i8* %arraydecay212), !dbg !9439
  store i32 %call213, i32* %layer, align 4, !dbg !9440
  br label %if.end216, !dbg !9441

if.else214:                                       ; preds = %if.else200
  %149 = load %struct.CustomData*, %struct.CustomData** %tfdata, align 8, !dbg !9442
  %call215 = call i32 @CustomData_get_active_layer_index(%struct.CustomData* %149, i32 6), !dbg !9443
  store i32 %call215, i32* %layer, align 4, !dbg !9444
  br label %if.end216

if.end216:                                        ; preds = %if.else214, %if.then207
  %150 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9445
  %totmcol217 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %150, i32 0, i32 5, !dbg !9446
  %151 = load i32, i32* %totmcol217, align 4, !dbg !9447
  %inc218 = add nsw i32 %151, 1, !dbg !9447
  store i32 %inc218, i32* %totmcol217, align 4, !dbg !9447
  store i32 %151, i32* %a, align 4, !dbg !9448
  %152 = load i32, i32* %layer, align 4, !dbg !9449
  %cmp219 = icmp ne i32 %152, -1, !dbg !9451
  br i1 %cmp219, label %if.then220, label %if.else237, !dbg !9452

if.then220:                                       ; preds = %if.end216
  %153 = load %struct.CustomData*, %struct.CustomData** %tfdata, align 8, !dbg !9453
  %layers221 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %153, i32 0, i32 0, !dbg !9455
  %154 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers221, align 8, !dbg !9455
  %155 = load i32, i32* %layer, align 4, !dbg !9456
  %idxprom222 = sext i32 %155 to i64, !dbg !9453
  %arrayidx223 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %154, i64 %idxprom222, !dbg !9453
  %data224 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx223, i32 0, i32 9, !dbg !9457
  %156 = load i8*, i8** %data224, align 8, !dbg !9457
  %157 = bitcast i8* %156 to %struct.MCol*, !dbg !9453
  %158 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9458
  %mcol225 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %158, i32 0, i32 1, !dbg !9459
  %159 = load i32, i32* %a, align 4, !dbg !9460
  %idxprom226 = sext i32 %159 to i64, !dbg !9458
  %arrayidx227 = getelementptr inbounds [8 x %struct.anon.2], [8 x %struct.anon.2]* %mcol225, i64 0, i64 %idxprom226, !dbg !9458
  %array228 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx227, i32 0, i32 0, !dbg !9461
  store %struct.MCol* %157, %struct.MCol** %array228, align 8, !dbg !9462
  %160 = load %struct.CustomData*, %struct.CustomData** %tfdata, align 8, !dbg !9463
  %layers229 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %160, i32 0, i32 0, !dbg !9464
  %161 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers229, align 8, !dbg !9464
  %162 = load i32, i32* %layer, align 4, !dbg !9465
  %idxprom230 = sext i32 %162 to i64, !dbg !9463
  %arrayidx231 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %161, i64 %idxprom230, !dbg !9463
  %offset232 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx231, i32 0, i32 1, !dbg !9466
  %163 = load i32, i32* %offset232, align 4, !dbg !9466
  %164 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9467
  %mcol233 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %164, i32 0, i32 1, !dbg !9468
  %165 = load i32, i32* %a, align 4, !dbg !9469
  %idxprom234 = sext i32 %165 to i64, !dbg !9467
  %arrayidx235 = getelementptr inbounds [8 x %struct.anon.2], [8 x %struct.anon.2]* %mcol233, i64 0, i64 %idxprom234, !dbg !9467
  %em_offset236 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx235, i32 0, i32 1, !dbg !9470
  store i32 %163, i32* %em_offset236, align 8, !dbg !9471
  br label %if.end246, !dbg !9472

if.else237:                                       ; preds = %if.end216
  %166 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9473
  %mcol238 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %166, i32 0, i32 1, !dbg !9475
  %167 = load i32, i32* %a, align 4, !dbg !9476
  %idxprom239 = sext i32 %167 to i64, !dbg !9473
  %arrayidx240 = getelementptr inbounds [8 x %struct.anon.2], [8 x %struct.anon.2]* %mcol238, i64 0, i64 %idxprom239, !dbg !9473
  %array241 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx240, i32 0, i32 0, !dbg !9477
  store %struct.MCol* null, %struct.MCol** %array241, align 8, !dbg !9478
  %168 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9479
  %mcol242 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %168, i32 0, i32 1, !dbg !9480
  %169 = load i32, i32* %a, align 4, !dbg !9481
  %idxprom243 = sext i32 %169 to i64, !dbg !9479
  %arrayidx244 = getelementptr inbounds [8 x %struct.anon.2], [8 x %struct.anon.2]* %mcol242, i64 0, i64 %idxprom243, !dbg !9479
  %em_offset245 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx244, i32 0, i32 1, !dbg !9482
  store i32 -1, i32* %em_offset245, align 8, !dbg !9483
  br label %if.end246

if.end246:                                        ; preds = %if.else237, %if.then220
  %170 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9484
  %layer247 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %170, i32 0, i32 0, !dbg !9485
  %171 = load i32, i32* %b, align 4, !dbg !9486
  %idxprom248 = sext i32 %171 to i64, !dbg !9484
  %arrayidx249 = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer247, i64 0, i64 %idxprom248, !dbg !9484
  %glindex250 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx249, i32 0, i32 1, !dbg !9487
  %172 = load i32, i32* %glindex250, align 4, !dbg !9487
  %173 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9488
  %mcol251 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %173, i32 0, i32 1, !dbg !9489
  %174 = load i32, i32* %a, align 4, !dbg !9490
  %idxprom252 = sext i32 %174 to i64, !dbg !9488
  %arrayidx253 = getelementptr inbounds [8 x %struct.anon.2], [8 x %struct.anon.2]* %mcol251, i64 0, i64 %idxprom252, !dbg !9488
  %gl_index254 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx253, i32 0, i32 2, !dbg !9491
  store i32 %172, i32* %gl_index254, align 4, !dbg !9492
  br label %if.end255

if.end255:                                        ; preds = %if.end246, %if.end191
  br label %if.end330, !dbg !9493

if.else256:                                       ; preds = %if.else135
  %175 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9494
  %layer257 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %175, i32 0, i32 0, !dbg !9496
  %176 = load i32, i32* %b, align 4, !dbg !9497
  %idxprom258 = sext i32 %176 to i64, !dbg !9494
  %arrayidx259 = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer257, i64 0, i64 %idxprom258, !dbg !9494
  %type260 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx259, i32 0, i32 0, !dbg !9498
  %177 = load i32, i32* %type260, align 4, !dbg !9498
  %cmp261 = icmp eq i32 %177, 18, !dbg !9499
  br i1 %cmp261, label %if.then262, label %if.else289, !dbg !9500

if.then262:                                       ; preds = %if.else256
  %178 = load %struct.CustomData*, %struct.CustomData** %fdata, align 8, !dbg !9501
  %call263 = call i32 @CustomData_get_layer_index(%struct.CustomData* %178, i32 18), !dbg !9503
  store i32 %call263, i32* %layer, align 4, !dbg !9504
  %179 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9505
  %tottang = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %179, i32 0, i32 6, !dbg !9506
  store i32 1, i32* %tottang, align 8, !dbg !9507
  %180 = load i32, i32* %layer, align 4, !dbg !9508
  %cmp264 = icmp ne i32 %180, -1, !dbg !9510
  br i1 %cmp264, label %if.then265, label %if.else277, !dbg !9511

if.then265:                                       ; preds = %if.then262
  %181 = load %struct.CustomData*, %struct.CustomData** %fdata, align 8, !dbg !9512
  %layers266 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %181, i32 0, i32 0, !dbg !9514
  %182 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers266, align 8, !dbg !9514
  %183 = load i32, i32* %layer, align 4, !dbg !9515
  %idxprom267 = sext i32 %183 to i64, !dbg !9512
  %arrayidx268 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %182, i64 %idxprom267, !dbg !9512
  %data269 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx268, i32 0, i32 9, !dbg !9516
  %184 = load i8*, i8** %data269, align 8, !dbg !9516
  %185 = bitcast i8* %184 to [4 x float]*, !dbg !9512
  %186 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9517
  %tang = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %186, i32 0, i32 2, !dbg !9518
  %array270 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %tang, i32 0, i32 0, !dbg !9519
  store [4 x float]* %185, [4 x float]** %array270, align 8, !dbg !9520
  %187 = load %struct.CustomData*, %struct.CustomData** %fdata, align 8, !dbg !9521
  %layers271 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %187, i32 0, i32 0, !dbg !9522
  %188 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers271, align 8, !dbg !9522
  %189 = load i32, i32* %layer, align 4, !dbg !9523
  %idxprom272 = sext i32 %189 to i64, !dbg !9521
  %arrayidx273 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %188, i64 %idxprom272, !dbg !9521
  %offset274 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx273, i32 0, i32 1, !dbg !9524
  %190 = load i32, i32* %offset274, align 4, !dbg !9524
  %191 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9525
  %tang275 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %191, i32 0, i32 2, !dbg !9526
  %em_offset276 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %tang275, i32 0, i32 1, !dbg !9527
  store i32 %190, i32* %em_offset276, align 8, !dbg !9528
  br label %if.end282, !dbg !9529

if.else277:                                       ; preds = %if.then262
  %192 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9530
  %tang278 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %192, i32 0, i32 2, !dbg !9532
  %array279 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %tang278, i32 0, i32 0, !dbg !9533
  store [4 x float]* null, [4 x float]** %array279, align 8, !dbg !9534
  %193 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9535
  %tang280 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %193, i32 0, i32 2, !dbg !9536
  %em_offset281 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %tang280, i32 0, i32 1, !dbg !9537
  store i32 -1, i32* %em_offset281, align 8, !dbg !9538
  br label %if.end282

if.end282:                                        ; preds = %if.else277, %if.then265
  %194 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9539
  %layer283 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %194, i32 0, i32 0, !dbg !9540
  %195 = load i32, i32* %b, align 4, !dbg !9541
  %idxprom284 = sext i32 %195 to i64, !dbg !9539
  %arrayidx285 = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer283, i64 0, i64 %idxprom284, !dbg !9539
  %glindex286 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx285, i32 0, i32 1, !dbg !9542
  %196 = load i32, i32* %glindex286, align 4, !dbg !9542
  %197 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9543
  %tang287 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %197, i32 0, i32 2, !dbg !9544
  %gl_index288 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %tang287, i32 0, i32 2, !dbg !9545
  store i32 %196, i32* %gl_index288, align 4, !dbg !9546
  br label %if.end329, !dbg !9547

if.else289:                                       ; preds = %if.else256
  %198 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9548
  %layer290 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %198, i32 0, i32 0, !dbg !9550
  %199 = load i32, i32* %b, align 4, !dbg !9551
  %idxprom291 = sext i32 %199 to i64, !dbg !9548
  %arrayidx292 = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer290, i64 0, i64 %idxprom291, !dbg !9548
  %type293 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx292, i32 0, i32 0, !dbg !9552
  %200 = load i32, i32* %type293, align 4, !dbg !9552
  %cmp294 = icmp eq i32 %200, 14, !dbg !9553
  br i1 %cmp294, label %if.then295, label %if.end328, !dbg !9554

if.then295:                                       ; preds = %if.else289
  %201 = load %struct.CustomData*, %struct.CustomData** %vdata, align 8, !dbg !9555
  %call296 = call i32 @CustomData_get_layer_index(%struct.CustomData* %201, i32 14), !dbg !9557
  store i32 %call296, i32* %layer, align 4, !dbg !9558
  %202 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9559
  %totorco = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %202, i32 0, i32 7, !dbg !9560
  store i32 1, i32* %totorco, align 4, !dbg !9561
  %203 = load i32, i32* %layer, align 4, !dbg !9562
  %cmp297 = icmp ne i32 %203, -1, !dbg !9564
  br i1 %cmp297, label %if.then298, label %if.else310, !dbg !9565

if.then298:                                       ; preds = %if.then295
  %204 = load %struct.CustomData*, %struct.CustomData** %vdata, align 8, !dbg !9566
  %layers299 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %204, i32 0, i32 0, !dbg !9568
  %205 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers299, align 8, !dbg !9568
  %206 = load i32, i32* %layer, align 4, !dbg !9569
  %idxprom300 = sext i32 %206 to i64, !dbg !9566
  %arrayidx301 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %205, i64 %idxprom300, !dbg !9566
  %data302 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx301, i32 0, i32 9, !dbg !9570
  %207 = load i8*, i8** %data302, align 8, !dbg !9570
  %208 = bitcast i8* %207 to [3 x float]*, !dbg !9566
  %209 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9571
  %orco = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %209, i32 0, i32 3, !dbg !9572
  %array303 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %orco, i32 0, i32 0, !dbg !9573
  store [3 x float]* %208, [3 x float]** %array303, align 8, !dbg !9574
  %210 = load %struct.CustomData*, %struct.CustomData** %vdata, align 8, !dbg !9575
  %layers304 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %210, i32 0, i32 0, !dbg !9576
  %211 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers304, align 8, !dbg !9576
  %212 = load i32, i32* %layer, align 4, !dbg !9577
  %idxprom305 = sext i32 %212 to i64, !dbg !9575
  %arrayidx306 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %211, i64 %idxprom305, !dbg !9575
  %offset307 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx306, i32 0, i32 1, !dbg !9578
  %213 = load i32, i32* %offset307, align 4, !dbg !9578
  %214 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9579
  %orco308 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %214, i32 0, i32 3, !dbg !9580
  %em_offset309 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %orco308, i32 0, i32 1, !dbg !9581
  store i32 %213, i32* %em_offset309, align 8, !dbg !9582
  br label %if.end315, !dbg !9583

if.else310:                                       ; preds = %if.then295
  %215 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9584
  %orco311 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %215, i32 0, i32 3, !dbg !9586
  %array312 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %orco311, i32 0, i32 0, !dbg !9587
  store [3 x float]* null, [3 x float]** %array312, align 8, !dbg !9588
  %216 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9589
  %orco313 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %216, i32 0, i32 3, !dbg !9590
  %em_offset314 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %orco313, i32 0, i32 1, !dbg !9591
  store i32 -1, i32* %em_offset314, align 8, !dbg !9592
  br label %if.end315

if.end315:                                        ; preds = %if.else310, %if.then298
  %217 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9593
  %layer316 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %217, i32 0, i32 0, !dbg !9594
  %218 = load i32, i32* %b, align 4, !dbg !9595
  %idxprom317 = sext i32 %218 to i64, !dbg !9593
  %arrayidx318 = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer316, i64 0, i64 %idxprom317, !dbg !9593
  %glindex319 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx318, i32 0, i32 1, !dbg !9596
  %219 = load i32, i32* %glindex319, align 4, !dbg !9596
  %220 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9597
  %orco320 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %220, i32 0, i32 3, !dbg !9598
  %gl_index321 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %orco320, i32 0, i32 2, !dbg !9599
  store i32 %219, i32* %gl_index321, align 4, !dbg !9600
  %221 = load %struct.GPUVertexAttribs*, %struct.GPUVertexAttribs** %gattribs.addr, align 8, !dbg !9601
  %layer322 = getelementptr inbounds %struct.GPUVertexAttribs, %struct.GPUVertexAttribs* %221, i32 0, i32 0, !dbg !9602
  %222 = load i32, i32* %b, align 4, !dbg !9603
  %idxprom323 = sext i32 %222 to i64, !dbg !9601
  %arrayidx324 = getelementptr inbounds [32 x %struct.anon], [32 x %struct.anon]* %layer322, i64 0, i64 %idxprom323, !dbg !9601
  %gltexco325 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx324, i32 0, i32 2, !dbg !9604
  %223 = load i32, i32* %gltexco325, align 4, !dbg !9604
  %224 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !9605
  %orco326 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %224, i32 0, i32 3, !dbg !9606
  %gl_texco327 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %orco326, i32 0, i32 3, !dbg !9607
  store i32 %223, i32* %gl_texco327, align 8, !dbg !9608
  br label %if.end328, !dbg !9609

if.end328:                                        ; preds = %if.end315, %if.else289
  br label %if.end329

if.end329:                                        ; preds = %if.end328, %if.end282
  br label %if.end330

if.end330:                                        ; preds = %if.end329, %if.end255
  br label %if.end331

if.end331:                                        ; preds = %if.end330, %if.end134
  br label %for.inc332, !dbg !9610

for.inc332:                                       ; preds = %if.end331
  %225 = load i32, i32* %b, align 4, !dbg !9611
  %inc333 = add nsw i32 %225, 1, !dbg !9611
  store i32 %inc333, i32* %b, align 4, !dbg !9611
  br label %for.cond10, !dbg !9612, !llvm.loop !9613

for.end334:                                       ; preds = %for.cond10
  ret void, !dbg !9615
}

declare dso_local i32 @CustomData_get_named_layer_index(%struct.CustomData*, i32, i8*) #2

declare dso_local i32 @CustomData_get_active_layer_index(%struct.CustomData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_set_object_boundbox(%struct.Object* %ob, %struct.DerivedMesh* %dm) #0 !dbg !9616 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %min = alloca [3 x float], align 4
  %max = alloca [3 x float], align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9619, metadata !DIExpression()), !dbg !9620
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !9621, metadata !DIExpression()), !dbg !9622
  call void @llvm.dbg.declare(metadata [3 x float]* %min, metadata !9623, metadata !DIExpression()), !dbg !9624
  call void @llvm.dbg.declare(metadata [3 x float]* %max, metadata !9625, metadata !DIExpression()), !dbg !9626
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !9627
  store float 0x46293E5940000000, float* %arrayidx, align 4, !dbg !9627
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !9627
  store float 0x46293E5940000000, float* %arrayidx1, align 4, !dbg !9627
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !9627
  store float 0x46293E5940000000, float* %arrayidx2, align 4, !dbg !9627
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 2, !dbg !9627
  store float 0xC6293E5940000000, float* %arrayidx3, align 4, !dbg !9627
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 1, !dbg !9627
  store float 0xC6293E5940000000, float* %arrayidx4, align 4, !dbg !9627
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !9627
  store float 0xC6293E5940000000, float* %arrayidx5, align 4, !dbg !9627
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9629
  %getMinMax = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 75, !dbg !9630
  %1 = load void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, float*, float*)** %getMinMax, align 8, !dbg !9630
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9631
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !9632
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !9633
  call void %1(%struct.DerivedMesh* %2, float* %arraydecay, float* %arraydecay6), !dbg !9629
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9634
  %bb = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 15, !dbg !9636
  %4 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !9636
  %tobool = icmp ne %struct.BoundBox* %4, null, !dbg !9634
  br i1 %tobool, label %if.end, label %if.then, !dbg !9637

if.then:                                          ; preds = %entry
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9638
  %call = call i8* %5(i64 104, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0)), !dbg !9638
  %6 = bitcast i8* %call to %struct.BoundBox*, !dbg !9638
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9639
  %bb7 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 15, !dbg !9640
  store %struct.BoundBox* %6, %struct.BoundBox** %bb7, align 8, !dbg !9641
  br label %if.end, !dbg !9639

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9642
  %bb8 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 15, !dbg !9643
  %9 = load %struct.BoundBox*, %struct.BoundBox** %bb8, align 8, !dbg !9643
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !9644
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !9645
  call void @BKE_boundbox_init_from_minmax(%struct.BoundBox* %9, float* %arraydecay9, float* %arraydecay10), !dbg !9646
  ret void, !dbg !9647
}

declare dso_local void @BKE_boundbox_init_from_minmax(%struct.BoundBox*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DM_init_origspace(%struct.DerivedMesh* %dm) #0 !dbg !2936 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %lof_array = alloca %struct.OrigSpaceLoop*, align 8
  %lof = alloca %struct.OrigSpaceLoop*, align 8
  %numpoly = alloca i32, align 4
  %mp = alloca %struct.MPoly*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !9648, metadata !DIExpression()), !dbg !9649
  call void @llvm.dbg.declare(metadata %struct.OrigSpaceLoop** %lof_array, metadata !9650, metadata !DIExpression()), !dbg !9656
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9657
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 3, !dbg !9658
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %loopData, i32 31), !dbg !9659
  %1 = bitcast i8* %call to %struct.OrigSpaceLoop*, !dbg !9659
  store %struct.OrigSpaceLoop* %1, %struct.OrigSpaceLoop** %lof_array, align 8, !dbg !9656
  call void @llvm.dbg.declare(metadata %struct.OrigSpaceLoop** %lof, metadata !9660, metadata !DIExpression()), !dbg !9661
  call void @llvm.dbg.declare(metadata i32* %numpoly, metadata !9662, metadata !DIExpression()), !dbg !9663
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9664
  %getNumPolys = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 27, !dbg !9665
  %3 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumPolys, align 8, !dbg !9665
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9666
  %call1 = call i32 %3(%struct.DerivedMesh* %4), !dbg !9664
  store i32 %call1, i32* %numpoly, align 4, !dbg !9663
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !9667, metadata !DIExpression()), !dbg !9668
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9669
  %getPolyArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 35, !dbg !9670
  %6 = load %struct.MPoly* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)** %getPolyArray, align 8, !dbg !9670
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9671
  %call2 = call %struct.MPoly* %6(%struct.DerivedMesh* %7), !dbg !9669
  store %struct.MPoly* %call2, %struct.MPoly** %mp, align 8, !dbg !9668
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9672, metadata !DIExpression()), !dbg !9673
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9674, metadata !DIExpression()), !dbg !9675
  store i32 0, i32* %i, align 4, !dbg !9676
  br label %for.cond, !dbg !9678

for.cond:                                         ; preds = %for.inc11, %entry
  %8 = load i32, i32* %i, align 4, !dbg !9679
  %9 = load i32, i32* %numpoly, align 4, !dbg !9681
  %cmp = icmp slt i32 %8, %9, !dbg !9682
  br i1 %cmp, label %for.body, label %for.end14, !dbg !9683

for.body:                                         ; preds = %for.cond
  %10 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !9684
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %10, i32 0, i32 1, !dbg !9687
  %11 = load i32, i32* %totloop, align 4, !dbg !9687
  %cmp3 = icmp eq i32 %11, 3, !dbg !9688
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !9689

lor.lhs.false:                                    ; preds = %for.body
  %12 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !9690
  %totloop4 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %12, i32 0, i32 1, !dbg !9691
  %13 = load i32, i32* %totloop4, align 4, !dbg !9691
  %cmp5 = icmp eq i32 %13, 4, !dbg !9692
  br i1 %cmp5, label %if.then, label %if.end, !dbg !9693

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %14 = load %struct.OrigSpaceLoop*, %struct.OrigSpaceLoop** %lof_array, align 8, !dbg !9694
  %15 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !9696
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %15, i32 0, i32 0, !dbg !9697
  %16 = load i32, i32* %loopstart, align 4, !dbg !9697
  %idx.ext = sext i32 %16 to i64, !dbg !9698
  %add.ptr = getelementptr inbounds %struct.OrigSpaceLoop, %struct.OrigSpaceLoop* %14, i64 %idx.ext, !dbg !9698
  store %struct.OrigSpaceLoop* %add.ptr, %struct.OrigSpaceLoop** %lof, align 8, !dbg !9699
  store i32 0, i32* %j, align 4, !dbg !9700
  br label %for.cond6, !dbg !9702

for.cond6:                                        ; preds = %for.inc, %if.then
  %17 = load i32, i32* %j, align 4, !dbg !9703
  %18 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !9705
  %totloop7 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %18, i32 0, i32 1, !dbg !9706
  %19 = load i32, i32* %totloop7, align 4, !dbg !9706
  %cmp8 = icmp slt i32 %17, %19, !dbg !9707
  br i1 %cmp8, label %for.body9, label %for.end, !dbg !9708

for.body9:                                        ; preds = %for.cond6
  %20 = load %struct.OrigSpaceLoop*, %struct.OrigSpaceLoop** %lof, align 8, !dbg !9709
  %uv = getelementptr inbounds %struct.OrigSpaceLoop, %struct.OrigSpaceLoop* %20, i32 0, i32 0, !dbg !9711
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !9709
  %21 = load i32, i32* %j, align 4, !dbg !9712
  %idxprom = sext i32 %21 to i64, !dbg !9713
  %arrayidx = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* @DM_init_origspace.default_osf, i64 0, i64 %idxprom, !dbg !9713
  %arraydecay10 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !9713
  call void @copy_v2_v2(float* %arraydecay, float* %arraydecay10), !dbg !9714
  br label %for.inc, !dbg !9715

for.inc:                                          ; preds = %for.body9
  %22 = load i32, i32* %j, align 4, !dbg !9716
  %inc = add nsw i32 %22, 1, !dbg !9716
  store i32 %inc, i32* %j, align 4, !dbg !9716
  %23 = load %struct.OrigSpaceLoop*, %struct.OrigSpaceLoop** %lof, align 8, !dbg !9717
  %incdec.ptr = getelementptr inbounds %struct.OrigSpaceLoop, %struct.OrigSpaceLoop* %23, i32 1, !dbg !9717
  store %struct.OrigSpaceLoop* %incdec.ptr, %struct.OrigSpaceLoop** %lof, align 8, !dbg !9717
  br label %for.cond6, !dbg !9718, !llvm.loop !9719

for.end:                                          ; preds = %for.cond6
  br label %if.end, !dbg !9721

if.end:                                           ; preds = %for.end, %lor.lhs.false
  br label %for.inc11, !dbg !9722

for.inc11:                                        ; preds = %if.end
  %24 = load i32, i32* %i, align 4, !dbg !9723
  %inc12 = add nsw i32 %24, 1, !dbg !9723
  store i32 %inc12, i32* %i, align 4, !dbg !9723
  %25 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !9724
  %incdec.ptr13 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %25, i32 1, !dbg !9724
  store %struct.MPoly* %incdec.ptr13, %struct.MPoly** %mp, align 8, !dbg !9724
  br label %for.cond, !dbg !9725, !llvm.loop !9726

for.end14:                                        ; preds = %for.cond
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9728
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %26, i32 0, i32 16, !dbg !9729
  %27 = load i32, i32* %dirty, align 8, !dbg !9730
  %or = or i32 %27, 1, !dbg !9730
  store i32 %or, i32* %dirty, align 8, !dbg !9730
  ret void, !dbg !9731
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MVert* @DM_get_vert_array(%struct.DerivedMesh* %dm, i8* %allocated) #0 !dbg !9732 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %allocated.addr = alloca i8*, align 8
  %vert_data = alloca %struct.CustomData*, align 8
  %mvert = alloca %struct.MVert*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !9735, metadata !DIExpression()), !dbg !9736
  store i8* %allocated, i8** %allocated.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %allocated.addr, metadata !9737, metadata !DIExpression()), !dbg !9738
  call void @llvm.dbg.declare(metadata %struct.CustomData** %vert_data, metadata !9739, metadata !DIExpression()), !dbg !9740
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9741
  %getVertDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 55, !dbg !9742
  %1 = load %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)** %getVertDataLayout, align 8, !dbg !9742
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9743
  %call = call %struct.CustomData* %1(%struct.DerivedMesh* %2), !dbg !9741
  store %struct.CustomData* %call, %struct.CustomData** %vert_data, align 8, !dbg !9740
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !9744, metadata !DIExpression()), !dbg !9745
  %3 = load %struct.CustomData*, %struct.CustomData** %vert_data, align 8, !dbg !9746
  %call1 = call i8* @CustomData_get_layer(%struct.CustomData* %3, i32 0), !dbg !9747
  %4 = bitcast i8* %call1 to %struct.MVert*, !dbg !9747
  store %struct.MVert* %4, %struct.MVert** %mvert, align 8, !dbg !9745
  %5 = load i8*, i8** %allocated.addr, align 8, !dbg !9748
  store i8 0, i8* %5, align 1, !dbg !9749
  %6 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !9750
  %cmp = icmp eq %struct.MVert* %6, null, !dbg !9752
  br i1 %cmp, label %if.then, label %if.end, !dbg !9753

if.then:                                          ; preds = %entry
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !9754
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9756
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 23, !dbg !9757
  %9 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !9757
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9758
  %call2 = call i32 %9(%struct.DerivedMesh* %10), !dbg !9756
  %conv = sext i32 %call2 to i64, !dbg !9756
  %mul = mul i64 20, %conv, !dbg !9759
  %call3 = call i8* %7(i64 %mul, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0)), !dbg !9754
  %11 = bitcast i8* %call3 to %struct.MVert*, !dbg !9754
  store %struct.MVert* %11, %struct.MVert** %mvert, align 8, !dbg !9760
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9761
  %copyVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 36, !dbg !9762
  %13 = load void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MVert*)** %copyVertArray, align 8, !dbg !9762
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9763
  %15 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !9764
  call void %13(%struct.DerivedMesh* %14, %struct.MVert* %15), !dbg !9761
  %16 = load i8*, i8** %allocated.addr, align 8, !dbg !9765
  store i8 1, i8* %16, align 1, !dbg !9766
  br label %if.end, !dbg !9767

if.end:                                           ; preds = %if.then, %entry
  %17 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !9768
  ret %struct.MVert* %17, !dbg !9769
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MEdge* @DM_get_edge_array(%struct.DerivedMesh* %dm, i8* %allocated) #0 !dbg !9770 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %allocated.addr = alloca i8*, align 8
  %edge_data = alloca %struct.CustomData*, align 8
  %medge = alloca %struct.MEdge*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !9773, metadata !DIExpression()), !dbg !9774
  store i8* %allocated, i8** %allocated.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %allocated.addr, metadata !9775, metadata !DIExpression()), !dbg !9776
  call void @llvm.dbg.declare(metadata %struct.CustomData** %edge_data, metadata !9777, metadata !DIExpression()), !dbg !9778
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9779
  %getEdgeDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 56, !dbg !9780
  %1 = load %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)** %getEdgeDataLayout, align 8, !dbg !9780
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9781
  %call = call %struct.CustomData* %1(%struct.DerivedMesh* %2), !dbg !9779
  store %struct.CustomData* %call, %struct.CustomData** %edge_data, align 8, !dbg !9778
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge, metadata !9782, metadata !DIExpression()), !dbg !9783
  %3 = load %struct.CustomData*, %struct.CustomData** %edge_data, align 8, !dbg !9784
  %call1 = call i8* @CustomData_get_layer(%struct.CustomData* %3, i32 3), !dbg !9785
  %4 = bitcast i8* %call1 to %struct.MEdge*, !dbg !9785
  store %struct.MEdge* %4, %struct.MEdge** %medge, align 8, !dbg !9783
  %5 = load i8*, i8** %allocated.addr, align 8, !dbg !9786
  store i8 0, i8* %5, align 1, !dbg !9787
  %6 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !9788
  %cmp = icmp eq %struct.MEdge* %6, null, !dbg !9790
  br i1 %cmp, label %if.then, label %if.end, !dbg !9791

if.then:                                          ; preds = %entry
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !9792
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9794
  %getNumEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 24, !dbg !9795
  %9 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumEdges, align 8, !dbg !9795
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9796
  %call2 = call i32 %9(%struct.DerivedMesh* %10), !dbg !9794
  %conv = sext i32 %call2 to i64, !dbg !9794
  %mul = mul i64 12, %conv, !dbg !9797
  %call3 = call i8* %7(i64 %mul, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)), !dbg !9792
  %11 = bitcast i8* %call3 to %struct.MEdge*, !dbg !9792
  store %struct.MEdge* %11, %struct.MEdge** %medge, align 8, !dbg !9798
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9799
  %copyEdgeArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 37, !dbg !9800
  %13 = load void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MEdge*)** %copyEdgeArray, align 8, !dbg !9800
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9801
  %15 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !9802
  call void %13(%struct.DerivedMesh* %14, %struct.MEdge* %15), !dbg !9799
  %16 = load i8*, i8** %allocated.addr, align 8, !dbg !9803
  store i8 1, i8* %16, align 1, !dbg !9804
  br label %if.end, !dbg !9805

if.end:                                           ; preds = %if.then, %entry
  %17 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !9806
  ret %struct.MEdge* %17, !dbg !9807
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MLoop* @DM_get_loop_array(%struct.DerivedMesh* %dm, i8* %allocated) #0 !dbg !9808 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %allocated.addr = alloca i8*, align 8
  %loop_data = alloca %struct.CustomData*, align 8
  %mloop = alloca %struct.MLoop*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !9811, metadata !DIExpression()), !dbg !9812
  store i8* %allocated, i8** %allocated.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %allocated.addr, metadata !9813, metadata !DIExpression()), !dbg !9814
  call void @llvm.dbg.declare(metadata %struct.CustomData** %loop_data, metadata !9815, metadata !DIExpression()), !dbg !9816
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9817
  %getEdgeDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 56, !dbg !9818
  %1 = load %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)** %getEdgeDataLayout, align 8, !dbg !9818
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9819
  %call = call %struct.CustomData* %1(%struct.DerivedMesh* %2), !dbg !9817
  store %struct.CustomData* %call, %struct.CustomData** %loop_data, align 8, !dbg !9816
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop, metadata !9820, metadata !DIExpression()), !dbg !9821
  %3 = load %struct.CustomData*, %struct.CustomData** %loop_data, align 8, !dbg !9822
  %call1 = call i8* @CustomData_get_layer(%struct.CustomData* %3, i32 26), !dbg !9823
  %4 = bitcast i8* %call1 to %struct.MLoop*, !dbg !9823
  store %struct.MLoop* %4, %struct.MLoop** %mloop, align 8, !dbg !9821
  %5 = load i8*, i8** %allocated.addr, align 8, !dbg !9824
  store i8 0, i8* %5, align 1, !dbg !9825
  %6 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !9826
  %cmp = icmp eq %struct.MLoop* %6, null, !dbg !9828
  br i1 %cmp, label %if.then, label %if.end, !dbg !9829

if.then:                                          ; preds = %entry
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !9830
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9832
  %getNumLoops = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 26, !dbg !9833
  %9 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumLoops, align 8, !dbg !9833
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9834
  %call2 = call i32 %9(%struct.DerivedMesh* %10), !dbg !9832
  %conv = sext i32 %call2 to i64, !dbg !9832
  %mul = mul i64 8, %conv, !dbg !9835
  %call3 = call i8* %7(i64 %mul, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0)), !dbg !9830
  %11 = bitcast i8* %call3 to %struct.MLoop*, !dbg !9830
  store %struct.MLoop* %11, %struct.MLoop** %mloop, align 8, !dbg !9836
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9837
  %copyLoopArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 39, !dbg !9838
  %13 = load void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MLoop*)** %copyLoopArray, align 8, !dbg !9838
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9839
  %15 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !9840
  call void %13(%struct.DerivedMesh* %14, %struct.MLoop* %15), !dbg !9837
  %16 = load i8*, i8** %allocated.addr, align 8, !dbg !9841
  store i8 1, i8* %16, align 1, !dbg !9842
  br label %if.end, !dbg !9843

if.end:                                           ; preds = %if.then, %entry
  %17 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !9844
  ret %struct.MLoop* %17, !dbg !9845
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MPoly* @DM_get_poly_array(%struct.DerivedMesh* %dm, i8* %allocated) #0 !dbg !9846 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %allocated.addr = alloca i8*, align 8
  %poly_data = alloca %struct.CustomData*, align 8
  %mpoly = alloca %struct.MPoly*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !9849, metadata !DIExpression()), !dbg !9850
  store i8* %allocated, i8** %allocated.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %allocated.addr, metadata !9851, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.declare(metadata %struct.CustomData** %poly_data, metadata !9853, metadata !DIExpression()), !dbg !9854
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9855
  %getPolyDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 59, !dbg !9856
  %1 = load %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)** %getPolyDataLayout, align 8, !dbg !9856
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9857
  %call = call %struct.CustomData* %1(%struct.DerivedMesh* %2), !dbg !9855
  store %struct.CustomData* %call, %struct.CustomData** %poly_data, align 8, !dbg !9854
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly, metadata !9858, metadata !DIExpression()), !dbg !9859
  %3 = load %struct.CustomData*, %struct.CustomData** %poly_data, align 8, !dbg !9860
  %call1 = call i8* @CustomData_get_layer(%struct.CustomData* %3, i32 25), !dbg !9861
  %4 = bitcast i8* %call1 to %struct.MPoly*, !dbg !9861
  store %struct.MPoly* %4, %struct.MPoly** %mpoly, align 8, !dbg !9859
  %5 = load i8*, i8** %allocated.addr, align 8, !dbg !9862
  store i8 0, i8* %5, align 1, !dbg !9863
  %6 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !9864
  %cmp = icmp eq %struct.MPoly* %6, null, !dbg !9866
  br i1 %cmp, label %if.then, label %if.end, !dbg !9867

if.then:                                          ; preds = %entry
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !9868
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9870
  %getNumPolys = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 27, !dbg !9871
  %9 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumPolys, align 8, !dbg !9871
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9872
  %call2 = call i32 %9(%struct.DerivedMesh* %10), !dbg !9870
  %conv = sext i32 %call2 to i64, !dbg !9870
  %mul = mul i64 12, %conv, !dbg !9873
  %call3 = call i8* %7(i64 %mul, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i64 0, i64 0)), !dbg !9868
  %11 = bitcast i8* %call3 to %struct.MPoly*, !dbg !9868
  store %struct.MPoly* %11, %struct.MPoly** %mpoly, align 8, !dbg !9874
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9875
  %copyPolyArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 40, !dbg !9876
  %13 = load void (%struct.DerivedMesh*, %struct.MPoly*)*, void (%struct.DerivedMesh*, %struct.MPoly*)** %copyPolyArray, align 8, !dbg !9876
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9877
  %15 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !9878
  call void %13(%struct.DerivedMesh* %14, %struct.MPoly* %15), !dbg !9875
  %16 = load i8*, i8** %allocated.addr, align 8, !dbg !9879
  store i8 1, i8* %16, align 1, !dbg !9880
  br label %if.end, !dbg !9881

if.end:                                           ; preds = %if.then, %entry
  %17 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !9882
  ret %struct.MPoly* %17, !dbg !9883
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MFace* @DM_get_tessface_array(%struct.DerivedMesh* %dm, i8* %allocated) #0 !dbg !9884 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %allocated.addr = alloca i8*, align 8
  %tessface_data = alloca %struct.CustomData*, align 8
  %mface = alloca %struct.MFace*, align 8
  %numTessFaces = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !9887, metadata !DIExpression()), !dbg !9888
  store i8* %allocated, i8** %allocated.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %allocated.addr, metadata !9889, metadata !DIExpression()), !dbg !9890
  call void @llvm.dbg.declare(metadata %struct.CustomData** %tessface_data, metadata !9891, metadata !DIExpression()), !dbg !9892
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9893
  %getTessFaceDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 57, !dbg !9894
  %1 = load %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)** %getTessFaceDataLayout, align 8, !dbg !9894
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9895
  %call = call %struct.CustomData* %1(%struct.DerivedMesh* %2), !dbg !9893
  store %struct.CustomData* %call, %struct.CustomData** %tessface_data, align 8, !dbg !9892
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !9896, metadata !DIExpression()), !dbg !9897
  %3 = load %struct.CustomData*, %struct.CustomData** %tessface_data, align 8, !dbg !9898
  %call1 = call i8* @CustomData_get_layer(%struct.CustomData* %3, i32 4), !dbg !9899
  %4 = bitcast i8* %call1 to %struct.MFace*, !dbg !9899
  store %struct.MFace* %4, %struct.MFace** %mface, align 8, !dbg !9897
  %5 = load i8*, i8** %allocated.addr, align 8, !dbg !9900
  store i8 0, i8* %5, align 1, !dbg !9901
  %6 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9902
  %cmp = icmp eq %struct.MFace* %6, null, !dbg !9904
  br i1 %cmp, label %if.then, label %if.end6, !dbg !9905

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %numTessFaces, metadata !9906, metadata !DIExpression()), !dbg !9908
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9909
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 25, !dbg !9910
  %8 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !9910
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9911
  %call2 = call i32 %8(%struct.DerivedMesh* %9), !dbg !9909
  store i32 %call2, i32* %numTessFaces, align 4, !dbg !9908
  %10 = load i32, i32* %numTessFaces, align 4, !dbg !9912
  %cmp3 = icmp sgt i32 %10, 0, !dbg !9914
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !9915

if.then4:                                         ; preds = %if.then
  %11 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !9916
  %12 = load i32, i32* %numTessFaces, align 4, !dbg !9918
  %conv = sext i32 %12 to i64, !dbg !9918
  %mul = mul i64 20, %conv, !dbg !9919
  %call5 = call i8* %11(i64 %mul, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.15, i64 0, i64 0)), !dbg !9916
  %13 = bitcast i8* %call5 to %struct.MFace*, !dbg !9916
  store %struct.MFace* %13, %struct.MFace** %mface, align 8, !dbg !9920
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9921
  %copyTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %14, i32 0, i32 38, !dbg !9922
  %15 = load void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MFace*)** %copyTessFaceArray, align 8, !dbg !9922
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9923
  %17 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9924
  call void %15(%struct.DerivedMesh* %16, %struct.MFace* %17), !dbg !9921
  %18 = load i8*, i8** %allocated.addr, align 8, !dbg !9925
  store i8 1, i8* %18, align 1, !dbg !9926
  br label %if.end, !dbg !9927

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end6, !dbg !9928

if.end6:                                          ; preds = %if.end, %entry
  %19 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9929
  ret %struct.MFace* %19, !dbg !9930
}

declare dso_local void @CustomData_set_layer_flag(%struct.CustomData*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @weightpaint_color(i8* %r_col, %struct.DMWeightColorInfo* %dm_wcinfo, float %input) #0 !dbg !9931 {
entry:
  %r_col.addr = alloca i8*, align 8
  %dm_wcinfo.addr = alloca %struct.DMWeightColorInfo*, align 8
  %input.addr = alloca float, align 4
  %colf = alloca [4 x float], align 16
  store i8* %r_col, i8** %r_col.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_col.addr, metadata !9934, metadata !DIExpression()), !dbg !9935
  store %struct.DMWeightColorInfo* %dm_wcinfo, %struct.DMWeightColorInfo** %dm_wcinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DMWeightColorInfo** %dm_wcinfo.addr, metadata !9936, metadata !DIExpression()), !dbg !9937
  store float %input, float* %input.addr, align 4
  call void @llvm.dbg.declare(metadata float* %input.addr, metadata !9938, metadata !DIExpression()), !dbg !9939
  call void @llvm.dbg.declare(metadata [4 x float]* %colf, metadata !9940, metadata !DIExpression()), !dbg !9941
  %0 = load %struct.DMWeightColorInfo*, %struct.DMWeightColorInfo** %dm_wcinfo.addr, align 8, !dbg !9942
  %tobool = icmp ne %struct.DMWeightColorInfo* %0, null, !dbg !9942
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !9944

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.DMWeightColorInfo*, %struct.DMWeightColorInfo** %dm_wcinfo.addr, align 8, !dbg !9945
  %coba = getelementptr inbounds %struct.DMWeightColorInfo, %struct.DMWeightColorInfo* %1, i32 0, i32 0, !dbg !9946
  %2 = load %struct.ColorBand*, %struct.ColorBand** %coba, align 8, !dbg !9946
  %tobool1 = icmp ne %struct.ColorBand* %2, null, !dbg !9945
  br i1 %tobool1, label %if.then, label %if.else, !dbg !9947

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.DMWeightColorInfo*, %struct.DMWeightColorInfo** %dm_wcinfo.addr, align 8, !dbg !9948
  %coba2 = getelementptr inbounds %struct.DMWeightColorInfo, %struct.DMWeightColorInfo* %3, i32 0, i32 0, !dbg !9950
  %4 = load %struct.ColorBand*, %struct.ColorBand** %coba2, align 8, !dbg !9950
  %5 = load float, float* %input.addr, align 4, !dbg !9951
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %colf, i64 0, i64 0, !dbg !9952
  %call = call zeroext i8 @do_colorband(%struct.ColorBand* %4, float %5, float* %arraydecay), !dbg !9953
  br label %if.end, !dbg !9954

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay3 = getelementptr inbounds [4 x float], [4 x float]* %colf, i64 0, i64 0, !dbg !9955
  %6 = load float, float* %input.addr, align 4, !dbg !9957
  call void @weight_to_rgb(float* %arraydecay3, float %6), !dbg !9958
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %colf, i64 0, i64 0, !dbg !9959
  %7 = load float, float* %arrayidx, align 16, !dbg !9959
  %mul = fmul float %7, 2.550000e+02, !dbg !9960
  %conv = fptoui float %mul to i8, !dbg !9961
  %8 = load i8*, i8** %r_col.addr, align 8, !dbg !9962
  %arrayidx4 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !9962
  store i8 %conv, i8* %arrayidx4, align 1, !dbg !9963
  %arrayidx5 = getelementptr inbounds [4 x float], [4 x float]* %colf, i64 0, i64 1, !dbg !9964
  %9 = load float, float* %arrayidx5, align 4, !dbg !9964
  %mul6 = fmul float %9, 2.550000e+02, !dbg !9965
  %conv7 = fptoui float %mul6 to i8, !dbg !9966
  %10 = load i8*, i8** %r_col.addr, align 8, !dbg !9967
  %arrayidx8 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !9967
  store i8 %conv7, i8* %arrayidx8, align 1, !dbg !9968
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %colf, i64 0, i64 2, !dbg !9969
  %11 = load float, float* %arrayidx9, align 8, !dbg !9969
  %mul10 = fmul float %11, 2.550000e+02, !dbg !9970
  %conv11 = fptoui float %mul10 to i8, !dbg !9971
  %12 = load i8*, i8** %r_col.addr, align 8, !dbg !9972
  %arrayidx12 = getelementptr inbounds i8, i8* %12, i64 2, !dbg !9972
  store i8 %conv11, i8* %arrayidx12, align 1, !dbg !9973
  %13 = load i8*, i8** %r_col.addr, align 8, !dbg !9974
  %arrayidx13 = getelementptr inbounds i8, i8* %13, i64 3, !dbg !9974
  store i8 -1, i8* %arrayidx13, align 1, !dbg !9975
  ret void, !dbg !9976
}

declare dso_local zeroext i8 @do_colorband(%struct.ColorBand*, float, float*) #2

declare dso_local i32 @BLI_countlist(%struct.ListBase*) #2

declare dso_local i8* @BKE_objdef_selected_get(%struct.Object*, i32, i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @calc_weightpaint_vert_color(i8* %r_col, %struct.MDeformVert* %dv, %struct.DMWeightColorInfo* %dm_wcinfo, i32 %defbase_tot, i32 %defbase_act, i8* %defbase_sel, i32 %defbase_sel_tot, i32 %draw_flag) #0 !dbg !9977 {
entry:
  %r_col.addr = alloca i8*, align 8
  %dv.addr = alloca %struct.MDeformVert*, align 8
  %dm_wcinfo.addr = alloca %struct.DMWeightColorInfo*, align 8
  %defbase_tot.addr = alloca i32, align 4
  %defbase_act.addr = alloca i32, align 4
  %defbase_sel.addr = alloca i8*, align 8
  %defbase_sel_tot.addr = alloca i32, align 4
  %draw_flag.addr = alloca i32, align 4
  %input = alloca float, align 4
  %show_alert_color = alloca i8, align 1
  %was_a_nonzero = alloca i8, align 1
  %i = alloca i32, align 4
  %dw = alloca %struct.MDeformWeight*, align 8
  store i8* %r_col, i8** %r_col.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_col.addr, metadata !9983, metadata !DIExpression()), !dbg !9984
  store %struct.MDeformVert* %dv, %struct.MDeformVert** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv.addr, metadata !9985, metadata !DIExpression()), !dbg !9986
  store %struct.DMWeightColorInfo* %dm_wcinfo, %struct.DMWeightColorInfo** %dm_wcinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DMWeightColorInfo** %dm_wcinfo.addr, metadata !9987, metadata !DIExpression()), !dbg !9988
  store i32 %defbase_tot, i32* %defbase_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %defbase_tot.addr, metadata !9989, metadata !DIExpression()), !dbg !9990
  store i32 %defbase_act, i32* %defbase_act.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %defbase_act.addr, metadata !9991, metadata !DIExpression()), !dbg !9992
  store i8* %defbase_sel, i8** %defbase_sel.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %defbase_sel.addr, metadata !9993, metadata !DIExpression()), !dbg !9994
  store i32 %defbase_sel_tot, i32* %defbase_sel_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %defbase_sel_tot.addr, metadata !9995, metadata !DIExpression()), !dbg !9996
  store i32 %draw_flag, i32* %draw_flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %draw_flag.addr, metadata !9997, metadata !DIExpression()), !dbg !9998
  call void @llvm.dbg.declare(metadata float* %input, metadata !9999, metadata !DIExpression()), !dbg !10000
  store float 0.000000e+00, float* %input, align 4, !dbg !10000
  call void @llvm.dbg.declare(metadata i8* %show_alert_color, metadata !10001, metadata !DIExpression()), !dbg !10002
  store i8 0, i8* %show_alert_color, align 1, !dbg !10002
  %0 = load i32, i32* %defbase_sel_tot.addr, align 4, !dbg !10003
  %cmp = icmp sgt i32 %0, 1, !dbg !10005
  br i1 %cmp, label %land.lhs.true, label %if.else23, !dbg !10006

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %draw_flag.addr, align 4, !dbg !10007
  %and = and i32 %1, 8, !dbg !10008
  %tobool = icmp ne i32 %and, 0, !dbg !10008
  br i1 %tobool, label %if.then, label %if.else23, !dbg !10009

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8* %was_a_nonzero, metadata !10010, metadata !DIExpression()), !dbg !10012
  store i8 0, i8* %was_a_nonzero, align 1, !dbg !10012
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10013, metadata !DIExpression()), !dbg !10014
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !10015, metadata !DIExpression()), !dbg !10019
  %2 = load %struct.MDeformVert*, %struct.MDeformVert** %dv.addr, align 8, !dbg !10020
  %dw1 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %2, i32 0, i32 0, !dbg !10021
  %3 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw1, align 8, !dbg !10021
  store %struct.MDeformWeight* %3, %struct.MDeformWeight** %dw, align 8, !dbg !10019
  %4 = load %struct.MDeformVert*, %struct.MDeformVert** %dv.addr, align 8, !dbg !10022
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %4, i32 0, i32 1, !dbg !10024
  %5 = load i32, i32* %totweight, align 8, !dbg !10024
  store i32 %5, i32* %i, align 4, !dbg !10025
  br label %for.cond, !dbg !10026

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %i, align 4, !dbg !10027
  %cmp2 = icmp ne i32 %6, 0, !dbg !10029
  br i1 %cmp2, label %for.body, label %for.end, !dbg !10030

for.body:                                         ; preds = %for.cond
  %7 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10031
  %def_nr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %7, i32 0, i32 0, !dbg !10034
  %8 = load i32, i32* %def_nr, align 4, !dbg !10034
  %9 = load i32, i32* %defbase_tot.addr, align 4, !dbg !10035
  %cmp3 = icmp slt i32 %8, %9, !dbg !10036
  br i1 %cmp3, label %if.then4, label %if.end12, !dbg !10037

if.then4:                                         ; preds = %for.body
  %10 = load i8*, i8** %defbase_sel.addr, align 8, !dbg !10038
  %11 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10041
  %def_nr5 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %11, i32 0, i32 0, !dbg !10042
  %12 = load i32, i32* %def_nr5, align 4, !dbg !10042
  %idxprom = sext i32 %12 to i64, !dbg !10038
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %idxprom, !dbg !10038
  %13 = load i8, i8* %arrayidx, align 1, !dbg !10038
  %tobool6 = icmp ne i8 %13, 0, !dbg !10038
  br i1 %tobool6, label %if.then7, label %if.end11, !dbg !10043

if.then7:                                         ; preds = %if.then4
  %14 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10044
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %14, i32 0, i32 1, !dbg !10047
  %15 = load float, float* %weight, align 4, !dbg !10047
  %tobool8 = fcmp une float %15, 0.000000e+00, !dbg !10044
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !10048

if.then9:                                         ; preds = %if.then7
  %16 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10049
  %weight10 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %16, i32 0, i32 1, !dbg !10051
  %17 = load float, float* %weight10, align 4, !dbg !10051
  %18 = load float, float* %input, align 4, !dbg !10052
  %add = fadd float %18, %17, !dbg !10052
  store float %add, float* %input, align 4, !dbg !10052
  store i8 1, i8* %was_a_nonzero, align 1, !dbg !10053
  br label %if.end, !dbg !10054

if.end:                                           ; preds = %if.then9, %if.then7
  br label %if.end11, !dbg !10055

if.end11:                                         ; preds = %if.end, %if.then4
  br label %if.end12, !dbg !10056

if.end12:                                         ; preds = %if.end11, %for.body
  br label %for.inc, !dbg !10057

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4, !dbg !10058
  %dec = add i32 %19, -1, !dbg !10058
  store i32 %dec, i32* %i, align 4, !dbg !10058
  %20 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10059
  %incdec.ptr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %20, i32 1, !dbg !10059
  store %struct.MDeformWeight* %incdec.ptr, %struct.MDeformWeight** %dw, align 8, !dbg !10059
  br label %for.cond, !dbg !10060, !llvm.loop !10061

for.end:                                          ; preds = %for.cond
  %21 = load i8, i8* %was_a_nonzero, align 1, !dbg !10063
  %conv = zext i8 %21 to i32, !dbg !10063
  %cmp13 = icmp eq i32 %conv, 0, !dbg !10065
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !10066

if.then15:                                        ; preds = %for.end
  store i8 1, i8* %show_alert_color, align 1, !dbg !10067
  br label %if.end22, !dbg !10069

if.else:                                          ; preds = %for.end
  %22 = load i32, i32* %draw_flag.addr, align 4, !dbg !10070
  %and16 = and i32 %22, 16, !dbg !10072
  %cmp17 = icmp eq i32 %and16, 0, !dbg !10073
  br i1 %cmp17, label %if.then19, label %if.end21, !dbg !10074

if.then19:                                        ; preds = %if.else
  %23 = load i32, i32* %defbase_sel_tot.addr, align 4, !dbg !10075
  %conv20 = sitofp i32 %23 to float, !dbg !10075
  %24 = load float, float* %input, align 4, !dbg !10077
  %div = fdiv float %24, %conv20, !dbg !10077
  store float %div, float* %input, align 4, !dbg !10077
  br label %if.end21, !dbg !10078

if.end21:                                         ; preds = %if.then19, %if.else
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then15
  br label %if.end42, !dbg !10079

if.else23:                                        ; preds = %land.lhs.true, %entry
  %25 = load %struct.MDeformVert*, %struct.MDeformVert** %dv.addr, align 8, !dbg !10080
  %26 = load i32, i32* %defbase_act.addr, align 4, !dbg !10082
  %call = call float @defvert_find_weight(%struct.MDeformVert* %25, i32 %26), !dbg !10083
  store float %call, float* %input, align 4, !dbg !10084
  %27 = load i32, i32* %draw_flag.addr, align 4, !dbg !10085
  %and24 = and i32 %27, 2, !dbg !10087
  %tobool25 = icmp ne i32 %and24, 0, !dbg !10087
  br i1 %tobool25, label %if.then26, label %if.else31, !dbg !10088

if.then26:                                        ; preds = %if.else23
  %28 = load float, float* %input, align 4, !dbg !10089
  %cmp27 = fcmp oeq float %28, 0.000000e+00, !dbg !10092
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !10093

if.then29:                                        ; preds = %if.then26
  store i8 1, i8* %show_alert_color, align 1, !dbg !10094
  br label %if.end30, !dbg !10096

if.end30:                                         ; preds = %if.then29, %if.then26
  br label %if.end41, !dbg !10097

if.else31:                                        ; preds = %if.else23
  %29 = load i32, i32* %draw_flag.addr, align 4, !dbg !10098
  %and32 = and i32 %29, 4, !dbg !10100
  %tobool33 = icmp ne i32 %and32, 0, !dbg !10100
  br i1 %tobool33, label %if.then34, label %if.end40, !dbg !10101

if.then34:                                        ; preds = %if.else31
  %30 = load float, float* %input, align 4, !dbg !10102
  %cmp35 = fcmp oeq float %30, 0.000000e+00, !dbg !10105
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !10106

if.then37:                                        ; preds = %if.then34
  %31 = load %struct.MDeformVert*, %struct.MDeformVert** %dv.addr, align 8, !dbg !10107
  %32 = load i32, i32* %defbase_tot.addr, align 4, !dbg !10109
  %call38 = call zeroext i8 @defvert_is_weight_zero(%struct.MDeformVert* %31, i32 %32), !dbg !10110
  store i8 %call38, i8* %show_alert_color, align 1, !dbg !10111
  br label %if.end39, !dbg !10112

if.end39:                                         ; preds = %if.then37, %if.then34
  br label %if.end40, !dbg !10113

if.end40:                                         ; preds = %if.end39, %if.else31
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end30
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end22
  %33 = load i8, i8* %show_alert_color, align 1, !dbg !10114
  %conv43 = zext i8 %33 to i32, !dbg !10114
  %cmp44 = icmp eq i32 %conv43, 0, !dbg !10116
  br i1 %cmp44, label %if.then46, label %if.else56, !dbg !10117

if.then46:                                        ; preds = %if.end42
  %34 = load float, float* %input, align 4, !dbg !10118
  %cmp47 = fcmp olt float %34, 0.000000e+00, !dbg !10118
  br i1 %cmp47, label %if.then49, label %if.else50, !dbg !10122

if.then49:                                        ; preds = %if.then46
  store float 0.000000e+00, float* %input, align 4, !dbg !10118
  br label %if.end55, !dbg !10118

if.else50:                                        ; preds = %if.then46
  %35 = load float, float* %input, align 4, !dbg !10123
  %cmp51 = fcmp ogt float %35, 1.000000e+00, !dbg !10123
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !10118

if.then53:                                        ; preds = %if.else50
  store float 1.000000e+00, float* %input, align 4, !dbg !10123
  br label %if.end54, !dbg !10123

if.end54:                                         ; preds = %if.then53, %if.else50
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then49
  %36 = load i8*, i8** %r_col.addr, align 8, !dbg !10125
  %37 = load %struct.DMWeightColorInfo*, %struct.DMWeightColorInfo** %dm_wcinfo.addr, align 8, !dbg !10126
  %38 = load float, float* %input, align 4, !dbg !10127
  call void @weightpaint_color(i8* %36, %struct.DMWeightColorInfo* %37, float %38), !dbg !10128
  br label %if.end58, !dbg !10129

if.else56:                                        ; preds = %if.end42
  %39 = load i8*, i8** %r_col.addr, align 8, !dbg !10130
  %40 = load %struct.DMWeightColorInfo*, %struct.DMWeightColorInfo** %dm_wcinfo.addr, align 8, !dbg !10132
  %alert_color = getelementptr inbounds %struct.DMWeightColorInfo, %struct.DMWeightColorInfo* %40, i32 0, i32 1, !dbg !10133
  %41 = load i8*, i8** %alert_color, align 8, !dbg !10133
  call void @copy_v3_v3_char(i8* %39, i8* %41), !dbg !10134
  %42 = load i8*, i8** %r_col.addr, align 8, !dbg !10135
  %arrayidx57 = getelementptr inbounds i8, i8* %42, i64 3, !dbg !10135
  store i8 -1, i8* %arrayidx57, align 1, !dbg !10136
  br label %if.end58

if.end58:                                         ; preds = %if.else56, %if.end55
  ret void, !dbg !10137
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3_char(i8* %r, i8* %a) #0 !dbg !10138 {
entry:
  %r.addr = alloca i8*, align 8
  %a.addr = alloca i8*, align 8
  store i8* %r, i8** %r.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r.addr, metadata !10139, metadata !DIExpression()), !dbg !10140
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !10141, metadata !DIExpression()), !dbg !10142
  %0 = load i8*, i8** %a.addr, align 8, !dbg !10143
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !10143
  %1 = load i8, i8* %arrayidx, align 1, !dbg !10143
  %2 = load i8*, i8** %r.addr, align 8, !dbg !10144
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i64 0, !dbg !10144
  store i8 %1, i8* %arrayidx1, align 1, !dbg !10145
  %3 = load i8*, i8** %a.addr, align 8, !dbg !10146
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !10146
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !10146
  %5 = load i8*, i8** %r.addr, align 8, !dbg !10147
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !10147
  store i8 %4, i8* %arrayidx3, align 1, !dbg !10148
  %6 = load i8*, i8** %a.addr, align 8, !dbg !10149
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 2, !dbg !10149
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !10149
  %8 = load i8*, i8** %r.addr, align 8, !dbg !10150
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 2, !dbg !10150
  store i8 %7, i8* %arrayidx5, align 1, !dbg !10151
  ret void, !dbg !10152
}

declare dso_local float @defvert_find_weight(%struct.MDeformVert*, i32) #2

declare dso_local zeroext i8 @defvert_is_weight_zero(%struct.MDeformVert*, i32) #2

declare dso_local i32 @CustomData_number_of_layers(%struct.CustomData*, i32) #2

declare dso_local i32 @CustomData_get_layer_index_n(%struct.CustomData*, i32, i32) #2

declare dso_local %struct.KeyBlock* @BKE_keyblock_add(%struct.Key*, i8*) #2

declare dso_local i8* @CustomData_get_layer_n(%struct.CustomData*, i32, i32) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

declare dso_local i8* @CustomData_add_layer_named(%struct.CustomData*, i32, i32, i8*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_iter_init(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !10153 {
entry:
  %retval = alloca i8, align 1
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !10156, metadata !DIExpression()), !dbg !10157
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !10158, metadata !DIExpression()), !dbg !10159
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !10160, metadata !DIExpression()), !dbg !10161
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10162, metadata !DIExpression()), !dbg !10163
  %0 = load i8, i8* %itype.addr, align 1, !dbg !10164
  %1 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10165
  %itype1 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %1, i32 0, i32 4, !dbg !10166
  store i8 %0, i8* %itype1, align 4, !dbg !10167
  %2 = load i8, i8* %itype.addr, align 1, !dbg !10168
  %conv = zext i8 %2 to i32, !dbg !10169
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb10
    i32 4, label %sw.bb17
    i32 5, label %sw.bb21
    i32 6, label %sw.bb26
    i32 7, label %sw.bb31
    i32 8, label %sw.bb35
    i32 9, label %sw.bb40
    i32 10, label %sw.bb44
    i32 11, label %sw.bb49
    i32 13, label %sw.bb54
    i32 14, label %sw.bb58
  ], !dbg !10170

sw.bb:                                            ; preds = %entry
  %3 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10171
  %begin = getelementptr inbounds %struct.BMIter, %struct.BMIter* %3, i32 0, i32 1, !dbg !10173
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin, align 8, !dbg !10174
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10175
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %4, i32 0, i32 2, !dbg !10176
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step, align 8, !dbg !10177
  %5 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !10178
  %vpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 9, !dbg !10179
  %6 = load %struct.BLI_mempool*, %struct.BLI_mempool** %vpool, align 8, !dbg !10179
  %7 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10180
  %data2 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %7, i32 0, i32 0, !dbg !10181
  %elem_of_mesh = bitcast %union.anon.0* %data2 to %struct.BMIter__elem_of_mesh*, !dbg !10182
  %pooliter = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh, i32 0, i32 0, !dbg !10183
  %pool = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter, i32 0, i32 0, !dbg !10184
  store %struct.BLI_mempool* %6, %struct.BLI_mempool** %pool, align 8, !dbg !10185
  br label %sw.epilog, !dbg !10186

sw.bb3:                                           ; preds = %entry
  %8 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10187
  %begin4 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %8, i32 0, i32 1, !dbg !10188
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin4, align 8, !dbg !10189
  %9 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10190
  %step5 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %9, i32 0, i32 2, !dbg !10191
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step5, align 8, !dbg !10192
  %10 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !10193
  %epool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 10, !dbg !10194
  %11 = load %struct.BLI_mempool*, %struct.BLI_mempool** %epool, align 8, !dbg !10194
  %12 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10195
  %data6 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %12, i32 0, i32 0, !dbg !10196
  %elem_of_mesh7 = bitcast %union.anon.0* %data6 to %struct.BMIter__elem_of_mesh*, !dbg !10197
  %pooliter8 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh7, i32 0, i32 0, !dbg !10198
  %pool9 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter8, i32 0, i32 0, !dbg !10199
  store %struct.BLI_mempool* %11, %struct.BLI_mempool** %pool9, align 8, !dbg !10200
  br label %sw.epilog, !dbg !10201

sw.bb10:                                          ; preds = %entry
  %13 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10202
  %begin11 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %13, i32 0, i32 1, !dbg !10203
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin11, align 8, !dbg !10204
  %14 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10205
  %step12 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %14, i32 0, i32 2, !dbg !10206
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step12, align 8, !dbg !10207
  %15 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !10208
  %fpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 12, !dbg !10209
  %16 = load %struct.BLI_mempool*, %struct.BLI_mempool** %fpool, align 8, !dbg !10209
  %17 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10210
  %data13 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %17, i32 0, i32 0, !dbg !10211
  %elem_of_mesh14 = bitcast %union.anon.0* %data13 to %struct.BMIter__elem_of_mesh*, !dbg !10212
  %pooliter15 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh14, i32 0, i32 0, !dbg !10213
  %pool16 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter15, i32 0, i32 0, !dbg !10214
  store %struct.BLI_mempool* %16, %struct.BLI_mempool** %pool16, align 8, !dbg !10215
  br label %sw.epilog, !dbg !10216

sw.bb17:                                          ; preds = %entry
  %18 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10217
  %begin18 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %18, i32 0, i32 1, !dbg !10218
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_begin to void (i8*)*), void (i8*)** %begin18, align 8, !dbg !10219
  %19 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10220
  %step19 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %19, i32 0, i32 2, !dbg !10221
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_step to i8* (i8*)*), i8* (i8*)** %step19, align 8, !dbg !10222
  %20 = load i8*, i8** %data.addr, align 8, !dbg !10223
  %21 = bitcast i8* %20 to %struct.BMVert*, !dbg !10224
  %22 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10225
  %data20 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %22, i32 0, i32 0, !dbg !10226
  %edge_of_vert = bitcast %union.anon.0* %data20 to %struct.BMIter__edge_of_vert*, !dbg !10227
  %vdata = getelementptr inbounds %struct.BMIter__edge_of_vert, %struct.BMIter__edge_of_vert* %edge_of_vert, i32 0, i32 0, !dbg !10228
  store %struct.BMVert* %21, %struct.BMVert** %vdata, align 8, !dbg !10229
  br label %sw.epilog, !dbg !10230

sw.bb21:                                          ; preds = %entry
  %23 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10231
  %begin22 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %23, i32 0, i32 1, !dbg !10232
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_begin to void (i8*)*), void (i8*)** %begin22, align 8, !dbg !10233
  %24 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10234
  %step23 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %24, i32 0, i32 2, !dbg !10235
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_step to i8* (i8*)*), i8* (i8*)** %step23, align 8, !dbg !10236
  %25 = load i8*, i8** %data.addr, align 8, !dbg !10237
  %26 = bitcast i8* %25 to %struct.BMVert*, !dbg !10238
  %27 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10239
  %data24 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %27, i32 0, i32 0, !dbg !10240
  %face_of_vert = bitcast %union.anon.0* %data24 to %struct.BMIter__face_of_vert*, !dbg !10241
  %vdata25 = getelementptr inbounds %struct.BMIter__face_of_vert, %struct.BMIter__face_of_vert* %face_of_vert, i32 0, i32 0, !dbg !10242
  store %struct.BMVert* %26, %struct.BMVert** %vdata25, align 8, !dbg !10243
  br label %sw.epilog, !dbg !10244

sw.bb26:                                          ; preds = %entry
  %28 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10245
  %begin27 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %28, i32 0, i32 1, !dbg !10246
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_begin to void (i8*)*), void (i8*)** %begin27, align 8, !dbg !10247
  %29 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10248
  %step28 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %29, i32 0, i32 2, !dbg !10249
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_step to i8* (i8*)*), i8* (i8*)** %step28, align 8, !dbg !10250
  %30 = load i8*, i8** %data.addr, align 8, !dbg !10251
  %31 = bitcast i8* %30 to %struct.BMVert*, !dbg !10252
  %32 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10253
  %data29 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %32, i32 0, i32 0, !dbg !10254
  %loop_of_vert = bitcast %union.anon.0* %data29 to %struct.BMIter__loop_of_vert*, !dbg !10255
  %vdata30 = getelementptr inbounds %struct.BMIter__loop_of_vert, %struct.BMIter__loop_of_vert* %loop_of_vert, i32 0, i32 0, !dbg !10256
  store %struct.BMVert* %31, %struct.BMVert** %vdata30, align 8, !dbg !10257
  br label %sw.epilog, !dbg !10258

sw.bb31:                                          ; preds = %entry
  %33 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10259
  %begin32 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %33, i32 0, i32 1, !dbg !10260
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_begin to void (i8*)*), void (i8*)** %begin32, align 8, !dbg !10261
  %34 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10262
  %step33 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %34, i32 0, i32 2, !dbg !10263
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_step to i8* (i8*)*), i8* (i8*)** %step33, align 8, !dbg !10264
  %35 = load i8*, i8** %data.addr, align 8, !dbg !10265
  %36 = bitcast i8* %35 to %struct.BMEdge*, !dbg !10266
  %37 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10267
  %data34 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %37, i32 0, i32 0, !dbg !10268
  %vert_of_edge = bitcast %union.anon.0* %data34 to %struct.BMIter__vert_of_edge*, !dbg !10269
  %edata = getelementptr inbounds %struct.BMIter__vert_of_edge, %struct.BMIter__vert_of_edge* %vert_of_edge, i32 0, i32 0, !dbg !10270
  store %struct.BMEdge* %36, %struct.BMEdge** %edata, align 8, !dbg !10271
  br label %sw.epilog, !dbg !10272

sw.bb35:                                          ; preds = %entry
  %38 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10273
  %begin36 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %38, i32 0, i32 1, !dbg !10274
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_begin to void (i8*)*), void (i8*)** %begin36, align 8, !dbg !10275
  %39 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10276
  %step37 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %39, i32 0, i32 2, !dbg !10277
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_step to i8* (i8*)*), i8* (i8*)** %step37, align 8, !dbg !10278
  %40 = load i8*, i8** %data.addr, align 8, !dbg !10279
  %41 = bitcast i8* %40 to %struct.BMEdge*, !dbg !10280
  %42 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10281
  %data38 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %42, i32 0, i32 0, !dbg !10282
  %face_of_edge = bitcast %union.anon.0* %data38 to %struct.BMIter__face_of_edge*, !dbg !10283
  %edata39 = getelementptr inbounds %struct.BMIter__face_of_edge, %struct.BMIter__face_of_edge* %face_of_edge, i32 0, i32 0, !dbg !10284
  store %struct.BMEdge* %41, %struct.BMEdge** %edata39, align 8, !dbg !10285
  br label %sw.epilog, !dbg !10286

sw.bb40:                                          ; preds = %entry
  %43 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10287
  %begin41 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %43, i32 0, i32 1, !dbg !10288
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_begin to void (i8*)*), void (i8*)** %begin41, align 8, !dbg !10289
  %44 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10290
  %step42 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %44, i32 0, i32 2, !dbg !10291
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_step to i8* (i8*)*), i8* (i8*)** %step42, align 8, !dbg !10292
  %45 = load i8*, i8** %data.addr, align 8, !dbg !10293
  %46 = bitcast i8* %45 to %struct.BMFace*, !dbg !10294
  %47 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10295
  %data43 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %47, i32 0, i32 0, !dbg !10296
  %vert_of_face = bitcast %union.anon.0* %data43 to %struct.BMIter__vert_of_face*, !dbg !10297
  %pdata = getelementptr inbounds %struct.BMIter__vert_of_face, %struct.BMIter__vert_of_face* %vert_of_face, i32 0, i32 0, !dbg !10298
  store %struct.BMFace* %46, %struct.BMFace** %pdata, align 8, !dbg !10299
  br label %sw.epilog, !dbg !10300

sw.bb44:                                          ; preds = %entry
  %48 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10301
  %begin45 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %48, i32 0, i32 1, !dbg !10302
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_begin to void (i8*)*), void (i8*)** %begin45, align 8, !dbg !10303
  %49 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10304
  %step46 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %49, i32 0, i32 2, !dbg !10305
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_step to i8* (i8*)*), i8* (i8*)** %step46, align 8, !dbg !10306
  %50 = load i8*, i8** %data.addr, align 8, !dbg !10307
  %51 = bitcast i8* %50 to %struct.BMFace*, !dbg !10308
  %52 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10309
  %data47 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %52, i32 0, i32 0, !dbg !10310
  %edge_of_face = bitcast %union.anon.0* %data47 to %struct.BMIter__edge_of_face*, !dbg !10311
  %pdata48 = getelementptr inbounds %struct.BMIter__edge_of_face, %struct.BMIter__edge_of_face* %edge_of_face, i32 0, i32 0, !dbg !10312
  store %struct.BMFace* %51, %struct.BMFace** %pdata48, align 8, !dbg !10313
  br label %sw.epilog, !dbg !10314

sw.bb49:                                          ; preds = %entry
  %53 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10315
  %begin50 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %53, i32 0, i32 1, !dbg !10316
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_begin to void (i8*)*), void (i8*)** %begin50, align 8, !dbg !10317
  %54 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10318
  %step51 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %54, i32 0, i32 2, !dbg !10319
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_step to i8* (i8*)*), i8* (i8*)** %step51, align 8, !dbg !10320
  %55 = load i8*, i8** %data.addr, align 8, !dbg !10321
  %56 = bitcast i8* %55 to %struct.BMFace*, !dbg !10322
  %57 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10323
  %data52 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %57, i32 0, i32 0, !dbg !10324
  %loop_of_face = bitcast %union.anon.0* %data52 to %struct.BMIter__loop_of_face*, !dbg !10325
  %pdata53 = getelementptr inbounds %struct.BMIter__loop_of_face, %struct.BMIter__loop_of_face* %loop_of_face, i32 0, i32 0, !dbg !10326
  store %struct.BMFace* %56, %struct.BMFace** %pdata53, align 8, !dbg !10327
  br label %sw.epilog, !dbg !10328

sw.bb54:                                          ; preds = %entry
  %58 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10329
  %begin55 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %58, i32 0, i32 1, !dbg !10330
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_begin to void (i8*)*), void (i8*)** %begin55, align 8, !dbg !10331
  %59 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10332
  %step56 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %59, i32 0, i32 2, !dbg !10333
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_step to i8* (i8*)*), i8* (i8*)** %step56, align 8, !dbg !10334
  %60 = load i8*, i8** %data.addr, align 8, !dbg !10335
  %61 = bitcast i8* %60 to %struct.BMLoop*, !dbg !10336
  %62 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10337
  %data57 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %62, i32 0, i32 0, !dbg !10338
  %loop_of_loop = bitcast %union.anon.0* %data57 to %struct.BMIter__loop_of_loop*, !dbg !10339
  %ldata = getelementptr inbounds %struct.BMIter__loop_of_loop, %struct.BMIter__loop_of_loop* %loop_of_loop, i32 0, i32 0, !dbg !10340
  store %struct.BMLoop* %61, %struct.BMLoop** %ldata, align 8, !dbg !10341
  br label %sw.epilog, !dbg !10342

sw.bb58:                                          ; preds = %entry
  %63 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10343
  %begin59 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %63, i32 0, i32 1, !dbg !10344
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_begin to void (i8*)*), void (i8*)** %begin59, align 8, !dbg !10345
  %64 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10346
  %step60 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %64, i32 0, i32 2, !dbg !10347
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_step to i8* (i8*)*), i8* (i8*)** %step60, align 8, !dbg !10348
  %65 = load i8*, i8** %data.addr, align 8, !dbg !10349
  %66 = bitcast i8* %65 to %struct.BMEdge*, !dbg !10350
  %67 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10351
  %data61 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %67, i32 0, i32 0, !dbg !10352
  %loop_of_edge = bitcast %union.anon.0* %data61 to %struct.BMIter__loop_of_edge*, !dbg !10353
  %edata62 = getelementptr inbounds %struct.BMIter__loop_of_edge, %struct.BMIter__loop_of_edge* %loop_of_edge, i32 0, i32 0, !dbg !10354
  store %struct.BMEdge* %66, %struct.BMEdge** %edata62, align 8, !dbg !10355
  br label %sw.epilog, !dbg !10356

sw.default:                                       ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !10357
  br label %return, !dbg !10357

sw.epilog:                                        ; preds = %sw.bb58, %sw.bb54, %sw.bb49, %sw.bb44, %sw.bb40, %sw.bb35, %sw.bb31, %sw.bb26, %sw.bb21, %sw.bb17, %sw.bb10, %sw.bb3, %sw.bb
  %68 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10358
  %begin63 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %68, i32 0, i32 1, !dbg !10359
  %69 = load void (i8*)*, void (i8*)** %begin63, align 8, !dbg !10359
  %70 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10360
  %71 = bitcast %struct.BMIter* %70 to i8*, !dbg !10360
  call void %69(i8* %71), !dbg !10358
  store i8 1, i8* %retval, align 1, !dbg !10361
  br label %return, !dbg !10361

return:                                           ; preds = %sw.epilog, %sw.default
  %72 = load i8, i8* %retval, align 1, !dbg !10362
  ret i8 %72, !dbg !10362
}

declare dso_local void @bmiter__elem_of_mesh_begin(%struct.BMIter__elem_of_mesh*) #2

declare dso_local i8* @bmiter__elem_of_mesh_step(%struct.BMIter__elem_of_mesh*) #2

declare dso_local void @bmiter__edge_of_vert_begin(%struct.BMIter__edge_of_vert*) #2

declare dso_local i8* @bmiter__edge_of_vert_step(%struct.BMIter__edge_of_vert*) #2

declare dso_local void @bmiter__face_of_vert_begin(%struct.BMIter__face_of_vert*) #2

declare dso_local i8* @bmiter__face_of_vert_step(%struct.BMIter__face_of_vert*) #2

declare dso_local void @bmiter__loop_of_vert_begin(%struct.BMIter__loop_of_vert*) #2

declare dso_local i8* @bmiter__loop_of_vert_step(%struct.BMIter__loop_of_vert*) #2

declare dso_local void @bmiter__vert_of_edge_begin(%struct.BMIter__vert_of_edge*) #2

declare dso_local i8* @bmiter__vert_of_edge_step(%struct.BMIter__vert_of_edge*) #2

declare dso_local void @bmiter__face_of_edge_begin(%struct.BMIter__face_of_edge*) #2

declare dso_local i8* @bmiter__face_of_edge_step(%struct.BMIter__face_of_edge*) #2

declare dso_local void @bmiter__vert_of_face_begin(%struct.BMIter__vert_of_face*) #2

declare dso_local i8* @bmiter__vert_of_face_step(%struct.BMIter__vert_of_face*) #2

declare dso_local void @bmiter__edge_of_face_begin(%struct.BMIter__edge_of_face*) #2

declare dso_local i8* @bmiter__edge_of_face_step(%struct.BMIter__edge_of_face*) #2

declare dso_local void @bmiter__loop_of_face_begin(%struct.BMIter__loop_of_face*) #2

declare dso_local i8* @bmiter__loop_of_face_step(%struct.BMIter__loop_of_face*) #2

declare dso_local void @bmiter__loop_of_loop_begin(%struct.BMIter__loop_of_loop*) #2

declare dso_local i8* @bmiter__loop_of_loop_step(%struct.BMIter__loop_of_loop*) #2

declare dso_local void @bmiter__loop_of_edge_begin(%struct.BMIter__loop_of_edge*) #2

declare dso_local i8* @bmiter__loop_of_edge_step(%struct.BMIter__loop_of_edge*) #2

declare dso_local zeroext i8 @BKE_paint_select_face_test(%struct.Object*) #2

declare dso_local void @BKE_object_free_derived_caches(%struct.Object*) #2

declare dso_local void @BKE_object_sculpt_modifiers_changed(%struct.Object*) #2

declare dso_local void @BKE_editmesh_free_derivedmesh(%struct.BMEditMesh*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @editbmesh_calc_modifiers(%struct.Scene* %scene, %struct.Object* %ob, %struct.BMEditMesh* %em, %struct.DerivedMesh** %cage_r, %struct.DerivedMesh** %final_r, i64 %dataMask) #0 !dbg !10363 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %cage_r.addr = alloca %struct.DerivedMesh**, align 8
  %final_r.addr = alloca %struct.DerivedMesh**, align 8
  %dataMask.addr = alloca i64, align 8
  %md = alloca %struct.ModifierData*, align 8
  %previewmd = alloca %struct.ModifierData*, align 8
  %deformedVerts = alloca [3 x float]*, align 8
  %mask = alloca i64, align 8
  %previewmask = alloca i64, align 8
  %append_mask = alloca i64, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %orcodm = alloca %struct.DerivedMesh*, align 8
  %i = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %cageIndex = alloca i32, align 4
  %datamasks = alloca %struct.CDMaskLink*, align 8
  %curr = alloca %struct.CDMaskLink*, align 8
  %required_mode = alloca i32, align 4
  %draw_flag = alloca i32, align 4
  %do_final_wmcol = alloca i8, align 1
  %do_init_wmcol = alloca i8, align 1
  %do_init_statvis = alloca i8, align 1
  %do_mod_wmcol = alloca i8, align 1
  %virtualModifierData = alloca %struct.VirtualModifierData, align 8
  %do_loop_normals = alloca i8, align 1
  %loop_normals_split_angle = alloca float, align 4
  %mti = alloca %struct.ModifierTypeInfo*, align 8
  %ndm = alloca %struct.DerivedMesh*, align 8
  %tdm = alloca %struct.DerivedMesh*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !10366, metadata !DIExpression()), !dbg !10367
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10368, metadata !DIExpression()), !dbg !10369
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !10370, metadata !DIExpression()), !dbg !10371
  store %struct.DerivedMesh** %cage_r, %struct.DerivedMesh*** %cage_r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh*** %cage_r.addr, metadata !10372, metadata !DIExpression()), !dbg !10373
  store %struct.DerivedMesh** %final_r, %struct.DerivedMesh*** %final_r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh*** %final_r.addr, metadata !10374, metadata !DIExpression()), !dbg !10375
  store i64 %dataMask, i64* %dataMask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dataMask.addr, metadata !10376, metadata !DIExpression()), !dbg !10377
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !10378, metadata !DIExpression()), !dbg !10379
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %previewmd, metadata !10380, metadata !DIExpression()), !dbg !10381
  store %struct.ModifierData* null, %struct.ModifierData** %previewmd, align 8, !dbg !10381
  call void @llvm.dbg.declare(metadata [3 x float]** %deformedVerts, metadata !10382, metadata !DIExpression()), !dbg !10383
  store [3 x float]* null, [3 x float]** %deformedVerts, align 8, !dbg !10383
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !10384, metadata !DIExpression()), !dbg !10385
  call void @llvm.dbg.declare(metadata i64* %previewmask, metadata !10386, metadata !DIExpression()), !dbg !10387
  store i64 0, i64* %previewmask, align 8, !dbg !10387
  call void @llvm.dbg.declare(metadata i64* %append_mask, metadata !10388, metadata !DIExpression()), !dbg !10389
  store i64 0, i64* %append_mask, align 8, !dbg !10389
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !10390, metadata !DIExpression()), !dbg !10391
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %dm, align 8, !dbg !10391
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %orcodm, metadata !10392, metadata !DIExpression()), !dbg !10393
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %orcodm, align 8, !dbg !10393
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10394, metadata !DIExpression()), !dbg !10395
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !10396, metadata !DIExpression()), !dbg !10397
  store i32 0, i32* %numVerts, align 4, !dbg !10397
  call void @llvm.dbg.declare(metadata i32* %cageIndex, metadata !10398, metadata !DIExpression()), !dbg !10399
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10400
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10401
  %call = call i32 @modifiers_getCageIndex(%struct.Scene* %0, %struct.Object* %1, i32* null, i8 zeroext 1), !dbg !10402
  store i32 %call, i32* %cageIndex, align 4, !dbg !10399
  call void @llvm.dbg.declare(metadata %struct.CDMaskLink** %datamasks, metadata !10403, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.declare(metadata %struct.CDMaskLink** %curr, metadata !10405, metadata !DIExpression()), !dbg !10406
  call void @llvm.dbg.declare(metadata i32* %required_mode, metadata !10407, metadata !DIExpression()), !dbg !10408
  store i32 5, i32* %required_mode, align 4, !dbg !10408
  call void @llvm.dbg.declare(metadata i32* %draw_flag, metadata !10409, metadata !DIExpression()), !dbg !10410
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10411
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 20, !dbg !10412
  %3 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !10412
  %call1 = call i32 @dm_drawflag_calc(%struct.ToolSettings* %3), !dbg !10413
  store i32 %call1, i32* %draw_flag, align 4, !dbg !10410
  call void @llvm.dbg.declare(metadata i8* %do_final_wmcol, metadata !10414, metadata !DIExpression()), !dbg !10415
  store i8 0, i8* %do_final_wmcol, align 1, !dbg !10415
  call void @llvm.dbg.declare(metadata i8* %do_init_wmcol, metadata !10416, metadata !DIExpression()), !dbg !10417
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10418
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !10419
  %5 = load i8*, i8** %data, align 8, !dbg !10419
  %6 = bitcast i8* %5 to %struct.Mesh*, !dbg !10420
  %drawflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 36, !dbg !10421
  %7 = load i32, i32* %drawflag, align 8, !dbg !10421
  %and = and i32 %7, 16, !dbg !10422
  %tobool = icmp ne i32 %and, 0, !dbg !10422
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !10423

land.rhs:                                         ; preds = %entry
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ true, %land.rhs ], !dbg !10424
  %land.ext = zext i1 %8 to i32, !dbg !10423
  %conv = trunc i32 %land.ext to i8, !dbg !10425
  store i8 %conv, i8* %do_init_wmcol, align 1, !dbg !10417
  call void @llvm.dbg.declare(metadata i8* %do_init_statvis, metadata !10426, metadata !DIExpression()), !dbg !10427
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10428
  %data2 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 19, !dbg !10429
  %10 = load i8*, i8** %data2, align 8, !dbg !10429
  %11 = bitcast i8* %10 to %struct.Mesh*, !dbg !10430
  %drawflag3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 36, !dbg !10431
  %12 = load i32, i32* %drawflag3, align 8, !dbg !10431
  %and4 = and i32 %12, 131072, !dbg !10432
  %tobool5 = icmp ne i32 %and4, 0, !dbg !10432
  br i1 %tobool5, label %land.rhs6, label %land.end8, !dbg !10433

land.rhs6:                                        ; preds = %land.end
  %13 = load i8, i8* %do_init_wmcol, align 1, !dbg !10434
  %tobool7 = icmp ne i8 %13, 0, !dbg !10435
  %lnot = xor i1 %tobool7, true, !dbg !10435
  br label %land.end8

land.end8:                                        ; preds = %land.rhs6, %land.end
  %14 = phi i1 [ false, %land.end ], [ %lnot, %land.rhs6 ], !dbg !10424
  %land.ext9 = zext i1 %14 to i32, !dbg !10433
  %conv10 = trunc i32 %land.ext9 to i8, !dbg !10436
  store i8 %conv10, i8* %do_init_statvis, align 1, !dbg !10427
  call void @llvm.dbg.declare(metadata i8* %do_mod_wmcol, metadata !10437, metadata !DIExpression()), !dbg !10438
  %15 = load i8, i8* %do_init_wmcol, align 1, !dbg !10439
  store i8 %15, i8* %do_mod_wmcol, align 1, !dbg !10438
  call void @llvm.dbg.declare(metadata %struct.VirtualModifierData* %virtualModifierData, metadata !10440, metadata !DIExpression()), !dbg !10441
  call void @llvm.dbg.declare(metadata i8* %do_loop_normals, metadata !10442, metadata !DIExpression()), !dbg !10443
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10444
  %data11 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 19, !dbg !10445
  %17 = load i8*, i8** %data11, align 8, !dbg !10445
  %18 = bitcast i8* %17 to %struct.Mesh*, !dbg !10446
  %flag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 38, !dbg !10447
  %19 = load i16, i16* %flag, align 2, !dbg !10447
  %conv12 = sext i16 %19 to i32, !dbg !10448
  %and13 = and i32 %conv12, 32, !dbg !10449
  %conv14 = trunc i32 %and13 to i8, !dbg !10450
  store i8 %conv14, i8* %do_loop_normals, align 1, !dbg !10443
  call void @llvm.dbg.declare(metadata float* %loop_normals_split_angle, metadata !10451, metadata !DIExpression()), !dbg !10452
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10453
  %data15 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 19, !dbg !10454
  %21 = load i8*, i8** %data15, align 8, !dbg !10454
  %22 = bitcast i8* %21 to %struct.Mesh*, !dbg !10455
  %smoothresh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %22, i32 0, i32 39, !dbg !10456
  %23 = load float, float* %smoothresh, align 8, !dbg !10456
  store float %23, float* %loop_normals_split_angle, align 4, !dbg !10452
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10457
  call void @modifiers_clearErrors(%struct.Object* %24), !dbg !10458
  %25 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10459
  %tobool16 = icmp ne %struct.DerivedMesh** %25, null, !dbg !10459
  br i1 %tobool16, label %land.lhs.true, label %if.end, !dbg !10461

land.lhs.true:                                    ; preds = %land.end8
  %26 = load i32, i32* %cageIndex, align 4, !dbg !10462
  %cmp = icmp eq i32 %26, -1, !dbg !10463
  br i1 %cmp, label %if.then, label %if.end, !dbg !10464

if.then:                                          ; preds = %land.lhs.true
  %27 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10465
  %28 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10467
  %call18 = call %struct.DerivedMesh* @getEditDerivedBMesh(%struct.BMEditMesh* %27, %struct.Object* %28, [3 x float]* null), !dbg !10468
  %29 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10469
  store %struct.DerivedMesh* %call18, %struct.DerivedMesh** %29, align 8, !dbg !10470
  br label %if.end, !dbg !10471

if.end:                                           ; preds = %if.then, %land.lhs.true, %land.end8
  %30 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10472
  %call19 = call %struct.ModifierData* @modifiers_getVirtualModifierList(%struct.Object* %30, %struct.VirtualModifierData* %virtualModifierData), !dbg !10473
  store %struct.ModifierData* %call19, %struct.ModifierData** %md, align 8, !dbg !10474
  %31 = load i8, i8* %do_mod_wmcol, align 1, !dbg !10475
  %tobool20 = icmp ne i8 %31, 0, !dbg !10475
  br i1 %tobool20, label %if.then21, label %if.end26, !dbg !10477

if.then21:                                        ; preds = %if.end
  %32 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10478
  %33 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !10480
  %34 = load i32, i32* %required_mode, align 4, !dbg !10481
  %call22 = call %struct.ModifierData* @modifiers_getLastPreview(%struct.Scene* %32, %struct.ModifierData* %33, i32 %34), !dbg !10482
  store %struct.ModifierData* %call22, %struct.ModifierData** %previewmd, align 8, !dbg !10483
  %35 = load %struct.ModifierData*, %struct.ModifierData** %previewmd, align 8, !dbg !10484
  %tobool23 = icmp ne %struct.ModifierData* %35, null, !dbg !10484
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !10486

if.then24:                                        ; preds = %if.then21
  store i64 4, i64* %previewmask, align 8, !dbg !10487
  br label %if.end25, !dbg !10489

if.end25:                                         ; preds = %if.then24, %if.then21
  br label %if.end26, !dbg !10490

if.end26:                                         ; preds = %if.end25, %if.end
  %36 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10491
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10492
  %38 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !10493
  %39 = load i64, i64* %dataMask.addr, align 8, !dbg !10494
  %40 = load i32, i32* %required_mode, align 4, !dbg !10495
  %41 = load %struct.ModifierData*, %struct.ModifierData** %previewmd, align 8, !dbg !10496
  %42 = load i64, i64* %previewmask, align 8, !dbg !10497
  %call27 = call %struct.CDMaskLink* @modifiers_calcDataMasks(%struct.Scene* %36, %struct.Object* %37, %struct.ModifierData* %38, i64 %39, i32 %40, %struct.ModifierData* %41, i64 %42), !dbg !10498
  store %struct.CDMaskLink* %call27, %struct.CDMaskLink** %datamasks, align 8, !dbg !10499
  %43 = load %struct.CDMaskLink*, %struct.CDMaskLink** %datamasks, align 8, !dbg !10500
  store %struct.CDMaskLink* %43, %struct.CDMaskLink** %curr, align 8, !dbg !10501
  store i32 0, i32* %i, align 4, !dbg !10502
  br label %for.cond, !dbg !10504

for.cond:                                         ; preds = %for.inc, %if.end26
  %44 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !10505
  %tobool28 = icmp ne %struct.ModifierData* %44, null, !dbg !10507
  br i1 %tobool28, label %for.body, label %for.end, !dbg !10507

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ModifierTypeInfo** %mti, metadata !10508, metadata !DIExpression()), !dbg !10510
  %45 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !10511
  %type = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %45, i32 0, i32 2, !dbg !10512
  %46 = load i32, i32* %type, align 8, !dbg !10512
  %call29 = call %struct.ModifierTypeInfo* @modifierType_getInfo(i32 %46), !dbg !10513
  store %struct.ModifierTypeInfo* %call29, %struct.ModifierTypeInfo** %mti, align 8, !dbg !10510
  %47 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10514
  %48 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !10515
  %scene30 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %48, i32 0, i32 7, !dbg !10516
  store %struct.Scene* %47, %struct.Scene** %scene30, align 8, !dbg !10517
  %49 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10518
  %50 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !10520
  %51 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10521
  %call31 = call zeroext i8 @editbmesh_modifier_is_enabled(%struct.Scene* %49, %struct.ModifierData* %50, %struct.DerivedMesh* %51), !dbg !10522
  %tobool32 = icmp ne i8 %call31, 0, !dbg !10522
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !10523

if.then33:                                        ; preds = %for.body
  br label %for.inc, !dbg !10524

if.end34:                                         ; preds = %for.body
  %52 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10525
  %tobool35 = icmp ne %struct.DerivedMesh* %52, null, !dbg !10525
  br i1 %tobool35, label %land.lhs.true36, label %if.end45, !dbg !10527

land.lhs.true36:                                  ; preds = %if.end34
  %53 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !10528
  %requiredDataMask = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %53, i32 0, i32 13, !dbg !10529
  %54 = load i64 (%struct.Object*, %struct.ModifierData*)*, i64 (%struct.Object*, %struct.ModifierData*)** %requiredDataMask, align 8, !dbg !10529
  %tobool37 = icmp ne i64 (%struct.Object*, %struct.ModifierData*)* %54, null, !dbg !10528
  br i1 %tobool37, label %if.then38, label %if.end45, !dbg !10530

if.then38:                                        ; preds = %land.lhs.true36
  %55 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !10531
  %requiredDataMask39 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %55, i32 0, i32 13, !dbg !10533
  %56 = load i64 (%struct.Object*, %struct.ModifierData*)*, i64 (%struct.Object*, %struct.ModifierData*)** %requiredDataMask39, align 8, !dbg !10533
  %57 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10534
  %58 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !10535
  %call40 = call i64 %56(%struct.Object* %57, %struct.ModifierData* %58), !dbg !10531
  store i64 %call40, i64* %mask, align 8, !dbg !10536
  %59 = load i64, i64* %mask, align 8, !dbg !10537
  %and41 = and i64 %59, 16384, !dbg !10539
  %tobool42 = icmp ne i64 %and41, 0, !dbg !10539
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !10540

if.then43:                                        ; preds = %if.then38
  %60 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10541
  %61 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10542
  %62 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10543
  %63 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !10544
  call void @add_orco_dm(%struct.Object* %60, %struct.BMEditMesh* %61, %struct.DerivedMesh* %62, %struct.DerivedMesh* %63, i32 14), !dbg !10545
  br label %if.end44, !dbg !10545

if.end44:                                         ; preds = %if.then43, %if.then38
  br label %if.end45, !dbg !10546

if.end45:                                         ; preds = %if.end44, %land.lhs.true36, %if.end34
  %64 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !10547
  %type46 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %64, i32 0, i32 3, !dbg !10549
  %65 = load i32, i32* %type46, align 4, !dbg !10549
  %cmp47 = icmp eq i32 %65, 1, !dbg !10550
  br i1 %cmp47, label %if.then49, label %if.else64, !dbg !10551

if.then49:                                        ; preds = %if.end45
  %66 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !10552
  %tobool50 = icmp ne [3 x float]* %66, null, !dbg !10552
  br i1 %tobool50, label %if.end59, label %if.then51, !dbg !10555

if.then51:                                        ; preds = %if.then49
  %67 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10556
  %tobool52 = icmp ne %struct.DerivedMesh* %67, null, !dbg !10556
  br i1 %tobool52, label %if.then53, label %if.else, !dbg !10559

if.then53:                                        ; preds = %if.then51
  %68 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10560
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %68, i32 0, i32 23, !dbg !10562
  %69 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !10562
  %70 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10563
  %call54 = call i32 %69(%struct.DerivedMesh* %70), !dbg !10560
  store i32 %call54, i32* %numVerts, align 4, !dbg !10564
  %71 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !10565
  %72 = load i32, i32* %numVerts, align 4, !dbg !10566
  %conv55 = sext i32 %72 to i64, !dbg !10566
  %mul = mul i64 12, %conv55, !dbg !10567
  %call56 = call i8* %71(i64 %mul, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0)), !dbg !10565
  %73 = bitcast i8* %call56 to [3 x float]*, !dbg !10565
  store [3 x float]* %73, [3 x float]** %deformedVerts, align 8, !dbg !10568
  %74 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10569
  %getVertCos = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %74, i32 0, i32 77, !dbg !10570
  %75 = load void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, [3 x float]*)** %getVertCos, align 8, !dbg !10570
  %76 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10571
  %77 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !10572
  call void %75(%struct.DerivedMesh* %76, [3 x float]* %77), !dbg !10569
  br label %if.end58, !dbg !10573

if.else:                                          ; preds = %if.then51
  %78 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10574
  %call57 = call [3 x float]* @editbmesh_get_vertex_cos(%struct.BMEditMesh* %78, i32* %numVerts), !dbg !10576
  store [3 x float]* %call57, [3 x float]** %deformedVerts, align 8, !dbg !10577
  br label %if.end58

if.end58:                                         ; preds = %if.else, %if.then53
  br label %if.end59, !dbg !10578

if.end59:                                         ; preds = %if.end58, %if.then49
  %79 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !10579
  %deformVertsEM = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %79, i32 0, i32 8, !dbg !10581
  %80 = load void (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, i32)** %deformVertsEM, align 8, !dbg !10581
  %tobool60 = icmp ne void (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, i32)* %80, null, !dbg !10579
  br i1 %tobool60, label %if.then61, label %if.else62, !dbg !10582

if.then61:                                        ; preds = %if.end59
  %81 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !10583
  %82 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10584
  %83 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10585
  %84 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10586
  %85 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !10587
  %86 = load i32, i32* %numVerts, align 4, !dbg !10588
  call void @modwrap_deformVertsEM(%struct.ModifierData* %81, %struct.Object* %82, %struct.BMEditMesh* %83, %struct.DerivedMesh* %84, [3 x float]* %85, i32 %86), !dbg !10589
  br label %if.end63, !dbg !10589

if.else62:                                        ; preds = %if.end59
  %87 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !10590
  %88 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10591
  %89 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10592
  %90 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !10593
  %91 = load i32, i32* %numVerts, align 4, !dbg !10594
  call void @modwrap_deformVerts(%struct.ModifierData* %87, %struct.Object* %88, %struct.DerivedMesh* %89, [3 x float]* %90, i32 %91, i32 0), !dbg !10595
  br label %if.end63

if.end63:                                         ; preds = %if.else62, %if.then61
  br label %if.end155, !dbg !10596

if.else64:                                        ; preds = %if.end45
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %ndm, metadata !10597, metadata !DIExpression()), !dbg !10599
  %92 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10600
  %tobool65 = icmp ne %struct.DerivedMesh* %92, null, !dbg !10600
  br i1 %tobool65, label %if.then66, label %if.else86, !dbg !10602

if.then66:                                        ; preds = %if.else64
  %93 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !10603
  %tobool67 = icmp ne [3 x float]* %93, null, !dbg !10603
  br i1 %tobool67, label %if.then68, label %if.else77, !dbg !10606

if.then68:                                        ; preds = %if.then66
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %tdm, metadata !10607, metadata !DIExpression()), !dbg !10609
  %94 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10610
  %call69 = call %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh* %94), !dbg !10611
  store %struct.DerivedMesh* %call69, %struct.DerivedMesh** %tdm, align 8, !dbg !10609
  %95 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10612
  %tobool70 = icmp ne %struct.DerivedMesh** %95, null, !dbg !10612
  br i1 %tobool70, label %land.lhs.true71, label %if.then74, !dbg !10614

land.lhs.true71:                                  ; preds = %if.then68
  %96 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10615
  %97 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10616
  %98 = load %struct.DerivedMesh*, %struct.DerivedMesh** %97, align 8, !dbg !10617
  %cmp72 = icmp eq %struct.DerivedMesh* %96, %98, !dbg !10618
  br i1 %cmp72, label %if.end76, label %if.then74, !dbg !10619

if.then74:                                        ; preds = %land.lhs.true71, %if.then68
  %99 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10620
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %99, i32 0, i32 95, !dbg !10621
  %release75 = bitcast {}** %release to void (%struct.DerivedMesh*)**, !dbg !10621
  %100 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release75, align 8, !dbg !10621
  %101 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10622
  call void %100(%struct.DerivedMesh* %101), !dbg !10620
  br label %if.end76, !dbg !10620

if.end76:                                         ; preds = %if.then74, %land.lhs.true71
  %102 = load %struct.DerivedMesh*, %struct.DerivedMesh** %tdm, align 8, !dbg !10623
  store %struct.DerivedMesh* %102, %struct.DerivedMesh** %dm, align 8, !dbg !10624
  %103 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10625
  %104 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !10626
  call void @CDDM_apply_vert_coords(%struct.DerivedMesh* %103, [3 x float]* %104), !dbg !10627
  br label %if.end85, !dbg !10628

if.else77:                                        ; preds = %if.then66
  %105 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10629
  %tobool78 = icmp ne %struct.DerivedMesh** %105, null, !dbg !10629
  br i1 %tobool78, label %land.lhs.true79, label %if.end84, !dbg !10631

land.lhs.true79:                                  ; preds = %if.else77
  %106 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10632
  %107 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10633
  %108 = load %struct.DerivedMesh*, %struct.DerivedMesh** %107, align 8, !dbg !10634
  %cmp80 = icmp eq %struct.DerivedMesh* %106, %108, !dbg !10635
  br i1 %cmp80, label %if.then82, label %if.end84, !dbg !10636

if.then82:                                        ; preds = %land.lhs.true79
  %109 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10637
  %call83 = call %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh* %109), !dbg !10639
  store %struct.DerivedMesh* %call83, %struct.DerivedMesh** %dm, align 8, !dbg !10640
  br label %if.end84, !dbg !10641

if.end84:                                         ; preds = %if.then82, %land.lhs.true79, %if.else77
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.end76
  br label %if.end94, !dbg !10642

if.else86:                                        ; preds = %if.else64
  %110 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10643
  %call87 = call %struct.DerivedMesh* @CDDM_from_editbmesh(%struct.BMEditMesh* %110, i8 zeroext 0, i8 zeroext 0), !dbg !10645
  store %struct.DerivedMesh* %call87, %struct.DerivedMesh** %dm, align 8, !dbg !10646
  %111 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !10647
  %tobool88 = icmp ne [3 x float]* %111, null, !dbg !10647
  br i1 %tobool88, label %if.then89, label %if.end90, !dbg !10649

if.then89:                                        ; preds = %if.else86
  %112 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10650
  %113 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !10652
  call void @CDDM_apply_vert_coords(%struct.DerivedMesh* %112, [3 x float]* %113), !dbg !10653
  br label %if.end90, !dbg !10654

if.end90:                                         ; preds = %if.then89, %if.else86
  %114 = load i8, i8* %do_init_wmcol, align 1, !dbg !10655
  %tobool91 = icmp ne i8 %114, 0, !dbg !10655
  br i1 %tobool91, label %if.then92, label %if.end93, !dbg !10657

if.then92:                                        ; preds = %if.end90
  %115 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10658
  %116 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10660
  %117 = load i32, i32* %draw_flag, align 4, !dbg !10661
  call void @DM_update_weight_mcol(%struct.Object* %115, %struct.DerivedMesh* %116, i32 %117, float* null, i32 0, i32* null), !dbg !10662
  br label %if.end93, !dbg !10663

if.end93:                                         ; preds = %if.then92, %if.end90
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.end85
  %118 = load %struct.CDMaskLink*, %struct.CDMaskLink** %curr, align 8, !dbg !10664
  %mask95 = getelementptr inbounds %struct.CDMaskLink, %struct.CDMaskLink* %118, i32 0, i32 1, !dbg !10665
  %119 = load i64, i64* %mask95, align 8, !dbg !10665
  store i64 %119, i64* %mask, align 8, !dbg !10666
  %120 = load i64, i64* %mask, align 8, !dbg !10667
  %and96 = and i64 %120, 16384, !dbg !10669
  %tobool97 = icmp ne i64 %and96, 0, !dbg !10669
  br i1 %tobool97, label %if.then98, label %if.end122, !dbg !10670

if.then98:                                        ; preds = %if.end94
  %121 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !10671
  %tobool99 = icmp ne %struct.DerivedMesh* %121, null, !dbg !10671
  br i1 %tobool99, label %if.end103, label %if.then100, !dbg !10674

if.then100:                                       ; preds = %if.then98
  %122 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10675
  %123 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10676
  %data101 = getelementptr inbounds %struct.Object, %struct.Object* %123, i32 0, i32 19, !dbg !10677
  %124 = load i8*, i8** %data101, align 8, !dbg !10677
  %125 = bitcast i8* %124 to %struct.Mesh*, !dbg !10676
  %126 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10678
  %call102 = call %struct.DerivedMesh* @create_orco_dm(%struct.Object* %122, %struct.Mesh* %125, %struct.BMEditMesh* %126, i32 14), !dbg !10679
  store %struct.DerivedMesh* %call102, %struct.DerivedMesh** %orcodm, align 8, !dbg !10680
  br label %if.end103, !dbg !10681

if.end103:                                        ; preds = %if.then100, %if.then98
  %127 = load i64, i64* %mask, align 8, !dbg !10682
  %and104 = and i64 %127, -16385, !dbg !10682
  store i64 %and104, i64* %mask, align 8, !dbg !10682
  %128 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !10683
  %129 = load i64, i64* %mask, align 8, !dbg !10684
  %or = or i64 %129, 128, !dbg !10685
  call void @DM_set_only_copy(%struct.DerivedMesh* %128, i64 %or), !dbg !10686
  %130 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !10687
  %applyModifierEM = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %130, i32 0, i32 11, !dbg !10689
  %131 = load %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, i32)*, %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, i32)** %applyModifierEM, align 8, !dbg !10689
  %tobool105 = icmp ne %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, i32)* %131, null, !dbg !10687
  br i1 %tobool105, label %if.then106, label %if.else108, !dbg !10690

if.then106:                                       ; preds = %if.end103
  %132 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !10691
  %133 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10693
  %134 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10694
  %135 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !10695
  %call107 = call %struct.DerivedMesh* @modwrap_applyModifierEM(%struct.ModifierData* %132, %struct.Object* %133, %struct.BMEditMesh* %134, %struct.DerivedMesh* %135, i32 4), !dbg !10696
  store %struct.DerivedMesh* %call107, %struct.DerivedMesh** %ndm, align 8, !dbg !10697
  br label %if.end110, !dbg !10698

if.else108:                                       ; preds = %if.end103
  %136 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !10699
  %137 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10701
  %138 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !10702
  %call109 = call %struct.DerivedMesh* @modwrap_applyModifier(%struct.ModifierData* %136, %struct.Object* %137, %struct.DerivedMesh* %138, i32 4), !dbg !10703
  store %struct.DerivedMesh* %call109, %struct.DerivedMesh** %ndm, align 8, !dbg !10704
  br label %if.end110

if.end110:                                        ; preds = %if.else108, %if.then106
  %139 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !10705
  %tobool111 = icmp ne %struct.DerivedMesh* %139, null, !dbg !10705
  br i1 %tobool111, label %if.then112, label %if.end121, !dbg !10707

if.then112:                                       ; preds = %if.end110
  %140 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !10708
  %tobool113 = icmp ne %struct.DerivedMesh* %140, null, !dbg !10708
  br i1 %tobool113, label %land.lhs.true114, label %if.end120, !dbg !10711

land.lhs.true114:                                 ; preds = %if.then112
  %141 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !10712
  %142 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !10713
  %cmp115 = icmp ne %struct.DerivedMesh* %141, %142, !dbg !10714
  br i1 %cmp115, label %if.then117, label %if.end120, !dbg !10715

if.then117:                                       ; preds = %land.lhs.true114
  %143 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !10716
  %release118 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %143, i32 0, i32 95, !dbg !10717
  %release119 = bitcast {}** %release118 to void (%struct.DerivedMesh*)**, !dbg !10717
  %144 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release119, align 8, !dbg !10717
  %145 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !10718
  call void %144(%struct.DerivedMesh* %145), !dbg !10716
  br label %if.end120, !dbg !10716

if.end120:                                        ; preds = %if.then117, %land.lhs.true114, %if.then112
  %146 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !10719
  store %struct.DerivedMesh* %146, %struct.DerivedMesh** %orcodm, align 8, !dbg !10720
  br label %if.end121, !dbg !10721

if.end121:                                        ; preds = %if.end120, %if.end110
  br label %if.end122, !dbg !10722

if.end122:                                        ; preds = %if.end121, %if.end94
  %147 = load i64, i64* %append_mask, align 8, !dbg !10723
  %148 = load i64, i64* %mask, align 8, !dbg !10724
  %or123 = or i64 %148, %147, !dbg !10724
  store i64 %or123, i64* %mask, align 8, !dbg !10724
  %149 = load %struct.CDMaskLink*, %struct.CDMaskLink** %curr, align 8, !dbg !10725
  %mask124 = getelementptr inbounds %struct.CDMaskLink, %struct.CDMaskLink* %149, i32 0, i32 1, !dbg !10726
  %150 = load i64, i64* %mask124, align 8, !dbg !10726
  store i64 %150, i64* %mask, align 8, !dbg !10727
  %151 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10728
  %152 = load i64, i64* %mask, align 8, !dbg !10729
  %or125 = or i64 %152, 128, !dbg !10730
  call void @DM_set_only_copy(%struct.DerivedMesh* %151, i64 %or125), !dbg !10731
  %153 = load i64, i64* %mask, align 8, !dbg !10732
  %and126 = and i64 %153, 2147483648, !dbg !10734
  %tobool127 = icmp ne i64 %and126, 0, !dbg !10734
  br i1 %tobool127, label %if.then128, label %if.end133, !dbg !10735

if.then128:                                       ; preds = %if.end122
  %154 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10736
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %154, i32 0, i32 3, !dbg !10739
  %call129 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %loopData, i32 31), !dbg !10740
  %tobool130 = icmp ne i8 %call129, 0, !dbg !10740
  br i1 %tobool130, label %if.end132, label %if.then131, !dbg !10741

if.then131:                                       ; preds = %if.then128
  %155 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10742
  call void @DM_add_loop_layer(%struct.DerivedMesh* %155, i32 31, i32 1, i8* null), !dbg !10744
  %156 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10745
  call void @DM_init_origspace(%struct.DerivedMesh* %156), !dbg !10746
  br label %if.end132, !dbg !10747

if.end132:                                        ; preds = %if.then131, %if.then128
  br label %if.end133, !dbg !10748

if.end133:                                        ; preds = %if.end132, %if.end122
  %157 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !10749
  %applyModifierEM134 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %157, i32 0, i32 11, !dbg !10751
  %158 = load %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, i32)*, %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, i32)** %applyModifierEM134, align 8, !dbg !10751
  %tobool135 = icmp ne %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, i32)* %158, null, !dbg !10749
  br i1 %tobool135, label %if.then136, label %if.else138, !dbg !10752

if.then136:                                       ; preds = %if.end133
  %159 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !10753
  %160 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10754
  %161 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10755
  %162 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10756
  %call137 = call %struct.DerivedMesh* @modwrap_applyModifierEM(%struct.ModifierData* %159, %struct.Object* %160, %struct.BMEditMesh* %161, %struct.DerivedMesh* %162, i32 2), !dbg !10757
  store %struct.DerivedMesh* %call137, %struct.DerivedMesh** %ndm, align 8, !dbg !10758
  br label %if.end140, !dbg !10759

if.else138:                                       ; preds = %if.end133
  %163 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !10760
  %164 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10761
  %165 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10762
  %call139 = call %struct.DerivedMesh* @modwrap_applyModifier(%struct.ModifierData* %163, %struct.Object* %164, %struct.DerivedMesh* %165, i32 2), !dbg !10763
  store %struct.DerivedMesh* %call139, %struct.DerivedMesh** %ndm, align 8, !dbg !10764
  br label %if.end140

if.end140:                                        ; preds = %if.else138, %if.then136
  %166 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !10765
  %tobool141 = icmp ne %struct.DerivedMesh* %166, null, !dbg !10765
  br i1 %tobool141, label %if.then142, label %if.end154, !dbg !10767

if.then142:                                       ; preds = %if.end140
  %167 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10768
  %tobool143 = icmp ne %struct.DerivedMesh* %167, null, !dbg !10768
  br i1 %tobool143, label %land.lhs.true144, label %if.end150, !dbg !10771

land.lhs.true144:                                 ; preds = %if.then142
  %168 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10772
  %169 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !10773
  %cmp145 = icmp ne %struct.DerivedMesh* %168, %169, !dbg !10774
  br i1 %cmp145, label %if.then147, label %if.end150, !dbg !10775

if.then147:                                       ; preds = %land.lhs.true144
  %170 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10776
  %release148 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %170, i32 0, i32 95, !dbg !10777
  %release149 = bitcast {}** %release148 to void (%struct.DerivedMesh*)**, !dbg !10777
  %171 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release149, align 8, !dbg !10777
  %172 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10778
  call void %171(%struct.DerivedMesh* %172), !dbg !10776
  br label %if.end150, !dbg !10776

if.end150:                                        ; preds = %if.then147, %land.lhs.true144, %if.then142
  %173 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !10779
  store %struct.DerivedMesh* %173, %struct.DerivedMesh** %dm, align 8, !dbg !10780
  %174 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !10781
  %tobool151 = icmp ne [3 x float]* %174, null, !dbg !10781
  br i1 %tobool151, label %if.then152, label %if.end153, !dbg !10783

if.then152:                                       ; preds = %if.end150
  %175 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10784
  %176 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !10786
  %177 = bitcast [3 x float]* %176 to i8*, !dbg !10786
  call void %175(i8* %177), !dbg !10784
  store [3 x float]* null, [3 x float]** %deformedVerts, align 8, !dbg !10787
  br label %if.end153, !dbg !10788

if.end153:                                        ; preds = %if.then152, %if.end150
  br label %if.end154, !dbg !10789

if.end154:                                        ; preds = %if.end153, %if.end140
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.end63
  %178 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !10790
  %179 = load %struct.ModifierData*, %struct.ModifierData** %previewmd, align 8, !dbg !10792
  %cmp156 = icmp eq %struct.ModifierData* %178, %179, !dbg !10793
  br i1 %cmp156, label %land.lhs.true158, label %if.end163, !dbg !10794

land.lhs.true158:                                 ; preds = %if.end155
  %180 = load i8, i8* %do_mod_wmcol, align 1, !dbg !10795
  %conv159 = zext i8 %180 to i32, !dbg !10796
  %tobool160 = icmp ne i32 %conv159, 0, !dbg !10796
  br i1 %tobool160, label %if.then161, label %if.end163, !dbg !10797

if.then161:                                       ; preds = %land.lhs.true158
  %181 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10798
  %182 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10800
  %183 = load i32, i32* %draw_flag, align 4, !dbg !10801
  call void @DM_update_weight_mcol(%struct.Object* %181, %struct.DerivedMesh* %182, i32 %183, float* null, i32 0, i32* null), !dbg !10802
  %184 = load i64, i64* %append_mask, align 8, !dbg !10803
  %or162 = or i64 %184, 4294967296, !dbg !10803
  store i64 %or162, i64* %append_mask, align 8, !dbg !10803
  br label %if.end163, !dbg !10804

if.end163:                                        ; preds = %if.then161, %land.lhs.true158, %if.end155
  %185 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10805
  %tobool164 = icmp ne %struct.DerivedMesh** %185, null, !dbg !10805
  br i1 %tobool164, label %land.lhs.true165, label %if.end183, !dbg !10807

land.lhs.true165:                                 ; preds = %if.end163
  %186 = load i32, i32* %i, align 4, !dbg !10808
  %187 = load i32, i32* %cageIndex, align 4, !dbg !10809
  %cmp166 = icmp eq i32 %186, %187, !dbg !10810
  br i1 %cmp166, label %if.then168, label %if.end183, !dbg !10811

if.then168:                                       ; preds = %land.lhs.true165
  %188 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10812
  %tobool169 = icmp ne %struct.DerivedMesh* %188, null, !dbg !10812
  br i1 %tobool169, label %land.lhs.true170, label %if.else174, !dbg !10815

land.lhs.true170:                                 ; preds = %if.then168
  %189 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !10816
  %tobool171 = icmp ne [3 x float]* %189, null, !dbg !10816
  br i1 %tobool171, label %if.then172, label %if.else174, !dbg !10817

if.then172:                                       ; preds = %land.lhs.true170
  %190 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10818
  %call173 = call %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh* %190), !dbg !10820
  %191 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10821
  store %struct.DerivedMesh* %call173, %struct.DerivedMesh** %191, align 8, !dbg !10822
  %192 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10823
  %193 = load %struct.DerivedMesh*, %struct.DerivedMesh** %192, align 8, !dbg !10824
  %194 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !10825
  call void @CDDM_apply_vert_coords(%struct.DerivedMesh* %193, [3 x float]* %194), !dbg !10826
  br label %if.end182, !dbg !10827

if.else174:                                       ; preds = %land.lhs.true170, %if.then168
  %195 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10828
  %tobool175 = icmp ne %struct.DerivedMesh* %195, null, !dbg !10828
  br i1 %tobool175, label %if.then176, label %if.else177, !dbg !10830

if.then176:                                       ; preds = %if.else174
  %196 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10831
  %197 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10833
  store %struct.DerivedMesh* %196, %struct.DerivedMesh** %197, align 8, !dbg !10834
  br label %if.end181, !dbg !10835

if.else177:                                       ; preds = %if.else174
  %198 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10836
  %199 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10838
  %200 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !10839
  %tobool178 = icmp ne [3 x float]* %200, null, !dbg !10839
  br i1 %tobool178, label %cond.true, label %cond.false, !dbg !10839

cond.true:                                        ; preds = %if.else177
  %201 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !10840
  %202 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !10841
  %203 = bitcast [3 x float]* %202 to i8*, !dbg !10841
  %call179 = call i8* %201(i8* %203), !dbg !10840
  br label %cond.end, !dbg !10839

cond.false:                                       ; preds = %if.else177
  br label %cond.end, !dbg !10839

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call179, %cond.true ], [ null, %cond.false ], !dbg !10839
  %204 = bitcast i8* %cond to [3 x float]*, !dbg !10839
  %call180 = call %struct.DerivedMesh* @getEditDerivedBMesh(%struct.BMEditMesh* %198, %struct.Object* %199, [3 x float]* %204), !dbg !10842
  %205 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10843
  store %struct.DerivedMesh* %call180, %struct.DerivedMesh** %205, align 8, !dbg !10844
  br label %if.end181

if.end181:                                        ; preds = %cond.end, %if.then176
  br label %if.end182

if.end182:                                        ; preds = %if.end181, %if.then172
  br label %if.end183, !dbg !10845

if.end183:                                        ; preds = %if.end182, %land.lhs.true165, %if.end163
  br label %for.inc, !dbg !10846

for.inc:                                          ; preds = %if.end183, %if.then33
  %206 = load i32, i32* %i, align 4, !dbg !10847
  %inc = add nsw i32 %206, 1, !dbg !10847
  store i32 %inc, i32* %i, align 4, !dbg !10847
  %207 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !10848
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %207, i32 0, i32 0, !dbg !10849
  %208 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !10849
  store %struct.ModifierData* %208, %struct.ModifierData** %md, align 8, !dbg !10850
  %209 = load %struct.CDMaskLink*, %struct.CDMaskLink** %curr, align 8, !dbg !10851
  %next184 = getelementptr inbounds %struct.CDMaskLink, %struct.CDMaskLink* %209, i32 0, i32 0, !dbg !10852
  %210 = load %struct.CDMaskLink*, %struct.CDMaskLink** %next184, align 8, !dbg !10852
  store %struct.CDMaskLink* %210, %struct.CDMaskLink** %curr, align 8, !dbg !10853
  br label %for.cond, !dbg !10854, !llvm.loop !10855

for.end:                                          ; preds = %for.cond
  %211 = load %struct.CDMaskLink*, %struct.CDMaskLink** %datamasks, align 8, !dbg !10857
  %212 = bitcast %struct.CDMaskLink* %211 to %struct.LinkNode*, !dbg !10858
  call void @BLI_linklist_free(%struct.LinkNode* %212, void (i8*)* null), !dbg !10859
  %213 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10860
  %tobool185 = icmp ne %struct.DerivedMesh* %213, null, !dbg !10860
  br i1 %tobool185, label %land.lhs.true186, label %if.else198, !dbg !10862

land.lhs.true186:                                 ; preds = %for.end
  %214 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !10863
  %tobool187 = icmp ne [3 x float]* %214, null, !dbg !10863
  br i1 %tobool187, label %if.then188, label %if.else198, !dbg !10864

if.then188:                                       ; preds = %land.lhs.true186
  %215 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10865
  %call189 = call %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh* %215), !dbg !10867
  %216 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %final_r.addr, align 8, !dbg !10868
  store %struct.DerivedMesh* %call189, %struct.DerivedMesh** %216, align 8, !dbg !10869
  %217 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10870
  %tobool190 = icmp ne %struct.DerivedMesh** %217, null, !dbg !10870
  br i1 %tobool190, label %land.lhs.true191, label %if.then194, !dbg !10872

land.lhs.true191:                                 ; preds = %if.then188
  %218 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10873
  %219 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10874
  %220 = load %struct.DerivedMesh*, %struct.DerivedMesh** %219, align 8, !dbg !10875
  %cmp192 = icmp eq %struct.DerivedMesh* %218, %220, !dbg !10876
  br i1 %cmp192, label %if.end197, label %if.then194, !dbg !10877

if.then194:                                       ; preds = %land.lhs.true191, %if.then188
  %221 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10878
  %release195 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %221, i32 0, i32 95, !dbg !10879
  %release196 = bitcast {}** %release195 to void (%struct.DerivedMesh*)**, !dbg !10879
  %222 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release196, align 8, !dbg !10879
  %223 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10880
  call void %222(%struct.DerivedMesh* %223), !dbg !10878
  br label %if.end197, !dbg !10878

if.end197:                                        ; preds = %if.then194, %land.lhs.true191
  %224 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %final_r.addr, align 8, !dbg !10881
  %225 = load %struct.DerivedMesh*, %struct.DerivedMesh** %224, align 8, !dbg !10882
  %226 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !10883
  call void @CDDM_apply_vert_coords(%struct.DerivedMesh* %225, [3 x float]* %226), !dbg !10884
  br label %if.end224, !dbg !10885

if.else198:                                       ; preds = %land.lhs.true186, %for.end
  %227 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10886
  %tobool199 = icmp ne %struct.DerivedMesh* %227, null, !dbg !10886
  br i1 %tobool199, label %if.then200, label %if.else201, !dbg !10888

if.then200:                                       ; preds = %if.else198
  %228 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10889
  %229 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %final_r.addr, align 8, !dbg !10891
  store %struct.DerivedMesh* %228, %struct.DerivedMesh** %229, align 8, !dbg !10892
  br label %if.end223, !dbg !10893

if.else201:                                       ; preds = %if.else198
  %230 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !10894
  %tobool202 = icmp ne [3 x float]* %230, null, !dbg !10894
  br i1 %tobool202, label %if.else214, label %land.lhs.true203, !dbg !10896

land.lhs.true203:                                 ; preds = %if.else201
  %231 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10897
  %tobool204 = icmp ne %struct.DerivedMesh** %231, null, !dbg !10897
  br i1 %tobool204, label %land.lhs.true205, label %if.else214, !dbg !10898

land.lhs.true205:                                 ; preds = %land.lhs.true203
  %232 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10899
  %233 = load %struct.DerivedMesh*, %struct.DerivedMesh** %232, align 8, !dbg !10900
  %tobool206 = icmp ne %struct.DerivedMesh* %233, null, !dbg !10900
  br i1 %tobool206, label %if.then207, label %if.else214, !dbg !10901

if.then207:                                       ; preds = %land.lhs.true205
  %234 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10902
  %235 = load %struct.DerivedMesh*, %struct.DerivedMesh** %234, align 8, !dbg !10904
  %236 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %final_r.addr, align 8, !dbg !10905
  store %struct.DerivedMesh* %235, %struct.DerivedMesh** %236, align 8, !dbg !10906
  %237 = load i8, i8* %do_init_wmcol, align 1, !dbg !10907
  %tobool208 = icmp ne i8 %237, 0, !dbg !10907
  br i1 %tobool208, label %if.then209, label %if.end210, !dbg !10909

if.then209:                                       ; preds = %if.then207
  %238 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10910
  %239 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %final_r.addr, align 8, !dbg !10911
  %240 = load %struct.DerivedMesh*, %struct.DerivedMesh** %239, align 8, !dbg !10912
  %241 = load i32, i32* %draw_flag, align 4, !dbg !10913
  call void @DM_update_weight_mcol(%struct.Object* %238, %struct.DerivedMesh* %240, i32 %241, float* null, i32 0, i32* null), !dbg !10914
  br label %if.end210, !dbg !10914

if.end210:                                        ; preds = %if.then209, %if.then207
  %242 = load i8, i8* %do_init_statvis, align 1, !dbg !10915
  %tobool211 = icmp ne i8 %242, 0, !dbg !10915
  br i1 %tobool211, label %if.then212, label %if.end213, !dbg !10917

if.then212:                                       ; preds = %if.end210
  %243 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10918
  %244 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10919
  %245 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %final_r.addr, align 8, !dbg !10920
  %246 = load %struct.DerivedMesh*, %struct.DerivedMesh** %245, align 8, !dbg !10921
  call void @DM_update_statvis_color(%struct.Scene* %243, %struct.Object* %244, %struct.DerivedMesh* %246), !dbg !10922
  br label %if.end213, !dbg !10922

if.end213:                                        ; preds = %if.then212, %if.end210
  br label %if.end222, !dbg !10923

if.else214:                                       ; preds = %land.lhs.true205, %land.lhs.true203, %if.else201
  %247 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10924
  %248 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10926
  %249 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !10927
  %call215 = call %struct.DerivedMesh* @getEditDerivedBMesh(%struct.BMEditMesh* %247, %struct.Object* %248, [3 x float]* %249), !dbg !10928
  %250 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %final_r.addr, align 8, !dbg !10929
  store %struct.DerivedMesh* %call215, %struct.DerivedMesh** %250, align 8, !dbg !10930
  store [3 x float]* null, [3 x float]** %deformedVerts, align 8, !dbg !10931
  %251 = load i8, i8* %do_init_wmcol, align 1, !dbg !10932
  %tobool216 = icmp ne i8 %251, 0, !dbg !10932
  br i1 %tobool216, label %if.then217, label %if.end218, !dbg !10934

if.then217:                                       ; preds = %if.else214
  %252 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10935
  %253 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %final_r.addr, align 8, !dbg !10936
  %254 = load %struct.DerivedMesh*, %struct.DerivedMesh** %253, align 8, !dbg !10937
  %255 = load i32, i32* %draw_flag, align 4, !dbg !10938
  call void @DM_update_weight_mcol(%struct.Object* %252, %struct.DerivedMesh* %254, i32 %255, float* null, i32 0, i32* null), !dbg !10939
  br label %if.end218, !dbg !10939

if.end218:                                        ; preds = %if.then217, %if.else214
  %256 = load i8, i8* %do_init_statvis, align 1, !dbg !10940
  %tobool219 = icmp ne i8 %256, 0, !dbg !10940
  br i1 %tobool219, label %if.then220, label %if.end221, !dbg !10942

if.then220:                                       ; preds = %if.end218
  %257 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10943
  %258 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10944
  %259 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %final_r.addr, align 8, !dbg !10945
  %260 = load %struct.DerivedMesh*, %struct.DerivedMesh** %259, align 8, !dbg !10946
  call void @DM_update_statvis_color(%struct.Scene* %257, %struct.Object* %258, %struct.DerivedMesh* %260), !dbg !10947
  br label %if.end221, !dbg !10947

if.end221:                                        ; preds = %if.then220, %if.end218
  br label %if.end222

if.end222:                                        ; preds = %if.end221, %if.end213
  br label %if.end223

if.end223:                                        ; preds = %if.end222, %if.then200
  br label %if.end224

if.end224:                                        ; preds = %if.end223, %if.end197
  %261 = load i8, i8* %do_loop_normals, align 1, !dbg !10948
  %tobool225 = icmp ne i8 %261, 0, !dbg !10948
  br i1 %tobool225, label %if.then226, label %if.end235, !dbg !10950

if.then226:                                       ; preds = %if.end224
  %262 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %final_r.addr, align 8, !dbg !10951
  %263 = load %struct.DerivedMesh*, %struct.DerivedMesh** %262, align 8, !dbg !10953
  %264 = load float, float* %loop_normals_split_angle, align 4, !dbg !10954
  call void @DM_calc_loop_normals(%struct.DerivedMesh* %263, float %264), !dbg !10955
  %265 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10956
  %tobool227 = icmp ne %struct.DerivedMesh** %265, null, !dbg !10956
  br i1 %tobool227, label %land.lhs.true228, label %if.end234, !dbg !10958

land.lhs.true228:                                 ; preds = %if.then226
  %266 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10959
  %267 = load %struct.DerivedMesh*, %struct.DerivedMesh** %266, align 8, !dbg !10960
  %tobool229 = icmp ne %struct.DerivedMesh* %267, null, !dbg !10960
  br i1 %tobool229, label %land.lhs.true230, label %if.end234, !dbg !10961

land.lhs.true230:                                 ; preds = %land.lhs.true228
  %268 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10962
  %269 = load %struct.DerivedMesh*, %struct.DerivedMesh** %268, align 8, !dbg !10963
  %270 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %final_r.addr, align 8, !dbg !10964
  %271 = load %struct.DerivedMesh*, %struct.DerivedMesh** %270, align 8, !dbg !10965
  %cmp231 = icmp ne %struct.DerivedMesh* %269, %271, !dbg !10966
  br i1 %cmp231, label %if.then233, label %if.end234, !dbg !10967

if.then233:                                       ; preds = %land.lhs.true230
  %272 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10968
  %273 = load %struct.DerivedMesh*, %struct.DerivedMesh** %272, align 8, !dbg !10970
  %274 = load float, float* %loop_normals_split_angle, align 4, !dbg !10971
  call void @DM_calc_loop_normals(%struct.DerivedMesh* %273, float %274), !dbg !10972
  br label %if.end234, !dbg !10973

if.end234:                                        ; preds = %if.then233, %land.lhs.true230, %land.lhs.true228, %if.then226
  br label %if.end235, !dbg !10974

if.end235:                                        ; preds = %if.end234, %if.end224
  %275 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %final_r.addr, align 8, !dbg !10975
  %276 = load %struct.DerivedMesh*, %struct.DerivedMesh** %275, align 8, !dbg !10977
  %type236 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %276, i32 0, i32 14, !dbg !10978
  %277 = load i32, i32* %type236, align 8, !dbg !10978
  %cmp237 = icmp ne i32 %277, 1, !dbg !10979
  br i1 %cmp237, label %if.then239, label %if.end240, !dbg !10980

if.then239:                                       ; preds = %if.end235
  %278 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %final_r.addr, align 8, !dbg !10981
  %279 = load %struct.DerivedMesh*, %struct.DerivedMesh** %278, align 8, !dbg !10983
  call void @DM_ensure_tessface(%struct.DerivedMesh* %279), !dbg !10984
  br label %if.end240, !dbg !10985

if.end240:                                        ; preds = %if.then239, %if.end235
  %280 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10986
  %tobool241 = icmp ne %struct.DerivedMesh** %280, null, !dbg !10986
  br i1 %tobool241, label %land.lhs.true242, label %if.end254, !dbg !10988

land.lhs.true242:                                 ; preds = %if.end240
  %281 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10989
  %282 = load %struct.DerivedMesh*, %struct.DerivedMesh** %281, align 8, !dbg !10990
  %tobool243 = icmp ne %struct.DerivedMesh* %282, null, !dbg !10990
  br i1 %tobool243, label %if.then244, label %if.end254, !dbg !10991

if.then244:                                       ; preds = %land.lhs.true242
  %283 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10992
  %284 = load %struct.DerivedMesh*, %struct.DerivedMesh** %283, align 8, !dbg !10995
  %type245 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %284, i32 0, i32 14, !dbg !10996
  %285 = load i32, i32* %type245, align 8, !dbg !10996
  %cmp246 = icmp ne i32 %285, 1, !dbg !10997
  br i1 %cmp246, label %if.then248, label %if.end253, !dbg !10998

if.then248:                                       ; preds = %if.then244
  %286 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !10999
  %287 = load %struct.DerivedMesh*, %struct.DerivedMesh** %286, align 8, !dbg !11002
  %288 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %final_r.addr, align 8, !dbg !11003
  %289 = load %struct.DerivedMesh*, %struct.DerivedMesh** %288, align 8, !dbg !11004
  %cmp249 = icmp ne %struct.DerivedMesh* %287, %289, !dbg !11005
  br i1 %cmp249, label %if.then251, label %if.end252, !dbg !11006

if.then251:                                       ; preds = %if.then248
  %290 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %cage_r.addr, align 8, !dbg !11007
  %291 = load %struct.DerivedMesh*, %struct.DerivedMesh** %290, align 8, !dbg !11009
  call void @DM_ensure_tessface(%struct.DerivedMesh* %291), !dbg !11010
  br label %if.end252, !dbg !11011

if.end252:                                        ; preds = %if.then251, %if.then248
  br label %if.end253, !dbg !11012

if.end253:                                        ; preds = %if.end252, %if.then244
  br label %if.end254, !dbg !11013

if.end254:                                        ; preds = %if.end253, %land.lhs.true242, %if.end240
  %292 = load i8, i8* %do_loop_normals, align 1, !dbg !11014
  %tobool255 = icmp ne i8 %292, 0, !dbg !11014
  br i1 %tobool255, label %if.end257, label %if.then256, !dbg !11016

if.then256:                                       ; preds = %if.end254
  %293 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %final_r.addr, align 8, !dbg !11017
  %294 = load %struct.DerivedMesh*, %struct.DerivedMesh** %293, align 8, !dbg !11019
  call void @dm_ensure_display_normals(%struct.DerivedMesh* %294), !dbg !11020
  br label %if.end257, !dbg !11021

if.end257:                                        ; preds = %if.then256, %if.end254
  %295 = load i64, i64* %dataMask.addr, align 8, !dbg !11022
  %and258 = and i64 %295, 16384, !dbg !11024
  %tobool259 = icmp ne i64 %and258, 0, !dbg !11024
  br i1 %tobool259, label %if.then260, label %if.end261, !dbg !11025

if.then260:                                       ; preds = %if.end257
  %296 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11026
  %297 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11027
  %298 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %final_r.addr, align 8, !dbg !11028
  %299 = load %struct.DerivedMesh*, %struct.DerivedMesh** %298, align 8, !dbg !11029
  %300 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !11030
  call void @add_orco_dm(%struct.Object* %296, %struct.BMEditMesh* %297, %struct.DerivedMesh* %299, %struct.DerivedMesh* %300, i32 14), !dbg !11031
  br label %if.end261, !dbg !11031

if.end261:                                        ; preds = %if.then260, %if.end257
  %301 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !11032
  %tobool262 = icmp ne %struct.DerivedMesh* %301, null, !dbg !11032
  br i1 %tobool262, label %if.then263, label %if.end266, !dbg !11034

if.then263:                                       ; preds = %if.end261
  %302 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !11035
  %release264 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %302, i32 0, i32 95, !dbg !11036
  %release265 = bitcast {}** %release264 to void (%struct.DerivedMesh*)**, !dbg !11036
  %303 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release265, align 8, !dbg !11036
  %304 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !11037
  call void %303(%struct.DerivedMesh* %304), !dbg !11035
  br label %if.end266, !dbg !11035

if.end266:                                        ; preds = %if.then263, %if.end261
  %305 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !11038
  %tobool267 = icmp ne [3 x float]* %305, null, !dbg !11038
  br i1 %tobool267, label %if.then268, label %if.end269, !dbg !11040

if.then268:                                       ; preds = %if.end266
  %306 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11041
  %307 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !11042
  %308 = bitcast [3 x float]* %307 to i8*, !dbg !11042
  call void %306(i8* %308), !dbg !11041
  br label %if.end269, !dbg !11041

if.end269:                                        ; preds = %if.then268, %if.end266
  ret void, !dbg !11043
}

declare dso_local i32 @modifiers_getCageIndex(%struct.Scene*, %struct.Object*, i32*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @dm_drawflag_calc(%struct.ToolSettings* %ts) #0 !dbg !11044 {
entry:
  %ts.addr = alloca %struct.ToolSettings*, align 8
  store %struct.ToolSettings* %ts, %struct.ToolSettings** %ts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts.addr, metadata !11049, metadata !DIExpression()), !dbg !11050
  %0 = load %struct.ToolSettings*, %struct.ToolSettings** %ts.addr, align 8, !dbg !11051
  %multipaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %0, i32 0, i32 61, !dbg !11052
  %1 = load i8, i8* %multipaint, align 1, !dbg !11052
  %conv = zext i8 %1 to i32, !dbg !11051
  %tobool = icmp ne i32 %conv, 0, !dbg !11051
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11051

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !11051

cond.false:                                       ; preds = %entry
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %ts.addr, align 8, !dbg !11053
  %weightuser = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %2, i32 0, i32 62, !dbg !11054
  %3 = load i8, i8* %weightuser, align 2, !dbg !11054
  %conv1 = zext i8 %3 to i32, !dbg !11053
  %shl = shl i32 1, %conv1, !dbg !11055
  br label %cond.end, !dbg !11051

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 8, %cond.true ], [ %shl, %cond.false ], !dbg !11051
  %4 = load %struct.ToolSettings*, %struct.ToolSettings** %ts.addr, align 8, !dbg !11056
  %auto_normalize = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %4, i32 0, i32 60, !dbg !11057
  %5 = load i8, i8* %auto_normalize, align 4, !dbg !11057
  %conv2 = zext i8 %5 to i32, !dbg !11056
  %tobool3 = icmp ne i32 %conv2, 0, !dbg !11056
  %6 = zext i1 %tobool3 to i64, !dbg !11056
  %cond4 = select i1 %tobool3, i32 16, i32 0, !dbg !11056
  %or = or i32 %cond, %cond4, !dbg !11058
  ret i32 %or, !dbg !11059
}

declare dso_local void @modifiers_clearErrors(%struct.Object*) #2

declare dso_local %struct.ModifierData* @modifiers_getVirtualModifierList(%struct.Object*, %struct.VirtualModifierData*) #2

declare dso_local %struct.ModifierData* @modifiers_getLastPreview(%struct.Scene*, %struct.ModifierData*, i32) #2

declare dso_local %struct.CDMaskLink* @modifiers_calcDataMasks(%struct.Scene*, %struct.Object*, %struct.ModifierData*, i64, i32, %struct.ModifierData*, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_orco_dm(%struct.Object* %ob, %struct.BMEditMesh* %em, %struct.DerivedMesh* %dm, %struct.DerivedMesh* %orcodm, i32 %layer) #0 !dbg !11060 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %orcodm.addr = alloca %struct.DerivedMesh*, align 8
  %layer.addr = alloca i32, align 4
  %orco = alloca [3 x float]*, align 8
  %layerorco = alloca [3 x float]*, align 8
  %totvert = alloca i32, align 4
  %free = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11063, metadata !DIExpression()), !dbg !11064
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !11065, metadata !DIExpression()), !dbg !11066
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !11067, metadata !DIExpression()), !dbg !11068
  store %struct.DerivedMesh* %orcodm, %struct.DerivedMesh** %orcodm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %orcodm.addr, metadata !11069, metadata !DIExpression()), !dbg !11070
  store i32 %layer, i32* %layer.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %layer.addr, metadata !11071, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.declare(metadata [3 x float]** %orco, metadata !11073, metadata !DIExpression()), !dbg !11074
  call void @llvm.dbg.declare(metadata [3 x float]** %layerorco, metadata !11075, metadata !DIExpression()), !dbg !11076
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !11077, metadata !DIExpression()), !dbg !11078
  call void @llvm.dbg.declare(metadata i32* %free, metadata !11079, metadata !DIExpression()), !dbg !11080
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11081
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 23, !dbg !11082
  %1 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !11082
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11083
  %call = call i32 %1(%struct.DerivedMesh* %2), !dbg !11081
  store i32 %call, i32* %totvert, align 4, !dbg !11084
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm.addr, align 8, !dbg !11085
  %tobool = icmp ne %struct.DerivedMesh* %3, null, !dbg !11085
  br i1 %tobool, label %if.then, label %if.else7, !dbg !11087

if.then:                                          ; preds = %entry
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !11088
  %5 = load i32, i32* %totvert, align 4, !dbg !11090
  %conv = sext i32 %5 to i64, !dbg !11090
  %mul = mul i64 12, %conv, !dbg !11091
  %call1 = call i8* %4(i64 %mul, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i64 0, i64 0)), !dbg !11088
  %6 = bitcast i8* %call1 to [3 x float]*, !dbg !11088
  store [3 x float]* %6, [3 x float]** %orco, align 8, !dbg !11092
  store i32 1, i32* %free, align 4, !dbg !11093
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm.addr, align 8, !dbg !11094
  %getNumVerts2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 23, !dbg !11096
  %8 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts2, align 8, !dbg !11096
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm.addr, align 8, !dbg !11097
  %call3 = call i32 %8(%struct.DerivedMesh* %9), !dbg !11094
  %10 = load i32, i32* %totvert, align 4, !dbg !11098
  %cmp = icmp eq i32 %call3, %10, !dbg !11099
  br i1 %cmp, label %if.then5, label %if.else, !dbg !11100

if.then5:                                         ; preds = %if.then
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm.addr, align 8, !dbg !11101
  %getVertCos = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %11, i32 0, i32 77, !dbg !11102
  %12 = load void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, [3 x float]*)** %getVertCos, align 8, !dbg !11102
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm.addr, align 8, !dbg !11103
  %14 = load [3 x float]*, [3 x float]** %orco, align 8, !dbg !11104
  call void %12(%struct.DerivedMesh* %13, [3 x float]* %14), !dbg !11101
  br label %if.end, !dbg !11101

if.else:                                          ; preds = %if.then
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11105
  %getVertCos6 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 77, !dbg !11106
  %16 = load void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, [3 x float]*)** %getVertCos6, align 8, !dbg !11106
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11107
  %18 = load [3 x float]*, [3 x float]** %orco, align 8, !dbg !11108
  call void %16(%struct.DerivedMesh* %17, [3 x float]* %18), !dbg !11105
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end9, !dbg !11109

if.else7:                                         ; preds = %entry
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11110
  %20 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11111
  %21 = load i32, i32* %layer.addr, align 4, !dbg !11112
  %call8 = call [3 x float]* @get_orco_coords_dm(%struct.Object* %19, %struct.BMEditMesh* %20, i32 %21, i32* %free), !dbg !11113
  store [3 x float]* %call8, [3 x float]** %orco, align 8, !dbg !11114
  br label %if.end9

if.end9:                                          ; preds = %if.else7, %if.end
  %22 = load [3 x float]*, [3 x float]** %orco, align 8, !dbg !11115
  %tobool10 = icmp ne [3 x float]* %22, null, !dbg !11115
  br i1 %tobool10, label %if.then11, label %if.end26, !dbg !11117

if.then11:                                        ; preds = %if.end9
  %23 = load i32, i32* %layer.addr, align 4, !dbg !11118
  %cmp12 = icmp eq i32 %23, 14, !dbg !11121
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !11122

if.then14:                                        ; preds = %if.then11
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11123
  %data = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 19, !dbg !11124
  %25 = load i8*, i8** %data, align 8, !dbg !11124
  %26 = bitcast i8* %25 to %struct.Mesh*, !dbg !11123
  %27 = load [3 x float]*, [3 x float]** %orco, align 8, !dbg !11125
  %28 = load i32, i32* %totvert, align 4, !dbg !11126
  call void @BKE_mesh_orco_verts_transform(%struct.Mesh* %26, [3 x float]* %27, i32 %28, i32 0), !dbg !11127
  br label %if.end15, !dbg !11127

if.end15:                                         ; preds = %if.then14, %if.then11
  %29 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11128
  %30 = load i32, i32* %layer.addr, align 4, !dbg !11130
  %call16 = call i8* @DM_get_vert_data_layer(%struct.DerivedMesh* %29, i32 %30), !dbg !11131
  %31 = bitcast i8* %call16 to [3 x float]*, !dbg !11131
  store [3 x float]* %31, [3 x float]** %layerorco, align 8, !dbg !11132
  %tobool17 = icmp ne [3 x float]* %31, null, !dbg !11132
  br i1 %tobool17, label %if.end20, label %if.then18, !dbg !11133

if.then18:                                        ; preds = %if.end15
  %32 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11134
  %33 = load i32, i32* %layer.addr, align 4, !dbg !11136
  call void @DM_add_vert_layer(%struct.DerivedMesh* %32, i32 %33, i32 1, i8* null), !dbg !11137
  %34 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11138
  %35 = load i32, i32* %layer.addr, align 4, !dbg !11139
  %call19 = call i8* @DM_get_vert_data_layer(%struct.DerivedMesh* %34, i32 %35), !dbg !11140
  %36 = bitcast i8* %call19 to [3 x float]*, !dbg !11140
  store [3 x float]* %36, [3 x float]** %layerorco, align 8, !dbg !11141
  br label %if.end20, !dbg !11142

if.end20:                                         ; preds = %if.then18, %if.end15
  %37 = load [3 x float]*, [3 x float]** %layerorco, align 8, !dbg !11143
  %38 = bitcast [3 x float]* %37 to i8*, !dbg !11144
  %39 = load [3 x float]*, [3 x float]** %orco, align 8, !dbg !11145
  %40 = bitcast [3 x float]* %39 to i8*, !dbg !11144
  %41 = load i32, i32* %totvert, align 4, !dbg !11146
  %conv21 = sext i32 %41 to i64, !dbg !11146
  %mul22 = mul i64 12, %conv21, !dbg !11147
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 4 %40, i64 %mul22, i1 false), !dbg !11144
  %42 = load i32, i32* %free, align 4, !dbg !11148
  %tobool23 = icmp ne i32 %42, 0, !dbg !11148
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !11150

if.then24:                                        ; preds = %if.end20
  %43 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11151
  %44 = load [3 x float]*, [3 x float]** %orco, align 8, !dbg !11152
  %45 = bitcast [3 x float]* %44 to i8*, !dbg !11152
  call void %43(i8* %45), !dbg !11151
  br label %if.end25, !dbg !11151

if.end25:                                         ; preds = %if.then24, %if.end20
  br label %if.end26, !dbg !11153

if.end26:                                         ; preds = %if.end25, %if.end9
  ret void, !dbg !11154
}

declare dso_local void @modwrap_deformVertsEM(%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, i32) #2

declare dso_local %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh*) #2

declare dso_local %struct.DerivedMesh* @CDDM_from_editbmesh(%struct.BMEditMesh*, i8 zeroext, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.DerivedMesh* @create_orco_dm(%struct.Object* %ob, %struct.Mesh* %me, %struct.BMEditMesh* %em, i32 %layer) #0 !dbg !11155 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %me.addr = alloca %struct.Mesh*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %layer.addr = alloca i32, align 4
  %dm = alloca %struct.DerivedMesh*, align 8
  %orco = alloca [3 x float]*, align 8
  %free = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11158, metadata !DIExpression()), !dbg !11159
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !11160, metadata !DIExpression()), !dbg !11161
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !11162, metadata !DIExpression()), !dbg !11163
  store i32 %layer, i32* %layer.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %layer.addr, metadata !11164, metadata !DIExpression()), !dbg !11165
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !11166, metadata !DIExpression()), !dbg !11167
  call void @llvm.dbg.declare(metadata [3 x float]** %orco, metadata !11168, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.declare(metadata i32* %free, metadata !11170, metadata !DIExpression()), !dbg !11171
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11172
  %tobool = icmp ne %struct.BMEditMesh* %0, null, !dbg !11172
  br i1 %tobool, label %if.then, label %if.else, !dbg !11174

if.then:                                          ; preds = %entry
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11175
  %call = call %struct.DerivedMesh* @CDDM_from_editbmesh(%struct.BMEditMesh* %1, i8 zeroext 0, i8 zeroext 0), !dbg !11176
  store %struct.DerivedMesh* %call, %struct.DerivedMesh** %dm, align 8, !dbg !11177
  br label %if.end, !dbg !11178

if.else:                                          ; preds = %entry
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !11179
  %call1 = call %struct.DerivedMesh* @CDDM_from_mesh(%struct.Mesh* %2), !dbg !11180
  store %struct.DerivedMesh* %call1, %struct.DerivedMesh** %dm, align 8, !dbg !11181
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11182
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11183
  %5 = load i32, i32* %layer.addr, align 4, !dbg !11184
  %call2 = call [3 x float]* @get_orco_coords_dm(%struct.Object* %3, %struct.BMEditMesh* %4, i32 %5, i32* %free), !dbg !11185
  store [3 x float]* %call2, [3 x float]** %orco, align 8, !dbg !11186
  %6 = load [3 x float]*, [3 x float]** %orco, align 8, !dbg !11187
  %tobool3 = icmp ne [3 x float]* %6, null, !dbg !11187
  br i1 %tobool3, label %if.then4, label %if.end8, !dbg !11189

if.then4:                                         ; preds = %if.end
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !11190
  %8 = load [3 x float]*, [3 x float]** %orco, align 8, !dbg !11192
  call void @CDDM_apply_vert_coords(%struct.DerivedMesh* %7, [3 x float]* %8), !dbg !11193
  %9 = load i32, i32* %free, align 4, !dbg !11194
  %tobool5 = icmp ne i32 %9, 0, !dbg !11194
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !11196

if.then6:                                         ; preds = %if.then4
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11197
  %11 = load [3 x float]*, [3 x float]** %orco, align 8, !dbg !11198
  %12 = bitcast [3 x float]* %11 to i8*, !dbg !11198
  call void %10(i8* %12), !dbg !11197
  br label %if.end7, !dbg !11197

if.end7:                                          ; preds = %if.then6, %if.then4
  br label %if.end8, !dbg !11199

if.end8:                                          ; preds = %if.end7, %if.end
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !11200
  ret %struct.DerivedMesh* %13, !dbg !11201
}

declare dso_local %struct.DerivedMesh* @modwrap_applyModifierEM(%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, i32) #2

declare dso_local void @BLI_linklist_free(%struct.LinkNode*, void (i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @DM_update_statvis_color(%struct.Scene* %scene, %struct.Object* %ob, %struct.DerivedMesh* %dm) #0 !dbg !11202 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11205, metadata !DIExpression()), !dbg !11206
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11207, metadata !DIExpression()), !dbg !11208
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !11209, metadata !DIExpression()), !dbg !11210
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !11211, metadata !DIExpression()), !dbg !11212
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11213
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %0), !dbg !11214
  store %struct.BMEditMesh* %call, %struct.BMEditMesh** %em, align 8, !dbg !11212
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11215
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11216
  %3 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11217
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %3, i32 0, i32 20, !dbg !11218
  %4 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !11218
  %statvis = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %4, i32 0, i32 74, !dbg !11219
  call void @BKE_editmesh_statvis_calc(%struct.BMEditMesh* %1, %struct.DerivedMesh* %2, %struct.MeshStatVis* %statvis), !dbg !11220
  ret void, !dbg !11221
}

; Function Attrs: noinline nounwind uwtable
define internal void @DM_calc_loop_normals(%struct.DerivedMesh* %dm, float %split_angle) #0 !dbg !11222 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %split_angle.addr = alloca float, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !11225, metadata !DIExpression()), !dbg !11226
  store float %split_angle, float* %split_angle.addr, align 4
  call void @llvm.dbg.declare(metadata float* %split_angle.addr, metadata !11227, metadata !DIExpression()), !dbg !11228
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11229
  %calcLoopNormals = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 21, !dbg !11230
  %1 = load void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*, float)** %calcLoopNormals, align 8, !dbg !11230
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11231
  %3 = load float, float* %split_angle.addr, align 4, !dbg !11232
  call void %1(%struct.DerivedMesh* %2, float %3), !dbg !11229
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11233
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 16, !dbg !11234
  %5 = load i32, i32* %dirty, align 8, !dbg !11235
  %or = or i32 %5, 1, !dbg !11235
  store i32 %or, i32* %dirty, align 8, !dbg !11235
  ret void, !dbg !11236
}

; Function Attrs: noinline nounwind uwtable
define internal void @dm_ensure_display_normals(%struct.DerivedMesh* %dm) #0 !dbg !11237 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !11238, metadata !DIExpression()), !dbg !11239
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11240
  %type = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 14, !dbg !11242
  %1 = load i32, i32* %type, align 8, !dbg !11242
  %cmp = icmp eq i32 %1, 0, !dbg !11243
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11244

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11245
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 16, !dbg !11246
  %3 = load i32, i32* %dirty, align 8, !dbg !11246
  %and = and i32 %3, 4, !dbg !11247
  %tobool = icmp ne i32 %and, 0, !dbg !11247
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !11248

lor.lhs.false:                                    ; preds = %land.lhs.true
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11249
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 2, !dbg !11250
  %call = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %faceData, i32 8), !dbg !11251
  %conv = zext i8 %call to i32, !dbg !11251
  %cmp1 = icmp eq i32 %conv, 0, !dbg !11252
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11253

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11254
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11256
  %dirty3 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 16, !dbg !11257
  %7 = load i32, i32* %dirty3, align 8, !dbg !11257
  %and4 = and i32 %7, 4, !dbg !11258
  %tobool5 = icmp ne i32 %and4, 0, !dbg !11259
  %8 = zext i1 %tobool5 to i64, !dbg !11259
  %cond = select i1 %tobool5, i32 0, i32 1, !dbg !11259
  %conv6 = trunc i32 %cond to i8, !dbg !11259
  call void @CDDM_calc_normals_mapping_ex(%struct.DerivedMesh* %5, i8 zeroext %conv6), !dbg !11260
  br label %if.end, !dbg !11261

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  ret void, !dbg !11262
}

; Function Attrs: noinline nounwind uwtable
define internal [3 x float]* @get_orco_coords_dm(%struct.Object* %ob, %struct.BMEditMesh* %em, i32 %layer, i32* %free) #0 !dbg !11263 {
entry:
  %retval = alloca [3 x float]*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %layer.addr = alloca i32, align 4
  %free.addr = alloca i32*, align 8
  %clmd = alloca %struct.ClothModifierData*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11266, metadata !DIExpression()), !dbg !11267
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !11268, metadata !DIExpression()), !dbg !11269
  store i32 %layer, i32* %layer.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %layer.addr, metadata !11270, metadata !DIExpression()), !dbg !11271
  store i32* %free, i32** %free.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %free.addr, metadata !11272, metadata !DIExpression()), !dbg !11273
  %0 = load i32*, i32** %free.addr, align 8, !dbg !11274
  store i32 0, i32* %0, align 4, !dbg !11275
  %1 = load i32, i32* %layer.addr, align 4, !dbg !11276
  %cmp = icmp eq i32 %1, 14, !dbg !11278
  br i1 %cmp, label %if.then, label %if.else3, !dbg !11279

if.then:                                          ; preds = %entry
  %2 = load i32*, i32** %free.addr, align 8, !dbg !11280
  store i32 1, i32* %2, align 4, !dbg !11282
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11283
  %tobool = icmp ne %struct.BMEditMesh* %3, null, !dbg !11283
  br i1 %tobool, label %if.then1, label %if.else, !dbg !11285

if.then1:                                         ; preds = %if.then
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11286
  %call = call [3 x float]* @get_editbmesh_orco_verts(%struct.BMEditMesh* %4), !dbg !11287
  store [3 x float]* %call, [3 x float]** %retval, align 8, !dbg !11288
  br label %return, !dbg !11288

if.else:                                          ; preds = %if.then
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11289
  %call2 = call [3 x float]* @BKE_mesh_orco_verts_get(%struct.Object* %5), !dbg !11290
  store [3 x float]* %call2, [3 x float]** %retval, align 8, !dbg !11291
  br label %return, !dbg !11291

if.else3:                                         ; preds = %entry
  %6 = load i32, i32* %layer.addr, align 4, !dbg !11292
  %cmp4 = icmp eq i32 %6, 23, !dbg !11294
  br i1 %cmp4, label %if.then5, label %if.end15, !dbg !11295

if.then5:                                         ; preds = %if.else3
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11296
  %tobool6 = icmp ne %struct.BMEditMesh* %7, null, !dbg !11296
  br i1 %tobool6, label %if.end14, label %if.then7, !dbg !11299

if.then7:                                         ; preds = %if.then5
  call void @llvm.dbg.declare(metadata %struct.ClothModifierData** %clmd, metadata !11300, metadata !DIExpression()), !dbg !11302
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11303
  %call8 = call %struct.ModifierData* @modifiers_findByType(%struct.Object* %8, i32 22), !dbg !11304
  %9 = bitcast %struct.ModifierData* %call8 to %struct.ClothModifierData*, !dbg !11305
  store %struct.ClothModifierData* %9, %struct.ClothModifierData** %clmd, align 8, !dbg !11302
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !11306, metadata !DIExpression()), !dbg !11307
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11308
  %call9 = call %struct.Key* @BKE_key_from_object(%struct.Object* %10), !dbg !11309
  %11 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd, align 8, !dbg !11310
  %sim_parms = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %11, i32 0, i32 3, !dbg !11311
  %12 = load %struct.ClothSimSettings*, %struct.ClothSimSettings** %sim_parms, align 8, !dbg !11311
  %shapekey_rest = getelementptr inbounds %struct.ClothSimSettings, %struct.ClothSimSettings* %12, i32 0, i32 37, !dbg !11312
  %13 = load i16, i16* %shapekey_rest, align 2, !dbg !11312
  %conv = sext i16 %13 to i32, !dbg !11310
  %call10 = call %struct.KeyBlock* @BKE_keyblock_from_key(%struct.Key* %call9, i32 %conv), !dbg !11313
  store %struct.KeyBlock* %call10, %struct.KeyBlock** %kb, align 8, !dbg !11307
  %14 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !11314
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %14, i32 0, i32 10, !dbg !11316
  %15 = load i8*, i8** %data, align 8, !dbg !11316
  %tobool11 = icmp ne i8* %15, null, !dbg !11314
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !11317

if.then12:                                        ; preds = %if.then7
  %16 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !11318
  %data13 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %16, i32 0, i32 10, !dbg !11319
  %17 = load i8*, i8** %data13, align 8, !dbg !11319
  %18 = bitcast i8* %17 to [3 x float]*, !dbg !11318
  store [3 x float]* %18, [3 x float]** %retval, align 8, !dbg !11320
  br label %return, !dbg !11320

if.end:                                           ; preds = %if.then7
  br label %if.end14, !dbg !11321

if.end14:                                         ; preds = %if.end, %if.then5
  store [3 x float]* null, [3 x float]** %retval, align 8, !dbg !11322
  br label %return, !dbg !11322

if.end15:                                         ; preds = %if.else3
  br label %if.end16

if.end16:                                         ; preds = %if.end15
  store [3 x float]* null, [3 x float]** %retval, align 8, !dbg !11323
  br label %return, !dbg !11323

return:                                           ; preds = %if.end16, %if.end14, %if.then12, %if.else, %if.then1
  %19 = load [3 x float]*, [3 x float]** %retval, align 8, !dbg !11324
  ret [3 x float]* %19, !dbg !11324
}

declare dso_local void @BKE_mesh_orco_verts_transform(%struct.Mesh*, [3 x float]*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal [3 x float]* @get_editbmesh_orco_verts(%struct.BMEditMesh* %em) #0 !dbg !11325 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %iter = alloca %struct.BMIter, align 8
  %eve = alloca %struct.BMVert*, align 8
  %orco = alloca [3 x float]*, align 8
  %i = alloca i32, align 4
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !11328, metadata !DIExpression()), !dbg !11329
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !11330, metadata !DIExpression()), !dbg !11331
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !11332, metadata !DIExpression()), !dbg !11333
  call void @llvm.dbg.declare(metadata [3 x float]** %orco, metadata !11334, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11336, metadata !DIExpression()), !dbg !11337
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !11338
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11339
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %1, i32 0, i32 0, !dbg !11340
  %2 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !11340
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %2, i32 0, i32 0, !dbg !11341
  %3 = load i32, i32* %totvert, align 8, !dbg !11341
  %conv = sext i32 %3 to i64, !dbg !11339
  %mul = mul i64 12, %conv, !dbg !11342
  %call = call i8* %0(i64 %mul, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i64 0, i64 0)), !dbg !11338
  %4 = bitcast i8* %call to [3 x float]*, !dbg !11338
  store [3 x float]* %4, [3 x float]** %orco, align 8, !dbg !11343
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11344
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %5, i32 0, i32 0, !dbg !11344
  %6 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !11344
  %call2 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %6, i8 zeroext 1, i8* null), !dbg !11344
  %7 = bitcast i8* %call2 to %struct.BMVert*, !dbg !11344
  store %struct.BMVert* %7, %struct.BMVert** %eve, align 8, !dbg !11344
  store i32 0, i32* %i, align 4, !dbg !11344
  br label %for.cond, !dbg !11344

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !11346
  %tobool = icmp ne %struct.BMVert* %8, null, !dbg !11344
  br i1 %tobool, label %for.body, label %for.end, !dbg !11344

for.body:                                         ; preds = %for.cond
  %9 = load [3 x float]*, [3 x float]** %orco, align 8, !dbg !11348
  %10 = load i32, i32* %i, align 4, !dbg !11350
  %idxprom = sext i32 %10 to i64, !dbg !11348
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %9, i64 %idxprom, !dbg !11348
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !11348
  %11 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !11351
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %11, i32 0, i32 2, !dbg !11352
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11351
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay3), !dbg !11353
  br label %for.inc, !dbg !11354

for.inc:                                          ; preds = %for.body
  %call4 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !11346
  %12 = bitcast i8* %call4 to %struct.BMVert*, !dbg !11346
  store %struct.BMVert* %12, %struct.BMVert** %eve, align 8, !dbg !11346
  %13 = load i32, i32* %i, align 4, !dbg !11346
  %inc = add nsw i32 %13, 1, !dbg !11346
  store i32 %inc, i32* %i, align 4, !dbg !11346
  br label %for.cond, !dbg !11346, !llvm.loop !11355

for.end:                                          ; preds = %for.cond
  %14 = load [3 x float]*, [3 x float]** %orco, align 8, !dbg !11357
  ret [3 x float]* %14, !dbg !11358
}

declare dso_local [3 x float]* @BKE_mesh_orco_verts_get(%struct.Object*) #2

declare dso_local %struct.ModifierData* @modifiers_findByType(%struct.Object*, i32) #2

declare dso_local %struct.KeyBlock* @BKE_keyblock_from_key(%struct.Key*, i32) #2

declare dso_local %struct.Key* @BKE_key_from_object(%struct.Object*) #2

declare dso_local void @BKE_editmesh_statvis_calc(%struct.BMEditMesh*, %struct.DerivedMesh*, %struct.MeshStatVis*) #2

declare dso_local void @CDDM_calc_normals_mapping_ex(%struct.DerivedMesh*, i8 zeroext) #2

declare dso_local void @BKE_sculpt_update_mesh_elements(%struct.Scene*, %struct.Sculpt*, %struct.Object*, i8 zeroext, i8 zeroext) #2

declare dso_local %struct.MultiresModifierData* @get_multires_modifier(%struct.Scene*, %struct.Object*, i8 zeroext) #2

declare dso_local i32 @BLI_findindex(%struct.ListBase*, i8*) #2

declare dso_local zeroext i8 @modifier_supportsMapping(%struct.ModifierData*) #2

declare dso_local void @range_vn_i(i32*, i32, i32) #2

declare dso_local void @modifier_freeTemporaryData(%struct.ModifierData*) #2

declare dso_local void @map_to_sphere(float*, float*, float, float, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @normal_short_to_float_v3(float* %out, i16* %in) #0 !dbg !11359 {
entry:
  %out.addr = alloca float*, align 8
  %in.addr = alloca i16*, align 8
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !11362, metadata !DIExpression()), !dbg !11363
  store i16* %in, i16** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %in.addr, metadata !11364, metadata !DIExpression()), !dbg !11365
  %0 = load i16*, i16** %in.addr, align 8, !dbg !11366
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 0, !dbg !11366
  %1 = load i16, i16* %arrayidx, align 2, !dbg !11366
  %conv = sext i16 %1 to i32, !dbg !11366
  %conv1 = sitofp i32 %conv to float, !dbg !11366
  %mul = fmul float %conv1, 0x3F00002000000000, !dbg !11367
  %2 = load float*, float** %out.addr, align 8, !dbg !11368
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 0, !dbg !11368
  store float %mul, float* %arrayidx2, align 4, !dbg !11369
  %3 = load i16*, i16** %in.addr, align 8, !dbg !11370
  %arrayidx3 = getelementptr inbounds i16, i16* %3, i64 1, !dbg !11370
  %4 = load i16, i16* %arrayidx3, align 2, !dbg !11370
  %conv4 = sext i16 %4 to i32, !dbg !11370
  %conv5 = sitofp i32 %conv4 to float, !dbg !11370
  %mul6 = fmul float %conv5, 0x3F00002000000000, !dbg !11371
  %5 = load float*, float** %out.addr, align 8, !dbg !11372
  %arrayidx7 = getelementptr inbounds float, float* %5, i64 1, !dbg !11372
  store float %mul6, float* %arrayidx7, align 4, !dbg !11373
  %6 = load i16*, i16** %in.addr, align 8, !dbg !11374
  %arrayidx8 = getelementptr inbounds i16, i16* %6, i64 2, !dbg !11374
  %7 = load i16, i16* %arrayidx8, align 2, !dbg !11374
  %conv9 = sext i16 %7 to i32, !dbg !11374
  %conv10 = sitofp i32 %conv9 to float, !dbg !11374
  %mul11 = fmul float %conv10, 0x3F00002000000000, !dbg !11375
  %8 = load float*, float** %out.addr, align 8, !dbg !11376
  %arrayidx12 = getelementptr inbounds float, float* %8, i64 2, !dbg !11376
  store float %mul11, float* %arrayidx12, align 4, !dbg !11377
  ret void, !dbg !11378
}

declare dso_local float @normal_quad_v3(float*, float*, float*, float*, float*) #2

declare dso_local float @normal_tri_v3(float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !11379 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11380, metadata !DIExpression()), !dbg !11381
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !11382, metadata !DIExpression()), !dbg !11383
  %0 = load float*, float** %a.addr, align 8, !dbg !11384
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11384
  %1 = load float, float* %arrayidx, align 4, !dbg !11384
  %2 = load float*, float** %b.addr, align 8, !dbg !11385
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !11385
  %3 = load float, float* %arrayidx1, align 4, !dbg !11385
  %mul = fmul float %1, %3, !dbg !11386
  %4 = load float*, float** %a.addr, align 8, !dbg !11387
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !11387
  %5 = load float, float* %arrayidx2, align 4, !dbg !11387
  %6 = load float*, float** %b.addr, align 8, !dbg !11388
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !11388
  %7 = load float, float* %arrayidx3, align 4, !dbg !11388
  %mul4 = fmul float %5, %7, !dbg !11389
  %add = fadd float %mul, %mul4, !dbg !11390
  %8 = load float*, float** %a.addr, align 8, !dbg !11391
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !11391
  %9 = load float, float* %arrayidx5, align 4, !dbg !11391
  %10 = load float*, float** %b.addr, align 8, !dbg !11392
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !11392
  %11 = load float, float* %arrayidx6, align 4, !dbg !11392
  %mul7 = fmul float %9, %11, !dbg !11393
  %add8 = fadd float %add, %mul7, !dbg !11394
  ret float %add8, !dbg !11395
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v2v2(float* %a, float* %b) #0 !dbg !11396 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11397, metadata !DIExpression()), !dbg !11398
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !11399, metadata !DIExpression()), !dbg !11400
  %0 = load float*, float** %a.addr, align 8, !dbg !11401
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11401
  %1 = load float, float* %arrayidx, align 4, !dbg !11401
  %2 = load float*, float** %b.addr, align 8, !dbg !11402
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !11402
  %3 = load float, float* %arrayidx1, align 4, !dbg !11402
  %mul = fmul float %1, %3, !dbg !11403
  %4 = load float*, float** %a.addr, align 8, !dbg !11404
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !11404
  %5 = load float, float* %arrayidx2, align 4, !dbg !11404
  %6 = load float*, float** %b.addr, align 8, !dbg !11405
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !11405
  %7 = load float, float* %arrayidx3, align 4, !dbg !11405
  %mul4 = fmul float %5, %7, !dbg !11406
  %add = fadd float %mul, %mul4, !dbg !11407
  ret float %add, !dbg !11408
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2946, !2947, !2948}
!llvm.ident = !{!2949}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "G_dm_wcinfo", scope: !2, file: !3, line: 1200, type: !2938, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !303, globals: !2933, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/blenkernel/intern/DerivedMesh.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !12, !17, !28, !34, !40, !48, !55, !59, !65, !71, !115, !127, !136, !148, !154, !166, !173, !190, !206, !213, !219, !229, !281, !298}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !6, line: 128, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !6, line: 164, baseType: !7, size: 32, elements: !13)
!13 = !{!14, !15, !16}
!14 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotType", file: !18, line: 94, baseType: !7, size: 32, elements: !19)
!18 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27}
!20 = !DIEnumerator(name: "BMO_OP_SLOT_BOOL", value: 1, isUnsigned: true)
!21 = !DIEnumerator(name: "BMO_OP_SLOT_INT", value: 2, isUnsigned: true)
!22 = !DIEnumerator(name: "BMO_OP_SLOT_FLT", value: 3, isUnsigned: true)
!23 = !DIEnumerator(name: "BMO_OP_SLOT_PTR", value: 4, isUnsigned: true)
!24 = !DIEnumerator(name: "BMO_OP_SLOT_MAT", value: 5, isUnsigned: true)
!25 = !DIEnumerator(name: "BMO_OP_SLOT_VEC", value: 8, isUnsigned: true)
!26 = !DIEnumerator(name: "BMO_OP_SLOT_ELEMENT_BUF", value: 9, isUnsigned: true)
!27 = !DIEnumerator(name: "BMO_OP_SLOT_MAPPING", value: 10, isUnsigned: true)
!28 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Elem", file: !18, line: 116, baseType: !7, size: 32, elements: !29)
!29 = !{!30, !31, !32, !33}
!30 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_VERT", value: 1, isUnsigned: true)
!31 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_EDGE", value: 2, isUnsigned: true)
!32 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_FACE", value: 8, isUnsigned: true)
!33 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_IS_SINGLE", value: 16, isUnsigned: true)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Ptr", file: !18, line: 131, baseType: !7, size: 32, elements: !35)
!35 = !{!36, !37, !38, !39}
!36 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_BMESH", value: 100, isUnsigned: true)
!37 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_SCENE", value: 101, isUnsigned: true)
!38 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_OBJECT", value: 102, isUnsigned: true)
!39 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_MESH", value: 103, isUnsigned: true)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Map", file: !18, line: 123, baseType: !7, size: 32, elements: !41)
!41 = !{!42, !43, !44, !45, !46, !47}
!42 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_EMPTY", value: 64, isUnsigned: true)
!43 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_ELEM", value: 65, isUnsigned: true)
!44 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_FLT", value: 66, isUnsigned: true)
!45 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INT", value: 67, isUnsigned: true)
!46 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_BOOL", value: 68, isUnsigned: true)
!47 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INTERNAL", value: 69, isUnsigned: true)
!48 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !18, line: 182, baseType: !7, size: 32, elements: !49)
!49 = !{!50, !51, !52, !53, !54}
!50 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NOP", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_UNTAN_MULTIRES", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NORMALS_CALC", value: 2, isUnsigned: true)
!53 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_FLUSH", value: 4, isUnsigned: true)
!54 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_VALIDATE", value: 8, isUnsigned: true)
!55 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !6, line: 159, baseType: !7, size: 32, elements: !56)
!56 = !{!57, !58}
!57 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!58 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !6, line: 134, baseType: !7, size: 32, elements: !60)
!60 = !{!61, !62, !63, !64}
!61 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!62 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!63 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!64 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!65 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !6, line: 152, baseType: !7, size: 32, elements: !66)
!66 = !{!67, !68, !69, !70}
!67 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!68 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!69 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!70 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !72, line: 76, baseType: !7, size: 32, elements: !73)
!72 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!73 = !{!74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114}
!74 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!75 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!76 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!77 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!78 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!79 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!80 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!81 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!82 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!83 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!84 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!85 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!86 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!87 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!88 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!89 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!90 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!91 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!92 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!93 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!94 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!95 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!96 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!97 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!98 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!99 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!100 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!101 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!102 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!103 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!104 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!105 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!106 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!107 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!108 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!109 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!110 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!111 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!112 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!113 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!114 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 123, baseType: !7, size: 32, elements: !117)
!116 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_global.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!117 = !{!118, !119, !120, !121, !122, !123, !124, !125, !126}
!118 = !DIEnumerator(name: "G_DEBUG", value: 1, isUnsigned: true)
!119 = !DIEnumerator(name: "G_DEBUG_FFMPEG", value: 2, isUnsigned: true)
!120 = !DIEnumerator(name: "G_DEBUG_PYTHON", value: 4, isUnsigned: true)
!121 = !DIEnumerator(name: "G_DEBUG_EVENTS", value: 8, isUnsigned: true)
!122 = !DIEnumerator(name: "G_DEBUG_HANDLERS", value: 16, isUnsigned: true)
!123 = !DIEnumerator(name: "G_DEBUG_WM", value: 32, isUnsigned: true)
!124 = !DIEnumerator(name: "G_DEBUG_JOBS", value: 64, isUnsigned: true)
!125 = !DIEnumerator(name: "G_DEBUG_FREESTYLE", value: 128, isUnsigned: true)
!126 = !DIEnumerator(name: "G_DEBUG_DEPSGRAPH", value: 256, isUnsigned: true)
!127 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !128, line: 47, baseType: !7, size: 32, elements: !129)
!128 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_modifier.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!129 = !{!130, !131, !132, !133, !134, !135}
!130 = !DIEnumerator(name: "eModifierTypeType_None", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "eModifierTypeType_OnlyDeform", value: 1, isUnsigned: true)
!132 = !DIEnumerator(name: "eModifierTypeType_Constructive", value: 2, isUnsigned: true)
!133 = !DIEnumerator(name: "eModifierTypeType_Nonconstructive", value: 3, isUnsigned: true)
!134 = !DIEnumerator(name: "eModifierTypeType_DeformOrConstruct", value: 4, isUnsigned: true)
!135 = !DIEnumerator(name: "eModifierTypeType_NonGeometrical", value: 5, isUnsigned: true)
!136 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !128, line: 73, baseType: !7, size: 32, elements: !137)
!137 = !{!138, !139, !140, !141, !142, !143, !144, !145, !146, !147}
!138 = !DIEnumerator(name: "eModifierTypeFlag_AcceptsMesh", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "eModifierTypeFlag_AcceptsCVs", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "eModifierTypeFlag_SupportsMapping", value: 4, isUnsigned: true)
!141 = !DIEnumerator(name: "eModifierTypeFlag_SupportsEditmode", value: 8, isUnsigned: true)
!142 = !DIEnumerator(name: "eModifierTypeFlag_EnableInEditmode", value: 16, isUnsigned: true)
!143 = !DIEnumerator(name: "eModifierTypeFlag_RequiresOriginalData", value: 32, isUnsigned: true)
!144 = !DIEnumerator(name: "eModifierTypeFlag_UsesPointCache", value: 64, isUnsigned: true)
!145 = !DIEnumerator(name: "eModifierTypeFlag_Single", value: 128, isUnsigned: true)
!146 = !DIEnumerator(name: "eModifierTypeFlag_NoUserAdd", value: 256, isUnsigned: true)
!147 = !DIEnumerator(name: "eModifierTypeFlag_UsesPreview", value: 512, isUnsigned: true)
!148 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierApplyFlag", file: !128, line: 110, baseType: !7, size: 32, elements: !149)
!149 = !{!150, !151, !152, !153}
!150 = !DIEnumerator(name: "MOD_APPLY_RENDER", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "MOD_APPLY_USECACHE", value: 2, isUnsigned: true)
!152 = !DIEnumerator(name: "MOD_APPLY_ORCO", value: 4, isUnsigned: true)
!153 = !DIEnumerator(name: "MOD_APPLY_IGNORE_SIMPLIFY", value: 8, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierMode", file: !155, line: 88, baseType: !156, size: 32, elements: !157)
!155 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!156 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!157 = !{!158, !159, !160, !161, !162, !163, !164, !165}
!158 = !DIEnumerator(name: "eModifierMode_Realtime", value: 1)
!159 = !DIEnumerator(name: "eModifierMode_Render", value: 2)
!160 = !DIEnumerator(name: "eModifierMode_Editmode", value: 4)
!161 = !DIEnumerator(name: "eModifierMode_OnCage", value: 8)
!162 = !DIEnumerator(name: "eModifierMode_Expanded", value: 16)
!163 = !DIEnumerator(name: "eModifierMode_Virtual", value: 32)
!164 = !DIEnumerator(name: "eModifierMode_ApplyOnSpline", value: 64)
!165 = !DIEnumerator(name: "eModifierMode_DisableTemporary", value: -2147483648)
!166 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !167, line: 249, baseType: !7, size: 32, elements: !168)
!167 = !DIFile(filename: "blender/source/blender/bmesh/bmesh_class.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!168 = !{!169, !170, !171, !172}
!169 = !DIEnumerator(name: "BM_VERT", value: 1, isUnsigned: true)
!170 = !DIEnumerator(name: "BM_EDGE", value: 2, isUnsigned: true)
!171 = !DIEnumerator(name: "BM_LOOP", value: 4, isUnsigned: true)
!172 = !DIEnumerator(name: "BM_FACE", value: 8, isUnsigned: true)
!173 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BMIterType", file: !174, line: 57, baseType: !7, size: 32, elements: !175)
!174 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!175 = !{!176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189}
!176 = !DIEnumerator(name: "BM_VERTS_OF_MESH", value: 1, isUnsigned: true)
!177 = !DIEnumerator(name: "BM_EDGES_OF_MESH", value: 2, isUnsigned: true)
!178 = !DIEnumerator(name: "BM_FACES_OF_MESH", value: 3, isUnsigned: true)
!179 = !DIEnumerator(name: "BM_EDGES_OF_VERT", value: 4, isUnsigned: true)
!180 = !DIEnumerator(name: "BM_FACES_OF_VERT", value: 5, isUnsigned: true)
!181 = !DIEnumerator(name: "BM_LOOPS_OF_VERT", value: 6, isUnsigned: true)
!182 = !DIEnumerator(name: "BM_VERTS_OF_EDGE", value: 7, isUnsigned: true)
!183 = !DIEnumerator(name: "BM_FACES_OF_EDGE", value: 8, isUnsigned: true)
!184 = !DIEnumerator(name: "BM_VERTS_OF_FACE", value: 9, isUnsigned: true)
!185 = !DIEnumerator(name: "BM_EDGES_OF_FACE", value: 10, isUnsigned: true)
!186 = !DIEnumerator(name: "BM_LOOPS_OF_FACE", value: 11, isUnsigned: true)
!187 = !DIEnumerator(name: "BM_ALL_LOOPS_OF_FACE", value: 12, isUnsigned: true)
!188 = !DIEnumerator(name: "BM_LOOPS_OF_LOOP", value: 13, isUnsigned: true)
!189 = !DIEnumerator(name: "BM_LOOPS_OF_EDGE", value: 14, isUnsigned: true)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !191, line: 394, baseType: !7, size: 32, elements: !192)
!191 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!192 = !{!193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205}
!193 = !DIEnumerator(name: "OB_NEG_SCALE", value: 4, isUnsigned: true)
!194 = !DIEnumerator(name: "OB_DUPLIFRAMES", value: 8, isUnsigned: true)
!195 = !DIEnumerator(name: "OB_DUPLIVERTS", value: 16, isUnsigned: true)
!196 = !DIEnumerator(name: "OB_DUPLIROT", value: 32, isUnsigned: true)
!197 = !DIEnumerator(name: "OB_DUPLINOSPEED", value: 64, isUnsigned: true)
!198 = !DIEnumerator(name: "OB_DUPLIGROUP", value: 256, isUnsigned: true)
!199 = !DIEnumerator(name: "OB_DUPLIFACES", value: 512, isUnsigned: true)
!200 = !DIEnumerator(name: "OB_DUPLIFACES_SCALE", value: 1024, isUnsigned: true)
!201 = !DIEnumerator(name: "OB_DUPLIPARTS", value: 2048, isUnsigned: true)
!202 = !DIEnumerator(name: "OB_RENDER_DUPLI", value: 4096, isUnsigned: true)
!203 = !DIEnumerator(name: "OB_NO_CONSTRAINTS", value: 8192, isUnsigned: true)
!204 = !DIEnumerator(name: "OB_NO_PSYS_UPDATE", value: 16384, isUnsigned: true)
!205 = !DIEnumerator(name: "OB_DUPLI", value: 2840, isUnsigned: true)
!206 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !72, line: 172, baseType: !7, size: 32, elements: !207)
!207 = !{!208, !209, !210, !211, !212}
!208 = !DIEnumerator(name: "CD_FLAG_NOCOPY", value: 1, isUnsigned: true)
!209 = !DIEnumerator(name: "CD_FLAG_NOFREE", value: 2, isUnsigned: true)
!210 = !DIEnumerator(name: "CD_FLAG_TEMPORARY", value: 5, isUnsigned: true)
!211 = !DIEnumerator(name: "CD_FLAG_EXTERNAL", value: 8, isUnsigned: true)
!212 = !DIEnumerator(name: "CD_FLAG_IN_MEMORY", value: 16, isUnsigned: true)
!213 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 1092, baseType: !7, size: 32, elements: !214)
!214 = !{!215, !216, !217, !218}
!215 = !DIEnumerator(name: "CALC_WP_GROUP_USER_ACTIVE", value: 2, isUnsigned: true)
!216 = !DIEnumerator(name: "CALC_WP_GROUP_USER_ALL", value: 4, isUnsigned: true)
!217 = !DIEnumerator(name: "CALC_WP_MULTIPAINT", value: 8, isUnsigned: true)
!218 = !DIEnumerator(name: "CALC_WP_AUTO_NORMALIZE", value: 16, isUnsigned: true)
!219 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ObjectMode", file: !191, line: 666, baseType: !7, size: 32, elements: !220)
!220 = !{!221, !222, !223, !224, !225, !226, !227, !228}
!221 = !DIEnumerator(name: "OB_MODE_OBJECT", value: 0, isUnsigned: true)
!222 = !DIEnumerator(name: "OB_MODE_EDIT", value: 1, isUnsigned: true)
!223 = !DIEnumerator(name: "OB_MODE_SCULPT", value: 2, isUnsigned: true)
!224 = !DIEnumerator(name: "OB_MODE_VERTEX_PAINT", value: 4, isUnsigned: true)
!225 = !DIEnumerator(name: "OB_MODE_WEIGHT_PAINT", value: 8, isUnsigned: true)
!226 = !DIEnumerator(name: "OB_MODE_TEXTURE_PAINT", value: 16, isUnsigned: true)
!227 = !DIEnumerator(name: "OB_MODE_PARTICLE_EDIT", value: 32, isUnsigned: true)
!228 = !DIEnumerator(name: "OB_MODE_POSE", value: 64, isUnsigned: true)
!229 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierType", file: !155, line: 35, baseType: !7, size: 32, elements: !230)
!230 = !{!231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280}
!231 = !DIEnumerator(name: "eModifierType_None", value: 0, isUnsigned: true)
!232 = !DIEnumerator(name: "eModifierType_Subsurf", value: 1, isUnsigned: true)
!233 = !DIEnumerator(name: "eModifierType_Lattice", value: 2, isUnsigned: true)
!234 = !DIEnumerator(name: "eModifierType_Curve", value: 3, isUnsigned: true)
!235 = !DIEnumerator(name: "eModifierType_Build", value: 4, isUnsigned: true)
!236 = !DIEnumerator(name: "eModifierType_Mirror", value: 5, isUnsigned: true)
!237 = !DIEnumerator(name: "eModifierType_Decimate", value: 6, isUnsigned: true)
!238 = !DIEnumerator(name: "eModifierType_Wave", value: 7, isUnsigned: true)
!239 = !DIEnumerator(name: "eModifierType_Armature", value: 8, isUnsigned: true)
!240 = !DIEnumerator(name: "eModifierType_Hook", value: 9, isUnsigned: true)
!241 = !DIEnumerator(name: "eModifierType_Softbody", value: 10, isUnsigned: true)
!242 = !DIEnumerator(name: "eModifierType_Boolean", value: 11, isUnsigned: true)
!243 = !DIEnumerator(name: "eModifierType_Array", value: 12, isUnsigned: true)
!244 = !DIEnumerator(name: "eModifierType_EdgeSplit", value: 13, isUnsigned: true)
!245 = !DIEnumerator(name: "eModifierType_Displace", value: 14, isUnsigned: true)
!246 = !DIEnumerator(name: "eModifierType_UVProject", value: 15, isUnsigned: true)
!247 = !DIEnumerator(name: "eModifierType_Smooth", value: 16, isUnsigned: true)
!248 = !DIEnumerator(name: "eModifierType_Cast", value: 17, isUnsigned: true)
!249 = !DIEnumerator(name: "eModifierType_MeshDeform", value: 18, isUnsigned: true)
!250 = !DIEnumerator(name: "eModifierType_ParticleSystem", value: 19, isUnsigned: true)
!251 = !DIEnumerator(name: "eModifierType_ParticleInstance", value: 20, isUnsigned: true)
!252 = !DIEnumerator(name: "eModifierType_Explode", value: 21, isUnsigned: true)
!253 = !DIEnumerator(name: "eModifierType_Cloth", value: 22, isUnsigned: true)
!254 = !DIEnumerator(name: "eModifierType_Collision", value: 23, isUnsigned: true)
!255 = !DIEnumerator(name: "eModifierType_Bevel", value: 24, isUnsigned: true)
!256 = !DIEnumerator(name: "eModifierType_Shrinkwrap", value: 25, isUnsigned: true)
!257 = !DIEnumerator(name: "eModifierType_Fluidsim", value: 26, isUnsigned: true)
!258 = !DIEnumerator(name: "eModifierType_Mask", value: 27, isUnsigned: true)
!259 = !DIEnumerator(name: "eModifierType_SimpleDeform", value: 28, isUnsigned: true)
!260 = !DIEnumerator(name: "eModifierType_Multires", value: 29, isUnsigned: true)
!261 = !DIEnumerator(name: "eModifierType_Surface", value: 30, isUnsigned: true)
!262 = !DIEnumerator(name: "eModifierType_Smoke", value: 31, isUnsigned: true)
!263 = !DIEnumerator(name: "eModifierType_ShapeKey", value: 32, isUnsigned: true)
!264 = !DIEnumerator(name: "eModifierType_Solidify", value: 33, isUnsigned: true)
!265 = !DIEnumerator(name: "eModifierType_Screw", value: 34, isUnsigned: true)
!266 = !DIEnumerator(name: "eModifierType_Warp", value: 35, isUnsigned: true)
!267 = !DIEnumerator(name: "eModifierType_WeightVGEdit", value: 36, isUnsigned: true)
!268 = !DIEnumerator(name: "eModifierType_WeightVGMix", value: 37, isUnsigned: true)
!269 = !DIEnumerator(name: "eModifierType_WeightVGProximity", value: 38, isUnsigned: true)
!270 = !DIEnumerator(name: "eModifierType_Ocean", value: 39, isUnsigned: true)
!271 = !DIEnumerator(name: "eModifierType_DynamicPaint", value: 40, isUnsigned: true)
!272 = !DIEnumerator(name: "eModifierType_Remesh", value: 41, isUnsigned: true)
!273 = !DIEnumerator(name: "eModifierType_Skin", value: 42, isUnsigned: true)
!274 = !DIEnumerator(name: "eModifierType_LaplacianSmooth", value: 43, isUnsigned: true)
!275 = !DIEnumerator(name: "eModifierType_Triangulate", value: 44, isUnsigned: true)
!276 = !DIEnumerator(name: "eModifierType_UVWarp", value: 45, isUnsigned: true)
!277 = !DIEnumerator(name: "eModifierType_MeshCache", value: 46, isUnsigned: true)
!278 = !DIEnumerator(name: "eModifierType_LaplacianDeform", value: 47, isUnsigned: true)
!279 = !DIEnumerator(name: "eModifierType_Wireframe", value: 48, isUnsigned: true)
!280 = !DIEnumerator(name: "NUM_MODIFIER_TYPES", value: 49, isUnsigned: true)
!281 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "SculptFlags", file: !282, line: 1688, baseType: !7, size: 32, elements: !283)
!282 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!283 = !{!284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297}
!284 = !DIEnumerator(name: "SCULPT_SYMM_X", value: 1, isUnsigned: true)
!285 = !DIEnumerator(name: "SCULPT_SYMM_Y", value: 2, isUnsigned: true)
!286 = !DIEnumerator(name: "SCULPT_SYMM_Z", value: 4, isUnsigned: true)
!287 = !DIEnumerator(name: "SCULPT_LOCK_X", value: 8, isUnsigned: true)
!288 = !DIEnumerator(name: "SCULPT_LOCK_Y", value: 16, isUnsigned: true)
!289 = !DIEnumerator(name: "SCULPT_LOCK_Z", value: 32, isUnsigned: true)
!290 = !DIEnumerator(name: "SCULPT_SYMMETRY_FEATHER", value: 64, isUnsigned: true)
!291 = !DIEnumerator(name: "SCULPT_USE_OPENMP", value: 128, isUnsigned: true)
!292 = !DIEnumerator(name: "SCULPT_ONLY_DEFORM", value: 256, isUnsigned: true)
!293 = !DIEnumerator(name: "SCULPT_SHOW_DIFFUSE", value: 512, isUnsigned: true)
!294 = !DIEnumerator(name: "SCULPT_DYNTOPO_SMOOTH_SHADING", value: 1024, isUnsigned: true)
!295 = !DIEnumerator(name: "SCULPT_DYNTOPO_SUBDIVIDE", value: 4096, isUnsigned: true)
!296 = !DIEnumerator(name: "SCULPT_DYNTOPO_COLLAPSE", value: 2048, isUnsigned: true)
!297 = !DIEnumerator(name: "SCULPT_DYNTOPO_DETAIL_CONSTANT", value: 8192, isUnsigned: true)
!298 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !299, line: 341, baseType: !7, size: 32, elements: !300)
!299 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!300 = !{!301, !302}
!301 = !DIEnumerator(name: "ME_SMOOTH", value: 1, isUnsigned: true)
!302 = !DIEnumerator(name: "ME_FACE_SEL", value: 2, isUnsigned: true)
!303 = !{!304, !317, !318, !319, !320, !322, !325, !321, !326, !327, !328, !329, !330, !334, !338, !400, !402, !384, !404, !2827, !2829, !2908, !2910, !2916}
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "MFace", file: !299, line: 46, baseType: !306)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !299, line: 42, size: 160, elements: !307)
!307 = !{!308, !309, !310, !311, !312, !314, !316}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !306, file: !299, line: 43, baseType: !7, size: 32)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !306, file: !299, line: 43, baseType: !7, size: 32, offset: 32)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !306, file: !299, line: 43, baseType: !7, size: 32, offset: 64)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !306, file: !299, line: 43, baseType: !7, size: 32, offset: 96)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !306, file: !299, line: 44, baseType: !313, size: 16, offset: 128)
!313 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !306, file: !299, line: 45, baseType: !315, size: 8, offset: 144)
!315 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !306, file: !299, line: 45, baseType: !315, size: 8, offset: 152)
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!321 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_bitmap", file: !324, line: 33, baseType: !7)
!324 = !DIFile(filename: "blender/source/blender/blenlib/BLI_bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!325 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!327 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 64)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIterType", file: !174, line: 79, baseType: !173)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__begin_cb", file: !174, line: 158, baseType: !331)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!332 = !DISubroutineType(types: !333)
!333 = !{null, !318}
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__step_cb", file: !174, line: 159, baseType: !335)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = !DISubroutineType(types: !337)
!337 = !{!318, !318}
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMVert", file: !167, line: 103, baseType: !340)
!340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMVert", file: !167, line: 90, size: 448, elements: !341)
!341 = !{!342, !351, !356, !360, !361}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !340, file: !167, line: 91, baseType: !343, size: 128)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMHeader", file: !167, line: 82, baseType: !344)
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMHeader", file: !167, line: 64, size: 128, elements: !345)
!345 = !{!346, !347, !348, !349, !350}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !344, file: !167, line: 65, baseType: !318, size: 64)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !344, file: !167, line: 66, baseType: !156, size: 32, offset: 64)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "htype", scope: !344, file: !167, line: 73, baseType: !315, size: 8, offset: 96)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "hflag", scope: !344, file: !167, line: 74, baseType: !315, size: 8, offset: 104)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "api_flag", scope: !344, file: !167, line: 80, baseType: !315, size: 8, offset: 112)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !340, file: !167, line: 92, baseType: !352, size: 64, offset: 128)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64)
!353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFlagLayer", file: !167, line: 180, size: 16, elements: !354)
!354 = !{!355}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !353, file: !167, line: 181, baseType: !313, size: 16)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !340, file: !167, line: 94, baseType: !357, size: 96, offset: 192)
!357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !321, size: 96, elements: !358)
!358 = !{!359}
!359 = !DISubrange(count: 3)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !340, file: !167, line: 95, baseType: !357, size: 96, offset: 288)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !340, file: !167, line: 102, baseType: !362, size: 64, offset: 384)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEdge", file: !167, line: 110, size: 640, elements: !364)
!364 = !{!365, !366, !367, !369, !370, !393, !399}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !363, file: !167, line: 111, baseType: !343, size: 128)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !363, file: !167, line: 112, baseType: !352, size: 64, offset: 128)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !363, file: !167, line: 114, baseType: !368, size: 64, offset: 192)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !363, file: !167, line: 114, baseType: !368, size: 64, offset: 256)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !363, file: !167, line: 118, baseType: !371, size: 64, offset: 320)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMLoop", file: !167, line: 125, size: 576, elements: !373)
!373 = !{!374, !375, !376, !377, !389, !390, !391, !392}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !372, file: !167, line: 126, baseType: !343, size: 128)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !372, file: !167, line: 129, baseType: !368, size: 64, offset: 128)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !372, file: !167, line: 130, baseType: !362, size: 64, offset: 192)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !372, file: !167, line: 131, baseType: !378, size: 64, offset: 256)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFace", file: !167, line: 164, size: 448, elements: !380)
!380 = !{!381, !382, !383, !386, !387, !388}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !379, file: !167, line: 165, baseType: !343, size: 128)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !379, file: !167, line: 166, baseType: !352, size: 64, offset: 128)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !379, file: !167, line: 172, baseType: !384, size: 64, offset: 192)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!385 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMLoop", file: !167, line: 140, baseType: !372)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !379, file: !167, line: 174, baseType: !156, size: 32, offset: 256)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !379, file: !167, line: 175, baseType: !357, size: 96, offset: 288)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !379, file: !167, line: 176, baseType: !313, size: 16, offset: 384)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "radial_next", scope: !372, file: !167, line: 135, baseType: !371, size: 64, offset: 320)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "radial_prev", scope: !372, file: !167, line: 135, baseType: !371, size: 64, offset: 384)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !372, file: !167, line: 139, baseType: !371, size: 64, offset: 448)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !372, file: !167, line: 139, baseType: !371, size: 64, offset: 512)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "v1_disk_link", scope: !363, file: !167, line: 122, baseType: !394, size: 128, offset: 384)
!394 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMDiskLink", file: !167, line: 108, baseType: !395)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMDiskLink", file: !167, line: 106, size: 128, elements: !396)
!396 = !{!397, !398}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !395, file: !167, line: 107, baseType: !362, size: 64)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !395, file: !167, line: 107, baseType: !362, size: 64, offset: 64)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "v2_disk_link", scope: !363, file: !167, line: 122, baseType: !394, size: 128, offset: 512)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEdge", file: !167, line: 123, baseType: !363)
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 64)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMFace", file: !167, line: 178, baseType: !379)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !406, line: 133, baseType: !407)
!406 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !406, line: 58, size: 11008, elements: !408)
!408 = !{!409, !477, !481, !491, !494, !536, !2693, !2699, !2700, !2710, !2711, !2717, !2725, !2726, !2727, !2740, !2741, !2742, !2743, !2751, !2753, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !407, file: !406, line: 59, baseType: !410, size: 960)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !411, line: 130, baseType: !412)
!411 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !411, line: 117, size: 960, elements: !413)
!413 = !{!414, !415, !416, !418, !437, !441, !442, !443, !444, !445}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !412, file: !411, line: 118, baseType: !318, size: 64)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !412, file: !411, line: 118, baseType: !318, size: 64, offset: 64)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !412, file: !411, line: 119, baseType: !417, size: 64, offset: 128)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !412, file: !411, line: 120, baseType: !419, size: 64, offset: 192)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !411, line: 136, size: 17600, elements: !421)
!421 = !{!422, !423, !425, !428, !432, !433, !434}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !420, file: !411, line: 137, baseType: !410, size: 960)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !420, file: !411, line: 138, baseType: !424, size: 64, offset: 960)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !420, file: !411, line: 139, baseType: !426, size: 64, offset: 1024)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!427 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !411, line: 43, flags: DIFlagFwdDecl)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !420, file: !411, line: 140, baseType: !429, size: 8192, offset: 1088)
!429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 8192, elements: !430)
!430 = !{!431}
!431 = !DISubrange(count: 1024)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !420, file: !411, line: 141, baseType: !429, size: 8192, offset: 9280)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !420, file: !411, line: 148, baseType: !419, size: 64, offset: 17472)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !420, file: !411, line: 150, baseType: !435, size: 64, offset: 17536)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!436 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !411, line: 45, flags: DIFlagFwdDecl)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !412, file: !411, line: 121, baseType: !438, size: 528, offset: 256)
!438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 528, elements: !439)
!439 = !{!440}
!440 = !DISubrange(count: 66)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !412, file: !411, line: 126, baseType: !313, size: 16, offset: 784)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !412, file: !411, line: 127, baseType: !156, size: 32, offset: 800)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !412, file: !411, line: 128, baseType: !156, size: 32, offset: 832)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !412, file: !411, line: 128, baseType: !156, size: 32, offset: 864)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !412, file: !411, line: 129, baseType: !446, size: 64, offset: 896)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !411, line: 75, baseType: !448)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !411, line: 62, size: 1024, elements: !449)
!449 = !{!450, !452, !453, !454, !455, !456, !460, !461, !475, !476}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !448, file: !411, line: 63, baseType: !451, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !448, file: !411, line: 63, baseType: !451, size: 64, offset: 64)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !448, file: !411, line: 64, baseType: !315, size: 8, offset: 128)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !448, file: !411, line: 64, baseType: !315, size: 8, offset: 136)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !448, file: !411, line: 65, baseType: !313, size: 16, offset: 144)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !448, file: !411, line: 66, baseType: !457, size: 512, offset: 160)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 512, elements: !458)
!458 = !{!459}
!459 = !DISubrange(count: 64)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !448, file: !411, line: 67, baseType: !156, size: 32, offset: 672)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !448, file: !411, line: 69, baseType: !462, size: 256, offset: 704)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !411, line: 60, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !411, line: 48, size: 256, elements: !464)
!464 = !{!465, !466, !473, !474}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !463, file: !411, line: 49, baseType: !318, size: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !463, file: !411, line: 58, baseType: !467, size: 128, offset: 64)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !468, line: 71, baseType: !469)
!468 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !468, line: 69, size: 128, elements: !470)
!470 = !{!471, !472}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !469, file: !468, line: 70, baseType: !318, size: 64)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !469, file: !468, line: 70, baseType: !318, size: 64, offset: 64)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !463, file: !411, line: 59, baseType: !156, size: 32, offset: 192)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !463, file: !411, line: 59, baseType: !156, size: 32, offset: 224)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !448, file: !411, line: 70, baseType: !156, size: 32, offset: 960)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !448, file: !411, line: 74, baseType: !156, size: 32, offset: 992)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !407, file: !406, line: 60, baseType: !478, size: 64, offset: 960)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !480, line: 42, flags: DIFlagFwdDecl)
!480 = !DIFile(filename: "blender/source/blender/makesdna/DNA_key_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!481 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !407, file: !406, line: 62, baseType: !482, size: 64, offset: 1024)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !191, line: 97, size: 832, elements: !484)
!484 = !{!485, !489, !490}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !483, file: !191, line: 98, baseType: !486, size: 768)
!486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !321, size: 768, elements: !487)
!487 = !{!488, !359}
!488 = !DISubrange(count: 8)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !483, file: !191, line: 99, baseType: !156, size: 32, offset: 768)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !483, file: !191, line: 99, baseType: !156, size: 32, offset: 800)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !407, file: !406, line: 64, baseType: !492, size: 64, offset: 1088)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !480, line: 43, flags: DIFlagFwdDecl)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !407, file: !406, line: 65, baseType: !495, size: 64, offset: 1152)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !480, line: 73, size: 1792, elements: !497)
!497 = !{!498, !499, !500, !521, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !496, file: !480, line: 74, baseType: !410, size: 960)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !496, file: !480, line: 75, baseType: !478, size: 64, offset: 960)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "refkey", scope: !496, file: !480, line: 80, baseType: !501, size: 64, offset: 1024)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 64)
!502 = !DIDerivedType(tag: DW_TAG_typedef, name: "KeyBlock", file: !480, line: 70, baseType: !503)
!503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KeyBlock", file: !480, line: 45, size: 1472, elements: !504)
!504 = !{!505, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !503, file: !480, line: 46, baseType: !506, size: 64)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !503, file: !480, line: 46, baseType: !506, size: 64, offset: 64)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !503, file: !480, line: 48, baseType: !321, size: 32, offset: 128)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !503, file: !480, line: 51, baseType: !321, size: 32, offset: 160)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !503, file: !480, line: 53, baseType: !313, size: 16, offset: 192)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !503, file: !480, line: 54, baseType: !313, size: 16, offset: 208)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "relative", scope: !503, file: !480, line: 56, baseType: !313, size: 16, offset: 224)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !503, file: !480, line: 57, baseType: !313, size: 16, offset: 240)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "totelem", scope: !503, file: !480, line: 59, baseType: !156, size: 32, offset: 256)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !503, file: !480, line: 60, baseType: !156, size: 32, offset: 288)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !503, file: !480, line: 62, baseType: !318, size: 64, offset: 320)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !503, file: !480, line: 63, baseType: !457, size: 512, offset: 384)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !503, file: !480, line: 64, baseType: !457, size: 512, offset: 896)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "slidermin", scope: !503, file: !480, line: 67, baseType: !321, size: 32, offset: 1408)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "slidermax", scope: !503, file: !480, line: 68, baseType: !321, size: 32, offset: 1440)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "elemstr", scope: !496, file: !480, line: 85, baseType: !522, size: 256, offset: 1088)
!522 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 256, elements: !523)
!523 = !{!524}
!524 = !DISubrange(count: 32)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !496, file: !480, line: 86, baseType: !156, size: 32, offset: 1344)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !496, file: !480, line: 87, baseType: !156, size: 32, offset: 1376)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !496, file: !480, line: 89, baseType: !467, size: 128, offset: 1408)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !496, file: !480, line: 90, baseType: !492, size: 64, offset: 1536)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !496, file: !480, line: 92, baseType: !424, size: 64, offset: 1600)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !496, file: !480, line: 94, baseType: !313, size: 16, offset: 1664)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !496, file: !480, line: 95, baseType: !313, size: 16, offset: 1680)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "slurph", scope: !496, file: !480, line: 96, baseType: !313, size: 16, offset: 1696)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !496, file: !480, line: 97, baseType: !313, size: 16, offset: 1712)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !496, file: !480, line: 101, baseType: !321, size: 32, offset: 1728)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "uidgen", scope: !496, file: !480, line: 104, baseType: !156, size: 32, offset: 1760)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !407, file: !406, line: 66, baseType: !537, size: 64, offset: 1216)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !540, line: 93, size: 7552, elements: !541)
!540 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!541 = !{!542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !590, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !659, !660, !661, !662, !663, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2692}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !539, file: !540, line: 94, baseType: !410, size: 960)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !539, file: !540, line: 95, baseType: !478, size: 64, offset: 960)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !539, file: !540, line: 97, baseType: !313, size: 16, offset: 1024)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !539, file: !540, line: 97, baseType: !313, size: 16, offset: 1040)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !539, file: !540, line: 99, baseType: !321, size: 32, offset: 1056)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !539, file: !540, line: 99, baseType: !321, size: 32, offset: 1088)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !539, file: !540, line: 99, baseType: !321, size: 32, offset: 1120)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !539, file: !540, line: 100, baseType: !321, size: 32, offset: 1152)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !539, file: !540, line: 100, baseType: !321, size: 32, offset: 1184)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !539, file: !540, line: 100, baseType: !321, size: 32, offset: 1216)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !539, file: !540, line: 101, baseType: !321, size: 32, offset: 1248)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !539, file: !540, line: 101, baseType: !321, size: 32, offset: 1280)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !539, file: !540, line: 101, baseType: !321, size: 32, offset: 1312)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !539, file: !540, line: 102, baseType: !321, size: 32, offset: 1344)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !539, file: !540, line: 102, baseType: !321, size: 32, offset: 1376)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !539, file: !540, line: 102, baseType: !321, size: 32, offset: 1408)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !539, file: !540, line: 103, baseType: !321, size: 32, offset: 1440)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !539, file: !540, line: 103, baseType: !321, size: 32, offset: 1472)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !539, file: !540, line: 103, baseType: !321, size: 32, offset: 1504)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !539, file: !540, line: 103, baseType: !321, size: 32, offset: 1536)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !539, file: !540, line: 103, baseType: !321, size: 32, offset: 1568)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !539, file: !540, line: 104, baseType: !321, size: 32, offset: 1600)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !539, file: !540, line: 104, baseType: !321, size: 32, offset: 1632)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !539, file: !540, line: 104, baseType: !321, size: 32, offset: 1664)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !539, file: !540, line: 104, baseType: !321, size: 32, offset: 1696)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !539, file: !540, line: 104, baseType: !321, size: 32, offset: 1728)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !539, file: !540, line: 105, baseType: !321, size: 32, offset: 1760)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !539, file: !540, line: 108, baseType: !570, size: 704, offset: 1792)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !540, line: 53, size: 704, elements: !571)
!571 = !{!572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !570, file: !540, line: 54, baseType: !321, size: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !570, file: !540, line: 55, baseType: !321, size: 32, offset: 32)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !570, file: !540, line: 56, baseType: !321, size: 32, offset: 64)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !570, file: !540, line: 57, baseType: !321, size: 32, offset: 96)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !570, file: !540, line: 59, baseType: !357, size: 96, offset: 128)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !570, file: !540, line: 60, baseType: !357, size: 96, offset: 224)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !570, file: !540, line: 61, baseType: !357, size: 96, offset: 320)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !570, file: !540, line: 63, baseType: !321, size: 32, offset: 416)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !570, file: !540, line: 64, baseType: !321, size: 32, offset: 448)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !570, file: !540, line: 65, baseType: !321, size: 32, offset: 480)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !570, file: !540, line: 67, baseType: !313, size: 16, offset: 512)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !570, file: !540, line: 68, baseType: !313, size: 16, offset: 528)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !570, file: !540, line: 69, baseType: !313, size: 16, offset: 544)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !570, file: !540, line: 70, baseType: !313, size: 16, offset: 560)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !570, file: !540, line: 72, baseType: !321, size: 32, offset: 576)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !570, file: !540, line: 73, baseType: !321, size: 32, offset: 608)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !570, file: !540, line: 74, baseType: !321, size: 32, offset: 640)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !570, file: !540, line: 75, baseType: !321, size: 32, offset: 672)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !539, file: !540, line: 109, baseType: !591, size: 128, offset: 2496)
!591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !540, line: 79, size: 128, elements: !592)
!592 = !{!593, !594, !595, !596}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !591, file: !540, line: 80, baseType: !156, size: 32)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !591, file: !540, line: 81, baseType: !156, size: 32, offset: 32)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !591, file: !540, line: 82, baseType: !156, size: 32, offset: 64)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !591, file: !540, line: 83, baseType: !156, size: 32, offset: 96)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !539, file: !540, line: 111, baseType: !321, size: 32, offset: 2624)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !539, file: !540, line: 111, baseType: !321, size: 32, offset: 2656)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !539, file: !540, line: 112, baseType: !321, size: 32, offset: 2688)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !539, file: !540, line: 112, baseType: !321, size: 32, offset: 2720)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !539, file: !540, line: 113, baseType: !321, size: 32, offset: 2752)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !539, file: !540, line: 114, baseType: !321, size: 32, offset: 2784)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !539, file: !540, line: 114, baseType: !321, size: 32, offset: 2816)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !539, file: !540, line: 115, baseType: !313, size: 16, offset: 2848)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !539, file: !540, line: 115, baseType: !313, size: 16, offset: 2864)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !539, file: !540, line: 116, baseType: !313, size: 16, offset: 2880)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !539, file: !540, line: 117, baseType: !315, size: 8, offset: 2896)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !539, file: !540, line: 117, baseType: !315, size: 8, offset: 2904)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !539, file: !540, line: 119, baseType: !321, size: 32, offset: 2912)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !539, file: !540, line: 119, baseType: !321, size: 32, offset: 2944)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !539, file: !540, line: 120, baseType: !313, size: 16, offset: 2976)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !539, file: !540, line: 120, baseType: !313, size: 16, offset: 2992)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !539, file: !540, line: 121, baseType: !321, size: 32, offset: 3008)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !539, file: !540, line: 121, baseType: !321, size: 32, offset: 3040)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !539, file: !540, line: 122, baseType: !321, size: 32, offset: 3072)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !539, file: !540, line: 123, baseType: !321, size: 32, offset: 3104)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !539, file: !540, line: 124, baseType: !313, size: 16, offset: 3136)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !539, file: !540, line: 125, baseType: !313, size: 16, offset: 3152)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !539, file: !540, line: 127, baseType: !156, size: 32, offset: 3168)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !539, file: !540, line: 127, baseType: !156, size: 32, offset: 3200)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !539, file: !540, line: 128, baseType: !156, size: 32, offset: 3232)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !539, file: !540, line: 128, baseType: !156, size: 32, offset: 3264)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !539, file: !540, line: 129, baseType: !313, size: 16, offset: 3296)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !539, file: !540, line: 129, baseType: !313, size: 16, offset: 3312)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !539, file: !540, line: 129, baseType: !313, size: 16, offset: 3328)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !539, file: !540, line: 129, baseType: !313, size: 16, offset: 3344)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !539, file: !540, line: 130, baseType: !321, size: 32, offset: 3360)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !539, file: !540, line: 130, baseType: !321, size: 32, offset: 3392)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !539, file: !540, line: 130, baseType: !321, size: 32, offset: 3424)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !539, file: !540, line: 130, baseType: !321, size: 32, offset: 3456)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !539, file: !540, line: 131, baseType: !321, size: 32, offset: 3488)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !539, file: !540, line: 131, baseType: !321, size: 32, offset: 3520)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !539, file: !540, line: 131, baseType: !321, size: 32, offset: 3552)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !539, file: !540, line: 131, baseType: !321, size: 32, offset: 3584)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !539, file: !540, line: 132, baseType: !321, size: 32, offset: 3616)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !539, file: !540, line: 132, baseType: !321, size: 32, offset: 3648)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !539, file: !540, line: 133, baseType: !457, size: 512, offset: 3680)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !539, file: !540, line: 135, baseType: !321, size: 32, offset: 4192)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !539, file: !540, line: 136, baseType: !321, size: 32, offset: 4224)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !539, file: !540, line: 137, baseType: !321, size: 32, offset: 4256)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !539, file: !540, line: 138, baseType: !156, size: 32, offset: 4288)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !539, file: !540, line: 141, baseType: !315, size: 8, offset: 4320)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !539, file: !540, line: 141, baseType: !315, size: 8, offset: 4328)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !539, file: !540, line: 141, baseType: !315, size: 8, offset: 4336)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !539, file: !540, line: 141, baseType: !315, size: 8, offset: 4344)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !539, file: !540, line: 142, baseType: !313, size: 16, offset: 4352)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !539, file: !540, line: 142, baseType: !313, size: 16, offset: 4368)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !539, file: !540, line: 142, baseType: !313, size: 16, offset: 4384)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !539, file: !540, line: 145, baseType: !315, size: 8, offset: 4400)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !539, file: !540, line: 145, baseType: !315, size: 8, offset: 4408)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !539, file: !540, line: 148, baseType: !313, size: 16, offset: 4416)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !539, file: !540, line: 148, baseType: !313, size: 16, offset: 4432)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !539, file: !540, line: 149, baseType: !321, size: 32, offset: 4448)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !539, file: !540, line: 149, baseType: !321, size: 32, offset: 4480)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !539, file: !540, line: 152, baseType: !656, size: 128, offset: 4512)
!656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !321, size: 128, elements: !657)
!657 = !{!658}
!658 = !DISubrange(count: 4)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !539, file: !540, line: 153, baseType: !321, size: 32, offset: 4640)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !539, file: !540, line: 154, baseType: !321, size: 32, offset: 4672)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !539, file: !540, line: 157, baseType: !313, size: 16, offset: 4704)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !539, file: !540, line: 157, baseType: !313, size: 16, offset: 4720)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !539, file: !540, line: 160, baseType: !664, size: 64, offset: 4736)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !666, line: 113, size: 6208, elements: !667)
!666 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!667 = !{!668, !669, !670, !671, !672, !673, !677}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !665, file: !666, line: 114, baseType: !313, size: 16)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !665, file: !666, line: 114, baseType: !313, size: 16, offset: 16)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !665, file: !666, line: 115, baseType: !315, size: 8, offset: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !665, file: !666, line: 115, baseType: !315, size: 8, offset: 40)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !665, file: !666, line: 116, baseType: !315, size: 8, offset: 48)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !665, file: !666, line: 117, baseType: !674, size: 8, offset: 56)
!674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 8, elements: !675)
!675 = !{!676}
!676 = !DISubrange(count: 1)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !665, file: !666, line: 119, baseType: !678, size: 6144, offset: 64)
!678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !679, size: 6144, elements: !523)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !666, line: 109, baseType: !680)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !666, line: 106, size: 192, elements: !681)
!681 = !{!682, !683, !684, !685, !686, !687}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !680, file: !666, line: 107, baseType: !321, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !680, file: !666, line: 107, baseType: !321, size: 32, offset: 32)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !680, file: !666, line: 107, baseType: !321, size: 32, offset: 64)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !680, file: !666, line: 107, baseType: !321, size: 32, offset: 96)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !680, file: !666, line: 107, baseType: !321, size: 32, offset: 128)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !680, file: !666, line: 108, baseType: !156, size: 32, offset: 160)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !539, file: !540, line: 161, baseType: !664, size: 64, offset: 4800)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !539, file: !540, line: 162, baseType: !315, size: 8, offset: 4864)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !539, file: !540, line: 162, baseType: !315, size: 8, offset: 4872)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !539, file: !540, line: 163, baseType: !315, size: 8, offset: 4880)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !539, file: !540, line: 163, baseType: !315, size: 8, offset: 4888)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !539, file: !540, line: 164, baseType: !313, size: 16, offset: 4896)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !539, file: !540, line: 164, baseType: !313, size: 16, offset: 4912)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !539, file: !540, line: 165, baseType: !321, size: 32, offset: 4928)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !539, file: !540, line: 165, baseType: !321, size: 32, offset: 4960)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !539, file: !540, line: 167, baseType: !698, size: 1152, offset: 4992)
!698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !699, size: 1152, elements: !2650)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !666, line: 57, size: 2496, elements: !701)
!701 = !{!702, !703, !704, !705, !706, !2449, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !700, file: !666, line: 59, baseType: !313, size: 16)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !700, file: !666, line: 59, baseType: !313, size: 16, offset: 16)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !700, file: !666, line: 59, baseType: !313, size: 16, offset: 32)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !700, file: !666, line: 59, baseType: !313, size: 16, offset: 48)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !700, file: !666, line: 60, baseType: !707, size: 64, offset: 64)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !191, line: 115, size: 11392, elements: !709)
!709 = !{!710, !711, !712, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1863, !1864, !1904, !1905, !1906, !1907, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2018, !2021, !2025, !2026, !2027, !2028, !2029, !2032, !2035, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2411, !2414, !2417, !2418, !2437, !2438}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !708, file: !191, line: 116, baseType: !410, size: 960)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !708, file: !191, line: 117, baseType: !478, size: 64, offset: 960)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !708, file: !191, line: 119, baseType: !713, size: 64, offset: 1024)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !715, line: 155, size: 1856, elements: !716)
!715 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_paint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!716 = !{!717, !1634, !1642, !1651, !1657, !1658, !1659, !1661, !1662, !1663, !1671, !1803, !1804, !1805, !1806, !1810, !1813, !1814, !1815, !1816, !1817, !1819, !1820, !1821, !1822, !1823, !1826, !1827, !1830, !1833, !1834, !1835, !1836}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "multires", scope: !714, file: !715, line: 157, baseType: !718, size: 64)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MultiresModifierData", file: !155, line: 717, size: 960, elements: !720)
!720 = !{!721, !1627, !1628, !1629, !1630, !1631, !1632, !1633}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !719, file: !155, line: 718, baseType: !722, size: 896)
!722 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierData", file: !155, line: 110, baseType: !723)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierData", file: !155, line: 99, size: 896, elements: !724)
!724 = !{!725, !727, !728, !729, !730, !731, !732, !733, !1626}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !723, file: !155, line: 100, baseType: !726, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !723, file: !155, line: 100, baseType: !726, size: 64, offset: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !723, file: !155, line: 102, baseType: !156, size: 32, offset: 128)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !723, file: !155, line: 102, baseType: !156, size: 32, offset: 160)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "stackindex", scope: !723, file: !155, line: 103, baseType: !156, size: 32, offset: 192)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !723, file: !155, line: 103, baseType: !156, size: 32, offset: 224)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !723, file: !155, line: 104, baseType: !457, size: 512, offset: 256)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !723, file: !155, line: 107, baseType: !734, size: 64, offset: 768)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !282, line: 1216, size: 39680, elements: !736)
!736 = !{!737, !738, !739, !740, !743, !744, !745, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !771, !774, !1238, !1241, !1492, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1514, !1515, !1516, !1517, !1518, !1526, !1593, !1600, !1603, !1610, !1613, !1619, !1620, !1621, !1622, !1623}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !735, file: !282, line: 1217, baseType: !410, size: 960)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !735, file: !282, line: 1218, baseType: !478, size: 64, offset: 960)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !735, file: !282, line: 1220, baseType: !707, size: 64, offset: 1024)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !735, file: !282, line: 1221, baseType: !741, size: 64, offset: 1088)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !282, line: 52, flags: DIFlagFwdDecl)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !735, file: !282, line: 1223, baseType: !734, size: 64, offset: 1152)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !735, file: !282, line: 1225, baseType: !467, size: 128, offset: 1216)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !735, file: !282, line: 1226, baseType: !746, size: 64, offset: 1344)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !282, line: 69, size: 320, elements: !748)
!748 = !{!749, !750, !751, !752, !753, !754, !755, !756}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !747, file: !282, line: 70, baseType: !746, size: 64)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !747, file: !282, line: 70, baseType: !746, size: 64, offset: 64)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !747, file: !282, line: 71, baseType: !7, size: 32, offset: 128)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !747, file: !282, line: 71, baseType: !7, size: 32, offset: 160)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !747, file: !282, line: 72, baseType: !156, size: 32, offset: 192)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !747, file: !282, line: 73, baseType: !313, size: 16, offset: 224)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !747, file: !282, line: 73, baseType: !313, size: 16, offset: 240)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !747, file: !282, line: 74, baseType: !707, size: 64, offset: 256)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !735, file: !282, line: 1227, baseType: !707, size: 64, offset: 1408)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !735, file: !282, line: 1229, baseType: !357, size: 96, offset: 1472)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !735, file: !282, line: 1230, baseType: !357, size: 96, offset: 1568)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !735, file: !282, line: 1231, baseType: !357, size: 96, offset: 1664)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !735, file: !282, line: 1231, baseType: !357, size: 96, offset: 1760)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !735, file: !282, line: 1233, baseType: !7, size: 32, offset: 1856)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !735, file: !282, line: 1234, baseType: !156, size: 32, offset: 1888)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !735, file: !282, line: 1235, baseType: !7, size: 32, offset: 1920)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !735, file: !282, line: 1237, baseType: !313, size: 16, offset: 1952)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !735, file: !282, line: 1239, baseType: !315, size: 8, offset: 1968)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !735, file: !282, line: 1240, baseType: !674, size: 8, offset: 1976)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !735, file: !282, line: 1242, baseType: !769, size: 64, offset: 1984)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !540, line: 47, flags: DIFlagFwdDecl)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !735, file: !282, line: 1244, baseType: !772, size: 64, offset: 2048)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !282, line: 59, flags: DIFlagFwdDecl)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !735, file: !282, line: 1246, baseType: !775, size: 64, offset: 2112)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !282, line: 1067, size: 5184, elements: !777)
!777 = !{!778, !1056, !1057, !1072, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1094, !1110, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1221}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !776, file: !282, line: 1068, baseType: !779, size: 64)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !282, line: 934, baseType: !781)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !282, line: 925, size: 576, elements: !782)
!782 = !{!783, !1039, !1040, !1041, !1042, !1043, !1055}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !781, file: !282, line: 926, baseType: !784, size: 320)
!784 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !282, line: 830, baseType: !785)
!785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !282, line: 813, size: 320, elements: !786)
!786 = !{!787, !1024, !1033, !1034, !1036, !1037, !1038}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !785, file: !282, line: 814, baseType: !788, size: 64)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !790, line: 54, size: 16448, elements: !791)
!790 = !DIFile(filename: "blender/source/blender/makesdna/DNA_brush_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!791 = !{!792, !793, !883, !930, !931, !932, !933, !936, !939, !940, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !789, file: !790, line: 55, baseType: !410, size: 960)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !789, file: !790, line: 57, baseType: !794, size: 192, offset: 960)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BrushClone", file: !790, line: 48, size: 192, elements: !795)
!795 = !{!796, !879, !881, !882}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !794, file: !790, line: 49, baseType: !797, size: 64)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !799, line: 77, size: 15424, elements: !800)
!799 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!800 = !{!801, !802, !803, !806, !809, !812, !815, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !868, !869, !873}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !798, file: !799, line: 78, baseType: !410, size: 960)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !798, file: !799, line: 80, baseType: !429, size: 8192, offset: 960)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !798, file: !799, line: 82, baseType: !804, size: 64, offset: 9152)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !799, line: 43, flags: DIFlagFwdDecl)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !798, file: !799, line: 83, baseType: !807, size: 64, offset: 9216)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !411, line: 46, flags: DIFlagFwdDecl)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !798, file: !799, line: 86, baseType: !810, size: 64, offset: 9280)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !799, line: 41, flags: DIFlagFwdDecl)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !798, file: !799, line: 87, baseType: !813, size: 64, offset: 9344)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !799, line: 44, flags: DIFlagFwdDecl)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !798, file: !799, line: 89, baseType: !816, size: 512, offset: 9408)
!816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !813, size: 512, elements: !817)
!817 = !{!488}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !798, file: !799, line: 90, baseType: !313, size: 16, offset: 9920)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !798, file: !799, line: 90, baseType: !313, size: 16, offset: 9936)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !798, file: !799, line: 92, baseType: !313, size: 16, offset: 9952)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !798, file: !799, line: 92, baseType: !313, size: 16, offset: 9968)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !798, file: !799, line: 93, baseType: !313, size: 16, offset: 9984)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !798, file: !799, line: 93, baseType: !313, size: 16, offset: 10000)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !798, file: !799, line: 94, baseType: !156, size: 32, offset: 10016)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !798, file: !799, line: 97, baseType: !313, size: 16, offset: 10048)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !798, file: !799, line: 97, baseType: !313, size: 16, offset: 10064)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !798, file: !799, line: 98, baseType: !313, size: 16, offset: 10080)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !798, file: !799, line: 98, baseType: !313, size: 16, offset: 10096)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !798, file: !799, line: 99, baseType: !313, size: 16, offset: 10112)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !798, file: !799, line: 99, baseType: !313, size: 16, offset: 10128)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !798, file: !799, line: 100, baseType: !7, size: 32, offset: 10144)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !798, file: !799, line: 101, baseType: !317, size: 64, offset: 10176)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !798, file: !799, line: 103, baseType: !435, size: 64, offset: 10240)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !798, file: !799, line: 104, baseType: !835, size: 64, offset: 10304)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !411, line: 159, size: 448, elements: !837)
!837 = !{!838, !842, !843, !845, !846, !848}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !836, file: !411, line: 161, baseType: !839, size: 64)
!839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !840)
!840 = !{!841}
!841 = !DISubrange(count: 2)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !836, file: !411, line: 162, baseType: !839, size: 64, offset: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !836, file: !411, line: 163, baseType: !844, size: 32, offset: 128)
!844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !313, size: 32, elements: !840)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !836, file: !411, line: 164, baseType: !844, size: 32, offset: 160)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !836, file: !411, line: 165, baseType: !847, size: 128, offset: 192)
!847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 128, elements: !840)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !836, file: !411, line: 166, baseType: !849, size: 128, offset: 320)
!849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 128, elements: !840)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !798, file: !799, line: 107, baseType: !321, size: 32, offset: 10368)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !798, file: !799, line: 108, baseType: !156, size: 32, offset: 10400)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !798, file: !799, line: 109, baseType: !313, size: 16, offset: 10432)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !798, file: !799, line: 110, baseType: !313, size: 16, offset: 10448)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !798, file: !799, line: 113, baseType: !156, size: 32, offset: 10464)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !798, file: !799, line: 113, baseType: !156, size: 32, offset: 10496)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !798, file: !799, line: 114, baseType: !315, size: 8, offset: 10528)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !798, file: !799, line: 114, baseType: !315, size: 8, offset: 10536)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !798, file: !799, line: 115, baseType: !313, size: 16, offset: 10544)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !798, file: !799, line: 116, baseType: !656, size: 128, offset: 10560)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !798, file: !799, line: 119, baseType: !321, size: 32, offset: 10688)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !798, file: !799, line: 119, baseType: !321, size: 32, offset: 10720)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !798, file: !799, line: 122, baseType: !863, size: 512, offset: 10752)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !864, line: 182, baseType: !865)
!864 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !864, line: 180, size: 512, elements: !866)
!866 = !{!867}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !865, file: !864, line: 181, baseType: !457, size: 512)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !798, file: !799, line: 123, baseType: !315, size: 8, offset: 11264)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !798, file: !799, line: 125, baseType: !870, size: 56, offset: 11272)
!870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 56, elements: !871)
!871 = !{!872}
!872 = !DISubrange(count: 7)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !798, file: !799, line: 126, baseType: !874, size: 4096, offset: 11328)
!874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !875, size: 4096, elements: !817)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !799, line: 69, baseType: !876)
!876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !799, line: 67, size: 512, elements: !877)
!877 = !{!878}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !876, file: !799, line: 68, baseType: !457, size: 512)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !794, file: !790, line: 50, baseType: !880, size: 64, offset: 64)
!880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !321, size: 64, elements: !840)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !794, file: !790, line: 51, baseType: !321, size: 32, offset: 128)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !794, file: !790, line: 51, baseType: !321, size: 32, offset: 160)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !789, file: !790, line: 58, baseType: !884, size: 64, offset: 1152)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !864, line: 72, size: 3072, elements: !886)
!886 = !{!887, !888, !889, !890, !891, !900, !901, !926, !927, !928, !929}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !885, file: !864, line: 73, baseType: !156, size: 32)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !885, file: !864, line: 73, baseType: !156, size: 32, offset: 32)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !885, file: !864, line: 74, baseType: !156, size: 32, offset: 64)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !885, file: !864, line: 75, baseType: !156, size: 32, offset: 96)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !885, file: !864, line: 77, baseType: !892, size: 128, offset: 128)
!892 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !893, line: 95, baseType: !894)
!893 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !893, line: 92, size: 128, elements: !895)
!895 = !{!896, !897, !898, !899}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !894, file: !893, line: 93, baseType: !321, size: 32)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !894, file: !893, line: 93, baseType: !321, size: 32, offset: 32)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !894, file: !893, line: 94, baseType: !321, size: 32, offset: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !894, file: !893, line: 94, baseType: !321, size: 32, offset: 96)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !885, file: !864, line: 77, baseType: !892, size: 128, offset: 256)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !885, file: !864, line: 79, baseType: !902, size: 2304, offset: 384)
!902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !903, size: 2304, elements: !657)
!903 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !864, line: 67, baseType: !904)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !864, line: 55, size: 576, elements: !905)
!905 = !{!906, !907, !908, !909, !910, !911, !912, !913, !922, !923, !924, !925}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !904, file: !864, line: 56, baseType: !313, size: 16)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !904, file: !864, line: 56, baseType: !313, size: 16, offset: 16)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !904, file: !864, line: 58, baseType: !321, size: 32, offset: 32)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !904, file: !864, line: 59, baseType: !321, size: 32, offset: 64)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !904, file: !864, line: 59, baseType: !321, size: 32, offset: 96)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !904, file: !864, line: 60, baseType: !880, size: 64, offset: 128)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !904, file: !864, line: 60, baseType: !880, size: 64, offset: 192)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !904, file: !864, line: 61, baseType: !914, size: 64, offset: 256)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !864, line: 47, baseType: !916)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !864, line: 44, size: 96, elements: !917)
!917 = !{!918, !919, !920, !921}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !916, file: !864, line: 45, baseType: !321, size: 32)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !916, file: !864, line: 45, baseType: !321, size: 32, offset: 32)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !916, file: !864, line: 46, baseType: !313, size: 16, offset: 64)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !916, file: !864, line: 46, baseType: !313, size: 16, offset: 80)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !904, file: !864, line: 62, baseType: !914, size: 64, offset: 320)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !904, file: !864, line: 64, baseType: !914, size: 64, offset: 384)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !904, file: !864, line: 65, baseType: !880, size: 64, offset: 448)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !904, file: !864, line: 66, baseType: !880, size: 64, offset: 512)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !885, file: !864, line: 80, baseType: !357, size: 96, offset: 2688)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !885, file: !864, line: 80, baseType: !357, size: 96, offset: 2784)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !885, file: !864, line: 81, baseType: !357, size: 96, offset: 2880)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !885, file: !864, line: 83, baseType: !357, size: 96, offset: 2976)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !789, file: !790, line: 59, baseType: !700, size: 2496, offset: 1216)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "mask_mtex", scope: !789, file: !790, line: 60, baseType: !700, size: 2496, offset: 3712)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "toggle_brush", scope: !789, file: !790, line: 62, baseType: !788, size: 64, offset: 6208)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "icon_imbuf", scope: !789, file: !790, line: 64, baseType: !934, size: 64, offset: 6272)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !864, line: 136, flags: DIFlagFwdDecl)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !789, file: !790, line: 65, baseType: !937, size: 64, offset: 6336)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "PreviewImage", file: !411, line: 167, baseType: !836)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !789, file: !790, line: 66, baseType: !664, size: 64, offset: 6400)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "paint_curve", scope: !789, file: !790, line: 67, baseType: !941, size: 64, offset: 6464)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurve", file: !790, line: 166, size: 1088, elements: !943)
!943 = !{!944, !945, !975, !976}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !942, file: !790, line: 168, baseType: !410, size: 960)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !942, file: !790, line: 169, baseType: !946, size: 64, offset: 960)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintCurvePoint", file: !790, line: 164, baseType: !948)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurvePoint", file: !790, line: 160, size: 608, elements: !949)
!949 = !{!950, !974}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "bez", scope: !948, file: !790, line: 162, baseType: !951, size: 576)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !952, line: 133, baseType: !953)
!952 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !952, line: 117, size: 576, elements: !954)
!954 = !{!955, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !953, file: !952, line: 118, baseType: !956, size: 288)
!956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !321, size: 288, elements: !957)
!957 = !{!359, !359}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !953, file: !952, line: 119, baseType: !321, size: 32, offset: 288)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !953, file: !952, line: 119, baseType: !321, size: 32, offset: 320)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !953, file: !952, line: 119, baseType: !321, size: 32, offset: 352)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !953, file: !952, line: 121, baseType: !315, size: 8, offset: 384)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !953, file: !952, line: 123, baseType: !315, size: 8, offset: 392)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !953, file: !952, line: 123, baseType: !315, size: 8, offset: 400)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !953, file: !952, line: 124, baseType: !315, size: 8, offset: 408)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !953, file: !952, line: 124, baseType: !315, size: 8, offset: 416)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !953, file: !952, line: 124, baseType: !315, size: 8, offset: 424)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !953, file: !952, line: 126, baseType: !315, size: 8, offset: 432)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !953, file: !952, line: 128, baseType: !315, size: 8, offset: 440)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !953, file: !952, line: 129, baseType: !321, size: 32, offset: 448)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !953, file: !952, line: 130, baseType: !321, size: 32, offset: 480)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !953, file: !952, line: 130, baseType: !321, size: 32, offset: 512)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !953, file: !952, line: 132, baseType: !973, size: 32, offset: 544)
!973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 32, elements: !657)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "pressure", scope: !948, file: !790, line: 163, baseType: !321, size: 32, offset: 576)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "tot_points", scope: !942, file: !790, line: 170, baseType: !156, size: 32, offset: 1024)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "add_index", scope: !942, file: !790, line: 171, baseType: !156, size: 32, offset: 1056)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "icon_filepath", scope: !789, file: !790, line: 69, baseType: !429, size: 8192, offset: 6528)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "normal_weight", scope: !789, file: !790, line: 71, baseType: !321, size: 32, offset: 14720)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !789, file: !790, line: 73, baseType: !313, size: 16, offset: 14752)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "ob_mode", scope: !789, file: !790, line: 74, baseType: !313, size: 16, offset: 14768)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !789, file: !790, line: 75, baseType: !321, size: 32, offset: 14784)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !789, file: !790, line: 76, baseType: !156, size: 32, offset: 14816)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !789, file: !790, line: 77, baseType: !156, size: 32, offset: 14848)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "mask_pressure", scope: !789, file: !790, line: 78, baseType: !156, size: 32, offset: 14880)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "jitter", scope: !789, file: !790, line: 79, baseType: !321, size: 32, offset: 14912)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "jitter_absolute", scope: !789, file: !790, line: 80, baseType: !156, size: 32, offset: 14944)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_flags", scope: !789, file: !790, line: 81, baseType: !156, size: 32, offset: 14976)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !789, file: !790, line: 82, baseType: !156, size: 32, offset: 15008)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_radius", scope: !789, file: !790, line: 83, baseType: !156, size: 32, offset: 15040)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_factor", scope: !789, file: !790, line: 84, baseType: !321, size: 32, offset: 15072)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !789, file: !790, line: 85, baseType: !321, size: 32, offset: 15104)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !789, file: !790, line: 87, baseType: !357, size: 96, offset: 15136)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !789, file: !790, line: 88, baseType: !321, size: 32, offset: 15232)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !789, file: !790, line: 90, baseType: !357, size: 96, offset: 15264)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_plane", scope: !789, file: !790, line: 92, baseType: !156, size: 32, offset: 15360)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "plane_offset", scope: !789, file: !790, line: 94, baseType: !321, size: 32, offset: 15392)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !789, file: !790, line: 96, baseType: !321, size: 32, offset: 15424)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_spacing", scope: !789, file: !790, line: 97, baseType: !156, size: 32, offset: 15456)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_stroke_mode", scope: !789, file: !790, line: 98, baseType: !156, size: 32, offset: 15488)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_fill_mode", scope: !789, file: !790, line: 99, baseType: !156, size: 32, offset: 15520)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_tool", scope: !789, file: !790, line: 101, baseType: !315, size: 8, offset: 15552)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "vertexpaint_tool", scope: !789, file: !790, line: 102, baseType: !315, size: 8, offset: 15560)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "imagepaint_tool", scope: !789, file: !790, line: 103, baseType: !315, size: 8, offset: 15568)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tool", scope: !789, file: !790, line: 104, baseType: !315, size: 8, offset: 15576)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "autosmooth_factor", scope: !789, file: !790, line: 106, baseType: !321, size: 32, offset: 15584)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "crease_pinch_factor", scope: !789, file: !790, line: 108, baseType: !321, size: 32, offset: 15616)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "plane_trim", scope: !789, file: !790, line: 110, baseType: !321, size: 32, offset: 15648)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !789, file: !790, line: 111, baseType: !321, size: 32, offset: 15680)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "texture_sample_bias", scope: !789, file: !790, line: 113, baseType: !321, size: 32, offset: 15712)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "texture_overlay_alpha", scope: !789, file: !790, line: 116, baseType: !156, size: 32, offset: 15744)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "mask_overlay_alpha", scope: !789, file: !790, line: 117, baseType: !156, size: 32, offset: 15776)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_overlay_alpha", scope: !789, file: !790, line: 118, baseType: !156, size: 32, offset: 15808)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !789, file: !790, line: 120, baseType: !321, size: 32, offset: 15840)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_threshold", scope: !789, file: !790, line: 123, baseType: !321, size: 32, offset: 15872)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "blur_kernel_radius", scope: !789, file: !790, line: 124, baseType: !156, size: 32, offset: 15904)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "blur_mode", scope: !789, file: !790, line: 125, baseType: !156, size: 32, offset: 15936)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "fill_threshold", scope: !789, file: !790, line: 128, baseType: !321, size: 32, offset: 15968)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "add_col", scope: !789, file: !790, line: 130, baseType: !357, size: 96, offset: 16000)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "sub_col", scope: !789, file: !790, line: 131, baseType: !357, size: 96, offset: 16096)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_pos", scope: !789, file: !790, line: 133, baseType: !880, size: 64, offset: 16192)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_dimension", scope: !789, file: !790, line: 134, baseType: !880, size: 64, offset: 16256)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_pos", scope: !789, file: !790, line: 136, baseType: !880, size: 64, offset: 16320)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_dimension", scope: !789, file: !790, line: 137, baseType: !880, size: 64, offset: 16384)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !785, file: !282, line: 815, baseType: !1025, size: 64, offset: 64)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !790, line: 148, size: 1280, elements: !1027)
!1027 = !{!1028, !1029, !1030, !1031, !1032}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1026, file: !790, line: 150, baseType: !410, size: 960)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !1026, file: !790, line: 153, baseType: !467, size: 128, offset: 960)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "deleted", scope: !1026, file: !790, line: 154, baseType: !467, size: 128, offset: 1088)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "active_color", scope: !1026, file: !790, line: 156, baseType: !156, size: 32, offset: 1216)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1026, file: !790, line: 157, baseType: !156, size: 32, offset: 1248)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !785, file: !282, line: 818, baseType: !318, size: 64, offset: 128)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !785, file: !282, line: 819, baseType: !1035, size: 32, offset: 192)
!1035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !327, size: 32, elements: !657)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !785, file: !282, line: 822, baseType: !156, size: 32, offset: 224)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !785, file: !282, line: 826, baseType: !156, size: 32, offset: 256)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !785, file: !282, line: 829, baseType: !156, size: 32, offset: 288)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !781, file: !282, line: 928, baseType: !313, size: 16, offset: 320)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !781, file: !282, line: 928, baseType: !313, size: 16, offset: 336)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !781, file: !282, line: 929, baseType: !156, size: 32, offset: 352)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !781, file: !282, line: 930, baseType: !317, size: 64, offset: 384)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !781, file: !282, line: 931, baseType: !1044, size: 64, offset: 448)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !299, line: 59, size: 128, elements: !1046)
!1046 = !{!1047, !1053, !1054}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !1045, file: !299, line: 60, baseType: !1048, size: 64)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !299, line: 54, size: 64, elements: !1050)
!1050 = !{!1051, !1052}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !1049, file: !299, line: 55, baseType: !156, size: 32)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1049, file: !299, line: 56, baseType: !321, size: 32, offset: 32)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !1045, file: !299, line: 61, baseType: !156, size: 32, offset: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1045, file: !299, line: 62, baseType: !156, size: 32, offset: 96)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !781, file: !282, line: 933, baseType: !318, size: 64, offset: 512)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !776, file: !282, line: 1069, baseType: !779, size: 64, offset: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !776, file: !282, line: 1070, baseType: !1058, size: 64, offset: 128)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !282, line: 916, baseType: !1060)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !282, line: 891, size: 704, elements: !1061)
!1061 = !{!1062, !1063, !1064, !1066, !1067, !1068, !1069, !1070, !1071}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1060, file: !282, line: 892, baseType: !784, size: 320)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1060, file: !282, line: 896, baseType: !156, size: 32, offset: 320)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1060, file: !282, line: 900, baseType: !1065, size: 96, offset: 352)
!1065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 96, elements: !358)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1060, file: !282, line: 903, baseType: !321, size: 32, offset: 448)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1060, file: !282, line: 906, baseType: !156, size: 32, offset: 480)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1060, file: !282, line: 909, baseType: !321, size: 32, offset: 512)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1060, file: !282, line: 912, baseType: !321, size: 32, offset: 544)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1060, file: !282, line: 914, baseType: !707, size: 64, offset: 576)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1060, file: !282, line: 915, baseType: !318, size: 64, offset: 640)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !776, file: !282, line: 1071, baseType: !1073, size: 64, offset: 192)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !282, line: 920, baseType: !1075)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !282, line: 918, size: 320, elements: !1076)
!1076 = !{!1077}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1075, file: !282, line: 919, baseType: !784, size: 320)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !776, file: !282, line: 1075, baseType: !321, size: 32, offset: 256)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !776, file: !282, line: 1077, baseType: !321, size: 32, offset: 288)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !776, file: !282, line: 1078, baseType: !321, size: 32, offset: 320)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !776, file: !282, line: 1079, baseType: !313, size: 16, offset: 352)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !776, file: !282, line: 1082, baseType: !313, size: 16, offset: 368)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !776, file: !282, line: 1085, baseType: !315, size: 8, offset: 384)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !776, file: !282, line: 1086, baseType: !315, size: 8, offset: 392)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !776, file: !282, line: 1087, baseType: !315, size: 8, offset: 400)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !776, file: !282, line: 1088, baseType: !315, size: 8, offset: 408)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !776, file: !282, line: 1090, baseType: !321, size: 32, offset: 416)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !776, file: !282, line: 1093, baseType: !313, size: 16, offset: 448)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !776, file: !282, line: 1096, baseType: !315, size: 8, offset: 464)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !776, file: !282, line: 1098, baseType: !1091, size: 40, offset: 472)
!1091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 40, elements: !1092)
!1092 = !{!1093}
!1093 = !DISubrange(count: 5)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !776, file: !282, line: 1101, baseType: !1095, size: 832, offset: 512)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !282, line: 836, size: 832, elements: !1096)
!1096 = !{!1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1095, file: !282, line: 837, baseType: !784, size: 320)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1095, file: !282, line: 839, baseType: !313, size: 16, offset: 320)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1095, file: !282, line: 839, baseType: !313, size: 16, offset: 336)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1095, file: !282, line: 842, baseType: !313, size: 16, offset: 352)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1095, file: !282, line: 842, baseType: !313, size: 16, offset: 368)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1095, file: !282, line: 843, baseType: !844, size: 32, offset: 384)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1095, file: !282, line: 845, baseType: !156, size: 32, offset: 416)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1095, file: !282, line: 847, baseType: !318, size: 64, offset: 448)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1095, file: !282, line: 848, baseType: !797, size: 64, offset: 512)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1095, file: !282, line: 849, baseType: !797, size: 64, offset: 576)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1095, file: !282, line: 850, baseType: !797, size: 64, offset: 640)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1095, file: !282, line: 851, baseType: !357, size: 96, offset: 704)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1095, file: !282, line: 852, baseType: !321, size: 32, offset: 800)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !776, file: !282, line: 1104, baseType: !1111, size: 1344, offset: 1344)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !282, line: 867, size: 1344, elements: !1112)
!1112 = !{!1113, !1114, !1115, !1116, !1117, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1111, file: !282, line: 868, baseType: !313, size: 16)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1111, file: !282, line: 869, baseType: !313, size: 16, offset: 16)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1111, file: !282, line: 870, baseType: !313, size: 16, offset: 32)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1111, file: !282, line: 871, baseType: !313, size: 16, offset: 48)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1111, file: !282, line: 873, baseType: !1118, size: 896, offset: 64)
!1118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1119, size: 896, elements: !871)
!1119 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !282, line: 864, baseType: !1120)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !282, line: 859, size: 128, elements: !1121)
!1121 = !{!1122, !1123, !1124, !1125, !1126, !1127}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1120, file: !282, line: 860, baseType: !313, size: 16)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1120, file: !282, line: 861, baseType: !313, size: 16, offset: 16)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1120, file: !282, line: 861, baseType: !313, size: 16, offset: 32)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1120, file: !282, line: 861, baseType: !313, size: 16, offset: 48)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1120, file: !282, line: 862, baseType: !156, size: 32, offset: 64)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1120, file: !282, line: 863, baseType: !321, size: 32, offset: 96)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1111, file: !282, line: 874, baseType: !318, size: 64, offset: 960)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1111, file: !282, line: 876, baseType: !321, size: 32, offset: 1024)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1111, file: !282, line: 876, baseType: !321, size: 32, offset: 1056)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1111, file: !282, line: 878, baseType: !156, size: 32, offset: 1088)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1111, file: !282, line: 879, baseType: !156, size: 32, offset: 1120)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1111, file: !282, line: 881, baseType: !156, size: 32, offset: 1152)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1111, file: !282, line: 881, baseType: !156, size: 32, offset: 1184)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1111, file: !282, line: 883, baseType: !734, size: 64, offset: 1216)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1111, file: !282, line: 884, baseType: !707, size: 64, offset: 1280)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !776, file: !282, line: 1107, baseType: !321, size: 32, offset: 2688)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !776, file: !282, line: 1110, baseType: !321, size: 32, offset: 2720)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !776, file: !282, line: 1113, baseType: !313, size: 16, offset: 2752)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !776, file: !282, line: 1113, baseType: !313, size: 16, offset: 2768)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !776, file: !282, line: 1116, baseType: !315, size: 8, offset: 2784)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !776, file: !282, line: 1117, baseType: !674, size: 8, offset: 2792)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !776, file: !282, line: 1120, baseType: !313, size: 16, offset: 2800)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !776, file: !282, line: 1121, baseType: !321, size: 32, offset: 2816)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !776, file: !282, line: 1122, baseType: !321, size: 32, offset: 2848)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !776, file: !282, line: 1123, baseType: !321, size: 32, offset: 2880)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !776, file: !282, line: 1124, baseType: !321, size: 32, offset: 2912)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !776, file: !282, line: 1125, baseType: !321, size: 32, offset: 2944)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !776, file: !282, line: 1126, baseType: !321, size: 32, offset: 2976)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !776, file: !282, line: 1127, baseType: !321, size: 32, offset: 3008)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !776, file: !282, line: 1128, baseType: !321, size: 32, offset: 3040)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !776, file: !282, line: 1129, baseType: !321, size: 32, offset: 3072)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !776, file: !282, line: 1130, baseType: !321, size: 32, offset: 3104)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !776, file: !282, line: 1131, baseType: !313, size: 16, offset: 3136)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !776, file: !282, line: 1132, baseType: !315, size: 8, offset: 3152)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !776, file: !282, line: 1133, baseType: !315, size: 8, offset: 3160)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !776, file: !282, line: 1134, baseType: !1158, size: 24, offset: 3168)
!1158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 24, elements: !358)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !776, file: !282, line: 1135, baseType: !315, size: 8, offset: 3192)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !776, file: !282, line: 1138, baseType: !707, size: 64, offset: 3200)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !776, file: !282, line: 1139, baseType: !315, size: 8, offset: 3264)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !776, file: !282, line: 1140, baseType: !315, size: 8, offset: 3272)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !776, file: !282, line: 1141, baseType: !315, size: 8, offset: 3280)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !776, file: !282, line: 1142, baseType: !315, size: 8, offset: 3288)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !776, file: !282, line: 1143, baseType: !315, size: 8, offset: 3296)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !776, file: !282, line: 1144, baseType: !1167, size: 64, offset: 3304)
!1167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 64, elements: !817)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !776, file: !282, line: 1145, baseType: !1167, size: 64, offset: 3368)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !776, file: !282, line: 1148, baseType: !315, size: 8, offset: 3432)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !776, file: !282, line: 1149, baseType: !315, size: 8, offset: 3440)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !776, file: !282, line: 1152, baseType: !315, size: 8, offset: 3448)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !776, file: !282, line: 1152, baseType: !315, size: 8, offset: 3456)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !776, file: !282, line: 1153, baseType: !315, size: 8, offset: 3464)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !776, file: !282, line: 1154, baseType: !313, size: 16, offset: 3472)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !776, file: !282, line: 1154, baseType: !313, size: 16, offset: 3488)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !776, file: !282, line: 1155, baseType: !313, size: 16, offset: 3504)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !776, file: !282, line: 1155, baseType: !313, size: 16, offset: 3520)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !776, file: !282, line: 1156, baseType: !315, size: 8, offset: 3536)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !776, file: !282, line: 1157, baseType: !315, size: 8, offset: 3544)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !776, file: !282, line: 1159, baseType: !315, size: 8, offset: 3552)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !776, file: !282, line: 1160, baseType: !315, size: 8, offset: 3560)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !776, file: !282, line: 1161, baseType: !315, size: 8, offset: 3568)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !776, file: !282, line: 1162, baseType: !315, size: 8, offset: 3576)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !776, file: !282, line: 1165, baseType: !156, size: 32, offset: 3584)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !776, file: !282, line: 1166, baseType: !156, size: 32, offset: 3616)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !776, file: !282, line: 1167, baseType: !156, size: 32, offset: 3648)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !776, file: !282, line: 1168, baseType: !156, size: 32, offset: 3680)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !776, file: !282, line: 1171, baseType: !313, size: 16, offset: 3712)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !776, file: !282, line: 1171, baseType: !313, size: 16, offset: 3728)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !776, file: !282, line: 1172, baseType: !156, size: 32, offset: 3744)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !776, file: !282, line: 1173, baseType: !321, size: 32, offset: 3776)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !776, file: !282, line: 1174, baseType: !321, size: 32, offset: 3808)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !776, file: !282, line: 1177, baseType: !1194, size: 1024, offset: 3840)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !282, line: 963, size: 1024, elements: !1195)
!1195 = !{!1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1219, !1220}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1194, file: !282, line: 965, baseType: !156, size: 32)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1194, file: !282, line: 968, baseType: !321, size: 32, offset: 32)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1194, file: !282, line: 971, baseType: !321, size: 32, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1194, file: !282, line: 974, baseType: !321, size: 32, offset: 96)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1194, file: !282, line: 977, baseType: !357, size: 96, offset: 128)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1194, file: !282, line: 979, baseType: !357, size: 96, offset: 224)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1194, file: !282, line: 982, baseType: !156, size: 32, offset: 320)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1194, file: !282, line: 987, baseType: !880, size: 64, offset: 352)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1194, file: !282, line: 989, baseType: !321, size: 32, offset: 416)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1194, file: !282, line: 994, baseType: !156, size: 32, offset: 448)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1194, file: !282, line: 995, baseType: !156, size: 32, offset: 480)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1194, file: !282, line: 997, baseType: !315, size: 8, offset: 512)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1194, file: !282, line: 998, baseType: !870, size: 56, offset: 520)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1194, file: !282, line: 1000, baseType: !321, size: 32, offset: 576)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1194, file: !282, line: 1003, baseType: !880, size: 64, offset: 608)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1194, file: !282, line: 1006, baseType: !156, size: 32, offset: 672)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1194, file: !282, line: 1009, baseType: !321, size: 32, offset: 704)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1194, file: !282, line: 1012, baseType: !880, size: 64, offset: 736)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1194, file: !282, line: 1015, baseType: !880, size: 64, offset: 800)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1194, file: !282, line: 1018, baseType: !156, size: 32, offset: 864)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1194, file: !282, line: 1019, baseType: !1217, size: 64, offset: 896)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64)
!1218 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !282, line: 63, flags: DIFlagFwdDecl)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1194, file: !282, line: 1023, baseType: !321, size: 32, offset: 960)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1194, file: !282, line: 1024, baseType: !156, size: 32, offset: 992)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !776, file: !282, line: 1179, baseType: !1222, size: 320, offset: 4864)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !282, line: 1043, size: 320, elements: !1223)
!1223 = !{!1224, !1225, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1222, file: !282, line: 1044, baseType: !315, size: 8)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1222, file: !282, line: 1045, baseType: !1226, size: 16, offset: 8)
!1226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 16, elements: !840)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1222, file: !282, line: 1048, baseType: !315, size: 8, offset: 24)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1222, file: !282, line: 1049, baseType: !321, size: 32, offset: 32)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1222, file: !282, line: 1049, baseType: !321, size: 32, offset: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1222, file: !282, line: 1052, baseType: !321, size: 32, offset: 96)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1222, file: !282, line: 1052, baseType: !321, size: 32, offset: 128)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1222, file: !282, line: 1053, baseType: !315, size: 8, offset: 160)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1222, file: !282, line: 1054, baseType: !1158, size: 24, offset: 168)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1222, file: !282, line: 1057, baseType: !321, size: 32, offset: 192)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1222, file: !282, line: 1057, baseType: !321, size: 32, offset: 224)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1222, file: !282, line: 1060, baseType: !321, size: 32, offset: 256)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1222, file: !282, line: 1060, baseType: !321, size: 32, offset: 288)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !735, file: !282, line: 1247, baseType: !1239, size: 64, offset: 2176)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64)
!1240 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !282, line: 60, flags: DIFlagFwdDecl)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !735, file: !282, line: 1251, baseType: !1242, size: 31872, offset: 2240)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !282, line: 403, size: 31872, elements: !1243)
!1243 = !{!1244, !1281, !1301, !1310, !1330, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1471, !1472, !1473, !1474, !1490, !1491}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1242, file: !282, line: 404, baseType: !1245, size: 1984)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !282, line: 259, size: 1984, elements: !1246)
!1246 = !{!1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1264, !1276}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1245, file: !282, line: 260, baseType: !315, size: 8)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1245, file: !282, line: 263, baseType: !315, size: 8, offset: 8)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1245, file: !282, line: 266, baseType: !315, size: 8, offset: 16)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1245, file: !282, line: 267, baseType: !315, size: 8, offset: 24)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1245, file: !282, line: 269, baseType: !315, size: 8, offset: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1245, file: !282, line: 270, baseType: !315, size: 8, offset: 40)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1245, file: !282, line: 276, baseType: !315, size: 8, offset: 48)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1245, file: !282, line: 279, baseType: !315, size: 8, offset: 56)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1245, file: !282, line: 280, baseType: !313, size: 16, offset: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1245, file: !282, line: 280, baseType: !313, size: 16, offset: 80)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1245, file: !282, line: 281, baseType: !321, size: 32, offset: 96)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1245, file: !282, line: 284, baseType: !315, size: 8, offset: 128)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1245, file: !282, line: 285, baseType: !315, size: 8, offset: 136)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1245, file: !282, line: 287, baseType: !1261, size: 48, offset: 144)
!1261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 48, elements: !1262)
!1262 = !{!1263}
!1263 = !DISubrange(count: 6)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1245, file: !282, line: 290, baseType: !1265, size: 1280, offset: 192)
!1265 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !864, line: 174, baseType: !1266)
!1266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !864, line: 166, size: 1280, elements: !1267)
!1267 = !{!1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1266, file: !864, line: 167, baseType: !156, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1266, file: !864, line: 167, baseType: !156, size: 32, offset: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1266, file: !864, line: 168, baseType: !457, size: 512, offset: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1266, file: !864, line: 169, baseType: !457, size: 512, offset: 576)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1266, file: !864, line: 170, baseType: !321, size: 32, offset: 1088)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1266, file: !864, line: 171, baseType: !321, size: 32, offset: 1120)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1266, file: !864, line: 172, baseType: !884, size: 64, offset: 1152)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1266, file: !864, line: 173, baseType: !318, size: 64, offset: 1216)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1245, file: !282, line: 291, baseType: !1277, size: 512, offset: 1472)
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !864, line: 178, baseType: !1278)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !864, line: 176, size: 512, elements: !1279)
!1279 = !{!1280}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1278, file: !864, line: 177, baseType: !457, size: 512)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1242, file: !282, line: 406, baseType: !1282, size: 64, offset: 1984)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !282, line: 80, size: 1472, elements: !1284)
!1284 = !{!1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1283, file: !282, line: 81, baseType: !318, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1283, file: !282, line: 82, baseType: !318, size: 64, offset: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1283, file: !282, line: 83, baseType: !7, size: 32, offset: 128)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1283, file: !282, line: 84, baseType: !7, size: 32, offset: 160)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1283, file: !282, line: 86, baseType: !7, size: 32, offset: 192)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1283, file: !282, line: 87, baseType: !7, size: 32, offset: 224)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1283, file: !282, line: 88, baseType: !7, size: 32, offset: 256)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1283, file: !282, line: 89, baseType: !7, size: 32, offset: 288)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1283, file: !282, line: 90, baseType: !7, size: 32, offset: 320)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1283, file: !282, line: 91, baseType: !7, size: 32, offset: 352)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1283, file: !282, line: 92, baseType: !7, size: 32, offset: 384)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1283, file: !282, line: 93, baseType: !7, size: 32, offset: 416)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1283, file: !282, line: 95, baseType: !1298, size: 1024, offset: 448)
!1298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 1024, elements: !1299)
!1299 = !{!1300}
!1300 = !DISubrange(count: 128)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1242, file: !282, line: 407, baseType: !1302, size: 64, offset: 2048)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !282, line: 98, size: 1216, elements: !1304)
!1304 = !{!1305, !1306, !1307, !1308, !1309}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1303, file: !282, line: 100, baseType: !318, size: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1303, file: !282, line: 101, baseType: !318, size: 64, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1303, file: !282, line: 103, baseType: !7, size: 32, offset: 128)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1303, file: !282, line: 104, baseType: !7, size: 32, offset: 160)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1303, file: !282, line: 106, baseType: !1298, size: 1024, offset: 192)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1242, file: !282, line: 408, baseType: !1311, size: 512, offset: 2112)
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !282, line: 109, size: 512, elements: !1312)
!1312 = !{!1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1311, file: !282, line: 111, baseType: !156, size: 32)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1311, file: !282, line: 112, baseType: !156, size: 32, offset: 32)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1311, file: !282, line: 115, baseType: !156, size: 32, offset: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1311, file: !282, line: 116, baseType: !156, size: 32, offset: 96)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1311, file: !282, line: 117, baseType: !156, size: 32, offset: 128)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1311, file: !282, line: 118, baseType: !156, size: 32, offset: 160)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1311, file: !282, line: 119, baseType: !156, size: 32, offset: 192)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1311, file: !282, line: 120, baseType: !156, size: 32, offset: 224)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1311, file: !282, line: 121, baseType: !156, size: 32, offset: 256)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1311, file: !282, line: 122, baseType: !156, size: 32, offset: 288)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1311, file: !282, line: 125, baseType: !156, size: 32, offset: 320)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1311, file: !282, line: 126, baseType: !156, size: 32, offset: 352)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1311, file: !282, line: 127, baseType: !313, size: 16, offset: 384)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1311, file: !282, line: 128, baseType: !313, size: 16, offset: 400)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1311, file: !282, line: 129, baseType: !156, size: 32, offset: 416)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1311, file: !282, line: 130, baseType: !156, size: 32, offset: 448)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1311, file: !282, line: 131, baseType: !156, size: 32, offset: 480)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1242, file: !282, line: 409, baseType: !1331, size: 576, offset: 2624)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !282, line: 134, size: 576, elements: !1332)
!1332 = !{!1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1331, file: !282, line: 135, baseType: !156, size: 32)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1331, file: !282, line: 136, baseType: !156, size: 32, offset: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1331, file: !282, line: 137, baseType: !156, size: 32, offset: 64)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1331, file: !282, line: 138, baseType: !156, size: 32, offset: 96)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1331, file: !282, line: 139, baseType: !156, size: 32, offset: 128)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1331, file: !282, line: 140, baseType: !156, size: 32, offset: 160)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1331, file: !282, line: 141, baseType: !156, size: 32, offset: 192)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1331, file: !282, line: 142, baseType: !156, size: 32, offset: 224)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1331, file: !282, line: 143, baseType: !321, size: 32, offset: 256)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1331, file: !282, line: 144, baseType: !156, size: 32, offset: 288)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1331, file: !282, line: 145, baseType: !156, size: 32, offset: 320)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1331, file: !282, line: 147, baseType: !156, size: 32, offset: 352)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1331, file: !282, line: 148, baseType: !156, size: 32, offset: 384)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1331, file: !282, line: 149, baseType: !156, size: 32, offset: 416)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1331, file: !282, line: 150, baseType: !156, size: 32, offset: 448)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1331, file: !282, line: 151, baseType: !156, size: 32, offset: 480)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1331, file: !282, line: 152, baseType: !446, size: 64, offset: 512)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1242, file: !282, line: 411, baseType: !156, size: 32, offset: 3200)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1242, file: !282, line: 411, baseType: !156, size: 32, offset: 3232)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1242, file: !282, line: 411, baseType: !156, size: 32, offset: 3264)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1242, file: !282, line: 412, baseType: !321, size: 32, offset: 3296)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1242, file: !282, line: 413, baseType: !156, size: 32, offset: 3328)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1242, file: !282, line: 413, baseType: !156, size: 32, offset: 3360)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1242, file: !282, line: 415, baseType: !156, size: 32, offset: 3392)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1242, file: !282, line: 415, baseType: !156, size: 32, offset: 3424)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1242, file: !282, line: 416, baseType: !313, size: 16, offset: 3456)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1242, file: !282, line: 416, baseType: !313, size: 16, offset: 3472)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1242, file: !282, line: 418, baseType: !321, size: 32, offset: 3488)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1242, file: !282, line: 418, baseType: !321, size: 32, offset: 3520)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1242, file: !282, line: 421, baseType: !321, size: 32, offset: 3552)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1242, file: !282, line: 421, baseType: !321, size: 32, offset: 3584)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1242, file: !282, line: 421, baseType: !321, size: 32, offset: 3616)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1242, file: !282, line: 425, baseType: !313, size: 16, offset: 3648)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1242, file: !282, line: 425, baseType: !313, size: 16, offset: 3664)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1242, file: !282, line: 425, baseType: !313, size: 16, offset: 3680)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1242, file: !282, line: 426, baseType: !313, size: 16, offset: 3696)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1242, file: !282, line: 428, baseType: !313, size: 16, offset: 3712)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1242, file: !282, line: 428, baseType: !313, size: 16, offset: 3728)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1242, file: !282, line: 431, baseType: !156, size: 32, offset: 3744)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1242, file: !282, line: 433, baseType: !313, size: 16, offset: 3776)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1242, file: !282, line: 435, baseType: !313, size: 16, offset: 3792)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1242, file: !282, line: 437, baseType: !313, size: 16, offset: 3808)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1242, file: !282, line: 439, baseType: !313, size: 16, offset: 3824)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1242, file: !282, line: 441, baseType: !313, size: 16, offset: 3840)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1242, file: !282, line: 443, baseType: !313, size: 16, offset: 3856)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1242, file: !282, line: 449, baseType: !156, size: 32, offset: 3872)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1242, file: !282, line: 453, baseType: !156, size: 32, offset: 3904)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1242, file: !282, line: 458, baseType: !313, size: 16, offset: 3936)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1242, file: !282, line: 462, baseType: !313, size: 16, offset: 3952)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1242, file: !282, line: 467, baseType: !156, size: 32, offset: 3968)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1242, file: !282, line: 467, baseType: !156, size: 32, offset: 4000)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1242, file: !282, line: 469, baseType: !313, size: 16, offset: 4032)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1242, file: !282, line: 469, baseType: !313, size: 16, offset: 4048)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1242, file: !282, line: 469, baseType: !313, size: 16, offset: 4064)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1242, file: !282, line: 469, baseType: !313, size: 16, offset: 4080)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1242, file: !282, line: 474, baseType: !313, size: 16, offset: 4096)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1242, file: !282, line: 475, baseType: !315, size: 8, offset: 4112)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1242, file: !282, line: 476, baseType: !315, size: 8, offset: 4120)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1242, file: !282, line: 481, baseType: !156, size: 32, offset: 4128)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1242, file: !282, line: 486, baseType: !156, size: 32, offset: 4160)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1242, file: !282, line: 491, baseType: !156, size: 32, offset: 4192)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1242, file: !282, line: 496, baseType: !313, size: 16, offset: 4224)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1242, file: !282, line: 498, baseType: !313, size: 16, offset: 4240)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1242, file: !282, line: 501, baseType: !313, size: 16, offset: 4256)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1242, file: !282, line: 502, baseType: !313, size: 16, offset: 4272)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1242, file: !282, line: 508, baseType: !313, size: 16, offset: 4288)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1242, file: !282, line: 513, baseType: !313, size: 16, offset: 4304)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1242, file: !282, line: 515, baseType: !313, size: 16, offset: 4320)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1242, file: !282, line: 515, baseType: !313, size: 16, offset: 4336)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1242, file: !282, line: 519, baseType: !892, size: 128, offset: 4352)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1242, file: !282, line: 519, baseType: !892, size: 128, offset: 4480)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1242, file: !282, line: 520, baseType: !1405, size: 128, offset: 4608)
!1405 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !893, line: 89, baseType: !1406)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !893, line: 86, size: 128, elements: !1407)
!1407 = !{!1408, !1409, !1410, !1411}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1406, file: !893, line: 87, baseType: !156, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1406, file: !893, line: 87, baseType: !156, size: 32, offset: 32)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1406, file: !893, line: 88, baseType: !156, size: 32, offset: 64)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1406, file: !893, line: 88, baseType: !156, size: 32, offset: 96)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1242, file: !282, line: 523, baseType: !467, size: 128, offset: 4736)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1242, file: !282, line: 524, baseType: !313, size: 16, offset: 4864)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1242, file: !282, line: 527, baseType: !313, size: 16, offset: 4880)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1242, file: !282, line: 532, baseType: !321, size: 32, offset: 4896)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1242, file: !282, line: 532, baseType: !321, size: 32, offset: 4928)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1242, file: !282, line: 534, baseType: !321, size: 32, offset: 4960)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1242, file: !282, line: 538, baseType: !321, size: 32, offset: 4992)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1242, file: !282, line: 542, baseType: !156, size: 32, offset: 5024)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1242, file: !282, line: 545, baseType: !321, size: 32, offset: 5056)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1242, file: !282, line: 545, baseType: !321, size: 32, offset: 5088)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1242, file: !282, line: 545, baseType: !321, size: 32, offset: 5120)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1242, file: !282, line: 548, baseType: !321, size: 32, offset: 5152)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1242, file: !282, line: 551, baseType: !313, size: 16, offset: 5184)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1242, file: !282, line: 551, baseType: !313, size: 16, offset: 5200)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1242, file: !282, line: 551, baseType: !313, size: 16, offset: 5216)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1242, file: !282, line: 551, baseType: !313, size: 16, offset: 5232)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1242, file: !282, line: 552, baseType: !313, size: 16, offset: 5248)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1242, file: !282, line: 552, baseType: !313, size: 16, offset: 5264)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1242, file: !282, line: 553, baseType: !321, size: 32, offset: 5280)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1242, file: !282, line: 553, baseType: !321, size: 32, offset: 5312)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1242, file: !282, line: 554, baseType: !313, size: 16, offset: 5344)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1242, file: !282, line: 554, baseType: !313, size: 16, offset: 5360)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1242, file: !282, line: 555, baseType: !321, size: 32, offset: 5376)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1242, file: !282, line: 555, baseType: !321, size: 32, offset: 5408)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1242, file: !282, line: 558, baseType: !429, size: 8192, offset: 5440)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1242, file: !282, line: 561, baseType: !156, size: 32, offset: 13632)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1242, file: !282, line: 562, baseType: !313, size: 16, offset: 13664)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1242, file: !282, line: 562, baseType: !313, size: 16, offset: 13680)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1242, file: !282, line: 565, baseType: !1441, size: 6144, offset: 13696)
!1441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 6144, elements: !1442)
!1442 = !{!1443}
!1443 = !DISubrange(count: 768)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1242, file: !282, line: 568, baseType: !656, size: 128, offset: 19840)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1242, file: !282, line: 569, baseType: !656, size: 128, offset: 19968)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1242, file: !282, line: 572, baseType: !315, size: 8, offset: 20096)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1242, file: !282, line: 573, baseType: !315, size: 8, offset: 20104)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1242, file: !282, line: 574, baseType: !315, size: 8, offset: 20112)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1242, file: !282, line: 575, baseType: !1091, size: 40, offset: 20120)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1242, file: !282, line: 578, baseType: !156, size: 32, offset: 20160)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1242, file: !282, line: 579, baseType: !313, size: 16, offset: 20192)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1242, file: !282, line: 580, baseType: !313, size: 16, offset: 20208)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1242, file: !282, line: 581, baseType: !321, size: 32, offset: 20224)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1242, file: !282, line: 582, baseType: !321, size: 32, offset: 20256)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1242, file: !282, line: 585, baseType: !313, size: 16, offset: 20288)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1242, file: !282, line: 585, baseType: !313, size: 16, offset: 20304)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1242, file: !282, line: 586, baseType: !321, size: 32, offset: 20320)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1242, file: !282, line: 589, baseType: !313, size: 16, offset: 20352)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1242, file: !282, line: 589, baseType: !313, size: 16, offset: 20368)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1242, file: !282, line: 590, baseType: !156, size: 32, offset: 20384)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1242, file: !282, line: 593, baseType: !313, size: 16, offset: 20416)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1242, file: !282, line: 593, baseType: !313, size: 16, offset: 20432)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1242, file: !282, line: 594, baseType: !313, size: 16, offset: 20448)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1242, file: !282, line: 594, baseType: !313, size: 16, offset: 20464)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1242, file: !282, line: 595, baseType: !321, size: 32, offset: 20480)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1242, file: !282, line: 596, baseType: !321, size: 32, offset: 20512)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1242, file: !282, line: 597, baseType: !1468, size: 64, offset: 20544)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1470, line: 44, flags: DIFlagFwdDecl)
!1470 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1242, file: !282, line: 600, baseType: !156, size: 32, offset: 20608)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1242, file: !282, line: 601, baseType: !321, size: 32, offset: 20640)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1242, file: !282, line: 604, baseType: !522, size: 256, offset: 20672)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1242, file: !282, line: 607, baseType: !1475, size: 10880, offset: 20928)
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !282, line: 364, size: 10880, elements: !1476)
!1476 = !{!1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1475, file: !282, line: 365, baseType: !1245, size: 1984)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1475, file: !282, line: 367, baseType: !429, size: 8192, offset: 1984)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1475, file: !282, line: 369, baseType: !313, size: 16, offset: 10176)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1475, file: !282, line: 369, baseType: !313, size: 16, offset: 10192)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1475, file: !282, line: 370, baseType: !313, size: 16, offset: 10208)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1475, file: !282, line: 370, baseType: !313, size: 16, offset: 10224)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1475, file: !282, line: 372, baseType: !321, size: 32, offset: 10240)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1475, file: !282, line: 373, baseType: !321, size: 32, offset: 10272)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1475, file: !282, line: 375, baseType: !1158, size: 24, offset: 10304)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1475, file: !282, line: 376, baseType: !315, size: 8, offset: 10328)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1475, file: !282, line: 378, baseType: !315, size: 8, offset: 10336)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1475, file: !282, line: 379, baseType: !1158, size: 24, offset: 10344)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1475, file: !282, line: 381, baseType: !457, size: 512, offset: 10368)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1242, file: !282, line: 609, baseType: !156, size: 32, offset: 31808)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1242, file: !282, line: 610, baseType: !156, size: 32, offset: 31840)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !735, file: !282, line: 1252, baseType: !1493, size: 256, offset: 34112)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !282, line: 158, size: 256, elements: !1494)
!1494 = !{!1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1493, file: !282, line: 159, baseType: !156, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1493, file: !282, line: 160, baseType: !321, size: 32, offset: 32)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1493, file: !282, line: 161, baseType: !321, size: 32, offset: 64)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1493, file: !282, line: 162, baseType: !321, size: 32, offset: 96)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1493, file: !282, line: 163, baseType: !156, size: 32, offset: 128)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1493, file: !282, line: 164, baseType: !313, size: 16, offset: 160)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1493, file: !282, line: 165, baseType: !313, size: 16, offset: 176)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1493, file: !282, line: 166, baseType: !321, size: 32, offset: 192)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1493, file: !282, line: 167, baseType: !321, size: 32, offset: 224)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !735, file: !282, line: 1254, baseType: !467, size: 128, offset: 34368)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !735, file: !282, line: 1255, baseType: !467, size: 128, offset: 34496)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !735, file: !282, line: 1257, baseType: !318, size: 64, offset: 34624)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !735, file: !282, line: 1258, baseType: !318, size: 64, offset: 34688)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !735, file: !282, line: 1259, baseType: !318, size: 64, offset: 34752)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !735, file: !282, line: 1260, baseType: !318, size: 64, offset: 34816)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !735, file: !282, line: 1262, baseType: !318, size: 64, offset: 34880)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !735, file: !282, line: 1265, baseType: !1512, size: 64, offset: 34944)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64)
!1513 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !282, line: 1265, flags: DIFlagFwdDecl)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !735, file: !282, line: 1266, baseType: !313, size: 16, offset: 35008)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !735, file: !282, line: 1267, baseType: !313, size: 16, offset: 35024)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !735, file: !282, line: 1270, baseType: !156, size: 32, offset: 35040)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !735, file: !282, line: 1271, baseType: !467, size: 128, offset: 35072)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !735, file: !282, line: 1274, baseType: !1519, size: 128, offset: 35200)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !282, line: 650, size: 128, elements: !1520)
!1520 = !{!1521, !1522, !1523, !1524, !1525}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1519, file: !282, line: 651, baseType: !357, size: 96)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1519, file: !282, line: 652, baseType: !315, size: 8, offset: 96)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1519, file: !282, line: 652, baseType: !315, size: 8, offset: 104)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1519, file: !282, line: 652, baseType: !315, size: 8, offset: 112)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1519, file: !282, line: 652, baseType: !315, size: 8, offset: 120)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !735, file: !282, line: 1275, baseType: !1527, size: 1472, offset: 35328)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !282, line: 676, size: 1472, elements: !1528)
!1528 = !{!1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1541, !1551, !1552, !1553, !1554, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1527, file: !282, line: 679, baseType: !1519, size: 128)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1527, file: !282, line: 680, baseType: !313, size: 16, offset: 128)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1527, file: !282, line: 680, baseType: !313, size: 16, offset: 144)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1527, file: !282, line: 680, baseType: !313, size: 16, offset: 160)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1527, file: !282, line: 680, baseType: !313, size: 16, offset: 176)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1527, file: !282, line: 681, baseType: !313, size: 16, offset: 192)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1527, file: !282, line: 681, baseType: !313, size: 16, offset: 208)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1527, file: !282, line: 681, baseType: !313, size: 16, offset: 224)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1527, file: !282, line: 681, baseType: !313, size: 16, offset: 240)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1527, file: !282, line: 682, baseType: !313, size: 16, offset: 256)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1527, file: !282, line: 682, baseType: !1540, size: 48, offset: 272)
!1540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !313, size: 48, elements: !358)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1527, file: !282, line: 685, baseType: !1542, size: 192, offset: 320)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !282, line: 633, size: 192, elements: !1543)
!1543 = !{!1544, !1545, !1546, !1547, !1548, !1549, !1550}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1542, file: !282, line: 634, baseType: !313, size: 16)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1542, file: !282, line: 634, baseType: !313, size: 16, offset: 16)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1542, file: !282, line: 635, baseType: !313, size: 16, offset: 32)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1542, file: !282, line: 635, baseType: !313, size: 16, offset: 48)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1542, file: !282, line: 636, baseType: !321, size: 32, offset: 64)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1542, file: !282, line: 636, baseType: !321, size: 32, offset: 96)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1542, file: !282, line: 637, baseType: !1468, size: 64, offset: 128)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1527, file: !282, line: 686, baseType: !313, size: 16, offset: 512)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1527, file: !282, line: 686, baseType: !313, size: 16, offset: 528)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1527, file: !282, line: 687, baseType: !321, size: 32, offset: 544)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1527, file: !282, line: 688, baseType: !1555, size: 448, offset: 576)
!1555 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !282, line: 674, baseType: !1556)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !282, line: 659, size: 448, elements: !1557)
!1557 = !{!1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1556, file: !282, line: 660, baseType: !321, size: 32)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1556, file: !282, line: 661, baseType: !321, size: 32, offset: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1556, file: !282, line: 662, baseType: !321, size: 32, offset: 64)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1556, file: !282, line: 663, baseType: !321, size: 32, offset: 96)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1556, file: !282, line: 664, baseType: !321, size: 32, offset: 128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1556, file: !282, line: 665, baseType: !321, size: 32, offset: 160)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1556, file: !282, line: 666, baseType: !321, size: 32, offset: 192)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1556, file: !282, line: 667, baseType: !321, size: 32, offset: 224)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1556, file: !282, line: 668, baseType: !321, size: 32, offset: 256)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1556, file: !282, line: 669, baseType: !321, size: 32, offset: 288)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1556, file: !282, line: 670, baseType: !156, size: 32, offset: 320)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1556, file: !282, line: 671, baseType: !321, size: 32, offset: 352)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1556, file: !282, line: 672, baseType: !321, size: 32, offset: 384)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1556, file: !282, line: 673, baseType: !313, size: 16, offset: 416)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1556, file: !282, line: 673, baseType: !313, size: 16, offset: 432)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1527, file: !282, line: 692, baseType: !321, size: 32, offset: 1024)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1527, file: !282, line: 697, baseType: !321, size: 32, offset: 1056)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1527, file: !282, line: 703, baseType: !156, size: 32, offset: 1088)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1527, file: !282, line: 704, baseType: !313, size: 16, offset: 1120)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1527, file: !282, line: 704, baseType: !313, size: 16, offset: 1136)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1527, file: !282, line: 705, baseType: !313, size: 16, offset: 1152)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1527, file: !282, line: 706, baseType: !313, size: 16, offset: 1168)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1527, file: !282, line: 707, baseType: !313, size: 16, offset: 1184)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1527, file: !282, line: 708, baseType: !313, size: 16, offset: 1200)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1527, file: !282, line: 709, baseType: !313, size: 16, offset: 1216)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1527, file: !282, line: 709, baseType: !313, size: 16, offset: 1232)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1527, file: !282, line: 709, baseType: !313, size: 16, offset: 1248)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1527, file: !282, line: 709, baseType: !313, size: 16, offset: 1264)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1527, file: !282, line: 710, baseType: !313, size: 16, offset: 1280)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1527, file: !282, line: 711, baseType: !313, size: 16, offset: 1296)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1527, file: !282, line: 712, baseType: !321, size: 32, offset: 1312)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1527, file: !282, line: 713, baseType: !321, size: 32, offset: 1344)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1527, file: !282, line: 713, baseType: !321, size: 32, offset: 1376)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1527, file: !282, line: 713, baseType: !321, size: 32, offset: 1408)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1527, file: !282, line: 713, baseType: !321, size: 32, offset: 1440)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !735, file: !282, line: 1278, baseType: !1594, size: 64, offset: 36800)
!1594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !282, line: 1197, size: 64, elements: !1595)
!1595 = !{!1596, !1597, !1598, !1599}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1594, file: !282, line: 1199, baseType: !321, size: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1594, file: !282, line: 1200, baseType: !315, size: 8, offset: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1594, file: !282, line: 1201, baseType: !315, size: 8, offset: 40)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1594, file: !282, line: 1202, baseType: !313, size: 16, offset: 48)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !735, file: !282, line: 1281, baseType: !1601, size: 64, offset: 36864)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64)
!1602 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !191, line: 58, flags: DIFlagFwdDecl)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !735, file: !282, line: 1284, baseType: !1604, size: 192, offset: 36928)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !282, line: 1208, size: 192, elements: !1605)
!1605 = !{!1606, !1607, !1608, !1609}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1604, file: !282, line: 1209, baseType: !357, size: 96)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1604, file: !282, line: 1210, baseType: !156, size: 32, offset: 96)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1604, file: !282, line: 1210, baseType: !156, size: 32, offset: 128)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1604, file: !282, line: 1210, baseType: !156, size: 32, offset: 160)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !735, file: !282, line: 1287, baseType: !1611, size: 64, offset: 37120)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64)
!1612 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !282, line: 62, flags: DIFlagFwdDecl)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !735, file: !282, line: 1289, baseType: !1614, size: 64, offset: 37184)
!1614 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1615, line: 27, baseType: !1616)
!1615 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1616 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1617, line: 45, baseType: !1618)
!1617 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1618 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !735, file: !282, line: 1290, baseType: !1614, size: 64, offset: 37248)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !735, file: !282, line: 1293, baseType: !1265, size: 1280, offset: 37312)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !735, file: !282, line: 1294, baseType: !1277, size: 512, offset: 38592)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !735, file: !282, line: 1295, baseType: !863, size: 512, offset: 39104)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !735, file: !282, line: 1298, baseType: !1624, size: 64, offset: 39616)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 64)
!1625 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !282, line: 1298, flags: DIFlagFwdDecl)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !723, file: !155, line: 109, baseType: !319, size: 64, offset: 832)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "lvl", scope: !719, file: !155, line: 720, baseType: !315, size: 8, offset: 896)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "sculptlvl", scope: !719, file: !155, line: 720, baseType: !315, size: 8, offset: 904)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !719, file: !155, line: 720, baseType: !315, size: 8, offset: 912)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "totlvl", scope: !719, file: !155, line: 720, baseType: !315, size: 8, offset: 920)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "simple", scope: !719, file: !155, line: 721, baseType: !315, size: 8, offset: 928)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !719, file: !155, line: 721, baseType: !315, size: 8, offset: 936)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !719, file: !155, line: 721, baseType: !1226, size: 16, offset: 944)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !714, file: !715, line: 158, baseType: !1635, size: 64, offset: 64)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !299, line: 65, size: 160, elements: !1637)
!1637 = !{!1638, !1639, !1640, !1641}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1636, file: !299, line: 66, baseType: !357, size: 96)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1636, file: !299, line: 67, baseType: !1540, size: 48, offset: 96)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1636, file: !299, line: 68, baseType: !315, size: 8, offset: 144)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !1636, file: !299, line: 68, baseType: !315, size: 8, offset: 152)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !714, file: !715, line: 159, baseType: !1643, size: 64, offset: 128)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !299, line: 79, size: 96, elements: !1645)
!1645 = !{!1646, !1647, !1648, !1649, !1650}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !1644, file: !299, line: 81, baseType: !156, size: 32)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !1644, file: !299, line: 82, baseType: !156, size: 32, offset: 32)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1644, file: !299, line: 83, baseType: !313, size: 16, offset: 64)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1644, file: !299, line: 84, baseType: !315, size: 8, offset: 80)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1644, file: !299, line: 84, baseType: !315, size: 8, offset: 88)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !714, file: !715, line: 160, baseType: !1652, size: 64, offset: 192)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !299, line: 88, size: 64, elements: !1654)
!1654 = !{!1655, !1656}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !1653, file: !299, line: 89, baseType: !7, size: 32)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1653, file: !299, line: 90, baseType: !7, size: 32, offset: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !714, file: !715, line: 161, baseType: !156, size: 32, offset: 256)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !714, file: !715, line: 161, baseType: !156, size: 32, offset: 288)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "face_normals", scope: !714, file: !715, line: 162, baseType: !1660, size: 64, offset: 320)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "kb", scope: !714, file: !715, line: 163, baseType: !506, size: 64, offset: 384)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "vmask", scope: !714, file: !715, line: 164, baseType: !320, size: 64, offset: 448)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "pmap", scope: !714, file: !715, line: 167, baseType: !1664, size: 64, offset: 512)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 64)
!1665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1666)
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !1667, line: 96, size: 128, elements: !1668)
!1667 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_mesh_mapping.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1668 = !{!1669, !1670}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !1666, file: !1667, line: 97, baseType: !328, size: 64)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1666, file: !1667, line: 98, baseType: !156, size: 32, offset: 64)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !714, file: !715, line: 170, baseType: !1672, size: 64, offset: 576)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !167, line: 186, size: 8064, elements: !1674)
!1674 = !{!1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1687, !1688, !1689, !1690, !1692, !1694, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1759, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !1673, file: !167, line: 187, baseType: !156, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !1673, file: !167, line: 187, baseType: !156, size: 32, offset: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !1673, file: !167, line: 187, baseType: !156, size: 32, offset: 64)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !1673, file: !167, line: 187, baseType: !156, size: 32, offset: 96)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "totvertsel", scope: !1673, file: !167, line: 188, baseType: !156, size: 32, offset: 128)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "totedgesel", scope: !1673, file: !167, line: 188, baseType: !156, size: 32, offset: 160)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "totfacesel", scope: !1673, file: !167, line: 188, baseType: !156, size: 32, offset: 192)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "elem_index_dirty", scope: !1673, file: !167, line: 193, baseType: !315, size: 8, offset: 224)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "elem_table_dirty", scope: !1673, file: !167, line: 197, baseType: !315, size: 8, offset: 232)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "vpool", scope: !1673, file: !167, line: 201, baseType: !1685, size: 64, offset: 256)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64)
!1686 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !72, line: 71, flags: DIFlagFwdDecl)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "epool", scope: !1673, file: !167, line: 201, baseType: !1685, size: 64, offset: 320)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "lpool", scope: !1673, file: !167, line: 201, baseType: !1685, size: 64, offset: 384)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "fpool", scope: !1673, file: !167, line: 201, baseType: !1685, size: 64, offset: 448)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1673, file: !167, line: 208, baseType: !1691, size: 64, offset: 512)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "etable", scope: !1673, file: !167, line: 209, baseType: !1693, size: 64, offset: 576)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "ftable", scope: !1673, file: !167, line: 210, baseType: !1695, size: 64, offset: 640)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_tot", scope: !1673, file: !167, line: 213, baseType: !156, size: 32, offset: 704)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "etable_tot", scope: !1673, file: !167, line: 214, baseType: !156, size: 32, offset: 736)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "ftable_tot", scope: !1673, file: !167, line: 215, baseType: !156, size: 32, offset: 768)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "vtoolflagpool", scope: !1673, file: !167, line: 218, baseType: !1685, size: 64, offset: 832)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "etoolflagpool", scope: !1673, file: !167, line: 218, baseType: !1685, size: 64, offset: 896)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "ftoolflagpool", scope: !1673, file: !167, line: 218, baseType: !1685, size: 64, offset: 960)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "stackdepth", scope: !1673, file: !167, line: 220, baseType: !156, size: 32, offset: 1024)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "currentop", scope: !1673, file: !167, line: 221, baseType: !1704, size: 64, offset: 1088)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOperator", file: !18, line: 190, size: 10496, elements: !1706)
!1706 = !{!1707, !1744, !1745, !1751, !1755, !1756, !1758}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "slots_in", scope: !1705, file: !18, line: 191, baseType: !1708, size: 5120)
!1708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1709, size: 5120, elements: !1742)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOpSlot", file: !18, line: 147, size: 320, elements: !1710)
!1710 = !{!1711, !1714, !1716, !1726, !1727}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "slot_name", scope: !1709, file: !18, line: 148, baseType: !1712, size: 64)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64)
!1713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !315)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "slot_type", scope: !1709, file: !18, line: 149, baseType: !1715, size: 32, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotType", file: !18, line: 112, baseType: !17)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "slot_subtype", scope: !1709, file: !18, line: 150, baseType: !1717, size: 32, offset: 96)
!1717 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Union", file: !18, line: 142, baseType: !1718)
!1718 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eBMOpSlotSubType_Union", file: !18, line: 138, size: 32, elements: !1719)
!1719 = !{!1720, !1722, !1724}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !1718, file: !18, line: 139, baseType: !1721, size: 32)
!1721 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Elem", file: !18, line: 122, baseType: !28)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1718, file: !18, line: 140, baseType: !1723, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Ptr", file: !18, line: 136, baseType: !34)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !1718, file: !18, line: 141, baseType: !1725, size: 32)
!1725 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Map", file: !18, line: 130, baseType: !40)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1709, file: !18, line: 152, baseType: !156, size: 32, offset: 128)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1709, file: !18, line: 162, baseType: !1728, size: 128, offset: 192)
!1728 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1709, file: !18, line: 155, size: 128, elements: !1729)
!1729 = !{!1730, !1731, !1732, !1733, !1734, !1736}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !1728, file: !18, line: 156, baseType: !156, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1728, file: !18, line: 157, baseType: !321, size: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1728, file: !18, line: 158, baseType: !318, size: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1728, file: !18, line: 159, baseType: !357, size: 96)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1728, file: !18, line: 160, baseType: !1735, size: 64)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !1728, file: !18, line: 161, baseType: !1737, size: 64)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64)
!1738 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !1739, line: 48, baseType: !1740)
!1739 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1740 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !1741, line: 47, flags: DIFlagFwdDecl)
!1741 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1742 = !{!1743}
!1743 = !DISubrange(count: 16)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "slots_out", scope: !1705, file: !18, line: 192, baseType: !1708, size: 5120, offset: 5120)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !1705, file: !18, line: 193, baseType: !1746, size: 64, offset: 10240)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 64)
!1747 = !DISubroutineType(types: !1748)
!1748 = !{null, !1749, !1704}
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 64)
!1750 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMesh", file: !167, line: 246, baseType: !1673)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !1705, file: !18, line: 194, baseType: !1752, size: 64, offset: 10304)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 64)
!1753 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !1754, line: 38, flags: DIFlagFwdDecl)
!1754 = !DIFile(filename: "blender/source/blender/blenlib/BLI_linklist.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1705, file: !18, line: 195, baseType: !156, size: 32, offset: 10368)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "type_flag", scope: !1705, file: !18, line: 196, baseType: !1757, size: 32, offset: 10400)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOpTypeFlag", file: !18, line: 188, baseType: !48)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1705, file: !18, line: 197, baseType: !156, size: 32, offset: 10432)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !1673, file: !167, line: 223, baseType: !1760, size: 1600, offset: 1152)
!1760 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !72, line: 73, baseType: !1761)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !72, line: 64, size: 1600, elements: !1762)
!1762 = !{!1763, !1778, !1782, !1783, !1784, !1785, !1786}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1761, file: !72, line: 65, baseType: !1764, size: 64)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64)
!1765 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !72, line: 53, baseType: !1766)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !72, line: 42, size: 832, elements: !1767)
!1767 = !{!1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1766, file: !72, line: 43, baseType: !156, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1766, file: !72, line: 44, baseType: !156, size: 32, offset: 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1766, file: !72, line: 45, baseType: !156, size: 32, offset: 64)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1766, file: !72, line: 46, baseType: !156, size: 32, offset: 96)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !1766, file: !72, line: 47, baseType: !156, size: 32, offset: 128)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !1766, file: !72, line: 48, baseType: !156, size: 32, offset: 160)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !1766, file: !72, line: 49, baseType: !156, size: 32, offset: 192)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1766, file: !72, line: 50, baseType: !156, size: 32, offset: 224)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1766, file: !72, line: 51, baseType: !457, size: 512, offset: 256)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1766, file: !72, line: 52, baseType: !318, size: 64, offset: 768)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !1761, file: !72, line: 66, baseType: !1779, size: 1312, offset: 64)
!1779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 1312, elements: !1780)
!1780 = !{!1781}
!1781 = !DISubrange(count: 41)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !1761, file: !72, line: 69, baseType: !156, size: 32, offset: 1376)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !1761, file: !72, line: 69, baseType: !156, size: 32, offset: 1408)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !1761, file: !72, line: 70, baseType: !156, size: 32, offset: 1440)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1761, file: !72, line: 71, baseType: !1685, size: 64, offset: 1472)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !1761, file: !72, line: 72, baseType: !1787, size: 64, offset: 1536)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !72, line: 59, baseType: !1789)
!1789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !72, line: 57, size: 8192, elements: !1790)
!1790 = !{!1791}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1789, file: !72, line: 58, baseType: !429, size: 8192)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !1673, file: !167, line: 223, baseType: !1760, size: 1600, offset: 2752)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !1673, file: !167, line: 223, baseType: !1760, size: 1600, offset: 4352)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !1673, file: !167, line: 223, baseType: !1760, size: 1600, offset: 5952)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1673, file: !167, line: 233, baseType: !313, size: 16, offset: 7552)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !1673, file: !167, line: 236, baseType: !156, size: 32, offset: 7584)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !1673, file: !167, line: 238, baseType: !156, size: 32, offset: 7616)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "totflags", scope: !1673, file: !167, line: 238, baseType: !156, size: 32, offset: 7648)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "selected", scope: !1673, file: !167, line: 239, baseType: !467, size: 128, offset: 7680)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !1673, file: !167, line: 241, baseType: !402, size: 64, offset: 7808)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "errorstack", scope: !1673, file: !167, line: 243, baseType: !467, size: 128, offset: 7872)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "py_handle", scope: !1673, file: !167, line: 245, baseType: !318, size: 64, offset: 8000)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "cd_vert_node_offset", scope: !714, file: !715, line: 171, baseType: !156, size: 32, offset: 640)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "cd_face_node_offset", scope: !714, file: !715, line: 172, baseType: !156, size: 32, offset: 672)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "bm_smooth_shading", scope: !714, file: !715, line: 173, baseType: !327, size: 8, offset: 704)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "bm_log", scope: !714, file: !715, line: 175, baseType: !1807, size: 64, offset: 768)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 64)
!1808 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMLog", file: !1809, line: 33, flags: DIFlagFwdDecl)
!1809 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_log.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "pbvh", scope: !714, file: !715, line: 178, baseType: !1811, size: 64, offset: 832)
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 64)
!1812 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !6, line: 100, flags: DIFlagFwdDecl)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "show_diffuse_color", scope: !714, file: !715, line: 179, baseType: !327, size: 8, offset: 896)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers_active", scope: !714, file: !715, line: 182, baseType: !327, size: 8, offset: 904)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "orig_cos", scope: !714, file: !715, line: 183, baseType: !1660, size: 64, offset: 960)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "deform_cos", scope: !714, file: !715, line: 184, baseType: !1660, size: 64, offset: 1024)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "deform_imats", scope: !714, file: !715, line: 185, baseType: !1818, size: 64, offset: 1088)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "partial_redraw", scope: !714, file: !715, line: 188, baseType: !327, size: 8, offset: 1152)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_side", scope: !714, file: !715, line: 191, baseType: !7, size: 32, offset: 1184)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "texcache", scope: !714, file: !715, line: 191, baseType: !317, size: 64, offset: 1216)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_actual", scope: !714, file: !715, line: 191, baseType: !7, size: 32, offset: 1280)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "tex_pool", scope: !714, file: !715, line: 192, baseType: !1824, size: 64, offset: 1344)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1825 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !715, line: 61, flags: DIFlagFwdDecl)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "layer_co", scope: !714, file: !715, line: 195, baseType: !1660, size: 64, offset: 1408)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "stroke", scope: !714, file: !715, line: 197, baseType: !1828, size: 64, offset: 1472)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptStroke", file: !715, line: 197, flags: DIFlagFwdDecl)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !714, file: !715, line: 198, baseType: !1831, size: 64, offset: 1536)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64)
!1832 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrokeCache", file: !715, line: 59, flags: DIFlagFwdDecl)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke_valid", scope: !714, file: !715, line: 201, baseType: !327, size: 8, offset: 1600)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke", scope: !714, file: !715, line: 202, baseType: !357, size: 96, offset: 1632)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_accum", scope: !714, file: !715, line: 204, baseType: !357, size: 96, offset: 1728)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_counter", scope: !714, file: !715, line: 205, baseType: !156, size: 32, offset: 1824)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !708, file: !191, line: 121, baseType: !313, size: 16, offset: 1088)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !708, file: !191, line: 121, baseType: !313, size: 16, offset: 1104)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !708, file: !191, line: 122, baseType: !156, size: 32, offset: 1120)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !708, file: !191, line: 122, baseType: !156, size: 32, offset: 1152)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !708, file: !191, line: 122, baseType: !156, size: 32, offset: 1184)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !708, file: !191, line: 123, baseType: !457, size: 512, offset: 1216)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !708, file: !191, line: 124, baseType: !707, size: 64, offset: 1728)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !708, file: !191, line: 124, baseType: !707, size: 64, offset: 1792)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !708, file: !191, line: 127, baseType: !707, size: 64, offset: 1856)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !708, file: !191, line: 127, baseType: !707, size: 64, offset: 1920)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !708, file: !191, line: 127, baseType: !707, size: 64, offset: 1984)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !708, file: !191, line: 128, baseType: !492, size: 64, offset: 2048)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !708, file: !191, line: 130, baseType: !482, size: 64, offset: 2112)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !708, file: !191, line: 131, baseType: !1851, size: 64, offset: 2176)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !1741, line: 486, size: 1600, elements: !1853)
!1853 = !{!1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1852, file: !1741, line: 487, baseType: !410, size: 960)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !1852, file: !1741, line: 489, baseType: !467, size: 128, offset: 960)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1852, file: !1741, line: 490, baseType: !467, size: 128, offset: 1088)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1852, file: !1741, line: 491, baseType: !467, size: 128, offset: 1216)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1852, file: !1741, line: 492, baseType: !467, size: 128, offset: 1344)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1852, file: !1741, line: 494, baseType: !156, size: 32, offset: 1472)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !1852, file: !1741, line: 495, baseType: !156, size: 32, offset: 1504)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !1852, file: !1741, line: 497, baseType: !156, size: 32, offset: 1536)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1852, file: !1741, line: 498, baseType: !156, size: 32, offset: 1568)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !708, file: !191, line: 132, baseType: !1851, size: 64, offset: 2240)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !708, file: !191, line: 133, baseType: !1865, size: 64, offset: 2304)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 64)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !1741, line: 334, size: 1728, elements: !1867)
!1867 = !{!1868, !1869, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1903}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1866, file: !1741, line: 335, baseType: !467, size: 128)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !1866, file: !1741, line: 336, baseType: !1870, size: 64, offset: 128)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1866, file: !1741, line: 338, baseType: !313, size: 16, offset: 192)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1866, file: !1741, line: 338, baseType: !313, size: 16, offset: 208)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !1866, file: !1741, line: 339, baseType: !7, size: 32, offset: 224)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1866, file: !1741, line: 340, baseType: !156, size: 32, offset: 256)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1866, file: !1741, line: 342, baseType: !321, size: 32, offset: 288)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !1866, file: !1741, line: 343, baseType: !357, size: 96, offset: 320)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !1866, file: !1741, line: 344, baseType: !357, size: 96, offset: 416)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !1866, file: !1741, line: 347, baseType: !467, size: 128, offset: 512)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !1866, file: !1741, line: 349, baseType: !156, size: 32, offset: 640)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !1866, file: !1741, line: 350, baseType: !156, size: 32, offset: 672)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !1866, file: !1741, line: 351, baseType: !318, size: 64, offset: 704)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !1866, file: !1741, line: 352, baseType: !318, size: 64, offset: 768)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !1866, file: !1741, line: 354, baseType: !1884, size: 384, offset: 832)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !1741, line: 116, baseType: !1885)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !1741, line: 94, size: 384, elements: !1886)
!1886 = !{!1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !1885, file: !1741, line: 96, baseType: !156, size: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !1885, file: !1741, line: 96, baseType: !156, size: 32, offset: 32)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !1885, file: !1741, line: 97, baseType: !156, size: 32, offset: 64)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !1885, file: !1741, line: 97, baseType: !156, size: 32, offset: 96)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !1885, file: !1741, line: 99, baseType: !313, size: 16, offset: 128)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !1885, file: !1741, line: 100, baseType: !313, size: 16, offset: 144)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !1885, file: !1741, line: 102, baseType: !313, size: 16, offset: 160)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1885, file: !1741, line: 105, baseType: !313, size: 16, offset: 176)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !1885, file: !1741, line: 108, baseType: !313, size: 16, offset: 192)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !1885, file: !1741, line: 109, baseType: !313, size: 16, offset: 208)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !1885, file: !1741, line: 111, baseType: !313, size: 16, offset: 224)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !1885, file: !1741, line: 112, baseType: !313, size: 16, offset: 240)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !1885, file: !1741, line: 114, baseType: !156, size: 32, offset: 256)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !1885, file: !1741, line: 114, baseType: !156, size: 32, offset: 288)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !1885, file: !1741, line: 115, baseType: !156, size: 32, offset: 320)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !1885, file: !1741, line: 115, baseType: !156, size: 32, offset: 352)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !1866, file: !1741, line: 355, baseType: !457, size: 512, offset: 1216)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !708, file: !191, line: 134, baseType: !318, size: 64, offset: 2368)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !708, file: !191, line: 136, baseType: !1601, size: 64, offset: 2432)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !708, file: !191, line: 138, baseType: !1884, size: 384, offset: 2496)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !708, file: !191, line: 139, baseType: !1908, size: 64, offset: 2880)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !1741, line: 80, baseType: !1910)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !1741, line: 72, size: 192, elements: !1911)
!1911 = !{!1912, !1919, !1920, !1921, !1922}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1910, file: !1741, line: 73, baseType: !1913, size: 64)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 64)
!1914 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !1741, line: 59, baseType: !1915)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !1741, line: 56, size: 128, elements: !1916)
!1916 = !{!1917, !1918}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1915, file: !1741, line: 57, baseType: !357, size: 96)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1915, file: !1741, line: 58, baseType: !156, size: 32, offset: 96)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1910, file: !1741, line: 74, baseType: !156, size: 32, offset: 64)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1910, file: !1741, line: 76, baseType: !156, size: 32, offset: 96)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1910, file: !1741, line: 77, baseType: !156, size: 32, offset: 128)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1910, file: !1741, line: 79, baseType: !156, size: 32, offset: 160)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !708, file: !191, line: 141, baseType: !467, size: 128, offset: 2944)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !708, file: !191, line: 142, baseType: !467, size: 128, offset: 3072)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !708, file: !191, line: 143, baseType: !467, size: 128, offset: 3200)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !708, file: !191, line: 144, baseType: !467, size: 128, offset: 3328)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !708, file: !191, line: 146, baseType: !156, size: 32, offset: 3456)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !708, file: !191, line: 147, baseType: !156, size: 32, offset: 3488)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !708, file: !191, line: 150, baseType: !537, size: 64, offset: 3520)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !708, file: !191, line: 151, baseType: !319, size: 64, offset: 3584)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !708, file: !191, line: 152, baseType: !156, size: 32, offset: 3648)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !708, file: !191, line: 153, baseType: !156, size: 32, offset: 3680)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !708, file: !191, line: 156, baseType: !357, size: 96, offset: 3712)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !708, file: !191, line: 156, baseType: !357, size: 96, offset: 3808)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !708, file: !191, line: 156, baseType: !357, size: 96, offset: 3904)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !708, file: !191, line: 157, baseType: !357, size: 96, offset: 4000)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !708, file: !191, line: 158, baseType: !357, size: 96, offset: 4096)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !708, file: !191, line: 159, baseType: !357, size: 96, offset: 4192)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !708, file: !191, line: 160, baseType: !357, size: 96, offset: 4288)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !708, file: !191, line: 160, baseType: !357, size: 96, offset: 4384)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !708, file: !191, line: 161, baseType: !656, size: 128, offset: 4480)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !708, file: !191, line: 161, baseType: !656, size: 128, offset: 4608)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !708, file: !191, line: 162, baseType: !357, size: 96, offset: 4736)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !708, file: !191, line: 162, baseType: !357, size: 96, offset: 4832)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !708, file: !191, line: 163, baseType: !321, size: 32, offset: 4928)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !708, file: !191, line: 163, baseType: !321, size: 32, offset: 4960)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !708, file: !191, line: 164, baseType: !1948, size: 512, offset: 4992)
!1948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !321, size: 512, elements: !1949)
!1949 = !{!658, !658}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !708, file: !191, line: 165, baseType: !1948, size: 512, offset: 5504)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !708, file: !191, line: 166, baseType: !1948, size: 512, offset: 6016)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !708, file: !191, line: 167, baseType: !1948, size: 512, offset: 6528)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !708, file: !191, line: 176, baseType: !1948, size: 512, offset: 7040)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !708, file: !191, line: 178, baseType: !7, size: 32, offset: 7552)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !708, file: !191, line: 180, baseType: !313, size: 16, offset: 7584)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !708, file: !191, line: 181, baseType: !313, size: 16, offset: 7600)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !708, file: !191, line: 183, baseType: !313, size: 16, offset: 7616)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !708, file: !191, line: 183, baseType: !313, size: 16, offset: 7632)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !708, file: !191, line: 184, baseType: !313, size: 16, offset: 7648)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !708, file: !191, line: 184, baseType: !313, size: 16, offset: 7664)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !708, file: !191, line: 185, baseType: !313, size: 16, offset: 7680)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !708, file: !191, line: 186, baseType: !313, size: 16, offset: 7696)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !708, file: !191, line: 187, baseType: !313, size: 16, offset: 7712)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !708, file: !191, line: 188, baseType: !315, size: 8, offset: 7728)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !708, file: !191, line: 189, baseType: !315, size: 8, offset: 7736)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !708, file: !191, line: 192, baseType: !156, size: 32, offset: 7744)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !708, file: !191, line: 192, baseType: !156, size: 32, offset: 7776)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !708, file: !191, line: 192, baseType: !156, size: 32, offset: 7808)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !708, file: !191, line: 192, baseType: !156, size: 32, offset: 7840)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !708, file: !191, line: 194, baseType: !156, size: 32, offset: 7872)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !708, file: !191, line: 202, baseType: !321, size: 32, offset: 7904)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !708, file: !191, line: 202, baseType: !321, size: 32, offset: 7936)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !708, file: !191, line: 202, baseType: !321, size: 32, offset: 7968)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !708, file: !191, line: 211, baseType: !321, size: 32, offset: 8000)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !708, file: !191, line: 212, baseType: !321, size: 32, offset: 8032)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !708, file: !191, line: 213, baseType: !321, size: 32, offset: 8064)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !708, file: !191, line: 214, baseType: !321, size: 32, offset: 8096)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !708, file: !191, line: 215, baseType: !321, size: 32, offset: 8128)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !708, file: !191, line: 216, baseType: !321, size: 32, offset: 8160)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !708, file: !191, line: 219, baseType: !321, size: 32, offset: 8192)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !708, file: !191, line: 220, baseType: !321, size: 32, offset: 8224)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !708, file: !191, line: 221, baseType: !321, size: 32, offset: 8256)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !708, file: !191, line: 224, baseType: !1984, size: 16, offset: 8288)
!1984 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !708, file: !191, line: 224, baseType: !1984, size: 16, offset: 8304)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !708, file: !191, line: 226, baseType: !313, size: 16, offset: 8320)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !708, file: !191, line: 228, baseType: !315, size: 8, offset: 8336)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !708, file: !191, line: 229, baseType: !315, size: 8, offset: 8344)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !708, file: !191, line: 231, baseType: !313, size: 16, offset: 8352)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !708, file: !191, line: 232, baseType: !315, size: 8, offset: 8368)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !708, file: !191, line: 233, baseType: !315, size: 8, offset: 8376)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !708, file: !191, line: 234, baseType: !321, size: 32, offset: 8384)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !708, file: !191, line: 235, baseType: !321, size: 32, offset: 8416)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !708, file: !191, line: 237, baseType: !467, size: 128, offset: 8448)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !708, file: !191, line: 238, baseType: !467, size: 128, offset: 8576)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !708, file: !191, line: 239, baseType: !467, size: 128, offset: 8704)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !708, file: !191, line: 240, baseType: !467, size: 128, offset: 8832)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !708, file: !191, line: 242, baseType: !321, size: 32, offset: 8960)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !708, file: !191, line: 244, baseType: !313, size: 16, offset: 8992)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !708, file: !191, line: 245, baseType: !1984, size: 16, offset: 9008)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !708, file: !191, line: 246, baseType: !656, size: 128, offset: 9024)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !708, file: !191, line: 248, baseType: !156, size: 32, offset: 9152)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !708, file: !191, line: 249, baseType: !156, size: 32, offset: 9184)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !708, file: !191, line: 251, baseType: !2005, size: 64, offset: 9216)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!2006 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !191, line: 251, flags: DIFlagFwdDecl)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !708, file: !191, line: 253, baseType: !315, size: 8, offset: 9280)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !708, file: !191, line: 254, baseType: !315, size: 8, offset: 9288)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !708, file: !191, line: 255, baseType: !313, size: 16, offset: 9296)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !708, file: !191, line: 256, baseType: !357, size: 96, offset: 9312)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !708, file: !191, line: 258, baseType: !467, size: 128, offset: 9408)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !708, file: !191, line: 259, baseType: !467, size: 128, offset: 9536)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !708, file: !191, line: 260, baseType: !467, size: 128, offset: 9664)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !708, file: !191, line: 261, baseType: !467, size: 128, offset: 9792)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !708, file: !191, line: 263, baseType: !2016, size: 64, offset: 9920)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2017 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !191, line: 52, flags: DIFlagFwdDecl)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !708, file: !191, line: 264, baseType: !2019, size: 64, offset: 9984)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64)
!2020 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !191, line: 53, flags: DIFlagFwdDecl)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !708, file: !191, line: 265, baseType: !2022, size: 64, offset: 10048)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !2024, line: 105, flags: DIFlagFwdDecl)
!2024 = !DIFile(filename: "blender/source/blender/makesdna/DNA_cloth_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !708, file: !191, line: 267, baseType: !315, size: 8, offset: 10112)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !708, file: !191, line: 268, baseType: !315, size: 8, offset: 10120)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !708, file: !191, line: 269, baseType: !313, size: 16, offset: 10128)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !708, file: !191, line: 270, baseType: !321, size: 32, offset: 10144)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !708, file: !191, line: 272, baseType: !2030, size: 64, offset: 10176)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64)
!2031 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !191, line: 54, flags: DIFlagFwdDecl)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !708, file: !191, line: 275, baseType: !2033, size: 64, offset: 10240)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 64)
!2034 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !191, line: 275, flags: DIFlagFwdDecl)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !708, file: !191, line: 277, baseType: !2036, size: 64, offset: 10304)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !6, line: 178, size: 13504, elements: !2038)
!2038 = !{!2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2059, !2096, !2098, !2099, !2101, !2102, !2103, !2104, !2110, !2115, !2116, !2120, !2121, !2122, !2123, !2124, !2128, !2140, !2145, !2149, !2153, !2157, !2161, !2165, !2169, !2173, !2177, !2181, !2185, !2186, !2187, !2188, !2189, !2190, !2194, !2195, !2196, !2197, !2201, !2202, !2203, !2204, !2205, !2210, !2211, !2212, !2213, !2214, !2218, !2219, !2220, !2221, !2222, !2229, !2240, !2244, !2250, !2260, !2265, !2276, !2283, !2290, !2294, !2298, !2302, !2306, !2307, !2308, !2312, !2316, !2317, !2318, !2322, !2323, !2332, !2359, !2363, !2371, !2375, !2379, !2383, !2391, !2401}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !2037, file: !6, line: 180, baseType: !1760, size: 1600)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !2037, file: !6, line: 180, baseType: !1760, size: 1600, offset: 1600)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !2037, file: !6, line: 180, baseType: !1760, size: 1600, offset: 3200)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !2037, file: !6, line: 180, baseType: !1760, size: 1600, offset: 4800)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !2037, file: !6, line: 180, baseType: !1760, size: 1600, offset: 6400)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !2037, file: !6, line: 181, baseType: !156, size: 32, offset: 8000)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !2037, file: !6, line: 181, baseType: !156, size: 32, offset: 8032)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !2037, file: !6, line: 181, baseType: !156, size: 32, offset: 8064)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !2037, file: !6, line: 181, baseType: !156, size: 32, offset: 8096)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !2037, file: !6, line: 181, baseType: !156, size: 32, offset: 8128)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !2037, file: !6, line: 182, baseType: !156, size: 32, offset: 8160)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !2037, file: !6, line: 183, baseType: !156, size: 32, offset: 8192)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !2037, file: !6, line: 184, baseType: !2052, size: 64, offset: 8256)
!2052 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !2053, line: 124, baseType: !2054)
!2053 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !1754, line: 45, size: 128, elements: !2056)
!2056 = !{!2057, !2058}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2055, file: !1754, line: 46, baseType: !2054, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2055, file: !1754, line: 47, baseType: !318, size: 64, offset: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !2037, file: !6, line: 185, baseType: !2060, size: 64, offset: 8320)
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !2062, line: 84, size: 832, elements: !2063)
!2062 = !DIFile(filename: "blender/source/blender/gpu/GPU_buffers.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2063 = !{!2064, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2081, !2082, !2090, !2091, !2092, !2093, !2094, !2095}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2061, file: !2062, line: 85, baseType: !2065, size: 64)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 64)
!2066 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUBuffer", file: !2062, line: 57, baseType: !2067)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUBuffer", file: !2062, line: 53, size: 192, elements: !2068)
!2068 = !{!2069, !2070, !2071}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2067, file: !2062, line: 54, baseType: !156, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2067, file: !2062, line: 55, baseType: !318, size: 64, offset: 64)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2067, file: !2062, line: 56, baseType: !7, size: 32, offset: 128)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "normals", scope: !2061, file: !2062, line: 86, baseType: !2065, size: 64, offset: 64)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2061, file: !2062, line: 87, baseType: !2065, size: 64, offset: 128)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !2061, file: !2062, line: 88, baseType: !2065, size: 64, offset: 192)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "edges", scope: !2061, file: !2062, line: 89, baseType: !2065, size: 64, offset: 256)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "uvedges", scope: !2061, file: !2062, line: 90, baseType: !2065, size: 64, offset: 320)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "triangle_to_mface", scope: !2061, file: !2062, line: 93, baseType: !328, size: 64, offset: 384)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "vert_points", scope: !2061, file: !2062, line: 96, baseType: !2079, size: 64, offset: 448)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64)
!2080 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUVertPointLink", file: !2062, line: 50, flags: DIFlagFwdDecl)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "colType", scope: !2061, file: !2062, line: 105, baseType: !156, size: 32, offset: 512)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "materials", scope: !2061, file: !2062, line: 107, baseType: !2083, size: 64, offset: 576)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUBufferMaterial", file: !2062, line: 66, baseType: !2085)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUBufferMaterial", file: !2062, line: 59, size: 96, elements: !2086)
!2086 = !{!2087, !2088, !2089}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2085, file: !2062, line: 61, baseType: !156, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2085, file: !2062, line: 62, baseType: !156, size: 32, offset: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2085, file: !2062, line: 65, baseType: !313, size: 16, offset: 64)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "totmaterial", scope: !2061, file: !2062, line: 108, baseType: !156, size: 32, offset: 640)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "tot_triangle_point", scope: !2061, file: !2062, line: 110, baseType: !156, size: 32, offset: 672)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "tot_loose_point", scope: !2061, file: !2062, line: 111, baseType: !156, size: 32, offset: 704)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2061, file: !2062, line: 114, baseType: !156, size: 32, offset: 736)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !2061, file: !2062, line: 115, baseType: !156, size: 32, offset: 768)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "legacy", scope: !2061, file: !2062, line: 119, baseType: !327, size: 8, offset: 800)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2037, file: !6, line: 186, baseType: !2097, size: 32, offset: 8384)
!2097 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !6, line: 132, baseType: !5)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !2037, file: !6, line: 187, baseType: !321, size: 32, offset: 8416)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !2037, file: !6, line: 188, baseType: !2100, size: 32, offset: 8448)
!2100 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !6, line: 175, baseType: !12)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !2037, file: !6, line: 189, baseType: !156, size: 32, offset: 8480)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2037, file: !6, line: 190, baseType: !537, size: 64, offset: 8512)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !2037, file: !6, line: 193, baseType: !315, size: 8, offset: 8576)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !2037, file: !6, line: 196, baseType: !2105, size: 64, offset: 8640)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = !DISubroutineType(types: !2107)
!2107 = !{null, !2108}
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !6, line: 177, baseType: !2037)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !2037, file: !6, line: 199, baseType: !2111, size: 64, offset: 8704)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 64)
!2112 = !DISubroutineType(types: !2113)
!2113 = !{null, !2108, !2114}
!2114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !321)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !2037, file: !6, line: 202, baseType: !2105, size: 64, offset: 8768)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !2037, file: !6, line: 207, baseType: !2117, size: 64, offset: 8832)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 64)
!2118 = !DISubroutineType(types: !2119)
!2119 = !{!156, !2108}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !2037, file: !6, line: 208, baseType: !2117, size: 64, offset: 8896)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !2037, file: !6, line: 209, baseType: !2117, size: 64, offset: 8960)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !2037, file: !6, line: 210, baseType: !2117, size: 64, offset: 9024)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !2037, file: !6, line: 211, baseType: !2117, size: 64, offset: 9088)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !2037, file: !6, line: 218, baseType: !2125, size: 64, offset: 9152)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 64)
!2126 = !DISubroutineType(types: !2127)
!2127 = !{null, !2108, !156, !1635}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !2037, file: !6, line: 219, baseType: !2129, size: 64, offset: 9216)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64)
!2130 = !DISubroutineType(types: !2131)
!2131 = !{null, !2108, !156, !2132}
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 64)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !299, line: 48, size: 96, elements: !2134)
!2134 = !{!2135, !2136, !2137, !2138, !2139}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2133, file: !299, line: 49, baseType: !7, size: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2133, file: !299, line: 49, baseType: !7, size: 32, offset: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !2133, file: !299, line: 50, baseType: !315, size: 8, offset: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !2133, file: !299, line: 50, baseType: !315, size: 8, offset: 72)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2133, file: !299, line: 51, baseType: !313, size: 16, offset: 80)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !2037, file: !6, line: 220, baseType: !2141, size: 64, offset: 9280)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64)
!2142 = !DISubroutineType(types: !2143)
!2143 = !{null, !2108, !156, !2144}
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !2037, file: !6, line: 227, baseType: !2146, size: 64, offset: 9344)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DISubroutineType(types: !2148)
!2148 = !{!1635, !2108}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !2037, file: !6, line: 228, baseType: !2150, size: 64, offset: 9408)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64)
!2151 = !DISubroutineType(types: !2152)
!2152 = !{!2132, !2108}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !2037, file: !6, line: 229, baseType: !2154, size: 64, offset: 9472)
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64)
!2155 = !DISubroutineType(types: !2156)
!2156 = !{!2144, !2108}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !2037, file: !6, line: 230, baseType: !2158, size: 64, offset: 9536)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64)
!2159 = !DISubroutineType(types: !2160)
!2160 = !{!1652, !2108}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !2037, file: !6, line: 231, baseType: !2162, size: 64, offset: 9600)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64)
!2163 = !DISubroutineType(types: !2164)
!2164 = !{!1643, !2108}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !2037, file: !6, line: 236, baseType: !2166, size: 64, offset: 9664)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64)
!2167 = !DISubroutineType(types: !2168)
!2168 = !{null, !2108, !1635}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !2037, file: !6, line: 237, baseType: !2170, size: 64, offset: 9728)
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2171 = !DISubroutineType(types: !2172)
!2172 = !{null, !2108, !2132}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !2037, file: !6, line: 238, baseType: !2174, size: 64, offset: 9792)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 64)
!2175 = !DISubroutineType(types: !2176)
!2176 = !{null, !2108, !2144}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !2037, file: !6, line: 239, baseType: !2178, size: 64, offset: 9856)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 64)
!2179 = !DISubroutineType(types: !2180)
!2180 = !{null, !2108, !1652}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !2037, file: !6, line: 240, baseType: !2182, size: 64, offset: 9920)
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 64)
!2183 = !DISubroutineType(types: !2184)
!2184 = !{null, !2108, !1643}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !2037, file: !6, line: 245, baseType: !2146, size: 64, offset: 9984)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !2037, file: !6, line: 246, baseType: !2150, size: 64, offset: 10048)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !2037, file: !6, line: 247, baseType: !2154, size: 64, offset: 10112)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !2037, file: !6, line: 248, baseType: !2158, size: 64, offset: 10176)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !2037, file: !6, line: 249, baseType: !2162, size: 64, offset: 10240)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !2037, file: !6, line: 255, baseType: !2191, size: 64, offset: 10304)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64)
!2192 = !DISubroutineType(types: !2193)
!2193 = !{!318, !2108, !156, !156}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !2037, file: !6, line: 256, baseType: !2191, size: 64, offset: 10368)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !2037, file: !6, line: 257, baseType: !2191, size: 64, offset: 10432)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !2037, file: !6, line: 258, baseType: !2191, size: 64, offset: 10496)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !2037, file: !6, line: 264, baseType: !2198, size: 64, offset: 10560)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = !DISubroutineType(types: !2200)
!2200 = !{!318, !2108, !156}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !2037, file: !6, line: 265, baseType: !2198, size: 64, offset: 10624)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !2037, file: !6, line: 266, baseType: !2198, size: 64, offset: 10688)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !2037, file: !6, line: 267, baseType: !2198, size: 64, offset: 10752)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !2037, file: !6, line: 268, baseType: !2198, size: 64, offset: 10816)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !2037, file: !6, line: 272, baseType: !2206, size: 64, offset: 10880)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!2209, !2108}
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !2037, file: !6, line: 273, baseType: !2206, size: 64, offset: 10944)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !2037, file: !6, line: 274, baseType: !2206, size: 64, offset: 11008)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !2037, file: !6, line: 275, baseType: !2206, size: 64, offset: 11072)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !2037, file: !6, line: 276, baseType: !2206, size: 64, offset: 11136)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !2037, file: !6, line: 279, baseType: !2215, size: 64, offset: 11200)
!2215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 64)
!2216 = !DISubroutineType(types: !2217)
!2217 = !{null, !2108, !156, !2209, !156}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !2037, file: !6, line: 280, baseType: !2215, size: 64, offset: 11264)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !2037, file: !6, line: 281, baseType: !2215, size: 64, offset: 11328)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !2037, file: !6, line: 284, baseType: !2117, size: 64, offset: 11392)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !2037, file: !6, line: 285, baseType: !2117, size: 64, offset: 11456)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !2037, file: !6, line: 286, baseType: !2223, size: 64, offset: 11520)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 64)
!2224 = !DISubroutineType(types: !2225)
!2225 = !{!2226, !2108}
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 64)
!2228 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !6, line: 82, flags: DIFlagFwdDecl)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !2037, file: !6, line: 287, baseType: !2230, size: 64, offset: 11584)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 64)
!2231 = !DISubroutineType(types: !2232)
!2232 = !{!2233, !2108}
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 64)
!2234 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !6, line: 120, baseType: !2235)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !6, line: 117, size: 256, elements: !2236)
!2236 = !{!2237, !2239}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2235, file: !6, line: 118, baseType: !2238, size: 128)
!2238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 128, elements: !657)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !2235, file: !6, line: 119, baseType: !2238, size: 128, offset: 128)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !2037, file: !6, line: 288, baseType: !2241, size: 64, offset: 11648)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 64)
!2242 = !DISubroutineType(types: !2243)
!2243 = !{!328, !2108}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !2037, file: !6, line: 289, baseType: !2245, size: 64, offset: 11712)
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 64)
!2246 = !DISubroutineType(types: !2247)
!2247 = !{null, !2108, !2248}
!2248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 64)
!2249 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !6, line: 83, flags: DIFlagFwdDecl)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !2037, file: !6, line: 290, baseType: !2251, size: 64, offset: 11776)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 64)
!2252 = !DISubroutineType(types: !2253)
!2253 = !{!2254, !2108}
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 64)
!2255 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !6, line: 126, baseType: !2256)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !6, line: 123, size: 32, elements: !2257)
!2257 = !{!2258, !2259}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2256, file: !6, line: 124, baseType: !313, size: 16)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2256, file: !6, line: 125, baseType: !315, size: 8, offset: 16)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !2037, file: !6, line: 291, baseType: !2261, size: 64, offset: 11840)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 64)
!2262 = !DISubroutineType(types: !2263)
!2263 = !{!2264, !2108}
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !2037, file: !6, line: 299, baseType: !2266, size: 64, offset: 11904)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2267 = !DISubroutineType(types: !2268)
!2268 = !{null, !2108, !2269, !318, !2275}
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!2270 = !DISubroutineType(types: !2271)
!2271 = !{null, !318, !156, !2272, !2272, !2273}
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64)
!2274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !313)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !6, line: 162, baseType: !55)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !2037, file: !6, line: 309, baseType: !2277, size: 64, offset: 11968)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64)
!2278 = !DISubroutineType(types: !2279)
!2279 = !{null, !2108, !2280, !318}
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2281, size: 64)
!2281 = !DISubroutineType(types: !2282)
!2282 = !{null, !318, !156, !2272, !2272}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !2037, file: !6, line: 317, baseType: !2284, size: 64, offset: 12032)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64)
!2285 = !DISubroutineType(types: !2286)
!2286 = !{null, !2108, !2287, !318, !2275}
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 64)
!2288 = !DISubroutineType(types: !2289)
!2289 = !{null, !318, !156, !156, !2272, !2272}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !2037, file: !6, line: 327, baseType: !2291, size: 64, offset: 12096)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 64)
!2292 = !DISubroutineType(types: !2293)
!2293 = !{null, !2108, !2280, !318, !2275}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !2037, file: !6, line: 337, baseType: !2295, size: 64, offset: 12160)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = !DISubroutineType(types: !2297)
!2297 = !{null, !2108, !320, !320}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !2037, file: !6, line: 344, baseType: !2299, size: 64, offset: 12224)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64)
!2300 = !DISubroutineType(types: !2301)
!2301 = !{null, !2108, !156, !320}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !2037, file: !6, line: 347, baseType: !2303, size: 64, offset: 12288)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2304, size: 64)
!2304 = !DISubroutineType(types: !2305)
!2305 = !{null, !2108, !1660}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !2037, file: !6, line: 350, baseType: !2299, size: 64, offset: 12352)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !2037, file: !6, line: 351, baseType: !2299, size: 64, offset: 12416)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !2037, file: !6, line: 355, baseType: !2309, size: 64, offset: 12480)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 64)
!2310 = !DISubroutineType(types: !2311)
!2311 = !{!1664, !707, !2108}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !2037, file: !6, line: 359, baseType: !2313, size: 64, offset: 12544)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 64)
!2314 = !DISubroutineType(types: !2315)
!2315 = !{!1811, !707, !2108}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !2037, file: !6, line: 364, baseType: !2105, size: 64, offset: 12608)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !2037, file: !6, line: 367, baseType: !2105, size: 64, offset: 12672)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !2037, file: !6, line: 373, baseType: !2319, size: 64, offset: 12736)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64)
!2320 = !DISubroutineType(types: !2321)
!2321 = !{null, !2108, !327, !327}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !2037, file: !6, line: 376, baseType: !2105, size: 64, offset: 12800)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !2037, file: !6, line: 385, baseType: !2324, size: 64, offset: 12864)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 64)
!2325 = !DISubroutineType(types: !2326)
!2326 = !{null, !2108, !2327, !327, !2328}
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!2328 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !6, line: 146, baseType: !2329)
!2329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2330, size: 64)
!2330 = !DISubroutineType(types: !2331)
!2331 = !{!156, !156, !318}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !2037, file: !6, line: 391, baseType: !2333, size: 64, offset: 12928)
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 64)
!2334 = !DISubroutineType(types: !2335)
!2335 = !{null, !2108, !2336, !2354, !318, !2358}
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !6, line: 150, baseType: !2337)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 64)
!2338 = !DISubroutineType(types: !2339)
!2339 = !{!2340, !2341, !2353, !156}
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !6, line: 143, baseType: !59)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 64)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !299, line: 160, size: 384, elements: !2343)
!2343 = !{!2344, !2347, !2348, !2349, !2350, !2351, !2352}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2342, file: !299, line: 161, baseType: !2345, size: 256)
!2345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !321, size: 256, elements: !2346)
!2346 = !{!658, !841}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !2342, file: !299, line: 162, baseType: !797, size: 64, offset: 256)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2342, file: !299, line: 163, baseType: !315, size: 8, offset: 320)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2342, file: !299, line: 163, baseType: !315, size: 8, offset: 328)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2342, file: !299, line: 164, baseType: !313, size: 16, offset: 336)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !2342, file: !299, line: 164, baseType: !313, size: 16, offset: 352)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !2342, file: !299, line: 164, baseType: !313, size: 16, offset: 368)
!2353 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !327)
!2354 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !6, line: 147, baseType: !2355)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 64)
!2356 = !DISubroutineType(types: !2357)
!2357 = !{!156, !318, !156, !156}
!2358 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !6, line: 157, baseType: !65)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !2037, file: !6, line: 400, baseType: !2360, size: 64, offset: 12992)
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 64)
!2361 = !DISubroutineType(types: !2362)
!2362 = !{null, !2108, !2328}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !2037, file: !6, line: 415, baseType: !2364, size: 64, offset: 13056)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 64)
!2365 = !DISubroutineType(types: !2366)
!2366 = !{null, !2108, !2367, !2328, !2354, !318, !2358}
!2367 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !6, line: 149, baseType: !2368)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 64)
!2369 = !DISubroutineType(types: !2370)
!2370 = !{!2340, !318, !156}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !2037, file: !6, line: 425, baseType: !2372, size: 64, offset: 13120)
!2372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2373, size: 64)
!2373 = !DISubroutineType(types: !2374)
!2374 = !{null, !2108, !2367, !2354, !318, !2358}
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !2037, file: !6, line: 435, baseType: !2376, size: 64, offset: 13184)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64)
!2377 = !DISubroutineType(types: !2378)
!2378 = !{null, !2108, !2328, !2367, !318}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !2037, file: !6, line: 444, baseType: !2380, size: 64, offset: 13248)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2381 = !DISubroutineType(types: !2382)
!2382 = !{null, !2108, !2367, !318}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !2037, file: !6, line: 455, baseType: !2384, size: 64, offset: 13312)
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 64)
!2385 = !DISubroutineType(types: !2386)
!2386 = !{null, !2108, !2367, !2387, !318}
!2387 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !6, line: 148, baseType: !2388)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 64)
!2389 = !DISubroutineType(types: !2390)
!2390 = !{null, !318, !156, !321}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !2037, file: !6, line: 464, baseType: !2392, size: 64, offset: 13376)
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 64)
!2393 = !DISubroutineType(types: !2394)
!2394 = !{null, !2108, !2395, !2398, !318}
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64)
!2396 = !DISubroutineType(types: !2397)
!2397 = !{null, !318, !156, !318}
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 64)
!2399 = !DISubroutineType(types: !2400)
!2400 = !{!327, !318, !156}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2037, file: !6, line: 470, baseType: !2105, size: 64, offset: 13440)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !708, file: !191, line: 277, baseType: !2036, size: 64, offset: 10368)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !708, file: !191, line: 278, baseType: !1614, size: 64, offset: 10432)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !708, file: !191, line: 279, baseType: !1614, size: 64, offset: 10496)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !708, file: !191, line: 280, baseType: !7, size: 32, offset: 10560)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !708, file: !191, line: 281, baseType: !7, size: 32, offset: 10592)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !708, file: !191, line: 283, baseType: !467, size: 128, offset: 10624)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !708, file: !191, line: 284, baseType: !467, size: 128, offset: 10752)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !708, file: !191, line: 285, baseType: !2410, size: 64, offset: 10880)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !708, file: !191, line: 287, baseType: !2412, size: 64, offset: 10944)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 64)
!2413 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !191, line: 59, flags: DIFlagFwdDecl)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !708, file: !191, line: 288, baseType: !2415, size: 64, offset: 11008)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 64)
!2416 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !191, line: 288, flags: DIFlagFwdDecl)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !708, file: !191, line: 290, baseType: !880, size: 64, offset: 11072)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !708, file: !191, line: 291, baseType: !2419, size: 64, offset: 11136)
!2419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 64)
!2420 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !799, line: 65, baseType: !2421)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !799, line: 50, size: 320, elements: !2422)
!2422 = !{!2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2421, file: !799, line: 51, baseType: !734, size: 64)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2421, file: !799, line: 53, baseType: !156, size: 32, offset: 64)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2421, file: !799, line: 54, baseType: !156, size: 32, offset: 96)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2421, file: !799, line: 55, baseType: !156, size: 32, offset: 128)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2421, file: !799, line: 55, baseType: !156, size: 32, offset: 160)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !2421, file: !799, line: 56, baseType: !315, size: 8, offset: 192)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !2421, file: !799, line: 56, baseType: !315, size: 8, offset: 200)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2421, file: !799, line: 57, baseType: !315, size: 8, offset: 208)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2421, file: !799, line: 57, baseType: !315, size: 8, offset: 216)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !2421, file: !799, line: 59, baseType: !313, size: 16, offset: 224)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !2421, file: !799, line: 59, baseType: !313, size: 16, offset: 240)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2421, file: !799, line: 59, baseType: !313, size: 16, offset: 256)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2421, file: !799, line: 61, baseType: !313, size: 16, offset: 272)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2421, file: !799, line: 63, baseType: !156, size: 32, offset: 288)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !708, file: !191, line: 293, baseType: !467, size: 128, offset: 11200)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !708, file: !191, line: 294, baseType: !2439, size: 64, offset: 11328)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 64)
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !191, line: 113, baseType: !2441)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !191, line: 108, size: 256, elements: !2442)
!2442 = !{!2443, !2445, !2446, !2447, !2448}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2441, file: !191, line: 109, baseType: !2444, size: 64)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 64)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2441, file: !191, line: 109, baseType: !2444, size: 64, offset: 64)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2441, file: !191, line: 110, baseType: !707, size: 64, offset: 128)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2441, file: !191, line: 111, baseType: !156, size: 32, offset: 192)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !2441, file: !191, line: 112, baseType: !321, size: 32, offset: 224)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !700, file: !666, line: 61, baseType: !2450, size: 64, offset: 128)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !666, line: 202, size: 3328, elements: !2452)
!2452 = !{!2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2531, !2532, !2561, !2581, !2589, !2590}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2451, file: !666, line: 203, baseType: !410, size: 960)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2451, file: !666, line: 204, baseType: !478, size: 64, offset: 960)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !2451, file: !666, line: 206, baseType: !321, size: 32, offset: 1024)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !2451, file: !666, line: 206, baseType: !321, size: 32, offset: 1056)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !2451, file: !666, line: 207, baseType: !321, size: 32, offset: 1088)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !2451, file: !666, line: 207, baseType: !321, size: 32, offset: 1120)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !2451, file: !666, line: 207, baseType: !321, size: 32, offset: 1152)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !2451, file: !666, line: 207, baseType: !321, size: 32, offset: 1184)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !2451, file: !666, line: 207, baseType: !321, size: 32, offset: 1216)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !2451, file: !666, line: 207, baseType: !321, size: 32, offset: 1248)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !2451, file: !666, line: 208, baseType: !321, size: 32, offset: 1280)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2451, file: !666, line: 208, baseType: !321, size: 32, offset: 1312)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !2451, file: !666, line: 211, baseType: !321, size: 32, offset: 1344)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !2451, file: !666, line: 211, baseType: !321, size: 32, offset: 1376)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !2451, file: !666, line: 211, baseType: !321, size: 32, offset: 1408)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !2451, file: !666, line: 211, baseType: !321, size: 32, offset: 1440)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !2451, file: !666, line: 211, baseType: !321, size: 32, offset: 1472)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !2451, file: !666, line: 214, baseType: !321, size: 32, offset: 1504)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !2451, file: !666, line: 214, baseType: !321, size: 32, offset: 1536)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !2451, file: !666, line: 217, baseType: !321, size: 32, offset: 1568)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !2451, file: !666, line: 218, baseType: !321, size: 32, offset: 1600)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !2451, file: !666, line: 219, baseType: !321, size: 32, offset: 1632)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !2451, file: !666, line: 220, baseType: !321, size: 32, offset: 1664)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !2451, file: !666, line: 221, baseType: !321, size: 32, offset: 1696)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !2451, file: !666, line: 222, baseType: !313, size: 16, offset: 1728)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !2451, file: !666, line: 222, baseType: !313, size: 16, offset: 1744)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !2451, file: !666, line: 224, baseType: !313, size: 16, offset: 1760)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !2451, file: !666, line: 224, baseType: !313, size: 16, offset: 1776)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !2451, file: !666, line: 227, baseType: !313, size: 16, offset: 1792)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !2451, file: !666, line: 227, baseType: !313, size: 16, offset: 1808)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !2451, file: !666, line: 229, baseType: !313, size: 16, offset: 1824)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2451, file: !666, line: 229, baseType: !313, size: 16, offset: 1840)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2451, file: !666, line: 230, baseType: !313, size: 16, offset: 1856)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !2451, file: !666, line: 230, baseType: !313, size: 16, offset: 1872)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !2451, file: !666, line: 232, baseType: !321, size: 32, offset: 1888)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !2451, file: !666, line: 232, baseType: !321, size: 32, offset: 1920)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !2451, file: !666, line: 232, baseType: !321, size: 32, offset: 1952)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !2451, file: !666, line: 232, baseType: !321, size: 32, offset: 1984)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !2451, file: !666, line: 233, baseType: !156, size: 32, offset: 2016)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !2451, file: !666, line: 234, baseType: !156, size: 32, offset: 2048)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !2451, file: !666, line: 235, baseType: !313, size: 16, offset: 2080)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !2451, file: !666, line: 235, baseType: !313, size: 16, offset: 2096)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !2451, file: !666, line: 236, baseType: !313, size: 16, offset: 2112)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !2451, file: !666, line: 239, baseType: !313, size: 16, offset: 2128)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2451, file: !666, line: 240, baseType: !156, size: 32, offset: 2144)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2451, file: !666, line: 241, baseType: !156, size: 32, offset: 2176)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2451, file: !666, line: 241, baseType: !156, size: 32, offset: 2208)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2451, file: !666, line: 241, baseType: !156, size: 32, offset: 2240)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !2451, file: !666, line: 243, baseType: !321, size: 32, offset: 2272)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !2451, file: !666, line: 243, baseType: !321, size: 32, offset: 2304)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2451, file: !666, line: 244, baseType: !321, size: 32, offset: 2336)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !2451, file: !666, line: 246, baseType: !2421, size: 320, offset: 2368)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2451, file: !666, line: 248, baseType: !769, size: 64, offset: 2688)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2451, file: !666, line: 249, baseType: !492, size: 64, offset: 2752)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2451, file: !666, line: 250, baseType: !797, size: 64, offset: 2816)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !2451, file: !666, line: 251, baseType: !664, size: 64, offset: 2880)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !2451, file: !666, line: 252, baseType: !2510, size: 64, offset: 2944)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 64)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !666, line: 122, size: 1600, elements: !2512)
!2512 = !{!2513, !2514, !2515, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2511, file: !666, line: 123, baseType: !707, size: 64)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2511, file: !666, line: 124, baseType: !797, size: 64, offset: 64)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !2511, file: !666, line: 125, baseType: !2516, size: 384, offset: 128)
!2516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, size: 384, elements: !1262)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2511, file: !666, line: 126, baseType: !1948, size: 512, offset: 512)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !2511, file: !666, line: 127, baseType: !956, size: 288, offset: 1024)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2511, file: !666, line: 128, baseType: !313, size: 16, offset: 1312)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !2511, file: !666, line: 128, baseType: !313, size: 16, offset: 1328)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !2511, file: !666, line: 129, baseType: !321, size: 32, offset: 1344)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !2511, file: !666, line: 129, baseType: !321, size: 32, offset: 1376)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !2511, file: !666, line: 130, baseType: !321, size: 32, offset: 1408)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !2511, file: !666, line: 131, baseType: !7, size: 32, offset: 1440)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !2511, file: !666, line: 132, baseType: !313, size: 16, offset: 1472)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2511, file: !666, line: 132, baseType: !313, size: 16, offset: 1488)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2511, file: !666, line: 133, baseType: !156, size: 32, offset: 1504)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2511, file: !666, line: 133, baseType: !156, size: 32, offset: 1536)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2511, file: !666, line: 134, baseType: !313, size: 16, offset: 1568)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !2511, file: !666, line: 134, baseType: !313, size: 16, offset: 1584)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2451, file: !666, line: 253, baseType: !835, size: 64, offset: 3008)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !2451, file: !666, line: 254, baseType: !2533, size: 64, offset: 3072)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 64)
!2534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !666, line: 137, size: 832, elements: !2535)
!2535 = !{!2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2534, file: !666, line: 138, baseType: !313, size: 16)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !2534, file: !666, line: 140, baseType: !313, size: 16, offset: 16)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !2534, file: !666, line: 141, baseType: !321, size: 32, offset: 32)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2534, file: !666, line: 142, baseType: !321, size: 32, offset: 64)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2534, file: !666, line: 143, baseType: !313, size: 16, offset: 96)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !2534, file: !666, line: 144, baseType: !313, size: 16, offset: 112)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !2534, file: !666, line: 145, baseType: !156, size: 32, offset: 128)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !2534, file: !666, line: 147, baseType: !156, size: 32, offset: 160)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2534, file: !666, line: 149, baseType: !707, size: 64, offset: 192)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !2534, file: !666, line: 150, baseType: !156, size: 32, offset: 256)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !2534, file: !666, line: 151, baseType: !313, size: 16, offset: 288)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !2534, file: !666, line: 152, baseType: !313, size: 16, offset: 304)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !2534, file: !666, line: 154, baseType: !318, size: 64, offset: 320)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !2534, file: !666, line: 155, baseType: !320, size: 64, offset: 384)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !2534, file: !666, line: 157, baseType: !321, size: 32, offset: 448)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !2534, file: !666, line: 158, baseType: !313, size: 16, offset: 480)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !2534, file: !666, line: 159, baseType: !313, size: 16, offset: 496)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !2534, file: !666, line: 160, baseType: !313, size: 16, offset: 512)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !2534, file: !666, line: 161, baseType: !1540, size: 48, offset: 528)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !2534, file: !666, line: 162, baseType: !321, size: 32, offset: 576)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !2534, file: !666, line: 164, baseType: !321, size: 32, offset: 608)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !2534, file: !666, line: 164, baseType: !321, size: 32, offset: 640)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !2534, file: !666, line: 164, baseType: !321, size: 32, offset: 672)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !2534, file: !666, line: 165, baseType: !664, size: 64, offset: 704)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !2534, file: !666, line: 167, baseType: !884, size: 64, offset: 768)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !2451, file: !666, line: 255, baseType: !2562, size: 64, offset: 3136)
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 64)
!2563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !666, line: 170, size: 8704, elements: !2564)
!2564 = !{!2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !2563, file: !666, line: 171, baseType: !1065, size: 96)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !2563, file: !666, line: 172, baseType: !156, size: 32, offset: 96)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !2563, file: !666, line: 173, baseType: !313, size: 16, offset: 128)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2563, file: !666, line: 174, baseType: !313, size: 16, offset: 144)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !2563, file: !666, line: 175, baseType: !313, size: 16, offset: 160)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !2563, file: !666, line: 176, baseType: !313, size: 16, offset: 176)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !2563, file: !666, line: 177, baseType: !313, size: 16, offset: 192)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2563, file: !666, line: 178, baseType: !313, size: 16, offset: 208)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !2563, file: !666, line: 179, baseType: !156, size: 32, offset: 224)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2563, file: !666, line: 181, baseType: !707, size: 64, offset: 256)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !2563, file: !666, line: 182, baseType: !321, size: 32, offset: 320)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !2563, file: !666, line: 183, baseType: !156, size: 32, offset: 352)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !2563, file: !666, line: 184, baseType: !429, size: 8192, offset: 384)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !2563, file: !666, line: 187, baseType: !320, size: 64, offset: 8576)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !2563, file: !666, line: 188, baseType: !156, size: 32, offset: 8640)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2563, file: !666, line: 189, baseType: !156, size: 32, offset: 8672)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !2451, file: !666, line: 256, baseType: !2582, size: 64, offset: 3200)
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 64)
!2583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !666, line: 193, size: 640, elements: !2584)
!2584 = !{!2585, !2586, !2587, !2588}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2583, file: !666, line: 194, baseType: !707, size: 64)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !2583, file: !666, line: 195, baseType: !457, size: 512, offset: 64)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2583, file: !666, line: 197, baseType: !156, size: 32, offset: 576)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2583, file: !666, line: 198, baseType: !156, size: 32, offset: 608)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !2451, file: !666, line: 258, baseType: !315, size: 8, offset: 3264)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2451, file: !666, line: 259, baseType: !870, size: 56, offset: 3272)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !700, file: !666, line: 62, baseType: !457, size: 512, offset: 192)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !700, file: !666, line: 64, baseType: !315, size: 8, offset: 704)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !700, file: !666, line: 64, baseType: !315, size: 8, offset: 712)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !700, file: !666, line: 64, baseType: !315, size: 8, offset: 720)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !700, file: !666, line: 64, baseType: !315, size: 8, offset: 728)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !700, file: !666, line: 65, baseType: !357, size: 96, offset: 736)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !700, file: !666, line: 65, baseType: !357, size: 96, offset: 832)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !700, file: !666, line: 65, baseType: !321, size: 32, offset: 928)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !700, file: !666, line: 67, baseType: !313, size: 16, offset: 960)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !700, file: !666, line: 67, baseType: !313, size: 16, offset: 976)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !700, file: !666, line: 67, baseType: !313, size: 16, offset: 992)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !700, file: !666, line: 67, baseType: !313, size: 16, offset: 1008)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !700, file: !666, line: 68, baseType: !313, size: 16, offset: 1024)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !700, file: !666, line: 68, baseType: !313, size: 16, offset: 1040)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !700, file: !666, line: 69, baseType: !315, size: 8, offset: 1056)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !700, file: !666, line: 69, baseType: !870, size: 56, offset: 1064)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !700, file: !666, line: 70, baseType: !321, size: 32, offset: 1120)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !700, file: !666, line: 70, baseType: !321, size: 32, offset: 1152)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !700, file: !666, line: 70, baseType: !321, size: 32, offset: 1184)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !700, file: !666, line: 70, baseType: !321, size: 32, offset: 1216)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !700, file: !666, line: 71, baseType: !321, size: 32, offset: 1248)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !700, file: !666, line: 71, baseType: !321, size: 32, offset: 1280)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !700, file: !666, line: 74, baseType: !321, size: 32, offset: 1312)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !700, file: !666, line: 74, baseType: !321, size: 32, offset: 1344)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !700, file: !666, line: 77, baseType: !321, size: 32, offset: 1376)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !700, file: !666, line: 77, baseType: !321, size: 32, offset: 1408)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !700, file: !666, line: 77, baseType: !321, size: 32, offset: 1440)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !700, file: !666, line: 78, baseType: !321, size: 32, offset: 1472)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !700, file: !666, line: 78, baseType: !321, size: 32, offset: 1504)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !700, file: !666, line: 78, baseType: !321, size: 32, offset: 1536)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !700, file: !666, line: 79, baseType: !321, size: 32, offset: 1568)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !700, file: !666, line: 79, baseType: !321, size: 32, offset: 1600)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !700, file: !666, line: 79, baseType: !321, size: 32, offset: 1632)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !700, file: !666, line: 79, baseType: !321, size: 32, offset: 1664)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !700, file: !666, line: 80, baseType: !321, size: 32, offset: 1696)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !700, file: !666, line: 80, baseType: !321, size: 32, offset: 1728)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !700, file: !666, line: 80, baseType: !321, size: 32, offset: 1760)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !700, file: !666, line: 81, baseType: !321, size: 32, offset: 1792)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !700, file: !666, line: 81, baseType: !321, size: 32, offset: 1824)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !700, file: !666, line: 81, baseType: !321, size: 32, offset: 1856)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !700, file: !666, line: 82, baseType: !321, size: 32, offset: 1888)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !700, file: !666, line: 82, baseType: !321, size: 32, offset: 1920)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !700, file: !666, line: 82, baseType: !321, size: 32, offset: 1952)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !700, file: !666, line: 85, baseType: !321, size: 32, offset: 1984)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !700, file: !666, line: 85, baseType: !321, size: 32, offset: 2016)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !700, file: !666, line: 85, baseType: !321, size: 32, offset: 2048)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !700, file: !666, line: 85, baseType: !321, size: 32, offset: 2080)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !700, file: !666, line: 86, baseType: !321, size: 32, offset: 2112)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !700, file: !666, line: 86, baseType: !321, size: 32, offset: 2144)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !700, file: !666, line: 86, baseType: !321, size: 32, offset: 2176)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !700, file: !666, line: 86, baseType: !321, size: 32, offset: 2208)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !700, file: !666, line: 87, baseType: !321, size: 32, offset: 2240)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !700, file: !666, line: 87, baseType: !321, size: 32, offset: 2272)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !700, file: !666, line: 87, baseType: !321, size: 32, offset: 2304)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !700, file: !666, line: 87, baseType: !321, size: 32, offset: 2336)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !700, file: !666, line: 90, baseType: !321, size: 32, offset: 2368)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !700, file: !666, line: 93, baseType: !321, size: 32, offset: 2400)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !700, file: !666, line: 93, baseType: !321, size: 32, offset: 2432)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !700, file: !666, line: 93, baseType: !321, size: 32, offset: 2464)
!2650 = !{!2651}
!2651 = !DISubrange(count: 18)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !539, file: !540, line: 168, baseType: !769, size: 64, offset: 6144)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !539, file: !540, line: 169, baseType: !492, size: 64, offset: 6208)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !539, file: !540, line: 170, baseType: !2022, size: 64, offset: 6272)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !539, file: !540, line: 171, baseType: !835, size: 64, offset: 6336)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !539, file: !540, line: 174, baseType: !321, size: 32, offset: 6400)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !539, file: !540, line: 174, baseType: !321, size: 32, offset: 6432)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !539, file: !540, line: 174, baseType: !321, size: 32, offset: 6464)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !539, file: !540, line: 175, baseType: !321, size: 32, offset: 6496)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !539, file: !540, line: 175, baseType: !321, size: 32, offset: 6528)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !539, file: !540, line: 176, baseType: !313, size: 16, offset: 6560)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !539, file: !540, line: 176, baseType: !313, size: 16, offset: 6576)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !539, file: !540, line: 179, baseType: !357, size: 96, offset: 6592)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !539, file: !540, line: 179, baseType: !357, size: 96, offset: 6688)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !539, file: !540, line: 180, baseType: !321, size: 32, offset: 6784)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !539, file: !540, line: 180, baseType: !321, size: 32, offset: 6816)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !539, file: !540, line: 180, baseType: !321, size: 32, offset: 6848)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !539, file: !540, line: 181, baseType: !321, size: 32, offset: 6880)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !539, file: !540, line: 181, baseType: !321, size: 32, offset: 6912)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !539, file: !540, line: 182, baseType: !321, size: 32, offset: 6944)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !539, file: !540, line: 182, baseType: !321, size: 32, offset: 6976)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !539, file: !540, line: 183, baseType: !313, size: 16, offset: 7008)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !539, file: !540, line: 183, baseType: !313, size: 16, offset: 7024)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !539, file: !540, line: 185, baseType: !156, size: 32, offset: 7040)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !539, file: !540, line: 186, baseType: !313, size: 16, offset: 7072)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !539, file: !540, line: 187, baseType: !313, size: 16, offset: 7088)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !539, file: !540, line: 190, baseType: !656, size: 128, offset: 7104)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !539, file: !540, line: 191, baseType: !313, size: 16, offset: 7232)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !539, file: !540, line: 192, baseType: !313, size: 16, offset: 7248)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !539, file: !540, line: 195, baseType: !313, size: 16, offset: 7264)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !539, file: !540, line: 196, baseType: !313, size: 16, offset: 7280)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !539, file: !540, line: 197, baseType: !313, size: 16, offset: 7296)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !539, file: !540, line: 198, baseType: !1540, size: 48, offset: 7312)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !539, file: !540, line: 200, baseType: !2685, size: 64, offset: 7360)
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 64)
!2686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !540, line: 86, size: 192, elements: !2687)
!2687 = !{!2688, !2689, !2690, !2691}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2686, file: !540, line: 87, baseType: !797, size: 64)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !2686, file: !540, line: 88, baseType: !319, size: 64, offset: 64)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2686, file: !540, line: 89, baseType: !156, size: 32, offset: 128)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2686, file: !540, line: 90, baseType: !156, size: 32, offset: 160)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !539, file: !540, line: 202, baseType: !467, size: 128, offset: 7424)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !407, file: !406, line: 67, baseType: !2694, size: 64, offset: 1280)
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 64)
!2695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !299, line: 154, size: 64, elements: !2696)
!2696 = !{!2697, !2698}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2695, file: !299, line: 155, baseType: !156, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2695, file: !299, line: 156, baseType: !156, size: 32, offset: 32)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !407, file: !406, line: 71, baseType: !1643, size: 64, offset: 1344)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !407, file: !406, line: 72, baseType: !2701, size: 64, offset: 1408)
!2701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2702, size: 64)
!2702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !299, line: 93, size: 128, elements: !2703)
!2703 = !{!2704, !2705, !2706, !2707, !2708, !2709}
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !2702, file: !299, line: 94, baseType: !797, size: 64)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2702, file: !299, line: 95, baseType: !315, size: 8, offset: 64)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2702, file: !299, line: 95, baseType: !315, size: 8, offset: 72)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2702, file: !299, line: 96, baseType: !313, size: 16, offset: 80)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !2702, file: !299, line: 96, baseType: !313, size: 16, offset: 96)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2702, file: !299, line: 96, baseType: !313, size: 16, offset: 112)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !407, file: !406, line: 73, baseType: !1652, size: 64, offset: 1472)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !407, file: !406, line: 74, baseType: !2712, size: 64, offset: 1536)
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2713, size: 64)
!2713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !299, line: 109, size: 96, elements: !2714)
!2714 = !{!2715, !2716}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2713, file: !299, line: 110, baseType: !880, size: 64)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2713, file: !299, line: 111, baseType: !156, size: 32, offset: 64)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !407, file: !406, line: 75, baseType: !2718, size: 64, offset: 1600)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 64)
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !299, line: 129, size: 32, elements: !2720)
!2720 = !{!2721, !2722, !2723, !2724}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2719, file: !299, line: 130, baseType: !315, size: 8)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2719, file: !299, line: 130, baseType: !315, size: 8, offset: 8)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2719, file: !299, line: 130, baseType: !315, size: 8, offset: 16)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2719, file: !299, line: 130, baseType: !315, size: 8, offset: 24)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !407, file: !406, line: 80, baseType: !2144, size: 64, offset: 1664)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !407, file: !406, line: 81, baseType: !2341, size: 64, offset: 1728)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !407, file: !406, line: 82, baseType: !2728, size: 64, offset: 1792)
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64)
!2729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !406, line: 136, size: 512, elements: !2730)
!2730 = !{!2731, !2732, !2733, !2735, !2736, !2737, !2738, !2739}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !2729, file: !406, line: 137, baseType: !318, size: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2729, file: !406, line: 138, baseType: !2345, size: 256, offset: 64)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2729, file: !406, line: 139, baseType: !2734, size: 128, offset: 320)
!2734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !657)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2729, file: !406, line: 140, baseType: !315, size: 8, offset: 448)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2729, file: !406, line: 140, baseType: !315, size: 8, offset: 456)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2729, file: !406, line: 141, baseType: !313, size: 16, offset: 464)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !2729, file: !406, line: 141, baseType: !313, size: 16, offset: 480)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !2729, file: !406, line: 141, baseType: !313, size: 16, offset: 496)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !407, file: !406, line: 83, baseType: !1635, size: 64, offset: 1856)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !407, file: !406, line: 84, baseType: !2132, size: 64, offset: 1920)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !407, file: !406, line: 85, baseType: !1044, size: 64, offset: 1984)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !407, file: !406, line: 89, baseType: !2744, size: 64, offset: 2048)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 64)
!2745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !299, line: 74, size: 32, elements: !2746)
!2746 = !{!2747, !2748, !2749, !2750}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2745, file: !299, line: 75, baseType: !315, size: 8)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2745, file: !299, line: 75, baseType: !315, size: 8, offset: 8)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2745, file: !299, line: 75, baseType: !315, size: 8, offset: 16)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2745, file: !299, line: 75, baseType: !315, size: 8, offset: 24)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !407, file: !406, line: 90, baseType: !2752, size: 64, offset: 2112)
!2752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !407, file: !406, line: 93, baseType: !2754, size: 64, offset: 2176)
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 64)
!2755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !2756, line: 54, size: 896, elements: !2757)
!2756 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_editmesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2757 = !{!2758, !2759, !2760, !2761, !2764, !2765, !2766, !2767, !2770, !2772, !2773, !2774, !2775, !2776, !2777, !2778}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !2755, file: !2756, line: 55, baseType: !1672, size: 64)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "emcopy", scope: !2755, file: !2756, line: 58, baseType: !2754, size: 64, offset: 64)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "emcopyusers", scope: !2755, file: !2756, line: 59, baseType: !156, size: 32, offset: 128)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "looptris", scope: !2755, file: !2756, line: 63, baseType: !2762, size: 64, offset: 192)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64)
!2763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 192, elements: !358)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "tottri", scope: !2755, file: !2756, line: 64, baseType: !156, size: 32, offset: 256)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !2755, file: !2756, line: 67, baseType: !2036, size: 64, offset: 320)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "derivedCage", scope: !2755, file: !2756, line: 67, baseType: !2036, size: 64, offset: 384)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !2755, file: !2756, line: 68, baseType: !2768, size: 64, offset: 448)
!2768 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !2769, line: 48, baseType: !1614)
!2769 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColor", scope: !2755, file: !2756, line: 69, baseType: !2771, size: 64, offset: 512)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColorLen", scope: !2755, file: !2756, line: 70, baseType: !156, size: 32, offset: 576)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColor", scope: !2755, file: !2756, line: 71, baseType: !2771, size: 64, offset: 640)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColorLen", scope: !2755, file: !2756, line: 72, baseType: !156, size: 32, offset: 704)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2755, file: !2756, line: 75, baseType: !313, size: 16, offset: 736)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2755, file: !2756, line: 76, baseType: !313, size: 16, offset: 752)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2755, file: !2756, line: 79, baseType: !707, size: 64, offset: 768)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cdlayer", scope: !2755, file: !2756, line: 82, baseType: !156, size: 32, offset: 832)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !407, file: !406, line: 95, baseType: !1761, size: 1600, offset: 2240)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !407, file: !406, line: 95, baseType: !1761, size: 1600, offset: 3840)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !407, file: !406, line: 95, baseType: !1761, size: 1600, offset: 5440)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !407, file: !406, line: 98, baseType: !1761, size: 1600, offset: 7040)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !407, file: !406, line: 98, baseType: !1761, size: 1600, offset: 8640)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !407, file: !406, line: 101, baseType: !156, size: 32, offset: 10240)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !407, file: !406, line: 101, baseType: !156, size: 32, offset: 10272)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !407, file: !406, line: 101, baseType: !156, size: 32, offset: 10304)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !407, file: !406, line: 101, baseType: !156, size: 32, offset: 10336)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !407, file: !406, line: 104, baseType: !156, size: 32, offset: 10368)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !407, file: !406, line: 104, baseType: !156, size: 32, offset: 10400)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !407, file: !406, line: 111, baseType: !156, size: 32, offset: 10432)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !407, file: !406, line: 114, baseType: !357, size: 96, offset: 10464)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !407, file: !406, line: 115, baseType: !357, size: 96, offset: 10560)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !407, file: !406, line: 116, baseType: !357, size: 96, offset: 10656)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !407, file: !406, line: 118, baseType: !156, size: 32, offset: 10752)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !407, file: !406, line: 119, baseType: !313, size: 16, offset: 10784)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !407, file: !406, line: 119, baseType: !313, size: 16, offset: 10800)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !407, file: !406, line: 120, baseType: !321, size: 32, offset: 10816)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !407, file: !406, line: 121, baseType: !156, size: 32, offset: 10848)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !407, file: !406, line: 124, baseType: !315, size: 8, offset: 10880)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !407, file: !406, line: 124, baseType: !315, size: 8, offset: 10888)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !407, file: !406, line: 126, baseType: !315, size: 8, offset: 10896)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !407, file: !406, line: 126, baseType: !315, size: 8, offset: 10904)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !407, file: !406, line: 127, baseType: !315, size: 8, offset: 10912)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !407, file: !406, line: 128, baseType: !315, size: 8, offset: 10920)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !407, file: !406, line: 130, baseType: !313, size: 16, offset: 10928)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !407, file: !406, line: 132, baseType: !2807, size: 64, offset: 10944)
!2807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2808, size: 64)
!2808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !299, line: 233, size: 3584, elements: !2809)
!2809 = !{!2810, !2811, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2826}
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !2808, file: !299, line: 234, baseType: !467, size: 128)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !2808, file: !299, line: 235, baseType: !2812, size: 64, offset: 128)
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 64)
!2813 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !299, line: 69, baseType: !1636)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !2808, file: !299, line: 237, baseType: !327, size: 8, offset: 192)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2808, file: !299, line: 237, baseType: !327, size: 8, offset: 200)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !2808, file: !299, line: 237, baseType: !327, size: 8, offset: 208)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !2808, file: !299, line: 237, baseType: !327, size: 8, offset: 216)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !2808, file: !299, line: 237, baseType: !327, size: 8, offset: 224)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !2808, file: !299, line: 237, baseType: !327, size: 8, offset: 232)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !2808, file: !299, line: 238, baseType: !327, size: 8, offset: 240)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2808, file: !299, line: 238, baseType: !327, size: 8, offset: 248)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !2808, file: !299, line: 241, baseType: !1760, size: 1600, offset: 256)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !2808, file: !299, line: 242, baseType: !1760, size: 1600, offset: 1856)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !2808, file: !299, line: 243, baseType: !2825, size: 64, offset: 3456)
!2825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !2808, file: !299, line: 244, baseType: !319, size: 64, offset: 3520)
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2828, size: 64)
!2828 = !DIDerivedType(tag: DW_TAG_typedef, name: "LinkNode", file: !1754, line: 48, baseType: !2055)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 64)
!2830 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClothModifierData", file: !155, line: 566, baseType: !2831)
!2831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ClothModifierData", file: !155, line: 557, size: 1344, elements: !2832)
!2832 = !{!2833, !2834, !2835, !2838, !2886, !2904, !2907}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !2831, file: !155, line: 558, baseType: !722, size: 896)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2831, file: !155, line: 560, baseType: !734, size: 64, offset: 896)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "clothObject", scope: !2831, file: !155, line: 561, baseType: !2836, size: 64, offset: 960)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 64)
!2837 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cloth", file: !155, line: 561, flags: DIFlagFwdDecl)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "sim_parms", scope: !2831, file: !155, line: 562, baseType: !2839, size: 64, offset: 1024)
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2840, size: 64)
!2840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ClothSimSettings", file: !2024, line: 47, size: 1344, elements: !2841)
!2841 = !{!2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2840, file: !2024, line: 48, baseType: !2054, size: 64)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "mingoal", scope: !2840, file: !2024, line: 49, baseType: !321, size: 32, offset: 64)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "Cdis", scope: !2840, file: !2024, line: 50, baseType: !321, size: 32, offset: 96)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "Cvi", scope: !2840, file: !2024, line: 51, baseType: !321, size: 32, offset: 128)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2840, file: !2024, line: 52, baseType: !357, size: 96, offset: 160)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !2840, file: !2024, line: 53, baseType: !321, size: 32, offset: 256)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !2840, file: !2024, line: 54, baseType: !321, size: 32, offset: 288)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "structural", scope: !2840, file: !2024, line: 55, baseType: !321, size: 32, offset: 320)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "shear", scope: !2840, file: !2024, line: 56, baseType: !321, size: 32, offset: 352)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "bending", scope: !2840, file: !2024, line: 57, baseType: !321, size: 32, offset: 384)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "max_bend", scope: !2840, file: !2024, line: 58, baseType: !321, size: 32, offset: 416)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "max_struct", scope: !2840, file: !2024, line: 59, baseType: !321, size: 32, offset: 448)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "max_shear", scope: !2840, file: !2024, line: 60, baseType: !321, size: 32, offset: 480)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "max_sewing", scope: !2840, file: !2024, line: 61, baseType: !321, size: 32, offset: 512)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "avg_spring_len", scope: !2840, file: !2024, line: 62, baseType: !321, size: 32, offset: 544)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "timescale", scope: !2840, file: !2024, line: 63, baseType: !321, size: 32, offset: 576)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "maxgoal", scope: !2840, file: !2024, line: 64, baseType: !321, size: 32, offset: 608)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "eff_force_scale", scope: !2840, file: !2024, line: 65, baseType: !321, size: 32, offset: 640)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "eff_wind_scale", scope: !2840, file: !2024, line: 66, baseType: !321, size: 32, offset: 672)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "sim_time_old", scope: !2840, file: !2024, line: 67, baseType: !321, size: 32, offset: 704)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "defgoal", scope: !2840, file: !2024, line: 68, baseType: !321, size: 32, offset: 736)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "goalspring", scope: !2840, file: !2024, line: 69, baseType: !321, size: 32, offset: 768)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "goalfrict", scope: !2840, file: !2024, line: 70, baseType: !321, size: 32, offset: 800)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "velocity_smooth", scope: !2840, file: !2024, line: 71, baseType: !321, size: 32, offset: 832)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "collider_friction", scope: !2840, file: !2024, line: 72, baseType: !321, size: 32, offset: 864)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "vel_damping", scope: !2840, file: !2024, line: 73, baseType: !321, size: 32, offset: 896)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_min", scope: !2840, file: !2024, line: 74, baseType: !321, size: 32, offset: 928)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_max", scope: !2840, file: !2024, line: 75, baseType: !321, size: 32, offset: 960)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "stepsPerFrame", scope: !2840, file: !2024, line: 77, baseType: !156, size: 32, offset: 992)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2840, file: !2024, line: 78, baseType: !156, size: 32, offset: 1024)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "preroll", scope: !2840, file: !2024, line: 79, baseType: !156, size: 32, offset: 1056)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "maxspringlen", scope: !2840, file: !2024, line: 80, baseType: !156, size: 32, offset: 1088)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "solver_type", scope: !2840, file: !2024, line: 81, baseType: !313, size: 16, offset: 1120)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_bend", scope: !2840, file: !2024, line: 82, baseType: !313, size: 16, offset: 1136)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_mass", scope: !2840, file: !2024, line: 83, baseType: !313, size: 16, offset: 1152)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_struct", scope: !2840, file: !2024, line: 84, baseType: !313, size: 16, offset: 1168)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_shrink", scope: !2840, file: !2024, line: 85, baseType: !313, size: 16, offset: 1184)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "shapekey_rest", scope: !2840, file: !2024, line: 86, baseType: !313, size: 16, offset: 1200)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "presets", scope: !2840, file: !2024, line: 87, baseType: !313, size: 16, offset: 1216)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !2840, file: !2024, line: 88, baseType: !313, size: 16, offset: 1232)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2840, file: !2024, line: 89, baseType: !973, size: 32, offset: 1248)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !2840, file: !2024, line: 91, baseType: !2884, size: 64, offset: 1280)
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 64)
!2885 = !DICompositeType(tag: DW_TAG_structure_type, name: "EffectorWeights", file: !2024, line: 91, flags: DIFlagFwdDecl)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "coll_parms", scope: !2831, file: !155, line: 563, baseType: !2887, size: 64, offset: 1088)
!2887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2888, size: 64)
!2888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ClothCollSettings", file: !2024, line: 95, size: 448, elements: !2889)
!2889 = !{!2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903}
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "collision_list", scope: !2888, file: !2024, line: 96, baseType: !2054, size: 64)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "epsilon", scope: !2888, file: !2024, line: 97, baseType: !321, size: 32, offset: 64)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "self_friction", scope: !2888, file: !2024, line: 98, baseType: !321, size: 32, offset: 96)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !2888, file: !2024, line: 99, baseType: !321, size: 32, offset: 128)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "selfepsilon", scope: !2888, file: !2024, line: 100, baseType: !321, size: 32, offset: 160)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "repel_force", scope: !2888, file: !2024, line: 101, baseType: !321, size: 32, offset: 192)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "distance_repel", scope: !2888, file: !2024, line: 101, baseType: !321, size: 32, offset: 224)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2888, file: !2024, line: 102, baseType: !156, size: 32, offset: 256)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "self_loop_count", scope: !2888, file: !2024, line: 103, baseType: !313, size: 16, offset: 288)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "loop_count", scope: !2888, file: !2024, line: 104, baseType: !313, size: 16, offset: 304)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2888, file: !2024, line: 105, baseType: !2022, size: 64, offset: 320)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_selfcol", scope: !2888, file: !2024, line: 106, baseType: !313, size: 16, offset: 384)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2888, file: !2024, line: 107, baseType: !313, size: 16, offset: 400)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2888, file: !2024, line: 108, baseType: !156, size: 32, offset: 416)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "point_cache", scope: !2831, file: !155, line: 564, baseType: !2905, size: 64, offset: 1152)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 64)
!2906 = !DICompositeType(tag: DW_TAG_structure_type, name: "PointCache", file: !155, line: 564, flags: DIFlagFwdDecl)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !2831, file: !155, line: 565, baseType: !469, size: 128, offset: 1216)
!2908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 64)
!2909 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultiresModifierData", file: !155, line: 722, baseType: !719)
!2910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 64)
!2911 = !DIDerivedType(tag: DW_TAG_typedef, name: "MappedUserData", file: !3, line: 2595, baseType: !2912)
!2912 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 2592, size: 128, elements: !2913)
!2913 = !{!2914, !2915}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "vertexcos", scope: !2912, file: !3, line: 2593, baseType: !1660, size: 64)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "vertex_visit", scope: !2912, file: !3, line: 2594, baseType: !322, size: 64, offset: 64)
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 64)
!2917 = !DIDerivedType(tag: DW_TAG_typedef, name: "SGLSLMeshToTangent", file: !3, line: 2641, baseType: !2918)
!2918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 2631, size: 512, elements: !2919)
!2919 = !{!2920, !2921, !2925, !2928, !2929, !2930, !2931, !2932}
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "precomputedFaceNormals", scope: !2918, file: !3, line: 2632, baseType: !1660, size: 64)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "precomputedLoopNormals", scope: !2918, file: !3, line: 2633, baseType: !2922, size: 64, offset: 64)
!2922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2923, size: 64)
!2923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !313, size: 192, elements: !2924)
!2924 = !{!658, !359}
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !2918, file: !3, line: 2634, baseType: !2926, size: 64, offset: 128)
!2926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2927, size: 64)
!2927 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTFace", file: !299, line: 165, baseType: !2342)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !2918, file: !3, line: 2635, baseType: !304, size: 64, offset: 192)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !2918, file: !3, line: 2636, baseType: !2812, size: 64, offset: 256)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !2918, file: !3, line: 2637, baseType: !1660, size: 64, offset: 320)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "tangent", scope: !2918, file: !3, line: 2638, baseType: !2327, size: 64, offset: 384)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaces", scope: !2918, file: !3, line: 2639, baseType: !156, size: 32, offset: 448)
!2933 = !{!2934, !0}
!2934 = !DIGlobalVariableExpression(var: !2935, expr: !DIExpression())
!2935 = distinct !DIGlobalVariable(name: "default_osf", scope: !2936, file: !3, line: 3289, type: !2345, isLocal: true, isDefinition: true)
!2936 = distinct !DISubprogram(name: "DM_init_origspace", scope: !3, file: !3, line: 3287, type: !2106, scopeLine: 3288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!2937 = !{}
!2938 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMWeightColorInfo", file: !3, line: 1104, baseType: !2939)
!2939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMWeightColorInfo", file: !3, line: 1101, size: 128, elements: !2940)
!2940 = !{!2941, !2945}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !2939, file: !3, line: 1102, baseType: !2942, size: 64)
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2943, size: 64)
!2943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2944)
!2944 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorBand", file: !666, line: 120, baseType: !665)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "alert_color", scope: !2939, file: !3, line: 1103, baseType: !1712, size: 64, offset: 64)
!2946 = !{i32 7, !"Dwarf Version", i32 4}
!2947 = !{i32 2, !"Debug Info Version", i32 3}
!2948 = !{i32 1, !"wchar_size", i32 4}
!2949 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2950 = distinct !DISubprogram(name: "DM_init_funcs", scope: !3, file: !3, line: 250, type: !2106, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!2951 = !DILocalVariable(name: "dm", arg: 1, scope: !2950, file: !3, line: 250, type: !2108)
!2952 = !DILocation(line: 250, column: 33, scope: !2950)
!2953 = !DILocation(line: 253, column: 2, scope: !2950)
!2954 = !DILocation(line: 253, column: 6, scope: !2950)
!2955 = !DILocation(line: 253, column: 19, scope: !2950)
!2956 = !DILocation(line: 254, column: 2, scope: !2950)
!2957 = !DILocation(line: 254, column: 6, scope: !2950)
!2958 = !DILocation(line: 254, column: 19, scope: !2950)
!2959 = !DILocation(line: 255, column: 2, scope: !2950)
!2960 = !DILocation(line: 255, column: 6, scope: !2950)
!2961 = !DILocation(line: 255, column: 23, scope: !2950)
!2962 = !DILocation(line: 256, column: 2, scope: !2950)
!2963 = !DILocation(line: 256, column: 6, scope: !2950)
!2964 = !DILocation(line: 256, column: 19, scope: !2950)
!2965 = !DILocation(line: 257, column: 2, scope: !2950)
!2966 = !DILocation(line: 257, column: 6, scope: !2950)
!2967 = !DILocation(line: 257, column: 19, scope: !2950)
!2968 = !DILocation(line: 258, column: 2, scope: !2950)
!2969 = !DILocation(line: 258, column: 6, scope: !2950)
!2970 = !DILocation(line: 258, column: 19, scope: !2950)
!2971 = !DILocation(line: 259, column: 2, scope: !2950)
!2972 = !DILocation(line: 259, column: 6, scope: !2950)
!2973 = !DILocation(line: 259, column: 19, scope: !2950)
!2974 = !DILocation(line: 260, column: 2, scope: !2950)
!2975 = !DILocation(line: 260, column: 6, scope: !2950)
!2976 = !DILocation(line: 260, column: 23, scope: !2950)
!2977 = !DILocation(line: 261, column: 2, scope: !2950)
!2978 = !DILocation(line: 261, column: 6, scope: !2950)
!2979 = !DILocation(line: 261, column: 19, scope: !2950)
!2980 = !DILocation(line: 262, column: 2, scope: !2950)
!2981 = !DILocation(line: 262, column: 6, scope: !2950)
!2982 = !DILocation(line: 262, column: 19, scope: !2950)
!2983 = !DILocation(line: 264, column: 2, scope: !2950)
!2984 = !DILocation(line: 264, column: 6, scope: !2950)
!2985 = !DILocation(line: 264, column: 24, scope: !2950)
!2986 = !DILocation(line: 265, column: 2, scope: !2950)
!2987 = !DILocation(line: 265, column: 6, scope: !2950)
!2988 = !DILocation(line: 265, column: 24, scope: !2950)
!2989 = !DILocation(line: 266, column: 2, scope: !2950)
!2990 = !DILocation(line: 266, column: 6, scope: !2950)
!2991 = !DILocation(line: 266, column: 28, scope: !2950)
!2992 = !DILocation(line: 267, column: 2, scope: !2950)
!2993 = !DILocation(line: 267, column: 6, scope: !2950)
!2994 = !DILocation(line: 267, column: 24, scope: !2950)
!2995 = !DILocation(line: 268, column: 2, scope: !2950)
!2996 = !DILocation(line: 268, column: 6, scope: !2950)
!2997 = !DILocation(line: 268, column: 24, scope: !2950)
!2998 = !DILocation(line: 270, column: 2, scope: !2950)
!2999 = !DILocation(line: 270, column: 6, scope: !2950)
!3000 = !DILocation(line: 270, column: 18, scope: !2950)
!3001 = !DILocation(line: 271, column: 2, scope: !2950)
!3002 = !DILocation(line: 271, column: 6, scope: !2950)
!3003 = !DILocation(line: 271, column: 18, scope: !2950)
!3004 = !DILocation(line: 272, column: 2, scope: !2950)
!3005 = !DILocation(line: 272, column: 6, scope: !2950)
!3006 = !DILocation(line: 272, column: 22, scope: !2950)
!3007 = !DILocation(line: 273, column: 2, scope: !2950)
!3008 = !DILocation(line: 273, column: 6, scope: !2950)
!3009 = !DILocation(line: 273, column: 18, scope: !2950)
!3010 = !DILocation(line: 274, column: 2, scope: !2950)
!3011 = !DILocation(line: 274, column: 6, scope: !2950)
!3012 = !DILocation(line: 274, column: 23, scope: !2950)
!3013 = !DILocation(line: 275, column: 2, scope: !2950)
!3014 = !DILocation(line: 275, column: 6, scope: !2950)
!3015 = !DILocation(line: 275, column: 23, scope: !2950)
!3016 = !DILocation(line: 276, column: 2, scope: !2950)
!3017 = !DILocation(line: 276, column: 6, scope: !2950)
!3018 = !DILocation(line: 276, column: 27, scope: !2950)
!3019 = !DILocation(line: 277, column: 2, scope: !2950)
!3020 = !DILocation(line: 277, column: 6, scope: !2950)
!3021 = !DILocation(line: 277, column: 23, scope: !2950)
!3022 = !DILocation(line: 278, column: 2, scope: !2950)
!3023 = !DILocation(line: 278, column: 6, scope: !2950)
!3024 = !DILocation(line: 278, column: 23, scope: !2950)
!3025 = !DILocation(line: 280, column: 17, scope: !2950)
!3026 = !DILocation(line: 280, column: 21, scope: !2950)
!3027 = !DILocation(line: 280, column: 2, scope: !2950)
!3028 = !DILocation(line: 281, column: 1, scope: !2950)
!3029 = distinct !DISubprogram(name: "dm_getVertArray", scope: !3, file: !3, line: 96, type: !3030, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3030 = !DISubroutineType(types: !3031)
!3031 = !{!2812, !2108}
!3032 = !DILocalVariable(name: "dm", arg: 1, scope: !3029, file: !3, line: 96, type: !2108)
!3033 = !DILocation(line: 96, column: 44, scope: !3029)
!3034 = !DILocalVariable(name: "mvert", scope: !3029, file: !3, line: 98, type: !2812)
!3035 = !DILocation(line: 98, column: 9, scope: !3029)
!3036 = !DILocation(line: 98, column: 39, scope: !3029)
!3037 = !DILocation(line: 98, column: 43, scope: !3029)
!3038 = !DILocation(line: 98, column: 17, scope: !3029)
!3039 = !DILocation(line: 100, column: 7, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !3029, file: !3, line: 100, column: 6)
!3041 = !DILocation(line: 100, column: 6, scope: !3029)
!3042 = !DILocation(line: 101, column: 33, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !3040, file: !3, line: 100, column: 14)
!3044 = !DILocation(line: 101, column: 37, scope: !3043)
!3045 = !DILocation(line: 102, column: 32, scope: !3043)
!3046 = !DILocation(line: 102, column: 36, scope: !3043)
!3047 = !DILocation(line: 102, column: 48, scope: !3043)
!3048 = !DILocation(line: 101, column: 11, scope: !3043)
!3049 = !DILocation(line: 101, column: 9, scope: !3043)
!3050 = !DILocation(line: 103, column: 30, scope: !3043)
!3051 = !DILocation(line: 103, column: 34, scope: !3043)
!3052 = !DILocation(line: 103, column: 3, scope: !3043)
!3053 = !DILocation(line: 104, column: 3, scope: !3043)
!3054 = !DILocation(line: 104, column: 7, scope: !3043)
!3055 = !DILocation(line: 104, column: 21, scope: !3043)
!3056 = !DILocation(line: 104, column: 25, scope: !3043)
!3057 = !DILocation(line: 105, column: 2, scope: !3043)
!3058 = !DILocation(line: 107, column: 9, scope: !3029)
!3059 = !DILocation(line: 107, column: 2, scope: !3029)
!3060 = distinct !DISubprogram(name: "dm_getEdgeArray", scope: !3, file: !3, line: 110, type: !3061, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3061 = !DISubroutineType(types: !3062)
!3062 = !{!3063, !2108}
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = !DIDerivedType(tag: DW_TAG_typedef, name: "MEdge", file: !299, line: 52, baseType: !2133)
!3065 = !DILocalVariable(name: "dm", arg: 1, scope: !3060, file: !3, line: 110, type: !2108)
!3066 = !DILocation(line: 110, column: 44, scope: !3060)
!3067 = !DILocalVariable(name: "medge", scope: !3060, file: !3, line: 112, type: !3063)
!3068 = !DILocation(line: 112, column: 9, scope: !3060)
!3069 = !DILocation(line: 112, column: 39, scope: !3060)
!3070 = !DILocation(line: 112, column: 43, scope: !3060)
!3071 = !DILocation(line: 112, column: 17, scope: !3060)
!3072 = !DILocation(line: 114, column: 7, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !3060, file: !3, line: 114, column: 6)
!3074 = !DILocation(line: 114, column: 6, scope: !3060)
!3075 = !DILocation(line: 115, column: 33, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !3073, file: !3, line: 114, column: 14)
!3077 = !DILocation(line: 115, column: 37, scope: !3076)
!3078 = !DILocation(line: 116, column: 32, scope: !3076)
!3079 = !DILocation(line: 116, column: 36, scope: !3076)
!3080 = !DILocation(line: 116, column: 48, scope: !3076)
!3081 = !DILocation(line: 115, column: 11, scope: !3076)
!3082 = !DILocation(line: 115, column: 9, scope: !3076)
!3083 = !DILocation(line: 117, column: 30, scope: !3076)
!3084 = !DILocation(line: 117, column: 34, scope: !3076)
!3085 = !DILocation(line: 117, column: 3, scope: !3076)
!3086 = !DILocation(line: 118, column: 3, scope: !3076)
!3087 = !DILocation(line: 118, column: 7, scope: !3076)
!3088 = !DILocation(line: 118, column: 21, scope: !3076)
!3089 = !DILocation(line: 118, column: 25, scope: !3076)
!3090 = !DILocation(line: 119, column: 2, scope: !3076)
!3091 = !DILocation(line: 121, column: 9, scope: !3060)
!3092 = !DILocation(line: 121, column: 2, scope: !3060)
!3093 = distinct !DISubprogram(name: "dm_getTessFaceArray", scope: !3, file: !3, line: 124, type: !3094, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3094 = !DISubroutineType(types: !3095)
!3095 = !{!304, !2108}
!3096 = !DILocalVariable(name: "dm", arg: 1, scope: !3093, file: !3, line: 124, type: !2108)
!3097 = !DILocation(line: 124, column: 48, scope: !3093)
!3098 = !DILocalVariable(name: "mface", scope: !3093, file: !3, line: 126, type: !304)
!3099 = !DILocation(line: 126, column: 9, scope: !3093)
!3100 = !DILocation(line: 126, column: 39, scope: !3093)
!3101 = !DILocation(line: 126, column: 43, scope: !3093)
!3102 = !DILocation(line: 126, column: 17, scope: !3093)
!3103 = !DILocation(line: 128, column: 7, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3093, file: !3, line: 128, column: 6)
!3105 = !DILocation(line: 128, column: 6, scope: !3093)
!3106 = !DILocalVariable(name: "numTessFaces", scope: !3107, file: !3, line: 129, type: !156)
!3107 = distinct !DILexicalBlock(scope: !3104, file: !3, line: 128, column: 14)
!3108 = !DILocation(line: 129, column: 7, scope: !3107)
!3109 = !DILocation(line: 129, column: 22, scope: !3107)
!3110 = !DILocation(line: 129, column: 26, scope: !3107)
!3111 = !DILocation(line: 129, column: 42, scope: !3107)
!3112 = !DILocation(line: 131, column: 8, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3107, file: !3, line: 131, column: 7)
!3114 = !DILocation(line: 131, column: 7, scope: !3107)
!3115 = !DILocation(line: 136, column: 4, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3113, file: !3, line: 131, column: 22)
!3117 = !DILocation(line: 139, column: 33, scope: !3107)
!3118 = !DILocation(line: 139, column: 37, scope: !3107)
!3119 = !DILocation(line: 139, column: 74, scope: !3107)
!3120 = !DILocation(line: 139, column: 11, scope: !3107)
!3121 = !DILocation(line: 139, column: 9, scope: !3107)
!3122 = !DILocation(line: 140, column: 30, scope: !3107)
!3123 = !DILocation(line: 140, column: 34, scope: !3107)
!3124 = !DILocation(line: 140, column: 3, scope: !3107)
!3125 = !DILocation(line: 141, column: 3, scope: !3107)
!3126 = !DILocation(line: 141, column: 7, scope: !3107)
!3127 = !DILocation(line: 141, column: 25, scope: !3107)
!3128 = !DILocation(line: 141, column: 29, scope: !3107)
!3129 = !DILocation(line: 142, column: 2, scope: !3107)
!3130 = !DILocation(line: 144, column: 9, scope: !3093)
!3131 = !DILocation(line: 144, column: 2, scope: !3093)
!3132 = !DILocation(line: 145, column: 1, scope: !3093)
!3133 = distinct !DISubprogram(name: "dm_getLoopArray", scope: !3, file: !3, line: 147, type: !3134, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3134 = !DISubroutineType(types: !3135)
!3135 = !{!3136, !2108}
!3136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3137, size: 64)
!3137 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoop", file: !299, line: 91, baseType: !1653)
!3138 = !DILocalVariable(name: "dm", arg: 1, scope: !3133, file: !3, line: 147, type: !2108)
!3139 = !DILocation(line: 147, column: 44, scope: !3133)
!3140 = !DILocalVariable(name: "mloop", scope: !3133, file: !3, line: 149, type: !3136)
!3141 = !DILocation(line: 149, column: 9, scope: !3133)
!3142 = !DILocation(line: 149, column: 39, scope: !3133)
!3143 = !DILocation(line: 149, column: 43, scope: !3133)
!3144 = !DILocation(line: 149, column: 17, scope: !3133)
!3145 = !DILocation(line: 151, column: 7, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !3133, file: !3, line: 151, column: 6)
!3147 = !DILocation(line: 151, column: 6, scope: !3133)
!3148 = !DILocation(line: 152, column: 33, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !3146, file: !3, line: 151, column: 14)
!3150 = !DILocation(line: 152, column: 37, scope: !3149)
!3151 = !DILocation(line: 153, column: 32, scope: !3149)
!3152 = !DILocation(line: 153, column: 36, scope: !3149)
!3153 = !DILocation(line: 153, column: 48, scope: !3149)
!3154 = !DILocation(line: 152, column: 11, scope: !3149)
!3155 = !DILocation(line: 152, column: 9, scope: !3149)
!3156 = !DILocation(line: 154, column: 30, scope: !3149)
!3157 = !DILocation(line: 154, column: 34, scope: !3149)
!3158 = !DILocation(line: 154, column: 3, scope: !3149)
!3159 = !DILocation(line: 155, column: 3, scope: !3149)
!3160 = !DILocation(line: 155, column: 7, scope: !3149)
!3161 = !DILocation(line: 155, column: 21, scope: !3149)
!3162 = !DILocation(line: 155, column: 25, scope: !3149)
!3163 = !DILocation(line: 156, column: 2, scope: !3149)
!3164 = !DILocation(line: 158, column: 9, scope: !3133)
!3165 = !DILocation(line: 158, column: 2, scope: !3133)
!3166 = distinct !DISubprogram(name: "dm_getPolyArray", scope: !3, file: !3, line: 161, type: !3167, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3167 = !DISubroutineType(types: !3168)
!3168 = !{!3169, !2108}
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 64)
!3170 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPoly", file: !299, line: 85, baseType: !1644)
!3171 = !DILocalVariable(name: "dm", arg: 1, scope: !3166, file: !3, line: 161, type: !2108)
!3172 = !DILocation(line: 161, column: 44, scope: !3166)
!3173 = !DILocalVariable(name: "mpoly", scope: !3166, file: !3, line: 163, type: !3169)
!3174 = !DILocation(line: 163, column: 9, scope: !3166)
!3175 = !DILocation(line: 163, column: 39, scope: !3166)
!3176 = !DILocation(line: 163, column: 43, scope: !3166)
!3177 = !DILocation(line: 163, column: 17, scope: !3166)
!3178 = !DILocation(line: 165, column: 7, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3166, file: !3, line: 165, column: 6)
!3180 = !DILocation(line: 165, column: 6, scope: !3166)
!3181 = !DILocation(line: 166, column: 33, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3179, file: !3, line: 165, column: 14)
!3183 = !DILocation(line: 166, column: 37, scope: !3182)
!3184 = !DILocation(line: 167, column: 32, scope: !3182)
!3185 = !DILocation(line: 167, column: 36, scope: !3182)
!3186 = !DILocation(line: 167, column: 48, scope: !3182)
!3187 = !DILocation(line: 166, column: 11, scope: !3182)
!3188 = !DILocation(line: 166, column: 9, scope: !3182)
!3189 = !DILocation(line: 168, column: 30, scope: !3182)
!3190 = !DILocation(line: 168, column: 34, scope: !3182)
!3191 = !DILocation(line: 168, column: 3, scope: !3182)
!3192 = !DILocation(line: 169, column: 3, scope: !3182)
!3193 = !DILocation(line: 169, column: 7, scope: !3182)
!3194 = !DILocation(line: 169, column: 21, scope: !3182)
!3195 = !DILocation(line: 169, column: 25, scope: !3182)
!3196 = !DILocation(line: 170, column: 2, scope: !3182)
!3197 = !DILocation(line: 172, column: 9, scope: !3166)
!3198 = !DILocation(line: 172, column: 2, scope: !3166)
!3199 = distinct !DISubprogram(name: "dm_dupVertArray", scope: !3, file: !3, line: 175, type: !3030, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3200 = !DILocalVariable(name: "dm", arg: 1, scope: !3199, file: !3, line: 175, type: !2108)
!3201 = !DILocation(line: 175, column: 44, scope: !3199)
!3202 = !DILocalVariable(name: "tmp", scope: !3199, file: !3, line: 177, type: !2812)
!3203 = !DILocation(line: 177, column: 9, scope: !3199)
!3204 = !DILocation(line: 177, column: 15, scope: !3199)
!3205 = !DILocation(line: 177, column: 42, scope: !3199)
!3206 = !DILocation(line: 177, column: 46, scope: !3199)
!3207 = !DILocation(line: 177, column: 58, scope: !3199)
!3208 = !DILocation(line: 177, column: 40, scope: !3199)
!3209 = !DILocation(line: 180, column: 6, scope: !3210)
!3210 = distinct !DILexicalBlock(scope: !3199, file: !3, line: 180, column: 6)
!3211 = !DILocation(line: 180, column: 6, scope: !3199)
!3212 = !DILocation(line: 180, column: 11, scope: !3210)
!3213 = !DILocation(line: 180, column: 15, scope: !3210)
!3214 = !DILocation(line: 180, column: 29, scope: !3210)
!3215 = !DILocation(line: 180, column: 33, scope: !3210)
!3216 = !DILocation(line: 182, column: 9, scope: !3199)
!3217 = !DILocation(line: 182, column: 2, scope: !3199)
!3218 = distinct !DISubprogram(name: "dm_dupEdgeArray", scope: !3, file: !3, line: 185, type: !3061, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3219 = !DILocalVariable(name: "dm", arg: 1, scope: !3218, file: !3, line: 185, type: !2108)
!3220 = !DILocation(line: 185, column: 44, scope: !3218)
!3221 = !DILocalVariable(name: "tmp", scope: !3218, file: !3, line: 187, type: !3063)
!3222 = !DILocation(line: 187, column: 9, scope: !3218)
!3223 = !DILocation(line: 187, column: 15, scope: !3218)
!3224 = !DILocation(line: 187, column: 42, scope: !3218)
!3225 = !DILocation(line: 187, column: 46, scope: !3218)
!3226 = !DILocation(line: 187, column: 58, scope: !3218)
!3227 = !DILocation(line: 187, column: 40, scope: !3218)
!3228 = !DILocation(line: 190, column: 6, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3218, file: !3, line: 190, column: 6)
!3230 = !DILocation(line: 190, column: 6, scope: !3218)
!3231 = !DILocation(line: 190, column: 11, scope: !3229)
!3232 = !DILocation(line: 190, column: 15, scope: !3229)
!3233 = !DILocation(line: 190, column: 29, scope: !3229)
!3234 = !DILocation(line: 190, column: 33, scope: !3229)
!3235 = !DILocation(line: 192, column: 9, scope: !3218)
!3236 = !DILocation(line: 192, column: 2, scope: !3218)
!3237 = distinct !DISubprogram(name: "dm_dupFaceArray", scope: !3, file: !3, line: 195, type: !3094, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3238 = !DILocalVariable(name: "dm", arg: 1, scope: !3237, file: !3, line: 195, type: !2108)
!3239 = !DILocation(line: 195, column: 44, scope: !3237)
!3240 = !DILocalVariable(name: "tmp", scope: !3237, file: !3, line: 197, type: !304)
!3241 = !DILocation(line: 197, column: 9, scope: !3237)
!3242 = !DILocation(line: 197, column: 15, scope: !3237)
!3243 = !DILocation(line: 197, column: 42, scope: !3237)
!3244 = !DILocation(line: 197, column: 46, scope: !3237)
!3245 = !DILocation(line: 197, column: 62, scope: !3237)
!3246 = !DILocation(line: 197, column: 40, scope: !3237)
!3247 = !DILocation(line: 200, column: 6, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 200, column: 6)
!3249 = !DILocation(line: 200, column: 6, scope: !3237)
!3250 = !DILocation(line: 200, column: 11, scope: !3248)
!3251 = !DILocation(line: 200, column: 15, scope: !3248)
!3252 = !DILocation(line: 200, column: 33, scope: !3248)
!3253 = !DILocation(line: 200, column: 37, scope: !3248)
!3254 = !DILocation(line: 202, column: 9, scope: !3237)
!3255 = !DILocation(line: 202, column: 2, scope: !3237)
!3256 = distinct !DISubprogram(name: "dm_dupLoopArray", scope: !3, file: !3, line: 205, type: !3134, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3257 = !DILocalVariable(name: "dm", arg: 1, scope: !3256, file: !3, line: 205, type: !2108)
!3258 = !DILocation(line: 205, column: 44, scope: !3256)
!3259 = !DILocalVariable(name: "tmp", scope: !3256, file: !3, line: 207, type: !3136)
!3260 = !DILocation(line: 207, column: 9, scope: !3256)
!3261 = !DILocation(line: 207, column: 15, scope: !3256)
!3262 = !DILocation(line: 207, column: 42, scope: !3256)
!3263 = !DILocation(line: 207, column: 46, scope: !3256)
!3264 = !DILocation(line: 207, column: 58, scope: !3256)
!3265 = !DILocation(line: 207, column: 40, scope: !3256)
!3266 = !DILocation(line: 210, column: 6, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3256, file: !3, line: 210, column: 6)
!3268 = !DILocation(line: 210, column: 6, scope: !3256)
!3269 = !DILocation(line: 210, column: 11, scope: !3267)
!3270 = !DILocation(line: 210, column: 15, scope: !3267)
!3271 = !DILocation(line: 210, column: 29, scope: !3267)
!3272 = !DILocation(line: 210, column: 33, scope: !3267)
!3273 = !DILocation(line: 212, column: 9, scope: !3256)
!3274 = !DILocation(line: 212, column: 2, scope: !3256)
!3275 = distinct !DISubprogram(name: "dm_dupPolyArray", scope: !3, file: !3, line: 215, type: !3167, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3276 = !DILocalVariable(name: "dm", arg: 1, scope: !3275, file: !3, line: 215, type: !2108)
!3277 = !DILocation(line: 215, column: 44, scope: !3275)
!3278 = !DILocalVariable(name: "tmp", scope: !3275, file: !3, line: 217, type: !3169)
!3279 = !DILocation(line: 217, column: 9, scope: !3275)
!3280 = !DILocation(line: 217, column: 15, scope: !3275)
!3281 = !DILocation(line: 217, column: 42, scope: !3275)
!3282 = !DILocation(line: 217, column: 46, scope: !3275)
!3283 = !DILocation(line: 217, column: 58, scope: !3275)
!3284 = !DILocation(line: 217, column: 40, scope: !3275)
!3285 = !DILocation(line: 220, column: 6, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3275, file: !3, line: 220, column: 6)
!3287 = !DILocation(line: 220, column: 6, scope: !3275)
!3288 = !DILocation(line: 220, column: 11, scope: !3286)
!3289 = !DILocation(line: 220, column: 15, scope: !3286)
!3290 = !DILocation(line: 220, column: 29, scope: !3286)
!3291 = !DILocation(line: 220, column: 33, scope: !3286)
!3292 = !DILocation(line: 222, column: 9, scope: !3275)
!3293 = !DILocation(line: 222, column: 2, scope: !3275)
!3294 = distinct !DISubprogram(name: "dm_getVertCData", scope: !3, file: !3, line: 225, type: !2207, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3295 = !DILocalVariable(name: "dm", arg: 1, scope: !3294, file: !3, line: 225, type: !2108)
!3296 = !DILocation(line: 225, column: 49, scope: !3294)
!3297 = !DILocation(line: 227, column: 10, scope: !3294)
!3298 = !DILocation(line: 227, column: 14, scope: !3294)
!3299 = !DILocation(line: 227, column: 2, scope: !3294)
!3300 = distinct !DISubprogram(name: "dm_getEdgeCData", scope: !3, file: !3, line: 230, type: !2207, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3301 = !DILocalVariable(name: "dm", arg: 1, scope: !3300, file: !3, line: 230, type: !2108)
!3302 = !DILocation(line: 230, column: 49, scope: !3300)
!3303 = !DILocation(line: 232, column: 10, scope: !3300)
!3304 = !DILocation(line: 232, column: 14, scope: !3300)
!3305 = !DILocation(line: 232, column: 2, scope: !3300)
!3306 = distinct !DISubprogram(name: "dm_getTessFaceCData", scope: !3, file: !3, line: 235, type: !2207, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3307 = !DILocalVariable(name: "dm", arg: 1, scope: !3306, file: !3, line: 235, type: !2108)
!3308 = !DILocation(line: 235, column: 53, scope: !3306)
!3309 = !DILocation(line: 237, column: 10, scope: !3306)
!3310 = !DILocation(line: 237, column: 14, scope: !3306)
!3311 = !DILocation(line: 237, column: 2, scope: !3306)
!3312 = distinct !DISubprogram(name: "dm_getLoopCData", scope: !3, file: !3, line: 240, type: !2207, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3313 = !DILocalVariable(name: "dm", arg: 1, scope: !3312, file: !3, line: 240, type: !2108)
!3314 = !DILocation(line: 240, column: 49, scope: !3312)
!3315 = !DILocation(line: 242, column: 10, scope: !3312)
!3316 = !DILocation(line: 242, column: 14, scope: !3312)
!3317 = !DILocation(line: 242, column: 2, scope: !3312)
!3318 = distinct !DISubprogram(name: "dm_getPolyCData", scope: !3, file: !3, line: 245, type: !2207, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3319 = !DILocalVariable(name: "dm", arg: 1, scope: !3318, file: !3, line: 245, type: !2108)
!3320 = !DILocation(line: 245, column: 49, scope: !3318)
!3321 = !DILocation(line: 247, column: 10, scope: !3318)
!3322 = !DILocation(line: 247, column: 14, scope: !3318)
!3323 = !DILocation(line: 247, column: 2, scope: !3318)
!3324 = distinct !DISubprogram(name: "DM_get_vert_data", scope: !3, file: !3, line: 707, type: !2192, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3325 = !DILocalVariable(name: "dm", arg: 1, scope: !3324, file: !3, line: 707, type: !2108)
!3326 = !DILocation(line: 707, column: 37, scope: !3324)
!3327 = !DILocalVariable(name: "index", arg: 2, scope: !3324, file: !3, line: 707, type: !156)
!3328 = !DILocation(line: 707, column: 45, scope: !3324)
!3329 = !DILocalVariable(name: "type", arg: 3, scope: !3324, file: !3, line: 707, type: !156)
!3330 = !DILocation(line: 707, column: 56, scope: !3324)
!3331 = !DILocation(line: 710, column: 25, scope: !3324)
!3332 = !DILocation(line: 710, column: 29, scope: !3324)
!3333 = !DILocation(line: 710, column: 39, scope: !3324)
!3334 = !DILocation(line: 710, column: 46, scope: !3324)
!3335 = !DILocation(line: 710, column: 9, scope: !3324)
!3336 = !DILocation(line: 710, column: 2, scope: !3324)
!3337 = distinct !DISubprogram(name: "DM_get_edge_data", scope: !3, file: !3, line: 713, type: !2192, scopeLine: 714, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3338 = !DILocalVariable(name: "dm", arg: 1, scope: !3337, file: !3, line: 713, type: !2108)
!3339 = !DILocation(line: 713, column: 37, scope: !3337)
!3340 = !DILocalVariable(name: "index", arg: 2, scope: !3337, file: !3, line: 713, type: !156)
!3341 = !DILocation(line: 713, column: 45, scope: !3337)
!3342 = !DILocalVariable(name: "type", arg: 3, scope: !3337, file: !3, line: 713, type: !156)
!3343 = !DILocation(line: 713, column: 56, scope: !3337)
!3344 = !DILocation(line: 716, column: 25, scope: !3337)
!3345 = !DILocation(line: 716, column: 29, scope: !3337)
!3346 = !DILocation(line: 716, column: 39, scope: !3337)
!3347 = !DILocation(line: 716, column: 46, scope: !3337)
!3348 = !DILocation(line: 716, column: 9, scope: !3337)
!3349 = !DILocation(line: 716, column: 2, scope: !3337)
!3350 = distinct !DISubprogram(name: "DM_get_tessface_data", scope: !3, file: !3, line: 719, type: !2192, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3351 = !DILocalVariable(name: "dm", arg: 1, scope: !3350, file: !3, line: 719, type: !2108)
!3352 = !DILocation(line: 719, column: 41, scope: !3350)
!3353 = !DILocalVariable(name: "index", arg: 2, scope: !3350, file: !3, line: 719, type: !156)
!3354 = !DILocation(line: 719, column: 49, scope: !3350)
!3355 = !DILocalVariable(name: "type", arg: 3, scope: !3350, file: !3, line: 719, type: !156)
!3356 = !DILocation(line: 719, column: 60, scope: !3350)
!3357 = !DILocation(line: 722, column: 25, scope: !3350)
!3358 = !DILocation(line: 722, column: 29, scope: !3350)
!3359 = !DILocation(line: 722, column: 39, scope: !3350)
!3360 = !DILocation(line: 722, column: 46, scope: !3350)
!3361 = !DILocation(line: 722, column: 9, scope: !3350)
!3362 = !DILocation(line: 722, column: 2, scope: !3350)
!3363 = distinct !DISubprogram(name: "DM_get_poly_data", scope: !3, file: !3, line: 725, type: !2192, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3364 = !DILocalVariable(name: "dm", arg: 1, scope: !3363, file: !3, line: 725, type: !2108)
!3365 = !DILocation(line: 725, column: 37, scope: !3363)
!3366 = !DILocalVariable(name: "index", arg: 2, scope: !3363, file: !3, line: 725, type: !156)
!3367 = !DILocation(line: 725, column: 45, scope: !3363)
!3368 = !DILocalVariable(name: "type", arg: 3, scope: !3363, file: !3, line: 725, type: !156)
!3369 = !DILocation(line: 725, column: 56, scope: !3363)
!3370 = !DILocation(line: 728, column: 25, scope: !3363)
!3371 = !DILocation(line: 728, column: 29, scope: !3363)
!3372 = !DILocation(line: 728, column: 39, scope: !3363)
!3373 = !DILocation(line: 728, column: 46, scope: !3363)
!3374 = !DILocation(line: 728, column: 9, scope: !3363)
!3375 = !DILocation(line: 728, column: 2, scope: !3363)
!3376 = distinct !DISubprogram(name: "DM_get_vert_data_layer", scope: !3, file: !3, line: 732, type: !2199, scopeLine: 733, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3377 = !DILocalVariable(name: "dm", arg: 1, scope: !3376, file: !3, line: 732, type: !2108)
!3378 = !DILocation(line: 732, column: 43, scope: !3376)
!3379 = !DILocalVariable(name: "type", arg: 2, scope: !3376, file: !3, line: 732, type: !156)
!3380 = !DILocation(line: 732, column: 51, scope: !3376)
!3381 = !DILocation(line: 734, column: 6, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3376, file: !3, line: 734, column: 6)
!3383 = !DILocation(line: 734, column: 11, scope: !3382)
!3384 = !DILocation(line: 734, column: 6, scope: !3376)
!3385 = !DILocation(line: 735, column: 10, scope: !3382)
!3386 = !DILocation(line: 735, column: 14, scope: !3382)
!3387 = !DILocation(line: 735, column: 27, scope: !3382)
!3388 = !DILocation(line: 735, column: 3, scope: !3382)
!3389 = !DILocation(line: 737, column: 31, scope: !3376)
!3390 = !DILocation(line: 737, column: 35, scope: !3376)
!3391 = !DILocation(line: 737, column: 45, scope: !3376)
!3392 = !DILocation(line: 737, column: 9, scope: !3376)
!3393 = !DILocation(line: 737, column: 2, scope: !3376)
!3394 = !DILocation(line: 738, column: 1, scope: !3376)
!3395 = distinct !DISubprogram(name: "DM_get_edge_data_layer", scope: !3, file: !3, line: 740, type: !2199, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3396 = !DILocalVariable(name: "dm", arg: 1, scope: !3395, file: !3, line: 740, type: !2108)
!3397 = !DILocation(line: 740, column: 43, scope: !3395)
!3398 = !DILocalVariable(name: "type", arg: 2, scope: !3395, file: !3, line: 740, type: !156)
!3399 = !DILocation(line: 740, column: 51, scope: !3395)
!3400 = !DILocation(line: 742, column: 6, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3395, file: !3, line: 742, column: 6)
!3402 = !DILocation(line: 742, column: 11, scope: !3401)
!3403 = !DILocation(line: 742, column: 6, scope: !3395)
!3404 = !DILocation(line: 743, column: 10, scope: !3401)
!3405 = !DILocation(line: 743, column: 14, scope: !3401)
!3406 = !DILocation(line: 743, column: 27, scope: !3401)
!3407 = !DILocation(line: 743, column: 3, scope: !3401)
!3408 = !DILocation(line: 745, column: 31, scope: !3395)
!3409 = !DILocation(line: 745, column: 35, scope: !3395)
!3410 = !DILocation(line: 745, column: 45, scope: !3395)
!3411 = !DILocation(line: 745, column: 9, scope: !3395)
!3412 = !DILocation(line: 745, column: 2, scope: !3395)
!3413 = !DILocation(line: 746, column: 1, scope: !3395)
!3414 = distinct !DISubprogram(name: "DM_get_tessface_data_layer", scope: !3, file: !3, line: 748, type: !2199, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3415 = !DILocalVariable(name: "dm", arg: 1, scope: !3414, file: !3, line: 748, type: !2108)
!3416 = !DILocation(line: 748, column: 47, scope: !3414)
!3417 = !DILocalVariable(name: "type", arg: 2, scope: !3414, file: !3, line: 748, type: !156)
!3418 = !DILocation(line: 748, column: 55, scope: !3414)
!3419 = !DILocation(line: 750, column: 6, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 750, column: 6)
!3421 = !DILocation(line: 750, column: 11, scope: !3420)
!3422 = !DILocation(line: 750, column: 6, scope: !3414)
!3423 = !DILocation(line: 751, column: 10, scope: !3420)
!3424 = !DILocation(line: 751, column: 14, scope: !3420)
!3425 = !DILocation(line: 751, column: 31, scope: !3420)
!3426 = !DILocation(line: 751, column: 3, scope: !3420)
!3427 = !DILocation(line: 753, column: 31, scope: !3414)
!3428 = !DILocation(line: 753, column: 35, scope: !3414)
!3429 = !DILocation(line: 753, column: 45, scope: !3414)
!3430 = !DILocation(line: 753, column: 9, scope: !3414)
!3431 = !DILocation(line: 753, column: 2, scope: !3414)
!3432 = !DILocation(line: 754, column: 1, scope: !3414)
!3433 = distinct !DISubprogram(name: "DM_get_poly_data_layer", scope: !3, file: !3, line: 756, type: !2199, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3434 = !DILocalVariable(name: "dm", arg: 1, scope: !3433, file: !3, line: 756, type: !2108)
!3435 = !DILocation(line: 756, column: 43, scope: !3433)
!3436 = !DILocalVariable(name: "type", arg: 2, scope: !3433, file: !3, line: 756, type: !156)
!3437 = !DILocation(line: 756, column: 51, scope: !3433)
!3438 = !DILocation(line: 758, column: 31, scope: !3433)
!3439 = !DILocation(line: 758, column: 35, scope: !3433)
!3440 = !DILocation(line: 758, column: 45, scope: !3433)
!3441 = !DILocation(line: 758, column: 9, scope: !3433)
!3442 = !DILocation(line: 758, column: 2, scope: !3433)
!3443 = distinct !DISubprogram(name: "DM_get_loop_data_layer", scope: !3, file: !3, line: 761, type: !2199, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3444 = !DILocalVariable(name: "dm", arg: 1, scope: !3443, file: !3, line: 761, type: !2108)
!3445 = !DILocation(line: 761, column: 43, scope: !3443)
!3446 = !DILocalVariable(name: "type", arg: 2, scope: !3443, file: !3, line: 761, type: !156)
!3447 = !DILocation(line: 761, column: 51, scope: !3443)
!3448 = !DILocation(line: 763, column: 31, scope: !3443)
!3449 = !DILocation(line: 763, column: 35, scope: !3443)
!3450 = !DILocation(line: 763, column: 45, scope: !3443)
!3451 = !DILocation(line: 763, column: 9, scope: !3443)
!3452 = !DILocation(line: 763, column: 2, scope: !3443)
!3453 = distinct !DISubprogram(name: "DM_init", scope: !3, file: !3, line: 283, type: !3454, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3454 = !DISubroutineType(types: !3455)
!3455 = !{null, !2108, !2097, !156, !156, !156, !156, !156}
!3456 = !DILocalVariable(name: "dm", arg: 1, scope: !3453, file: !3, line: 283, type: !2108)
!3457 = !DILocation(line: 283, column: 27, scope: !3453)
!3458 = !DILocalVariable(name: "type", arg: 2, scope: !3453, file: !3, line: 283, type: !2097)
!3459 = !DILocation(line: 283, column: 47, scope: !3453)
!3460 = !DILocalVariable(name: "numVerts", arg: 3, scope: !3453, file: !3, line: 283, type: !156)
!3461 = !DILocation(line: 283, column: 57, scope: !3453)
!3462 = !DILocalVariable(name: "numEdges", arg: 4, scope: !3453, file: !3, line: 283, type: !156)
!3463 = !DILocation(line: 283, column: 71, scope: !3453)
!3464 = !DILocalVariable(name: "numTessFaces", arg: 5, scope: !3453, file: !3, line: 284, type: !156)
!3465 = !DILocation(line: 284, column: 18, scope: !3453)
!3466 = !DILocalVariable(name: "numLoops", arg: 6, scope: !3453, file: !3, line: 284, type: !156)
!3467 = !DILocation(line: 284, column: 36, scope: !3453)
!3468 = !DILocalVariable(name: "numPolys", arg: 7, scope: !3453, file: !3, line: 284, type: !156)
!3469 = !DILocation(line: 284, column: 50, scope: !3453)
!3470 = !DILocation(line: 286, column: 13, scope: !3453)
!3471 = !DILocation(line: 286, column: 2, scope: !3453)
!3472 = !DILocation(line: 286, column: 6, scope: !3453)
!3473 = !DILocation(line: 286, column: 11, scope: !3453)
!3474 = !DILocation(line: 287, column: 20, scope: !3453)
!3475 = !DILocation(line: 287, column: 2, scope: !3453)
!3476 = !DILocation(line: 287, column: 6, scope: !3453)
!3477 = !DILocation(line: 287, column: 18, scope: !3453)
!3478 = !DILocation(line: 288, column: 20, scope: !3453)
!3479 = !DILocation(line: 288, column: 2, scope: !3453)
!3480 = !DILocation(line: 288, column: 6, scope: !3453)
!3481 = !DILocation(line: 288, column: 18, scope: !3453)
!3482 = !DILocation(line: 289, column: 24, scope: !3453)
!3483 = !DILocation(line: 289, column: 2, scope: !3453)
!3484 = !DILocation(line: 289, column: 6, scope: !3453)
!3485 = !DILocation(line: 289, column: 22, scope: !3453)
!3486 = !DILocation(line: 290, column: 20, scope: !3453)
!3487 = !DILocation(line: 290, column: 2, scope: !3453)
!3488 = !DILocation(line: 290, column: 6, scope: !3453)
!3489 = !DILocation(line: 290, column: 18, scope: !3453)
!3490 = !DILocation(line: 291, column: 20, scope: !3453)
!3491 = !DILocation(line: 291, column: 2, scope: !3453)
!3492 = !DILocation(line: 291, column: 6, scope: !3453)
!3493 = !DILocation(line: 291, column: 18, scope: !3453)
!3494 = !DILocation(line: 293, column: 16, scope: !3453)
!3495 = !DILocation(line: 293, column: 2, scope: !3453)
!3496 = !DILocation(line: 295, column: 2, scope: !3453)
!3497 = !DILocation(line: 295, column: 6, scope: !3453)
!3498 = !DILocation(line: 295, column: 16, scope: !3453)
!3499 = !DILocation(line: 296, column: 2, scope: !3453)
!3500 = !DILocation(line: 296, column: 6, scope: !3453)
!3501 = !DILocation(line: 296, column: 22, scope: !3453)
!3502 = !DILocation(line: 297, column: 2, scope: !3453)
!3503 = !DILocation(line: 297, column: 6, scope: !3453)
!3504 = !DILocation(line: 297, column: 12, scope: !3453)
!3505 = !DILocation(line: 300, column: 12, scope: !3453)
!3506 = !DILocation(line: 300, column: 16, scope: !3453)
!3507 = !DILocation(line: 300, column: 25, scope: !3453)
!3508 = !DILocation(line: 300, column: 2, scope: !3453)
!3509 = !DILocation(line: 301, column: 12, scope: !3453)
!3510 = !DILocation(line: 301, column: 16, scope: !3453)
!3511 = !DILocation(line: 301, column: 25, scope: !3453)
!3512 = !DILocation(line: 301, column: 2, scope: !3453)
!3513 = !DILocation(line: 302, column: 12, scope: !3453)
!3514 = !DILocation(line: 302, column: 16, scope: !3453)
!3515 = !DILocation(line: 302, column: 25, scope: !3453)
!3516 = !DILocation(line: 302, column: 2, scope: !3453)
!3517 = !DILocation(line: 303, column: 12, scope: !3453)
!3518 = !DILocation(line: 303, column: 16, scope: !3453)
!3519 = !DILocation(line: 303, column: 25, scope: !3453)
!3520 = !DILocation(line: 303, column: 2, scope: !3453)
!3521 = !DILocation(line: 304, column: 12, scope: !3453)
!3522 = !DILocation(line: 304, column: 16, scope: !3453)
!3523 = !DILocation(line: 304, column: 25, scope: !3453)
!3524 = !DILocation(line: 304, column: 2, scope: !3453)
!3525 = !DILocation(line: 305, column: 1, scope: !3453)
!3526 = distinct !DISubprogram(name: "DM_from_template", scope: !3, file: !3, line: 307, type: !3527, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3527 = !DISubroutineType(types: !3528)
!3528 = !{null, !2108, !2108, !2097, !156, !156, !156, !156, !156}
!3529 = !DILocalVariable(name: "dm", arg: 1, scope: !3526, file: !3, line: 307, type: !2108)
!3530 = !DILocation(line: 307, column: 36, scope: !3526)
!3531 = !DILocalVariable(name: "source", arg: 2, scope: !3526, file: !3, line: 307, type: !2108)
!3532 = !DILocation(line: 307, column: 53, scope: !3526)
!3533 = !DILocalVariable(name: "type", arg: 3, scope: !3526, file: !3, line: 307, type: !2097)
!3534 = !DILocation(line: 307, column: 77, scope: !3526)
!3535 = !DILocalVariable(name: "numVerts", arg: 4, scope: !3526, file: !3, line: 308, type: !156)
!3536 = !DILocation(line: 308, column: 27, scope: !3526)
!3537 = !DILocalVariable(name: "numEdges", arg: 5, scope: !3526, file: !3, line: 308, type: !156)
!3538 = !DILocation(line: 308, column: 41, scope: !3526)
!3539 = !DILocalVariable(name: "numTessFaces", arg: 6, scope: !3526, file: !3, line: 308, type: !156)
!3540 = !DILocation(line: 308, column: 55, scope: !3526)
!3541 = !DILocalVariable(name: "numLoops", arg: 7, scope: !3526, file: !3, line: 309, type: !156)
!3542 = !DILocation(line: 309, column: 27, scope: !3526)
!3543 = !DILocalVariable(name: "numPolys", arg: 8, scope: !3526, file: !3, line: 309, type: !156)
!3544 = !DILocation(line: 309, column: 41, scope: !3526)
!3545 = !DILocation(line: 311, column: 19, scope: !3526)
!3546 = !DILocation(line: 311, column: 27, scope: !3526)
!3547 = !DILocation(line: 311, column: 38, scope: !3526)
!3548 = !DILocation(line: 311, column: 42, scope: !3526)
!3549 = !DILocation(line: 311, column: 52, scope: !3526)
!3550 = !DILocation(line: 312, column: 29, scope: !3526)
!3551 = !DILocation(line: 311, column: 2, scope: !3526)
!3552 = !DILocation(line: 313, column: 19, scope: !3526)
!3553 = !DILocation(line: 313, column: 27, scope: !3526)
!3554 = !DILocation(line: 313, column: 38, scope: !3526)
!3555 = !DILocation(line: 313, column: 42, scope: !3526)
!3556 = !DILocation(line: 313, column: 52, scope: !3526)
!3557 = !DILocation(line: 314, column: 29, scope: !3526)
!3558 = !DILocation(line: 313, column: 2, scope: !3526)
!3559 = !DILocation(line: 315, column: 19, scope: !3526)
!3560 = !DILocation(line: 315, column: 27, scope: !3526)
!3561 = !DILocation(line: 315, column: 38, scope: !3526)
!3562 = !DILocation(line: 315, column: 42, scope: !3526)
!3563 = !DILocation(line: 315, column: 52, scope: !3526)
!3564 = !DILocation(line: 316, column: 29, scope: !3526)
!3565 = !DILocation(line: 315, column: 2, scope: !3526)
!3566 = !DILocation(line: 317, column: 19, scope: !3526)
!3567 = !DILocation(line: 317, column: 27, scope: !3526)
!3568 = !DILocation(line: 317, column: 38, scope: !3526)
!3569 = !DILocation(line: 317, column: 42, scope: !3526)
!3570 = !DILocation(line: 317, column: 52, scope: !3526)
!3571 = !DILocation(line: 318, column: 29, scope: !3526)
!3572 = !DILocation(line: 317, column: 2, scope: !3526)
!3573 = !DILocation(line: 319, column: 19, scope: !3526)
!3574 = !DILocation(line: 319, column: 27, scope: !3526)
!3575 = !DILocation(line: 319, column: 38, scope: !3526)
!3576 = !DILocation(line: 319, column: 42, scope: !3526)
!3577 = !DILocation(line: 319, column: 52, scope: !3526)
!3578 = !DILocation(line: 320, column: 29, scope: !3526)
!3579 = !DILocation(line: 319, column: 2, scope: !3526)
!3580 = !DILocation(line: 322, column: 16, scope: !3526)
!3581 = !DILocation(line: 322, column: 24, scope: !3526)
!3582 = !DILocation(line: 322, column: 2, scope: !3526)
!3583 = !DILocation(line: 322, column: 6, scope: !3526)
!3584 = !DILocation(line: 322, column: 14, scope: !3526)
!3585 = !DILocation(line: 324, column: 13, scope: !3526)
!3586 = !DILocation(line: 324, column: 2, scope: !3526)
!3587 = !DILocation(line: 324, column: 6, scope: !3526)
!3588 = !DILocation(line: 324, column: 11, scope: !3526)
!3589 = !DILocation(line: 325, column: 20, scope: !3526)
!3590 = !DILocation(line: 325, column: 2, scope: !3526)
!3591 = !DILocation(line: 325, column: 6, scope: !3526)
!3592 = !DILocation(line: 325, column: 18, scope: !3526)
!3593 = !DILocation(line: 326, column: 20, scope: !3526)
!3594 = !DILocation(line: 326, column: 2, scope: !3526)
!3595 = !DILocation(line: 326, column: 6, scope: !3526)
!3596 = !DILocation(line: 326, column: 18, scope: !3526)
!3597 = !DILocation(line: 327, column: 24, scope: !3526)
!3598 = !DILocation(line: 327, column: 2, scope: !3526)
!3599 = !DILocation(line: 327, column: 6, scope: !3526)
!3600 = !DILocation(line: 327, column: 22, scope: !3526)
!3601 = !DILocation(line: 328, column: 20, scope: !3526)
!3602 = !DILocation(line: 328, column: 2, scope: !3526)
!3603 = !DILocation(line: 328, column: 6, scope: !3526)
!3604 = !DILocation(line: 328, column: 18, scope: !3526)
!3605 = !DILocation(line: 329, column: 20, scope: !3526)
!3606 = !DILocation(line: 329, column: 2, scope: !3526)
!3607 = !DILocation(line: 329, column: 6, scope: !3526)
!3608 = !DILocation(line: 329, column: 18, scope: !3526)
!3609 = !DILocation(line: 331, column: 16, scope: !3526)
!3610 = !DILocation(line: 331, column: 2, scope: !3526)
!3611 = !DILocation(line: 333, column: 2, scope: !3526)
!3612 = !DILocation(line: 333, column: 6, scope: !3526)
!3613 = !DILocation(line: 333, column: 16, scope: !3526)
!3614 = !DILocation(line: 334, column: 2, scope: !3526)
!3615 = !DILocation(line: 334, column: 6, scope: !3526)
!3616 = !DILocation(line: 334, column: 12, scope: !3526)
!3617 = !DILocation(line: 335, column: 1, scope: !3526)
!3618 = distinct !DISubprogram(name: "DM_release", scope: !3, file: !3, line: 337, type: !2118, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3619 = !DILocalVariable(name: "dm", arg: 1, scope: !3618, file: !3, line: 337, type: !2108)
!3620 = !DILocation(line: 337, column: 29, scope: !3618)
!3621 = !DILocation(line: 339, column: 6, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3618, file: !3, line: 339, column: 6)
!3623 = !DILocation(line: 339, column: 10, scope: !3622)
!3624 = !DILocation(line: 339, column: 6, scope: !3618)
!3625 = !DILocation(line: 340, column: 18, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3622, file: !3, line: 339, column: 21)
!3627 = !DILocation(line: 340, column: 22, scope: !3626)
!3628 = !DILocation(line: 340, column: 3, scope: !3626)
!3629 = !DILocation(line: 341, column: 23, scope: !3626)
!3630 = !DILocation(line: 341, column: 3, scope: !3626)
!3631 = !DILocation(line: 342, column: 20, scope: !3626)
!3632 = !DILocation(line: 342, column: 24, scope: !3626)
!3633 = !DILocation(line: 342, column: 34, scope: !3626)
!3634 = !DILocation(line: 342, column: 38, scope: !3626)
!3635 = !DILocation(line: 342, column: 3, scope: !3626)
!3636 = !DILocation(line: 343, column: 20, scope: !3626)
!3637 = !DILocation(line: 343, column: 24, scope: !3626)
!3638 = !DILocation(line: 343, column: 34, scope: !3626)
!3639 = !DILocation(line: 343, column: 38, scope: !3626)
!3640 = !DILocation(line: 343, column: 3, scope: !3626)
!3641 = !DILocation(line: 344, column: 20, scope: !3626)
!3642 = !DILocation(line: 344, column: 24, scope: !3626)
!3643 = !DILocation(line: 344, column: 34, scope: !3626)
!3644 = !DILocation(line: 344, column: 38, scope: !3626)
!3645 = !DILocation(line: 344, column: 3, scope: !3626)
!3646 = !DILocation(line: 345, column: 20, scope: !3626)
!3647 = !DILocation(line: 345, column: 24, scope: !3626)
!3648 = !DILocation(line: 345, column: 34, scope: !3626)
!3649 = !DILocation(line: 345, column: 38, scope: !3626)
!3650 = !DILocation(line: 345, column: 3, scope: !3626)
!3651 = !DILocation(line: 346, column: 20, scope: !3626)
!3652 = !DILocation(line: 346, column: 24, scope: !3626)
!3653 = !DILocation(line: 346, column: 34, scope: !3626)
!3654 = !DILocation(line: 346, column: 38, scope: !3626)
!3655 = !DILocation(line: 346, column: 3, scope: !3626)
!3656 = !DILocation(line: 348, column: 7, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3626, file: !3, line: 348, column: 7)
!3658 = !DILocation(line: 348, column: 11, scope: !3657)
!3659 = !DILocation(line: 348, column: 7, scope: !3626)
!3660 = !DILocation(line: 349, column: 4, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3657, file: !3, line: 348, column: 16)
!3662 = !DILocation(line: 349, column: 14, scope: !3661)
!3663 = !DILocation(line: 349, column: 18, scope: !3661)
!3664 = !DILocation(line: 350, column: 4, scope: !3661)
!3665 = !DILocation(line: 350, column: 8, scope: !3661)
!3666 = !DILocation(line: 350, column: 12, scope: !3661)
!3667 = !DILocation(line: 351, column: 4, scope: !3661)
!3668 = !DILocation(line: 351, column: 8, scope: !3661)
!3669 = !DILocation(line: 351, column: 15, scope: !3661)
!3670 = !DILocation(line: 352, column: 3, scope: !3661)
!3671 = !DILocation(line: 354, column: 3, scope: !3626)
!3672 = !DILocation(line: 357, column: 30, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3622, file: !3, line: 356, column: 7)
!3674 = !DILocation(line: 357, column: 34, scope: !3673)
!3675 = !DILocation(line: 357, column: 44, scope: !3673)
!3676 = !DILocation(line: 357, column: 48, scope: !3673)
!3677 = !DILocation(line: 357, column: 3, scope: !3673)
!3678 = !DILocation(line: 358, column: 30, scope: !3673)
!3679 = !DILocation(line: 358, column: 34, scope: !3673)
!3680 = !DILocation(line: 358, column: 44, scope: !3673)
!3681 = !DILocation(line: 358, column: 48, scope: !3673)
!3682 = !DILocation(line: 358, column: 3, scope: !3673)
!3683 = !DILocation(line: 359, column: 30, scope: !3673)
!3684 = !DILocation(line: 359, column: 34, scope: !3673)
!3685 = !DILocation(line: 359, column: 44, scope: !3673)
!3686 = !DILocation(line: 359, column: 48, scope: !3673)
!3687 = !DILocation(line: 359, column: 3, scope: !3673)
!3688 = !DILocation(line: 360, column: 30, scope: !3673)
!3689 = !DILocation(line: 360, column: 34, scope: !3673)
!3690 = !DILocation(line: 360, column: 44, scope: !3673)
!3691 = !DILocation(line: 360, column: 48, scope: !3673)
!3692 = !DILocation(line: 360, column: 3, scope: !3673)
!3693 = !DILocation(line: 361, column: 30, scope: !3673)
!3694 = !DILocation(line: 361, column: 34, scope: !3673)
!3695 = !DILocation(line: 361, column: 44, scope: !3673)
!3696 = !DILocation(line: 361, column: 48, scope: !3673)
!3697 = !DILocation(line: 361, column: 3, scope: !3673)
!3698 = !DILocation(line: 363, column: 3, scope: !3673)
!3699 = !DILocation(line: 365, column: 1, scope: !3618)
!3700 = distinct !DISubprogram(name: "DM_DupPolys", scope: !3, file: !3, line: 367, type: !3701, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3701 = !DISubroutineType(types: !3702)
!3702 = !{null, !2108, !2108}
!3703 = !DILocalVariable(name: "source", arg: 1, scope: !3700, file: !3, line: 367, type: !2108)
!3704 = !DILocation(line: 367, column: 31, scope: !3700)
!3705 = !DILocalVariable(name: "target", arg: 2, scope: !3700, file: !3, line: 367, type: !2108)
!3706 = !DILocation(line: 367, column: 52, scope: !3700)
!3707 = !DILocation(line: 369, column: 19, scope: !3700)
!3708 = !DILocation(line: 369, column: 27, scope: !3700)
!3709 = !DILocation(line: 369, column: 37, scope: !3700)
!3710 = !DILocation(line: 369, column: 45, scope: !3700)
!3711 = !DILocation(line: 369, column: 2, scope: !3700)
!3712 = !DILocation(line: 370, column: 19, scope: !3700)
!3713 = !DILocation(line: 370, column: 27, scope: !3700)
!3714 = !DILocation(line: 370, column: 37, scope: !3700)
!3715 = !DILocation(line: 370, column: 45, scope: !3700)
!3716 = !DILocation(line: 370, column: 2, scope: !3700)
!3717 = !DILocation(line: 372, column: 19, scope: !3700)
!3718 = !DILocation(line: 372, column: 27, scope: !3700)
!3719 = !DILocation(line: 372, column: 38, scope: !3700)
!3720 = !DILocation(line: 372, column: 46, scope: !3700)
!3721 = !DILocation(line: 372, column: 56, scope: !3700)
!3722 = !DILocation(line: 372, column: 91, scope: !3700)
!3723 = !DILocation(line: 372, column: 99, scope: !3700)
!3724 = !DILocation(line: 372, column: 2, scope: !3700)
!3725 = !DILocation(line: 373, column: 19, scope: !3700)
!3726 = !DILocation(line: 373, column: 27, scope: !3700)
!3727 = !DILocation(line: 373, column: 38, scope: !3700)
!3728 = !DILocation(line: 373, column: 46, scope: !3700)
!3729 = !DILocation(line: 373, column: 56, scope: !3700)
!3730 = !DILocation(line: 373, column: 91, scope: !3700)
!3731 = !DILocation(line: 373, column: 99, scope: !3700)
!3732 = !DILocation(line: 373, column: 2, scope: !3700)
!3733 = !DILocation(line: 375, column: 24, scope: !3700)
!3734 = !DILocation(line: 375, column: 32, scope: !3700)
!3735 = !DILocation(line: 375, column: 2, scope: !3700)
!3736 = !DILocation(line: 375, column: 10, scope: !3700)
!3737 = !DILocation(line: 375, column: 22, scope: !3700)
!3738 = !DILocation(line: 376, column: 24, scope: !3700)
!3739 = !DILocation(line: 376, column: 32, scope: !3700)
!3740 = !DILocation(line: 376, column: 2, scope: !3700)
!3741 = !DILocation(line: 376, column: 10, scope: !3700)
!3742 = !DILocation(line: 376, column: 22, scope: !3700)
!3743 = !DILocation(line: 378, column: 29, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3700, file: !3, line: 378, column: 6)
!3745 = !DILocation(line: 378, column: 37, scope: !3744)
!3746 = !DILocation(line: 378, column: 7, scope: !3744)
!3747 = !DILocation(line: 378, column: 6, scope: !3700)
!3748 = !DILocalVariable(name: "mpoly", scope: !3749, file: !3, line: 379, type: !3169)
!3749 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 378, column: 58)
!3750 = !DILocation(line: 379, column: 10, scope: !3749)
!3751 = !DILocalVariable(name: "mloop", scope: !3749, file: !3, line: 380, type: !3136)
!3752 = !DILocation(line: 380, column: 10, scope: !3749)
!3753 = !DILocation(line: 382, column: 11, scope: !3749)
!3754 = !DILocation(line: 382, column: 19, scope: !3749)
!3755 = !DILocation(line: 382, column: 32, scope: !3749)
!3756 = !DILocation(line: 382, column: 9, scope: !3749)
!3757 = !DILocation(line: 383, column: 11, scope: !3749)
!3758 = !DILocation(line: 383, column: 19, scope: !3749)
!3759 = !DILocation(line: 383, column: 32, scope: !3749)
!3760 = !DILocation(line: 383, column: 9, scope: !3749)
!3761 = !DILocation(line: 384, column: 25, scope: !3749)
!3762 = !DILocation(line: 384, column: 33, scope: !3749)
!3763 = !DILocation(line: 384, column: 64, scope: !3749)
!3764 = !DILocation(line: 384, column: 71, scope: !3749)
!3765 = !DILocation(line: 384, column: 79, scope: !3749)
!3766 = !DILocation(line: 384, column: 3, scope: !3749)
!3767 = !DILocation(line: 385, column: 25, scope: !3749)
!3768 = !DILocation(line: 385, column: 33, scope: !3749)
!3769 = !DILocation(line: 385, column: 64, scope: !3749)
!3770 = !DILocation(line: 385, column: 71, scope: !3749)
!3771 = !DILocation(line: 385, column: 79, scope: !3749)
!3772 = !DILocation(line: 385, column: 3, scope: !3749)
!3773 = !DILocation(line: 386, column: 2, scope: !3749)
!3774 = !DILocation(line: 387, column: 1, scope: !3700)
!3775 = distinct !DISubprogram(name: "DM_ensure_normals", scope: !3, file: !3, line: 389, type: !2106, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3776 = !DILocalVariable(name: "dm", arg: 1, scope: !3775, file: !3, line: 389, type: !2108)
!3777 = !DILocation(line: 389, column: 37, scope: !3775)
!3778 = !DILocation(line: 391, column: 6, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3775, file: !3, line: 391, column: 6)
!3780 = !DILocation(line: 391, column: 10, scope: !3779)
!3781 = !DILocation(line: 391, column: 16, scope: !3779)
!3782 = !DILocation(line: 391, column: 6, scope: !3775)
!3783 = !DILocation(line: 392, column: 3, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3779, file: !3, line: 391, column: 36)
!3785 = !DILocation(line: 392, column: 7, scope: !3784)
!3786 = !DILocation(line: 392, column: 19, scope: !3784)
!3787 = !DILocation(line: 393, column: 2, scope: !3784)
!3788 = !DILocation(line: 395, column: 1, scope: !3775)
!3789 = distinct !DISubprogram(name: "DM_ensure_tessface", scope: !3, file: !3, line: 405, type: !2106, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3790 = !DILocalVariable(name: "dm", arg: 1, scope: !3789, file: !3, line: 405, type: !2108)
!3791 = !DILocation(line: 405, column: 38, scope: !3789)
!3792 = !DILocalVariable(name: "numTessFaces", scope: !3789, file: !3, line: 407, type: !3793)
!3793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !156)
!3794 = !DILocation(line: 407, column: 12, scope: !3789)
!3795 = !DILocation(line: 407, column: 27, scope: !3789)
!3796 = !DILocation(line: 407, column: 31, scope: !3789)
!3797 = !DILocation(line: 407, column: 47, scope: !3789)
!3798 = !DILocalVariable(name: "numPolys", scope: !3789, file: !3, line: 408, type: !3793)
!3799 = !DILocation(line: 408, column: 12, scope: !3789)
!3800 = !DILocation(line: 408, column: 27, scope: !3789)
!3801 = !DILocation(line: 408, column: 31, scope: !3789)
!3802 = !DILocation(line: 408, column: 43, scope: !3789)
!3803 = !DILocation(line: 410, column: 7, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3789, file: !3, line: 410, column: 6)
!3805 = !DILocation(line: 410, column: 20, scope: !3804)
!3806 = !DILocation(line: 410, column: 26, scope: !3804)
!3807 = !DILocation(line: 410, column: 30, scope: !3804)
!3808 = !DILocation(line: 410, column: 39, scope: !3804)
!3809 = !DILocation(line: 410, column: 6, scope: !3789)
!3810 = !DILocation(line: 411, column: 3, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3804, file: !3, line: 410, column: 46)
!3812 = !DILocation(line: 411, column: 7, scope: !3811)
!3813 = !DILocation(line: 411, column: 26, scope: !3811)
!3814 = !DILocation(line: 413, column: 7, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3811, file: !3, line: 413, column: 7)
!3816 = !DILocation(line: 413, column: 11, scope: !3815)
!3817 = !DILocation(line: 413, column: 27, scope: !3815)
!3818 = !DILocation(line: 413, column: 31, scope: !3815)
!3819 = !DILocation(line: 413, column: 7, scope: !3811)
!3820 = !DILocation(line: 415, column: 3, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3815, file: !3, line: 413, column: 37)
!3822 = !DILocation(line: 418, column: 21, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3815, file: !3, line: 416, column: 8)
!3824 = !DILocation(line: 418, column: 31, scope: !3823)
!3825 = !DILocation(line: 418, column: 35, scope: !3823)
!3826 = !DILocation(line: 417, column: 4, scope: !3823)
!3827 = !DILocation(line: 420, column: 2, scope: !3811)
!3828 = !DILocation(line: 422, column: 11, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3804, file: !3, line: 422, column: 11)
!3830 = !DILocation(line: 422, column: 15, scope: !3829)
!3831 = !DILocation(line: 422, column: 21, scope: !3829)
!3832 = !DILocation(line: 422, column: 11, scope: !3804)
!3833 = !DILocation(line: 424, column: 27, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 422, column: 47)
!3835 = !DILocation(line: 424, column: 3, scope: !3834)
!3836 = !DILocation(line: 425, column: 2, scope: !3834)
!3837 = !DILocation(line: 427, column: 2, scope: !3789)
!3838 = !DILocation(line: 427, column: 6, scope: !3789)
!3839 = !DILocation(line: 427, column: 12, scope: !3789)
!3840 = !DILocation(line: 428, column: 1, scope: !3789)
!3841 = distinct !DISubprogram(name: "DM_update_tessface_data", scope: !3, file: !3, line: 432, type: !2106, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!3842 = !DILocalVariable(name: "dm", arg: 1, scope: !3841, file: !3, line: 432, type: !2108)
!3843 = !DILocation(line: 432, column: 43, scope: !3841)
!3844 = !DILocalVariable(name: "mf", scope: !3841, file: !3, line: 434, type: !304)
!3845 = !DILocation(line: 434, column: 9, scope: !3841)
!3846 = !DILocalVariable(name: "mface", scope: !3841, file: !3, line: 434, type: !304)
!3847 = !DILocation(line: 434, column: 14, scope: !3841)
!3848 = !DILocation(line: 434, column: 22, scope: !3841)
!3849 = !DILocation(line: 434, column: 26, scope: !3841)
!3850 = !DILocation(line: 434, column: 43, scope: !3841)
!3851 = !DILocalVariable(name: "mp", scope: !3841, file: !3, line: 435, type: !3169)
!3852 = !DILocation(line: 435, column: 9, scope: !3841)
!3853 = !DILocation(line: 435, column: 14, scope: !3841)
!3854 = !DILocation(line: 435, column: 18, scope: !3841)
!3855 = !DILocation(line: 435, column: 31, scope: !3841)
!3856 = !DILocalVariable(name: "ml", scope: !3841, file: !3, line: 436, type: !3136)
!3857 = !DILocation(line: 436, column: 9, scope: !3841)
!3858 = !DILocation(line: 436, column: 14, scope: !3841)
!3859 = !DILocation(line: 436, column: 18, scope: !3841)
!3860 = !DILocation(line: 436, column: 31, scope: !3841)
!3861 = !DILocalVariable(name: "fdata", scope: !3841, file: !3, line: 438, type: !2209)
!3862 = !DILocation(line: 438, column: 14, scope: !3841)
!3863 = !DILocation(line: 438, column: 22, scope: !3841)
!3864 = !DILocation(line: 438, column: 26, scope: !3841)
!3865 = !DILocation(line: 438, column: 48, scope: !3841)
!3866 = !DILocalVariable(name: "pdata", scope: !3841, file: !3, line: 439, type: !2209)
!3867 = !DILocation(line: 439, column: 14, scope: !3841)
!3868 = !DILocation(line: 439, column: 22, scope: !3841)
!3869 = !DILocation(line: 439, column: 26, scope: !3841)
!3870 = !DILocation(line: 439, column: 44, scope: !3841)
!3871 = !DILocalVariable(name: "ldata", scope: !3841, file: !3, line: 440, type: !2209)
!3872 = !DILocation(line: 440, column: 14, scope: !3841)
!3873 = !DILocation(line: 440, column: 22, scope: !3841)
!3874 = !DILocation(line: 440, column: 26, scope: !3841)
!3875 = !DILocation(line: 440, column: 44, scope: !3841)
!3876 = !DILocalVariable(name: "totface", scope: !3841, file: !3, line: 442, type: !3793)
!3877 = !DILocation(line: 442, column: 12, scope: !3841)
!3878 = !DILocation(line: 442, column: 22, scope: !3841)
!3879 = !DILocation(line: 442, column: 26, scope: !3841)
!3880 = !DILocation(line: 442, column: 42, scope: !3841)
!3881 = !DILocalVariable(name: "mf_idx", scope: !3841, file: !3, line: 443, type: !156)
!3882 = !DILocation(line: 443, column: 6, scope: !3841)
!3883 = !DILocalVariable(name: "polyindex", scope: !3841, file: !3, line: 445, type: !328)
!3884 = !DILocation(line: 445, column: 7, scope: !3841)
!3885 = !DILocation(line: 445, column: 40, scope: !3841)
!3886 = !DILocation(line: 445, column: 19, scope: !3841)
!3887 = !DILocalVariable(name: "loopindex", scope: !3841, file: !3, line: 446, type: !3888)
!3888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 64)
!3889 = !DILocation(line: 446, column: 17, scope: !3841)
!3890 = !DILocation(line: 449, column: 7, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3841, file: !3, line: 449, column: 6)
!3892 = !DILocation(line: 449, column: 6, scope: !3841)
!3893 = !DILocation(line: 450, column: 3, scope: !3891)
!3894 = !DILocation(line: 452, column: 28, scope: !3841)
!3895 = !DILocation(line: 452, column: 35, scope: !3841)
!3896 = !DILocation(line: 452, column: 42, scope: !3841)
!3897 = !DILocation(line: 452, column: 49, scope: !3841)
!3898 = !DILocation(line: 452, column: 2, scope: !3841)
!3899 = !DILocation(line: 454, column: 27, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3841, file: !3, line: 454, column: 6)
!3901 = !DILocation(line: 454, column: 6, scope: !3900)
!3902 = !DILocation(line: 454, column: 45, scope: !3900)
!3903 = !DILocation(line: 455, column: 27, scope: !3900)
!3904 = !DILocation(line: 455, column: 6, scope: !3900)
!3905 = !DILocation(line: 455, column: 43, scope: !3900)
!3906 = !DILocation(line: 456, column: 27, scope: !3900)
!3907 = !DILocation(line: 456, column: 6, scope: !3900)
!3908 = !DILocation(line: 456, column: 51, scope: !3900)
!3909 = !DILocation(line: 457, column: 27, scope: !3900)
!3910 = !DILocation(line: 457, column: 6, scope: !3900)
!3911 = !DILocation(line: 457, column: 48, scope: !3900)
!3912 = !DILocation(line: 458, column: 27, scope: !3900)
!3913 = !DILocation(line: 458, column: 6, scope: !3900)
!3914 = !DILocation(line: 454, column: 6, scope: !3841)
!3915 = !DILocation(line: 460, column: 15, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3900, file: !3, line: 459, column: 2)
!3917 = !DILocation(line: 460, column: 48, scope: !3916)
!3918 = !DILocation(line: 460, column: 46, scope: !3916)
!3919 = !DILocation(line: 460, column: 13, scope: !3916)
!3920 = !DILocation(line: 462, column: 15, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3916, file: !3, line: 462, column: 3)
!3922 = !DILocation(line: 462, column: 25, scope: !3921)
!3923 = !DILocation(line: 462, column: 23, scope: !3921)
!3924 = !DILocation(line: 462, column: 8, scope: !3921)
!3925 = !DILocation(line: 462, column: 32, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3921, file: !3, line: 462, column: 3)
!3927 = !DILocation(line: 462, column: 41, scope: !3926)
!3928 = !DILocation(line: 462, column: 39, scope: !3926)
!3929 = !DILocation(line: 462, column: 3, scope: !3921)
!3930 = !DILocalVariable(name: "mf_len", scope: !3931, file: !3, line: 463, type: !3793)
!3931 = distinct !DILexicalBlock(scope: !3926, file: !3, line: 462, column: 66)
!3932 = !DILocation(line: 463, column: 14, scope: !3931)
!3933 = !DILocation(line: 463, column: 23, scope: !3931)
!3934 = !DILocation(line: 463, column: 27, scope: !3931)
!3935 = !DILocalVariable(name: "ml_idx", scope: !3931, file: !3, line: 464, type: !317)
!3936 = !DILocation(line: 464, column: 18, scope: !3931)
!3937 = !DILocation(line: 464, column: 27, scope: !3931)
!3938 = !DILocation(line: 464, column: 37, scope: !3931)
!3939 = !DILocalVariable(name: "i", scope: !3931, file: !3, line: 465, type: !156)
!3940 = !DILocation(line: 465, column: 8, scope: !3931)
!3941 = !DILocalVariable(name: "not_done", scope: !3931, file: !3, line: 465, type: !156)
!3942 = !DILocation(line: 465, column: 11, scope: !3931)
!3943 = !DILocation(line: 469, column: 13, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 469, column: 4)
!3945 = !DILocation(line: 469, column: 16, scope: !3944)
!3946 = !DILocation(line: 469, column: 26, scope: !3944)
!3947 = !DILocation(line: 469, column: 35, scope: !3944)
!3948 = !DILocation(line: 469, column: 11, scope: !3944)
!3949 = !DILocation(line: 469, column: 57, scope: !3944)
!3950 = !DILocation(line: 469, column: 55, scope: !3944)
!3951 = !DILocation(line: 469, column: 9, scope: !3944)
!3952 = !DILocation(line: 469, column: 65, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3944, file: !3, line: 469, column: 4)
!3954 = !DILocation(line: 469, column: 4, scope: !3944)
!3955 = !DILocalVariable(name: "tf_v", scope: !3956, file: !3, line: 470, type: !3793)
!3956 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 469, column: 80)
!3957 = !DILocation(line: 470, column: 15, scope: !3956)
!3958 = !DILocation(line: 470, column: 22, scope: !3956)
!3959 = !DILocation(line: 0, scope: !3956)
!3960 = !DILocation(line: 471, column: 9, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 471, column: 9)
!3962 = !DILocation(line: 471, column: 14, scope: !3961)
!3963 = !DILocation(line: 471, column: 9, scope: !3956)
!3964 = !DILocation(line: 472, column: 21, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3961, file: !3, line: 471, column: 21)
!3966 = !DILocation(line: 472, column: 6, scope: !3965)
!3967 = !DILocation(line: 472, column: 13, scope: !3965)
!3968 = !DILocation(line: 472, column: 19, scope: !3965)
!3969 = !DILocation(line: 473, column: 14, scope: !3965)
!3970 = !DILocation(line: 474, column: 5, scope: !3965)
!3971 = !DILocation(line: 475, column: 4, scope: !3956)
!3972 = !DILocation(line: 469, column: 76, scope: !3953)
!3973 = !DILocation(line: 469, column: 4, scope: !3953)
!3974 = distinct !{!3974, !3954, !3975}
!3975 = !DILocation(line: 475, column: 4, scope: !3944)
!3976 = !DILocation(line: 476, column: 3, scope: !3931)
!3977 = !DILocation(line: 462, column: 56, scope: !3926)
!3978 = !DILocation(line: 462, column: 62, scope: !3926)
!3979 = !DILocation(line: 462, column: 3, scope: !3926)
!3980 = distinct !{!3980, !3929, !3981}
!3981 = !DILocation(line: 476, column: 3, scope: !3921)
!3982 = !DILocation(line: 483, column: 30, scope: !3916)
!3983 = !DILocation(line: 483, column: 37, scope: !3916)
!3984 = !DILocation(line: 483, column: 44, scope: !3916)
!3985 = !DILocation(line: 483, column: 51, scope: !3916)
!3986 = !DILocation(line: 483, column: 58, scope: !3916)
!3987 = !DILocation(line: 483, column: 69, scope: !3916)
!3988 = !DILocation(line: 483, column: 80, scope: !3916)
!3989 = !DILocation(line: 483, column: 3, scope: !3916)
!3990 = !DILocation(line: 485, column: 3, scope: !3916)
!3991 = !DILocation(line: 485, column: 13, scope: !3916)
!3992 = !DILocation(line: 486, column: 2, scope: !3916)
!3993 = !DILocation(line: 488, column: 8, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3841, file: !3, line: 488, column: 6)
!3995 = !DILocation(line: 488, column: 14, scope: !3994)
!3996 = !DILocation(line: 488, column: 6, scope: !3841)
!3997 = !DILocation(line: 489, column: 76, scope: !3994)
!3998 = !DILocation(line: 489, column: 69, scope: !3994)
!3999 = !DILocation(line: 489, column: 3, scope: !3994)
!4000 = !DILocation(line: 491, column: 2, scope: !3841)
!4001 = !DILocation(line: 491, column: 6, scope: !3841)
!4002 = !DILocation(line: 491, column: 12, scope: !3841)
!4003 = !DILocation(line: 492, column: 1, scope: !3841)
!4004 = distinct !DISubprogram(name: "DM_update_materials", scope: !3, file: !3, line: 494, type: !4005, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!4005 = !DISubroutineType(types: !4006)
!4006 = !{null, !2108, !4007}
!4007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4008, size: 64)
!4008 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !191, line: 295, baseType: !708)
!4009 = !DILocalVariable(name: "dm", arg: 1, scope: !4004, file: !3, line: 494, type: !2108)
!4010 = !DILocation(line: 494, column: 39, scope: !4004)
!4011 = !DILocalVariable(name: "ob", arg: 2, scope: !4004, file: !3, line: 494, type: !4007)
!4012 = !DILocation(line: 494, column: 51, scope: !4004)
!4013 = !DILocalVariable(name: "i", scope: !4004, file: !3, line: 496, type: !156)
!4014 = !DILocation(line: 496, column: 6, scope: !4004)
!4015 = !DILocalVariable(name: "totmat", scope: !4004, file: !3, line: 496, type: !156)
!4016 = !DILocation(line: 496, column: 9, scope: !4004)
!4017 = !DILocation(line: 496, column: 18, scope: !4004)
!4018 = !DILocation(line: 496, column: 22, scope: !4004)
!4019 = !DILocation(line: 496, column: 29, scope: !4004)
!4020 = !DILocation(line: 497, column: 15, scope: !4004)
!4021 = !DILocation(line: 497, column: 2, scope: !4004)
!4022 = !DILocation(line: 497, column: 6, scope: !4004)
!4023 = !DILocation(line: 497, column: 13, scope: !4004)
!4024 = !DILocation(line: 500, column: 6, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !4004, file: !3, line: 500, column: 6)
!4026 = !DILocation(line: 500, column: 10, scope: !4025)
!4027 = !DILocation(line: 500, column: 6, scope: !4004)
!4028 = !DILocation(line: 501, column: 3, scope: !4025)
!4029 = !DILocation(line: 501, column: 13, scope: !4025)
!4030 = !DILocation(line: 501, column: 17, scope: !4025)
!4031 = !DILocation(line: 503, column: 12, scope: !4004)
!4032 = !DILocation(line: 503, column: 24, scope: !4004)
!4033 = !DILocation(line: 503, column: 31, scope: !4004)
!4034 = !DILocation(line: 503, column: 2, scope: !4004)
!4035 = !DILocation(line: 503, column: 6, scope: !4004)
!4036 = !DILocation(line: 503, column: 10, scope: !4004)
!4037 = !DILocation(line: 508, column: 9, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4004, file: !3, line: 508, column: 2)
!4039 = !DILocation(line: 508, column: 7, scope: !4038)
!4040 = !DILocation(line: 508, column: 14, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !4038, file: !3, line: 508, column: 2)
!4042 = !DILocation(line: 508, column: 18, scope: !4041)
!4043 = !DILocation(line: 508, column: 25, scope: !4041)
!4044 = !DILocation(line: 508, column: 16, scope: !4041)
!4045 = !DILocation(line: 508, column: 2, scope: !4038)
!4046 = !DILocation(line: 509, column: 38, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4041, file: !3, line: 508, column: 35)
!4048 = !DILocation(line: 509, column: 42, scope: !4047)
!4049 = !DILocation(line: 509, column: 44, scope: !4047)
!4050 = !DILocation(line: 509, column: 16, scope: !4047)
!4051 = !DILocation(line: 509, column: 3, scope: !4047)
!4052 = !DILocation(line: 509, column: 7, scope: !4047)
!4053 = !DILocation(line: 509, column: 11, scope: !4047)
!4054 = !DILocation(line: 509, column: 14, scope: !4047)
!4055 = !DILocation(line: 510, column: 2, scope: !4047)
!4056 = !DILocation(line: 508, column: 31, scope: !4041)
!4057 = !DILocation(line: 508, column: 2, scope: !4041)
!4058 = distinct !{!4058, !4045, !4059}
!4059 = !DILocation(line: 510, column: 2, scope: !4038)
!4060 = !DILocation(line: 511, column: 1, scope: !4004)
!4061 = distinct !DISubprogram(name: "DM_paint_uvlayer_active_get", scope: !3, file: !3, line: 513, type: !4062, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!4062 = !DISubroutineType(types: !4063)
!4063 = !{!2341, !2108, !156}
!4064 = !DILocalVariable(name: "dm", arg: 1, scope: !4061, file: !3, line: 513, type: !2108)
!4065 = !DILocation(line: 513, column: 50, scope: !4061)
!4066 = !DILocalVariable(name: "mat_nr", arg: 2, scope: !4061, file: !3, line: 513, type: !156)
!4067 = !DILocation(line: 513, column: 58, scope: !4061)
!4068 = !DILocalVariable(name: "tf_base", scope: !4061, file: !3, line: 515, type: !2926)
!4069 = !DILocation(line: 515, column: 10, scope: !4061)
!4070 = !DILocation(line: 519, column: 6, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4061, file: !3, line: 519, column: 6)
!4072 = !DILocation(line: 519, column: 10, scope: !4071)
!4073 = !DILocation(line: 519, column: 14, scope: !4071)
!4074 = !DILocation(line: 519, column: 22, scope: !4071)
!4075 = !DILocation(line: 519, column: 25, scope: !4071)
!4076 = !DILocation(line: 519, column: 29, scope: !4071)
!4077 = !DILocation(line: 519, column: 33, scope: !4071)
!4078 = !DILocation(line: 519, column: 42, scope: !4071)
!4079 = !DILocation(line: 519, column: 55, scope: !4071)
!4080 = !DILocation(line: 520, column: 6, scope: !4071)
!4081 = !DILocation(line: 520, column: 10, scope: !4071)
!4082 = !DILocation(line: 520, column: 14, scope: !4071)
!4083 = !DILocation(line: 520, column: 23, scope: !4071)
!4084 = !DILocation(line: 520, column: 36, scope: !4071)
!4085 = !DILocation(line: 520, column: 40, scope: !4071)
!4086 = !DILocation(line: 520, column: 44, scope: !4071)
!4087 = !DILocation(line: 520, column: 53, scope: !4071)
!4088 = !DILocation(line: 520, column: 72, scope: !4071)
!4089 = !DILocation(line: 519, column: 6, scope: !4061)
!4090 = !DILocation(line: 522, column: 41, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4071, file: !3, line: 521, column: 2)
!4092 = !DILocation(line: 522, column: 45, scope: !4091)
!4093 = !DILocation(line: 523, column: 40, scope: !4091)
!4094 = !DILocation(line: 523, column: 44, scope: !4091)
!4095 = !DILocation(line: 523, column: 48, scope: !4091)
!4096 = !DILocation(line: 523, column: 57, scope: !4091)
!4097 = !DILocation(line: 523, column: 70, scope: !4091)
!4098 = !DILocation(line: 523, column: 74, scope: !4091)
!4099 = !DILocation(line: 523, column: 78, scope: !4091)
!4100 = !DILocation(line: 523, column: 87, scope: !4091)
!4101 = !DILocation(line: 523, column: 106, scope: !4091)
!4102 = !DILocation(line: 522, column: 13, scope: !4091)
!4103 = !DILocation(line: 522, column: 11, scope: !4091)
!4104 = !DILocation(line: 526, column: 8, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4091, file: !3, line: 526, column: 7)
!4106 = !DILocation(line: 526, column: 7, scope: !4091)
!4107 = !DILocation(line: 527, column: 36, scope: !4105)
!4108 = !DILocation(line: 527, column: 40, scope: !4105)
!4109 = !DILocation(line: 527, column: 14, scope: !4105)
!4110 = !DILocation(line: 527, column: 12, scope: !4105)
!4111 = !DILocation(line: 527, column: 4, scope: !4105)
!4112 = !DILocation(line: 528, column: 2, scope: !4091)
!4113 = !DILocation(line: 530, column: 35, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4071, file: !3, line: 529, column: 7)
!4115 = !DILocation(line: 530, column: 39, scope: !4114)
!4116 = !DILocation(line: 530, column: 13, scope: !4114)
!4117 = !DILocation(line: 530, column: 11, scope: !4114)
!4118 = !DILocation(line: 533, column: 9, scope: !4061)
!4119 = !DILocation(line: 533, column: 2, scope: !4061)
!4120 = distinct !DISubprogram(name: "DM_to_mesh", scope: !3, file: !3, line: 536, type: !4121, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!4121 = !DISubroutineType(types: !4122)
!4122 = !{null, !2108, !404, !4007, !2768}
!4123 = !DILocalVariable(name: "dm", arg: 1, scope: !4120, file: !3, line: 536, type: !2108)
!4124 = !DILocation(line: 536, column: 30, scope: !4120)
!4125 = !DILocalVariable(name: "me", arg: 2, scope: !4120, file: !3, line: 536, type: !404)
!4126 = !DILocation(line: 536, column: 40, scope: !4120)
!4127 = !DILocalVariable(name: "ob", arg: 3, scope: !4120, file: !3, line: 536, type: !4007)
!4128 = !DILocation(line: 536, column: 52, scope: !4120)
!4129 = !DILocalVariable(name: "mask", arg: 4, scope: !4120, file: !3, line: 536, type: !2768)
!4130 = !DILocation(line: 536, column: 71, scope: !4120)
!4131 = !DILocalVariable(name: "tmp", scope: !4120, file: !3, line: 539, type: !405)
!4132 = !DILocation(line: 539, column: 7, scope: !4120)
!4133 = !DILocation(line: 539, column: 14, scope: !4120)
!4134 = !DILocation(line: 539, column: 13, scope: !4120)
!4135 = !DILocalVariable(name: "totvert", scope: !4120, file: !3, line: 540, type: !156)
!4136 = !DILocation(line: 540, column: 6, scope: !4120)
!4137 = !DILocalVariable(name: "totedge", scope: !4120, file: !3, line: 540, type: !156)
!4138 = !DILocation(line: 540, column: 15, scope: !4120)
!4139 = !DILocalVariable(name: "totloop", scope: !4120, file: !3, line: 540, type: !156)
!4140 = !DILocation(line: 540, column: 52, scope: !4120)
!4141 = !DILocalVariable(name: "totpoly", scope: !4120, file: !3, line: 540, type: !156)
!4142 = !DILocation(line: 540, column: 61, scope: !4120)
!4143 = !DILocalVariable(name: "did_shapekeys", scope: !4120, file: !3, line: 541, type: !156)
!4144 = !DILocation(line: 541, column: 6, scope: !4120)
!4145 = !DILocation(line: 543, column: 24, scope: !4120)
!4146 = !DILocation(line: 543, column: 2, scope: !4120)
!4147 = !DILocation(line: 544, column: 24, scope: !4120)
!4148 = !DILocation(line: 544, column: 2, scope: !4120)
!4149 = !DILocation(line: 545, column: 24, scope: !4120)
!4150 = !DILocation(line: 545, column: 2, scope: !4120)
!4151 = !DILocation(line: 546, column: 24, scope: !4120)
!4152 = !DILocation(line: 546, column: 2, scope: !4120)
!4153 = !DILocation(line: 547, column: 24, scope: !4120)
!4154 = !DILocation(line: 547, column: 2, scope: !4120)
!4155 = !DILocation(line: 549, column: 20, scope: !4120)
!4156 = !DILocation(line: 549, column: 2, scope: !4120)
!4157 = !DILocation(line: 551, column: 26, scope: !4120)
!4158 = !DILocation(line: 551, column: 30, scope: !4120)
!4159 = !DILocation(line: 551, column: 42, scope: !4120)
!4160 = !DILocation(line: 551, column: 16, scope: !4120)
!4161 = !DILocation(line: 551, column: 24, scope: !4120)
!4162 = !DILocation(line: 551, column: 10, scope: !4120)
!4163 = !DILocation(line: 552, column: 26, scope: !4120)
!4164 = !DILocation(line: 552, column: 30, scope: !4120)
!4165 = !DILocation(line: 552, column: 42, scope: !4120)
!4166 = !DILocation(line: 552, column: 16, scope: !4120)
!4167 = !DILocation(line: 552, column: 24, scope: !4120)
!4168 = !DILocation(line: 552, column: 10, scope: !4120)
!4169 = !DILocation(line: 553, column: 26, scope: !4120)
!4170 = !DILocation(line: 553, column: 30, scope: !4120)
!4171 = !DILocation(line: 553, column: 42, scope: !4120)
!4172 = !DILocation(line: 553, column: 16, scope: !4120)
!4173 = !DILocation(line: 553, column: 24, scope: !4120)
!4174 = !DILocation(line: 553, column: 10, scope: !4120)
!4175 = !DILocation(line: 554, column: 26, scope: !4120)
!4176 = !DILocation(line: 554, column: 30, scope: !4120)
!4177 = !DILocation(line: 554, column: 42, scope: !4120)
!4178 = !DILocation(line: 554, column: 16, scope: !4120)
!4179 = !DILocation(line: 554, column: 24, scope: !4120)
!4180 = !DILocation(line: 554, column: 10, scope: !4120)
!4181 = !DILocation(line: 555, column: 6, scope: !4120)
!4182 = !DILocation(line: 555, column: 14, scope: !4120)
!4183 = !DILocation(line: 557, column: 19, scope: !4120)
!4184 = !DILocation(line: 557, column: 23, scope: !4120)
!4185 = !DILocation(line: 557, column: 38, scope: !4120)
!4186 = !DILocation(line: 557, column: 45, scope: !4120)
!4187 = !DILocation(line: 557, column: 65, scope: !4120)
!4188 = !DILocation(line: 557, column: 2, scope: !4120)
!4189 = !DILocation(line: 558, column: 19, scope: !4120)
!4190 = !DILocation(line: 558, column: 23, scope: !4120)
!4191 = !DILocation(line: 558, column: 38, scope: !4120)
!4192 = !DILocation(line: 558, column: 45, scope: !4120)
!4193 = !DILocation(line: 558, column: 65, scope: !4120)
!4194 = !DILocation(line: 558, column: 2, scope: !4120)
!4195 = !DILocation(line: 559, column: 19, scope: !4120)
!4196 = !DILocation(line: 559, column: 23, scope: !4120)
!4197 = !DILocation(line: 559, column: 38, scope: !4120)
!4198 = !DILocation(line: 559, column: 45, scope: !4120)
!4199 = !DILocation(line: 559, column: 65, scope: !4120)
!4200 = !DILocation(line: 559, column: 2, scope: !4120)
!4201 = !DILocation(line: 560, column: 19, scope: !4120)
!4202 = !DILocation(line: 560, column: 23, scope: !4120)
!4203 = !DILocation(line: 560, column: 38, scope: !4120)
!4204 = !DILocation(line: 560, column: 45, scope: !4120)
!4205 = !DILocation(line: 560, column: 65, scope: !4120)
!4206 = !DILocation(line: 560, column: 2, scope: !4120)
!4207 = !DILocation(line: 561, column: 16, scope: !4120)
!4208 = !DILocation(line: 561, column: 20, scope: !4120)
!4209 = !DILocation(line: 561, column: 6, scope: !4120)
!4210 = !DILocation(line: 561, column: 14, scope: !4120)
!4211 = !DILocation(line: 563, column: 28, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4120, file: !3, line: 563, column: 6)
!4213 = !DILocation(line: 563, column: 32, scope: !4212)
!4214 = !DILocation(line: 563, column: 6, scope: !4212)
!4215 = !DILocation(line: 563, column: 6, scope: !4120)
!4216 = !DILocalVariable(name: "kb", scope: !4217, file: !3, line: 564, type: !501)
!4217 = distinct !DILexicalBlock(scope: !4212, file: !3, line: 563, column: 56)
!4218 = !DILocation(line: 564, column: 13, scope: !4217)
!4219 = !DILocalVariable(name: "uid", scope: !4217, file: !3, line: 565, type: !156)
!4220 = !DILocation(line: 565, column: 7, scope: !4217)
!4221 = !DILocation(line: 567, column: 7, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4217, file: !3, line: 567, column: 7)
!4223 = !DILocation(line: 567, column: 7, scope: !4217)
!4224 = !DILocation(line: 568, column: 23, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4222, file: !3, line: 567, column: 11)
!4226 = !DILocation(line: 568, column: 27, scope: !4225)
!4227 = !DILocation(line: 568, column: 32, scope: !4225)
!4228 = !DILocation(line: 568, column: 39, scope: !4225)
!4229 = !DILocation(line: 568, column: 43, scope: !4225)
!4230 = !DILocation(line: 568, column: 51, scope: !4225)
!4231 = !DILocation(line: 568, column: 9, scope: !4225)
!4232 = !DILocation(line: 568, column: 7, scope: !4225)
!4233 = !DILocation(line: 569, column: 8, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4225, file: !3, line: 569, column: 8)
!4235 = !DILocation(line: 569, column: 8, scope: !4225)
!4236 = !DILocation(line: 570, column: 11, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4234, file: !3, line: 569, column: 12)
!4238 = !DILocation(line: 570, column: 15, scope: !4237)
!4239 = !DILocation(line: 570, column: 9, scope: !4237)
!4240 = !DILocation(line: 571, column: 4, scope: !4237)
!4241 = !DILocation(line: 574, column: 22, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4234, file: !3, line: 572, column: 9)
!4243 = !DILocation(line: 574, column: 26, scope: !4242)
!4244 = !DILocation(line: 574, column: 34, scope: !4242)
!4245 = !DILocation(line: 573, column: 5, scope: !4242)
!4246 = !DILocation(line: 576, column: 9, scope: !4242)
!4247 = !DILocation(line: 578, column: 3, scope: !4225)
!4248 = !DILocation(line: 581, column: 8, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4222, file: !3, line: 579, column: 8)
!4250 = !DILocation(line: 584, column: 32, scope: !4217)
!4251 = !DILocation(line: 584, column: 36, scope: !4217)
!4252 = !DILocation(line: 584, column: 40, scope: !4217)
!4253 = !DILocation(line: 584, column: 3, scope: !4217)
!4254 = !DILocation(line: 585, column: 17, scope: !4217)
!4255 = !DILocation(line: 586, column: 2, scope: !4217)
!4256 = !DILocation(line: 589, column: 6, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4120, file: !3, line: 589, column: 6)
!4258 = !DILocation(line: 589, column: 6, scope: !4120)
!4259 = !DILocation(line: 590, column: 44, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4257, file: !3, line: 589, column: 10)
!4261 = !DILocation(line: 590, column: 3, scope: !4260)
!4262 = !DILocation(line: 591, column: 2, scope: !4260)
!4263 = !DILocation(line: 595, column: 33, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4120, file: !3, line: 595, column: 6)
!4265 = !DILocation(line: 595, column: 7, scope: !4264)
!4266 = !DILocation(line: 595, column: 6, scope: !4120)
!4267 = !DILocation(line: 596, column: 29, scope: !4264)
!4268 = !DILocation(line: 596, column: 57, scope: !4264)
!4269 = !DILocation(line: 596, column: 61, scope: !4264)
!4270 = !DILocation(line: 596, column: 74, scope: !4264)
!4271 = !DILocation(line: 596, column: 79, scope: !4264)
!4272 = !DILocation(line: 596, column: 3, scope: !4264)
!4273 = !DILocation(line: 597, column: 33, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4120, file: !3, line: 597, column: 6)
!4275 = !DILocation(line: 597, column: 7, scope: !4274)
!4276 = !DILocation(line: 597, column: 6, scope: !4120)
!4277 = !DILocation(line: 598, column: 29, scope: !4274)
!4278 = !DILocation(line: 598, column: 57, scope: !4274)
!4279 = !DILocation(line: 598, column: 61, scope: !4274)
!4280 = !DILocation(line: 598, column: 74, scope: !4274)
!4281 = !DILocation(line: 598, column: 79, scope: !4274)
!4282 = !DILocation(line: 598, column: 3, scope: !4274)
!4283 = !DILocation(line: 599, column: 33, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4120, file: !3, line: 599, column: 6)
!4285 = !DILocation(line: 599, column: 7, scope: !4284)
!4286 = !DILocation(line: 599, column: 6, scope: !4120)
!4287 = !DILocation(line: 600, column: 15, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4284, file: !3, line: 599, column: 51)
!4289 = !DILocation(line: 600, column: 19, scope: !4288)
!4290 = !DILocation(line: 600, column: 32, scope: !4288)
!4291 = !DILocation(line: 600, column: 7, scope: !4288)
!4292 = !DILocation(line: 600, column: 13, scope: !4288)
!4293 = !DILocation(line: 601, column: 15, scope: !4288)
!4294 = !DILocation(line: 601, column: 19, scope: !4288)
!4295 = !DILocation(line: 601, column: 32, scope: !4288)
!4296 = !DILocation(line: 601, column: 7, scope: !4288)
!4297 = !DILocation(line: 601, column: 13, scope: !4288)
!4298 = !DILocation(line: 603, column: 29, scope: !4288)
!4299 = !DILocation(line: 603, column: 61, scope: !4288)
!4300 = !DILocation(line: 603, column: 57, scope: !4288)
!4301 = !DILocation(line: 603, column: 72, scope: !4288)
!4302 = !DILocation(line: 603, column: 3, scope: !4288)
!4303 = !DILocation(line: 604, column: 29, scope: !4288)
!4304 = !DILocation(line: 604, column: 61, scope: !4288)
!4305 = !DILocation(line: 604, column: 57, scope: !4288)
!4306 = !DILocation(line: 604, column: 72, scope: !4288)
!4307 = !DILocation(line: 604, column: 3, scope: !4288)
!4308 = !DILocation(line: 605, column: 2, scope: !4288)
!4309 = !DILocation(line: 609, column: 28, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4120, file: !3, line: 609, column: 6)
!4311 = !DILocation(line: 609, column: 32, scope: !4310)
!4312 = !DILocation(line: 609, column: 6, scope: !4310)
!4313 = !DILocation(line: 609, column: 6, scope: !4120)
!4314 = !DILocation(line: 610, column: 7, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4316, file: !3, line: 610, column: 7)
!4316 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 609, column: 51)
!4317 = !DILocation(line: 610, column: 18, scope: !4315)
!4318 = !DILocation(line: 610, column: 22, scope: !4315)
!4319 = !DILocation(line: 610, column: 15, scope: !4315)
!4320 = !DILocation(line: 610, column: 7, scope: !4316)
!4321 = !DILocalVariable(name: "mdisps", scope: !4322, file: !3, line: 611, type: !4323)
!4322 = distinct !DILexicalBlock(scope: !4315, file: !3, line: 610, column: 31)
!4323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4324, size: 64)
!4324 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDisps", file: !299, line: 196, baseType: !4325)
!4325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDisps", file: !299, line: 186, size: 192, elements: !4326)
!4326 = !{!4327, !4328, !4329, !4330}
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "totdisp", scope: !4325, file: !299, line: 188, baseType: !156, size: 32)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4325, file: !299, line: 189, baseType: !156, size: 32, offset: 32)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "disps", scope: !4325, file: !299, line: 190, baseType: !1660, size: 64, offset: 64)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "hidden", scope: !4325, file: !299, line: 195, baseType: !317, size: 64, offset: 128)
!4331 = !DILocation(line: 611, column: 12, scope: !4322)
!4332 = !DILocation(line: 611, column: 43, scope: !4322)
!4333 = !DILocation(line: 611, column: 47, scope: !4322)
!4334 = !DILocation(line: 611, column: 21, scope: !4322)
!4335 = !DILocation(line: 612, column: 30, scope: !4322)
!4336 = !DILocation(line: 612, column: 62, scope: !4322)
!4337 = !DILocation(line: 612, column: 70, scope: !4322)
!4338 = !DILocation(line: 612, column: 4, scope: !4322)
!4339 = !DILocation(line: 613, column: 3, scope: !4322)
!4340 = !DILocation(line: 614, column: 2, scope: !4316)
!4341 = !DILocation(line: 617, column: 2, scope: !4120)
!4342 = !DILocation(line: 622, column: 19, scope: !4120)
!4343 = !DILocation(line: 622, column: 23, scope: !4120)
!4344 = !DILocation(line: 622, column: 30, scope: !4120)
!4345 = !DILocation(line: 622, column: 34, scope: !4120)
!4346 = !DILocation(line: 622, column: 2, scope: !4120)
!4347 = !DILocation(line: 623, column: 19, scope: !4120)
!4348 = !DILocation(line: 623, column: 23, scope: !4120)
!4349 = !DILocation(line: 623, column: 30, scope: !4120)
!4350 = !DILocation(line: 623, column: 34, scope: !4120)
!4351 = !DILocation(line: 623, column: 2, scope: !4120)
!4352 = !DILocation(line: 624, column: 19, scope: !4120)
!4353 = !DILocation(line: 624, column: 23, scope: !4120)
!4354 = !DILocation(line: 624, column: 30, scope: !4120)
!4355 = !DILocation(line: 624, column: 34, scope: !4120)
!4356 = !DILocation(line: 624, column: 2, scope: !4120)
!4357 = !DILocation(line: 625, column: 19, scope: !4120)
!4358 = !DILocation(line: 625, column: 23, scope: !4120)
!4359 = !DILocation(line: 625, column: 30, scope: !4120)
!4360 = !DILocation(line: 625, column: 34, scope: !4120)
!4361 = !DILocation(line: 625, column: 2, scope: !4120)
!4362 = !DILocation(line: 626, column: 19, scope: !4120)
!4363 = !DILocation(line: 626, column: 23, scope: !4120)
!4364 = !DILocation(line: 626, column: 30, scope: !4120)
!4365 = !DILocation(line: 626, column: 34, scope: !4120)
!4366 = !DILocation(line: 626, column: 2, scope: !4120)
!4367 = !DILocation(line: 631, column: 10, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4120, file: !3, line: 631, column: 6)
!4369 = !DILocation(line: 631, column: 21, scope: !4368)
!4370 = !DILocation(line: 631, column: 25, scope: !4368)
!4371 = !DILocation(line: 631, column: 18, scope: !4368)
!4372 = !DILocation(line: 631, column: 33, scope: !4368)
!4373 = !DILocation(line: 631, column: 37, scope: !4368)
!4374 = !DILocation(line: 631, column: 51, scope: !4368)
!4375 = !DILocation(line: 631, column: 54, scope: !4368)
!4376 = !DILocation(line: 631, column: 58, scope: !4368)
!4377 = !DILocation(line: 631, column: 6, scope: !4120)
!4378 = !DILocation(line: 632, column: 88, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 631, column: 63)
!4380 = !DILocation(line: 632, column: 91, scope: !4379)
!4381 = !DILocation(line: 632, column: 84, scope: !4379)
!4382 = !DILocation(line: 632, column: 3, scope: !4379)
!4383 = !DILocation(line: 633, column: 11, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 633, column: 7)
!4385 = !DILocation(line: 633, column: 7, scope: !4384)
!4386 = !DILocation(line: 633, column: 7, scope: !4379)
!4387 = !DILocation(line: 633, column: 20, scope: !4384)
!4388 = !DILocation(line: 633, column: 25, scope: !4384)
!4389 = !DILocation(line: 633, column: 28, scope: !4384)
!4390 = !DILocation(line: 633, column: 30, scope: !4384)
!4391 = !DILocation(line: 633, column: 16, scope: !4384)
!4392 = !DILocation(line: 634, column: 7, scope: !4379)
!4393 = !DILocation(line: 634, column: 11, scope: !4379)
!4394 = !DILocation(line: 635, column: 2, scope: !4379)
!4395 = !DILocation(line: 638, column: 6, scope: !4120)
!4396 = !DILocation(line: 638, column: 14, scope: !4120)
!4397 = !DILocation(line: 639, column: 6, scope: !4120)
!4398 = !DILocation(line: 639, column: 16, scope: !4120)
!4399 = !DILocation(line: 640, column: 6, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4120, file: !3, line: 640, column: 6)
!4401 = !DILocation(line: 640, column: 10, scope: !4400)
!4402 = !DILocation(line: 640, column: 6, scope: !4120)
!4403 = !DILocation(line: 641, column: 3, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4400, file: !3, line: 640, column: 19)
!4405 = !DILocation(line: 641, column: 13, scope: !4404)
!4406 = !DILocation(line: 641, column: 17, scope: !4404)
!4407 = !DILocation(line: 642, column: 2, scope: !4404)
!4408 = !DILocalVariable(name: "non_const", scope: !4409, file: !3, line: 645, type: !318)
!4409 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 645, column: 2)
!4410 = distinct !DILexicalBlock(scope: !4120, file: !3, line: 645, column: 2)
!4411 = !DILocation(line: 645, column: 2, scope: !4409)
!4412 = !DILocation(line: 645, column: 2, scope: !4410)
!4413 = !DILocation(line: 646, column: 1, scope: !4120)
!4414 = distinct !DISubprogram(name: "shapekey_layers_to_keyblocks", scope: !3, file: !3, line: 1351, type: !4415, scopeLine: 1352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!4415 = !DISubroutineType(types: !4416)
!4416 = !{null, !2108, !404, !156}
!4417 = !DILocalVariable(name: "dm", arg: 1, scope: !4414, file: !3, line: 1351, type: !2108)
!4418 = !DILocation(line: 1351, column: 55, scope: !4414)
!4419 = !DILocalVariable(name: "me", arg: 2, scope: !4414, file: !3, line: 1351, type: !404)
!4420 = !DILocation(line: 1351, column: 65, scope: !4414)
!4421 = !DILocalVariable(name: "actshape_uid", arg: 3, scope: !4414, file: !3, line: 1351, type: !156)
!4422 = !DILocation(line: 1351, column: 73, scope: !4414)
!4423 = !DILocalVariable(name: "kb", scope: !4414, file: !3, line: 1353, type: !501)
!4424 = !DILocation(line: 1353, column: 12, scope: !4414)
!4425 = !DILocalVariable(name: "i", scope: !4414, file: !3, line: 1354, type: !156)
!4426 = !DILocation(line: 1354, column: 6, scope: !4414)
!4427 = !DILocalVariable(name: "j", scope: !4414, file: !3, line: 1354, type: !156)
!4428 = !DILocation(line: 1354, column: 9, scope: !4414)
!4429 = !DILocalVariable(name: "tot", scope: !4414, file: !3, line: 1354, type: !156)
!4430 = !DILocation(line: 1354, column: 12, scope: !4414)
!4431 = !DILocation(line: 1356, column: 7, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 1356, column: 6)
!4433 = !DILocation(line: 1356, column: 11, scope: !4432)
!4434 = !DILocation(line: 1356, column: 6, scope: !4414)
!4435 = !DILocation(line: 1357, column: 3, scope: !4432)
!4436 = !DILocation(line: 1359, column: 37, scope: !4414)
!4437 = !DILocation(line: 1359, column: 41, scope: !4414)
!4438 = !DILocation(line: 1359, column: 8, scope: !4414)
!4439 = !DILocation(line: 1359, column: 6, scope: !4414)
!4440 = !DILocation(line: 1360, column: 9, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 1360, column: 2)
!4442 = !DILocation(line: 1360, column: 7, scope: !4441)
!4443 = !DILocation(line: 1360, column: 14, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4441, file: !3, line: 1360, column: 2)
!4445 = !DILocation(line: 1360, column: 18, scope: !4444)
!4446 = !DILocation(line: 1360, column: 16, scope: !4444)
!4447 = !DILocation(line: 1360, column: 2, scope: !4441)
!4448 = !DILocalVariable(name: "layer", scope: !4449, file: !3, line: 1361, type: !1764)
!4449 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 1360, column: 28)
!4450 = !DILocation(line: 1361, column: 20, scope: !4449)
!4451 = !DILocation(line: 1361, column: 29, scope: !4449)
!4452 = !DILocation(line: 1361, column: 33, scope: !4449)
!4453 = !DILocation(line: 1361, column: 42, scope: !4449)
!4454 = !DILocation(line: 1361, column: 79, scope: !4449)
!4455 = !DILocation(line: 1361, column: 83, scope: !4449)
!4456 = !DILocation(line: 1361, column: 106, scope: !4449)
!4457 = !DILocation(line: 1361, column: 49, scope: !4449)
!4458 = !DILocalVariable(name: "cos", scope: !4449, file: !3, line: 1362, type: !1660)
!4459 = !DILocation(line: 1362, column: 11, scope: !4449)
!4460 = !DILocalVariable(name: "kbcos", scope: !4449, file: !3, line: 1362, type: !1660)
!4461 = !DILocation(line: 1362, column: 22, scope: !4449)
!4462 = !DILocation(line: 1364, column: 13, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 1364, column: 3)
!4464 = !DILocation(line: 1364, column: 17, scope: !4463)
!4465 = !DILocation(line: 1364, column: 22, scope: !4463)
!4466 = !DILocation(line: 1364, column: 28, scope: !4463)
!4467 = !DILocation(line: 1364, column: 11, scope: !4463)
!4468 = !DILocation(line: 1364, column: 8, scope: !4463)
!4469 = !DILocation(line: 1364, column: 35, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4463, file: !3, line: 1364, column: 3)
!4471 = !DILocation(line: 1364, column: 3, scope: !4463)
!4472 = !DILocation(line: 1365, column: 8, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4474, file: !3, line: 1365, column: 8)
!4474 = distinct !DILexicalBlock(scope: !4470, file: !3, line: 1364, column: 54)
!4475 = !DILocation(line: 1365, column: 12, scope: !4473)
!4476 = !DILocation(line: 1365, column: 19, scope: !4473)
!4477 = !DILocation(line: 1365, column: 26, scope: !4473)
!4478 = !DILocation(line: 1365, column: 16, scope: !4473)
!4479 = !DILocation(line: 1365, column: 8, scope: !4474)
!4480 = !DILocation(line: 1366, column: 5, scope: !4473)
!4481 = !DILocation(line: 1367, column: 3, scope: !4474)
!4482 = !DILocation(line: 1364, column: 44, scope: !4470)
!4483 = !DILocation(line: 1364, column: 48, scope: !4470)
!4484 = !DILocation(line: 1364, column: 42, scope: !4470)
!4485 = !DILocation(line: 1364, column: 3, scope: !4470)
!4486 = distinct !{!4486, !4471, !4487}
!4487 = !DILocation(line: 1367, column: 3, scope: !4463)
!4488 = !DILocation(line: 1369, column: 8, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 1369, column: 7)
!4490 = !DILocation(line: 1369, column: 7, scope: !4449)
!4491 = !DILocation(line: 1370, column: 26, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4489, file: !3, line: 1369, column: 12)
!4493 = !DILocation(line: 1370, column: 30, scope: !4492)
!4494 = !DILocation(line: 1370, column: 35, scope: !4492)
!4495 = !DILocation(line: 1370, column: 42, scope: !4492)
!4496 = !DILocation(line: 1370, column: 9, scope: !4492)
!4497 = !DILocation(line: 1370, column: 7, scope: !4492)
!4498 = !DILocation(line: 1371, column: 14, scope: !4492)
!4499 = !DILocation(line: 1371, column: 21, scope: !4492)
!4500 = !DILocation(line: 1371, column: 4, scope: !4492)
!4501 = !DILocation(line: 1371, column: 8, scope: !4492)
!4502 = !DILocation(line: 1371, column: 12, scope: !4492)
!4503 = !DILocation(line: 1372, column: 3, scope: !4492)
!4504 = !DILocation(line: 1374, column: 7, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 1374, column: 7)
!4506 = !DILocation(line: 1374, column: 11, scope: !4505)
!4507 = !DILocation(line: 1374, column: 7, scope: !4449)
!4508 = !DILocation(line: 1375, column: 4, scope: !4505)
!4509 = !DILocation(line: 1375, column: 14, scope: !4505)
!4510 = !DILocation(line: 1375, column: 18, scope: !4505)
!4511 = !DILocation(line: 1377, column: 33, scope: !4449)
!4512 = !DILocation(line: 1377, column: 37, scope: !4449)
!4513 = !DILocation(line: 1377, column: 60, scope: !4449)
!4514 = !DILocation(line: 1377, column: 9, scope: !4449)
!4515 = !DILocation(line: 1377, column: 7, scope: !4449)
!4516 = !DILocation(line: 1378, column: 17, scope: !4449)
!4517 = !DILocation(line: 1378, column: 21, scope: !4449)
!4518 = !DILocation(line: 1378, column: 3, scope: !4449)
!4519 = !DILocation(line: 1378, column: 7, scope: !4449)
!4520 = !DILocation(line: 1378, column: 15, scope: !4449)
!4521 = !DILocation(line: 1380, column: 22, scope: !4449)
!4522 = !DILocation(line: 1380, column: 54, scope: !4449)
!4523 = !DILocation(line: 1380, column: 58, scope: !4449)
!4524 = !DILocation(line: 1380, column: 52, scope: !4449)
!4525 = !DILocation(line: 1380, column: 20, scope: !4449)
!4526 = !DILocation(line: 1380, column: 14, scope: !4449)
!4527 = !DILocation(line: 1380, column: 3, scope: !4449)
!4528 = !DILocation(line: 1380, column: 7, scope: !4449)
!4529 = !DILocation(line: 1380, column: 12, scope: !4449)
!4530 = !DILocation(line: 1381, column: 7, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 1381, column: 7)
!4532 = !DILocation(line: 1381, column: 11, scope: !4531)
!4533 = !DILocation(line: 1381, column: 18, scope: !4531)
!4534 = !DILocation(line: 1381, column: 15, scope: !4531)
!4535 = !DILocation(line: 1381, column: 7, scope: !4449)
!4536 = !DILocalVariable(name: "mvert", scope: !4537, file: !3, line: 1382, type: !2812)
!4537 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 1381, column: 32)
!4538 = !DILocation(line: 1382, column: 11, scope: !4537)
!4539 = !DILocation(line: 1382, column: 19, scope: !4537)
!4540 = !DILocation(line: 1382, column: 23, scope: !4537)
!4541 = !DILocation(line: 1382, column: 36, scope: !4537)
!4542 = !DILocation(line: 1384, column: 11, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4537, file: !3, line: 1384, column: 4)
!4544 = !DILocation(line: 1384, column: 9, scope: !4543)
!4545 = !DILocation(line: 1384, column: 16, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 1384, column: 4)
!4547 = !DILocation(line: 1384, column: 20, scope: !4546)
!4548 = !DILocation(line: 1384, column: 24, scope: !4546)
!4549 = !DILocation(line: 1384, column: 18, scope: !4546)
!4550 = !DILocation(line: 1384, column: 4, scope: !4543)
!4551 = !DILocation(line: 1385, column: 17, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4546, file: !3, line: 1384, column: 60)
!4553 = !DILocation(line: 1385, column: 16, scope: !4552)
!4554 = !DILocation(line: 1385, column: 24, scope: !4552)
!4555 = !DILocation(line: 1385, column: 31, scope: !4552)
!4556 = !DILocation(line: 1385, column: 5, scope: !4552)
!4557 = !DILocation(line: 1386, column: 4, scope: !4552)
!4558 = !DILocation(line: 1384, column: 38, scope: !4546)
!4559 = !DILocation(line: 1384, column: 47, scope: !4546)
!4560 = !DILocation(line: 1384, column: 56, scope: !4546)
!4561 = !DILocation(line: 1384, column: 4, scope: !4546)
!4562 = distinct !{!4562, !4550, !4563}
!4563 = !DILocation(line: 1386, column: 4, scope: !4543)
!4564 = !DILocation(line: 1387, column: 3, scope: !4537)
!4565 = !DILocation(line: 1389, column: 11, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4567, file: !3, line: 1389, column: 4)
!4567 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 1388, column: 8)
!4568 = !DILocation(line: 1389, column: 9, scope: !4566)
!4569 = !DILocation(line: 1389, column: 16, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4566, file: !3, line: 1389, column: 4)
!4571 = !DILocation(line: 1389, column: 20, scope: !4570)
!4572 = !DILocation(line: 1389, column: 24, scope: !4570)
!4573 = !DILocation(line: 1389, column: 18, scope: !4570)
!4574 = !DILocation(line: 1389, column: 4, scope: !4566)
!4575 = !DILocation(line: 1390, column: 17, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4570, file: !3, line: 1389, column: 54)
!4577 = !DILocation(line: 1390, column: 16, scope: !4576)
!4578 = !DILocation(line: 1390, column: 25, scope: !4576)
!4579 = !DILocation(line: 1390, column: 24, scope: !4576)
!4580 = !DILocation(line: 1390, column: 5, scope: !4576)
!4581 = !DILocation(line: 1391, column: 4, scope: !4576)
!4582 = !DILocation(line: 1389, column: 34, scope: !4570)
!4583 = !DILocation(line: 1389, column: 41, scope: !4570)
!4584 = !DILocation(line: 1389, column: 50, scope: !4570)
!4585 = !DILocation(line: 1389, column: 4, scope: !4570)
!4586 = distinct !{!4586, !4574, !4587}
!4587 = !DILocation(line: 1391, column: 4, scope: !4566)
!4588 = !DILocation(line: 1393, column: 2, scope: !4449)
!4589 = !DILocation(line: 1360, column: 24, scope: !4444)
!4590 = !DILocation(line: 1360, column: 2, scope: !4444)
!4591 = distinct !{!4591, !4447, !4592}
!4592 = !DILocation(line: 1393, column: 2, scope: !4441)
!4593 = !DILocation(line: 1395, column: 12, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 1395, column: 2)
!4595 = !DILocation(line: 1395, column: 16, scope: !4594)
!4596 = !DILocation(line: 1395, column: 21, scope: !4594)
!4597 = !DILocation(line: 1395, column: 27, scope: !4594)
!4598 = !DILocation(line: 1395, column: 10, scope: !4594)
!4599 = !DILocation(line: 1395, column: 7, scope: !4594)
!4600 = !DILocation(line: 1395, column: 34, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4594, file: !3, line: 1395, column: 2)
!4602 = !DILocation(line: 1395, column: 2, scope: !4594)
!4603 = !DILocation(line: 1396, column: 7, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4605, file: !3, line: 1396, column: 7)
!4605 = distinct !DILexicalBlock(scope: !4601, file: !3, line: 1395, column: 53)
!4606 = !DILocation(line: 1396, column: 11, scope: !4604)
!4607 = !DILocation(line: 1396, column: 22, scope: !4604)
!4608 = !DILocation(line: 1396, column: 26, scope: !4604)
!4609 = !DILocation(line: 1396, column: 19, scope: !4604)
!4610 = !DILocation(line: 1396, column: 7, scope: !4605)
!4611 = !DILocation(line: 1397, column: 8, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4613, file: !3, line: 1397, column: 8)
!4613 = distinct !DILexicalBlock(scope: !4604, file: !3, line: 1396, column: 39)
!4614 = !DILocation(line: 1397, column: 12, scope: !4612)
!4615 = !DILocation(line: 1397, column: 8, scope: !4613)
!4616 = !DILocation(line: 1398, column: 5, scope: !4612)
!4617 = !DILocation(line: 1398, column: 15, scope: !4612)
!4618 = !DILocation(line: 1398, column: 19, scope: !4612)
!4619 = !DILocation(line: 1400, column: 18, scope: !4613)
!4620 = !DILocation(line: 1400, column: 22, scope: !4613)
!4621 = !DILocation(line: 1400, column: 4, scope: !4613)
!4622 = !DILocation(line: 1400, column: 8, scope: !4613)
!4623 = !DILocation(line: 1400, column: 16, scope: !4613)
!4624 = !DILocation(line: 1401, column: 15, scope: !4613)
!4625 = !DILocation(line: 1401, column: 47, scope: !4613)
!4626 = !DILocation(line: 1401, column: 51, scope: !4613)
!4627 = !DILocation(line: 1401, column: 45, scope: !4613)
!4628 = !DILocation(line: 1401, column: 4, scope: !4613)
!4629 = !DILocation(line: 1401, column: 8, scope: !4613)
!4630 = !DILocation(line: 1401, column: 13, scope: !4613)
!4631 = !DILocation(line: 1402, column: 12, scope: !4613)
!4632 = !DILocation(line: 1402, column: 91, scope: !4613)
!4633 = !DILocation(line: 1402, column: 95, scope: !4613)
!4634 = !DILocation(line: 1402, column: 4, scope: !4613)
!4635 = !DILocation(line: 1403, column: 3, scope: !4613)
!4636 = !DILocation(line: 1404, column: 2, scope: !4605)
!4637 = !DILocation(line: 1395, column: 43, scope: !4601)
!4638 = !DILocation(line: 1395, column: 47, scope: !4601)
!4639 = !DILocation(line: 1395, column: 41, scope: !4601)
!4640 = !DILocation(line: 1395, column: 2, scope: !4601)
!4641 = distinct !{!4641, !4602, !4642}
!4642 = !DILocation(line: 1404, column: 2, scope: !4594)
!4643 = !DILocation(line: 1405, column: 1, scope: !4414)
!4644 = distinct !DISubprogram(name: "DM_to_meshkey", scope: !3, file: !3, line: 648, type: !4645, scopeLine: 649, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!4645 = !DISubroutineType(types: !4646)
!4646 = !{null, !2108, !404, !501}
!4647 = !DILocalVariable(name: "dm", arg: 1, scope: !4644, file: !3, line: 648, type: !2108)
!4648 = !DILocation(line: 648, column: 33, scope: !4644)
!4649 = !DILocalVariable(name: "me", arg: 2, scope: !4644, file: !3, line: 648, type: !404)
!4650 = !DILocation(line: 648, column: 43, scope: !4644)
!4651 = !DILocalVariable(name: "kb", arg: 3, scope: !4644, file: !3, line: 648, type: !501)
!4652 = !DILocation(line: 648, column: 57, scope: !4644)
!4653 = !DILocalVariable(name: "a", scope: !4644, file: !3, line: 650, type: !156)
!4654 = !DILocation(line: 650, column: 6, scope: !4644)
!4655 = !DILocalVariable(name: "totvert", scope: !4644, file: !3, line: 650, type: !156)
!4656 = !DILocation(line: 650, column: 9, scope: !4644)
!4657 = !DILocation(line: 650, column: 19, scope: !4644)
!4658 = !DILocation(line: 650, column: 23, scope: !4644)
!4659 = !DILocation(line: 650, column: 35, scope: !4644)
!4660 = !DILocalVariable(name: "fp", scope: !4644, file: !3, line: 651, type: !320)
!4661 = !DILocation(line: 651, column: 9, scope: !4644)
!4662 = !DILocalVariable(name: "mvert", scope: !4644, file: !3, line: 652, type: !2812)
!4663 = !DILocation(line: 652, column: 9, scope: !4644)
!4664 = !DILocation(line: 654, column: 6, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4644, file: !3, line: 654, column: 6)
!4666 = !DILocation(line: 654, column: 14, scope: !4665)
!4667 = !DILocation(line: 654, column: 19, scope: !4665)
!4668 = !DILocation(line: 654, column: 22, scope: !4665)
!4669 = !DILocation(line: 654, column: 26, scope: !4665)
!4670 = !DILocation(line: 654, column: 34, scope: !4665)
!4671 = !DILocation(line: 654, column: 39, scope: !4665)
!4672 = !DILocation(line: 654, column: 42, scope: !4665)
!4673 = !DILocation(line: 654, column: 46, scope: !4665)
!4674 = !DILocation(line: 654, column: 57, scope: !4665)
!4675 = !DILocation(line: 654, column: 54, scope: !4665)
!4676 = !DILocation(line: 654, column: 6, scope: !4644)
!4677 = !DILocation(line: 654, column: 66, scope: !4665)
!4678 = !DILocation(line: 656, column: 6, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4644, file: !3, line: 656, column: 6)
!4680 = !DILocation(line: 656, column: 10, scope: !4679)
!4681 = !DILocation(line: 656, column: 6, scope: !4644)
!4682 = !DILocation(line: 656, column: 16, scope: !4679)
!4683 = !DILocation(line: 656, column: 26, scope: !4679)
!4684 = !DILocation(line: 656, column: 30, scope: !4679)
!4685 = !DILocation(line: 657, column: 13, scope: !4644)
!4686 = !DILocation(line: 657, column: 25, scope: !4644)
!4687 = !DILocation(line: 657, column: 29, scope: !4644)
!4688 = !DILocation(line: 657, column: 34, scope: !4644)
!4689 = !DILocation(line: 657, column: 45, scope: !4644)
!4690 = !DILocation(line: 657, column: 49, scope: !4644)
!4691 = !DILocation(line: 657, column: 43, scope: !4644)
!4692 = !DILocation(line: 657, column: 2, scope: !4644)
!4693 = !DILocation(line: 657, column: 6, scope: !4644)
!4694 = !DILocation(line: 657, column: 11, scope: !4644)
!4695 = !DILocation(line: 658, column: 16, scope: !4644)
!4696 = !DILocation(line: 658, column: 2, scope: !4644)
!4697 = !DILocation(line: 658, column: 6, scope: !4644)
!4698 = !DILocation(line: 658, column: 14, scope: !4644)
!4699 = !DILocation(line: 660, column: 7, scope: !4644)
!4700 = !DILocation(line: 660, column: 11, scope: !4644)
!4701 = !DILocation(line: 660, column: 5, scope: !4644)
!4702 = !DILocation(line: 661, column: 10, scope: !4644)
!4703 = !DILocation(line: 661, column: 14, scope: !4644)
!4704 = !DILocation(line: 661, column: 31, scope: !4644)
!4705 = !DILocation(line: 661, column: 8, scope: !4644)
!4706 = !DILocation(line: 663, column: 9, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4644, file: !3, line: 663, column: 2)
!4708 = !DILocation(line: 663, column: 7, scope: !4707)
!4709 = !DILocation(line: 663, column: 14, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4707, file: !3, line: 663, column: 2)
!4711 = !DILocation(line: 663, column: 18, scope: !4710)
!4712 = !DILocation(line: 663, column: 22, scope: !4710)
!4713 = !DILocation(line: 663, column: 16, scope: !4710)
!4714 = !DILocation(line: 663, column: 2, scope: !4707)
!4715 = !DILocation(line: 664, column: 14, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4710, file: !3, line: 663, column: 54)
!4717 = !DILocation(line: 664, column: 18, scope: !4716)
!4718 = !DILocation(line: 664, column: 25, scope: !4716)
!4719 = !DILocation(line: 664, column: 3, scope: !4716)
!4720 = !DILocation(line: 665, column: 2, scope: !4716)
!4721 = !DILocation(line: 663, column: 32, scope: !4710)
!4722 = !DILocation(line: 663, column: 39, scope: !4710)
!4723 = !DILocation(line: 663, column: 50, scope: !4710)
!4724 = !DILocation(line: 663, column: 2, scope: !4710)
!4725 = distinct !{!4725, !4714, !4726}
!4726 = !DILocation(line: 665, column: 2, scope: !4707)
!4727 = !DILocation(line: 666, column: 1, scope: !4644)
!4728 = distinct !DISubprogram(name: "copy_v3_v3", scope: !4729, file: !4729, line: 64, type: !4730, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!4729 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4730 = !DISubroutineType(types: !4731)
!4731 = !{null, !320, !2272}
!4732 = !DILocalVariable(name: "r", arg: 1, scope: !4728, file: !4729, line: 64, type: !320)
!4733 = !DILocation(line: 64, column: 31, scope: !4728)
!4734 = !DILocalVariable(name: "a", arg: 2, scope: !4728, file: !4729, line: 64, type: !2272)
!4735 = !DILocation(line: 64, column: 49, scope: !4728)
!4736 = !DILocation(line: 66, column: 9, scope: !4728)
!4737 = !DILocation(line: 66, column: 2, scope: !4728)
!4738 = !DILocation(line: 66, column: 7, scope: !4728)
!4739 = !DILocation(line: 67, column: 9, scope: !4728)
!4740 = !DILocation(line: 67, column: 2, scope: !4728)
!4741 = !DILocation(line: 67, column: 7, scope: !4728)
!4742 = !DILocation(line: 68, column: 9, scope: !4728)
!4743 = !DILocation(line: 68, column: 2, scope: !4728)
!4744 = !DILocation(line: 68, column: 7, scope: !4728)
!4745 = !DILocation(line: 69, column: 1, scope: !4728)
!4746 = distinct !DISubprogram(name: "DM_set_only_copy", scope: !3, file: !3, line: 668, type: !4747, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!4747 = !DISubroutineType(types: !4748)
!4748 = !{null, !2108, !2768}
!4749 = !DILocalVariable(name: "dm", arg: 1, scope: !4746, file: !3, line: 668, type: !2108)
!4750 = !DILocation(line: 668, column: 36, scope: !4746)
!4751 = !DILocalVariable(name: "mask", arg: 2, scope: !4746, file: !3, line: 668, type: !2768)
!4752 = !DILocation(line: 668, column: 55, scope: !4746)
!4753 = !DILocation(line: 670, column: 28, scope: !4746)
!4754 = !DILocation(line: 670, column: 32, scope: !4746)
!4755 = !DILocation(line: 670, column: 42, scope: !4746)
!4756 = !DILocation(line: 670, column: 2, scope: !4746)
!4757 = !DILocation(line: 671, column: 28, scope: !4746)
!4758 = !DILocation(line: 671, column: 32, scope: !4746)
!4759 = !DILocation(line: 671, column: 42, scope: !4746)
!4760 = !DILocation(line: 671, column: 2, scope: !4746)
!4761 = !DILocation(line: 672, column: 28, scope: !4746)
!4762 = !DILocation(line: 672, column: 32, scope: !4746)
!4763 = !DILocation(line: 672, column: 42, scope: !4746)
!4764 = !DILocation(line: 672, column: 2, scope: !4746)
!4765 = !DILocation(line: 680, column: 1, scope: !4746)
!4766 = distinct !DISubprogram(name: "DM_add_vert_layer", scope: !3, file: !3, line: 682, type: !4767, scopeLine: 683, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!4767 = !DISubroutineType(types: !4768)
!4768 = !{null, !2108, !156, !156, !318}
!4769 = !DILocalVariable(name: "dm", arg: 1, scope: !4766, file: !3, line: 682, type: !2108)
!4770 = !DILocation(line: 682, column: 37, scope: !4766)
!4771 = !DILocalVariable(name: "type", arg: 2, scope: !4766, file: !3, line: 682, type: !156)
!4772 = !DILocation(line: 682, column: 45, scope: !4766)
!4773 = !DILocalVariable(name: "alloctype", arg: 3, scope: !4766, file: !3, line: 682, type: !156)
!4774 = !DILocation(line: 682, column: 55, scope: !4766)
!4775 = !DILocalVariable(name: "layer", arg: 4, scope: !4766, file: !3, line: 682, type: !318)
!4776 = !DILocation(line: 682, column: 72, scope: !4766)
!4777 = !DILocation(line: 684, column: 24, scope: !4766)
!4778 = !DILocation(line: 684, column: 28, scope: !4766)
!4779 = !DILocation(line: 684, column: 38, scope: !4766)
!4780 = !DILocation(line: 684, column: 44, scope: !4766)
!4781 = !DILocation(line: 684, column: 55, scope: !4766)
!4782 = !DILocation(line: 684, column: 62, scope: !4766)
!4783 = !DILocation(line: 684, column: 66, scope: !4766)
!4784 = !DILocation(line: 684, column: 2, scope: !4766)
!4785 = !DILocation(line: 685, column: 1, scope: !4766)
!4786 = distinct !DISubprogram(name: "DM_add_edge_layer", scope: !3, file: !3, line: 687, type: !4767, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!4787 = !DILocalVariable(name: "dm", arg: 1, scope: !4786, file: !3, line: 687, type: !2108)
!4788 = !DILocation(line: 687, column: 37, scope: !4786)
!4789 = !DILocalVariable(name: "type", arg: 2, scope: !4786, file: !3, line: 687, type: !156)
!4790 = !DILocation(line: 687, column: 45, scope: !4786)
!4791 = !DILocalVariable(name: "alloctype", arg: 3, scope: !4786, file: !3, line: 687, type: !156)
!4792 = !DILocation(line: 687, column: 55, scope: !4786)
!4793 = !DILocalVariable(name: "layer", arg: 4, scope: !4786, file: !3, line: 687, type: !318)
!4794 = !DILocation(line: 687, column: 72, scope: !4786)
!4795 = !DILocation(line: 689, column: 24, scope: !4786)
!4796 = !DILocation(line: 689, column: 28, scope: !4786)
!4797 = !DILocation(line: 689, column: 38, scope: !4786)
!4798 = !DILocation(line: 689, column: 44, scope: !4786)
!4799 = !DILocation(line: 689, column: 55, scope: !4786)
!4800 = !DILocation(line: 689, column: 62, scope: !4786)
!4801 = !DILocation(line: 689, column: 66, scope: !4786)
!4802 = !DILocation(line: 689, column: 2, scope: !4786)
!4803 = !DILocation(line: 690, column: 1, scope: !4786)
!4804 = distinct !DISubprogram(name: "DM_add_tessface_layer", scope: !3, file: !3, line: 692, type: !4767, scopeLine: 693, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!4805 = !DILocalVariable(name: "dm", arg: 1, scope: !4804, file: !3, line: 692, type: !2108)
!4806 = !DILocation(line: 692, column: 41, scope: !4804)
!4807 = !DILocalVariable(name: "type", arg: 2, scope: !4804, file: !3, line: 692, type: !156)
!4808 = !DILocation(line: 692, column: 49, scope: !4804)
!4809 = !DILocalVariable(name: "alloctype", arg: 3, scope: !4804, file: !3, line: 692, type: !156)
!4810 = !DILocation(line: 692, column: 59, scope: !4804)
!4811 = !DILocalVariable(name: "layer", arg: 4, scope: !4804, file: !3, line: 692, type: !318)
!4812 = !DILocation(line: 692, column: 76, scope: !4804)
!4813 = !DILocation(line: 694, column: 24, scope: !4804)
!4814 = !DILocation(line: 694, column: 28, scope: !4804)
!4815 = !DILocation(line: 694, column: 38, scope: !4804)
!4816 = !DILocation(line: 694, column: 44, scope: !4804)
!4817 = !DILocation(line: 694, column: 55, scope: !4804)
!4818 = !DILocation(line: 694, column: 62, scope: !4804)
!4819 = !DILocation(line: 694, column: 66, scope: !4804)
!4820 = !DILocation(line: 694, column: 2, scope: !4804)
!4821 = !DILocation(line: 695, column: 1, scope: !4804)
!4822 = distinct !DISubprogram(name: "DM_add_loop_layer", scope: !3, file: !3, line: 697, type: !4767, scopeLine: 698, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!4823 = !DILocalVariable(name: "dm", arg: 1, scope: !4822, file: !3, line: 697, type: !2108)
!4824 = !DILocation(line: 697, column: 37, scope: !4822)
!4825 = !DILocalVariable(name: "type", arg: 2, scope: !4822, file: !3, line: 697, type: !156)
!4826 = !DILocation(line: 697, column: 45, scope: !4822)
!4827 = !DILocalVariable(name: "alloctype", arg: 3, scope: !4822, file: !3, line: 697, type: !156)
!4828 = !DILocation(line: 697, column: 55, scope: !4822)
!4829 = !DILocalVariable(name: "layer", arg: 4, scope: !4822, file: !3, line: 697, type: !318)
!4830 = !DILocation(line: 697, column: 72, scope: !4822)
!4831 = !DILocation(line: 699, column: 24, scope: !4822)
!4832 = !DILocation(line: 699, column: 28, scope: !4822)
!4833 = !DILocation(line: 699, column: 38, scope: !4822)
!4834 = !DILocation(line: 699, column: 44, scope: !4822)
!4835 = !DILocation(line: 699, column: 55, scope: !4822)
!4836 = !DILocation(line: 699, column: 62, scope: !4822)
!4837 = !DILocation(line: 699, column: 66, scope: !4822)
!4838 = !DILocation(line: 699, column: 2, scope: !4822)
!4839 = !DILocation(line: 700, column: 1, scope: !4822)
!4840 = distinct !DISubprogram(name: "DM_add_poly_layer", scope: !3, file: !3, line: 702, type: !4767, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!4841 = !DILocalVariable(name: "dm", arg: 1, scope: !4840, file: !3, line: 702, type: !2108)
!4842 = !DILocation(line: 702, column: 37, scope: !4840)
!4843 = !DILocalVariable(name: "type", arg: 2, scope: !4840, file: !3, line: 702, type: !156)
!4844 = !DILocation(line: 702, column: 45, scope: !4840)
!4845 = !DILocalVariable(name: "alloctype", arg: 3, scope: !4840, file: !3, line: 702, type: !156)
!4846 = !DILocation(line: 702, column: 55, scope: !4840)
!4847 = !DILocalVariable(name: "layer", arg: 4, scope: !4840, file: !3, line: 702, type: !318)
!4848 = !DILocation(line: 702, column: 72, scope: !4840)
!4849 = !DILocation(line: 704, column: 24, scope: !4840)
!4850 = !DILocation(line: 704, column: 28, scope: !4840)
!4851 = !DILocation(line: 704, column: 38, scope: !4840)
!4852 = !DILocation(line: 704, column: 44, scope: !4840)
!4853 = !DILocation(line: 704, column: 55, scope: !4840)
!4854 = !DILocation(line: 704, column: 62, scope: !4840)
!4855 = !DILocation(line: 704, column: 66, scope: !4840)
!4856 = !DILocation(line: 704, column: 2, scope: !4840)
!4857 = !DILocation(line: 705, column: 1, scope: !4840)
!4858 = distinct !DISubprogram(name: "DM_set_vert_data", scope: !3, file: !3, line: 766, type: !4767, scopeLine: 767, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!4859 = !DILocalVariable(name: "dm", arg: 1, scope: !4858, file: !3, line: 766, type: !2108)
!4860 = !DILocation(line: 766, column: 36, scope: !4858)
!4861 = !DILocalVariable(name: "index", arg: 2, scope: !4858, file: !3, line: 766, type: !156)
!4862 = !DILocation(line: 766, column: 44, scope: !4858)
!4863 = !DILocalVariable(name: "type", arg: 3, scope: !4858, file: !3, line: 766, type: !156)
!4864 = !DILocation(line: 766, column: 55, scope: !4858)
!4865 = !DILocalVariable(name: "data", arg: 4, scope: !4858, file: !3, line: 766, type: !318)
!4866 = !DILocation(line: 766, column: 67, scope: !4858)
!4867 = !DILocation(line: 768, column: 18, scope: !4858)
!4868 = !DILocation(line: 768, column: 22, scope: !4858)
!4869 = !DILocation(line: 768, column: 32, scope: !4858)
!4870 = !DILocation(line: 768, column: 39, scope: !4858)
!4871 = !DILocation(line: 768, column: 45, scope: !4858)
!4872 = !DILocation(line: 768, column: 2, scope: !4858)
!4873 = !DILocation(line: 769, column: 1, scope: !4858)
!4874 = distinct !DISubprogram(name: "DM_set_edge_data", scope: !3, file: !3, line: 771, type: !4767, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!4875 = !DILocalVariable(name: "dm", arg: 1, scope: !4874, file: !3, line: 771, type: !2108)
!4876 = !DILocation(line: 771, column: 36, scope: !4874)
!4877 = !DILocalVariable(name: "index", arg: 2, scope: !4874, file: !3, line: 771, type: !156)
!4878 = !DILocation(line: 771, column: 44, scope: !4874)
!4879 = !DILocalVariable(name: "type", arg: 3, scope: !4874, file: !3, line: 771, type: !156)
!4880 = !DILocation(line: 771, column: 55, scope: !4874)
!4881 = !DILocalVariable(name: "data", arg: 4, scope: !4874, file: !3, line: 771, type: !318)
!4882 = !DILocation(line: 771, column: 67, scope: !4874)
!4883 = !DILocation(line: 773, column: 18, scope: !4874)
!4884 = !DILocation(line: 773, column: 22, scope: !4874)
!4885 = !DILocation(line: 773, column: 32, scope: !4874)
!4886 = !DILocation(line: 773, column: 39, scope: !4874)
!4887 = !DILocation(line: 773, column: 45, scope: !4874)
!4888 = !DILocation(line: 773, column: 2, scope: !4874)
!4889 = !DILocation(line: 774, column: 1, scope: !4874)
!4890 = distinct !DISubprogram(name: "DM_set_tessface_data", scope: !3, file: !3, line: 776, type: !4767, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!4891 = !DILocalVariable(name: "dm", arg: 1, scope: !4890, file: !3, line: 776, type: !2108)
!4892 = !DILocation(line: 776, column: 40, scope: !4890)
!4893 = !DILocalVariable(name: "index", arg: 2, scope: !4890, file: !3, line: 776, type: !156)
!4894 = !DILocation(line: 776, column: 48, scope: !4890)
!4895 = !DILocalVariable(name: "type", arg: 3, scope: !4890, file: !3, line: 776, type: !156)
!4896 = !DILocation(line: 776, column: 59, scope: !4890)
!4897 = !DILocalVariable(name: "data", arg: 4, scope: !4890, file: !3, line: 776, type: !318)
!4898 = !DILocation(line: 776, column: 71, scope: !4890)
!4899 = !DILocation(line: 778, column: 18, scope: !4890)
!4900 = !DILocation(line: 778, column: 22, scope: !4890)
!4901 = !DILocation(line: 778, column: 32, scope: !4890)
!4902 = !DILocation(line: 778, column: 39, scope: !4890)
!4903 = !DILocation(line: 778, column: 45, scope: !4890)
!4904 = !DILocation(line: 778, column: 2, scope: !4890)
!4905 = !DILocation(line: 779, column: 1, scope: !4890)
!4906 = distinct !DISubprogram(name: "DM_copy_vert_data", scope: !3, file: !3, line: 781, type: !4907, scopeLine: 783, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!4907 = !DISubroutineType(types: !4908)
!4908 = !{null, !2108, !2108, !156, !156, !156}
!4909 = !DILocalVariable(name: "source", arg: 1, scope: !4906, file: !3, line: 781, type: !2108)
!4910 = !DILocation(line: 781, column: 37, scope: !4906)
!4911 = !DILocalVariable(name: "dest", arg: 2, scope: !4906, file: !3, line: 781, type: !2108)
!4912 = !DILocation(line: 781, column: 58, scope: !4906)
!4913 = !DILocalVariable(name: "source_index", arg: 3, scope: !4906, file: !3, line: 782, type: !156)
!4914 = !DILocation(line: 782, column: 28, scope: !4906)
!4915 = !DILocalVariable(name: "dest_index", arg: 4, scope: !4906, file: !3, line: 782, type: !156)
!4916 = !DILocation(line: 782, column: 46, scope: !4906)
!4917 = !DILocalVariable(name: "count", arg: 5, scope: !4906, file: !3, line: 782, type: !156)
!4918 = !DILocation(line: 782, column: 62, scope: !4906)
!4919 = !DILocation(line: 784, column: 24, scope: !4906)
!4920 = !DILocation(line: 784, column: 32, scope: !4906)
!4921 = !DILocation(line: 784, column: 43, scope: !4906)
!4922 = !DILocation(line: 784, column: 49, scope: !4906)
!4923 = !DILocation(line: 785, column: 23, scope: !4906)
!4924 = !DILocation(line: 785, column: 37, scope: !4906)
!4925 = !DILocation(line: 785, column: 49, scope: !4906)
!4926 = !DILocation(line: 784, column: 2, scope: !4906)
!4927 = !DILocation(line: 786, column: 1, scope: !4906)
!4928 = distinct !DISubprogram(name: "DM_copy_edge_data", scope: !3, file: !3, line: 788, type: !4907, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!4929 = !DILocalVariable(name: "source", arg: 1, scope: !4928, file: !3, line: 788, type: !2108)
!4930 = !DILocation(line: 788, column: 37, scope: !4928)
!4931 = !DILocalVariable(name: "dest", arg: 2, scope: !4928, file: !3, line: 788, type: !2108)
!4932 = !DILocation(line: 788, column: 58, scope: !4928)
!4933 = !DILocalVariable(name: "source_index", arg: 3, scope: !4928, file: !3, line: 789, type: !156)
!4934 = !DILocation(line: 789, column: 28, scope: !4928)
!4935 = !DILocalVariable(name: "dest_index", arg: 4, scope: !4928, file: !3, line: 789, type: !156)
!4936 = !DILocation(line: 789, column: 46, scope: !4928)
!4937 = !DILocalVariable(name: "count", arg: 5, scope: !4928, file: !3, line: 789, type: !156)
!4938 = !DILocation(line: 789, column: 62, scope: !4928)
!4939 = !DILocation(line: 791, column: 24, scope: !4928)
!4940 = !DILocation(line: 791, column: 32, scope: !4928)
!4941 = !DILocation(line: 791, column: 43, scope: !4928)
!4942 = !DILocation(line: 791, column: 49, scope: !4928)
!4943 = !DILocation(line: 792, column: 23, scope: !4928)
!4944 = !DILocation(line: 792, column: 37, scope: !4928)
!4945 = !DILocation(line: 792, column: 49, scope: !4928)
!4946 = !DILocation(line: 791, column: 2, scope: !4928)
!4947 = !DILocation(line: 793, column: 1, scope: !4928)
!4948 = distinct !DISubprogram(name: "DM_copy_tessface_data", scope: !3, file: !3, line: 795, type: !4907, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!4949 = !DILocalVariable(name: "source", arg: 1, scope: !4948, file: !3, line: 795, type: !2108)
!4950 = !DILocation(line: 795, column: 41, scope: !4948)
!4951 = !DILocalVariable(name: "dest", arg: 2, scope: !4948, file: !3, line: 795, type: !2108)
!4952 = !DILocation(line: 795, column: 62, scope: !4948)
!4953 = !DILocalVariable(name: "source_index", arg: 3, scope: !4948, file: !3, line: 796, type: !156)
!4954 = !DILocation(line: 796, column: 32, scope: !4948)
!4955 = !DILocalVariable(name: "dest_index", arg: 4, scope: !4948, file: !3, line: 796, type: !156)
!4956 = !DILocation(line: 796, column: 50, scope: !4948)
!4957 = !DILocalVariable(name: "count", arg: 5, scope: !4948, file: !3, line: 796, type: !156)
!4958 = !DILocation(line: 796, column: 66, scope: !4948)
!4959 = !DILocation(line: 798, column: 24, scope: !4948)
!4960 = !DILocation(line: 798, column: 32, scope: !4948)
!4961 = !DILocation(line: 798, column: 43, scope: !4948)
!4962 = !DILocation(line: 798, column: 49, scope: !4948)
!4963 = !DILocation(line: 799, column: 23, scope: !4948)
!4964 = !DILocation(line: 799, column: 37, scope: !4948)
!4965 = !DILocation(line: 799, column: 49, scope: !4948)
!4966 = !DILocation(line: 798, column: 2, scope: !4948)
!4967 = !DILocation(line: 800, column: 1, scope: !4948)
!4968 = distinct !DISubprogram(name: "DM_copy_loop_data", scope: !3, file: !3, line: 802, type: !4907, scopeLine: 804, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!4969 = !DILocalVariable(name: "source", arg: 1, scope: !4968, file: !3, line: 802, type: !2108)
!4970 = !DILocation(line: 802, column: 37, scope: !4968)
!4971 = !DILocalVariable(name: "dest", arg: 2, scope: !4968, file: !3, line: 802, type: !2108)
!4972 = !DILocation(line: 802, column: 58, scope: !4968)
!4973 = !DILocalVariable(name: "source_index", arg: 3, scope: !4968, file: !3, line: 803, type: !156)
!4974 = !DILocation(line: 803, column: 28, scope: !4968)
!4975 = !DILocalVariable(name: "dest_index", arg: 4, scope: !4968, file: !3, line: 803, type: !156)
!4976 = !DILocation(line: 803, column: 46, scope: !4968)
!4977 = !DILocalVariable(name: "count", arg: 5, scope: !4968, file: !3, line: 803, type: !156)
!4978 = !DILocation(line: 803, column: 62, scope: !4968)
!4979 = !DILocation(line: 805, column: 24, scope: !4968)
!4980 = !DILocation(line: 805, column: 32, scope: !4968)
!4981 = !DILocation(line: 805, column: 43, scope: !4968)
!4982 = !DILocation(line: 805, column: 49, scope: !4968)
!4983 = !DILocation(line: 806, column: 23, scope: !4968)
!4984 = !DILocation(line: 806, column: 37, scope: !4968)
!4985 = !DILocation(line: 806, column: 49, scope: !4968)
!4986 = !DILocation(line: 805, column: 2, scope: !4968)
!4987 = !DILocation(line: 807, column: 1, scope: !4968)
!4988 = distinct !DISubprogram(name: "DM_copy_poly_data", scope: !3, file: !3, line: 809, type: !4907, scopeLine: 811, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!4989 = !DILocalVariable(name: "source", arg: 1, scope: !4988, file: !3, line: 809, type: !2108)
!4990 = !DILocation(line: 809, column: 37, scope: !4988)
!4991 = !DILocalVariable(name: "dest", arg: 2, scope: !4988, file: !3, line: 809, type: !2108)
!4992 = !DILocation(line: 809, column: 58, scope: !4988)
!4993 = !DILocalVariable(name: "source_index", arg: 3, scope: !4988, file: !3, line: 810, type: !156)
!4994 = !DILocation(line: 810, column: 28, scope: !4988)
!4995 = !DILocalVariable(name: "dest_index", arg: 4, scope: !4988, file: !3, line: 810, type: !156)
!4996 = !DILocation(line: 810, column: 46, scope: !4988)
!4997 = !DILocalVariable(name: "count", arg: 5, scope: !4988, file: !3, line: 810, type: !156)
!4998 = !DILocation(line: 810, column: 62, scope: !4988)
!4999 = !DILocation(line: 812, column: 24, scope: !4988)
!5000 = !DILocation(line: 812, column: 32, scope: !4988)
!5001 = !DILocation(line: 812, column: 43, scope: !4988)
!5002 = !DILocation(line: 812, column: 49, scope: !4988)
!5003 = !DILocation(line: 813, column: 23, scope: !4988)
!5004 = !DILocation(line: 813, column: 37, scope: !4988)
!5005 = !DILocation(line: 813, column: 49, scope: !4988)
!5006 = !DILocation(line: 812, column: 2, scope: !4988)
!5007 = !DILocation(line: 814, column: 1, scope: !4988)
!5008 = distinct !DISubprogram(name: "DM_free_vert_data", scope: !3, file: !3, line: 816, type: !5009, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!5009 = !DISubroutineType(types: !5010)
!5010 = !{null, !2036, !156, !156}
!5011 = !DILocalVariable(name: "dm", arg: 1, scope: !5008, file: !3, line: 816, type: !2036)
!5012 = !DILocation(line: 816, column: 44, scope: !5008)
!5013 = !DILocalVariable(name: "index", arg: 2, scope: !5008, file: !3, line: 816, type: !156)
!5014 = !DILocation(line: 816, column: 52, scope: !5008)
!5015 = !DILocalVariable(name: "count", arg: 3, scope: !5008, file: !3, line: 816, type: !156)
!5016 = !DILocation(line: 816, column: 63, scope: !5008)
!5017 = !DILocation(line: 818, column: 24, scope: !5008)
!5018 = !DILocation(line: 818, column: 28, scope: !5008)
!5019 = !DILocation(line: 818, column: 38, scope: !5008)
!5020 = !DILocation(line: 818, column: 45, scope: !5008)
!5021 = !DILocation(line: 818, column: 2, scope: !5008)
!5022 = !DILocation(line: 819, column: 1, scope: !5008)
!5023 = distinct !DISubprogram(name: "DM_free_edge_data", scope: !3, file: !3, line: 821, type: !5009, scopeLine: 822, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!5024 = !DILocalVariable(name: "dm", arg: 1, scope: !5023, file: !3, line: 821, type: !2036)
!5025 = !DILocation(line: 821, column: 44, scope: !5023)
!5026 = !DILocalVariable(name: "index", arg: 2, scope: !5023, file: !3, line: 821, type: !156)
!5027 = !DILocation(line: 821, column: 52, scope: !5023)
!5028 = !DILocalVariable(name: "count", arg: 3, scope: !5023, file: !3, line: 821, type: !156)
!5029 = !DILocation(line: 821, column: 63, scope: !5023)
!5030 = !DILocation(line: 823, column: 24, scope: !5023)
!5031 = !DILocation(line: 823, column: 28, scope: !5023)
!5032 = !DILocation(line: 823, column: 38, scope: !5023)
!5033 = !DILocation(line: 823, column: 45, scope: !5023)
!5034 = !DILocation(line: 823, column: 2, scope: !5023)
!5035 = !DILocation(line: 824, column: 1, scope: !5023)
!5036 = distinct !DISubprogram(name: "DM_free_tessface_data", scope: !3, file: !3, line: 826, type: !5009, scopeLine: 827, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!5037 = !DILocalVariable(name: "dm", arg: 1, scope: !5036, file: !3, line: 826, type: !2036)
!5038 = !DILocation(line: 826, column: 48, scope: !5036)
!5039 = !DILocalVariable(name: "index", arg: 2, scope: !5036, file: !3, line: 826, type: !156)
!5040 = !DILocation(line: 826, column: 56, scope: !5036)
!5041 = !DILocalVariable(name: "count", arg: 3, scope: !5036, file: !3, line: 826, type: !156)
!5042 = !DILocation(line: 826, column: 67, scope: !5036)
!5043 = !DILocation(line: 828, column: 24, scope: !5036)
!5044 = !DILocation(line: 828, column: 28, scope: !5036)
!5045 = !DILocation(line: 828, column: 38, scope: !5036)
!5046 = !DILocation(line: 828, column: 45, scope: !5036)
!5047 = !DILocation(line: 828, column: 2, scope: !5036)
!5048 = !DILocation(line: 829, column: 1, scope: !5036)
!5049 = distinct !DISubprogram(name: "DM_free_loop_data", scope: !3, file: !3, line: 831, type: !5009, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!5050 = !DILocalVariable(name: "dm", arg: 1, scope: !5049, file: !3, line: 831, type: !2036)
!5051 = !DILocation(line: 831, column: 44, scope: !5049)
!5052 = !DILocalVariable(name: "index", arg: 2, scope: !5049, file: !3, line: 831, type: !156)
!5053 = !DILocation(line: 831, column: 52, scope: !5049)
!5054 = !DILocalVariable(name: "count", arg: 3, scope: !5049, file: !3, line: 831, type: !156)
!5055 = !DILocation(line: 831, column: 63, scope: !5049)
!5056 = !DILocation(line: 833, column: 24, scope: !5049)
!5057 = !DILocation(line: 833, column: 28, scope: !5049)
!5058 = !DILocation(line: 833, column: 38, scope: !5049)
!5059 = !DILocation(line: 833, column: 45, scope: !5049)
!5060 = !DILocation(line: 833, column: 2, scope: !5049)
!5061 = !DILocation(line: 834, column: 1, scope: !5049)
!5062 = distinct !DISubprogram(name: "DM_free_poly_data", scope: !3, file: !3, line: 836, type: !5009, scopeLine: 837, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!5063 = !DILocalVariable(name: "dm", arg: 1, scope: !5062, file: !3, line: 836, type: !2036)
!5064 = !DILocation(line: 836, column: 44, scope: !5062)
!5065 = !DILocalVariable(name: "index", arg: 2, scope: !5062, file: !3, line: 836, type: !156)
!5066 = !DILocation(line: 836, column: 52, scope: !5062)
!5067 = !DILocalVariable(name: "count", arg: 3, scope: !5062, file: !3, line: 836, type: !156)
!5068 = !DILocation(line: 836, column: 63, scope: !5062)
!5069 = !DILocation(line: 838, column: 24, scope: !5062)
!5070 = !DILocation(line: 838, column: 28, scope: !5062)
!5071 = !DILocation(line: 838, column: 38, scope: !5062)
!5072 = !DILocation(line: 838, column: 45, scope: !5062)
!5073 = !DILocation(line: 838, column: 2, scope: !5062)
!5074 = !DILocation(line: 839, column: 1, scope: !5062)
!5075 = distinct !DISubprogram(name: "DM_interp_vert_data", scope: !3, file: !3, line: 841, type: !5076, scopeLine: 844, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!5076 = !DISubroutineType(types: !5077)
!5077 = !{null, !2108, !2108, !328, !320, !156, !156}
!5078 = !DILocalVariable(name: "source", arg: 1, scope: !5075, file: !3, line: 841, type: !2108)
!5079 = !DILocation(line: 841, column: 39, scope: !5075)
!5080 = !DILocalVariable(name: "dest", arg: 2, scope: !5075, file: !3, line: 841, type: !2108)
!5081 = !DILocation(line: 841, column: 60, scope: !5075)
!5082 = !DILocalVariable(name: "src_indices", arg: 3, scope: !5075, file: !3, line: 842, type: !328)
!5083 = !DILocation(line: 842, column: 31, scope: !5075)
!5084 = !DILocalVariable(name: "weights", arg: 4, scope: !5075, file: !3, line: 842, type: !320)
!5085 = !DILocation(line: 842, column: 51, scope: !5075)
!5086 = !DILocalVariable(name: "count", arg: 5, scope: !5075, file: !3, line: 843, type: !156)
!5087 = !DILocation(line: 843, column: 30, scope: !5075)
!5088 = !DILocalVariable(name: "dest_index", arg: 6, scope: !5075, file: !3, line: 843, type: !156)
!5089 = !DILocation(line: 843, column: 41, scope: !5075)
!5090 = !DILocation(line: 845, column: 21, scope: !5075)
!5091 = !DILocation(line: 845, column: 29, scope: !5075)
!5092 = !DILocation(line: 845, column: 40, scope: !5075)
!5093 = !DILocation(line: 845, column: 46, scope: !5075)
!5094 = !DILocation(line: 845, column: 56, scope: !5075)
!5095 = !DILocation(line: 846, column: 20, scope: !5075)
!5096 = !DILocation(line: 846, column: 35, scope: !5075)
!5097 = !DILocation(line: 846, column: 42, scope: !5075)
!5098 = !DILocation(line: 845, column: 2, scope: !5075)
!5099 = !DILocation(line: 847, column: 1, scope: !5075)
!5100 = distinct !DISubprogram(name: "DM_interp_edge_data", scope: !3, file: !3, line: 849, type: !5101, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!5101 = !DISubroutineType(types: !5102)
!5102 = !{null, !2108, !2108, !328, !320, !5103, !156, !156}
!5103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5104, size: 64)
!5104 = !DIDerivedType(tag: DW_TAG_typedef, name: "EdgeVertWeight", file: !6, line: 615, baseType: !5105)
!5105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !321, size: 128, elements: !5106)
!5106 = !{!841, !841}
!5107 = !DILocalVariable(name: "source", arg: 1, scope: !5100, file: !3, line: 849, type: !2108)
!5108 = !DILocation(line: 849, column: 39, scope: !5100)
!5109 = !DILocalVariable(name: "dest", arg: 2, scope: !5100, file: !3, line: 849, type: !2108)
!5110 = !DILocation(line: 849, column: 60, scope: !5100)
!5111 = !DILocalVariable(name: "src_indices", arg: 3, scope: !5100, file: !3, line: 850, type: !328)
!5112 = !DILocation(line: 850, column: 31, scope: !5100)
!5113 = !DILocalVariable(name: "weights", arg: 4, scope: !5100, file: !3, line: 851, type: !320)
!5114 = !DILocation(line: 851, column: 33, scope: !5100)
!5115 = !DILocalVariable(name: "vert_weights", arg: 5, scope: !5100, file: !3, line: 851, type: !5103)
!5116 = !DILocation(line: 851, column: 58, scope: !5100)
!5117 = !DILocalVariable(name: "count", arg: 6, scope: !5100, file: !3, line: 852, type: !156)
!5118 = !DILocation(line: 852, column: 30, scope: !5100)
!5119 = !DILocalVariable(name: "dest_index", arg: 7, scope: !5100, file: !3, line: 852, type: !156)
!5120 = !DILocation(line: 852, column: 41, scope: !5100)
!5121 = !DILocation(line: 854, column: 21, scope: !5100)
!5122 = !DILocation(line: 854, column: 29, scope: !5100)
!5123 = !DILocation(line: 854, column: 40, scope: !5100)
!5124 = !DILocation(line: 854, column: 46, scope: !5100)
!5125 = !DILocation(line: 854, column: 56, scope: !5100)
!5126 = !DILocation(line: 855, column: 20, scope: !5100)
!5127 = !DILocation(line: 855, column: 38, scope: !5100)
!5128 = !DILocation(line: 855, column: 29, scope: !5100)
!5129 = !DILocation(line: 855, column: 52, scope: !5100)
!5130 = !DILocation(line: 855, column: 59, scope: !5100)
!5131 = !DILocation(line: 854, column: 2, scope: !5100)
!5132 = !DILocation(line: 856, column: 1, scope: !5100)
!5133 = distinct !DISubprogram(name: "DM_interp_tessface_data", scope: !3, file: !3, line: 858, type: !5134, scopeLine: 862, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!5134 = !DISubroutineType(types: !5135)
!5135 = !{null, !2108, !2108, !328, !320, !5136, !156, !156}
!5136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5137, size: 64)
!5137 = !DIDerivedType(tag: DW_TAG_typedef, name: "FaceVertWeight", file: !6, line: 628, baseType: !5138)
!5138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !321, size: 80000, elements: !5139)
!5139 = !{!5140, !5140}
!5140 = !DISubrange(count: 50)
!5141 = !DILocalVariable(name: "source", arg: 1, scope: !5133, file: !3, line: 858, type: !2108)
!5142 = !DILocation(line: 858, column: 43, scope: !5133)
!5143 = !DILocalVariable(name: "dest", arg: 2, scope: !5133, file: !3, line: 858, type: !2108)
!5144 = !DILocation(line: 858, column: 64, scope: !5133)
!5145 = !DILocalVariable(name: "src_indices", arg: 3, scope: !5133, file: !3, line: 859, type: !328)
!5146 = !DILocation(line: 859, column: 35, scope: !5133)
!5147 = !DILocalVariable(name: "weights", arg: 4, scope: !5133, file: !3, line: 860, type: !320)
!5148 = !DILocation(line: 860, column: 37, scope: !5133)
!5149 = !DILocalVariable(name: "vert_weights", arg: 5, scope: !5133, file: !3, line: 860, type: !5136)
!5150 = !DILocation(line: 860, column: 62, scope: !5133)
!5151 = !DILocalVariable(name: "count", arg: 6, scope: !5133, file: !3, line: 861, type: !156)
!5152 = !DILocation(line: 861, column: 34, scope: !5133)
!5153 = !DILocalVariable(name: "dest_index", arg: 7, scope: !5133, file: !3, line: 861, type: !156)
!5154 = !DILocation(line: 861, column: 45, scope: !5133)
!5155 = !DILocation(line: 863, column: 21, scope: !5133)
!5156 = !DILocation(line: 863, column: 29, scope: !5133)
!5157 = !DILocation(line: 863, column: 40, scope: !5133)
!5158 = !DILocation(line: 863, column: 46, scope: !5133)
!5159 = !DILocation(line: 863, column: 56, scope: !5133)
!5160 = !DILocation(line: 864, column: 20, scope: !5133)
!5161 = !DILocation(line: 864, column: 38, scope: !5133)
!5162 = !DILocation(line: 864, column: 29, scope: !5133)
!5163 = !DILocation(line: 864, column: 52, scope: !5133)
!5164 = !DILocation(line: 864, column: 59, scope: !5133)
!5165 = !DILocation(line: 863, column: 2, scope: !5133)
!5166 = !DILocation(line: 865, column: 1, scope: !5133)
!5167 = distinct !DISubprogram(name: "DM_swap_tessface_data", scope: !3, file: !3, line: 867, type: !5168, scopeLine: 868, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!5168 = !DISubroutineType(types: !5169)
!5169 = !{null, !2108, !156, !5170}
!5170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3793, size: 64)
!5171 = !DILocalVariable(name: "dm", arg: 1, scope: !5167, file: !3, line: 867, type: !2108)
!5172 = !DILocation(line: 867, column: 41, scope: !5167)
!5173 = !DILocalVariable(name: "index", arg: 2, scope: !5167, file: !3, line: 867, type: !156)
!5174 = !DILocation(line: 867, column: 49, scope: !5167)
!5175 = !DILocalVariable(name: "corner_indices", arg: 3, scope: !5167, file: !3, line: 867, type: !5170)
!5176 = !DILocation(line: 867, column: 67, scope: !5167)
!5177 = !DILocation(line: 869, column: 19, scope: !5167)
!5178 = !DILocation(line: 869, column: 23, scope: !5167)
!5179 = !DILocation(line: 869, column: 33, scope: !5167)
!5180 = !DILocation(line: 869, column: 40, scope: !5167)
!5181 = !DILocation(line: 869, column: 2, scope: !5167)
!5182 = !DILocation(line: 870, column: 1, scope: !5167)
!5183 = distinct !DISubprogram(name: "DM_interp_loop_data", scope: !3, file: !3, line: 872, type: !5076, scopeLine: 875, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!5184 = !DILocalVariable(name: "source", arg: 1, scope: !5183, file: !3, line: 872, type: !2108)
!5185 = !DILocation(line: 872, column: 39, scope: !5183)
!5186 = !DILocalVariable(name: "dest", arg: 2, scope: !5183, file: !3, line: 872, type: !2108)
!5187 = !DILocation(line: 872, column: 60, scope: !5183)
!5188 = !DILocalVariable(name: "src_indices", arg: 3, scope: !5183, file: !3, line: 873, type: !328)
!5189 = !DILocation(line: 873, column: 31, scope: !5183)
!5190 = !DILocalVariable(name: "weights", arg: 4, scope: !5183, file: !3, line: 874, type: !320)
!5191 = !DILocation(line: 874, column: 33, scope: !5183)
!5192 = !DILocalVariable(name: "count", arg: 5, scope: !5183, file: !3, line: 874, type: !156)
!5193 = !DILocation(line: 874, column: 46, scope: !5183)
!5194 = !DILocalVariable(name: "dest_index", arg: 6, scope: !5183, file: !3, line: 874, type: !156)
!5195 = !DILocation(line: 874, column: 57, scope: !5183)
!5196 = !DILocation(line: 876, column: 21, scope: !5183)
!5197 = !DILocation(line: 876, column: 29, scope: !5183)
!5198 = !DILocation(line: 876, column: 40, scope: !5183)
!5199 = !DILocation(line: 876, column: 46, scope: !5183)
!5200 = !DILocation(line: 876, column: 56, scope: !5183)
!5201 = !DILocation(line: 877, column: 20, scope: !5183)
!5202 = !DILocation(line: 877, column: 35, scope: !5183)
!5203 = !DILocation(line: 877, column: 42, scope: !5183)
!5204 = !DILocation(line: 876, column: 2, scope: !5183)
!5205 = !DILocation(line: 878, column: 1, scope: !5183)
!5206 = distinct !DISubprogram(name: "DM_interp_poly_data", scope: !3, file: !3, line: 880, type: !5076, scopeLine: 883, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!5207 = !DILocalVariable(name: "source", arg: 1, scope: !5206, file: !3, line: 880, type: !2108)
!5208 = !DILocation(line: 880, column: 39, scope: !5206)
!5209 = !DILocalVariable(name: "dest", arg: 2, scope: !5206, file: !3, line: 880, type: !2108)
!5210 = !DILocation(line: 880, column: 60, scope: !5206)
!5211 = !DILocalVariable(name: "src_indices", arg: 3, scope: !5206, file: !3, line: 881, type: !328)
!5212 = !DILocation(line: 881, column: 31, scope: !5206)
!5213 = !DILocalVariable(name: "weights", arg: 4, scope: !5206, file: !3, line: 882, type: !320)
!5214 = !DILocation(line: 882, column: 33, scope: !5206)
!5215 = !DILocalVariable(name: "count", arg: 5, scope: !5206, file: !3, line: 882, type: !156)
!5216 = !DILocation(line: 882, column: 46, scope: !5206)
!5217 = !DILocalVariable(name: "dest_index", arg: 6, scope: !5206, file: !3, line: 882, type: !156)
!5218 = !DILocation(line: 882, column: 57, scope: !5206)
!5219 = !DILocation(line: 884, column: 21, scope: !5206)
!5220 = !DILocation(line: 884, column: 29, scope: !5206)
!5221 = !DILocation(line: 884, column: 40, scope: !5206)
!5222 = !DILocation(line: 884, column: 46, scope: !5206)
!5223 = !DILocation(line: 884, column: 56, scope: !5206)
!5224 = !DILocation(line: 885, column: 20, scope: !5206)
!5225 = !DILocation(line: 885, column: 35, scope: !5206)
!5226 = !DILocation(line: 885, column: 42, scope: !5206)
!5227 = !DILocation(line: 884, column: 2, scope: !5206)
!5228 = !DILocation(line: 886, column: 1, scope: !5206)
!5229 = distinct !DISubprogram(name: "mesh_create_derived", scope: !3, file: !3, line: 889, type: !5230, scopeLine: 890, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!5230 = !DISubroutineType(types: !5231)
!5231 = !{!2108, !404, !1660}
!5232 = !DILocalVariable(name: "me", arg: 1, scope: !5229, file: !3, line: 889, type: !404)
!5233 = !DILocation(line: 889, column: 40, scope: !5229)
!5234 = !DILocalVariable(name: "vertCos", arg: 2, scope: !5229, file: !3, line: 889, type: !1660)
!5235 = !DILocation(line: 889, column: 52, scope: !5229)
!5236 = !DILocalVariable(name: "dm", scope: !5229, file: !3, line: 891, type: !2108)
!5237 = !DILocation(line: 891, column: 15, scope: !5229)
!5238 = !DILocation(line: 891, column: 35, scope: !5229)
!5239 = !DILocation(line: 891, column: 20, scope: !5229)
!5240 = !DILocation(line: 893, column: 7, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 893, column: 6)
!5242 = !DILocation(line: 893, column: 6, scope: !5229)
!5243 = !DILocation(line: 894, column: 3, scope: !5241)
!5244 = !DILocation(line: 896, column: 6, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 896, column: 6)
!5246 = !DILocation(line: 896, column: 6, scope: !5229)
!5247 = !DILocation(line: 897, column: 26, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 896, column: 15)
!5249 = !DILocation(line: 897, column: 30, scope: !5248)
!5250 = !DILocation(line: 897, column: 3, scope: !5248)
!5251 = !DILocation(line: 898, column: 2, scope: !5248)
!5252 = !DILocation(line: 900, column: 9, scope: !5229)
!5253 = !DILocation(line: 900, column: 2, scope: !5229)
!5254 = !DILocation(line: 901, column: 1, scope: !5229)
!5255 = distinct !DISubprogram(name: "mesh_create_derived_for_modifier", scope: !3, file: !3, line: 903, type: !5256, scopeLine: 905, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!5256 = !DISubroutineType(types: !5257)
!5257 = !{!2108, !5258, !4007, !5260, !156}
!5258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5259, size: 64)
!5259 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !282, line: 1299, baseType: !735)
!5260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!5261 = !DILocalVariable(name: "scene", arg: 1, scope: !5255, file: !3, line: 903, type: !5258)
!5262 = !DILocation(line: 903, column: 54, scope: !5255)
!5263 = !DILocalVariable(name: "ob", arg: 2, scope: !5255, file: !3, line: 903, type: !4007)
!5264 = !DILocation(line: 903, column: 69, scope: !5255)
!5265 = !DILocalVariable(name: "md", arg: 3, scope: !5255, file: !3, line: 904, type: !5260)
!5266 = !DILocation(line: 904, column: 61, scope: !5255)
!5267 = !DILocalVariable(name: "build_shapekey_layers", arg: 4, scope: !5255, file: !3, line: 904, type: !156)
!5268 = !DILocation(line: 904, column: 69, scope: !5255)
!5269 = !DILocalVariable(name: "me", scope: !5255, file: !3, line: 906, type: !404)
!5270 = !DILocation(line: 906, column: 8, scope: !5255)
!5271 = !DILocation(line: 906, column: 13, scope: !5255)
!5272 = !DILocation(line: 906, column: 17, scope: !5255)
!5273 = !DILocalVariable(name: "mti", scope: !5255, file: !3, line: 907, type: !5274)
!5274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5275, size: 64)
!5275 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeInfo", file: !128, line: 309, baseType: !5276)
!5276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierTypeInfo", file: !128, line: 121, size: 1728, elements: !5277)
!5277 = !{!5278, !5279, !5280, !5281, !5283, !5285, !5289, !5294, !5298, !5302, !5306, !5310, !5314, !5318, !5322, !5323, !5327, !5333, !5337, !5338, !5347, !5356}
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5276, file: !128, line: 123, baseType: !522, size: 256)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "structName", scope: !5276, file: !128, line: 128, baseType: !522, size: 256, offset: 256)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "structSize", scope: !5276, file: !128, line: 131, baseType: !156, size: 32, offset: 512)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5276, file: !128, line: 133, baseType: !5282, size: 32, offset: 544)
!5282 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeType", file: !128, line: 71, baseType: !127)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5276, file: !128, line: 134, baseType: !5284, size: 32, offset: 576)
!5284 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeFlag", file: !128, line: 104, baseType: !136)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "copyData", scope: !5276, file: !128, line: 142, baseType: !5286, size: 64, offset: 640)
!5286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5287, size: 64)
!5287 = !DISubroutineType(types: !5288)
!5288 = !{null, !726, !726}
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "deformVerts", scope: !5276, file: !128, line: 151, baseType: !5290, size: 64, offset: 704)
!5290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5291, size: 64)
!5291 = !DISubroutineType(types: !5292)
!5292 = !{null, !726, !707, !2036, !1660, !156, !5293}
!5293 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierApplyFlag", file: !128, line: 118, baseType: !148)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "deformMatrices", scope: !5276, file: !128, line: 157, baseType: !5295, size: 64, offset: 768)
!5295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5296, size: 64)
!5296 = !DISubroutineType(types: !5297)
!5297 = !{null, !726, !707, !2036, !1660, !1818, !156}
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "deformVertsEM", scope: !5276, file: !128, line: 163, baseType: !5299, size: 64, offset: 832)
!5299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5300, size: 64)
!5300 = !DISubroutineType(types: !5301)
!5301 = !{null, !726, !707, !2754, !2036, !1660, !156}
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "deformMatricesEM", scope: !5276, file: !128, line: 168, baseType: !5303, size: 64, offset: 896)
!5303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5304, size: 64)
!5304 = !DISubroutineType(types: !5305)
!5305 = !{null, !726, !707, !2754, !2036, !1660, !1818, !156}
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "applyModifier", scope: !5276, file: !128, line: 193, baseType: !5307, size: 64, offset: 960)
!5307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5308, size: 64)
!5308 = !DISubroutineType(types: !5309)
!5309 = !{!2036, !726, !707, !2036, !5293}
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "applyModifierEM", scope: !5276, file: !128, line: 204, baseType: !5311, size: 64, offset: 1024)
!5311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5312, size: 64)
!5312 = !DISubroutineType(types: !5313)
!5313 = !{!2036, !726, !707, !2754, !2036, !5293}
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "initData", scope: !5276, file: !128, line: 217, baseType: !5315, size: 64, offset: 1088)
!5315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5316, size: 64)
!5316 = !DISubroutineType(types: !5317)
!5317 = !{null, !726}
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "requiredDataMask", scope: !5276, file: !128, line: 235, baseType: !5319, size: 64, offset: 1152)
!5319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5320, size: 64)
!5320 = !DISubroutineType(types: !5321)
!5321 = !{!2768, !707, !726}
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "freeData", scope: !5276, file: !128, line: 242, baseType: !5315, size: 64, offset: 1216)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "isDisabled", scope: !5276, file: !128, line: 252, baseType: !5324, size: 64, offset: 1280)
!5324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5325, size: 64)
!5325 = !DISubroutineType(types: !5326)
!5326 = !{!327, !726, !156}
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "updateDepgraph", scope: !5276, file: !128, line: 259, baseType: !5328, size: 64, offset: 1344)
!5328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5329, size: 64)
!5329 = !DISubroutineType(types: !5330)
!5330 = !{null, !726, !1512, !734, !707, !5331}
!5331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5332, size: 64)
!5332 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagNode", file: !128, line: 38, flags: DIFlagFwdDecl)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "dependsOnTime", scope: !5276, file: !128, line: 267, baseType: !5334, size: 64, offset: 1408)
!5334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5335, size: 64)
!5335 = !DISubroutineType(types: !5336)
!5336 = !{!327, !726}
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "dependsOnNormals", scope: !5276, file: !128, line: 277, baseType: !5334, size: 64, offset: 1472)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "foreachObjectLink", scope: !5276, file: !128, line: 286, baseType: !5339, size: 64, offset: 1536)
!5339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5340, size: 64)
!5340 = !DISubroutineType(types: !5341)
!5341 = !{null, !726, !707, !5342, !318}
!5342 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectWalkFunc", file: !128, line: 106, baseType: !5343)
!5343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5344, size: 64)
!5344 = !DISubroutineType(types: !5345)
!5345 = !{null, !318, !707, !5346}
!5346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "foreachIDLink", scope: !5276, file: !128, line: 297, baseType: !5348, size: 64, offset: 1600)
!5348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5349, size: 64)
!5349 = !DISubroutineType(types: !5350)
!5350 = !{null, !726, !707, !5351, !318}
!5351 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDWalkFunc", file: !128, line: 107, baseType: !5352)
!5352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5353, size: 64)
!5353 = !DISubroutineType(types: !5354)
!5354 = !{null, !318, !707, !5355}
!5355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "foreachTexLink", scope: !5276, file: !128, line: 307, baseType: !5357, size: 64, offset: 1664)
!5357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5358, size: 64)
!5358 = !DISubroutineType(types: !5359)
!5359 = !{null, !726, !707, !5360, !318}
!5360 = !DIDerivedType(tag: DW_TAG_typedef, name: "TexWalkFunc", file: !128, line: 108, baseType: !5361)
!5361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5362, size: 64)
!5362 = !DISubroutineType(types: !5363)
!5363 = !{null, !318, !707, !726, !1712}
!5364 = !DILocation(line: 907, column: 20, scope: !5255)
!5365 = !DILocation(line: 907, column: 47, scope: !5255)
!5366 = !DILocation(line: 907, column: 51, scope: !5255)
!5367 = !DILocation(line: 907, column: 26, scope: !5255)
!5368 = !DILocalVariable(name: "dm", scope: !5255, file: !3, line: 908, type: !2108)
!5369 = !DILocation(line: 908, column: 15, scope: !5255)
!5370 = !DILocalVariable(name: "kb", scope: !5255, file: !3, line: 909, type: !501)
!5371 = !DILocation(line: 909, column: 12, scope: !5255)
!5372 = !DILocation(line: 911, column: 14, scope: !5255)
!5373 = !DILocation(line: 911, column: 2, scope: !5255)
!5374 = !DILocation(line: 911, column: 6, scope: !5255)
!5375 = !DILocation(line: 911, column: 12, scope: !5255)
!5376 = !DILocation(line: 913, column: 8, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5255, file: !3, line: 913, column: 6)
!5378 = !DILocation(line: 913, column: 12, scope: !5377)
!5379 = !DILocation(line: 913, column: 17, scope: !5377)
!5380 = !DILocation(line: 913, column: 6, scope: !5255)
!5381 = !DILocation(line: 913, column: 44, scope: !5377)
!5382 = !DILocation(line: 914, column: 6, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5255, file: !3, line: 914, column: 6)
!5384 = !DILocation(line: 914, column: 11, scope: !5383)
!5385 = !DILocation(line: 914, column: 22, scope: !5383)
!5386 = !DILocation(line: 914, column: 25, scope: !5383)
!5387 = !DILocation(line: 914, column: 30, scope: !5383)
!5388 = !DILocation(line: 914, column: 41, scope: !5383)
!5389 = !DILocation(line: 914, column: 6, scope: !5255)
!5390 = !DILocation(line: 914, column: 49, scope: !5383)
!5391 = !DILocation(line: 916, column: 6, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5255, file: !3, line: 916, column: 6)
!5393 = !DILocation(line: 916, column: 28, scope: !5392)
!5394 = !DILocation(line: 916, column: 31, scope: !5392)
!5395 = !DILocation(line: 916, column: 35, scope: !5392)
!5396 = !DILocation(line: 916, column: 39, scope: !5392)
!5397 = !DILocation(line: 916, column: 62, scope: !5392)
!5398 = !DILocation(line: 916, column: 66, scope: !5392)
!5399 = !DILocation(line: 916, column: 71, scope: !5392)
!5400 = !DILocation(line: 916, column: 78, scope: !5392)
!5401 = !DILocation(line: 916, column: 82, scope: !5392)
!5402 = !DILocation(line: 916, column: 90, scope: !5392)
!5403 = !DILocation(line: 916, column: 48, scope: !5392)
!5404 = !DILocation(line: 916, column: 46, scope: !5392)
!5405 = !DILocation(line: 916, column: 6, scope: !5255)
!5406 = !DILocation(line: 917, column: 27, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 916, column: 97)
!5408 = !DILocation(line: 917, column: 31, scope: !5407)
!5409 = !DILocation(line: 917, column: 3, scope: !5407)
!5410 = !DILocation(line: 918, column: 2, scope: !5407)
!5411 = !DILocation(line: 920, column: 6, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5255, file: !3, line: 920, column: 6)
!5413 = !DILocation(line: 920, column: 11, scope: !5412)
!5414 = !DILocation(line: 920, column: 16, scope: !5412)
!5415 = !DILocation(line: 920, column: 6, scope: !5255)
!5416 = !DILocalVariable(name: "numVerts", scope: !5417, file: !3, line: 921, type: !156)
!5417 = distinct !DILexicalBlock(scope: !5412, file: !3, line: 920, column: 49)
!5418 = !DILocation(line: 921, column: 7, scope: !5417)
!5419 = !DILocalVariable(name: "deformedVerts", scope: !5417, file: !3, line: 922, type: !1660)
!5420 = !DILocation(line: 922, column: 11, scope: !5417)
!5421 = !DILocation(line: 922, column: 54, scope: !5417)
!5422 = !DILocation(line: 922, column: 31, scope: !5417)
!5423 = !DILocation(line: 924, column: 23, scope: !5417)
!5424 = !DILocation(line: 924, column: 27, scope: !5417)
!5425 = !DILocation(line: 924, column: 37, scope: !5417)
!5426 = !DILocation(line: 924, column: 52, scope: !5417)
!5427 = !DILocation(line: 924, column: 3, scope: !5417)
!5428 = !DILocation(line: 925, column: 28, scope: !5417)
!5429 = !DILocation(line: 925, column: 32, scope: !5417)
!5430 = !DILocation(line: 925, column: 8, scope: !5417)
!5431 = !DILocation(line: 925, column: 6, scope: !5417)
!5432 = !DILocation(line: 927, column: 7, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5417, file: !3, line: 927, column: 7)
!5434 = !DILocation(line: 927, column: 7, scope: !5417)
!5435 = !DILocation(line: 928, column: 24, scope: !5433)
!5436 = !DILocation(line: 928, column: 28, scope: !5433)
!5437 = !DILocation(line: 928, column: 32, scope: !5433)
!5438 = !DILocation(line: 928, column: 4, scope: !5433)
!5439 = !DILocation(line: 930, column: 3, scope: !5417)
!5440 = !DILocation(line: 930, column: 13, scope: !5417)
!5441 = !DILocation(line: 931, column: 2, scope: !5417)
!5442 = !DILocalVariable(name: "tdm", scope: !5443, file: !3, line: 933, type: !2108)
!5443 = distinct !DILexicalBlock(scope: !5412, file: !3, line: 932, column: 7)
!5444 = !DILocation(line: 933, column: 16, scope: !5443)
!5445 = !DILocation(line: 933, column: 42, scope: !5443)
!5446 = !DILocation(line: 933, column: 22, scope: !5443)
!5447 = !DILocation(line: 935, column: 7, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5443, file: !3, line: 935, column: 7)
!5449 = !DILocation(line: 935, column: 7, scope: !5443)
!5450 = !DILocation(line: 936, column: 24, scope: !5448)
!5451 = !DILocation(line: 936, column: 29, scope: !5448)
!5452 = !DILocation(line: 936, column: 33, scope: !5448)
!5453 = !DILocation(line: 936, column: 4, scope: !5448)
!5454 = !DILocation(line: 938, column: 30, scope: !5443)
!5455 = !DILocation(line: 938, column: 34, scope: !5443)
!5456 = !DILocation(line: 938, column: 38, scope: !5443)
!5457 = !DILocation(line: 938, column: 8, scope: !5443)
!5458 = !DILocation(line: 938, column: 6, scope: !5443)
!5459 = !DILocation(line: 941, column: 7, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5443, file: !3, line: 941, column: 7)
!5461 = !DILocation(line: 941, column: 14, scope: !5460)
!5462 = !DILocation(line: 941, column: 11, scope: !5460)
!5463 = !DILocation(line: 941, column: 7, scope: !5443)
!5464 = !DILocation(line: 941, column: 18, scope: !5460)
!5465 = !DILocation(line: 941, column: 23, scope: !5460)
!5466 = !DILocation(line: 941, column: 31, scope: !5460)
!5467 = !DILocation(line: 944, column: 9, scope: !5255)
!5468 = !DILocation(line: 944, column: 2, scope: !5255)
!5469 = !DILocation(line: 945, column: 1, scope: !5255)
!5470 = distinct !DISubprogram(name: "add_shapekey_layers", scope: !3, file: !3, line: 1407, type: !5471, scopeLine: 1408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!5471 = !DISubroutineType(types: !5472)
!5472 = !{null, !2108, !404, !4007}
!5473 = !DILocalVariable(name: "dm", arg: 1, scope: !5470, file: !3, line: 1407, type: !2108)
!5474 = !DILocation(line: 1407, column: 46, scope: !5470)
!5475 = !DILocalVariable(name: "me", arg: 2, scope: !5470, file: !3, line: 1407, type: !404)
!5476 = !DILocation(line: 1407, column: 56, scope: !5470)
!5477 = !DILocalVariable(name: "UNUSED_ob", arg: 3, scope: !5470, file: !3, line: 1407, type: !4007)
!5478 = !DILocation(line: 1407, column: 68, scope: !5470)
!5479 = !DILocalVariable(name: "kb", scope: !5470, file: !3, line: 1409, type: !501)
!5480 = !DILocation(line: 1409, column: 12, scope: !5470)
!5481 = !DILocalVariable(name: "key", scope: !5470, file: !3, line: 1410, type: !5482)
!5482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5483, size: 64)
!5483 = !DIDerivedType(tag: DW_TAG_typedef, name: "Key", file: !480, line: 105, baseType: !496)
!5484 = !DILocation(line: 1410, column: 7, scope: !5470)
!5485 = !DILocation(line: 1410, column: 13, scope: !5470)
!5486 = !DILocation(line: 1410, column: 17, scope: !5470)
!5487 = !DILocalVariable(name: "i", scope: !5470, file: !3, line: 1411, type: !156)
!5488 = !DILocation(line: 1411, column: 6, scope: !5470)
!5489 = !DILocalVariable(name: "shape_alloc_len", scope: !5470, file: !3, line: 1412, type: !5490)
!5490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5491)
!5491 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !5492, line: 46, baseType: !1618)
!5492 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!5493 = !DILocation(line: 1412, column: 15, scope: !5470)
!5494 = !DILocation(line: 1412, column: 53, scope: !5470)
!5495 = !DILocation(line: 1412, column: 57, scope: !5470)
!5496 = !DILocation(line: 1412, column: 51, scope: !5470)
!5497 = !DILocation(line: 1414, column: 7, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5470, file: !3, line: 1414, column: 6)
!5499 = !DILocation(line: 1414, column: 11, scope: !5498)
!5500 = !DILocation(line: 1414, column: 6, scope: !5470)
!5501 = !DILocation(line: 1415, column: 3, scope: !5498)
!5502 = !DILocation(line: 1418, column: 6, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5470, file: !3, line: 1418, column: 6)
!5504 = !DILocation(line: 1418, column: 10, scope: !5503)
!5505 = !DILocation(line: 1418, column: 21, scope: !5503)
!5506 = !DILocation(line: 1418, column: 25, scope: !5503)
!5507 = !DILocation(line: 1418, column: 37, scope: !5503)
!5508 = !DILocation(line: 1418, column: 18, scope: !5503)
!5509 = !DILocation(line: 1418, column: 6, scope: !5470)
!5510 = !DILocation(line: 1419, column: 11, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5503, file: !3, line: 1418, column: 42)
!5512 = !DILocation(line: 1421, column: 21, scope: !5511)
!5513 = !DILocation(line: 1421, column: 25, scope: !5511)
!5514 = !DILocation(line: 1421, column: 28, scope: !5511)
!5515 = !DILocation(line: 1421, column: 33, scope: !5511)
!5516 = !DILocation(line: 1421, column: 38, scope: !5511)
!5517 = !DILocation(line: 1421, column: 42, scope: !5511)
!5518 = !DILocation(line: 1421, column: 51, scope: !5511)
!5519 = !DILocation(line: 1421, column: 55, scope: !5511)
!5520 = !DILocation(line: 1421, column: 67, scope: !5511)
!5521 = !DILocation(line: 1419, column: 3, scope: !5511)
!5522 = !DILocation(line: 1422, column: 3, scope: !5511)
!5523 = !DILocation(line: 1425, column: 9, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5470, file: !3, line: 1425, column: 2)
!5525 = !DILocation(line: 1425, column: 19, scope: !5524)
!5526 = !DILocation(line: 1425, column: 24, scope: !5524)
!5527 = !DILocation(line: 1425, column: 30, scope: !5524)
!5528 = !DILocation(line: 1425, column: 17, scope: !5524)
!5529 = !DILocation(line: 1425, column: 7, scope: !5524)
!5530 = !DILocation(line: 1425, column: 37, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5524, file: !3, line: 1425, column: 2)
!5532 = !DILocation(line: 1425, column: 2, scope: !5524)
!5533 = !DILocalVariable(name: "ci", scope: !5534, file: !3, line: 1426, type: !156)
!5534 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 1425, column: 61)
!5535 = !DILocation(line: 1426, column: 7, scope: !5534)
!5536 = !DILocalVariable(name: "array", scope: !5534, file: !3, line: 1427, type: !320)
!5537 = !DILocation(line: 1427, column: 10, scope: !5534)
!5538 = !DILocation(line: 1429, column: 7, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 1429, column: 7)
!5540 = !DILocation(line: 1429, column: 11, scope: !5539)
!5541 = !DILocation(line: 1429, column: 22, scope: !5539)
!5542 = !DILocation(line: 1429, column: 26, scope: !5539)
!5543 = !DILocation(line: 1429, column: 19, scope: !5539)
!5544 = !DILocation(line: 1429, column: 7, scope: !5534)
!5545 = !DILocation(line: 1430, column: 12, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5539, file: !3, line: 1429, column: 35)
!5547 = !DILocation(line: 1432, column: 22, scope: !5546)
!5548 = !DILocation(line: 1432, column: 26, scope: !5546)
!5549 = !DILocation(line: 1432, column: 29, scope: !5546)
!5550 = !DILocation(line: 1432, column: 34, scope: !5546)
!5551 = !DILocation(line: 1432, column: 39, scope: !5546)
!5552 = !DILocation(line: 1432, column: 43, scope: !5546)
!5553 = !DILocation(line: 1432, column: 52, scope: !5546)
!5554 = !DILocation(line: 1432, column: 56, scope: !5546)
!5555 = !DILocation(line: 1432, column: 62, scope: !5546)
!5556 = !DILocation(line: 1432, column: 66, scope: !5546)
!5557 = !DILocation(line: 1430, column: 4, scope: !5546)
!5558 = !DILocation(line: 1433, column: 12, scope: !5546)
!5559 = !DILocation(line: 1433, column: 24, scope: !5546)
!5560 = !DILocation(line: 1433, column: 10, scope: !5546)
!5561 = !DILocation(line: 1434, column: 3, scope: !5546)
!5562 = !DILocation(line: 1436, column: 12, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5539, file: !3, line: 1435, column: 8)
!5564 = !DILocation(line: 1436, column: 24, scope: !5563)
!5565 = !DILocation(line: 1436, column: 10, scope: !5563)
!5566 = !DILocation(line: 1437, column: 11, scope: !5563)
!5567 = !DILocation(line: 1437, column: 4, scope: !5563)
!5568 = !DILocation(line: 1437, column: 18, scope: !5563)
!5569 = !DILocation(line: 1437, column: 22, scope: !5563)
!5570 = !DILocation(line: 1437, column: 28, scope: !5563)
!5571 = !DILocation(line: 1440, column: 31, scope: !5534)
!5572 = !DILocation(line: 1440, column: 35, scope: !5534)
!5573 = !DILocation(line: 1440, column: 69, scope: !5534)
!5574 = !DILocation(line: 1440, column: 76, scope: !5534)
!5575 = !DILocation(line: 1440, column: 80, scope: !5534)
!5576 = !DILocation(line: 1440, column: 93, scope: !5534)
!5577 = !DILocation(line: 1440, column: 97, scope: !5534)
!5578 = !DILocation(line: 1440, column: 3, scope: !5534)
!5579 = !DILocation(line: 1441, column: 38, scope: !5534)
!5580 = !DILocation(line: 1441, column: 42, scope: !5534)
!5581 = !DILocation(line: 1441, column: 65, scope: !5534)
!5582 = !DILocation(line: 1441, column: 8, scope: !5534)
!5583 = !DILocation(line: 1441, column: 6, scope: !5534)
!5584 = !DILocation(line: 1443, column: 33, scope: !5534)
!5585 = !DILocation(line: 1443, column: 37, scope: !5534)
!5586 = !DILocation(line: 1443, column: 3, scope: !5534)
!5587 = !DILocation(line: 1443, column: 7, scope: !5534)
!5588 = !DILocation(line: 1443, column: 16, scope: !5534)
!5589 = !DILocation(line: 1443, column: 23, scope: !5534)
!5590 = !DILocation(line: 1443, column: 27, scope: !5534)
!5591 = !DILocation(line: 1443, column: 31, scope: !5534)
!5592 = !DILocation(line: 1444, column: 2, scope: !5534)
!5593 = !DILocation(line: 1425, column: 46, scope: !5531)
!5594 = !DILocation(line: 1425, column: 50, scope: !5531)
!5595 = !DILocation(line: 1425, column: 44, scope: !5531)
!5596 = !DILocation(line: 1425, column: 57, scope: !5531)
!5597 = !DILocation(line: 1425, column: 2, scope: !5531)
!5598 = distinct !{!5598, !5532, !5599}
!5599 = !DILocation(line: 1444, column: 2, scope: !5524)
!5600 = !DILocation(line: 1445, column: 1, scope: !5470)
!5601 = distinct !DISubprogram(name: "weight_to_rgb", scope: !3, file: !3, line: 1058, type: !5602, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!5602 = !DISubroutineType(types: !5603)
!5603 = !{null, !320, !2114}
!5604 = !DILocalVariable(name: "r_rgb", arg: 1, scope: !5601, file: !3, line: 1058, type: !320)
!5605 = !DILocation(line: 1058, column: 26, scope: !5601)
!5606 = !DILocalVariable(name: "weight", arg: 2, scope: !5601, file: !3, line: 1058, type: !2114)
!5607 = !DILocation(line: 1058, column: 48, scope: !5601)
!5608 = !DILocalVariable(name: "blend", scope: !5601, file: !3, line: 1060, type: !2114)
!5609 = !DILocation(line: 1060, column: 14, scope: !5601)
!5610 = !DILocation(line: 1060, column: 24, scope: !5601)
!5611 = !DILocation(line: 1060, column: 31, scope: !5601)
!5612 = !DILocation(line: 1060, column: 39, scope: !5601)
!5613 = !DILocation(line: 1062, column: 6, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 1062, column: 6)
!5615 = !DILocation(line: 1062, column: 13, scope: !5614)
!5616 = !DILocation(line: 1062, column: 6, scope: !5601)
!5617 = !DILocation(line: 1063, column: 3, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 1062, column: 23)
!5619 = !DILocation(line: 1063, column: 12, scope: !5618)
!5620 = !DILocation(line: 1064, column: 14, scope: !5618)
!5621 = !DILocation(line: 1064, column: 22, scope: !5618)
!5622 = !DILocation(line: 1064, column: 20, scope: !5618)
!5623 = !DILocation(line: 1064, column: 29, scope: !5618)
!5624 = !DILocation(line: 1064, column: 3, scope: !5618)
!5625 = !DILocation(line: 1064, column: 12, scope: !5618)
!5626 = !DILocation(line: 1065, column: 14, scope: !5618)
!5627 = !DILocation(line: 1065, column: 3, scope: !5618)
!5628 = !DILocation(line: 1065, column: 12, scope: !5618)
!5629 = !DILocation(line: 1066, column: 2, scope: !5618)
!5630 = !DILocation(line: 1067, column: 11, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 1067, column: 11)
!5632 = !DILocation(line: 1067, column: 18, scope: !5631)
!5633 = !DILocation(line: 1067, column: 11, scope: !5614)
!5634 = !DILocation(line: 1068, column: 3, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5631, file: !3, line: 1067, column: 28)
!5636 = !DILocation(line: 1068, column: 12, scope: !5635)
!5637 = !DILocation(line: 1069, column: 14, scope: !5635)
!5638 = !DILocation(line: 1069, column: 3, scope: !5635)
!5639 = !DILocation(line: 1069, column: 12, scope: !5635)
!5640 = !DILocation(line: 1070, column: 14, scope: !5635)
!5641 = !DILocation(line: 1070, column: 32, scope: !5635)
!5642 = !DILocation(line: 1070, column: 39, scope: !5635)
!5643 = !DILocation(line: 1070, column: 48, scope: !5635)
!5644 = !DILocation(line: 1070, column: 28, scope: !5635)
!5645 = !DILocation(line: 1070, column: 20, scope: !5635)
!5646 = !DILocation(line: 1070, column: 3, scope: !5635)
!5647 = !DILocation(line: 1070, column: 12, scope: !5635)
!5648 = !DILocation(line: 1071, column: 2, scope: !5635)
!5649 = !DILocation(line: 1072, column: 11, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5631, file: !3, line: 1072, column: 11)
!5651 = !DILocation(line: 1072, column: 18, scope: !5650)
!5652 = !DILocation(line: 1072, column: 11, scope: !5631)
!5653 = !DILocation(line: 1073, column: 14, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5650, file: !3, line: 1072, column: 28)
!5655 = !DILocation(line: 1073, column: 24, scope: !5654)
!5656 = !DILocation(line: 1073, column: 31, scope: !5654)
!5657 = !DILocation(line: 1073, column: 40, scope: !5654)
!5658 = !DILocation(line: 1073, column: 20, scope: !5654)
!5659 = !DILocation(line: 1073, column: 3, scope: !5654)
!5660 = !DILocation(line: 1073, column: 12, scope: !5654)
!5661 = !DILocation(line: 1074, column: 14, scope: !5654)
!5662 = !DILocation(line: 1074, column: 3, scope: !5654)
!5663 = !DILocation(line: 1074, column: 12, scope: !5654)
!5664 = !DILocation(line: 1075, column: 3, scope: !5654)
!5665 = !DILocation(line: 1075, column: 12, scope: !5654)
!5666 = !DILocation(line: 1076, column: 2, scope: !5654)
!5667 = !DILocation(line: 1077, column: 11, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5650, file: !3, line: 1077, column: 11)
!5669 = !DILocation(line: 1077, column: 18, scope: !5668)
!5670 = !DILocation(line: 1077, column: 11, scope: !5650)
!5671 = !DILocation(line: 1078, column: 14, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5668, file: !3, line: 1077, column: 27)
!5673 = !DILocation(line: 1078, column: 3, scope: !5672)
!5674 = !DILocation(line: 1078, column: 12, scope: !5672)
!5675 = !DILocation(line: 1079, column: 14, scope: !5672)
!5676 = !DILocation(line: 1079, column: 32, scope: !5672)
!5677 = !DILocation(line: 1079, column: 39, scope: !5672)
!5678 = !DILocation(line: 1079, column: 48, scope: !5672)
!5679 = !DILocation(line: 1079, column: 28, scope: !5672)
!5680 = !DILocation(line: 1079, column: 20, scope: !5672)
!5681 = !DILocation(line: 1079, column: 3, scope: !5672)
!5682 = !DILocation(line: 1079, column: 12, scope: !5672)
!5683 = !DILocation(line: 1080, column: 3, scope: !5672)
!5684 = !DILocation(line: 1080, column: 12, scope: !5672)
!5685 = !DILocation(line: 1081, column: 2, scope: !5672)
!5686 = !DILocation(line: 1085, column: 3, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5668, file: !3, line: 1082, column: 7)
!5688 = !DILocation(line: 1085, column: 12, scope: !5687)
!5689 = !DILocation(line: 1086, column: 3, scope: !5687)
!5690 = !DILocation(line: 1086, column: 12, scope: !5687)
!5691 = !DILocation(line: 1087, column: 3, scope: !5687)
!5692 = !DILocation(line: 1087, column: 12, scope: !5687)
!5693 = !DILocation(line: 1089, column: 1, scope: !5601)
!5694 = distinct !DISubprogram(name: "vDM_ColorBand_store", scope: !3, file: !3, line: 1202, type: !5695, scopeLine: 1203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!5695 = !DISubroutineType(types: !5696)
!5696 = !{null, !2942, !1712}
!5697 = !DILocalVariable(name: "coba", arg: 1, scope: !5694, file: !3, line: 1202, type: !2942)
!5698 = !DILocation(line: 1202, column: 43, scope: !5694)
!5699 = !DILocalVariable(name: "alert_color", arg: 2, scope: !5694, file: !3, line: 1202, type: !1712)
!5700 = !DILocation(line: 1202, column: 60, scope: !5694)
!5701 = !DILocation(line: 1204, column: 28, scope: !5694)
!5702 = !DILocation(line: 1204, column: 26, scope: !5694)
!5703 = !DILocation(line: 1205, column: 28, scope: !5694)
!5704 = !DILocation(line: 1205, column: 26, scope: !5694)
!5705 = !DILocation(line: 1206, column: 1, scope: !5694)
!5706 = distinct !DISubprogram(name: "DM_update_weight_mcol", scope: !3, file: !3, line: 1271, type: !5707, scopeLine: 1273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!5707 = !DISubroutineType(types: !5708)
!5708 = !{null, !4007, !2108, !3793, !320, !156, !5170}
!5709 = !DILocalVariable(name: "ob", arg: 1, scope: !5706, file: !3, line: 1271, type: !4007)
!5710 = !DILocation(line: 1271, column: 36, scope: !5706)
!5711 = !DILocalVariable(name: "dm", arg: 2, scope: !5706, file: !3, line: 1271, type: !2108)
!5712 = !DILocation(line: 1271, column: 53, scope: !5706)
!5713 = !DILocalVariable(name: "draw_flag", arg: 3, scope: !5706, file: !3, line: 1271, type: !3793)
!5714 = !DILocation(line: 1271, column: 67, scope: !5706)
!5715 = !DILocalVariable(name: "weights", arg: 4, scope: !5706, file: !3, line: 1272, type: !320)
!5716 = !DILocation(line: 1272, column: 35, scope: !5706)
!5717 = !DILocalVariable(name: "num", arg: 5, scope: !5706, file: !3, line: 1272, type: !156)
!5718 = !DILocation(line: 1272, column: 48, scope: !5706)
!5719 = !DILocalVariable(name: "indices", arg: 6, scope: !5706, file: !3, line: 1272, type: !5170)
!5720 = !DILocation(line: 1272, column: 64, scope: !5706)
!5721 = !DILocalVariable(name: "em", scope: !5706, file: !3, line: 1274, type: !5722)
!5722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5723, size: 64)
!5723 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEditMesh", file: !2756, line: 83, baseType: !2755)
!5724 = !DILocation(line: 1274, column: 14, scope: !5706)
!5725 = !DILocation(line: 1274, column: 20, scope: !5706)
!5726 = !DILocation(line: 1274, column: 24, scope: !5706)
!5727 = !DILocation(line: 1274, column: 29, scope: !5706)
!5728 = !DILocation(line: 1274, column: 19, scope: !5706)
!5729 = !DILocation(line: 1274, column: 78, scope: !5706)
!5730 = !DILocation(line: 1274, column: 53, scope: !5706)
!5731 = !DILocalVariable(name: "wtcol_v", scope: !5706, file: !3, line: 1275, type: !2771)
!5732 = !DILocation(line: 1275, column: 18, scope: !5706)
!5733 = !DILocalVariable(name: "numVerts", scope: !5706, file: !3, line: 1276, type: !156)
!5734 = !DILocation(line: 1276, column: 6, scope: !5706)
!5735 = !DILocation(line: 1276, column: 17, scope: !5706)
!5736 = !DILocation(line: 1276, column: 21, scope: !5706)
!5737 = !DILocation(line: 1276, column: 33, scope: !5706)
!5738 = !DILocalVariable(name: "i", scope: !5706, file: !3, line: 1277, type: !156)
!5739 = !DILocation(line: 1277, column: 6, scope: !5706)
!5740 = !DILocation(line: 1279, column: 6, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 1279, column: 6)
!5742 = !DILocation(line: 1279, column: 6, scope: !5706)
!5743 = !DILocation(line: 1280, column: 29, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 1279, column: 10)
!5745 = !DILocation(line: 1280, column: 3, scope: !5744)
!5746 = !DILocation(line: 1281, column: 13, scope: !5744)
!5747 = !DILocation(line: 1281, column: 17, scope: !5744)
!5748 = !DILocation(line: 1281, column: 11, scope: !5744)
!5749 = !DILocation(line: 1282, column: 2, scope: !5744)
!5750 = !DILocation(line: 1284, column: 13, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 1283, column: 7)
!5752 = !DILocation(line: 1284, column: 44, scope: !5751)
!5753 = !DILocation(line: 1284, column: 42, scope: !5751)
!5754 = !DILocation(line: 1284, column: 11, scope: !5751)
!5755 = !DILocation(line: 1288, column: 6, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 1288, column: 6)
!5757 = !DILocation(line: 1288, column: 6, scope: !5706)
!5758 = !DILocalVariable(name: "w", scope: !5759, file: !3, line: 1289, type: !320)
!5759 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 1288, column: 15)
!5760 = !DILocation(line: 1289, column: 10, scope: !5759)
!5761 = !DILocation(line: 1289, column: 14, scope: !5759)
!5762 = !DILocation(line: 1292, column: 7, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 1292, column: 7)
!5764 = !DILocation(line: 1292, column: 7, scope: !5759)
!5765 = !DILocation(line: 1293, column: 8, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5763, file: !3, line: 1292, column: 16)
!5767 = !DILocation(line: 1293, column: 36, scope: !5766)
!5768 = !DILocation(line: 1293, column: 34, scope: !5766)
!5769 = !DILocation(line: 1293, column: 6, scope: !5766)
!5770 = !DILocation(line: 1294, column: 8, scope: !5766)
!5771 = !DILocation(line: 1294, column: 6, scope: !5766)
!5772 = !DILocation(line: 1295, column: 4, scope: !5766)
!5773 = !DILocation(line: 1295, column: 12, scope: !5766)
!5774 = !DILocation(line: 1296, column: 21, scope: !5766)
!5775 = !DILocation(line: 1296, column: 29, scope: !5766)
!5776 = !DILocation(line: 1296, column: 5, scope: !5766)
!5777 = !DILocation(line: 1296, column: 7, scope: !5766)
!5778 = !DILocation(line: 1296, column: 15, scope: !5766)
!5779 = !DILocation(line: 1296, column: 19, scope: !5766)
!5780 = distinct !{!5780, !5772, !5781}
!5781 = !DILocation(line: 1296, column: 30, scope: !5766)
!5782 = !DILocation(line: 1297, column: 3, scope: !5766)
!5783 = !DILocation(line: 1300, column: 34, scope: !5759)
!5784 = !DILocation(line: 1300, column: 44, scope: !5759)
!5785 = !DILocation(line: 1300, column: 47, scope: !5759)
!5786 = !DILocation(line: 1300, column: 3, scope: !5759)
!5787 = !DILocation(line: 1302, column: 7, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 1302, column: 7)
!5789 = !DILocation(line: 1302, column: 7, scope: !5759)
!5790 = !DILocation(line: 1303, column: 4, scope: !5788)
!5791 = !DILocation(line: 1303, column: 14, scope: !5788)
!5792 = !DILocation(line: 1304, column: 2, scope: !5759)
!5793 = !DILocation(line: 1307, column: 31, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 1305, column: 7)
!5795 = !DILocation(line: 1307, column: 35, scope: !5794)
!5796 = !DILocation(line: 1307, column: 39, scope: !5794)
!5797 = !DILocation(line: 1307, column: 64, scope: !5794)
!5798 = !DILocation(line: 1307, column: 3, scope: !5794)
!5799 = !DILocation(line: 1310, column: 6, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 1310, column: 6)
!5801 = !DILocation(line: 1310, column: 10, scope: !5800)
!5802 = !DILocation(line: 1310, column: 15, scope: !5800)
!5803 = !DILocation(line: 1310, column: 6, scope: !5706)
!5804 = !DILocation(line: 1312, column: 2, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5800, file: !3, line: 1310, column: 37)
!5806 = !DILocalVariable(name: "dm_totpoly", scope: !5807, file: !3, line: 1314, type: !3793)
!5807 = distinct !DILexicalBlock(scope: !5800, file: !3, line: 1313, column: 7)
!5808 = !DILocation(line: 1314, column: 13, scope: !5807)
!5809 = !DILocation(line: 1314, column: 26, scope: !5807)
!5810 = !DILocation(line: 1314, column: 30, scope: !5807)
!5811 = !DILocation(line: 1314, column: 42, scope: !5807)
!5812 = !DILocalVariable(name: "dm_totloop", scope: !5807, file: !3, line: 1315, type: !3793)
!5813 = !DILocation(line: 1315, column: 13, scope: !5807)
!5814 = !DILocation(line: 1315, column: 26, scope: !5807)
!5815 = !DILocation(line: 1315, column: 30, scope: !5807)
!5816 = !DILocation(line: 1315, column: 42, scope: !5807)
!5817 = !DILocalVariable(name: "wtcol_l", scope: !5807, file: !3, line: 1316, type: !2771)
!5818 = !DILocation(line: 1316, column: 18, scope: !5807)
!5819 = !DILocation(line: 1316, column: 53, scope: !5807)
!5820 = !DILocation(line: 1316, column: 57, scope: !5807)
!5821 = !DILocation(line: 1316, column: 75, scope: !5807)
!5822 = !DILocation(line: 1316, column: 32, scope: !5807)
!5823 = !DILocalVariable(name: "mloop", scope: !5807, file: !3, line: 1317, type: !3136)
!5824 = !DILocation(line: 1317, column: 10, scope: !5807)
!5825 = !DILocation(line: 1317, column: 18, scope: !5807)
!5826 = !DILocation(line: 1317, column: 22, scope: !5807)
!5827 = !DILocation(line: 1317, column: 35, scope: !5807)
!5828 = !DILocalVariable(name: "ml", scope: !5807, file: !3, line: 1317, type: !3136)
!5829 = !DILocation(line: 1317, column: 41, scope: !5807)
!5830 = !DILocalVariable(name: "mp", scope: !5807, file: !3, line: 1318, type: !3169)
!5831 = !DILocation(line: 1318, column: 10, scope: !5807)
!5832 = !DILocation(line: 1318, column: 15, scope: !5807)
!5833 = !DILocation(line: 1318, column: 19, scope: !5807)
!5834 = !DILocation(line: 1318, column: 32, scope: !5807)
!5835 = !DILocalVariable(name: "l_index", scope: !5807, file: !3, line: 1319, type: !156)
!5836 = !DILocation(line: 1319, column: 7, scope: !5807)
!5837 = !DILocalVariable(name: "j", scope: !5807, file: !3, line: 1320, type: !156)
!5838 = !DILocation(line: 1320, column: 7, scope: !5807)
!5839 = !DILocation(line: 1324, column: 8, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 1324, column: 7)
!5841 = !DILocation(line: 1324, column: 7, scope: !5807)
!5842 = !DILocation(line: 1325, column: 14, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 1324, column: 17)
!5844 = !DILocation(line: 1325, column: 45, scope: !5843)
!5845 = !DILocation(line: 1325, column: 43, scope: !5843)
!5846 = !DILocation(line: 1325, column: 12, scope: !5843)
!5847 = !DILocation(line: 1326, column: 26, scope: !5843)
!5848 = !DILocation(line: 1326, column: 30, scope: !5843)
!5849 = !DILocation(line: 1326, column: 72, scope: !5843)
!5850 = !DILocation(line: 1326, column: 81, scope: !5843)
!5851 = !DILocation(line: 1326, column: 4, scope: !5843)
!5852 = !DILocation(line: 1327, column: 3, scope: !5843)
!5853 = !DILocation(line: 1329, column: 11, scope: !5807)
!5854 = !DILocation(line: 1330, column: 10, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 1330, column: 3)
!5856 = !DILocation(line: 1330, column: 8, scope: !5855)
!5857 = !DILocation(line: 1330, column: 15, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5855, file: !3, line: 1330, column: 3)
!5859 = !DILocation(line: 1330, column: 19, scope: !5858)
!5860 = !DILocation(line: 1330, column: 17, scope: !5858)
!5861 = !DILocation(line: 1330, column: 3, scope: !5855)
!5862 = !DILocation(line: 1331, column: 9, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 1330, column: 42)
!5864 = !DILocation(line: 1331, column: 17, scope: !5863)
!5865 = !DILocation(line: 1331, column: 21, scope: !5863)
!5866 = !DILocation(line: 1331, column: 15, scope: !5863)
!5867 = !DILocation(line: 1331, column: 7, scope: !5863)
!5868 = !DILocation(line: 1333, column: 11, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5863, file: !3, line: 1333, column: 4)
!5870 = !DILocation(line: 1333, column: 9, scope: !5869)
!5871 = !DILocation(line: 1333, column: 16, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 1333, column: 4)
!5873 = !DILocation(line: 1333, column: 20, scope: !5872)
!5874 = !DILocation(line: 1333, column: 24, scope: !5872)
!5875 = !DILocation(line: 1333, column: 18, scope: !5872)
!5876 = !DILocation(line: 1333, column: 4, scope: !5869)
!5877 = !DILocation(line: 1334, column: 30, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5872, file: !3, line: 1333, column: 55)
!5879 = !DILocation(line: 1334, column: 38, scope: !5878)
!5880 = !DILocation(line: 1334, column: 21, scope: !5878)
!5881 = !DILocation(line: 1335, column: 30, scope: !5878)
!5882 = !DILocation(line: 1335, column: 38, scope: !5878)
!5883 = !DILocation(line: 1335, column: 42, scope: !5878)
!5884 = !DILocation(line: 1335, column: 21, scope: !5878)
!5885 = !DILocation(line: 1334, column: 5, scope: !5878)
!5886 = !DILocation(line: 1336, column: 4, scope: !5878)
!5887 = !DILocation(line: 1333, column: 34, scope: !5872)
!5888 = !DILocation(line: 1333, column: 40, scope: !5872)
!5889 = !DILocation(line: 1333, column: 51, scope: !5872)
!5890 = !DILocation(line: 1333, column: 4, scope: !5872)
!5891 = distinct !{!5891, !5876, !5892}
!5892 = !DILocation(line: 1336, column: 4, scope: !5869)
!5893 = !DILocation(line: 1337, column: 3, scope: !5863)
!5894 = !DILocation(line: 1330, column: 32, scope: !5858)
!5895 = !DILocation(line: 1330, column: 38, scope: !5858)
!5896 = !DILocation(line: 1330, column: 3, scope: !5858)
!5897 = distinct !{!5897, !5861, !5898}
!5898 = !DILocation(line: 1337, column: 3, scope: !5855)
!5899 = !DILocation(line: 1338, column: 3, scope: !5807)
!5900 = !DILocation(line: 1338, column: 13, scope: !5807)
!5901 = !DILocation(line: 1340, column: 3, scope: !5807)
!5902 = !DILocation(line: 1340, column: 7, scope: !5807)
!5903 = !DILocation(line: 1340, column: 13, scope: !5807)
!5904 = !DILocation(line: 1342, column: 1, scope: !5706)
!5905 = distinct !DISubprogram(name: "calc_colors_from_weights_array", scope: !3, file: !3, line: 1260, type: !5906, scopeLine: 1262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!5906 = !DISubroutineType(types: !5907)
!5907 = !{null, !3793, !2272, !2771}
!5908 = !DILocalVariable(name: "num", arg: 1, scope: !5905, file: !3, line: 1260, type: !3793)
!5909 = !DILocation(line: 1260, column: 54, scope: !5905)
!5910 = !DILocalVariable(name: "weights", arg: 2, scope: !5905, file: !3, line: 1260, type: !2272)
!5911 = !DILocation(line: 1260, column: 72, scope: !5905)
!5912 = !DILocalVariable(name: "r_wtcol_v", arg: 3, scope: !5905, file: !3, line: 1261, type: !2771)
!5913 = !DILocation(line: 1261, column: 60, scope: !5905)
!5914 = !DILocalVariable(name: "wc", scope: !5905, file: !3, line: 1263, type: !2771)
!5915 = !DILocation(line: 1263, column: 18, scope: !5905)
!5916 = !DILocation(line: 1263, column: 27, scope: !5905)
!5917 = !DILocalVariable(name: "i", scope: !5905, file: !3, line: 1264, type: !156)
!5918 = !DILocation(line: 1264, column: 6, scope: !5905)
!5919 = !DILocation(line: 1266, column: 9, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5905, file: !3, line: 1266, column: 2)
!5921 = !DILocation(line: 1266, column: 7, scope: !5920)
!5922 = !DILocation(line: 1266, column: 14, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 1266, column: 2)
!5924 = !DILocation(line: 1266, column: 18, scope: !5923)
!5925 = !DILocation(line: 1266, column: 16, scope: !5923)
!5926 = !DILocation(line: 1266, column: 2, scope: !5920)
!5927 = !DILocation(line: 1267, column: 38, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 1266, column: 45)
!5929 = !DILocation(line: 1267, column: 21, scope: !5928)
!5930 = !DILocation(line: 1267, column: 49, scope: !5928)
!5931 = !DILocation(line: 1267, column: 48, scope: !5928)
!5932 = !DILocation(line: 1267, column: 3, scope: !5928)
!5933 = !DILocation(line: 1268, column: 2, scope: !5928)
!5934 = !DILocation(line: 1266, column: 24, scope: !5923)
!5935 = !DILocation(line: 1266, column: 30, scope: !5923)
!5936 = !DILocation(line: 1266, column: 41, scope: !5923)
!5937 = !DILocation(line: 1266, column: 2, scope: !5923)
!5938 = distinct !{!5938, !5926, !5939}
!5939 = !DILocation(line: 1268, column: 2, scope: !5920)
!5940 = !DILocation(line: 1269, column: 1, scope: !5905)
!5941 = distinct !DISubprogram(name: "calc_weightpaint_vert_array", scope: !3, file: !3, line: 1213, type: !5942, scopeLine: 1215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!5942 = !DISubroutineType(types: !5943)
!5943 = !{null, !4007, !2108, !3793, !5944, !2771}
!5944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!5945 = !DILocalVariable(name: "ob", arg: 1, scope: !5941, file: !3, line: 1213, type: !4007)
!5946 = !DILocation(line: 1213, column: 49, scope: !5941)
!5947 = !DILocalVariable(name: "dm", arg: 2, scope: !5941, file: !3, line: 1213, type: !2108)
!5948 = !DILocation(line: 1213, column: 66, scope: !5941)
!5949 = !DILocalVariable(name: "draw_flag", arg: 3, scope: !5941, file: !3, line: 1213, type: !3793)
!5950 = !DILocation(line: 1213, column: 80, scope: !5941)
!5951 = !DILocalVariable(name: "dm_wcinfo", arg: 4, scope: !5941, file: !3, line: 1213, type: !5944)
!5952 = !DILocation(line: 1213, column: 110, scope: !5941)
!5953 = !DILocalVariable(name: "r_wtcol_v", arg: 5, scope: !5941, file: !3, line: 1214, type: !2771)
!5954 = !DILocation(line: 1214, column: 57, scope: !5941)
!5955 = !DILocalVariable(name: "dv", scope: !5941, file: !3, line: 1216, type: !5956)
!5956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5957, size: 64)
!5957 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDeformVert", file: !299, line: 63, baseType: !1045)
!5958 = !DILocation(line: 1216, column: 15, scope: !5941)
!5959 = !DILocation(line: 1216, column: 43, scope: !5941)
!5960 = !DILocation(line: 1216, column: 20, scope: !5941)
!5961 = !DILocalVariable(name: "numVerts", scope: !5941, file: !3, line: 1217, type: !156)
!5962 = !DILocation(line: 1217, column: 6, scope: !5941)
!5963 = !DILocation(line: 1217, column: 17, scope: !5941)
!5964 = !DILocation(line: 1217, column: 21, scope: !5941)
!5965 = !DILocation(line: 1217, column: 33, scope: !5941)
!5966 = !DILocation(line: 1219, column: 6, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 1219, column: 6)
!5968 = !DILocation(line: 1219, column: 6, scope: !5941)
!5969 = !DILocalVariable(name: "wc", scope: !5970, file: !3, line: 1220, type: !2771)
!5970 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 1219, column: 10)
!5971 = !DILocation(line: 1220, column: 19, scope: !5970)
!5972 = !DILocation(line: 1220, column: 28, scope: !5970)
!5973 = !DILocalVariable(name: "i", scope: !5970, file: !3, line: 1221, type: !7)
!5974 = !DILocation(line: 1221, column: 16, scope: !5970)
!5975 = !DILocalVariable(name: "defbase_tot", scope: !5970, file: !3, line: 1224, type: !3793)
!5976 = !DILocation(line: 1224, column: 13, scope: !5970)
!5977 = !DILocation(line: 1224, column: 42, scope: !5970)
!5978 = !DILocation(line: 1224, column: 46, scope: !5970)
!5979 = !DILocation(line: 1224, column: 27, scope: !5970)
!5980 = !DILocalVariable(name: "defbase_act", scope: !5970, file: !3, line: 1225, type: !3793)
!5981 = !DILocation(line: 1225, column: 13, scope: !5970)
!5982 = !DILocation(line: 1225, column: 27, scope: !5970)
!5983 = !DILocation(line: 1225, column: 31, scope: !5970)
!5984 = !DILocation(line: 1225, column: 38, scope: !5970)
!5985 = !DILocalVariable(name: "defbase_sel_tot", scope: !5970, file: !3, line: 1227, type: !156)
!5986 = !DILocation(line: 1227, column: 7, scope: !5970)
!5987 = !DILocalVariable(name: "defbase_sel", scope: !5970, file: !3, line: 1228, type: !326)
!5988 = !DILocation(line: 1228, column: 9, scope: !5970)
!5989 = !DILocation(line: 1230, column: 7, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5970, file: !3, line: 1230, column: 7)
!5991 = !DILocation(line: 1230, column: 17, scope: !5990)
!5992 = !DILocation(line: 1230, column: 7, scope: !5970)
!5993 = !DILocation(line: 1231, column: 42, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 1230, column: 39)
!5995 = !DILocation(line: 1231, column: 46, scope: !5994)
!5996 = !DILocation(line: 1231, column: 18, scope: !5994)
!5997 = !DILocation(line: 1231, column: 16, scope: !5994)
!5998 = !DILocation(line: 1232, column: 3, scope: !5994)
!5999 = !DILocation(line: 1234, column: 12, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5970, file: !3, line: 1234, column: 3)
!6001 = !DILocation(line: 1234, column: 10, scope: !6000)
!6002 = !DILocation(line: 1234, column: 8, scope: !6000)
!6003 = !DILocation(line: 1234, column: 22, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !6000, file: !3, line: 1234, column: 3)
!6005 = !DILocation(line: 1234, column: 24, scope: !6004)
!6006 = !DILocation(line: 1234, column: 3, scope: !6000)
!6007 = !DILocation(line: 1235, column: 49, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6004, file: !3, line: 1234, column: 47)
!6009 = !DILocation(line: 1235, column: 32, scope: !6008)
!6010 = !DILocation(line: 1235, column: 53, scope: !6008)
!6011 = !DILocation(line: 1235, column: 57, scope: !6008)
!6012 = !DILocation(line: 1235, column: 68, scope: !6008)
!6013 = !DILocation(line: 1235, column: 81, scope: !6008)
!6014 = !DILocation(line: 1235, column: 94, scope: !6008)
!6015 = !DILocation(line: 1235, column: 107, scope: !6008)
!6016 = !DILocation(line: 1235, column: 124, scope: !6008)
!6017 = !DILocation(line: 1235, column: 4, scope: !6008)
!6018 = !DILocation(line: 1236, column: 3, scope: !6008)
!6019 = !DILocation(line: 1234, column: 31, scope: !6004)
!6020 = !DILocation(line: 1234, column: 37, scope: !6004)
!6021 = !DILocation(line: 1234, column: 43, scope: !6004)
!6022 = !DILocation(line: 1234, column: 3, scope: !6004)
!6023 = distinct !{!6023, !6006, !6024}
!6024 = !DILocation(line: 1236, column: 3, scope: !6000)
!6025 = !DILocation(line: 1238, column: 7, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !5970, file: !3, line: 1238, column: 7)
!6027 = !DILocation(line: 1238, column: 7, scope: !5970)
!6028 = !DILocation(line: 1239, column: 4, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 1238, column: 20)
!6030 = !DILocation(line: 1239, column: 14, scope: !6029)
!6031 = !DILocation(line: 1240, column: 3, scope: !6029)
!6032 = !DILocation(line: 1241, column: 2, scope: !5970)
!6033 = !DILocalVariable(name: "col", scope: !6034, file: !3, line: 1243, type: !1035)
!6034 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 1242, column: 7)
!6035 = !DILocation(line: 1243, column: 17, scope: !6034)
!6036 = !DILocation(line: 1244, column: 7, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6034, file: !3, line: 1244, column: 7)
!6038 = !DILocation(line: 1244, column: 17, scope: !6037)
!6039 = !DILocation(line: 1244, column: 7, scope: !6034)
!6040 = !DILocation(line: 1245, column: 28, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6037, file: !3, line: 1244, column: 73)
!6042 = !DILocation(line: 1245, column: 33, scope: !6041)
!6043 = !DILocation(line: 1245, column: 44, scope: !6041)
!6044 = !DILocation(line: 1245, column: 4, scope: !6041)
!6045 = !DILocation(line: 1246, column: 4, scope: !6041)
!6046 = !DILocation(line: 1246, column: 11, scope: !6041)
!6047 = !DILocation(line: 1247, column: 3, scope: !6041)
!6048 = !DILocation(line: 1249, column: 22, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6037, file: !3, line: 1248, column: 8)
!6050 = !DILocation(line: 1249, column: 27, scope: !6049)
!6051 = !DILocation(line: 1249, column: 4, scope: !6049)
!6052 = !DILocation(line: 1251, column: 20, scope: !6034)
!6053 = !DILocation(line: 1251, column: 13, scope: !6034)
!6054 = !DILocation(line: 1251, column: 31, scope: !6034)
!6055 = !DILocation(line: 1251, column: 41, scope: !6034)
!6056 = !DILocation(line: 1251, column: 3, scope: !6034)
!6057 = !DILocation(line: 1253, column: 1, scope: !5941)
!6058 = distinct !DISubprogram(name: "copy_v4_v4_char", scope: !4729, file: !4729, line: 114, type: !6059, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!6059 = !DISubroutineType(types: !6060)
!6060 = !{null, !319, !1712}
!6061 = !DILocalVariable(name: "r", arg: 1, scope: !6058, file: !4729, line: 114, type: !319)
!6062 = !DILocation(line: 114, column: 35, scope: !6058)
!6063 = !DILocalVariable(name: "a", arg: 2, scope: !6058, file: !4729, line: 114, type: !1712)
!6064 = !DILocation(line: 114, column: 52, scope: !6058)
!6065 = !DILocation(line: 116, column: 9, scope: !6058)
!6066 = !DILocation(line: 116, column: 2, scope: !6058)
!6067 = !DILocation(line: 116, column: 7, scope: !6058)
!6068 = !DILocation(line: 117, column: 9, scope: !6058)
!6069 = !DILocation(line: 117, column: 2, scope: !6058)
!6070 = !DILocation(line: 117, column: 7, scope: !6058)
!6071 = !DILocation(line: 118, column: 9, scope: !6058)
!6072 = !DILocation(line: 118, column: 2, scope: !6058)
!6073 = !DILocation(line: 118, column: 7, scope: !6058)
!6074 = !DILocation(line: 119, column: 9, scope: !6058)
!6075 = !DILocation(line: 119, column: 2, scope: !6058)
!6076 = !DILocation(line: 119, column: 7, scope: !6058)
!6077 = !DILocation(line: 120, column: 1, scope: !6058)
!6078 = distinct !DISubprogram(name: "editbmesh_get_vertex_cos", scope: !3, file: !3, line: 1962, type: !6079, scopeLine: 1963, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!6079 = !DISubroutineType(types: !6080)
!6080 = !{!1660, !5722, !328}
!6081 = !DILocalVariable(name: "em", arg: 1, scope: !6078, file: !3, line: 1962, type: !5722)
!6082 = !DILocation(line: 1962, column: 46, scope: !6078)
!6083 = !DILocalVariable(name: "r_numVerts", arg: 2, scope: !6078, file: !3, line: 1962, type: !328)
!6084 = !DILocation(line: 1962, column: 55, scope: !6078)
!6085 = !DILocalVariable(name: "iter", scope: !6078, file: !3, line: 1964, type: !6086)
!6086 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter", file: !174, line: 186, baseType: !6087)
!6087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter", file: !174, line: 164, size: 512, elements: !6088)
!6088 = !{!6089, !6169, !6170, !6171, !6172}
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6087, file: !174, line: 179, baseType: !6090, size: 320)
!6090 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6087, file: !174, line: 166, size: 320, elements: !6091)
!6091 = !{!6092, !6107, !6113, !6121, !6129, !6135, !6141, !6147, !6151, !6157, !6163}
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "elem_of_mesh", scope: !6090, file: !174, line: 167, baseType: !6093, size: 192)
!6093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__elem_of_mesh", file: !174, line: 113, size: 192, elements: !6094)
!6094 = !{!6095}
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "pooliter", scope: !6093, file: !174, line: 114, baseType: !6096, size: 192)
!6096 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool_iter", file: !6097, line: 80, baseType: !6098)
!6097 = !DIFile(filename: "blender/source/blender/blenlib/BLI_mempool.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_iter", file: !6097, line: 76, size: 192, elements: !6099)
!6099 = !{!6100, !6103, !6106}
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !6098, file: !6097, line: 77, baseType: !6101, size: 64)
!6101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6102, size: 64)
!6102 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool", file: !6097, line: 47, baseType: !1686)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "curchunk", scope: !6098, file: !6097, line: 78, baseType: !6104, size: 64, offset: 64)
!6104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6105, size: 64)
!6105 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_chunk", file: !6097, line: 45, flags: DIFlagFwdDecl)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "curindex", scope: !6098, file: !6097, line: 79, baseType: !7, size: 32, offset: 128)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_vert", scope: !6090, file: !174, line: 169, baseType: !6108, size: 192)
!6108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_vert", file: !174, line: 116, size: 192, elements: !6109)
!6109 = !{!6110, !6111, !6112}
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !6108, file: !174, line: 117, baseType: !338, size: 64)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !6108, file: !174, line: 118, baseType: !400, size: 64, offset: 64)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !6108, file: !174, line: 118, baseType: !400, size: 64, offset: 128)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_vert", scope: !6090, file: !174, line: 170, baseType: !6114, size: 320)
!6114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_vert", file: !174, line: 120, size: 320, elements: !6115)
!6115 = !{!6116, !6117, !6118, !6119, !6120}
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !6114, file: !174, line: 121, baseType: !338, size: 64)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !6114, file: !174, line: 122, baseType: !384, size: 64, offset: 64)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !6114, file: !174, line: 122, baseType: !384, size: 64, offset: 128)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !6114, file: !174, line: 123, baseType: !400, size: 64, offset: 192)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !6114, file: !174, line: 123, baseType: !400, size: 64, offset: 256)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_vert", scope: !6090, file: !174, line: 171, baseType: !6122, size: 320)
!6122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_vert", file: !174, line: 125, size: 320, elements: !6123)
!6123 = !{!6124, !6125, !6126, !6127, !6128}
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !6122, file: !174, line: 126, baseType: !338, size: 64)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !6122, file: !174, line: 127, baseType: !384, size: 64, offset: 64)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !6122, file: !174, line: 127, baseType: !384, size: 64, offset: 128)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !6122, file: !174, line: 128, baseType: !400, size: 64, offset: 192)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !6122, file: !174, line: 128, baseType: !400, size: 64, offset: 256)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_edge", scope: !6090, file: !174, line: 172, baseType: !6130, size: 192)
!6130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_edge", file: !174, line: 130, size: 192, elements: !6131)
!6131 = !{!6132, !6133, !6134}
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !6130, file: !174, line: 131, baseType: !400, size: 64)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !6130, file: !174, line: 132, baseType: !384, size: 64, offset: 64)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !6130, file: !174, line: 132, baseType: !384, size: 64, offset: 128)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_loop", scope: !6090, file: !174, line: 173, baseType: !6136, size: 192)
!6136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_loop", file: !174, line: 134, size: 192, elements: !6137)
!6137 = !{!6138, !6139, !6140}
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !6136, file: !174, line: 135, baseType: !384, size: 64)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !6136, file: !174, line: 136, baseType: !384, size: 64, offset: 64)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !6136, file: !174, line: 136, baseType: !384, size: 64, offset: 128)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_edge", scope: !6090, file: !174, line: 174, baseType: !6142, size: 192)
!6142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_edge", file: !174, line: 138, size: 192, elements: !6143)
!6143 = !{!6144, !6145, !6146}
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !6142, file: !174, line: 139, baseType: !400, size: 64)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !6142, file: !174, line: 140, baseType: !384, size: 64, offset: 64)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !6142, file: !174, line: 140, baseType: !384, size: 64, offset: 128)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_edge", scope: !6090, file: !174, line: 175, baseType: !6148, size: 64)
!6148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_edge", file: !174, line: 142, size: 64, elements: !6149)
!6149 = !{!6150}
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !6148, file: !174, line: 143, baseType: !400, size: 64)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_face", scope: !6090, file: !174, line: 176, baseType: !6152, size: 192)
!6152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_face", file: !174, line: 145, size: 192, elements: !6153)
!6153 = !{!6154, !6155, !6156}
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !6152, file: !174, line: 146, baseType: !402, size: 64)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !6152, file: !174, line: 147, baseType: !384, size: 64, offset: 64)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !6152, file: !174, line: 147, baseType: !384, size: 64, offset: 128)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_face", scope: !6090, file: !174, line: 177, baseType: !6158, size: 192)
!6158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_face", file: !174, line: 149, size: 192, elements: !6159)
!6159 = !{!6160, !6161, !6162}
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !6158, file: !174, line: 150, baseType: !402, size: 64)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !6158, file: !174, line: 151, baseType: !384, size: 64, offset: 64)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !6158, file: !174, line: 151, baseType: !384, size: 64, offset: 128)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_face", scope: !6090, file: !174, line: 178, baseType: !6164, size: 192)
!6164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_face", file: !174, line: 153, size: 192, elements: !6165)
!6165 = !{!6166, !6167, !6168}
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !6164, file: !174, line: 154, baseType: !402, size: 64)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !6164, file: !174, line: 155, baseType: !384, size: 64, offset: 64)
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !6164, file: !174, line: 155, baseType: !384, size: 64, offset: 128)
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !6087, file: !174, line: 181, baseType: !330, size: 64, offset: 320)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !6087, file: !174, line: 182, baseType: !334, size: 64, offset: 384)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6087, file: !174, line: 184, baseType: !156, size: 32, offset: 448)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "itype", scope: !6087, file: !174, line: 185, baseType: !315, size: 8, offset: 480)
!6173 = !DILocation(line: 1964, column: 9, scope: !6078)
!6174 = !DILocalVariable(name: "eve", scope: !6078, file: !3, line: 1965, type: !338)
!6175 = !DILocation(line: 1965, column: 10, scope: !6078)
!6176 = !DILocalVariable(name: "cos", scope: !6078, file: !3, line: 1966, type: !1660)
!6177 = !DILocation(line: 1966, column: 10, scope: !6078)
!6178 = !DILocalVariable(name: "i", scope: !6078, file: !3, line: 1967, type: !156)
!6179 = !DILocation(line: 1967, column: 6, scope: !6078)
!6180 = !DILocation(line: 1969, column: 16, scope: !6078)
!6181 = !DILocation(line: 1969, column: 20, scope: !6078)
!6182 = !DILocation(line: 1969, column: 24, scope: !6078)
!6183 = !DILocation(line: 1969, column: 3, scope: !6078)
!6184 = !DILocation(line: 1969, column: 14, scope: !6078)
!6185 = !DILocation(line: 1971, column: 8, scope: !6078)
!6186 = !DILocation(line: 1971, column: 40, scope: !6078)
!6187 = !DILocation(line: 1971, column: 44, scope: !6078)
!6188 = !DILocation(line: 1971, column: 48, scope: !6078)
!6189 = !DILocation(line: 1971, column: 38, scope: !6078)
!6190 = !DILocation(line: 1971, column: 6, scope: !6078)
!6191 = !DILocation(line: 1973, column: 2, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6078, file: !3, line: 1973, column: 2)
!6193 = !DILocation(line: 1973, column: 2, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6192, file: !3, line: 1973, column: 2)
!6195 = !DILocation(line: 1974, column: 14, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6194, file: !3, line: 1973, column: 63)
!6197 = !DILocation(line: 1974, column: 18, scope: !6196)
!6198 = !DILocation(line: 1974, column: 22, scope: !6196)
!6199 = !DILocation(line: 1974, column: 27, scope: !6196)
!6200 = !DILocation(line: 1974, column: 3, scope: !6196)
!6201 = !DILocation(line: 1975, column: 2, scope: !6196)
!6202 = distinct !{!6202, !6191, !6203}
!6203 = !DILocation(line: 1975, column: 2, scope: !6192)
!6204 = !DILocation(line: 1977, column: 9, scope: !6078)
!6205 = !DILocation(line: 1977, column: 2, scope: !6078)
!6206 = distinct !DISubprogram(name: "BM_iter_new", scope: !6207, file: !6207, line: 172, type: !6208, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!6207 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6208 = !DISubroutineType(types: !6209)
!6209 = !{!318, !6210, !1749, !1713, !318}
!6210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6086, size: 64)
!6211 = !DILocalVariable(name: "iter", arg: 1, scope: !6206, file: !6207, line: 172, type: !6210)
!6212 = !DILocation(line: 172, column: 38, scope: !6206)
!6213 = !DILocalVariable(name: "bm", arg: 2, scope: !6206, file: !6207, line: 172, type: !1749)
!6214 = !DILocation(line: 172, column: 51, scope: !6206)
!6215 = !DILocalVariable(name: "itype", arg: 3, scope: !6206, file: !6207, line: 172, type: !1713)
!6216 = !DILocation(line: 172, column: 66, scope: !6206)
!6217 = !DILocalVariable(name: "data", arg: 4, scope: !6206, file: !6207, line: 172, type: !318)
!6218 = !DILocation(line: 172, column: 79, scope: !6206)
!6219 = !DILocation(line: 174, column: 6, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6206, file: !6207, line: 174, column: 6)
!6221 = !DILocation(line: 174, column: 6, scope: !6206)
!6222 = !DILocation(line: 175, column: 23, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6220, file: !6207, line: 174, column: 51)
!6224 = !DILocation(line: 175, column: 10, scope: !6223)
!6225 = !DILocation(line: 175, column: 3, scope: !6223)
!6226 = !DILocation(line: 178, column: 3, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6220, file: !6207, line: 177, column: 7)
!6228 = !DILocation(line: 180, column: 1, scope: !6206)
!6229 = distinct !DISubprogram(name: "BM_iter_step", scope: !6207, file: !6207, line: 40, type: !6230, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!6230 = !DISubroutineType(types: !6231)
!6231 = !{!318, !6210}
!6232 = !DILocalVariable(name: "iter", arg: 1, scope: !6229, file: !6207, line: 40, type: !6210)
!6233 = !DILocation(line: 40, column: 39, scope: !6229)
!6234 = !DILocation(line: 42, column: 9, scope: !6229)
!6235 = !DILocation(line: 42, column: 15, scope: !6229)
!6236 = !DILocation(line: 42, column: 20, scope: !6229)
!6237 = !DILocation(line: 42, column: 2, scope: !6229)
!6238 = distinct !DISubprogram(name: "editbmesh_modifier_is_enabled", scope: !3, file: !3, line: 1980, type: !6239, scopeLine: 1981, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!6239 = !DISubroutineType(types: !6240)
!6240 = !{!327, !5258, !5260, !2108}
!6241 = !DILocalVariable(name: "scene", arg: 1, scope: !6238, file: !3, line: 1980, type: !5258)
!6242 = !DILocation(line: 1980, column: 43, scope: !6238)
!6243 = !DILocalVariable(name: "md", arg: 2, scope: !6238, file: !3, line: 1980, type: !5260)
!6244 = !DILocation(line: 1980, column: 64, scope: !6238)
!6245 = !DILocalVariable(name: "dm", arg: 3, scope: !6238, file: !3, line: 1980, type: !2108)
!6246 = !DILocation(line: 1980, column: 81, scope: !6238)
!6247 = !DILocalVariable(name: "mti", scope: !6238, file: !3, line: 1982, type: !5274)
!6248 = !DILocation(line: 1982, column: 20, scope: !6238)
!6249 = !DILocation(line: 1982, column: 47, scope: !6238)
!6250 = !DILocation(line: 1982, column: 51, scope: !6238)
!6251 = !DILocation(line: 1982, column: 26, scope: !6238)
!6252 = !DILocalVariable(name: "required_mode", scope: !6238, file: !3, line: 1983, type: !156)
!6253 = !DILocation(line: 1983, column: 6, scope: !6238)
!6254 = !DILocation(line: 1985, column: 26, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 1985, column: 6)
!6256 = !DILocation(line: 1985, column: 33, scope: !6255)
!6257 = !DILocation(line: 1985, column: 37, scope: !6255)
!6258 = !DILocation(line: 1985, column: 7, scope: !6255)
!6259 = !DILocation(line: 1985, column: 6, scope: !6238)
!6260 = !DILocation(line: 1985, column: 53, scope: !6255)
!6261 = !DILocation(line: 1986, column: 7, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 1986, column: 6)
!6263 = !DILocation(line: 1986, column: 12, scope: !6262)
!6264 = !DILocation(line: 1986, column: 18, scope: !6262)
!6265 = !DILocation(line: 1986, column: 60, scope: !6262)
!6266 = !DILocation(line: 1986, column: 63, scope: !6262)
!6267 = !DILocation(line: 1986, column: 6, scope: !6238)
!6268 = !DILocation(line: 1987, column: 21, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6262, file: !3, line: 1986, column: 67)
!6270 = !DILocation(line: 1987, column: 3, scope: !6269)
!6271 = !DILocation(line: 1988, column: 3, scope: !6269)
!6272 = !DILocation(line: 1991, column: 2, scope: !6238)
!6273 = !DILocation(line: 1992, column: 1, scope: !6238)
!6274 = distinct !DISubprogram(name: "makeDerivedMesh", scope: !3, file: !3, line: 2349, type: !6275, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!6275 = !DISubroutineType(types: !6276)
!6276 = !{null, !5258, !4007, !5722, !2768, !156}
!6277 = !DILocalVariable(name: "scene", arg: 1, scope: !6274, file: !3, line: 2349, type: !5258)
!6278 = !DILocation(line: 2349, column: 29, scope: !6274)
!6279 = !DILocalVariable(name: "ob", arg: 2, scope: !6274, file: !3, line: 2349, type: !4007)
!6280 = !DILocation(line: 2349, column: 44, scope: !6274)
!6281 = !DILocalVariable(name: "em", arg: 3, scope: !6274, file: !3, line: 2349, type: !5722)
!6282 = !DILocation(line: 2349, column: 60, scope: !6274)
!6283 = !DILocalVariable(name: "dataMask", arg: 4, scope: !6274, file: !3, line: 2350, type: !2768)
!6284 = !DILocation(line: 2350, column: 37, scope: !6274)
!6285 = !DILocalVariable(name: "build_shapekey_layers", arg: 5, scope: !6274, file: !3, line: 2350, type: !156)
!6286 = !DILocation(line: 2350, column: 51, scope: !6274)
!6287 = !DILocation(line: 2352, column: 34, scope: !6274)
!6288 = !DILocation(line: 2352, column: 41, scope: !6274)
!6289 = !DILocation(line: 2352, column: 14, scope: !6274)
!6290 = !DILocation(line: 2352, column: 11, scope: !6274)
!6291 = !DILocation(line: 2354, column: 6, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6274, file: !3, line: 2354, column: 6)
!6293 = !DILocation(line: 2354, column: 6, scope: !6274)
!6294 = !DILocation(line: 2355, column: 24, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 2354, column: 10)
!6296 = !DILocation(line: 2355, column: 31, scope: !6295)
!6297 = !DILocation(line: 2355, column: 35, scope: !6295)
!6298 = !DILocation(line: 2355, column: 39, scope: !6295)
!6299 = !DILocation(line: 2355, column: 3, scope: !6295)
!6300 = !DILocation(line: 2356, column: 2, scope: !6295)
!6301 = !DILocation(line: 2358, column: 19, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 2357, column: 7)
!6303 = !DILocation(line: 2358, column: 26, scope: !6302)
!6304 = !DILocation(line: 2358, column: 30, scope: !6302)
!6305 = !DILocation(line: 2358, column: 40, scope: !6302)
!6306 = !DILocation(line: 2358, column: 3, scope: !6302)
!6307 = !DILocation(line: 2360, column: 1, scope: !6274)
!6308 = distinct !DISubprogram(name: "object_get_datamask", scope: !3, file: !3, line: 2322, type: !6309, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!6309 = !DISubroutineType(types: !6310)
!6310 = !{!2768, !5258, !4007}
!6311 = !DILocalVariable(name: "scene", arg: 1, scope: !6308, file: !3, line: 2322, type: !5258)
!6312 = !DILocation(line: 2322, column: 50, scope: !6308)
!6313 = !DILocalVariable(name: "ob", arg: 2, scope: !6308, file: !3, line: 2322, type: !4007)
!6314 = !DILocation(line: 2322, column: 65, scope: !6308)
!6315 = !DILocalVariable(name: "actob", scope: !6308, file: !3, line: 2324, type: !4007)
!6316 = !DILocation(line: 2324, column: 10, scope: !6308)
!6317 = !DILocation(line: 2324, column: 18, scope: !6308)
!6318 = !DILocation(line: 2324, column: 25, scope: !6308)
!6319 = !DILocation(line: 2324, column: 34, scope: !6308)
!6320 = !DILocation(line: 2324, column: 41, scope: !6308)
!6321 = !DILocation(line: 2324, column: 49, scope: !6308)
!6322 = !DILocalVariable(name: "mask", scope: !6308, file: !3, line: 2325, type: !2768)
!6323 = !DILocation(line: 2325, column: 17, scope: !6308)
!6324 = !DILocation(line: 2325, column: 24, scope: !6308)
!6325 = !DILocation(line: 2325, column: 28, scope: !6308)
!6326 = !DILocation(line: 2327, column: 6, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6308, file: !3, line: 2327, column: 6)
!6328 = !DILocation(line: 2327, column: 12, scope: !6327)
!6329 = !DILocation(line: 2327, column: 9, scope: !6327)
!6330 = !DILocation(line: 2327, column: 6, scope: !6308)
!6331 = !DILocation(line: 2329, column: 34, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 2329, column: 7)
!6333 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 2327, column: 19)
!6334 = !DILocation(line: 2329, column: 7, scope: !6332)
!6335 = !DILocation(line: 2329, column: 38, scope: !6332)
!6336 = !DILocation(line: 2329, column: 42, scope: !6332)
!6337 = !DILocation(line: 2329, column: 46, scope: !6332)
!6338 = !DILocation(line: 2329, column: 51, scope: !6332)
!6339 = !DILocation(line: 2329, column: 7, scope: !6333)
!6340 = !DILocation(line: 2330, column: 9, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 2329, column: 77)
!6342 = !DILocation(line: 2331, column: 3, scope: !6341)
!6343 = !DILocation(line: 2334, column: 7, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 2334, column: 7)
!6345 = !DILocation(line: 2334, column: 11, scope: !6344)
!6346 = !DILocation(line: 2334, column: 16, scope: !6344)
!6347 = !DILocation(line: 2334, column: 7, scope: !6333)
!6348 = !DILocation(line: 2335, column: 9, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 2334, column: 40)
!6350 = !DILocation(line: 2336, column: 3, scope: !6349)
!6351 = !DILocation(line: 2338, column: 7, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 2338, column: 7)
!6353 = !DILocation(line: 2338, column: 11, scope: !6352)
!6354 = !DILocation(line: 2338, column: 16, scope: !6352)
!6355 = !DILocation(line: 2338, column: 7, scope: !6333)
!6356 = !DILocation(line: 2339, column: 9, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 2338, column: 40)
!6358 = !DILocation(line: 2340, column: 3, scope: !6357)
!6359 = !DILocation(line: 2342, column: 7, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 2342, column: 7)
!6361 = !DILocation(line: 2342, column: 11, scope: !6360)
!6362 = !DILocation(line: 2342, column: 16, scope: !6360)
!6363 = !DILocation(line: 2342, column: 7, scope: !6333)
!6364 = !DILocation(line: 2343, column: 9, scope: !6360)
!6365 = !DILocation(line: 2343, column: 4, scope: !6360)
!6366 = !DILocation(line: 2344, column: 2, scope: !6333)
!6367 = !DILocation(line: 2346, column: 9, scope: !6308)
!6368 = !DILocation(line: 2346, column: 2, scope: !6308)
!6369 = distinct !DISubprogram(name: "editbmesh_build_data", scope: !3, file: !3, line: 2305, type: !6370, scopeLine: 2306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!6370 = !DISubroutineType(types: !6371)
!6371 = !{null, !5258, !4007, !5722, !2768}
!6372 = !DILocalVariable(name: "scene", arg: 1, scope: !6369, file: !3, line: 2305, type: !5258)
!6373 = !DILocation(line: 2305, column: 41, scope: !6369)
!6374 = !DILocalVariable(name: "obedit", arg: 2, scope: !6369, file: !3, line: 2305, type: !4007)
!6375 = !DILocation(line: 2305, column: 56, scope: !6369)
!6376 = !DILocalVariable(name: "em", arg: 3, scope: !6369, file: !3, line: 2305, type: !5722)
!6377 = !DILocation(line: 2305, column: 76, scope: !6369)
!6378 = !DILocalVariable(name: "dataMask", arg: 4, scope: !6369, file: !3, line: 2305, type: !2768)
!6379 = !DILocation(line: 2305, column: 95, scope: !6369)
!6380 = !DILocation(line: 2307, column: 33, scope: !6369)
!6381 = !DILocation(line: 2307, column: 2, scope: !6369)
!6382 = !DILocation(line: 2308, column: 38, scope: !6369)
!6383 = !DILocation(line: 2308, column: 2, scope: !6369)
!6384 = !DILocation(line: 2310, column: 32, scope: !6369)
!6385 = !DILocation(line: 2310, column: 2, scope: !6369)
!6386 = !DILocation(line: 2312, column: 27, scope: !6369)
!6387 = !DILocation(line: 2312, column: 34, scope: !6369)
!6388 = !DILocation(line: 2312, column: 42, scope: !6369)
!6389 = !DILocation(line: 2312, column: 47, scope: !6369)
!6390 = !DILocation(line: 2312, column: 51, scope: !6369)
!6391 = !DILocation(line: 2312, column: 65, scope: !6369)
!6392 = !DILocation(line: 2312, column: 69, scope: !6369)
!6393 = !DILocation(line: 2312, column: 83, scope: !6369)
!6394 = !DILocation(line: 2312, column: 2, scope: !6369)
!6395 = !DILocation(line: 2313, column: 25, scope: !6369)
!6396 = !DILocation(line: 2313, column: 33, scope: !6369)
!6397 = !DILocation(line: 2313, column: 37, scope: !6369)
!6398 = !DILocation(line: 2313, column: 2, scope: !6369)
!6399 = !DILocation(line: 2315, column: 21, scope: !6369)
!6400 = !DILocation(line: 2315, column: 2, scope: !6369)
!6401 = !DILocation(line: 2315, column: 6, scope: !6369)
!6402 = !DILocation(line: 2315, column: 19, scope: !6369)
!6403 = !DILocation(line: 2316, column: 2, scope: !6369)
!6404 = !DILocation(line: 2316, column: 6, scope: !6369)
!6405 = !DILocation(line: 2316, column: 20, scope: !6369)
!6406 = !DILocation(line: 2316, column: 30, scope: !6369)
!6407 = !DILocation(line: 2317, column: 2, scope: !6369)
!6408 = !DILocation(line: 2317, column: 6, scope: !6369)
!6409 = !DILocation(line: 2317, column: 19, scope: !6369)
!6410 = !DILocation(line: 2317, column: 29, scope: !6369)
!6411 = !DILocation(line: 2320, column: 1, scope: !6369)
!6412 = distinct !DISubprogram(name: "mesh_build_data", scope: !3, file: !3, line: 2272, type: !6413, scopeLine: 2274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!6413 = !DISubroutineType(types: !6414)
!6414 = !{null, !5258, !4007, !2768, !156}
!6415 = !DILocalVariable(name: "scene", arg: 1, scope: !6412, file: !3, line: 2272, type: !5258)
!6416 = !DILocation(line: 2272, column: 36, scope: !6412)
!6417 = !DILocalVariable(name: "ob", arg: 2, scope: !6412, file: !3, line: 2272, type: !4007)
!6418 = !DILocation(line: 2272, column: 51, scope: !6412)
!6419 = !DILocalVariable(name: "dataMask", arg: 3, scope: !6412, file: !3, line: 2272, type: !2768)
!6420 = !DILocation(line: 2272, column: 70, scope: !6412)
!6421 = !DILocalVariable(name: "build_shapekey_layers", arg: 4, scope: !6412, file: !3, line: 2273, type: !156)
!6422 = !DILocation(line: 2273, column: 33, scope: !6412)
!6423 = !DILocalVariable(name: "obact", scope: !6412, file: !3, line: 2275, type: !4007)
!6424 = !DILocation(line: 2275, column: 10, scope: !6412)
!6425 = !DILocation(line: 2275, column: 18, scope: !6412)
!6426 = !DILocation(line: 2275, column: 25, scope: !6412)
!6427 = !DILocation(line: 2275, column: 34, scope: !6412)
!6428 = !DILocation(line: 2275, column: 41, scope: !6412)
!6429 = !DILocation(line: 2275, column: 49, scope: !6412)
!6430 = !DILocalVariable(name: "editing", scope: !6412, file: !3, line: 2276, type: !327)
!6431 = !DILocation(line: 2276, column: 7, scope: !6412)
!6432 = !DILocation(line: 2276, column: 44, scope: !6412)
!6433 = !DILocation(line: 2276, column: 17, scope: !6412)
!6434 = !DILocalVariable(name: "needMapping", scope: !6412, file: !3, line: 2278, type: !156)
!6435 = !DILocation(line: 2278, column: 6, scope: !6412)
!6436 = !DILocation(line: 2278, column: 21, scope: !6412)
!6437 = !DILocation(line: 2278, column: 27, scope: !6412)
!6438 = !DILocation(line: 2278, column: 24, scope: !6412)
!6439 = !DILocation(line: 2278, column: 34, scope: !6412)
!6440 = !DILocation(line: 2278, column: 38, scope: !6412)
!6441 = !DILocation(line: 2278, column: 46, scope: !6412)
!6442 = !DILocation(line: 2278, column: 50, scope: !6412)
!6443 = !DILocation(line: 2278, column: 54, scope: !6412)
!6444 = !DILocation(line: 2278, column: 59, scope: !6412)
!6445 = !DILocation(line: 0, scope: !6412)
!6446 = !DILocation(line: 2282, column: 33, scope: !6412)
!6447 = !DILocation(line: 2282, column: 2, scope: !6412)
!6448 = !DILocation(line: 2283, column: 38, scope: !6412)
!6449 = !DILocation(line: 2283, column: 2, scope: !6412)
!6450 = !DILocation(line: 2285, column: 22, scope: !6412)
!6451 = !DILocation(line: 2285, column: 29, scope: !6412)
!6452 = !DILocation(line: 2285, column: 40, scope: !6412)
!6453 = !DILocation(line: 2285, column: 44, scope: !6412)
!6454 = !DILocation(line: 2286, column: 23, scope: !6412)
!6455 = !DILocation(line: 2286, column: 27, scope: !6412)
!6456 = !DILocation(line: 2287, column: 22, scope: !6412)
!6457 = !DILocation(line: 2287, column: 35, scope: !6412)
!6458 = !DILocation(line: 2287, column: 52, scope: !6412)
!6459 = !DILocation(line: 2285, column: 2, scope: !6412)
!6460 = !DILocation(line: 2289, column: 25, scope: !6412)
!6461 = !DILocation(line: 2289, column: 29, scope: !6412)
!6462 = !DILocation(line: 2289, column: 33, scope: !6412)
!6463 = !DILocation(line: 2289, column: 2, scope: !6412)
!6464 = !DILocation(line: 2291, column: 2, scope: !6412)
!6465 = !DILocation(line: 2291, column: 6, scope: !6412)
!6466 = !DILocation(line: 2291, column: 20, scope: !6412)
!6467 = !DILocation(line: 2291, column: 30, scope: !6412)
!6468 = !DILocation(line: 2292, column: 2, scope: !6412)
!6469 = !DILocation(line: 2292, column: 6, scope: !6412)
!6470 = !DILocation(line: 2292, column: 21, scope: !6412)
!6471 = !DILocation(line: 2292, column: 31, scope: !6412)
!6472 = !DILocation(line: 2293, column: 21, scope: !6412)
!6473 = !DILocation(line: 2293, column: 2, scope: !6412)
!6474 = !DILocation(line: 2293, column: 6, scope: !6412)
!6475 = !DILocation(line: 2293, column: 19, scope: !6412)
!6476 = !DILocation(line: 2295, column: 7, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6412, file: !3, line: 2295, column: 6)
!6478 = !DILocation(line: 2295, column: 11, scope: !6477)
!6479 = !DILocation(line: 2295, column: 16, scope: !6477)
!6480 = !DILocation(line: 2295, column: 34, scope: !6477)
!6481 = !DILocation(line: 2295, column: 37, scope: !6477)
!6482 = !DILocation(line: 2295, column: 41, scope: !6477)
!6483 = !DILocation(line: 2295, column: 6, scope: !6412)
!6484 = !DILocation(line: 2299, column: 35, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 2295, column: 49)
!6486 = !DILocation(line: 2299, column: 42, scope: !6485)
!6487 = !DILocation(line: 2299, column: 49, scope: !6485)
!6488 = !DILocation(line: 2299, column: 63, scope: !6485)
!6489 = !DILocation(line: 2299, column: 71, scope: !6485)
!6490 = !DILocation(line: 2299, column: 3, scope: !6485)
!6491 = !DILocation(line: 2300, column: 2, scope: !6485)
!6492 = !DILocation(line: 2303, column: 1, scope: !6412)
!6493 = distinct !DISubprogram(name: "mesh_get_derived_final", scope: !3, file: !3, line: 2364, type: !6494, scopeLine: 2365, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!6494 = !DISubroutineType(types: !6495)
!6495 = !{!2108, !5258, !4007, !2768}
!6496 = !DILocalVariable(name: "scene", arg: 1, scope: !6493, file: !3, line: 2364, type: !5258)
!6497 = !DILocation(line: 2364, column: 44, scope: !6493)
!6498 = !DILocalVariable(name: "ob", arg: 2, scope: !6493, file: !3, line: 2364, type: !4007)
!6499 = !DILocation(line: 2364, column: 59, scope: !6493)
!6500 = !DILocalVariable(name: "dataMask", arg: 3, scope: !6493, file: !3, line: 2364, type: !2768)
!6501 = !DILocation(line: 2364, column: 78, scope: !6493)
!6502 = !DILocation(line: 2369, column: 34, scope: !6493)
!6503 = !DILocation(line: 2369, column: 41, scope: !6493)
!6504 = !DILocation(line: 2369, column: 14, scope: !6493)
!6505 = !DILocation(line: 2369, column: 11, scope: !6493)
!6506 = !DILocation(line: 2371, column: 7, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 2371, column: 6)
!6508 = !DILocation(line: 2371, column: 11, scope: !6507)
!6509 = !DILocation(line: 2371, column: 24, scope: !6507)
!6510 = !DILocation(line: 2371, column: 28, scope: !6507)
!6511 = !DILocation(line: 2371, column: 39, scope: !6507)
!6512 = !DILocation(line: 2371, column: 43, scope: !6507)
!6513 = !DILocation(line: 2371, column: 37, scope: !6507)
!6514 = !DILocation(line: 2371, column: 60, scope: !6507)
!6515 = !DILocation(line: 2371, column: 57, scope: !6507)
!6516 = !DILocation(line: 2371, column: 6, scope: !6493)
!6517 = !DILocation(line: 2372, column: 19, scope: !6507)
!6518 = !DILocation(line: 2372, column: 26, scope: !6507)
!6519 = !DILocation(line: 2372, column: 30, scope: !6507)
!6520 = !DILocation(line: 2372, column: 3, scope: !6507)
!6521 = !DILocation(line: 2374, column: 6, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 2374, column: 6)
!6523 = !DILocation(line: 2374, column: 10, scope: !6522)
!6524 = !DILocation(line: 2374, column: 6, scope: !6493)
!6525 = !DILocation(line: 2374, column: 85, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6522, file: !3, line: 2374, column: 24)
!6527 = !DILocation(line: 2375, column: 9, scope: !6493)
!6528 = !DILocation(line: 2375, column: 13, scope: !6493)
!6529 = !DILocation(line: 2375, column: 2, scope: !6493)
!6530 = distinct !DISubprogram(name: "mesh_get_derived_deform", scope: !3, file: !3, line: 2378, type: !6494, scopeLine: 2379, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!6531 = !DILocalVariable(name: "scene", arg: 1, scope: !6530, file: !3, line: 2378, type: !5258)
!6532 = !DILocation(line: 2378, column: 45, scope: !6530)
!6533 = !DILocalVariable(name: "ob", arg: 2, scope: !6530, file: !3, line: 2378, type: !4007)
!6534 = !DILocation(line: 2378, column: 60, scope: !6530)
!6535 = !DILocalVariable(name: "dataMask", arg: 3, scope: !6530, file: !3, line: 2378, type: !2768)
!6536 = !DILocation(line: 2378, column: 79, scope: !6530)
!6537 = !DILocation(line: 2383, column: 34, scope: !6530)
!6538 = !DILocation(line: 2383, column: 41, scope: !6530)
!6539 = !DILocation(line: 2383, column: 14, scope: !6530)
!6540 = !DILocation(line: 2383, column: 11, scope: !6530)
!6541 = !DILocation(line: 2385, column: 7, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 2385, column: 6)
!6543 = !DILocation(line: 2385, column: 11, scope: !6542)
!6544 = !DILocation(line: 2385, column: 25, scope: !6542)
!6545 = !DILocation(line: 2385, column: 29, scope: !6542)
!6546 = !DILocation(line: 2385, column: 40, scope: !6542)
!6547 = !DILocation(line: 2385, column: 44, scope: !6542)
!6548 = !DILocation(line: 2385, column: 38, scope: !6542)
!6549 = !DILocation(line: 2385, column: 61, scope: !6542)
!6550 = !DILocation(line: 2385, column: 58, scope: !6542)
!6551 = !DILocation(line: 2385, column: 6, scope: !6530)
!6552 = !DILocation(line: 2386, column: 19, scope: !6542)
!6553 = !DILocation(line: 2386, column: 26, scope: !6542)
!6554 = !DILocation(line: 2386, column: 30, scope: !6542)
!6555 = !DILocation(line: 2386, column: 3, scope: !6542)
!6556 = !DILocation(line: 2388, column: 9, scope: !6530)
!6557 = !DILocation(line: 2388, column: 13, scope: !6530)
!6558 = !DILocation(line: 2388, column: 2, scope: !6530)
!6559 = distinct !DISubprogram(name: "mesh_create_derived_render", scope: !3, file: !3, line: 2391, type: !6494, scopeLine: 2392, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!6560 = !DILocalVariable(name: "scene", arg: 1, scope: !6559, file: !3, line: 2391, type: !5258)
!6561 = !DILocation(line: 2391, column: 48, scope: !6559)
!6562 = !DILocalVariable(name: "ob", arg: 2, scope: !6559, file: !3, line: 2391, type: !4007)
!6563 = !DILocation(line: 2391, column: 63, scope: !6559)
!6564 = !DILocalVariable(name: "dataMask", arg: 3, scope: !6559, file: !3, line: 2391, type: !2768)
!6565 = !DILocation(line: 2391, column: 82, scope: !6559)
!6566 = !DILocalVariable(name: "final", scope: !6559, file: !3, line: 2393, type: !2108)
!6567 = !DILocation(line: 2393, column: 15, scope: !6559)
!6568 = !DILocation(line: 2395, column: 22, scope: !6559)
!6569 = !DILocation(line: 2395, column: 29, scope: !6559)
!6570 = !DILocation(line: 2395, column: 62, scope: !6559)
!6571 = !DILocation(line: 2395, column: 2, scope: !6559)
!6572 = !DILocation(line: 2397, column: 9, scope: !6559)
!6573 = !DILocation(line: 2397, column: 2, scope: !6559)
!6574 = distinct !DISubprogram(name: "mesh_calc_modifiers", scope: !3, file: !3, line: 1469, type: !6575, scopeLine: 1474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!6575 = !DISubroutineType(types: !6576)
!6576 = !{null, !5258, !4007, !1660, !6577, !6577, !156, !156, !156, !2768, !156, !156, !156}
!6577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!6578 = !DILocalVariable(name: "scene", arg: 1, scope: !6574, file: !3, line: 1469, type: !5258)
!6579 = !DILocation(line: 1469, column: 40, scope: !6574)
!6580 = !DILocalVariable(name: "ob", arg: 2, scope: !6574, file: !3, line: 1469, type: !4007)
!6581 = !DILocation(line: 1469, column: 55, scope: !6574)
!6582 = !DILocalVariable(name: "inputVertexCos", arg: 3, scope: !6574, file: !3, line: 1469, type: !1660)
!6583 = !DILocation(line: 1469, column: 67, scope: !6574)
!6584 = !DILocalVariable(name: "deform_r", arg: 4, scope: !6574, file: !3, line: 1470, type: !6577)
!6585 = !DILocation(line: 1470, column: 47, scope: !6574)
!6586 = !DILocalVariable(name: "final_r", arg: 5, scope: !6574, file: !3, line: 1470, type: !6577)
!6587 = !DILocation(line: 1470, column: 71, scope: !6574)
!6588 = !DILocalVariable(name: "useRenderParams", arg: 6, scope: !6574, file: !3, line: 1471, type: !156)
!6589 = !DILocation(line: 1471, column: 37, scope: !6574)
!6590 = !DILocalVariable(name: "useDeform", arg: 7, scope: !6574, file: !3, line: 1471, type: !156)
!6591 = !DILocation(line: 1471, column: 58, scope: !6574)
!6592 = !DILocalVariable(name: "needMapping", arg: 8, scope: !6574, file: !3, line: 1472, type: !156)
!6593 = !DILocation(line: 1472, column: 37, scope: !6574)
!6594 = !DILocalVariable(name: "dataMask", arg: 9, scope: !6574, file: !3, line: 1472, type: !2768)
!6595 = !DILocation(line: 1472, column: 65, scope: !6574)
!6596 = !DILocalVariable(name: "index", arg: 10, scope: !6574, file: !3, line: 1473, type: !156)
!6597 = !DILocation(line: 1473, column: 37, scope: !6574)
!6598 = !DILocalVariable(name: "useCache", arg: 11, scope: !6574, file: !3, line: 1473, type: !156)
!6599 = !DILocation(line: 1473, column: 48, scope: !6574)
!6600 = !DILocalVariable(name: "build_shapekey_layers", arg: 12, scope: !6574, file: !3, line: 1473, type: !156)
!6601 = !DILocation(line: 1473, column: 62, scope: !6574)
!6602 = !DILocalVariable(name: "me", scope: !6574, file: !3, line: 1475, type: !404)
!6603 = !DILocation(line: 1475, column: 8, scope: !6574)
!6604 = !DILocation(line: 1475, column: 13, scope: !6574)
!6605 = !DILocation(line: 1475, column: 17, scope: !6574)
!6606 = !DILocalVariable(name: "firstmd", scope: !6574, file: !3, line: 1476, type: !5260)
!6607 = !DILocation(line: 1476, column: 16, scope: !6574)
!6608 = !DILocalVariable(name: "md", scope: !6574, file: !3, line: 1476, type: !5260)
!6609 = !DILocation(line: 1476, column: 26, scope: !6574)
!6610 = !DILocalVariable(name: "previewmd", scope: !6574, file: !3, line: 1476, type: !5260)
!6611 = !DILocation(line: 1476, column: 31, scope: !6574)
!6612 = !DILocalVariable(name: "datamasks", scope: !6574, file: !3, line: 1477, type: !6613)
!6613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6614, size: 64)
!6614 = !DIDerivedType(tag: DW_TAG_typedef, name: "CDMaskLink", file: !128, line: 369, baseType: !6615)
!6615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CDMaskLink", file: !128, line: 366, size: 128, elements: !6616)
!6616 = !{!6617, !6619}
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6615, file: !128, line: 367, baseType: !6618, size: 64)
!6618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6615, size: 64)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !6615, file: !128, line: 368, baseType: !2768, size: 64, offset: 64)
!6620 = !DILocation(line: 1477, column: 14, scope: !6574)
!6621 = !DILocalVariable(name: "curr", scope: !6574, file: !3, line: 1477, type: !6613)
!6622 = !DILocation(line: 1477, column: 26, scope: !6574)
!6623 = !DILocalVariable(name: "mask", scope: !6574, file: !3, line: 1479, type: !2768)
!6624 = !DILocation(line: 1479, column: 17, scope: !6574)
!6625 = !DILocalVariable(name: "nextmask", scope: !6574, file: !3, line: 1479, type: !2768)
!6626 = !DILocation(line: 1479, column: 23, scope: !6574)
!6627 = !DILocalVariable(name: "previewmask", scope: !6574, file: !3, line: 1479, type: !2768)
!6628 = !DILocation(line: 1479, column: 33, scope: !6574)
!6629 = !DILocalVariable(name: "append_mask", scope: !6574, file: !3, line: 1479, type: !2768)
!6630 = !DILocation(line: 1479, column: 50, scope: !6574)
!6631 = !DILocalVariable(name: "deformedVerts", scope: !6574, file: !3, line: 1480, type: !1660)
!6632 = !DILocation(line: 1480, column: 10, scope: !6574)
!6633 = !DILocalVariable(name: "dm", scope: !6574, file: !3, line: 1481, type: !2108)
!6634 = !DILocation(line: 1481, column: 15, scope: !6574)
!6635 = !DILocalVariable(name: "orcodm", scope: !6574, file: !3, line: 1481, type: !2108)
!6636 = !DILocation(line: 1481, column: 27, scope: !6574)
!6637 = !DILocalVariable(name: "clothorcodm", scope: !6574, file: !3, line: 1481, type: !2108)
!6638 = !DILocation(line: 1481, column: 36, scope: !6574)
!6639 = !DILocalVariable(name: "finaldm", scope: !6574, file: !3, line: 1481, type: !2108)
!6640 = !DILocation(line: 1481, column: 50, scope: !6574)
!6641 = !DILocalVariable(name: "numVerts", scope: !6574, file: !3, line: 1482, type: !156)
!6642 = !DILocation(line: 1482, column: 6, scope: !6574)
!6643 = !DILocation(line: 1482, column: 17, scope: !6574)
!6644 = !DILocation(line: 1482, column: 21, scope: !6574)
!6645 = !DILocalVariable(name: "required_mode", scope: !6574, file: !3, line: 1483, type: !156)
!6646 = !DILocation(line: 1483, column: 6, scope: !6574)
!6647 = !DILocalVariable(name: "isPrevDeform", scope: !6574, file: !3, line: 1484, type: !327)
!6648 = !DILocation(line: 1484, column: 7, scope: !6574)
!6649 = !DILocalVariable(name: "skipVirtualArmature", scope: !6574, file: !3, line: 1485, type: !2353)
!6650 = !DILocation(line: 1485, column: 13, scope: !6574)
!6651 = !DILocation(line: 1485, column: 36, scope: !6574)
!6652 = !DILocation(line: 1485, column: 46, scope: !6574)
!6653 = !DILocation(line: 1485, column: 35, scope: !6574)
!6654 = !DILocalVariable(name: "mmd", scope: !6574, file: !3, line: 1486, type: !2908)
!6655 = !DILocation(line: 1486, column: 24, scope: !6574)
!6656 = !DILocation(line: 1486, column: 52, scope: !6574)
!6657 = !DILocation(line: 1486, column: 59, scope: !6574)
!6658 = !DILocation(line: 1486, column: 30, scope: !6574)
!6659 = !DILocalVariable(name: "has_multires", scope: !6574, file: !3, line: 1487, type: !2353)
!6660 = !DILocation(line: 1487, column: 13, scope: !6574)
!6661 = !DILocation(line: 1487, column: 29, scope: !6574)
!6662 = !DILocation(line: 1487, column: 33, scope: !6574)
!6663 = !DILocation(line: 1487, column: 36, scope: !6574)
!6664 = !DILocation(line: 1487, column: 41, scope: !6574)
!6665 = !DILocation(line: 1487, column: 51, scope: !6574)
!6666 = !DILocation(line: 0, scope: !6574)
!6667 = !DILocation(line: 1487, column: 28, scope: !6574)
!6668 = !DILocalVariable(name: "multires_applied", scope: !6574, file: !3, line: 1488, type: !327)
!6669 = !DILocation(line: 1488, column: 7, scope: !6574)
!6670 = !DILocalVariable(name: "sculpt_mode", scope: !6574, file: !3, line: 1489, type: !2353)
!6671 = !DILocation(line: 1489, column: 13, scope: !6574)
!6672 = !DILocation(line: 1489, column: 27, scope: !6574)
!6673 = !DILocation(line: 1489, column: 31, scope: !6574)
!6674 = !DILocation(line: 1489, column: 36, scope: !6574)
!6675 = !DILocation(line: 1489, column: 53, scope: !6574)
!6676 = !DILocation(line: 1489, column: 56, scope: !6574)
!6677 = !DILocation(line: 1489, column: 60, scope: !6574)
!6678 = !DILocalVariable(name: "sculpt_dyntopo", scope: !6574, file: !3, line: 1490, type: !2353)
!6679 = !DILocation(line: 1490, column: 13, scope: !6574)
!6680 = !DILocation(line: 1490, column: 31, scope: !6574)
!6681 = !DILocation(line: 1490, column: 43, scope: !6574)
!6682 = !DILocation(line: 1490, column: 46, scope: !6574)
!6683 = !DILocation(line: 1490, column: 50, scope: !6574)
!6684 = !DILocation(line: 1490, column: 58, scope: !6574)
!6685 = !DILocation(line: 1490, column: 30, scope: !6574)
!6686 = !DILocalVariable(name: "draw_flag", scope: !6574, file: !3, line: 1491, type: !3793)
!6687 = !DILocation(line: 1491, column: 12, scope: !6574)
!6688 = !DILocation(line: 1491, column: 41, scope: !6574)
!6689 = !DILocation(line: 1491, column: 48, scope: !6574)
!6690 = !DILocation(line: 1491, column: 24, scope: !6574)
!6691 = !DILocalVariable(name: "do_mod_mcol", scope: !6574, file: !3, line: 1494, type: !2353)
!6692 = !DILocation(line: 1494, column: 13, scope: !6574)
!6693 = !DILocation(line: 1494, column: 28, scope: !6574)
!6694 = !DILocation(line: 1494, column: 32, scope: !6574)
!6695 = !DILocation(line: 1494, column: 37, scope: !6574)
!6696 = !DILocation(line: 1494, column: 27, scope: !6574)
!6697 = !DILocalVariable(name: "do_final_wmcol", scope: !6574, file: !3, line: 1498, type: !2353)
!6698 = !DILocation(line: 1498, column: 13, scope: !6574)
!6699 = !DILocalVariable(name: "do_init_wmcol", scope: !6574, file: !3, line: 1499, type: !2353)
!6700 = !DILocation(line: 1499, column: 13, scope: !6574)
!6701 = !DILocation(line: 1499, column: 31, scope: !6574)
!6702 = !DILocation(line: 1499, column: 40, scope: !6574)
!6703 = !DILocation(line: 1499, column: 64, scope: !6574)
!6704 = !DILocation(line: 1499, column: 68, scope: !6574)
!6705 = !DILocation(line: 1499, column: 72, scope: !6574)
!6706 = !DILocation(line: 1499, column: 77, scope: !6574)
!6707 = !DILocation(line: 1499, column: 101, scope: !6574)
!6708 = !DILocation(line: 1499, column: 29, scope: !6574)
!6709 = !DILocalVariable(name: "do_mod_wmcol", scope: !6574, file: !3, line: 1501, type: !2353)
!6710 = !DILocation(line: 1501, column: 13, scope: !6574)
!6711 = !DILocation(line: 1501, column: 28, scope: !6574)
!6712 = !DILocalVariable(name: "do_loop_normals", scope: !6574, file: !3, line: 1503, type: !2353)
!6713 = !DILocation(line: 1503, column: 13, scope: !6574)
!6714 = !DILocation(line: 1503, column: 32, scope: !6574)
!6715 = !DILocation(line: 1503, column: 36, scope: !6574)
!6716 = !DILocation(line: 1503, column: 41, scope: !6574)
!6717 = !DILocation(line: 1503, column: 31, scope: !6574)
!6718 = !DILocalVariable(name: "loop_normals_split_angle", scope: !6574, file: !3, line: 1504, type: !2114)
!6719 = !DILocation(line: 1504, column: 14, scope: !6574)
!6720 = !DILocation(line: 1504, column: 41, scope: !6574)
!6721 = !DILocation(line: 1504, column: 45, scope: !6574)
!6722 = !DILocalVariable(name: "virtualModifierData", scope: !6574, file: !3, line: 1506, type: !6723)
!6723 = !DIDerivedType(tag: DW_TAG_typedef, name: "VirtualModifierData", file: !128, line: 391, baseType: !6724)
!6724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VirtualModifierData", file: !128, line: 386, size: 5568, elements: !6725)
!6725 = !{!6726, !6737, !6746, !6755}
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "amd", scope: !6724, file: !128, line: 387, baseType: !6727, size: 1600)
!6727 = !DIDerivedType(tag: DW_TAG_typedef, name: "ArmatureModifierData", file: !155, line: 535, baseType: !6728)
!6728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArmatureModifierData", file: !155, line: 527, size: 1600, elements: !6729)
!6729 = !{!6730, !6731, !6732, !6733, !6734, !6735, !6736}
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !6728, file: !155, line: 528, baseType: !722, size: 896)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "deformflag", scope: !6728, file: !155, line: 530, baseType: !313, size: 16, offset: 896)
!6732 = !DIDerivedType(tag: DW_TAG_member, name: "multi", scope: !6728, file: !155, line: 530, baseType: !313, size: 16, offset: 912)
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !6728, file: !155, line: 531, baseType: !156, size: 32, offset: 928)
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !6728, file: !155, line: 532, baseType: !707, size: 64, offset: 960)
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "prevCos", scope: !6728, file: !155, line: 533, baseType: !320, size: 64, offset: 1024)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "defgrp_name", scope: !6728, file: !155, line: 534, baseType: !457, size: 512, offset: 1088)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6724, file: !128, line: 388, baseType: !6738, size: 1536, offset: 1600)
!6738 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveModifierData", file: !155, line: 154, baseType: !6739)
!6739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveModifierData", file: !155, line: 147, size: 1536, elements: !6740)
!6740 = !{!6741, !6742, !6743, !6744, !6745}
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !6739, file: !155, line: 148, baseType: !722, size: 896)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !6739, file: !155, line: 150, baseType: !707, size: 64, offset: 896)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6739, file: !155, line: 151, baseType: !457, size: 512, offset: 960)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "defaxis", scope: !6739, file: !155, line: 152, baseType: !313, size: 16, offset: 1472)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6739, file: !155, line: 153, baseType: !1261, size: 48, offset: 1488)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "lmd", scope: !6724, file: !128, line: 389, baseType: !6747, size: 1536, offset: 3136)
!6747 = !DIDerivedType(tag: DW_TAG_typedef, name: "LatticeModifierData", file: !155, line: 145, baseType: !6748)
!6748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LatticeModifierData", file: !155, line: 138, size: 1536, elements: !6749)
!6749 = !{!6750, !6751, !6752, !6753, !6754}
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !6748, file: !155, line: 139, baseType: !722, size: 896)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !6748, file: !155, line: 141, baseType: !707, size: 64, offset: 896)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6748, file: !155, line: 142, baseType: !457, size: 512, offset: 960)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !6748, file: !155, line: 143, baseType: !321, size: 32, offset: 1472)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6748, file: !155, line: 144, baseType: !973, size: 32, offset: 1504)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "smd", scope: !6724, file: !128, line: 390, baseType: !6756, size: 896, offset: 4672)
!6756 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShapeKeyModifierData", file: !155, line: 816, baseType: !6757)
!6757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShapeKeyModifierData", file: !155, line: 814, size: 896, elements: !6758)
!6758 = !{!6759}
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !6757, file: !155, line: 815, baseType: !722, size: 896)
!6760 = !DILocation(line: 1506, column: 22, scope: !6574)
!6761 = !DILocalVariable(name: "app_flags", scope: !6574, file: !3, line: 1508, type: !5293)
!6762 = !DILocation(line: 1508, column: 20, scope: !6574)
!6763 = !DILocation(line: 1508, column: 32, scope: !6574)
!6764 = !DILocalVariable(name: "deform_app_flags", scope: !6574, file: !3, line: 1509, type: !5293)
!6765 = !DILocation(line: 1509, column: 20, scope: !6574)
!6766 = !DILocation(line: 1509, column: 39, scope: !6574)
!6767 = !DILocation(line: 1510, column: 6, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 1510, column: 6)
!6769 = !DILocation(line: 1510, column: 6, scope: !6574)
!6770 = !DILocation(line: 1511, column: 13, scope: !6768)
!6771 = !DILocation(line: 1511, column: 3, scope: !6768)
!6772 = !DILocation(line: 1512, column: 6, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 1512, column: 6)
!6774 = !DILocation(line: 1512, column: 6, scope: !6574)
!6775 = !DILocation(line: 1513, column: 20, scope: !6773)
!6776 = !DILocation(line: 1513, column: 3, scope: !6773)
!6777 = !DILocation(line: 1515, column: 7, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 1515, column: 6)
!6779 = !DILocation(line: 1515, column: 6, scope: !6574)
!6780 = !DILocation(line: 1516, column: 46, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6778, file: !3, line: 1515, column: 28)
!6782 = !DILocation(line: 1516, column: 13, scope: !6781)
!6783 = !DILocation(line: 1516, column: 11, scope: !6781)
!6784 = !DILocation(line: 1517, column: 2, scope: !6781)
!6785 = !DILocation(line: 1520, column: 13, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6778, file: !3, line: 1518, column: 7)
!6787 = !DILocation(line: 1520, column: 17, scope: !6786)
!6788 = !DILocation(line: 1520, column: 27, scope: !6786)
!6789 = !DILocation(line: 1520, column: 11, scope: !6786)
!6790 = !DILocation(line: 1521, column: 7, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6786, file: !3, line: 1521, column: 7)
!6792 = !DILocation(line: 1521, column: 15, scope: !6791)
!6793 = !DILocation(line: 1521, column: 18, scope: !6791)
!6794 = !DILocation(line: 1521, column: 27, scope: !6791)
!6795 = !DILocation(line: 1521, column: 32, scope: !6791)
!6796 = !DILocation(line: 1521, column: 7, scope: !6786)
!6797 = !DILocation(line: 1522, column: 14, scope: !6791)
!6798 = !DILocation(line: 1522, column: 23, scope: !6791)
!6799 = !DILocation(line: 1522, column: 12, scope: !6791)
!6800 = !DILocation(line: 1522, column: 4, scope: !6791)
!6801 = !DILocation(line: 1525, column: 7, scope: !6574)
!6802 = !DILocation(line: 1525, column: 5, scope: !6574)
!6803 = !DILocation(line: 1527, column: 24, scope: !6574)
!6804 = !DILocation(line: 1527, column: 2, scope: !6574)
!6805 = !DILocation(line: 1529, column: 6, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 1529, column: 6)
!6807 = !DILocation(line: 1529, column: 6, scope: !6574)
!6808 = !DILocation(line: 1529, column: 37, scope: !6806)
!6809 = !DILocation(line: 1529, column: 23, scope: !6806)
!6810 = !DILocation(line: 1530, column: 21, scope: !6806)
!6811 = !DILocation(line: 1532, column: 6, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 1532, column: 6)
!6813 = !DILocation(line: 1532, column: 19, scope: !6812)
!6814 = !DILocation(line: 1532, column: 22, scope: !6812)
!6815 = !DILocation(line: 1532, column: 6, scope: !6574)
!6816 = !DILocation(line: 1537, column: 40, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 1532, column: 35)
!6818 = !DILocation(line: 1537, column: 47, scope: !6817)
!6819 = !DILocation(line: 1537, column: 51, scope: !6817)
!6820 = !DILocation(line: 1537, column: 15, scope: !6817)
!6821 = !DILocation(line: 1537, column: 13, scope: !6817)
!6822 = !DILocation(line: 1540, column: 7, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6817, file: !3, line: 1540, column: 7)
!6824 = !DILocation(line: 1540, column: 7, scope: !6817)
!6825 = !DILocation(line: 1541, column: 8, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6827, file: !3, line: 1541, column: 8)
!6827 = distinct !DILexicalBlock(scope: !6823, file: !3, line: 1540, column: 18)
!6828 = !DILocation(line: 1541, column: 8, scope: !6827)
!6829 = !DILocation(line: 1542, column: 17, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 1541, column: 22)
!6831 = !DILocation(line: 1543, column: 4, scope: !6830)
!6832 = !DILocation(line: 1544, column: 3, scope: !6827)
!6833 = !DILocation(line: 1545, column: 2, scope: !6817)
!6834 = !DILocation(line: 1547, column: 38, scope: !6574)
!6835 = !DILocation(line: 1547, column: 45, scope: !6574)
!6836 = !DILocation(line: 1547, column: 49, scope: !6574)
!6837 = !DILocation(line: 1547, column: 53, scope: !6574)
!6838 = !DILocation(line: 1547, column: 63, scope: !6574)
!6839 = !DILocation(line: 1547, column: 78, scope: !6574)
!6840 = !DILocation(line: 1547, column: 89, scope: !6574)
!6841 = !DILocation(line: 1547, column: 14, scope: !6574)
!6842 = !DILocation(line: 1547, column: 12, scope: !6574)
!6843 = !DILocation(line: 1548, column: 9, scope: !6574)
!6844 = !DILocation(line: 1548, column: 7, scope: !6574)
!6845 = !DILocation(line: 1550, column: 6, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 1550, column: 6)
!6847 = !DILocation(line: 1550, column: 6, scope: !6574)
!6848 = !DILocation(line: 1550, column: 17, scope: !6846)
!6849 = !DILocation(line: 1550, column: 26, scope: !6846)
!6850 = !DILocation(line: 1550, column: 16, scope: !6846)
!6851 = !DILocation(line: 1551, column: 3, scope: !6574)
!6852 = !DILocation(line: 1551, column: 11, scope: !6574)
!6853 = !DILocation(line: 1553, column: 6, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 1553, column: 6)
!6855 = !DILocation(line: 1553, column: 6, scope: !6574)
!6856 = !DILocation(line: 1554, column: 7, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6858, file: !3, line: 1554, column: 7)
!6858 = distinct !DILexicalBlock(scope: !6854, file: !3, line: 1553, column: 17)
!6859 = !DILocation(line: 1554, column: 7, scope: !6858)
!6860 = !DILocation(line: 1555, column: 20, scope: !6857)
!6861 = !DILocation(line: 1555, column: 18, scope: !6857)
!6862 = !DILocation(line: 1555, column: 4, scope: !6857)
!6863 = !DILocation(line: 1558, column: 3, scope: !6858)
!6864 = !DILocation(line: 1558, column: 10, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6866, file: !3, line: 1558, column: 3)
!6866 = distinct !DILexicalBlock(scope: !6858, file: !3, line: 1558, column: 3)
!6867 = !DILocation(line: 1558, column: 3, scope: !6866)
!6868 = !DILocalVariable(name: "mti", scope: !6869, file: !3, line: 1559, type: !5274)
!6869 = distinct !DILexicalBlock(scope: !6865, file: !3, line: 1558, column: 48)
!6870 = !DILocation(line: 1559, column: 22, scope: !6869)
!6871 = !DILocation(line: 1559, column: 49, scope: !6869)
!6872 = !DILocation(line: 1559, column: 53, scope: !6869)
!6873 = !DILocation(line: 1559, column: 28, scope: !6869)
!6874 = !DILocation(line: 1561, column: 16, scope: !6869)
!6875 = !DILocation(line: 1561, column: 4, scope: !6869)
!6876 = !DILocation(line: 1561, column: 8, scope: !6869)
!6877 = !DILocation(line: 1561, column: 14, scope: !6869)
!6878 = !DILocation(line: 1563, column: 28, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6869, file: !3, line: 1563, column: 8)
!6880 = !DILocation(line: 1563, column: 35, scope: !6879)
!6881 = !DILocation(line: 1563, column: 39, scope: !6879)
!6882 = !DILocation(line: 1563, column: 9, scope: !6879)
!6883 = !DILocation(line: 1563, column: 8, scope: !6869)
!6884 = !DILocation(line: 1563, column: 55, scope: !6879)
!6885 = !DILocation(line: 1564, column: 8, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6869, file: !3, line: 1564, column: 8)
!6887 = !DILocation(line: 1564, column: 18, scope: !6886)
!6888 = !DILocation(line: 1564, column: 22, scope: !6886)
!6889 = !DILocation(line: 1564, column: 25, scope: !6886)
!6890 = !DILocation(line: 1564, column: 30, scope: !6886)
!6891 = !DILocation(line: 1564, column: 44, scope: !6886)
!6892 = !DILocation(line: 1564, column: 47, scope: !6886)
!6893 = !DILocation(line: 1564, column: 52, scope: !6886)
!6894 = !DILocation(line: 1564, column: 66, scope: !6886)
!6895 = !DILocation(line: 1564, column: 8, scope: !6869)
!6896 = !DILocation(line: 1564, column: 71, scope: !6886)
!6897 = !DILocation(line: 1566, column: 8, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6869, file: !3, line: 1566, column: 8)
!6899 = !DILocation(line: 1566, column: 13, scope: !6898)
!6900 = !DILocation(line: 1566, column: 18, scope: !6898)
!6901 = !DILocation(line: 1566, column: 50, scope: !6898)
!6902 = !DILocation(line: 1566, column: 54, scope: !6898)
!6903 = !DILocation(line: 1566, column: 8, scope: !6869)
!6904 = !DILocation(line: 1567, column: 10, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6906, file: !3, line: 1567, column: 9)
!6906 = distinct !DILexicalBlock(scope: !6898, file: !3, line: 1566, column: 70)
!6907 = !DILocation(line: 1567, column: 9, scope: !6906)
!6908 = !DILocation(line: 1568, column: 45, scope: !6905)
!6909 = !DILocation(line: 1568, column: 22, scope: !6905)
!6910 = !DILocation(line: 1568, column: 20, scope: !6905)
!6911 = !DILocation(line: 1568, column: 6, scope: !6905)
!6912 = !DILocation(line: 1570, column: 25, scope: !6906)
!6913 = !DILocation(line: 1570, column: 29, scope: !6906)
!6914 = !DILocation(line: 1570, column: 39, scope: !6906)
!6915 = !DILocation(line: 1570, column: 54, scope: !6906)
!6916 = !DILocation(line: 1570, column: 64, scope: !6906)
!6917 = !DILocation(line: 1570, column: 5, scope: !6906)
!6918 = !DILocation(line: 1571, column: 4, scope: !6906)
!6919 = !DILocation(line: 1573, column: 5, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6898, file: !3, line: 1572, column: 9)
!6921 = !DILocation(line: 1577, column: 9, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6869, file: !3, line: 1577, column: 8)
!6923 = !DILocation(line: 1577, column: 15, scope: !6922)
!6924 = !DILocation(line: 1577, column: 21, scope: !6922)
!6925 = !DILocation(line: 1577, column: 40, scope: !6922)
!6926 = !DILocation(line: 1577, column: 44, scope: !6922)
!6927 = !DILocation(line: 1577, column: 55, scope: !6922)
!6928 = !DILocation(line: 1577, column: 25, scope: !6922)
!6929 = !DILocation(line: 1577, column: 62, scope: !6922)
!6930 = !DILocation(line: 1577, column: 59, scope: !6922)
!6931 = !DILocation(line: 1577, column: 8, scope: !6869)
!6932 = !DILocation(line: 1578, column: 5, scope: !6922)
!6933 = !DILocation(line: 1579, column: 3, scope: !6869)
!6934 = !DILocation(line: 1558, column: 19, scope: !6865)
!6935 = !DILocation(line: 1558, column: 23, scope: !6865)
!6936 = !DILocation(line: 1558, column: 17, scope: !6865)
!6937 = !DILocation(line: 1558, column: 36, scope: !6865)
!6938 = !DILocation(line: 1558, column: 42, scope: !6865)
!6939 = !DILocation(line: 1558, column: 34, scope: !6865)
!6940 = !DILocation(line: 1558, column: 3, scope: !6865)
!6941 = distinct !{!6941, !6867, !6942}
!6942 = !DILocation(line: 1579, column: 3, scope: !6866)
!6943 = !DILocation(line: 1585, column: 7, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6858, file: !3, line: 1585, column: 7)
!6945 = !DILocation(line: 1585, column: 7, scope: !6858)
!6946 = !DILocation(line: 1586, column: 31, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6944, file: !3, line: 1585, column: 17)
!6948 = !DILocation(line: 1586, column: 16, scope: !6947)
!6949 = !DILocation(line: 1586, column: 5, scope: !6947)
!6950 = !DILocation(line: 1586, column: 14, scope: !6947)
!6951 = !DILocation(line: 1588, column: 8, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6947, file: !3, line: 1588, column: 8)
!6953 = !DILocation(line: 1588, column: 8, scope: !6947)
!6954 = !DILocation(line: 1589, column: 25, scope: !6952)
!6955 = !DILocation(line: 1589, column: 29, scope: !6952)
!6956 = !DILocation(line: 1589, column: 33, scope: !6952)
!6957 = !DILocation(line: 1589, column: 5, scope: !6952)
!6958 = !DILocation(line: 1591, column: 8, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6947, file: !3, line: 1591, column: 8)
!6960 = !DILocation(line: 1591, column: 8, scope: !6947)
!6961 = !DILocation(line: 1592, column: 29, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 1591, column: 23)
!6963 = !DILocation(line: 1592, column: 28, scope: !6962)
!6964 = !DILocation(line: 1592, column: 39, scope: !6962)
!6965 = !DILocation(line: 1592, column: 5, scope: !6962)
!6966 = !DILocation(line: 1593, column: 4, scope: !6962)
!6967 = !DILocation(line: 1594, column: 3, scope: !6947)
!6968 = !DILocation(line: 1595, column: 2, scope: !6858)
!6969 = !DILocation(line: 1598, column: 7, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 1598, column: 7)
!6971 = distinct !DILexicalBlock(scope: !6854, file: !3, line: 1596, column: 7)
!6972 = !DILocation(line: 1598, column: 7, scope: !6971)
!6973 = !DILocation(line: 1599, column: 20, scope: !6970)
!6974 = !DILocation(line: 1599, column: 18, scope: !6970)
!6975 = !DILocation(line: 1599, column: 4, scope: !6970)
!6976 = !DILocation(line: 1601, column: 43, scope: !6970)
!6977 = !DILocation(line: 1601, column: 20, scope: !6970)
!6978 = !DILocation(line: 1601, column: 18, scope: !6970)
!6979 = !DILocation(line: 1608, column: 5, scope: !6574)
!6980 = !DILocation(line: 1609, column: 9, scope: !6574)
!6981 = !DILocation(line: 1610, column: 14, scope: !6574)
!6982 = !DILocation(line: 1612, column: 2, scope: !6574)
!6983 = !DILocation(line: 1612, column: 9, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 1612, column: 2)
!6985 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 1612, column: 2)
!6986 = !DILocation(line: 1612, column: 2, scope: !6985)
!6987 = !DILocalVariable(name: "mti", scope: !6988, file: !3, line: 1613, type: !5274)
!6988 = distinct !DILexicalBlock(scope: !6984, file: !3, line: 1612, column: 47)
!6989 = !DILocation(line: 1613, column: 21, scope: !6988)
!6990 = !DILocation(line: 1613, column: 48, scope: !6988)
!6991 = !DILocation(line: 1613, column: 52, scope: !6988)
!6992 = !DILocation(line: 1613, column: 27, scope: !6988)
!6993 = !DILocation(line: 1615, column: 15, scope: !6988)
!6994 = !DILocation(line: 1615, column: 3, scope: !6988)
!6995 = !DILocation(line: 1615, column: 7, scope: !6988)
!6996 = !DILocation(line: 1615, column: 13, scope: !6988)
!6997 = !DILocation(line: 1617, column: 27, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 1617, column: 7)
!6999 = !DILocation(line: 1617, column: 34, scope: !6998)
!7000 = !DILocation(line: 1617, column: 38, scope: !6998)
!7001 = !DILocation(line: 1617, column: 8, scope: !6998)
!7002 = !DILocation(line: 1617, column: 7, scope: !6988)
!7003 = !DILocation(line: 1617, column: 54, scope: !6998)
!7004 = !DILocation(line: 1618, column: 7, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 1618, column: 7)
!7006 = !DILocation(line: 1618, column: 12, scope: !7005)
!7007 = !DILocation(line: 1618, column: 17, scope: !7005)
!7008 = !DILocation(line: 1618, column: 49, scope: !7005)
!7009 = !DILocation(line: 1618, column: 53, scope: !7005)
!7010 = !DILocation(line: 1618, column: 7, scope: !6988)
!7011 = !DILocation(line: 1618, column: 64, scope: !7005)
!7012 = !DILocation(line: 1619, column: 8, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 1619, column: 7)
!7014 = !DILocation(line: 1619, column: 13, scope: !7013)
!7015 = !DILocation(line: 1619, column: 19, scope: !7013)
!7016 = !DILocation(line: 1619, column: 61, scope: !7013)
!7017 = !DILocation(line: 1619, column: 64, scope: !7013)
!7018 = !DILocation(line: 1619, column: 7, scope: !6988)
!7019 = !DILocation(line: 1620, column: 22, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 1619, column: 68)
!7021 = !DILocation(line: 1620, column: 4, scope: !7020)
!7022 = !DILocation(line: 1621, column: 4, scope: !7020)
!7023 = !DILocation(line: 1623, column: 7, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 1623, column: 7)
!7025 = !DILocation(line: 1623, column: 19, scope: !7024)
!7026 = !DILocation(line: 1624, column: 9, scope: !7024)
!7027 = !DILocation(line: 1624, column: 22, scope: !7024)
!7028 = !DILocation(line: 1624, column: 25, scope: !7024)
!7029 = !DILocation(line: 1624, column: 42, scope: !7024)
!7030 = !DILocation(line: 1624, column: 45, scope: !7024)
!7031 = !DILocation(line: 1623, column: 7, scope: !6988)
!7032 = !DILocalVariable(name: "unsupported", scope: !7033, file: !3, line: 1626, type: !327)
!7033 = distinct !DILexicalBlock(scope: !7024, file: !3, line: 1625, column: 3)
!7034 = !DILocation(line: 1626, column: 9, scope: !7033)
!7035 = !DILocation(line: 1628, column: 8, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 1628, column: 8)
!7037 = !DILocation(line: 1628, column: 12, scope: !7036)
!7038 = !DILocation(line: 1628, column: 17, scope: !7036)
!7039 = !DILocation(line: 1628, column: 43, scope: !7036)
!7040 = !DILocation(line: 1628, column: 71, scope: !7036)
!7041 = !DILocation(line: 1628, column: 76, scope: !7036)
!7042 = !DILocation(line: 1628, column: 46, scope: !7036)
!7043 = !DILocation(line: 1628, column: 86, scope: !7036)
!7044 = !DILocation(line: 1628, column: 8, scope: !7033)
!7045 = !DILocation(line: 1630, column: 10, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7047, file: !3, line: 1630, column: 9)
!7047 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 1628, column: 92)
!7048 = !DILocation(line: 1630, column: 9, scope: !7047)
!7049 = !DILocation(line: 1631, column: 6, scope: !7046)
!7050 = !DILocation(line: 1632, column: 4, scope: !7047)
!7051 = !DILocation(line: 1634, column: 8, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 1634, column: 8)
!7053 = !DILocation(line: 1634, column: 23, scope: !7052)
!7054 = !DILocation(line: 1634, column: 27, scope: !7052)
!7055 = !DILocation(line: 1634, column: 8, scope: !7033)
!7056 = !DILocation(line: 1635, column: 17, scope: !7052)
!7057 = !DILocation(line: 1635, column: 5, scope: !7052)
!7058 = !DILocation(line: 1637, column: 8, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 1637, column: 8)
!7060 = !DILocation(line: 1637, column: 15, scope: !7059)
!7061 = !DILocation(line: 1637, column: 29, scope: !7059)
!7062 = !DILocation(line: 1637, column: 37, scope: !7059)
!7063 = !DILocation(line: 1637, column: 43, scope: !7059)
!7064 = !DILocation(line: 1637, column: 8, scope: !7033)
!7065 = !DILocation(line: 1638, column: 21, scope: !7059)
!7066 = !DILocation(line: 1638, column: 26, scope: !7059)
!7067 = !DILocation(line: 1638, column: 31, scope: !7059)
!7068 = !DILocation(line: 1638, column: 17, scope: !7059)
!7069 = !DILocation(line: 1638, column: 5, scope: !7059)
!7070 = !DILocation(line: 1640, column: 19, scope: !7033)
!7071 = !DILocation(line: 1640, column: 16, scope: !7033)
!7072 = !DILocation(line: 1642, column: 8, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 1642, column: 8)
!7074 = !DILocation(line: 1642, column: 8, scope: !7033)
!7075 = !DILocation(line: 1643, column: 9, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7077, file: !3, line: 1643, column: 9)
!7077 = distinct !DILexicalBlock(scope: !7073, file: !3, line: 1642, column: 21)
!7078 = !DILocation(line: 1643, column: 9, scope: !7077)
!7079 = !DILocation(line: 1644, column: 24, scope: !7076)
!7080 = !DILocation(line: 1644, column: 6, scope: !7076)
!7081 = !DILocation(line: 1646, column: 24, scope: !7076)
!7082 = !DILocation(line: 1646, column: 6, scope: !7076)
!7083 = !DILocation(line: 1647, column: 5, scope: !7077)
!7084 = !DILocation(line: 1650, column: 23, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7073, file: !3, line: 1649, column: 9)
!7086 = !DILocation(line: 1650, column: 5, scope: !7085)
!7087 = !DILocation(line: 1652, column: 3, scope: !7033)
!7088 = !DILocation(line: 1653, column: 7, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 1653, column: 7)
!7090 = !DILocation(line: 1653, column: 19, scope: !7089)
!7091 = !DILocation(line: 1653, column: 48, scope: !7089)
!7092 = !DILocation(line: 1653, column: 23, scope: !7089)
!7093 = !DILocation(line: 1653, column: 7, scope: !6988)
!7094 = !DILocation(line: 1653, column: 53, scope: !7089)
!7095 = !DILocation(line: 1654, column: 7, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 1654, column: 7)
!7097 = !DILocation(line: 1654, column: 17, scope: !7096)
!7098 = !DILocation(line: 1654, column: 21, scope: !7096)
!7099 = !DILocation(line: 1654, column: 24, scope: !7096)
!7100 = !DILocation(line: 1654, column: 29, scope: !7096)
!7101 = !DILocation(line: 1654, column: 43, scope: !7096)
!7102 = !DILocation(line: 1654, column: 46, scope: !7096)
!7103 = !DILocation(line: 1654, column: 51, scope: !7096)
!7104 = !DILocation(line: 1654, column: 65, scope: !7096)
!7105 = !DILocation(line: 1654, column: 7, scope: !6988)
!7106 = !DILocation(line: 1654, column: 70, scope: !7096)
!7107 = !DILocation(line: 1657, column: 7, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 1657, column: 7)
!7109 = !DILocation(line: 1657, column: 12, scope: !7108)
!7110 = !DILocation(line: 1657, column: 7, scope: !6988)
!7111 = !DILocation(line: 1658, column: 11, scope: !7108)
!7112 = !DILocation(line: 1658, column: 16, scope: !7108)
!7113 = !DILocation(line: 1658, column: 33, scope: !7108)
!7114 = !DILocation(line: 1658, column: 37, scope: !7108)
!7115 = !DILocation(line: 1658, column: 9, scope: !7108)
!7116 = !DILocation(line: 1658, column: 4, scope: !7108)
!7117 = !DILocation(line: 1660, column: 9, scope: !7108)
!7118 = !DILocation(line: 1662, column: 7, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 1662, column: 7)
!7120 = !DILocation(line: 1662, column: 10, scope: !7119)
!7121 = !DILocation(line: 1662, column: 14, scope: !7119)
!7122 = !DILocation(line: 1662, column: 19, scope: !7119)
!7123 = !DILocation(line: 1662, column: 7, scope: !6988)
!7124 = !DILocation(line: 1663, column: 16, scope: !7119)
!7125 = !DILocation(line: 1663, column: 26, scope: !7119)
!7126 = !DILocation(line: 1663, column: 30, scope: !7119)
!7127 = !DILocation(line: 1663, column: 4, scope: !7119)
!7128 = !DILocation(line: 1670, column: 7, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 1670, column: 7)
!7130 = !DILocation(line: 1670, column: 12, scope: !7129)
!7131 = !DILocation(line: 1670, column: 17, scope: !7129)
!7132 = !DILocation(line: 1670, column: 7, scope: !6988)
!7133 = !DILocation(line: 1672, column: 9, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7135, file: !3, line: 1672, column: 8)
!7135 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 1670, column: 50)
!7136 = !DILocation(line: 1672, column: 8, scope: !7135)
!7137 = !DILocation(line: 1673, column: 9, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 1673, column: 9)
!7139 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 1672, column: 24)
!7140 = !DILocation(line: 1673, column: 9, scope: !7139)
!7141 = !DILocation(line: 1678, column: 17, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 1673, column: 13)
!7143 = !DILocation(line: 1678, column: 21, scope: !7142)
!7144 = !DILocation(line: 1678, column: 33, scope: !7142)
!7145 = !DILocation(line: 1678, column: 15, scope: !7142)
!7146 = !DILocation(line: 1680, column: 10, scope: !7142)
!7147 = !DILocation(line: 1680, column: 47, scope: !7142)
!7148 = !DILocation(line: 1680, column: 45, scope: !7142)
!7149 = !DILocation(line: 1679, column: 20, scope: !7142)
!7150 = !DILocation(line: 1681, column: 6, scope: !7142)
!7151 = !DILocation(line: 1681, column: 10, scope: !7142)
!7152 = !DILocation(line: 1681, column: 21, scope: !7142)
!7153 = !DILocation(line: 1681, column: 25, scope: !7142)
!7154 = !DILocation(line: 1682, column: 5, scope: !7142)
!7155 = !DILocation(line: 1684, column: 45, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 1683, column: 10)
!7157 = !DILocation(line: 1684, column: 22, scope: !7156)
!7158 = !DILocation(line: 1684, column: 20, scope: !7156)
!7159 = !DILocation(line: 1686, column: 4, scope: !7139)
!7160 = !DILocation(line: 1690, column: 8, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7135, file: !3, line: 1690, column: 8)
!7162 = !DILocation(line: 1690, column: 21, scope: !7161)
!7163 = !DILocation(line: 1690, column: 24, scope: !7161)
!7164 = !DILocation(line: 1690, column: 29, scope: !7161)
!7165 = !DILocation(line: 1690, column: 46, scope: !7161)
!7166 = !DILocation(line: 1690, column: 49, scope: !7161)
!7167 = !DILocation(line: 1690, column: 54, scope: !7161)
!7168 = !DILocation(line: 1690, column: 71, scope: !7161)
!7169 = !DILocation(line: 1690, column: 8, scope: !7135)
!7170 = !DILocation(line: 1692, column: 9, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7172, file: !3, line: 1692, column: 9)
!7172 = distinct !DILexicalBlock(scope: !7161, file: !3, line: 1690, column: 76)
!7173 = !DILocation(line: 1692, column: 12, scope: !7171)
!7174 = !DILocation(line: 1692, column: 15, scope: !7171)
!7175 = !DILocation(line: 1692, column: 19, scope: !7171)
!7176 = !DILocation(line: 1692, column: 24, scope: !7171)
!7177 = !DILocation(line: 1692, column: 9, scope: !7172)
!7178 = !DILocation(line: 1693, column: 29, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7171, file: !3, line: 1692, column: 41)
!7180 = !DILocation(line: 1693, column: 33, scope: !7179)
!7181 = !DILocation(line: 1693, column: 6, scope: !7179)
!7182 = !DILocation(line: 1694, column: 5, scope: !7179)
!7183 = !DILocation(line: 1695, column: 4, scope: !7172)
!7184 = !DILocation(line: 1697, column: 24, scope: !7135)
!7185 = !DILocation(line: 1697, column: 28, scope: !7135)
!7186 = !DILocation(line: 1697, column: 32, scope: !7135)
!7187 = !DILocation(line: 1697, column: 36, scope: !7135)
!7188 = !DILocation(line: 1697, column: 51, scope: !7135)
!7189 = !DILocation(line: 1697, column: 61, scope: !7135)
!7190 = !DILocation(line: 1697, column: 4, scope: !7135)
!7191 = !DILocation(line: 1698, column: 3, scope: !7135)
!7192 = !DILocalVariable(name: "ndm", scope: !7193, file: !3, line: 1700, type: !2108)
!7193 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 1699, column: 8)
!7194 = !DILocation(line: 1700, column: 17, scope: !7193)
!7195 = !DILocation(line: 1703, column: 8, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 1703, column: 8)
!7197 = !DILocation(line: 1703, column: 14, scope: !7196)
!7198 = !DILocation(line: 1703, column: 8, scope: !7193)
!7199 = !DILocation(line: 1704, column: 16, scope: !7196)
!7200 = !DILocation(line: 1704, column: 22, scope: !7196)
!7201 = !DILocation(line: 1704, column: 28, scope: !7196)
!7202 = !DILocation(line: 1704, column: 14, scope: !7196)
!7203 = !DILocation(line: 1704, column: 5, scope: !7196)
!7204 = !DILocation(line: 1706, column: 16, scope: !7196)
!7205 = !DILocation(line: 1706, column: 14, scope: !7196)
!7206 = !DILocation(line: 1709, column: 8, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 1709, column: 8)
!7208 = !DILocation(line: 1709, column: 8, scope: !7193)
!7209 = !DILocation(line: 1710, column: 9, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 1710, column: 9)
!7211 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 1709, column: 12)
!7212 = !DILocation(line: 1710, column: 9, scope: !7211)
!7213 = !DILocalVariable(name: "tdm", scope: !7214, file: !3, line: 1711, type: !2108)
!7214 = distinct !DILexicalBlock(scope: !7210, file: !3, line: 1710, column: 24)
!7215 = !DILocation(line: 1711, column: 19, scope: !7214)
!7216 = !DILocation(line: 1711, column: 35, scope: !7214)
!7217 = !DILocation(line: 1711, column: 25, scope: !7214)
!7218 = !DILocation(line: 1712, column: 6, scope: !7214)
!7219 = !DILocation(line: 1712, column: 10, scope: !7214)
!7220 = !DILocation(line: 1712, column: 18, scope: !7214)
!7221 = !DILocation(line: 1713, column: 11, scope: !7214)
!7222 = !DILocation(line: 1713, column: 9, scope: !7214)
!7223 = !DILocation(line: 1715, column: 29, scope: !7214)
!7224 = !DILocation(line: 1715, column: 33, scope: !7214)
!7225 = !DILocation(line: 1715, column: 6, scope: !7214)
!7226 = !DILocation(line: 1716, column: 5, scope: !7214)
!7227 = !DILocation(line: 1717, column: 4, scope: !7211)
!7228 = !DILocation(line: 1719, column: 25, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 1718, column: 9)
!7230 = !DILocation(line: 1719, column: 10, scope: !7229)
!7231 = !DILocation(line: 1719, column: 8, scope: !7229)
!7232 = !DILocation(line: 1722, column: 9, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7229, file: !3, line: 1722, column: 9)
!7234 = !DILocation(line: 1722, column: 9, scope: !7229)
!7235 = !DILocation(line: 1723, column: 26, scope: !7233)
!7236 = !DILocation(line: 1723, column: 30, scope: !7233)
!7237 = !DILocation(line: 1723, column: 34, scope: !7233)
!7238 = !DILocation(line: 1723, column: 6, scope: !7233)
!7239 = !DILocation(line: 1725, column: 9, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7229, file: !3, line: 1725, column: 9)
!7241 = !DILocation(line: 1725, column: 9, scope: !7229)
!7242 = !DILocation(line: 1726, column: 29, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 1725, column: 24)
!7244 = !DILocation(line: 1726, column: 33, scope: !7243)
!7245 = !DILocation(line: 1726, column: 6, scope: !7243)
!7246 = !DILocation(line: 1727, column: 5, scope: !7243)
!7247 = !DILocation(line: 1729, column: 9, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7229, file: !3, line: 1729, column: 9)
!7249 = !DILocation(line: 1729, column: 9, scope: !7229)
!7250 = !DILocation(line: 1730, column: 28, scope: !7248)
!7251 = !DILocation(line: 1730, column: 32, scope: !7248)
!7252 = !DILocation(line: 1730, column: 36, scope: !7248)
!7253 = !DILocation(line: 1730, column: 6, scope: !7248)
!7254 = !DILocation(line: 1739, column: 9, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7229, file: !3, line: 1739, column: 9)
!7256 = !DILocation(line: 1739, column: 21, scope: !7255)
!7257 = !DILocation(line: 1739, column: 25, scope: !7255)
!7258 = !DILocation(line: 1739, column: 34, scope: !7255)
!7259 = !DILocation(line: 1739, column: 9, scope: !7229)
!7260 = !DILocation(line: 1741, column: 24, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7255, file: !3, line: 1739, column: 56)
!7262 = !DILocation(line: 1741, column: 6, scope: !7261)
!7263 = !DILocation(line: 1742, column: 24, scope: !7261)
!7264 = !DILocation(line: 1742, column: 6, scope: !7261)
!7265 = !DILocation(line: 1743, column: 24, scope: !7261)
!7266 = !DILocation(line: 1743, column: 6, scope: !7261)
!7267 = !DILocation(line: 1752, column: 43, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7269, file: !3, line: 1752, column: 7)
!7269 = distinct !DILexicalBlock(scope: !7261, file: !3, line: 1748, column: 6)
!7270 = !DILocation(line: 1752, column: 20, scope: !7268)
!7271 = !DILocation(line: 1752, column: 62, scope: !7268)
!7272 = !DILocation(line: 1752, column: 66, scope: !7268)
!7273 = !DILocation(line: 1752, column: 9, scope: !7268)
!7274 = !DILocation(line: 1756, column: 43, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7269, file: !3, line: 1756, column: 7)
!7276 = !DILocation(line: 1756, column: 20, scope: !7275)
!7277 = !DILocation(line: 1756, column: 62, scope: !7275)
!7278 = !DILocation(line: 1756, column: 66, scope: !7275)
!7279 = !DILocation(line: 1756, column: 9, scope: !7275)
!7280 = !DILocation(line: 1760, column: 43, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7269, file: !3, line: 1760, column: 7)
!7282 = !DILocation(line: 1760, column: 20, scope: !7281)
!7283 = !DILocation(line: 1760, column: 62, scope: !7281)
!7284 = !DILocation(line: 1760, column: 66, scope: !7281)
!7285 = !DILocation(line: 1760, column: 9, scope: !7281)
!7286 = !DILocation(line: 1762, column: 5, scope: !7261)
!7287 = !DILocation(line: 1767, column: 11, scope: !7193)
!7288 = !DILocation(line: 1767, column: 17, scope: !7193)
!7289 = !DILocation(line: 1767, column: 9, scope: !7193)
!7290 = !DILocation(line: 1770, column: 12, scope: !7193)
!7291 = !DILocation(line: 1770, column: 9, scope: !7193)
!7292 = !DILocation(line: 1771, column: 21, scope: !7193)
!7293 = !DILocation(line: 1771, column: 25, scope: !7193)
!7294 = !DILocation(line: 1771, column: 33, scope: !7193)
!7295 = !DILocation(line: 1771, column: 32, scope: !7193)
!7296 = !DILocation(line: 1771, column: 30, scope: !7193)
!7297 = !DILocation(line: 1771, column: 4, scope: !7193)
!7298 = !DILocation(line: 1774, column: 8, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 1774, column: 8)
!7300 = !DILocation(line: 1774, column: 13, scope: !7299)
!7301 = !DILocation(line: 1774, column: 8, scope: !7193)
!7302 = !DILocation(line: 1775, column: 17, scope: !7299)
!7303 = !DILocation(line: 1775, column: 27, scope: !7299)
!7304 = !DILocation(line: 1775, column: 31, scope: !7299)
!7305 = !DILocation(line: 1775, column: 5, scope: !7299)
!7306 = !DILocation(line: 1778, column: 9, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 1778, column: 8)
!7308 = !DILocation(line: 1778, column: 15, scope: !7307)
!7309 = !DILocation(line: 1778, column: 21, scope: !7307)
!7310 = !DILocation(line: 1778, column: 8, scope: !7193)
!7311 = !DILocation(line: 1779, column: 32, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 1779, column: 9)
!7313 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 1778, column: 48)
!7314 = !DILocation(line: 1779, column: 36, scope: !7312)
!7315 = !DILocation(line: 1779, column: 10, scope: !7312)
!7316 = !DILocation(line: 1779, column: 9, scope: !7313)
!7317 = !DILocation(line: 1780, column: 24, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 1779, column: 67)
!7319 = !DILocation(line: 1780, column: 6, scope: !7318)
!7320 = !DILocation(line: 1781, column: 24, scope: !7318)
!7321 = !DILocation(line: 1781, column: 6, scope: !7318)
!7322 = !DILocation(line: 1782, column: 5, scope: !7318)
!7323 = !DILocation(line: 1783, column: 4, scope: !7313)
!7324 = !DILocation(line: 1785, column: 32, scope: !7193)
!7325 = !DILocation(line: 1785, column: 36, scope: !7193)
!7326 = !DILocation(line: 1785, column: 40, scope: !7193)
!7327 = !DILocation(line: 1785, column: 44, scope: !7193)
!7328 = !DILocation(line: 1785, column: 10, scope: !7193)
!7329 = !DILocation(line: 1785, column: 8, scope: !7193)
!7330 = !DILocation(line: 1788, column: 8, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 1788, column: 8)
!7332 = !DILocation(line: 1788, column: 8, scope: !7193)
!7333 = !DILocation(line: 1790, column: 9, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 1790, column: 9)
!7335 = distinct !DILexicalBlock(scope: !7331, file: !3, line: 1788, column: 13)
!7336 = !DILocation(line: 1790, column: 12, scope: !7334)
!7337 = !DILocation(line: 1790, column: 15, scope: !7334)
!7338 = !DILocation(line: 1790, column: 21, scope: !7334)
!7339 = !DILocation(line: 1790, column: 18, scope: !7334)
!7340 = !DILocation(line: 1790, column: 9, scope: !7335)
!7341 = !DILocation(line: 1790, column: 26, scope: !7334)
!7342 = !DILocation(line: 1790, column: 30, scope: !7334)
!7343 = !DILocation(line: 1790, column: 38, scope: !7334)
!7344 = !DILocation(line: 1792, column: 10, scope: !7335)
!7345 = !DILocation(line: 1792, column: 8, scope: !7335)
!7346 = !DILocation(line: 1794, column: 9, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 1794, column: 9)
!7348 = !DILocation(line: 1794, column: 9, scope: !7335)
!7349 = !DILocation(line: 1795, column: 10, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7351, file: !3, line: 1795, column: 10)
!7351 = distinct !DILexicalBlock(scope: !7347, file: !3, line: 1794, column: 24)
!7352 = !DILocation(line: 1795, column: 27, scope: !7350)
!7353 = !DILocation(line: 1795, column: 24, scope: !7350)
!7354 = !DILocation(line: 1795, column: 10, scope: !7351)
!7355 = !DILocation(line: 1796, column: 7, scope: !7350)
!7356 = !DILocation(line: 1796, column: 17, scope: !7350)
!7357 = !DILocation(line: 1798, column: 20, scope: !7351)
!7358 = !DILocation(line: 1799, column: 5, scope: !7351)
!7359 = !DILocation(line: 1800, column: 4, scope: !7335)
!7360 = !DILocation(line: 1803, column: 8, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 1803, column: 8)
!7362 = !DILocation(line: 1803, column: 17, scope: !7361)
!7363 = !DILocation(line: 1803, column: 8, scope: !7193)
!7364 = !DILocation(line: 1804, column: 10, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7366, file: !3, line: 1804, column: 9)
!7366 = distinct !DILexicalBlock(scope: !7361, file: !3, line: 1803, column: 33)
!7367 = !DILocation(line: 1804, column: 9, scope: !7366)
!7368 = !DILocation(line: 1805, column: 30, scope: !7365)
!7369 = !DILocation(line: 1805, column: 34, scope: !7365)
!7370 = !DILocation(line: 1805, column: 15, scope: !7365)
!7371 = !DILocation(line: 1805, column: 13, scope: !7365)
!7372 = !DILocation(line: 1805, column: 6, scope: !7365)
!7373 = !DILocation(line: 1807, column: 14, scope: !7366)
!7374 = !DILocation(line: 1808, column: 22, scope: !7366)
!7375 = !DILocation(line: 1808, column: 30, scope: !7366)
!7376 = !DILocation(line: 1808, column: 39, scope: !7366)
!7377 = !DILocation(line: 1809, column: 23, scope: !7366)
!7378 = !DILocation(line: 1809, column: 28, scope: !7366)
!7379 = !DILocation(line: 1810, column: 23, scope: !7366)
!7380 = !DILocation(line: 1810, column: 28, scope: !7366)
!7381 = !DILocation(line: 1810, column: 45, scope: !7366)
!7382 = !DILocation(line: 1810, column: 49, scope: !7366)
!7383 = !DILocation(line: 1808, column: 59, scope: !7366)
!7384 = !DILocation(line: 1808, column: 5, scope: !7366)
!7385 = !DILocation(line: 1812, column: 33, scope: !7366)
!7386 = !DILocation(line: 1812, column: 37, scope: !7366)
!7387 = !DILocation(line: 1812, column: 41, scope: !7366)
!7388 = !DILocation(line: 1812, column: 50, scope: !7366)
!7389 = !DILocation(line: 1812, column: 60, scope: !7366)
!7390 = !DILocation(line: 1812, column: 83, scope: !7366)
!7391 = !DILocation(line: 1812, column: 11, scope: !7366)
!7392 = !DILocation(line: 1812, column: 9, scope: !7366)
!7393 = !DILocation(line: 1815, column: 9, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7366, file: !3, line: 1815, column: 9)
!7395 = !DILocation(line: 1815, column: 9, scope: !7366)
!7396 = !DILocation(line: 1817, column: 10, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7398, file: !3, line: 1817, column: 10)
!7398 = distinct !DILexicalBlock(scope: !7394, file: !3, line: 1815, column: 14)
!7399 = !DILocation(line: 1817, column: 17, scope: !7397)
!7400 = !DILocation(line: 1817, column: 20, scope: !7397)
!7401 = !DILocation(line: 1817, column: 30, scope: !7397)
!7402 = !DILocation(line: 1817, column: 27, scope: !7397)
!7403 = !DILocation(line: 1817, column: 10, scope: !7398)
!7404 = !DILocation(line: 1817, column: 35, scope: !7397)
!7405 = !DILocation(line: 1817, column: 43, scope: !7397)
!7406 = !DILocation(line: 1817, column: 51, scope: !7397)
!7407 = !DILocation(line: 1818, column: 15, scope: !7398)
!7408 = !DILocation(line: 1818, column: 13, scope: !7398)
!7409 = !DILocation(line: 1819, column: 5, scope: !7398)
!7410 = !DILocation(line: 1820, column: 4, scope: !7366)
!7411 = !DILocation(line: 1823, column: 8, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 1823, column: 8)
!7413 = !DILocation(line: 1823, column: 17, scope: !7412)
!7414 = !DILocation(line: 1823, column: 8, scope: !7193)
!7415 = !DILocation(line: 1824, column: 10, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7417, file: !3, line: 1824, column: 9)
!7417 = distinct !DILexicalBlock(scope: !7412, file: !3, line: 1823, column: 39)
!7418 = !DILocation(line: 1824, column: 9, scope: !7417)
!7419 = !DILocation(line: 1825, column: 35, scope: !7416)
!7420 = !DILocation(line: 1825, column: 39, scope: !7416)
!7421 = !DILocation(line: 1825, column: 20, scope: !7416)
!7422 = !DILocation(line: 1825, column: 18, scope: !7416)
!7423 = !DILocation(line: 1825, column: 6, scope: !7416)
!7424 = !DILocation(line: 1827, column: 14, scope: !7417)
!7425 = !DILocation(line: 1828, column: 22, scope: !7417)
!7426 = !DILocation(line: 1828, column: 35, scope: !7417)
!7427 = !DILocation(line: 1828, column: 44, scope: !7417)
!7428 = !DILocation(line: 1828, column: 5, scope: !7417)
!7429 = !DILocation(line: 1830, column: 33, scope: !7417)
!7430 = !DILocation(line: 1830, column: 37, scope: !7417)
!7431 = !DILocation(line: 1830, column: 41, scope: !7417)
!7432 = !DILocation(line: 1830, column: 55, scope: !7417)
!7433 = !DILocation(line: 1830, column: 65, scope: !7417)
!7434 = !DILocation(line: 1830, column: 88, scope: !7417)
!7435 = !DILocation(line: 1830, column: 11, scope: !7417)
!7436 = !DILocation(line: 1830, column: 9, scope: !7417)
!7437 = !DILocation(line: 1833, column: 9, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7417, file: !3, line: 1833, column: 9)
!7439 = !DILocation(line: 1833, column: 9, scope: !7417)
!7440 = !DILocation(line: 1835, column: 10, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7442, file: !3, line: 1835, column: 10)
!7442 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 1833, column: 14)
!7443 = !DILocation(line: 1835, column: 22, scope: !7441)
!7444 = !DILocation(line: 1835, column: 25, scope: !7441)
!7445 = !DILocation(line: 1835, column: 40, scope: !7441)
!7446 = !DILocation(line: 1835, column: 37, scope: !7441)
!7447 = !DILocation(line: 1835, column: 10, scope: !7442)
!7448 = !DILocation(line: 1835, column: 45, scope: !7441)
!7449 = !DILocation(line: 1835, column: 58, scope: !7441)
!7450 = !DILocation(line: 1835, column: 66, scope: !7441)
!7451 = !DILocation(line: 1836, column: 20, scope: !7442)
!7452 = !DILocation(line: 1836, column: 18, scope: !7442)
!7453 = !DILocation(line: 1837, column: 5, scope: !7442)
!7454 = !DILocation(line: 1838, column: 4, scope: !7417)
!7455 = !DILocation(line: 1842, column: 8, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 1842, column: 8)
!7457 = !DILocation(line: 1842, column: 12, scope: !7456)
!7458 = !DILocation(line: 1842, column: 17, scope: !7456)
!7459 = !DILocation(line: 1842, column: 8, scope: !7193)
!7460 = !DILocation(line: 1843, column: 17, scope: !7456)
!7461 = !DILocation(line: 1843, column: 5, scope: !7456)
!7462 = !DILocation(line: 1845, column: 14, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !7456, file: !3, line: 1845, column: 13)
!7464 = !DILocation(line: 1845, column: 20, scope: !7463)
!7465 = !DILocation(line: 1845, column: 17, scope: !7463)
!7466 = !DILocation(line: 1845, column: 31, scope: !7463)
!7467 = !DILocation(line: 1845, column: 35, scope: !7463)
!7468 = !DILocation(line: 1845, column: 34, scope: !7463)
!7469 = !DILocation(line: 1845, column: 13, scope: !7456)
!7470 = !DILocation(line: 1846, column: 27, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7463, file: !3, line: 1845, column: 50)
!7472 = !DILocation(line: 1846, column: 31, scope: !7471)
!7473 = !DILocation(line: 1846, column: 35, scope: !7471)
!7474 = !DILocation(line: 1846, column: 5, scope: !7471)
!7475 = !DILocation(line: 1847, column: 17, scope: !7471)
!7476 = !DILocation(line: 1848, column: 4, scope: !7471)
!7477 = !DILocation(line: 1851, column: 19, scope: !6988)
!7478 = !DILocation(line: 1851, column: 24, scope: !6988)
!7479 = !DILocation(line: 1851, column: 29, scope: !6988)
!7480 = !DILocation(line: 1851, column: 18, scope: !6988)
!7481 = !DILocation(line: 1851, column: 16, scope: !6988)
!7482 = !DILocation(line: 1854, column: 8, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 1854, column: 7)
!7484 = !DILocation(line: 1854, column: 14, scope: !7483)
!7485 = !DILocation(line: 1854, column: 20, scope: !7483)
!7486 = !DILocation(line: 1854, column: 39, scope: !7483)
!7487 = !DILocation(line: 1854, column: 43, scope: !7483)
!7488 = !DILocation(line: 1854, column: 54, scope: !7483)
!7489 = !DILocation(line: 1854, column: 24, scope: !7483)
!7490 = !DILocation(line: 1854, column: 61, scope: !7483)
!7491 = !DILocation(line: 1854, column: 58, scope: !7483)
!7492 = !DILocation(line: 1854, column: 7, scope: !6988)
!7493 = !DILocation(line: 1855, column: 4, scope: !7483)
!7494 = !DILocation(line: 1857, column: 7, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 1857, column: 7)
!7496 = !DILocation(line: 1857, column: 19, scope: !7495)
!7497 = !DILocation(line: 1857, column: 22, scope: !7495)
!7498 = !DILocation(line: 1857, column: 26, scope: !7495)
!7499 = !DILocation(line: 1857, column: 31, scope: !7495)
!7500 = !DILocation(line: 1857, column: 7, scope: !6988)
!7501 = !DILocation(line: 1858, column: 21, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 1857, column: 58)
!7503 = !DILocation(line: 1859, column: 3, scope: !7502)
!7504 = !DILocation(line: 1860, column: 2, scope: !6988)
!7505 = !DILocation(line: 1612, column: 18, scope: !6984)
!7506 = !DILocation(line: 1612, column: 22, scope: !6984)
!7507 = !DILocation(line: 1612, column: 16, scope: !6984)
!7508 = !DILocation(line: 1612, column: 35, scope: !6984)
!7509 = !DILocation(line: 1612, column: 41, scope: !6984)
!7510 = !DILocation(line: 1612, column: 33, scope: !6984)
!7511 = !DILocation(line: 1612, column: 2, scope: !6984)
!7512 = distinct !{!7512, !6986, !7513}
!7513 = !DILocation(line: 1860, column: 2, scope: !6985)
!7514 = !DILocation(line: 1862, column: 12, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 1862, column: 2)
!7516 = !DILocation(line: 1862, column: 10, scope: !7515)
!7517 = !DILocation(line: 1862, column: 7, scope: !7515)
!7518 = !DILocation(line: 1862, column: 21, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7515, file: !3, line: 1862, column: 2)
!7520 = !DILocation(line: 1862, column: 2, scope: !7515)
!7521 = !DILocation(line: 1863, column: 30, scope: !7519)
!7522 = !DILocation(line: 1863, column: 3, scope: !7519)
!7523 = !DILocation(line: 1862, column: 30, scope: !7519)
!7524 = !DILocation(line: 1862, column: 34, scope: !7519)
!7525 = !DILocation(line: 1862, column: 28, scope: !7519)
!7526 = !DILocation(line: 1862, column: 2, scope: !7519)
!7527 = distinct !{!7527, !7520, !7528}
!7528 = !DILocation(line: 1863, column: 32, scope: !7515)
!7529 = !DILocation(line: 1869, column: 6, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 1869, column: 6)
!7531 = !DILocation(line: 1869, column: 9, scope: !7530)
!7532 = !DILocation(line: 1869, column: 12, scope: !7530)
!7533 = !DILocation(line: 1869, column: 6, scope: !6574)
!7534 = !DILocation(line: 1870, column: 23, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7530, file: !3, line: 1869, column: 27)
!7536 = !DILocation(line: 1870, column: 13, scope: !7535)
!7537 = !DILocation(line: 1870, column: 11, scope: !7535)
!7538 = !DILocation(line: 1872, column: 3, scope: !7535)
!7539 = !DILocation(line: 1872, column: 7, scope: !7535)
!7540 = !DILocation(line: 1872, column: 15, scope: !7535)
!7541 = !DILocation(line: 1874, column: 26, scope: !7535)
!7542 = !DILocation(line: 1874, column: 35, scope: !7535)
!7543 = !DILocation(line: 1874, column: 3, scope: !7535)
!7544 = !DILocation(line: 1881, column: 2, scope: !7535)
!7545 = !DILocation(line: 1882, column: 11, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7530, file: !3, line: 1882, column: 11)
!7547 = !DILocation(line: 1882, column: 11, scope: !7530)
!7548 = !DILocation(line: 1883, column: 13, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 1882, column: 15)
!7550 = !DILocation(line: 1883, column: 11, scope: !7549)
!7551 = !DILocation(line: 1890, column: 2, scope: !7549)
!7552 = !DILocation(line: 1892, column: 28, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 1891, column: 7)
!7554 = !DILocation(line: 1892, column: 13, scope: !7553)
!7555 = !DILocation(line: 1892, column: 11, scope: !7553)
!7556 = !DILocation(line: 1894, column: 7, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 1894, column: 7)
!7558 = !DILocation(line: 1894, column: 7, scope: !7553)
!7559 = !DILocation(line: 1895, column: 24, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7557, file: !3, line: 1894, column: 30)
!7561 = !DILocation(line: 1895, column: 33, scope: !7560)
!7562 = !DILocation(line: 1895, column: 37, scope: !7560)
!7563 = !DILocation(line: 1895, column: 4, scope: !7560)
!7564 = !DILocation(line: 1896, column: 3, scope: !7560)
!7565 = !DILocation(line: 1898, column: 7, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 1898, column: 7)
!7567 = !DILocation(line: 1898, column: 7, scope: !7553)
!7568 = !DILocation(line: 1899, column: 27, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7566, file: !3, line: 1898, column: 22)
!7570 = !DILocation(line: 1899, column: 36, scope: !7569)
!7571 = !DILocation(line: 1899, column: 4, scope: !7569)
!7572 = !DILocation(line: 1900, column: 3, scope: !7569)
!7573 = !DILocation(line: 1903, column: 7, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 1903, column: 7)
!7575 = !DILocation(line: 1903, column: 7, scope: !7553)
!7576 = !DILocation(line: 1904, column: 26, scope: !7574)
!7577 = !DILocation(line: 1904, column: 30, scope: !7574)
!7578 = !DILocation(line: 1904, column: 39, scope: !7574)
!7579 = !DILocation(line: 1904, column: 4, scope: !7574)
!7580 = !DILocation(line: 1908, column: 6, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 1908, column: 6)
!7582 = !DILocation(line: 1908, column: 15, scope: !7581)
!7583 = !DILocation(line: 1908, column: 6, scope: !6574)
!7584 = !DILocation(line: 1909, column: 15, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 1908, column: 31)
!7586 = !DILocation(line: 1909, column: 25, scope: !7585)
!7587 = !DILocation(line: 1909, column: 34, scope: !7585)
!7588 = !DILocation(line: 1909, column: 3, scope: !7585)
!7589 = !DILocation(line: 1911, column: 7, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 1911, column: 7)
!7591 = !DILocation(line: 1911, column: 16, scope: !7590)
!7592 = !DILocation(line: 1911, column: 20, scope: !7590)
!7593 = !DILocation(line: 1911, column: 19, scope: !7590)
!7594 = !DILocation(line: 1911, column: 7, scope: !7585)
!7595 = !DILocation(line: 1912, column: 16, scope: !7590)
!7596 = !DILocation(line: 1912, column: 27, scope: !7590)
!7597 = !DILocation(line: 1912, column: 26, scope: !7590)
!7598 = !DILocation(line: 1912, column: 4, scope: !7590)
!7599 = !DILocation(line: 1913, column: 2, scope: !7585)
!7600 = !DILocation(line: 1915, column: 6, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 1915, column: 6)
!7602 = !DILocation(line: 1915, column: 6, scope: !6574)
!7603 = !DILocation(line: 1917, column: 24, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7601, file: !3, line: 1915, column: 23)
!7605 = !DILocation(line: 1917, column: 33, scope: !7604)
!7606 = !DILocation(line: 1917, column: 3, scope: !7604)
!7607 = !DILocation(line: 1918, column: 2, scope: !7604)
!7608 = !DILocation(line: 1921, column: 22, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 1920, column: 2)
!7610 = !DILocation(line: 1921, column: 3, scope: !7609)
!7611 = !DILocation(line: 1932, column: 8, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 1932, column: 7)
!7613 = !DILocation(line: 1932, column: 7, scope: !7609)
!7614 = !DILocation(line: 1933, column: 30, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7612, file: !3, line: 1932, column: 25)
!7616 = !DILocation(line: 1933, column: 4, scope: !7615)
!7617 = !DILocation(line: 1934, column: 3, scope: !7615)
!7618 = !DILocation(line: 1949, column: 13, scope: !6574)
!7619 = !DILocation(line: 1949, column: 3, scope: !6574)
!7620 = !DILocation(line: 1949, column: 11, scope: !6574)
!7621 = !DILocation(line: 1951, column: 6, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 1951, column: 6)
!7623 = !DILocation(line: 1951, column: 6, scope: !6574)
!7624 = !DILocation(line: 1952, column: 3, scope: !7622)
!7625 = !DILocation(line: 1952, column: 11, scope: !7622)
!7626 = !DILocation(line: 1952, column: 19, scope: !7622)
!7627 = !DILocation(line: 1953, column: 6, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 1953, column: 6)
!7629 = !DILocation(line: 1953, column: 6, scope: !6574)
!7630 = !DILocation(line: 1954, column: 3, scope: !7628)
!7631 = !DILocation(line: 1954, column: 16, scope: !7628)
!7632 = !DILocation(line: 1954, column: 24, scope: !7628)
!7633 = !DILocation(line: 1956, column: 6, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 1956, column: 6)
!7635 = !DILocation(line: 1956, column: 20, scope: !7634)
!7636 = !DILocation(line: 1956, column: 23, scope: !7634)
!7637 = !DILocation(line: 1956, column: 40, scope: !7634)
!7638 = !DILocation(line: 1956, column: 37, scope: !7634)
!7639 = !DILocation(line: 1956, column: 6, scope: !6574)
!7640 = !DILocation(line: 1957, column: 3, scope: !7634)
!7641 = !DILocation(line: 1957, column: 13, scope: !7634)
!7642 = !DILocation(line: 1959, column: 32, scope: !6574)
!7643 = !DILocation(line: 1959, column: 20, scope: !6574)
!7644 = !DILocation(line: 1959, column: 2, scope: !6574)
!7645 = !DILocation(line: 1960, column: 1, scope: !6574)
!7646 = distinct !DISubprogram(name: "mesh_create_derived_index_render", scope: !3, file: !3, line: 2400, type: !7647, scopeLine: 2401, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!7647 = !DISubroutineType(types: !7648)
!7648 = !{!2108, !5258, !4007, !2768, !156}
!7649 = !DILocalVariable(name: "scene", arg: 1, scope: !7646, file: !3, line: 2400, type: !5258)
!7650 = !DILocation(line: 2400, column: 54, scope: !7646)
!7651 = !DILocalVariable(name: "ob", arg: 2, scope: !7646, file: !3, line: 2400, type: !4007)
!7652 = !DILocation(line: 2400, column: 69, scope: !7646)
!7653 = !DILocalVariable(name: "dataMask", arg: 3, scope: !7646, file: !3, line: 2400, type: !2768)
!7654 = !DILocation(line: 2400, column: 88, scope: !7646)
!7655 = !DILocalVariable(name: "index", arg: 4, scope: !7646, file: !3, line: 2400, type: !156)
!7656 = !DILocation(line: 2400, column: 102, scope: !7646)
!7657 = !DILocalVariable(name: "final", scope: !7646, file: !3, line: 2402, type: !2108)
!7658 = !DILocation(line: 2402, column: 15, scope: !7646)
!7659 = !DILocation(line: 2404, column: 22, scope: !7646)
!7660 = !DILocation(line: 2404, column: 29, scope: !7646)
!7661 = !DILocation(line: 2404, column: 62, scope: !7646)
!7662 = !DILocation(line: 2404, column: 72, scope: !7646)
!7663 = !DILocation(line: 2404, column: 2, scope: !7646)
!7664 = !DILocation(line: 2406, column: 9, scope: !7646)
!7665 = !DILocation(line: 2406, column: 2, scope: !7646)
!7666 = distinct !DISubprogram(name: "mesh_create_derived_view", scope: !3, file: !3, line: 2409, type: !6494, scopeLine: 2410, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!7667 = !DILocalVariable(name: "scene", arg: 1, scope: !7666, file: !3, line: 2409, type: !5258)
!7668 = !DILocation(line: 2409, column: 46, scope: !7666)
!7669 = !DILocalVariable(name: "ob", arg: 2, scope: !7666, file: !3, line: 2409, type: !4007)
!7670 = !DILocation(line: 2409, column: 61, scope: !7666)
!7671 = !DILocalVariable(name: "dataMask", arg: 3, scope: !7666, file: !3, line: 2409, type: !2768)
!7672 = !DILocation(line: 2409, column: 80, scope: !7666)
!7673 = !DILocalVariable(name: "final", scope: !7666, file: !3, line: 2411, type: !2108)
!7674 = !DILocation(line: 2411, column: 15, scope: !7666)
!7675 = !DILocation(line: 2417, column: 2, scope: !7666)
!7676 = !DILocation(line: 2417, column: 6, scope: !7666)
!7677 = !DILocation(line: 2417, column: 16, scope: !7666)
!7678 = !DILocation(line: 2419, column: 22, scope: !7666)
!7679 = !DILocation(line: 2419, column: 29, scope: !7666)
!7680 = !DILocation(line: 2419, column: 62, scope: !7666)
!7681 = !DILocation(line: 2419, column: 2, scope: !7666)
!7682 = !DILocation(line: 2421, column: 2, scope: !7666)
!7683 = !DILocation(line: 2421, column: 6, scope: !7666)
!7684 = !DILocation(line: 2421, column: 16, scope: !7666)
!7685 = !DILocation(line: 2423, column: 9, scope: !7666)
!7686 = !DILocation(line: 2423, column: 2, scope: !7666)
!7687 = distinct !DISubprogram(name: "mesh_create_derived_no_deform", scope: !3, file: !3, line: 2426, type: !7688, scopeLine: 2428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!7688 = !DISubroutineType(types: !7689)
!7689 = !{!2108, !5258, !4007, !1660, !2768}
!7690 = !DILocalVariable(name: "scene", arg: 1, scope: !7687, file: !3, line: 2426, type: !5258)
!7691 = !DILocation(line: 2426, column: 51, scope: !7687)
!7692 = !DILocalVariable(name: "ob", arg: 2, scope: !7687, file: !3, line: 2426, type: !4007)
!7693 = !DILocation(line: 2426, column: 66, scope: !7687)
!7694 = !DILocalVariable(name: "vertCos", arg: 3, scope: !7687, file: !3, line: 2426, type: !1660)
!7695 = !DILocation(line: 2426, column: 78, scope: !7687)
!7696 = !DILocalVariable(name: "dataMask", arg: 4, scope: !7687, file: !3, line: 2427, type: !2768)
!7697 = !DILocation(line: 2427, column: 59, scope: !7687)
!7698 = !DILocalVariable(name: "final", scope: !7687, file: !3, line: 2429, type: !2108)
!7699 = !DILocation(line: 2429, column: 15, scope: !7687)
!7700 = !DILocation(line: 2431, column: 22, scope: !7687)
!7701 = !DILocation(line: 2431, column: 29, scope: !7687)
!7702 = !DILocation(line: 2431, column: 33, scope: !7687)
!7703 = !DILocation(line: 2431, column: 65, scope: !7687)
!7704 = !DILocation(line: 2431, column: 2, scope: !7687)
!7705 = !DILocation(line: 2433, column: 9, scope: !7687)
!7706 = !DILocation(line: 2433, column: 2, scope: !7687)
!7707 = distinct !DISubprogram(name: "mesh_create_derived_no_virtual", scope: !3, file: !3, line: 2436, type: !7688, scopeLine: 2438, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!7708 = !DILocalVariable(name: "scene", arg: 1, scope: !7707, file: !3, line: 2436, type: !5258)
!7709 = !DILocation(line: 2436, column: 52, scope: !7707)
!7710 = !DILocalVariable(name: "ob", arg: 2, scope: !7707, file: !3, line: 2436, type: !4007)
!7711 = !DILocation(line: 2436, column: 67, scope: !7707)
!7712 = !DILocalVariable(name: "vertCos", arg: 3, scope: !7707, file: !3, line: 2436, type: !1660)
!7713 = !DILocation(line: 2436, column: 79, scope: !7707)
!7714 = !DILocalVariable(name: "dataMask", arg: 4, scope: !7707, file: !3, line: 2437, type: !2768)
!7715 = !DILocation(line: 2437, column: 60, scope: !7707)
!7716 = !DILocalVariable(name: "final", scope: !7707, file: !3, line: 2439, type: !2108)
!7717 = !DILocation(line: 2439, column: 15, scope: !7707)
!7718 = !DILocation(line: 2441, column: 22, scope: !7707)
!7719 = !DILocation(line: 2441, column: 29, scope: !7707)
!7720 = !DILocation(line: 2441, column: 33, scope: !7707)
!7721 = !DILocation(line: 2441, column: 66, scope: !7707)
!7722 = !DILocation(line: 2441, column: 2, scope: !7707)
!7723 = !DILocation(line: 2443, column: 9, scope: !7707)
!7724 = !DILocation(line: 2443, column: 2, scope: !7707)
!7725 = distinct !DISubprogram(name: "mesh_create_derived_physics", scope: !3, file: !3, line: 2446, type: !7688, scopeLine: 2448, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!7726 = !DILocalVariable(name: "scene", arg: 1, scope: !7725, file: !3, line: 2446, type: !5258)
!7727 = !DILocation(line: 2446, column: 49, scope: !7725)
!7728 = !DILocalVariable(name: "ob", arg: 2, scope: !7725, file: !3, line: 2446, type: !4007)
!7729 = !DILocation(line: 2446, column: 64, scope: !7725)
!7730 = !DILocalVariable(name: "vertCos", arg: 3, scope: !7725, file: !3, line: 2446, type: !1660)
!7731 = !DILocation(line: 2446, column: 76, scope: !7725)
!7732 = !DILocalVariable(name: "dataMask", arg: 4, scope: !7725, file: !3, line: 2447, type: !2768)
!7733 = !DILocation(line: 2447, column: 57, scope: !7725)
!7734 = !DILocalVariable(name: "final", scope: !7725, file: !3, line: 2449, type: !2108)
!7735 = !DILocation(line: 2449, column: 15, scope: !7725)
!7736 = !DILocation(line: 2451, column: 22, scope: !7725)
!7737 = !DILocation(line: 2451, column: 29, scope: !7725)
!7738 = !DILocation(line: 2451, column: 33, scope: !7725)
!7739 = !DILocation(line: 2451, column: 66, scope: !7725)
!7740 = !DILocation(line: 2451, column: 2, scope: !7725)
!7741 = !DILocation(line: 2453, column: 9, scope: !7725)
!7742 = !DILocation(line: 2453, column: 2, scope: !7725)
!7743 = distinct !DISubprogram(name: "mesh_create_derived_no_deform_render", scope: !3, file: !3, line: 2456, type: !7688, scopeLine: 2459, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!7744 = !DILocalVariable(name: "scene", arg: 1, scope: !7743, file: !3, line: 2456, type: !5258)
!7745 = !DILocation(line: 2456, column: 58, scope: !7743)
!7746 = !DILocalVariable(name: "ob", arg: 2, scope: !7743, file: !3, line: 2456, type: !4007)
!7747 = !DILocation(line: 2456, column: 73, scope: !7743)
!7748 = !DILocalVariable(name: "vertCos", arg: 3, scope: !7743, file: !3, line: 2457, type: !1660)
!7749 = !DILocation(line: 2457, column: 59, scope: !7743)
!7750 = !DILocalVariable(name: "dataMask", arg: 4, scope: !7743, file: !3, line: 2458, type: !2768)
!7751 = !DILocation(line: 2458, column: 66, scope: !7743)
!7752 = !DILocalVariable(name: "final", scope: !7743, file: !3, line: 2460, type: !2108)
!7753 = !DILocation(line: 2460, column: 15, scope: !7743)
!7754 = !DILocation(line: 2462, column: 22, scope: !7743)
!7755 = !DILocation(line: 2462, column: 29, scope: !7743)
!7756 = !DILocation(line: 2462, column: 33, scope: !7743)
!7757 = !DILocation(line: 2462, column: 65, scope: !7743)
!7758 = !DILocation(line: 2462, column: 2, scope: !7743)
!7759 = !DILocation(line: 2464, column: 9, scope: !7743)
!7760 = !DILocation(line: 2464, column: 2, scope: !7743)
!7761 = distinct !DISubprogram(name: "editbmesh_get_derived_cage_and_final", scope: !3, file: !3, line: 2469, type: !7762, scopeLine: 2471, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!7762 = !DISubroutineType(types: !7763)
!7763 = !{!2108, !5258, !4007, !5722, !6577, !2768}
!7764 = !DILocalVariable(name: "scene", arg: 1, scope: !7761, file: !3, line: 2469, type: !5258)
!7765 = !DILocation(line: 2469, column: 58, scope: !7761)
!7766 = !DILocalVariable(name: "obedit", arg: 2, scope: !7761, file: !3, line: 2469, type: !4007)
!7767 = !DILocation(line: 2469, column: 73, scope: !7761)
!7768 = !DILocalVariable(name: "em", arg: 3, scope: !7761, file: !3, line: 2469, type: !5722)
!7769 = !DILocation(line: 2469, column: 93, scope: !7761)
!7770 = !DILocalVariable(name: "r_final", arg: 4, scope: !7761, file: !3, line: 2469, type: !6577)
!7771 = !DILocation(line: 2469, column: 111, scope: !7761)
!7772 = !DILocalVariable(name: "dataMask", arg: 5, scope: !7761, file: !3, line: 2470, type: !2768)
!7773 = !DILocation(line: 2470, column: 66, scope: !7761)
!7774 = !DILocation(line: 2475, column: 34, scope: !7761)
!7775 = !DILocation(line: 2475, column: 41, scope: !7761)
!7776 = !DILocation(line: 2475, column: 14, scope: !7761)
!7777 = !DILocation(line: 2475, column: 11, scope: !7761)
!7778 = !DILocation(line: 2477, column: 7, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 2477, column: 6)
!7780 = !DILocation(line: 2477, column: 11, scope: !7779)
!7781 = !DILocation(line: 2477, column: 23, scope: !7779)
!7782 = !DILocation(line: 2478, column: 7, scope: !7779)
!7783 = !DILocation(line: 2478, column: 11, scope: !7779)
!7784 = !DILocation(line: 2478, column: 26, scope: !7779)
!7785 = !DILocation(line: 2478, column: 24, scope: !7779)
!7786 = !DILocation(line: 2478, column: 39, scope: !7779)
!7787 = !DILocation(line: 2478, column: 36, scope: !7779)
!7788 = !DILocation(line: 2477, column: 6, scope: !7761)
!7789 = !DILocation(line: 2480, column: 24, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 2479, column: 2)
!7791 = !DILocation(line: 2480, column: 31, scope: !7790)
!7792 = !DILocation(line: 2480, column: 39, scope: !7790)
!7793 = !DILocation(line: 2480, column: 43, scope: !7790)
!7794 = !DILocation(line: 2480, column: 3, scope: !7790)
!7795 = !DILocation(line: 2481, column: 2, scope: !7790)
!7796 = !DILocation(line: 2483, column: 13, scope: !7761)
!7797 = !DILocation(line: 2483, column: 17, scope: !7761)
!7798 = !DILocation(line: 2483, column: 3, scope: !7761)
!7799 = !DILocation(line: 2483, column: 11, scope: !7761)
!7800 = !DILocation(line: 2484, column: 6, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 2484, column: 6)
!7802 = !DILocation(line: 2484, column: 10, scope: !7801)
!7803 = !DILocation(line: 2484, column: 6, scope: !7761)
!7804 = !DILocation(line: 2484, column: 85, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7801, file: !3, line: 2484, column: 24)
!7806 = !DILocation(line: 2485, column: 9, scope: !7761)
!7807 = !DILocation(line: 2485, column: 13, scope: !7761)
!7808 = !DILocation(line: 2485, column: 2, scope: !7761)
!7809 = distinct !DISubprogram(name: "editbmesh_get_derived_cage", scope: !3, file: !3, line: 2488, type: !7810, scopeLine: 2489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!7810 = !DISubroutineType(types: !7811)
!7811 = !{!2108, !5258, !4007, !5722, !2768}
!7812 = !DILocalVariable(name: "scene", arg: 1, scope: !7809, file: !3, line: 2488, type: !5258)
!7813 = !DILocation(line: 2488, column: 48, scope: !7809)
!7814 = !DILocalVariable(name: "obedit", arg: 2, scope: !7809, file: !3, line: 2488, type: !4007)
!7815 = !DILocation(line: 2488, column: 63, scope: !7809)
!7816 = !DILocalVariable(name: "em", arg: 3, scope: !7809, file: !3, line: 2488, type: !5722)
!7817 = !DILocation(line: 2488, column: 83, scope: !7809)
!7818 = !DILocalVariable(name: "dataMask", arg: 4, scope: !7809, file: !3, line: 2488, type: !2768)
!7819 = !DILocation(line: 2488, column: 102, scope: !7809)
!7820 = !DILocation(line: 2493, column: 34, scope: !7809)
!7821 = !DILocation(line: 2493, column: 41, scope: !7809)
!7822 = !DILocation(line: 2493, column: 14, scope: !7809)
!7823 = !DILocation(line: 2493, column: 11, scope: !7809)
!7824 = !DILocation(line: 2495, column: 7, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7809, file: !3, line: 2495, column: 6)
!7826 = !DILocation(line: 2495, column: 11, scope: !7825)
!7827 = !DILocation(line: 2495, column: 23, scope: !7825)
!7828 = !DILocation(line: 2496, column: 7, scope: !7825)
!7829 = !DILocation(line: 2496, column: 11, scope: !7825)
!7830 = !DILocation(line: 2496, column: 26, scope: !7825)
!7831 = !DILocation(line: 2496, column: 24, scope: !7825)
!7832 = !DILocation(line: 2496, column: 39, scope: !7825)
!7833 = !DILocation(line: 2496, column: 36, scope: !7825)
!7834 = !DILocation(line: 2495, column: 6, scope: !7809)
!7835 = !DILocation(line: 2498, column: 24, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7825, file: !3, line: 2497, column: 2)
!7837 = !DILocation(line: 2498, column: 31, scope: !7836)
!7838 = !DILocation(line: 2498, column: 39, scope: !7836)
!7839 = !DILocation(line: 2498, column: 43, scope: !7836)
!7840 = !DILocation(line: 2498, column: 3, scope: !7836)
!7841 = !DILocation(line: 2499, column: 2, scope: !7836)
!7842 = !DILocation(line: 2501, column: 9, scope: !7809)
!7843 = !DILocation(line: 2501, column: 13, scope: !7809)
!7844 = !DILocation(line: 2501, column: 2, scope: !7809)
!7845 = distinct !DISubprogram(name: "editbmesh_get_derived_base", scope: !3, file: !3, line: 2504, type: !7846, scopeLine: 2505, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!7846 = !DISubroutineType(types: !7847)
!7847 = !{!2108, !4007, !5722}
!7848 = !DILocalVariable(name: "obedit", arg: 1, scope: !7845, file: !3, line: 2504, type: !4007)
!7849 = !DILocation(line: 2504, column: 49, scope: !7845)
!7850 = !DILocalVariable(name: "em", arg: 2, scope: !7845, file: !3, line: 2504, type: !5722)
!7851 = !DILocation(line: 2504, column: 69, scope: !7845)
!7852 = !DILocation(line: 2506, column: 29, scope: !7845)
!7853 = !DILocation(line: 2506, column: 33, scope: !7845)
!7854 = !DILocation(line: 2506, column: 9, scope: !7845)
!7855 = !DILocation(line: 2506, column: 2, scope: !7845)
!7856 = distinct !DISubprogram(name: "object_get_derived_final", scope: !3, file: !3, line: 2512, type: !7857, scopeLine: 2513, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!7857 = !DISubroutineType(types: !7858)
!7858 = !{!2108, !4007, !2353}
!7859 = !DILocalVariable(name: "ob", arg: 1, scope: !7856, file: !3, line: 2512, type: !4007)
!7860 = !DILocation(line: 2512, column: 47, scope: !7856)
!7861 = !DILocalVariable(name: "for_render", arg: 2, scope: !7856, file: !3, line: 2512, type: !2353)
!7862 = !DILocation(line: 2512, column: 62, scope: !7856)
!7863 = !DILocalVariable(name: "me", scope: !7856, file: !3, line: 2514, type: !404)
!7864 = !DILocation(line: 2514, column: 8, scope: !7856)
!7865 = !DILocation(line: 2514, column: 13, scope: !7856)
!7866 = !DILocation(line: 2514, column: 17, scope: !7856)
!7867 = !DILocalVariable(name: "em", scope: !7856, file: !3, line: 2515, type: !5722)
!7868 = !DILocation(line: 2515, column: 14, scope: !7856)
!7869 = !DILocation(line: 2515, column: 19, scope: !7856)
!7870 = !DILocation(line: 2515, column: 23, scope: !7856)
!7871 = !DILocation(line: 2517, column: 6, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 2517, column: 6)
!7873 = !DILocation(line: 2517, column: 6, scope: !7856)
!7874 = !DILocation(line: 2519, column: 10, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7872, file: !3, line: 2517, column: 18)
!7876 = !DILocation(line: 2519, column: 14, scope: !7875)
!7877 = !DILocation(line: 2519, column: 3, scope: !7875)
!7878 = !DILocation(line: 2522, column: 6, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 2522, column: 6)
!7880 = !DILocation(line: 2522, column: 6, scope: !7856)
!7881 = !DILocalVariable(name: "dm", scope: !7882, file: !3, line: 2523, type: !2108)
!7882 = distinct !DILexicalBlock(scope: !7879, file: !3, line: 2522, column: 10)
!7883 = !DILocation(line: 2523, column: 16, scope: !7882)
!7884 = !DILocation(line: 2523, column: 21, scope: !7882)
!7885 = !DILocation(line: 2523, column: 25, scope: !7882)
!7886 = !DILocation(line: 2524, column: 10, scope: !7882)
!7887 = !DILocation(line: 2524, column: 3, scope: !7882)
!7888 = !DILocation(line: 2527, column: 9, scope: !7856)
!7889 = !DILocation(line: 2527, column: 13, scope: !7856)
!7890 = !DILocation(line: 2527, column: 2, scope: !7856)
!7891 = !DILocation(line: 2528, column: 1, scope: !7856)
!7892 = distinct !DISubprogram(name: "mesh_get_mapped_verts_coords", scope: !3, file: !3, line: 2611, type: !7893, scopeLine: 2612, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!7893 = !DISubroutineType(types: !7894)
!7894 = !{null, !2108, !1660, !3793}
!7895 = !DILocalVariable(name: "dm", arg: 1, scope: !7892, file: !3, line: 2611, type: !2108)
!7896 = !DILocation(line: 2611, column: 48, scope: !7892)
!7897 = !DILocalVariable(name: "r_cos", arg: 2, scope: !7892, file: !3, line: 2611, type: !1660)
!7898 = !DILocation(line: 2611, column: 60, scope: !7892)
!7899 = !DILocalVariable(name: "totcos", arg: 3, scope: !7892, file: !3, line: 2611, type: !3793)
!7900 = !DILocation(line: 2611, column: 81, scope: !7892)
!7901 = !DILocation(line: 2613, column: 6, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7892, file: !3, line: 2613, column: 6)
!7903 = !DILocation(line: 2613, column: 10, scope: !7902)
!7904 = !DILocation(line: 2613, column: 6, scope: !7892)
!7905 = !DILocalVariable(name: "userData", scope: !7906, file: !3, line: 2614, type: !2911)
!7906 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 2613, column: 29)
!7907 = !DILocation(line: 2614, column: 18, scope: !7906)
!7908 = !DILocation(line: 2615, column: 10, scope: !7906)
!7909 = !DILocation(line: 2615, column: 3, scope: !7906)
!7910 = !DILocation(line: 2615, column: 37, scope: !7906)
!7911 = !DILocation(line: 2615, column: 35, scope: !7906)
!7912 = !DILocation(line: 2616, column: 24, scope: !7906)
!7913 = !DILocation(line: 2616, column: 12, scope: !7906)
!7914 = !DILocation(line: 2616, column: 22, scope: !7906)
!7915 = !DILocation(line: 2617, column: 27, scope: !7906)
!7916 = !DILocation(line: 2617, column: 12, scope: !7906)
!7917 = !DILocation(line: 2617, column: 25, scope: !7906)
!7918 = !DILocation(line: 2618, column: 3, scope: !7906)
!7919 = !DILocation(line: 2618, column: 7, scope: !7906)
!7920 = !DILocation(line: 2618, column: 25, scope: !7906)
!7921 = !DILocation(line: 2618, column: 54, scope: !7906)
!7922 = !DILocation(line: 2619, column: 3, scope: !7906)
!7923 = !DILocation(line: 2619, column: 22, scope: !7906)
!7924 = !DILocation(line: 2619, column: 13, scope: !7906)
!7925 = !DILocation(line: 2620, column: 2, scope: !7906)
!7926 = !DILocalVariable(name: "i", scope: !7927, file: !3, line: 2622, type: !156)
!7927 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 2621, column: 7)
!7928 = !DILocation(line: 2622, column: 7, scope: !7927)
!7929 = !DILocation(line: 2623, column: 10, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 2623, column: 3)
!7931 = !DILocation(line: 2623, column: 8, scope: !7930)
!7932 = !DILocation(line: 2623, column: 15, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7930, file: !3, line: 2623, column: 3)
!7934 = !DILocation(line: 2623, column: 19, scope: !7933)
!7935 = !DILocation(line: 2623, column: 17, scope: !7933)
!7936 = !DILocation(line: 2623, column: 3, scope: !7930)
!7937 = !DILocation(line: 2624, column: 4, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 2623, column: 32)
!7939 = !DILocation(line: 2624, column: 8, scope: !7938)
!7940 = !DILocation(line: 2624, column: 18, scope: !7938)
!7941 = !DILocation(line: 2624, column: 22, scope: !7938)
!7942 = !DILocation(line: 2624, column: 25, scope: !7938)
!7943 = !DILocation(line: 2624, column: 31, scope: !7938)
!7944 = !DILocation(line: 2625, column: 3, scope: !7938)
!7945 = !DILocation(line: 2623, column: 28, scope: !7933)
!7946 = !DILocation(line: 2623, column: 3, scope: !7933)
!7947 = distinct !{!7947, !7936, !7948}
!7948 = !DILocation(line: 2625, column: 3, scope: !7930)
!7949 = !DILocation(line: 2627, column: 1, scope: !7892)
!7950 = distinct !DISubprogram(name: "make_vertexcos__mapFunc", scope: !3, file: !3, line: 2597, type: !2270, scopeLine: 2599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!7951 = !DILocalVariable(name: "userData", arg: 1, scope: !7950, file: !3, line: 2597, type: !318)
!7952 = !DILocation(line: 2597, column: 43, scope: !7950)
!7953 = !DILocalVariable(name: "index", arg: 2, scope: !7950, file: !3, line: 2597, type: !156)
!7954 = !DILocation(line: 2597, column: 57, scope: !7950)
!7955 = !DILocalVariable(name: "co", arg: 3, scope: !7950, file: !3, line: 2597, type: !2272)
!7956 = !DILocation(line: 2597, column: 76, scope: !7950)
!7957 = !DILocalVariable(name: "UNUSED_no_f", arg: 4, scope: !7950, file: !3, line: 2598, type: !2272)
!7958 = !DILocation(line: 2598, column: 49, scope: !7950)
!7959 = !DILocalVariable(name: "UNUSED_no_s", arg: 5, scope: !7950, file: !3, line: 2598, type: !2273)
!7960 = !DILocation(line: 2598, column: 78, scope: !7950)
!7961 = !DILocalVariable(name: "mappedData", scope: !7950, file: !3, line: 2600, type: !2910)
!7962 = !DILocation(line: 2600, column: 18, scope: !7950)
!7963 = !DILocation(line: 2600, column: 49, scope: !7950)
!7964 = !DILocation(line: 2600, column: 31, scope: !7950)
!7965 = !DILocation(line: 2602, column: 6, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7950, file: !3, line: 2602, column: 6)
!7967 = !DILocation(line: 2602, column: 55, scope: !7966)
!7968 = !DILocation(line: 2602, column: 6, scope: !7950)
!7969 = !DILocation(line: 2606, column: 14, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7966, file: !3, line: 2602, column: 61)
!7971 = !DILocation(line: 2606, column: 26, scope: !7970)
!7972 = !DILocation(line: 2606, column: 36, scope: !7970)
!7973 = !DILocation(line: 2606, column: 44, scope: !7970)
!7974 = !DILocation(line: 2606, column: 3, scope: !7970)
!7975 = !DILocation(line: 2607, column: 3, scope: !7970)
!7976 = !DILocation(line: 2608, column: 2, scope: !7970)
!7977 = !DILocation(line: 2609, column: 1, scope: !7950)
!7978 = distinct !DISubprogram(name: "DM_add_tangent_layer", scope: !3, file: !3, line: 2724, type: !2106, scopeLine: 2725, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!7979 = !DILocalVariable(name: "dm", arg: 1, scope: !7978, file: !3, line: 2724, type: !2108)
!7980 = !DILocation(line: 2724, column: 40, scope: !7978)
!7981 = !DILocalVariable(name: "mvert", scope: !7978, file: !3, line: 2727, type: !2812)
!7982 = !DILocation(line: 2727, column: 9, scope: !7978)
!7983 = !DILocalVariable(name: "mtface", scope: !7978, file: !3, line: 2728, type: !2926)
!7984 = !DILocation(line: 2728, column: 10, scope: !7978)
!7985 = !DILocalVariable(name: "mface", scope: !7978, file: !3, line: 2729, type: !304)
!7986 = !DILocation(line: 2729, column: 9, scope: !7978)
!7987 = !DILocalVariable(name: "orco", scope: !7978, file: !3, line: 2730, type: !1660)
!7988 = !DILocation(line: 2730, column: 10, scope: !7978)
!7989 = !DILocalVariable(name: "tangent", scope: !7978, file: !3, line: 2730, type: !2327)
!7990 = !DILocation(line: 2730, column: 29, scope: !7978)
!7991 = !DILocalVariable(name: "totface", scope: !7978, file: !3, line: 2731, type: !156)
!7992 = !DILocation(line: 2731, column: 21, scope: !7978)
!7993 = !DILocalVariable(name: "fnors", scope: !7978, file: !3, line: 2732, type: !1660)
!7994 = !DILocation(line: 2732, column: 10, scope: !7978)
!7995 = !DILocalVariable(name: "tlnors", scope: !7978, file: !3, line: 2733, type: !2922)
!7996 = !DILocation(line: 2733, column: 10, scope: !7978)
!7997 = !DILocation(line: 2735, column: 34, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7978, file: !3, line: 2735, column: 6)
!7999 = !DILocation(line: 2735, column: 38, scope: !7998)
!8000 = !DILocation(line: 2735, column: 6, scope: !7998)
!8001 = !DILocation(line: 2735, column: 60, scope: !7998)
!8002 = !DILocation(line: 2735, column: 6, scope: !7978)
!8003 = !DILocation(line: 2736, column: 3, scope: !7998)
!8004 = !DILocation(line: 2738, column: 10, scope: !7978)
!8005 = !DILocation(line: 2738, column: 14, scope: !7978)
!8006 = !DILocation(line: 2738, column: 35, scope: !7978)
!8007 = !DILocation(line: 2738, column: 8, scope: !7978)
!8008 = !DILocation(line: 2742, column: 11, scope: !7978)
!8009 = !DILocation(line: 2742, column: 15, scope: !7978)
!8010 = !DILocation(line: 2742, column: 36, scope: !7978)
!8011 = !DILocation(line: 2742, column: 9, scope: !7978)
!8012 = !DILocation(line: 2746, column: 12, scope: !7978)
!8013 = !DILocation(line: 2746, column: 16, scope: !7978)
!8014 = !DILocation(line: 2746, column: 32, scope: !7978)
!8015 = !DILocation(line: 2746, column: 10, scope: !7978)
!8016 = !DILocation(line: 2748, column: 10, scope: !7978)
!8017 = !DILocation(line: 2748, column: 14, scope: !7978)
!8018 = !DILocation(line: 2748, column: 27, scope: !7978)
!8019 = !DILocation(line: 2748, column: 8, scope: !7978)
!8020 = !DILocation(line: 2749, column: 10, scope: !7978)
!8021 = !DILocation(line: 2749, column: 14, scope: !7978)
!8022 = !DILocation(line: 2749, column: 31, scope: !7978)
!8023 = !DILocation(line: 2749, column: 8, scope: !7978)
!8024 = !DILocation(line: 2750, column: 11, scope: !7978)
!8025 = !DILocation(line: 2750, column: 15, scope: !7978)
!8026 = !DILocation(line: 2750, column: 36, scope: !7978)
!8027 = !DILocation(line: 2750, column: 9, scope: !7978)
!8028 = !DILocation(line: 2752, column: 7, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !7978, file: !3, line: 2752, column: 6)
!8030 = !DILocation(line: 2752, column: 6, scope: !7978)
!8031 = !DILocation(line: 2753, column: 10, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8029, file: !3, line: 2752, column: 15)
!8033 = !DILocation(line: 2753, column: 14, scope: !8032)
!8034 = !DILocation(line: 2753, column: 31, scope: !8032)
!8035 = !DILocation(line: 2753, column: 8, scope: !8032)
!8036 = !DILocation(line: 2754, column: 8, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8032, file: !3, line: 2754, column: 7)
!8038 = !DILocation(line: 2754, column: 7, scope: !8032)
!8039 = !DILocation(line: 2755, column: 4, scope: !8037)
!8040 = !DILocation(line: 2756, column: 2, scope: !8032)
!8041 = !DILocation(line: 2759, column: 24, scope: !7978)
!8042 = !DILocation(line: 2759, column: 2, scope: !7978)
!8043 = !DILocation(line: 2760, column: 39, scope: !7978)
!8044 = !DILocation(line: 2760, column: 12, scope: !7978)
!8045 = !DILocation(line: 2760, column: 10, scope: !7978)
!8046 = !DILocalVariable(name: "mesh2tangent", scope: !8047, file: !3, line: 2764, type: !2917)
!8047 = distinct !DILexicalBlock(scope: !7978, file: !3, line: 2763, column: 2)
!8048 = !DILocation(line: 2764, column: 22, scope: !8047)
!8049 = !DILocalVariable(name: "sContext", scope: !8047, file: !3, line: 2765, type: !8050)
!8050 = !DIDerivedType(tag: DW_TAG_typedef, name: "SMikkTSpaceContext", file: !8051, line: 63, baseType: !8052)
!8051 = !DIFile(filename: "blender/intern/mikktspace/mikktspace.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SMikkTSpaceContext", file: !8051, line: 106, size: 128, elements: !8053)
!8053 = !{!8054, !8085}
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "m_pInterface", scope: !8052, file: !8051, line: 108, baseType: !8055, size: 64)
!8055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8056, size: 64)
!8056 = !DIDerivedType(tag: DW_TAG_typedef, name: "SMikkTSpaceInterface", file: !8051, line: 104, baseType: !8057)
!8057 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8051, line: 65, size: 448, elements: !8058)
!8058 = !{!8059, !8065, !8069, !8073, !8074, !8075, !8079}
!8059 = !DIDerivedType(tag: DW_TAG_member, name: "m_getNumFaces", scope: !8057, file: !8051, line: 67, baseType: !8060, size: 64)
!8060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8061, size: 64)
!8061 = !DISubroutineType(types: !8062)
!8062 = !{!156, !8063}
!8063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8064, size: 64)
!8064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8050)
!8065 = !DIDerivedType(tag: DW_TAG_member, name: "m_getNumVerticesOfFace", scope: !8057, file: !8051, line: 71, baseType: !8066, size: 64, offset: 64)
!8066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8067, size: 64)
!8067 = !DISubroutineType(types: !8068)
!8068 = !{!156, !8063, !3793}
!8069 = !DIDerivedType(tag: DW_TAG_member, name: "m_getPosition", scope: !8057, file: !8051, line: 75, baseType: !8070, size: 64, offset: 128)
!8070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8071, size: 64)
!8071 = !DISubroutineType(types: !8072)
!8072 = !{null, !8063, !320, !3793, !3793}
!8073 = !DIDerivedType(tag: DW_TAG_member, name: "m_getNormal", scope: !8057, file: !8051, line: 76, baseType: !8070, size: 64, offset: 192)
!8074 = !DIDerivedType(tag: DW_TAG_member, name: "m_getTexCoord", scope: !8057, file: !8051, line: 77, baseType: !8070, size: 64, offset: 256)
!8075 = !DIDerivedType(tag: DW_TAG_member, name: "m_setTSpaceBasic", scope: !8057, file: !8051, line: 89, baseType: !8076, size: 64, offset: 320)
!8076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8077, size: 64)
!8077 = !DISubroutineType(types: !8078)
!8078 = !{null, !8063, !2272, !2114, !3793, !3793}
!8079 = !DIDerivedType(tag: DW_TAG_member, name: "m_setTSpace", scope: !8057, file: !8051, line: 102, baseType: !8080, size: 64, offset: 384)
!8080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8081, size: 64)
!8081 = !DISubroutineType(types: !8082)
!8082 = !{null, !8063, !2272, !2272, !2114, !2114, !8083, !3793, !3793}
!8083 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8084)
!8084 = !DIDerivedType(tag: DW_TAG_typedef, name: "tbool", file: !8051, line: 62, baseType: !156)
!8085 = !DIDerivedType(tag: DW_TAG_member, name: "m_pUserData", scope: !8052, file: !8051, line: 109, baseType: !318, size: 64, offset: 64)
!8086 = !DILocation(line: 2765, column: 22, scope: !8047)
!8087 = !DILocalVariable(name: "sInterface", scope: !8047, file: !3, line: 2766, type: !8056)
!8088 = !DILocation(line: 2766, column: 24, scope: !8047)
!8089 = !DILocation(line: 2768, column: 41, scope: !8047)
!8090 = !DILocation(line: 2768, column: 16, scope: !8047)
!8091 = !DILocation(line: 2768, column: 39, scope: !8047)
!8092 = !DILocation(line: 2769, column: 41, scope: !8047)
!8093 = !DILocation(line: 2769, column: 16, scope: !8047)
!8094 = !DILocation(line: 2769, column: 39, scope: !8047)
!8095 = !DILocation(line: 2770, column: 25, scope: !8047)
!8096 = !DILocation(line: 2770, column: 16, scope: !8047)
!8097 = !DILocation(line: 2770, column: 23, scope: !8047)
!8098 = !DILocation(line: 2771, column: 24, scope: !8047)
!8099 = !DILocation(line: 2771, column: 16, scope: !8047)
!8100 = !DILocation(line: 2771, column: 22, scope: !8047)
!8101 = !DILocation(line: 2772, column: 24, scope: !8047)
!8102 = !DILocation(line: 2772, column: 16, scope: !8047)
!8103 = !DILocation(line: 2772, column: 22, scope: !8047)
!8104 = !DILocation(line: 2773, column: 23, scope: !8047)
!8105 = !DILocation(line: 2773, column: 16, scope: !8047)
!8106 = !DILocation(line: 2773, column: 21, scope: !8047)
!8107 = !DILocation(line: 2774, column: 26, scope: !8047)
!8108 = !DILocation(line: 2774, column: 16, scope: !8047)
!8109 = !DILocation(line: 2774, column: 24, scope: !8047)
!8110 = !DILocation(line: 2775, column: 31, scope: !8047)
!8111 = !DILocation(line: 2775, column: 16, scope: !8047)
!8112 = !DILocation(line: 2775, column: 29, scope: !8047)
!8113 = !DILocation(line: 2777, column: 26, scope: !8047)
!8114 = !DILocation(line: 2777, column: 12, scope: !8047)
!8115 = !DILocation(line: 2777, column: 24, scope: !8047)
!8116 = !DILocation(line: 2778, column: 12, scope: !8047)
!8117 = !DILocation(line: 2778, column: 25, scope: !8047)
!8118 = !DILocation(line: 2779, column: 14, scope: !8047)
!8119 = !DILocation(line: 2779, column: 28, scope: !8047)
!8120 = !DILocation(line: 2780, column: 14, scope: !8047)
!8121 = !DILocation(line: 2780, column: 37, scope: !8047)
!8122 = !DILocation(line: 2781, column: 14, scope: !8047)
!8123 = !DILocation(line: 2781, column: 28, scope: !8047)
!8124 = !DILocation(line: 2782, column: 14, scope: !8047)
!8125 = !DILocation(line: 2782, column: 28, scope: !8047)
!8126 = !DILocation(line: 2783, column: 14, scope: !8047)
!8127 = !DILocation(line: 2783, column: 26, scope: !8047)
!8128 = !DILocation(line: 2784, column: 14, scope: !8047)
!8129 = !DILocation(line: 2784, column: 31, scope: !8047)
!8130 = !DILocation(line: 2787, column: 3, scope: !8047)
!8131 = !DILocation(line: 2789, column: 1, scope: !7978)
!8132 = distinct !DISubprogram(name: "GetNumFaces", scope: !3, file: !3, line: 2646, type: !8061, scopeLine: 2647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!8133 = !DILocalVariable(name: "pContext", arg: 1, scope: !8132, file: !3, line: 2646, type: !8063)
!8134 = !DILocation(line: 2646, column: 50, scope: !8132)
!8135 = !DILocalVariable(name: "pMesh", scope: !8132, file: !3, line: 2648, type: !2916)
!8136 = !DILocation(line: 2648, column: 22, scope: !8132)
!8137 = !DILocation(line: 2648, column: 53, scope: !8132)
!8138 = !DILocation(line: 2648, column: 63, scope: !8132)
!8139 = !DILocation(line: 2648, column: 30, scope: !8132)
!8140 = !DILocation(line: 2649, column: 9, scope: !8132)
!8141 = !DILocation(line: 2649, column: 16, scope: !8132)
!8142 = !DILocation(line: 2649, column: 2, scope: !8132)
!8143 = distinct !DISubprogram(name: "GetNumVertsOfFace", scope: !3, file: !3, line: 2652, type: !8067, scopeLine: 2653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!8144 = !DILocalVariable(name: "pContext", arg: 1, scope: !8143, file: !3, line: 2652, type: !8063)
!8145 = !DILocation(line: 2652, column: 56, scope: !8143)
!8146 = !DILocalVariable(name: "face_num", arg: 2, scope: !8143, file: !3, line: 2652, type: !3793)
!8147 = !DILocation(line: 2652, column: 76, scope: !8143)
!8148 = !DILocalVariable(name: "pMesh", scope: !8143, file: !3, line: 2654, type: !2916)
!8149 = !DILocation(line: 2654, column: 22, scope: !8143)
!8150 = !DILocation(line: 2654, column: 53, scope: !8143)
!8151 = !DILocation(line: 2654, column: 63, scope: !8143)
!8152 = !DILocation(line: 2654, column: 30, scope: !8143)
!8153 = !DILocation(line: 2655, column: 9, scope: !8143)
!8154 = !DILocation(line: 2655, column: 16, scope: !8143)
!8155 = !DILocation(line: 2655, column: 22, scope: !8143)
!8156 = !DILocation(line: 2655, column: 32, scope: !8143)
!8157 = !DILocation(line: 2655, column: 35, scope: !8143)
!8158 = !DILocation(line: 2655, column: 2, scope: !8143)
!8159 = distinct !DISubprogram(name: "GetPosition", scope: !3, file: !3, line: 2658, type: !8071, scopeLine: 2659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!8160 = !DILocalVariable(name: "pContext", arg: 1, scope: !8159, file: !3, line: 2658, type: !8063)
!8161 = !DILocation(line: 2658, column: 51, scope: !8159)
!8162 = !DILocalVariable(name: "r_co", arg: 2, scope: !8159, file: !3, line: 2658, type: !320)
!8163 = !DILocation(line: 2658, column: 67, scope: !8159)
!8164 = !DILocalVariable(name: "face_num", arg: 3, scope: !8159, file: !3, line: 2658, type: !3793)
!8165 = !DILocation(line: 2658, column: 86, scope: !8159)
!8166 = !DILocalVariable(name: "vert_index", arg: 4, scope: !8159, file: !3, line: 2658, type: !3793)
!8167 = !DILocation(line: 2658, column: 106, scope: !8159)
!8168 = !DILocalVariable(name: "pMesh", scope: !8159, file: !3, line: 2661, type: !2916)
!8169 = !DILocation(line: 2661, column: 22, scope: !8159)
!8170 = !DILocation(line: 2661, column: 53, scope: !8159)
!8171 = !DILocation(line: 2661, column: 63, scope: !8159)
!8172 = !DILocation(line: 2661, column: 30, scope: !8159)
!8173 = !DILocalVariable(name: "co", scope: !8159, file: !3, line: 2662, type: !2272)
!8174 = !DILocation(line: 2662, column: 15, scope: !8159)
!8175 = !DILocation(line: 2662, column: 20, scope: !8159)
!8176 = !DILocation(line: 2662, column: 27, scope: !8159)
!8177 = !DILocation(line: 2662, column: 35, scope: !8159)
!8178 = !DILocation(line: 2662, column: 42, scope: !8159)
!8179 = !DILocation(line: 2662, column: 48, scope: !8159)
!8180 = !DILocation(line: 2662, column: 58, scope: !8159)
!8181 = !DILocation(line: 2662, column: 62, scope: !8159)
!8182 = !DILocation(line: 2662, column: 33, scope: !8159)
!8183 = !DILocation(line: 2662, column: 75, scope: !8159)
!8184 = !DILocation(line: 2663, column: 13, scope: !8159)
!8185 = !DILocation(line: 2663, column: 19, scope: !8159)
!8186 = !DILocation(line: 2663, column: 2, scope: !8159)
!8187 = !DILocation(line: 2664, column: 1, scope: !8159)
!8188 = distinct !DISubprogram(name: "GetTextureCoordinate", scope: !3, file: !3, line: 2666, type: !8071, scopeLine: 2667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!8189 = !DILocalVariable(name: "pContext", arg: 1, scope: !8188, file: !3, line: 2666, type: !8063)
!8190 = !DILocation(line: 2666, column: 60, scope: !8188)
!8191 = !DILocalVariable(name: "r_uv", arg: 2, scope: !8188, file: !3, line: 2666, type: !320)
!8192 = !DILocation(line: 2666, column: 76, scope: !8188)
!8193 = !DILocalVariable(name: "face_num", arg: 3, scope: !8188, file: !3, line: 2666, type: !3793)
!8194 = !DILocation(line: 2666, column: 95, scope: !8188)
!8195 = !DILocalVariable(name: "vert_index", arg: 4, scope: !8188, file: !3, line: 2666, type: !3793)
!8196 = !DILocation(line: 2666, column: 115, scope: !8188)
!8197 = !DILocalVariable(name: "pMesh", scope: !8188, file: !3, line: 2669, type: !2916)
!8198 = !DILocation(line: 2669, column: 22, scope: !8188)
!8199 = !DILocation(line: 2669, column: 53, scope: !8188)
!8200 = !DILocation(line: 2669, column: 63, scope: !8188)
!8201 = !DILocation(line: 2669, column: 30, scope: !8188)
!8202 = !DILocation(line: 2671, column: 6, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 2671, column: 6)
!8204 = !DILocation(line: 2671, column: 13, scope: !8203)
!8205 = !DILocation(line: 2671, column: 20, scope: !8203)
!8206 = !DILocation(line: 2671, column: 6, scope: !8188)
!8207 = !DILocalVariable(name: "uv", scope: !8208, file: !3, line: 2672, type: !2272)
!8208 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 2671, column: 29)
!8209 = !DILocation(line: 2672, column: 16, scope: !8208)
!8210 = !DILocation(line: 2672, column: 21, scope: !8208)
!8211 = !DILocation(line: 2672, column: 28, scope: !8208)
!8212 = !DILocation(line: 2672, column: 35, scope: !8208)
!8213 = !DILocation(line: 2672, column: 45, scope: !8208)
!8214 = !DILocation(line: 2672, column: 48, scope: !8208)
!8215 = !DILocation(line: 2673, column: 14, scope: !8208)
!8216 = !DILocation(line: 2673, column: 20, scope: !8208)
!8217 = !DILocation(line: 2673, column: 3, scope: !8208)
!8218 = !DILocation(line: 2674, column: 2, scope: !8208)
!8219 = !DILocalVariable(name: "orco", scope: !8220, file: !3, line: 2676, type: !2272)
!8220 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 2675, column: 7)
!8221 = !DILocation(line: 2676, column: 16, scope: !8220)
!8222 = !DILocation(line: 2676, column: 23, scope: !8220)
!8223 = !DILocation(line: 2676, column: 30, scope: !8220)
!8224 = !DILocation(line: 2676, column: 37, scope: !8220)
!8225 = !DILocation(line: 2676, column: 44, scope: !8220)
!8226 = !DILocation(line: 2676, column: 50, scope: !8220)
!8227 = !DILocation(line: 2676, column: 60, scope: !8220)
!8228 = !DILocation(line: 2676, column: 64, scope: !8220)
!8229 = !DILocation(line: 2676, column: 35, scope: !8220)
!8230 = !DILocation(line: 2677, column: 18, scope: !8220)
!8231 = !DILocation(line: 2677, column: 28, scope: !8220)
!8232 = !DILocation(line: 2677, column: 37, scope: !8220)
!8233 = !DILocation(line: 2677, column: 46, scope: !8220)
!8234 = !DILocation(line: 2677, column: 55, scope: !8220)
!8235 = !DILocation(line: 2677, column: 3, scope: !8220)
!8236 = !DILocation(line: 2679, column: 1, scope: !8188)
!8237 = distinct !DISubprogram(name: "GetNormal", scope: !3, file: !3, line: 2681, type: !8071, scopeLine: 2682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!8238 = !DILocalVariable(name: "pContext", arg: 1, scope: !8237, file: !3, line: 2681, type: !8063)
!8239 = !DILocation(line: 2681, column: 49, scope: !8237)
!8240 = !DILocalVariable(name: "r_no", arg: 2, scope: !8237, file: !3, line: 2681, type: !320)
!8241 = !DILocation(line: 2681, column: 65, scope: !8237)
!8242 = !DILocalVariable(name: "face_num", arg: 3, scope: !8237, file: !3, line: 2681, type: !3793)
!8243 = !DILocation(line: 2681, column: 84, scope: !8237)
!8244 = !DILocalVariable(name: "vert_index", arg: 4, scope: !8237, file: !3, line: 2681, type: !3793)
!8245 = !DILocation(line: 2681, column: 104, scope: !8237)
!8246 = !DILocalVariable(name: "pMesh", scope: !8237, file: !3, line: 2684, type: !2916)
!8247 = !DILocation(line: 2684, column: 22, scope: !8237)
!8248 = !DILocation(line: 2684, column: 53, scope: !8237)
!8249 = !DILocation(line: 2684, column: 63, scope: !8237)
!8250 = !DILocation(line: 2684, column: 30, scope: !8237)
!8251 = !DILocalVariable(name: "smoothnormal", scope: !8237, file: !3, line: 2685, type: !2353)
!8252 = !DILocation(line: 2685, column: 13, scope: !8237)
!8253 = !DILocation(line: 2685, column: 29, scope: !8237)
!8254 = !DILocation(line: 2685, column: 36, scope: !8237)
!8255 = !DILocation(line: 2685, column: 42, scope: !8237)
!8256 = !DILocation(line: 2685, column: 52, scope: !8237)
!8257 = !DILocation(line: 2685, column: 57, scope: !8237)
!8258 = !DILocation(line: 2685, column: 70, scope: !8237)
!8259 = !DILocation(line: 2685, column: 28, scope: !8237)
!8260 = !DILocation(line: 2687, column: 6, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8237, file: !3, line: 2687, column: 6)
!8262 = !DILocation(line: 2687, column: 13, scope: !8261)
!8263 = !DILocation(line: 2687, column: 6, scope: !8237)
!8264 = !DILocation(line: 2688, column: 28, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8261, file: !3, line: 2687, column: 37)
!8266 = !DILocation(line: 2688, column: 34, scope: !8265)
!8267 = !DILocation(line: 2688, column: 41, scope: !8265)
!8268 = !DILocation(line: 2688, column: 64, scope: !8265)
!8269 = !DILocation(line: 2688, column: 74, scope: !8265)
!8270 = !DILocation(line: 2688, column: 3, scope: !8265)
!8271 = !DILocation(line: 2689, column: 2, scope: !8265)
!8272 = !DILocation(line: 2690, column: 12, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8261, file: !3, line: 2690, column: 11)
!8274 = !DILocation(line: 2690, column: 11, scope: !8261)
!8275 = !DILocation(line: 2691, column: 7, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8277, file: !3, line: 2691, column: 7)
!8277 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 2690, column: 26)
!8278 = !DILocation(line: 2691, column: 14, scope: !8276)
!8279 = !DILocation(line: 2691, column: 7, scope: !8277)
!8280 = !DILocation(line: 2692, column: 15, scope: !8281)
!8281 = distinct !DILexicalBlock(scope: !8276, file: !3, line: 2691, column: 38)
!8282 = !DILocation(line: 2692, column: 21, scope: !8281)
!8283 = !DILocation(line: 2692, column: 28, scope: !8281)
!8284 = !DILocation(line: 2692, column: 51, scope: !8281)
!8285 = !DILocation(line: 2692, column: 4, scope: !8281)
!8286 = !DILocation(line: 2693, column: 3, scope: !8281)
!8287 = !DILocalVariable(name: "mf", scope: !8288, file: !3, line: 2695, type: !304)
!8288 = distinct !DILexicalBlock(scope: !8276, file: !3, line: 2694, column: 8)
!8289 = !DILocation(line: 2695, column: 11, scope: !8288)
!8290 = !DILocation(line: 2695, column: 17, scope: !8288)
!8291 = !DILocation(line: 2695, column: 24, scope: !8288)
!8292 = !DILocation(line: 2695, column: 30, scope: !8288)
!8293 = !DILocalVariable(name: "p0", scope: !8288, file: !3, line: 2696, type: !2272)
!8294 = !DILocation(line: 2696, column: 17, scope: !8288)
!8295 = !DILocation(line: 2696, column: 22, scope: !8288)
!8296 = !DILocation(line: 2696, column: 29, scope: !8288)
!8297 = !DILocation(line: 2696, column: 35, scope: !8288)
!8298 = !DILocation(line: 2696, column: 39, scope: !8288)
!8299 = !DILocation(line: 2696, column: 43, scope: !8288)
!8300 = !DILocalVariable(name: "p1", scope: !8288, file: !3, line: 2697, type: !2272)
!8301 = !DILocation(line: 2697, column: 17, scope: !8288)
!8302 = !DILocation(line: 2697, column: 22, scope: !8288)
!8303 = !DILocation(line: 2697, column: 29, scope: !8288)
!8304 = !DILocation(line: 2697, column: 35, scope: !8288)
!8305 = !DILocation(line: 2697, column: 39, scope: !8288)
!8306 = !DILocation(line: 2697, column: 43, scope: !8288)
!8307 = !DILocalVariable(name: "p2", scope: !8288, file: !3, line: 2698, type: !2272)
!8308 = !DILocation(line: 2698, column: 17, scope: !8288)
!8309 = !DILocation(line: 2698, column: 22, scope: !8288)
!8310 = !DILocation(line: 2698, column: 29, scope: !8288)
!8311 = !DILocation(line: 2698, column: 35, scope: !8288)
!8312 = !DILocation(line: 2698, column: 39, scope: !8288)
!8313 = !DILocation(line: 2698, column: 43, scope: !8288)
!8314 = !DILocation(line: 2700, column: 8, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8288, file: !3, line: 2700, column: 8)
!8316 = !DILocation(line: 2700, column: 12, scope: !8315)
!8317 = !DILocation(line: 2700, column: 8, scope: !8288)
!8318 = !DILocalVariable(name: "p3", scope: !8319, file: !3, line: 2701, type: !2272)
!8319 = distinct !DILexicalBlock(scope: !8315, file: !3, line: 2700, column: 16)
!8320 = !DILocation(line: 2701, column: 18, scope: !8319)
!8321 = !DILocation(line: 2701, column: 23, scope: !8319)
!8322 = !DILocation(line: 2701, column: 30, scope: !8319)
!8323 = !DILocation(line: 2701, column: 36, scope: !8319)
!8324 = !DILocation(line: 2701, column: 40, scope: !8319)
!8325 = !DILocation(line: 2701, column: 44, scope: !8319)
!8326 = !DILocation(line: 2702, column: 20, scope: !8319)
!8327 = !DILocation(line: 2702, column: 26, scope: !8319)
!8328 = !DILocation(line: 2702, column: 30, scope: !8319)
!8329 = !DILocation(line: 2702, column: 34, scope: !8319)
!8330 = !DILocation(line: 2702, column: 38, scope: !8319)
!8331 = !DILocation(line: 2702, column: 5, scope: !8319)
!8332 = !DILocation(line: 2703, column: 4, scope: !8319)
!8333 = !DILocation(line: 2705, column: 19, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8315, file: !3, line: 2704, column: 9)
!8335 = !DILocation(line: 2705, column: 25, scope: !8334)
!8336 = !DILocation(line: 2705, column: 29, scope: !8334)
!8337 = !DILocation(line: 2705, column: 33, scope: !8334)
!8338 = !DILocation(line: 2705, column: 5, scope: !8334)
!8339 = !DILocation(line: 2708, column: 2, scope: !8277)
!8340 = !DILocalVariable(name: "no", scope: !8341, file: !3, line: 2710, type: !2273)
!8341 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 2709, column: 7)
!8342 = !DILocation(line: 2710, column: 16, scope: !8341)
!8343 = !DILocation(line: 2710, column: 21, scope: !8341)
!8344 = !DILocation(line: 2710, column: 28, scope: !8341)
!8345 = !DILocation(line: 2710, column: 36, scope: !8341)
!8346 = !DILocation(line: 2710, column: 43, scope: !8341)
!8347 = !DILocation(line: 2710, column: 49, scope: !8341)
!8348 = !DILocation(line: 2710, column: 59, scope: !8341)
!8349 = !DILocation(line: 2710, column: 63, scope: !8341)
!8350 = !DILocation(line: 2710, column: 34, scope: !8341)
!8351 = !DILocation(line: 2710, column: 76, scope: !8341)
!8352 = !DILocation(line: 2711, column: 28, scope: !8341)
!8353 = !DILocation(line: 2711, column: 34, scope: !8341)
!8354 = !DILocation(line: 2711, column: 3, scope: !8341)
!8355 = !DILocation(line: 2713, column: 1, scope: !8237)
!8356 = distinct !DISubprogram(name: "SetTSpace", scope: !3, file: !3, line: 2715, type: !8077, scopeLine: 2716, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!8357 = !DILocalVariable(name: "pContext", arg: 1, scope: !8356, file: !3, line: 2715, type: !8063)
!8358 = !DILocation(line: 2715, column: 49, scope: !8356)
!8359 = !DILocalVariable(name: "fvTangent", arg: 2, scope: !8356, file: !3, line: 2715, type: !2272)
!8360 = !DILocation(line: 2715, column: 71, scope: !8356)
!8361 = !DILocalVariable(name: "fSign", arg: 3, scope: !8356, file: !3, line: 2715, type: !2114)
!8362 = !DILocation(line: 2715, column: 97, scope: !8356)
!8363 = !DILocalVariable(name: "face_num", arg: 4, scope: !8356, file: !3, line: 2715, type: !3793)
!8364 = !DILocation(line: 2715, column: 114, scope: !8356)
!8365 = !DILocalVariable(name: "iVert", arg: 5, scope: !8356, file: !3, line: 2715, type: !3793)
!8366 = !DILocation(line: 2715, column: 134, scope: !8356)
!8367 = !DILocalVariable(name: "pMesh", scope: !8356, file: !3, line: 2718, type: !2916)
!8368 = !DILocation(line: 2718, column: 22, scope: !8356)
!8369 = !DILocation(line: 2718, column: 53, scope: !8356)
!8370 = !DILocation(line: 2718, column: 63, scope: !8356)
!8371 = !DILocation(line: 2718, column: 30, scope: !8356)
!8372 = !DILocalVariable(name: "pRes", scope: !8356, file: !3, line: 2719, type: !320)
!8373 = !DILocation(line: 2719, column: 9, scope: !8356)
!8374 = !DILocation(line: 2719, column: 16, scope: !8356)
!8375 = !DILocation(line: 2719, column: 23, scope: !8356)
!8376 = !DILocation(line: 2719, column: 35, scope: !8356)
!8377 = !DILocation(line: 2719, column: 33, scope: !8356)
!8378 = !DILocation(line: 2719, column: 46, scope: !8356)
!8379 = !DILocation(line: 2719, column: 44, scope: !8356)
!8380 = !DILocation(line: 2720, column: 13, scope: !8356)
!8381 = !DILocation(line: 2720, column: 19, scope: !8356)
!8382 = !DILocation(line: 2720, column: 2, scope: !8356)
!8383 = !DILocation(line: 2721, column: 12, scope: !8356)
!8384 = !DILocation(line: 2721, column: 2, scope: !8356)
!8385 = !DILocation(line: 2721, column: 10, scope: !8356)
!8386 = !DILocation(line: 2722, column: 1, scope: !8356)
!8387 = distinct !DISubprogram(name: "DM_calc_auto_bump_scale", scope: !3, file: !3, line: 2791, type: !2106, scopeLine: 2792, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!8388 = !DILocalVariable(name: "dm", arg: 1, scope: !8387, file: !3, line: 2791, type: !2108)
!8389 = !DILocation(line: 2791, column: 43, scope: !8387)
!8390 = !DILocalVariable(name: "totface", scope: !8387, file: !3, line: 2794, type: !156)
!8391 = !DILocation(line: 2794, column: 6, scope: !8387)
!8392 = !DILocation(line: 2794, column: 16, scope: !8387)
!8393 = !DILocation(line: 2794, column: 20, scope: !8387)
!8394 = !DILocation(line: 2794, column: 36, scope: !8387)
!8395 = !DILocalVariable(name: "mvert", scope: !8387, file: !3, line: 2796, type: !2812)
!8396 = !DILocation(line: 2796, column: 9, scope: !8387)
!8397 = !DILocation(line: 2796, column: 17, scope: !8387)
!8398 = !DILocation(line: 2796, column: 21, scope: !8387)
!8399 = !DILocation(line: 2796, column: 34, scope: !8387)
!8400 = !DILocalVariable(name: "mface", scope: !8387, file: !3, line: 2797, type: !304)
!8401 = !DILocation(line: 2797, column: 9, scope: !8387)
!8402 = !DILocation(line: 2797, column: 17, scope: !8387)
!8403 = !DILocation(line: 2797, column: 21, scope: !8387)
!8404 = !DILocation(line: 2797, column: 38, scope: !8387)
!8405 = !DILocalVariable(name: "mtface", scope: !8387, file: !3, line: 2798, type: !2926)
!8406 = !DILocation(line: 2798, column: 10, scope: !8387)
!8407 = !DILocation(line: 2798, column: 19, scope: !8387)
!8408 = !DILocation(line: 2798, column: 23, scope: !8387)
!8409 = !DILocation(line: 2798, column: 44, scope: !8387)
!8410 = !DILocation(line: 2800, column: 6, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8387, file: !3, line: 2800, column: 6)
!8412 = !DILocation(line: 2800, column: 6, scope: !8387)
!8413 = !DILocalVariable(name: "dsum", scope: !8414, file: !3, line: 2801, type: !325)
!8414 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 2800, column: 14)
!8415 = !DILocation(line: 2801, column: 10, scope: !8414)
!8416 = !DILocalVariable(name: "nr_accumulated", scope: !8414, file: !3, line: 2802, type: !156)
!8417 = !DILocation(line: 2802, column: 7, scope: !8414)
!8418 = !DILocalVariable(name: "f", scope: !8414, file: !3, line: 2803, type: !156)
!8419 = !DILocation(line: 2803, column: 7, scope: !8414)
!8420 = !DILocation(line: 2805, column: 10, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8414, file: !3, line: 2805, column: 3)
!8422 = !DILocation(line: 2805, column: 8, scope: !8421)
!8423 = !DILocation(line: 2805, column: 15, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 2805, column: 3)
!8425 = !DILocation(line: 2805, column: 19, scope: !8424)
!8426 = !DILocation(line: 2805, column: 17, scope: !8424)
!8427 = !DILocation(line: 2805, column: 3, scope: !8421)
!8428 = !DILocalVariable(name: "verts", scope: !8429, file: !3, line: 2807, type: !8431)
!8429 = distinct !DILexicalBlock(scope: !8430, file: !3, line: 2806, column: 4)
!8430 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 2805, column: 33)
!8431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 256, elements: !657)
!8432 = !DILocation(line: 2807, column: 12, scope: !8429)
!8433 = !DILocalVariable(name: "tex_coords", scope: !8429, file: !3, line: 2807, type: !8431)
!8434 = !DILocation(line: 2807, column: 23, scope: !8429)
!8435 = !DILocalVariable(name: "nr_verts", scope: !8429, file: !3, line: 2808, type: !3793)
!8436 = !DILocation(line: 2808, column: 15, scope: !8429)
!8437 = !DILocation(line: 2808, column: 26, scope: !8429)
!8438 = !DILocation(line: 2808, column: 32, scope: !8429)
!8439 = !DILocation(line: 2808, column: 35, scope: !8429)
!8440 = !DILocation(line: 2808, column: 38, scope: !8429)
!8441 = !DILocalVariable(name: "is_degenerate", scope: !8429, file: !3, line: 2809, type: !327)
!8442 = !DILocation(line: 2809, column: 10, scope: !8429)
!8443 = !DILocalVariable(name: "i", scope: !8429, file: !3, line: 2810, type: !156)
!8444 = !DILocation(line: 2810, column: 9, scope: !8429)
!8445 = !DILocation(line: 2812, column: 16, scope: !8429)
!8446 = !DILocation(line: 2812, column: 22, scope: !8429)
!8447 = !DILocation(line: 2812, column: 28, scope: !8429)
!8448 = !DILocation(line: 2812, column: 31, scope: !8429)
!8449 = !DILocation(line: 2812, column: 35, scope: !8429)
!8450 = !DILocation(line: 2812, column: 5, scope: !8429)
!8451 = !DILocation(line: 2812, column: 14, scope: !8429)
!8452 = !DILocation(line: 2812, column: 50, scope: !8429)
!8453 = !DILocation(line: 2812, column: 56, scope: !8429)
!8454 = !DILocation(line: 2812, column: 62, scope: !8429)
!8455 = !DILocation(line: 2812, column: 65, scope: !8429)
!8456 = !DILocation(line: 2812, column: 69, scope: !8429)
!8457 = !DILocation(line: 2812, column: 39, scope: !8429)
!8458 = !DILocation(line: 2812, column: 48, scope: !8429)
!8459 = !DILocation(line: 2812, column: 84, scope: !8429)
!8460 = !DILocation(line: 2812, column: 90, scope: !8429)
!8461 = !DILocation(line: 2812, column: 96, scope: !8429)
!8462 = !DILocation(line: 2812, column: 99, scope: !8429)
!8463 = !DILocation(line: 2812, column: 103, scope: !8429)
!8464 = !DILocation(line: 2812, column: 73, scope: !8429)
!8465 = !DILocation(line: 2812, column: 82, scope: !8429)
!8466 = !DILocation(line: 2813, column: 21, scope: !8429)
!8467 = !DILocation(line: 2813, column: 28, scope: !8429)
!8468 = !DILocation(line: 2813, column: 31, scope: !8429)
!8469 = !DILocation(line: 2813, column: 5, scope: !8429)
!8470 = !DILocation(line: 2813, column: 19, scope: !8429)
!8471 = !DILocation(line: 2813, column: 54, scope: !8429)
!8472 = !DILocation(line: 2813, column: 61, scope: !8429)
!8473 = !DILocation(line: 2813, column: 64, scope: !8429)
!8474 = !DILocation(line: 2813, column: 38, scope: !8429)
!8475 = !DILocation(line: 2813, column: 52, scope: !8429)
!8476 = !DILocation(line: 2813, column: 87, scope: !8429)
!8477 = !DILocation(line: 2813, column: 94, scope: !8429)
!8478 = !DILocation(line: 2813, column: 97, scope: !8429)
!8479 = !DILocation(line: 2813, column: 71, scope: !8429)
!8480 = !DILocation(line: 2813, column: 85, scope: !8429)
!8481 = !DILocation(line: 2814, column: 9, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 2814, column: 9)
!8483 = !DILocation(line: 2814, column: 18, scope: !8482)
!8484 = !DILocation(line: 2814, column: 9, scope: !8429)
!8485 = !DILocation(line: 2815, column: 17, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 2814, column: 24)
!8487 = !DILocation(line: 2815, column: 23, scope: !8486)
!8488 = !DILocation(line: 2815, column: 29, scope: !8486)
!8489 = !DILocation(line: 2815, column: 32, scope: !8486)
!8490 = !DILocation(line: 2815, column: 36, scope: !8486)
!8491 = !DILocation(line: 2815, column: 6, scope: !8486)
!8492 = !DILocation(line: 2815, column: 15, scope: !8486)
!8493 = !DILocation(line: 2816, column: 22, scope: !8486)
!8494 = !DILocation(line: 2816, column: 29, scope: !8486)
!8495 = !DILocation(line: 2816, column: 32, scope: !8486)
!8496 = !DILocation(line: 2816, column: 6, scope: !8486)
!8497 = !DILocation(line: 2816, column: 20, scope: !8486)
!8498 = !DILocation(line: 2817, column: 5, scope: !8486)
!8499 = !DILocation(line: 2820, column: 19, scope: !8429)
!8500 = !DILocation(line: 2821, column: 21, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 2821, column: 9)
!8502 = !DILocation(line: 2821, column: 31, scope: !8501)
!8503 = !DILocation(line: 2821, column: 9, scope: !8501)
!8504 = !DILocation(line: 2821, column: 41, scope: !8501)
!8505 = !DILocation(line: 2821, column: 56, scope: !8501)
!8506 = !DILocation(line: 2821, column: 66, scope: !8501)
!8507 = !DILocation(line: 2821, column: 44, scope: !8501)
!8508 = !DILocation(line: 2821, column: 76, scope: !8501)
!8509 = !DILocation(line: 2821, column: 91, scope: !8501)
!8510 = !DILocation(line: 2821, column: 101, scope: !8501)
!8511 = !DILocation(line: 2821, column: 79, scope: !8501)
!8512 = !DILocation(line: 2821, column: 111, scope: !8501)
!8513 = !DILocation(line: 2822, column: 21, scope: !8501)
!8514 = !DILocation(line: 2822, column: 36, scope: !8501)
!8515 = !DILocation(line: 2822, column: 9, scope: !8501)
!8516 = !DILocation(line: 2822, column: 51, scope: !8501)
!8517 = !DILocation(line: 2822, column: 66, scope: !8501)
!8518 = !DILocation(line: 2822, column: 81, scope: !8501)
!8519 = !DILocation(line: 2822, column: 54, scope: !8501)
!8520 = !DILocation(line: 2822, column: 96, scope: !8501)
!8521 = !DILocation(line: 2822, column: 111, scope: !8501)
!8522 = !DILocation(line: 2822, column: 126, scope: !8501)
!8523 = !DILocation(line: 2822, column: 99, scope: !8501)
!8524 = !DILocation(line: 2821, column: 9, scope: !8429)
!8525 = !DILocation(line: 2824, column: 20, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 2823, column: 5)
!8527 = !DILocation(line: 2825, column: 5, scope: !8526)
!8528 = !DILocation(line: 2828, column: 9, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 2828, column: 9)
!8530 = !DILocation(line: 2828, column: 23, scope: !8529)
!8531 = !DILocation(line: 2828, column: 28, scope: !8529)
!8532 = !DILocation(line: 2828, column: 31, scope: !8529)
!8533 = !DILocation(line: 2828, column: 40, scope: !8529)
!8534 = !DILocation(line: 2828, column: 9, scope: !8429)
!8535 = !DILocation(line: 2829, column: 22, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 2829, column: 10)
!8537 = distinct !DILexicalBlock(scope: !8529, file: !3, line: 2828, column: 46)
!8538 = !DILocation(line: 2829, column: 32, scope: !8536)
!8539 = !DILocation(line: 2829, column: 10, scope: !8536)
!8540 = !DILocation(line: 2829, column: 42, scope: !8536)
!8541 = !DILocation(line: 2829, column: 57, scope: !8536)
!8542 = !DILocation(line: 2829, column: 67, scope: !8536)
!8543 = !DILocation(line: 2829, column: 45, scope: !8536)
!8544 = !DILocation(line: 2829, column: 77, scope: !8536)
!8545 = !DILocation(line: 2829, column: 92, scope: !8536)
!8546 = !DILocation(line: 2829, column: 102, scope: !8536)
!8547 = !DILocation(line: 2829, column: 80, scope: !8536)
!8548 = !DILocation(line: 2829, column: 112, scope: !8536)
!8549 = !DILocation(line: 2830, column: 22, scope: !8536)
!8550 = !DILocation(line: 2830, column: 37, scope: !8536)
!8551 = !DILocation(line: 2830, column: 10, scope: !8536)
!8552 = !DILocation(line: 2830, column: 52, scope: !8536)
!8553 = !DILocation(line: 2830, column: 67, scope: !8536)
!8554 = !DILocation(line: 2830, column: 82, scope: !8536)
!8555 = !DILocation(line: 2830, column: 55, scope: !8536)
!8556 = !DILocation(line: 2830, column: 97, scope: !8536)
!8557 = !DILocation(line: 2830, column: 112, scope: !8536)
!8558 = !DILocation(line: 2830, column: 127, scope: !8536)
!8559 = !DILocation(line: 2830, column: 100, scope: !8536)
!8560 = !DILocation(line: 2829, column: 10, scope: !8537)
!8561 = !DILocation(line: 2832, column: 21, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 2831, column: 6)
!8563 = !DILocation(line: 2833, column: 6, scope: !8562)
!8564 = !DILocation(line: 2836, column: 10, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 2836, column: 10)
!8566 = !DILocation(line: 2836, column: 24, scope: !8565)
!8567 = !DILocation(line: 2836, column: 10, scope: !8537)
!8568 = !DILocalVariable(name: "prev_edge", scope: !8569, file: !3, line: 2837, type: !880)
!8569 = distinct !DILexicalBlock(scope: !8565, file: !3, line: 2836, column: 30)
!8570 = !DILocation(line: 2837, column: 13, scope: !8569)
!8571 = !DILocalVariable(name: "is_signed", scope: !8569, file: !3, line: 2838, type: !327)
!8572 = !DILocation(line: 2838, column: 12, scope: !8569)
!8573 = !DILocation(line: 2839, column: 19, scope: !8569)
!8574 = !DILocation(line: 2839, column: 30, scope: !8569)
!8575 = !DILocation(line: 2839, column: 45, scope: !8569)
!8576 = !DILocation(line: 2839, column: 7, scope: !8569)
!8577 = !DILocation(line: 2841, column: 9, scope: !8569)
!8578 = !DILocation(line: 2842, column: 7, scope: !8569)
!8579 = !DILocation(line: 2842, column: 14, scope: !8569)
!8580 = !DILocation(line: 2842, column: 28, scope: !8569)
!8581 = !DILocation(line: 2842, column: 33, scope: !8569)
!8582 = !DILocation(line: 2842, column: 36, scope: !8569)
!8583 = !DILocation(line: 2842, column: 38, scope: !8569)
!8584 = !DILocation(line: 0, scope: !8569)
!8585 = !DILocalVariable(name: "cur_edge", scope: !8586, file: !3, line: 2843, type: !880)
!8586 = distinct !DILexicalBlock(scope: !8569, file: !3, line: 2842, column: 43)
!8587 = !DILocation(line: 2843, column: 14, scope: !8586)
!8588 = !DILocalVariable(name: "signed_area", scope: !8586, file: !3, line: 2843, type: !321)
!8589 = !DILocation(line: 2843, column: 27, scope: !8586)
!8590 = !DILocation(line: 2844, column: 20, scope: !8586)
!8591 = !DILocation(line: 2844, column: 42, scope: !8586)
!8592 = !DILocation(line: 2844, column: 44, scope: !8586)
!8593 = !DILocation(line: 2844, column: 49, scope: !8586)
!8594 = !DILocation(line: 2844, column: 30, scope: !8586)
!8595 = !DILocation(line: 2844, column: 68, scope: !8586)
!8596 = !DILocation(line: 2844, column: 57, scope: !8586)
!8597 = !DILocation(line: 2844, column: 8, scope: !8586)
!8598 = !DILocation(line: 2845, column: 22, scope: !8586)
!8599 = !DILocation(line: 2845, column: 37, scope: !8586)
!8600 = !DILocation(line: 2845, column: 35, scope: !8586)
!8601 = !DILocation(line: 2845, column: 51, scope: !8586)
!8602 = !DILocation(line: 2845, column: 66, scope: !8586)
!8603 = !DILocation(line: 2845, column: 64, scope: !8586)
!8604 = !DILocation(line: 2845, column: 49, scope: !8586)
!8605 = !DILocation(line: 2845, column: 20, scope: !8586)
!8606 = !DILocation(line: 2847, column: 12, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8586, file: !3, line: 2847, column: 12)
!8608 = !DILocation(line: 2847, column: 14, scope: !8607)
!8609 = !DILocation(line: 2847, column: 12, scope: !8586)
!8610 = !DILocation(line: 2848, column: 22, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 2847, column: 20)
!8612 = !DILocation(line: 2848, column: 34, scope: !8611)
!8613 = !DILocation(line: 2848, column: 21, scope: !8611)
!8614 = !DILocation(line: 2848, column: 19, scope: !8611)
!8615 = !DILocation(line: 2849, column: 8, scope: !8611)
!8616 = !DILocation(line: 2850, column: 18, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 2850, column: 17)
!8618 = !DILocation(line: 2850, column: 28, scope: !8617)
!8619 = !DILocation(line: 2850, column: 38, scope: !8617)
!8620 = !DILocation(line: 2850, column: 50, scope: !8617)
!8621 = !DILocation(line: 2850, column: 34, scope: !8617)
!8622 = !DILocation(line: 2850, column: 17, scope: !8607)
!8623 = !DILocation(line: 2851, column: 23, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 2850, column: 59)
!8625 = !DILocation(line: 2852, column: 8, scope: !8624)
!8626 = !DILocation(line: 2854, column: 12, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8586, file: !3, line: 2854, column: 12)
!8628 = !DILocation(line: 2854, column: 26, scope: !8627)
!8629 = !DILocation(line: 2854, column: 12, scope: !8586)
!8630 = !DILocation(line: 2855, column: 20, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 2854, column: 32)
!8632 = !DILocation(line: 2855, column: 31, scope: !8631)
!8633 = !DILocation(line: 2855, column: 9, scope: !8631)
!8634 = !DILocation(line: 2856, column: 10, scope: !8631)
!8635 = !DILocation(line: 2857, column: 8, scope: !8631)
!8636 = distinct !{!8636, !8578, !8637}
!8637 = !DILocation(line: 2858, column: 7, scope: !8569)
!8638 = !DILocation(line: 2859, column: 6, scope: !8569)
!8639 = !DILocation(line: 2860, column: 5, scope: !8537)
!8640 = !DILocation(line: 2863, column: 9, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 2863, column: 9)
!8642 = !DILocation(line: 2863, column: 23, scope: !8641)
!8643 = !DILocation(line: 2863, column: 9, scope: !8429)
!8644 = !DILocalVariable(name: "nr_tris_to_pile", scope: !8645, file: !3, line: 2864, type: !156)
!8645 = distinct !DILexicalBlock(scope: !8641, file: !3, line: 2863, column: 29)
!8646 = !DILocation(line: 2864, column: 10, scope: !8645)
!8647 = !DILocalVariable(name: "offs", scope: !8645, file: !3, line: 2866, type: !156)
!8648 = !DILocation(line: 2866, column: 10, scope: !8645)
!8649 = !DILocation(line: 2867, column: 10, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 2867, column: 10)
!8651 = !DILocation(line: 2867, column: 19, scope: !8650)
!8652 = !DILocation(line: 2867, column: 10, scope: !8645)
!8653 = !DILocalVariable(name: "pos_len_diag0", scope: !8654, file: !3, line: 2868, type: !321)
!8654 = distinct !DILexicalBlock(scope: !8650, file: !3, line: 2867, column: 25)
!8655 = !DILocation(line: 2868, column: 13, scope: !8654)
!8656 = !DILocalVariable(name: "pos_len_diag1", scope: !8654, file: !3, line: 2868, type: !321)
!8657 = !DILocation(line: 2868, column: 28, scope: !8654)
!8658 = !DILocation(line: 2870, column: 40, scope: !8654)
!8659 = !DILocation(line: 2870, column: 50, scope: !8654)
!8660 = !DILocation(line: 2870, column: 23, scope: !8654)
!8661 = !DILocation(line: 2870, column: 21, scope: !8654)
!8662 = !DILocation(line: 2871, column: 40, scope: !8654)
!8663 = !DILocation(line: 2871, column: 50, scope: !8654)
!8664 = !DILocation(line: 2871, column: 23, scope: !8654)
!8665 = !DILocation(line: 2871, column: 21, scope: !8654)
!8666 = !DILocation(line: 2873, column: 11, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8654, file: !3, line: 2873, column: 11)
!8668 = !DILocation(line: 2873, column: 27, scope: !8667)
!8669 = !DILocation(line: 2873, column: 25, scope: !8667)
!8670 = !DILocation(line: 2873, column: 11, scope: !8654)
!8671 = !DILocation(line: 2874, column: 13, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8667, file: !3, line: 2873, column: 42)
!8673 = !DILocation(line: 2875, column: 7, scope: !8672)
!8674 = !DILocation(line: 2876, column: 16, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8667, file: !3, line: 2876, column: 16)
!8676 = !DILocation(line: 2876, column: 33, scope: !8675)
!8677 = !DILocation(line: 2876, column: 30, scope: !8675)
!8678 = !DILocation(line: 2876, column: 16, scope: !8667)
!8679 = !DILocalVariable(name: "tex_len_diag0", scope: !8680, file: !3, line: 2877, type: !321)
!8680 = distinct !DILexicalBlock(scope: !8675, file: !3, line: 2876, column: 48)
!8681 = !DILocation(line: 2877, column: 14, scope: !8680)
!8682 = !DILocalVariable(name: "tex_len_diag1", scope: !8680, file: !3, line: 2877, type: !321)
!8683 = !DILocation(line: 2877, column: 29, scope: !8680)
!8684 = !DILocation(line: 2879, column: 41, scope: !8680)
!8685 = !DILocation(line: 2879, column: 56, scope: !8680)
!8686 = !DILocation(line: 2879, column: 24, scope: !8680)
!8687 = !DILocation(line: 2879, column: 22, scope: !8680)
!8688 = !DILocation(line: 2880, column: 41, scope: !8680)
!8689 = !DILocation(line: 2880, column: 56, scope: !8680)
!8690 = !DILocation(line: 2880, column: 24, scope: !8680)
!8691 = !DILocation(line: 2880, column: 22, scope: !8680)
!8692 = !DILocation(line: 2882, column: 12, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8680, file: !3, line: 2882, column: 12)
!8694 = !DILocation(line: 2882, column: 28, scope: !8693)
!8695 = !DILocation(line: 2882, column: 26, scope: !8693)
!8696 = !DILocation(line: 2882, column: 12, scope: !8680)
!8697 = !DILocation(line: 2883, column: 14, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8693, file: !3, line: 2882, column: 43)
!8699 = !DILocation(line: 2884, column: 8, scope: !8698)
!8700 = !DILocation(line: 2885, column: 7, scope: !8680)
!8701 = !DILocation(line: 2886, column: 6, scope: !8654)
!8702 = !DILocation(line: 2887, column: 24, scope: !8645)
!8703 = !DILocation(line: 2887, column: 33, scope: !8645)
!8704 = !DILocation(line: 2887, column: 22, scope: !8645)
!8705 = !DILocation(line: 2888, column: 10, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 2888, column: 10)
!8707 = !DILocation(line: 2888, column: 26, scope: !8706)
!8708 = !DILocation(line: 2888, column: 31, scope: !8706)
!8709 = !DILocation(line: 2888, column: 34, scope: !8706)
!8710 = !DILocation(line: 2888, column: 50, scope: !8706)
!8711 = !DILocation(line: 2888, column: 10, scope: !8645)
!8712 = !DILocalVariable(name: "indices", scope: !8713, file: !3, line: 2889, type: !8714)
!8713 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 2888, column: 56)
!8714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3793, size: 192, elements: !1262)
!8715 = !DILocation(line: 2889, column: 17, scope: !8713)
!8716 = !DILocation(line: 2889, column: 30, scope: !8713)
!8717 = !DILocation(line: 2889, column: 31, scope: !8713)
!8718 = !DILocation(line: 2889, column: 36, scope: !8713)
!8719 = !DILocation(line: 2889, column: 41, scope: !8713)
!8720 = !DILocation(line: 2889, column: 46, scope: !8713)
!8721 = !DILocation(line: 2889, column: 51, scope: !8713)
!8722 = !DILocation(line: 2889, column: 56, scope: !8713)
!8723 = !DILocation(line: 2889, column: 61, scope: !8713)
!8724 = !DILocation(line: 2889, column: 66, scope: !8713)
!8725 = !DILocation(line: 2889, column: 71, scope: !8713)
!8726 = !DILocation(line: 2889, column: 76, scope: !8713)
!8727 = !DILocation(line: 2889, column: 82, scope: !8713)
!8728 = !DILocation(line: 2889, column: 87, scope: !8713)
!8729 = !DILocation(line: 2889, column: 92, scope: !8713)
!8730 = !DILocalVariable(name: "t", scope: !8713, file: !3, line: 2890, type: !156)
!8731 = !DILocation(line: 2890, column: 11, scope: !8713)
!8732 = !DILocation(line: 2891, column: 14, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8713, file: !3, line: 2891, column: 7)
!8734 = !DILocation(line: 2891, column: 12, scope: !8733)
!8735 = !DILocation(line: 2891, column: 19, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !8733, file: !3, line: 2891, column: 7)
!8737 = !DILocation(line: 2891, column: 23, scope: !8736)
!8738 = !DILocation(line: 2891, column: 21, scope: !8736)
!8739 = !DILocation(line: 2891, column: 7, scope: !8733)
!8740 = !DILocalVariable(name: "f2x_area_uv", scope: !8741, file: !3, line: 2892, type: !321)
!8741 = distinct !DILexicalBlock(scope: !8736, file: !3, line: 2891, column: 45)
!8742 = !DILocation(line: 2892, column: 14, scope: !8741)
!8743 = !DILocalVariable(name: "p0", scope: !8741, file: !3, line: 2893, type: !2272)
!8744 = !DILocation(line: 2893, column: 21, scope: !8741)
!8745 = !DILocation(line: 2893, column: 40, scope: !8741)
!8746 = !DILocation(line: 2893, column: 42, scope: !8741)
!8747 = !DILocation(line: 2893, column: 46, scope: !8741)
!8748 = !DILocation(line: 2893, column: 32, scope: !8741)
!8749 = !DILocation(line: 2893, column: 26, scope: !8741)
!8750 = !DILocalVariable(name: "p1", scope: !8741, file: !3, line: 2894, type: !2272)
!8751 = !DILocation(line: 2894, column: 21, scope: !8741)
!8752 = !DILocation(line: 2894, column: 40, scope: !8741)
!8753 = !DILocation(line: 2894, column: 42, scope: !8741)
!8754 = !DILocation(line: 2894, column: 46, scope: !8741)
!8755 = !DILocation(line: 2894, column: 32, scope: !8741)
!8756 = !DILocation(line: 2894, column: 26, scope: !8741)
!8757 = !DILocalVariable(name: "p2", scope: !8741, file: !3, line: 2895, type: !2272)
!8758 = !DILocation(line: 2895, column: 21, scope: !8741)
!8759 = !DILocation(line: 2895, column: 40, scope: !8741)
!8760 = !DILocation(line: 2895, column: 42, scope: !8741)
!8761 = !DILocation(line: 2895, column: 46, scope: !8741)
!8762 = !DILocation(line: 2895, column: 32, scope: !8741)
!8763 = !DILocation(line: 2895, column: 26, scope: !8741)
!8764 = !DILocalVariable(name: "edge_t0", scope: !8741, file: !3, line: 2897, type: !880)
!8765 = !DILocation(line: 2897, column: 14, scope: !8741)
!8766 = !DILocalVariable(name: "edge_t1", scope: !8741, file: !3, line: 2897, type: !880)
!8767 = !DILocation(line: 2897, column: 26, scope: !8741)
!8768 = !DILocation(line: 2898, column: 20, scope: !8741)
!8769 = !DILocation(line: 2898, column: 48, scope: !8741)
!8770 = !DILocation(line: 2898, column: 50, scope: !8741)
!8771 = !DILocation(line: 2898, column: 54, scope: !8741)
!8772 = !DILocation(line: 2898, column: 40, scope: !8741)
!8773 = !DILocation(line: 2898, column: 29, scope: !8741)
!8774 = !DILocation(line: 2898, column: 80, scope: !8741)
!8775 = !DILocation(line: 2898, column: 82, scope: !8741)
!8776 = !DILocation(line: 2898, column: 86, scope: !8741)
!8777 = !DILocation(line: 2898, column: 72, scope: !8741)
!8778 = !DILocation(line: 2898, column: 61, scope: !8741)
!8779 = !DILocation(line: 2898, column: 8, scope: !8741)
!8780 = !DILocation(line: 2899, column: 20, scope: !8741)
!8781 = !DILocation(line: 2899, column: 48, scope: !8741)
!8782 = !DILocation(line: 2899, column: 50, scope: !8741)
!8783 = !DILocation(line: 2899, column: 54, scope: !8741)
!8784 = !DILocation(line: 2899, column: 40, scope: !8741)
!8785 = !DILocation(line: 2899, column: 29, scope: !8741)
!8786 = !DILocation(line: 2899, column: 80, scope: !8741)
!8787 = !DILocation(line: 2899, column: 82, scope: !8741)
!8788 = !DILocation(line: 2899, column: 86, scope: !8741)
!8789 = !DILocation(line: 2899, column: 72, scope: !8741)
!8790 = !DILocation(line: 2899, column: 61, scope: !8741)
!8791 = !DILocation(line: 2899, column: 8, scope: !8741)
!8792 = !DILocation(line: 2901, column: 28, scope: !8741)
!8793 = !DILocation(line: 2901, column: 41, scope: !8741)
!8794 = !DILocation(line: 2901, column: 39, scope: !8741)
!8795 = !DILocation(line: 2901, column: 54, scope: !8741)
!8796 = !DILocation(line: 2901, column: 67, scope: !8741)
!8797 = !DILocation(line: 2901, column: 65, scope: !8741)
!8798 = !DILocation(line: 2901, column: 52, scope: !8741)
!8799 = !DILocation(line: 2901, column: 22, scope: !8741)
!8800 = !DILocation(line: 2901, column: 20, scope: !8741)
!8801 = !DILocation(line: 2902, column: 12, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8741, file: !3, line: 2902, column: 12)
!8803 = !DILocation(line: 2902, column: 24, scope: !8802)
!8804 = !DILocation(line: 2902, column: 12, scope: !8741)
!8805 = !DILocalVariable(name: "norm", scope: !8806, file: !3, line: 2903, type: !357)
!8806 = distinct !DILexicalBlock(scope: !8802, file: !3, line: 2902, column: 39)
!8807 = !DILocation(line: 2903, column: 15, scope: !8806)
!8808 = !DILocalVariable(name: "v0", scope: !8806, file: !3, line: 2903, type: !357)
!8809 = !DILocation(line: 2903, column: 24, scope: !8806)
!8810 = !DILocalVariable(name: "v1", scope: !8806, file: !3, line: 2903, type: !357)
!8811 = !DILocation(line: 2903, column: 31, scope: !8806)
!8812 = !DILocalVariable(name: "f2x_surf_area", scope: !8806, file: !3, line: 2903, type: !321)
!8813 = !DILocation(line: 2903, column: 38, scope: !8806)
!8814 = !DILocalVariable(name: "fsurf_ratio", scope: !8806, file: !3, line: 2903, type: !321)
!8815 = !DILocation(line: 2903, column: 53, scope: !8806)
!8816 = !DILocation(line: 2904, column: 21, scope: !8806)
!8817 = !DILocation(line: 2904, column: 25, scope: !8806)
!8818 = !DILocation(line: 2904, column: 29, scope: !8806)
!8819 = !DILocation(line: 2904, column: 9, scope: !8806)
!8820 = !DILocation(line: 2905, column: 21, scope: !8806)
!8821 = !DILocation(line: 2905, column: 25, scope: !8806)
!8822 = !DILocation(line: 2905, column: 29, scope: !8806)
!8823 = !DILocation(line: 2905, column: 9, scope: !8806)
!8824 = !DILocation(line: 2906, column: 23, scope: !8806)
!8825 = !DILocation(line: 2906, column: 29, scope: !8806)
!8826 = !DILocation(line: 2906, column: 33, scope: !8806)
!8827 = !DILocation(line: 2906, column: 9, scope: !8806)
!8828 = !DILocation(line: 2908, column: 32, scope: !8806)
!8829 = !DILocation(line: 2908, column: 25, scope: !8806)
!8830 = !DILocation(line: 2908, column: 23, scope: !8806)
!8831 = !DILocation(line: 2909, column: 23, scope: !8806)
!8832 = !DILocation(line: 2909, column: 39, scope: !8806)
!8833 = !DILocation(line: 2909, column: 37, scope: !8806)
!8834 = !DILocation(line: 2909, column: 21, scope: !8806)
!8835 = !DILocation(line: 2911, column: 23, scope: !8806)
!8836 = !DILocation(line: 2912, column: 26, scope: !8806)
!8837 = !DILocation(line: 2912, column: 17, scope: !8806)
!8838 = !DILocation(line: 2912, column: 14, scope: !8806)
!8839 = !DILocation(line: 2913, column: 8, scope: !8806)
!8840 = !DILocation(line: 2914, column: 7, scope: !8741)
!8841 = !DILocation(line: 2891, column: 41, scope: !8736)
!8842 = !DILocation(line: 2891, column: 7, scope: !8736)
!8843 = distinct !{!8843, !8739, !8844}
!8844 = !DILocation(line: 2914, column: 7, scope: !8733)
!8845 = !DILocation(line: 2915, column: 6, scope: !8713)
!8846 = !DILocation(line: 2916, column: 5, scope: !8645)
!8847 = !DILocation(line: 2918, column: 3, scope: !8430)
!8848 = !DILocation(line: 2805, column: 29, scope: !8424)
!8849 = !DILocation(line: 2805, column: 3, scope: !8424)
!8850 = distinct !{!8850, !8427, !8851}
!8851 = !DILocation(line: 2918, column: 3, scope: !8421)
!8852 = !DILocalVariable(name: "avg_area_ratio", scope: !8853, file: !3, line: 2922, type: !2114)
!8853 = distinct !DILexicalBlock(scope: !8414, file: !3, line: 2921, column: 3)
!8854 = !DILocation(line: 2922, column: 16, scope: !8853)
!8855 = !DILocation(line: 2922, column: 34, scope: !8853)
!8856 = !DILocation(line: 2922, column: 49, scope: !8853)
!8857 = !DILocation(line: 2922, column: 33, scope: !8853)
!8858 = !DILocation(line: 2922, column: 65, scope: !8853)
!8859 = !DILocation(line: 2922, column: 72, scope: !8853)
!8860 = !DILocation(line: 2922, column: 70, scope: !8853)
!8861 = !DILocation(line: 2922, column: 57, scope: !8853)
!8862 = !DILocalVariable(name: "use_as_render_bump_scale", scope: !8853, file: !3, line: 2923, type: !2114)
!8863 = !DILocation(line: 2923, column: 16, scope: !8853)
!8864 = !DILocation(line: 2923, column: 49, scope: !8853)
!8865 = !DILocation(line: 2923, column: 43, scope: !8853)
!8866 = !DILocation(line: 2924, column: 26, scope: !8853)
!8867 = !DILocation(line: 2924, column: 4, scope: !8853)
!8868 = !DILocation(line: 2924, column: 8, scope: !8853)
!8869 = !DILocation(line: 2924, column: 24, scope: !8853)
!8870 = !DILocation(line: 2926, column: 2, scope: !8414)
!8871 = !DILocation(line: 2928, column: 3, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 2927, column: 7)
!8873 = !DILocation(line: 2928, column: 7, scope: !8872)
!8874 = !DILocation(line: 2928, column: 23, scope: !8872)
!8875 = !DILocation(line: 2930, column: 1, scope: !8387)
!8876 = distinct !DISubprogram(name: "equals_v3v3", scope: !4729, file: !4729, line: 928, type: !8877, scopeLine: 929, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!8877 = !DISubroutineType(types: !8878)
!8878 = !{!327, !2272, !2272}
!8879 = !DILocalVariable(name: "v1", arg: 1, scope: !8876, file: !4729, line: 928, type: !2272)
!8880 = !DILocation(line: 928, column: 38, scope: !8876)
!8881 = !DILocalVariable(name: "v2", arg: 2, scope: !8876, file: !4729, line: 928, type: !2272)
!8882 = !DILocation(line: 928, column: 57, scope: !8876)
!8883 = !DILocation(line: 930, column: 11, scope: !8876)
!8884 = !DILocation(line: 930, column: 20, scope: !8876)
!8885 = !DILocation(line: 930, column: 17, scope: !8876)
!8886 = !DILocation(line: 930, column: 27, scope: !8876)
!8887 = !DILocation(line: 930, column: 31, scope: !8876)
!8888 = !DILocation(line: 930, column: 40, scope: !8876)
!8889 = !DILocation(line: 930, column: 37, scope: !8876)
!8890 = !DILocation(line: 930, column: 47, scope: !8876)
!8891 = !DILocation(line: 930, column: 51, scope: !8876)
!8892 = !DILocation(line: 930, column: 60, scope: !8876)
!8893 = !DILocation(line: 930, column: 57, scope: !8876)
!8894 = !DILocation(line: 0, scope: !8876)
!8895 = !DILocation(line: 930, column: 9, scope: !8876)
!8896 = !DILocation(line: 930, column: 2, scope: !8876)
!8897 = distinct !DISubprogram(name: "equals_v2v2", scope: !4729, file: !4729, line: 923, type: !8877, scopeLine: 924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!8898 = !DILocalVariable(name: "v1", arg: 1, scope: !8897, file: !4729, line: 923, type: !2272)
!8899 = !DILocation(line: 923, column: 38, scope: !8897)
!8900 = !DILocalVariable(name: "v2", arg: 2, scope: !8897, file: !4729, line: 923, type: !2272)
!8901 = !DILocation(line: 923, column: 57, scope: !8897)
!8902 = !DILocation(line: 925, column: 11, scope: !8897)
!8903 = !DILocation(line: 925, column: 20, scope: !8897)
!8904 = !DILocation(line: 925, column: 17, scope: !8897)
!8905 = !DILocation(line: 925, column: 27, scope: !8897)
!8906 = !DILocation(line: 925, column: 31, scope: !8897)
!8907 = !DILocation(line: 925, column: 40, scope: !8897)
!8908 = !DILocation(line: 925, column: 37, scope: !8897)
!8909 = !DILocation(line: 0, scope: !8897)
!8910 = !DILocation(line: 925, column: 9, scope: !8897)
!8911 = !DILocation(line: 925, column: 2, scope: !8897)
!8912 = distinct !DISubprogram(name: "sub_v2_v2v2", scope: !4729, file: !4729, line: 338, type: !8913, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!8913 = !DISubroutineType(types: !8914)
!8914 = !{null, !320, !2272, !2272}
!8915 = !DILocalVariable(name: "r", arg: 1, scope: !8912, file: !4729, line: 338, type: !320)
!8916 = !DILocation(line: 338, column: 32, scope: !8912)
!8917 = !DILocalVariable(name: "a", arg: 2, scope: !8912, file: !4729, line: 338, type: !2272)
!8918 = !DILocation(line: 338, column: 50, scope: !8912)
!8919 = !DILocalVariable(name: "b", arg: 3, scope: !8912, file: !4729, line: 338, type: !2272)
!8920 = !DILocation(line: 338, column: 68, scope: !8912)
!8921 = !DILocation(line: 340, column: 9, scope: !8912)
!8922 = !DILocation(line: 340, column: 16, scope: !8912)
!8923 = !DILocation(line: 340, column: 14, scope: !8912)
!8924 = !DILocation(line: 340, column: 2, scope: !8912)
!8925 = !DILocation(line: 340, column: 7, scope: !8912)
!8926 = !DILocation(line: 341, column: 9, scope: !8912)
!8927 = !DILocation(line: 341, column: 16, scope: !8912)
!8928 = !DILocation(line: 341, column: 14, scope: !8912)
!8929 = !DILocation(line: 341, column: 2, scope: !8912)
!8930 = !DILocation(line: 341, column: 7, scope: !8912)
!8931 = !DILocation(line: 342, column: 1, scope: !8912)
!8932 = distinct !DISubprogram(name: "copy_v2_v2", scope: !4729, file: !4729, line: 58, type: !4730, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!8933 = !DILocalVariable(name: "r", arg: 1, scope: !8932, file: !4729, line: 58, type: !320)
!8934 = !DILocation(line: 58, column: 31, scope: !8932)
!8935 = !DILocalVariable(name: "a", arg: 2, scope: !8932, file: !4729, line: 58, type: !2272)
!8936 = !DILocation(line: 58, column: 49, scope: !8932)
!8937 = !DILocation(line: 60, column: 9, scope: !8932)
!8938 = !DILocation(line: 60, column: 2, scope: !8932)
!8939 = !DILocation(line: 60, column: 7, scope: !8932)
!8940 = !DILocation(line: 61, column: 9, scope: !8932)
!8941 = !DILocation(line: 61, column: 2, scope: !8932)
!8942 = !DILocation(line: 61, column: 7, scope: !8932)
!8943 = !DILocation(line: 62, column: 1, scope: !8932)
!8944 = distinct !DISubprogram(name: "len_squared_v3v3", scope: !4729, file: !4729, line: 727, type: !8945, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!8945 = !DISubroutineType(types: !8946)
!8946 = !{!321, !2272, !2272}
!8947 = !DILocalVariable(name: "a", arg: 1, scope: !8944, file: !4729, line: 727, type: !2272)
!8948 = !DILocation(line: 727, column: 44, scope: !8944)
!8949 = !DILocalVariable(name: "b", arg: 2, scope: !8944, file: !4729, line: 727, type: !2272)
!8950 = !DILocation(line: 727, column: 62, scope: !8944)
!8951 = !DILocalVariable(name: "d", scope: !8944, file: !4729, line: 729, type: !357)
!8952 = !DILocation(line: 729, column: 8, scope: !8944)
!8953 = !DILocation(line: 731, column: 14, scope: !8944)
!8954 = !DILocation(line: 731, column: 17, scope: !8944)
!8955 = !DILocation(line: 731, column: 20, scope: !8944)
!8956 = !DILocation(line: 731, column: 2, scope: !8944)
!8957 = !DILocation(line: 732, column: 18, scope: !8944)
!8958 = !DILocation(line: 732, column: 21, scope: !8944)
!8959 = !DILocation(line: 732, column: 9, scope: !8944)
!8960 = !DILocation(line: 732, column: 2, scope: !8944)
!8961 = distinct !DISubprogram(name: "len_squared_v2v2", scope: !4729, file: !4729, line: 719, type: !8945, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!8962 = !DILocalVariable(name: "a", arg: 1, scope: !8961, file: !4729, line: 719, type: !2272)
!8963 = !DILocation(line: 719, column: 44, scope: !8961)
!8964 = !DILocalVariable(name: "b", arg: 2, scope: !8961, file: !4729, line: 719, type: !2272)
!8965 = !DILocation(line: 719, column: 62, scope: !8961)
!8966 = !DILocalVariable(name: "d", scope: !8961, file: !4729, line: 721, type: !880)
!8967 = !DILocation(line: 721, column: 8, scope: !8961)
!8968 = !DILocation(line: 723, column: 14, scope: !8961)
!8969 = !DILocation(line: 723, column: 17, scope: !8961)
!8970 = !DILocation(line: 723, column: 20, scope: !8961)
!8971 = !DILocation(line: 723, column: 2, scope: !8961)
!8972 = !DILocation(line: 724, column: 18, scope: !8961)
!8973 = !DILocation(line: 724, column: 21, scope: !8961)
!8974 = !DILocation(line: 724, column: 9, scope: !8961)
!8975 = !DILocation(line: 724, column: 2, scope: !8961)
!8976 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !4729, file: !4729, line: 357, type: !8913, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!8977 = !DILocalVariable(name: "r", arg: 1, scope: !8976, file: !4729, line: 357, type: !320)
!8978 = !DILocation(line: 357, column: 32, scope: !8976)
!8979 = !DILocalVariable(name: "a", arg: 2, scope: !8976, file: !4729, line: 357, type: !2272)
!8980 = !DILocation(line: 357, column: 50, scope: !8976)
!8981 = !DILocalVariable(name: "b", arg: 3, scope: !8976, file: !4729, line: 357, type: !2272)
!8982 = !DILocation(line: 357, column: 68, scope: !8976)
!8983 = !DILocation(line: 359, column: 9, scope: !8976)
!8984 = !DILocation(line: 359, column: 16, scope: !8976)
!8985 = !DILocation(line: 359, column: 14, scope: !8976)
!8986 = !DILocation(line: 359, column: 2, scope: !8976)
!8987 = !DILocation(line: 359, column: 7, scope: !8976)
!8988 = !DILocation(line: 360, column: 9, scope: !8976)
!8989 = !DILocation(line: 360, column: 16, scope: !8976)
!8990 = !DILocation(line: 360, column: 14, scope: !8976)
!8991 = !DILocation(line: 360, column: 2, scope: !8976)
!8992 = !DILocation(line: 360, column: 7, scope: !8976)
!8993 = !DILocation(line: 361, column: 9, scope: !8976)
!8994 = !DILocation(line: 361, column: 16, scope: !8976)
!8995 = !DILocation(line: 361, column: 14, scope: !8976)
!8996 = !DILocation(line: 361, column: 2, scope: !8976)
!8997 = !DILocation(line: 361, column: 7, scope: !8976)
!8998 = !DILocation(line: 362, column: 1, scope: !8976)
!8999 = distinct !DISubprogram(name: "cross_v3_v3v3", scope: !4729, file: !4729, line: 634, type: !8913, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!9000 = !DILocalVariable(name: "r", arg: 1, scope: !8999, file: !4729, line: 634, type: !320)
!9001 = !DILocation(line: 634, column: 34, scope: !8999)
!9002 = !DILocalVariable(name: "a", arg: 2, scope: !8999, file: !4729, line: 634, type: !2272)
!9003 = !DILocation(line: 634, column: 52, scope: !8999)
!9004 = !DILocalVariable(name: "b", arg: 3, scope: !8999, file: !4729, line: 634, type: !2272)
!9005 = !DILocation(line: 634, column: 70, scope: !8999)
!9006 = !DILocation(line: 637, column: 9, scope: !8999)
!9007 = !DILocation(line: 637, column: 16, scope: !8999)
!9008 = !DILocation(line: 637, column: 14, scope: !8999)
!9009 = !DILocation(line: 637, column: 23, scope: !8999)
!9010 = !DILocation(line: 637, column: 30, scope: !8999)
!9011 = !DILocation(line: 637, column: 28, scope: !8999)
!9012 = !DILocation(line: 637, column: 21, scope: !8999)
!9013 = !DILocation(line: 637, column: 2, scope: !8999)
!9014 = !DILocation(line: 637, column: 7, scope: !8999)
!9015 = !DILocation(line: 638, column: 9, scope: !8999)
!9016 = !DILocation(line: 638, column: 16, scope: !8999)
!9017 = !DILocation(line: 638, column: 14, scope: !8999)
!9018 = !DILocation(line: 638, column: 23, scope: !8999)
!9019 = !DILocation(line: 638, column: 30, scope: !8999)
!9020 = !DILocation(line: 638, column: 28, scope: !8999)
!9021 = !DILocation(line: 638, column: 21, scope: !8999)
!9022 = !DILocation(line: 638, column: 2, scope: !8999)
!9023 = !DILocation(line: 638, column: 7, scope: !8999)
!9024 = !DILocation(line: 639, column: 9, scope: !8999)
!9025 = !DILocation(line: 639, column: 16, scope: !8999)
!9026 = !DILocation(line: 639, column: 14, scope: !8999)
!9027 = !DILocation(line: 639, column: 23, scope: !8999)
!9028 = !DILocation(line: 639, column: 30, scope: !8999)
!9029 = !DILocation(line: 639, column: 28, scope: !8999)
!9030 = !DILocation(line: 639, column: 21, scope: !8999)
!9031 = !DILocation(line: 639, column: 2, scope: !8999)
!9032 = !DILocation(line: 639, column: 7, scope: !8999)
!9033 = !DILocation(line: 640, column: 1, scope: !8999)
!9034 = distinct !DISubprogram(name: "len_v3", scope: !4729, file: !4729, line: 714, type: !9035, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!9035 = !DISubroutineType(types: !9036)
!9036 = !{!321, !2272}
!9037 = !DILocalVariable(name: "a", arg: 1, scope: !9034, file: !4729, line: 714, type: !2272)
!9038 = !DILocation(line: 714, column: 34, scope: !9034)
!9039 = !DILocation(line: 716, column: 24, scope: !9034)
!9040 = !DILocation(line: 716, column: 27, scope: !9034)
!9041 = !DILocation(line: 716, column: 15, scope: !9034)
!9042 = !DILocation(line: 716, column: 9, scope: !9034)
!9043 = !DILocation(line: 716, column: 2, scope: !9034)
!9044 = distinct !DISubprogram(name: "DM_vertex_attributes_from_gpu", scope: !3, file: !3, line: 2932, type: !9045, scopeLine: 2933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!9045 = !DISubroutineType(types: !9046)
!9046 = !{null, !2108, !9047, !9062}
!9047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9048, size: 64)
!9048 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUVertexAttribs", file: !9049, line: 206, baseType: !9050)
!9049 = !DIFile(filename: "blender/source/blender/gpu/GPU_extensions.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUVertexAttribs", file: !9049, line: 196, size: 20512, elements: !9051)
!9051 = !{!9052, !9061}
!9052 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !9050, file: !9049, line: 203, baseType: !9053, size: 20480)
!9053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9054, size: 20480, elements: !523)
!9054 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9050, file: !9049, line: 197, size: 640, elements: !9055)
!9055 = !{!9056, !9057, !9058, !9059, !9060}
!9056 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9054, file: !9049, line: 198, baseType: !156, size: 32)
!9057 = !DIDerivedType(tag: DW_TAG_member, name: "glindex", scope: !9054, file: !9049, line: 199, baseType: !156, size: 32, offset: 32)
!9058 = !DIDerivedType(tag: DW_TAG_member, name: "gltexco", scope: !9054, file: !9049, line: 200, baseType: !156, size: 32, offset: 64)
!9059 = !DIDerivedType(tag: DW_TAG_member, name: "attribid", scope: !9054, file: !9049, line: 201, baseType: !156, size: 32, offset: 96)
!9060 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9054, file: !9049, line: 202, baseType: !457, size: 512, offset: 128)
!9061 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !9050, file: !9049, line: 205, baseType: !156, size: 32, offset: 20480)
!9062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9063, size: 64)
!9063 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMVertexAttribs", file: !6, line: 743, baseType: !9064)
!9064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMVertexAttribs", file: !6, line: 721, size: 3008, elements: !9065)
!9065 = !{!9066, !9074, !9081, !9087, !9094, !9095, !9096, !9097}
!9066 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !9064, file: !6, line: 725, baseType: !9067, size: 1536)
!9067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9068, size: 1536, elements: !817)
!9068 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9064, file: !6, line: 722, size: 192, elements: !9069)
!9069 = !{!9070, !9071, !9072, !9073}
!9070 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !9068, file: !6, line: 723, baseType: !2341, size: 64)
!9071 = !DIDerivedType(tag: DW_TAG_member, name: "em_offset", scope: !9068, file: !6, line: 724, baseType: !156, size: 32, offset: 64)
!9072 = !DIDerivedType(tag: DW_TAG_member, name: "gl_index", scope: !9068, file: !6, line: 724, baseType: !156, size: 32, offset: 96)
!9073 = !DIDerivedType(tag: DW_TAG_member, name: "gl_texco", scope: !9068, file: !6, line: 724, baseType: !156, size: 32, offset: 128)
!9074 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !9064, file: !6, line: 730, baseType: !9075, size: 1024, offset: 1536)
!9075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9076, size: 1024, elements: !817)
!9076 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9064, file: !6, line: 727, size: 128, elements: !9077)
!9077 = !{!9078, !9079, !9080}
!9078 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !9076, file: !6, line: 728, baseType: !2744, size: 64)
!9079 = !DIDerivedType(tag: DW_TAG_member, name: "em_offset", scope: !9076, file: !6, line: 729, baseType: !156, size: 32, offset: 64)
!9080 = !DIDerivedType(tag: DW_TAG_member, name: "gl_index", scope: !9076, file: !6, line: 729, baseType: !156, size: 32, offset: 96)
!9081 = !DIDerivedType(tag: DW_TAG_member, name: "tang", scope: !9064, file: !6, line: 735, baseType: !9082, size: 128, offset: 2560)
!9082 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9064, file: !6, line: 732, size: 128, elements: !9083)
!9083 = !{!9084, !9085, !9086}
!9084 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !9082, file: !6, line: 733, baseType: !2327, size: 64)
!9085 = !DIDerivedType(tag: DW_TAG_member, name: "em_offset", scope: !9082, file: !6, line: 734, baseType: !156, size: 32, offset: 64)
!9086 = !DIDerivedType(tag: DW_TAG_member, name: "gl_index", scope: !9082, file: !6, line: 734, baseType: !156, size: 32, offset: 96)
!9087 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !9064, file: !6, line: 740, baseType: !9088, size: 192, offset: 2688)
!9088 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9064, file: !6, line: 737, size: 192, elements: !9089)
!9089 = !{!9090, !9091, !9092, !9093}
!9090 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !9088, file: !6, line: 738, baseType: !1660, size: 64)
!9091 = !DIDerivedType(tag: DW_TAG_member, name: "em_offset", scope: !9088, file: !6, line: 739, baseType: !156, size: 32, offset: 64)
!9092 = !DIDerivedType(tag: DW_TAG_member, name: "gl_index", scope: !9088, file: !6, line: 739, baseType: !156, size: 32, offset: 96)
!9093 = !DIDerivedType(tag: DW_TAG_member, name: "gl_texco", scope: !9088, file: !6, line: 739, baseType: !156, size: 32, offset: 128)
!9094 = !DIDerivedType(tag: DW_TAG_member, name: "tottface", scope: !9064, file: !6, line: 742, baseType: !156, size: 32, offset: 2880)
!9095 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !9064, file: !6, line: 742, baseType: !156, size: 32, offset: 2912)
!9096 = !DIDerivedType(tag: DW_TAG_member, name: "tottang", scope: !9064, file: !6, line: 742, baseType: !156, size: 32, offset: 2944)
!9097 = !DIDerivedType(tag: DW_TAG_member, name: "totorco", scope: !9064, file: !6, line: 742, baseType: !156, size: 32, offset: 2976)
!9098 = !DILocalVariable(name: "dm", arg: 1, scope: !9044, file: !3, line: 2932, type: !2108)
!9099 = !DILocation(line: 2932, column: 49, scope: !9044)
!9100 = !DILocalVariable(name: "gattribs", arg: 2, scope: !9044, file: !3, line: 2932, type: !9047)
!9101 = !DILocation(line: 2932, column: 71, scope: !9044)
!9102 = !DILocalVariable(name: "attribs", arg: 3, scope: !9044, file: !3, line: 2932, type: !9062)
!9103 = !DILocation(line: 2932, column: 98, scope: !9044)
!9104 = !DILocalVariable(name: "vdata", scope: !9044, file: !3, line: 2934, type: !2209)
!9105 = !DILocation(line: 2934, column: 14, scope: !9044)
!9106 = !DILocalVariable(name: "fdata", scope: !9044, file: !3, line: 2934, type: !2209)
!9107 = !DILocation(line: 2934, column: 22, scope: !9044)
!9108 = !DILocalVariable(name: "tfdata", scope: !9044, file: !3, line: 2934, type: !2209)
!9109 = !DILocation(line: 2934, column: 30, scope: !9044)
!9110 = !DILocalVariable(name: "a", scope: !9044, file: !3, line: 2935, type: !156)
!9111 = !DILocation(line: 2935, column: 6, scope: !9044)
!9112 = !DILocalVariable(name: "b", scope: !9044, file: !3, line: 2935, type: !156)
!9113 = !DILocation(line: 2935, column: 9, scope: !9044)
!9114 = !DILocalVariable(name: "layer", scope: !9044, file: !3, line: 2935, type: !156)
!9115 = !DILocation(line: 2935, column: 12, scope: !9044)
!9116 = !DILocation(line: 2940, column: 9, scope: !9044)
!9117 = !DILocation(line: 2940, column: 2, scope: !9044)
!9118 = !DILocation(line: 2942, column: 11, scope: !9044)
!9119 = !DILocation(line: 2942, column: 15, scope: !9044)
!9120 = !DILocation(line: 2942, column: 8, scope: !9044)
!9121 = !DILocation(line: 2943, column: 19, scope: !9044)
!9122 = !DILocation(line: 2943, column: 23, scope: !9044)
!9123 = !DILocation(line: 2943, column: 45, scope: !9044)
!9124 = !DILocation(line: 2943, column: 17, scope: !9044)
!9125 = !DILocation(line: 2943, column: 8, scope: !9044)
!9126 = !DILocation(line: 2946, column: 6, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9044, file: !3, line: 2946, column: 6)
!9128 = !DILocation(line: 2946, column: 10, scope: !9127)
!9129 = !DILocation(line: 2946, column: 26, scope: !9127)
!9130 = !DILocation(line: 2946, column: 6, scope: !9044)
!9131 = !DILocation(line: 2947, column: 27, scope: !9127)
!9132 = !DILocation(line: 2947, column: 3, scope: !9127)
!9133 = !DILocation(line: 2950, column: 9, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9044, file: !3, line: 2950, column: 2)
!9135 = !DILocation(line: 2950, column: 7, scope: !9134)
!9136 = !DILocation(line: 2950, column: 14, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9134, file: !3, line: 2950, column: 2)
!9138 = !DILocation(line: 2950, column: 18, scope: !9137)
!9139 = !DILocation(line: 2950, column: 28, scope: !9137)
!9140 = !DILocation(line: 2950, column: 16, scope: !9137)
!9141 = !DILocation(line: 2950, column: 2, scope: !9134)
!9142 = !DILocation(line: 2951, column: 7, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 2951, column: 7)
!9144 = !DILocation(line: 2951, column: 17, scope: !9143)
!9145 = !DILocation(line: 2951, column: 23, scope: !9143)
!9146 = !DILocation(line: 2951, column: 26, scope: !9143)
!9147 = !DILocation(line: 2951, column: 31, scope: !9143)
!9148 = !DILocation(line: 2951, column: 7, scope: !9137)
!9149 = !DILocation(line: 2952, column: 35, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9143, file: !3, line: 2952, column: 8)
!9151 = !DILocation(line: 2952, column: 8, scope: !9150)
!9152 = !DILocation(line: 2952, column: 54, scope: !9150)
!9153 = !DILocation(line: 2952, column: 8, scope: !9143)
!9154 = !DILocation(line: 2953, column: 26, scope: !9150)
!9155 = !DILocation(line: 2953, column: 5, scope: !9150)
!9156 = !DILocation(line: 2952, column: 58, scope: !9150)
!9157 = !DILocation(line: 2951, column: 34, scope: !9143)
!9158 = !DILocation(line: 2950, column: 39, scope: !9137)
!9159 = !DILocation(line: 2950, column: 2, scope: !9137)
!9160 = distinct !{!9160, !9141, !9161}
!9161 = !DILocation(line: 2953, column: 28, scope: !9134)
!9162 = !DILocation(line: 2955, column: 9, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9044, file: !3, line: 2955, column: 2)
!9164 = !DILocation(line: 2955, column: 7, scope: !9163)
!9165 = !DILocation(line: 2955, column: 14, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9163, file: !3, line: 2955, column: 2)
!9167 = !DILocation(line: 2955, column: 18, scope: !9166)
!9168 = !DILocation(line: 2955, column: 28, scope: !9166)
!9169 = !DILocation(line: 2955, column: 16, scope: !9166)
!9170 = !DILocation(line: 2955, column: 2, scope: !9163)
!9171 = !DILocation(line: 2956, column: 7, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9173, file: !3, line: 2956, column: 7)
!9173 = distinct !DILexicalBlock(scope: !9166, file: !3, line: 2955, column: 43)
!9174 = !DILocation(line: 2956, column: 17, scope: !9172)
!9175 = !DILocation(line: 2956, column: 23, scope: !9172)
!9176 = !DILocation(line: 2956, column: 26, scope: !9172)
!9177 = !DILocation(line: 2956, column: 31, scope: !9172)
!9178 = !DILocation(line: 2956, column: 7, scope: !9173)
!9179 = !DILocation(line: 2958, column: 8, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9181, file: !3, line: 2958, column: 8)
!9181 = distinct !DILexicalBlock(scope: !9172, file: !3, line: 2956, column: 45)
!9182 = !DILocation(line: 2958, column: 12, scope: !9180)
!9183 = !DILocation(line: 2958, column: 17, scope: !9180)
!9184 = !DILocation(line: 2958, column: 8, scope: !9181)
!9185 = !DILocalVariable(name: "ldata", scope: !9186, file: !3, line: 2960, type: !2209)
!9186 = distinct !DILexicalBlock(scope: !9180, file: !3, line: 2958, column: 39)
!9187 = !DILocation(line: 2960, column: 17, scope: !9186)
!9188 = !DILocation(line: 2960, column: 25, scope: !9186)
!9189 = !DILocation(line: 2960, column: 29, scope: !9186)
!9190 = !DILocation(line: 2960, column: 47, scope: !9186)
!9191 = !DILocation(line: 2962, column: 9, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9186, file: !3, line: 2962, column: 9)
!9193 = !DILocation(line: 2962, column: 19, scope: !9192)
!9194 = !DILocation(line: 2962, column: 25, scope: !9192)
!9195 = !DILocation(line: 2962, column: 28, scope: !9192)
!9196 = !DILocation(line: 2962, column: 9, scope: !9186)
!9197 = !DILocation(line: 2963, column: 47, scope: !9192)
!9198 = !DILocation(line: 2964, column: 47, scope: !9192)
!9199 = !DILocation(line: 2964, column: 57, scope: !9192)
!9200 = !DILocation(line: 2964, column: 63, scope: !9192)
!9201 = !DILocation(line: 2964, column: 66, scope: !9192)
!9202 = !DILocation(line: 2963, column: 14, scope: !9192)
!9203 = !DILocation(line: 2963, column: 12, scope: !9192)
!9204 = !DILocation(line: 2963, column: 6, scope: !9192)
!9205 = !DILocation(line: 2966, column: 48, scope: !9192)
!9206 = !DILocation(line: 2966, column: 14, scope: !9192)
!9207 = !DILocation(line: 2966, column: 12, scope: !9192)
!9208 = !DILocation(line: 2968, column: 9, scope: !9186)
!9209 = !DILocation(line: 2968, column: 18, scope: !9186)
!9210 = !DILocation(line: 2968, column: 26, scope: !9186)
!9211 = !DILocation(line: 2968, column: 7, scope: !9186)
!9212 = !DILocation(line: 2970, column: 9, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9186, file: !3, line: 2970, column: 9)
!9214 = !DILocation(line: 2970, column: 15, scope: !9213)
!9215 = !DILocation(line: 2970, column: 9, scope: !9186)
!9216 = !DILocation(line: 2971, column: 32, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9213, file: !3, line: 2970, column: 22)
!9218 = !DILocation(line: 2971, column: 40, scope: !9217)
!9219 = !DILocation(line: 2971, column: 47, scope: !9217)
!9220 = !DILocation(line: 2971, column: 54, scope: !9217)
!9221 = !DILocation(line: 2971, column: 6, scope: !9217)
!9222 = !DILocation(line: 2971, column: 15, scope: !9217)
!9223 = !DILocation(line: 2971, column: 21, scope: !9217)
!9224 = !DILocation(line: 2971, column: 24, scope: !9217)
!9225 = !DILocation(line: 2971, column: 30, scope: !9217)
!9226 = !DILocation(line: 2972, column: 36, scope: !9217)
!9227 = !DILocation(line: 2972, column: 43, scope: !9217)
!9228 = !DILocation(line: 2972, column: 50, scope: !9217)
!9229 = !DILocation(line: 2972, column: 57, scope: !9217)
!9230 = !DILocation(line: 2972, column: 6, scope: !9217)
!9231 = !DILocation(line: 2972, column: 15, scope: !9217)
!9232 = !DILocation(line: 2972, column: 21, scope: !9217)
!9233 = !DILocation(line: 2972, column: 24, scope: !9217)
!9234 = !DILocation(line: 2972, column: 34, scope: !9217)
!9235 = !DILocation(line: 2973, column: 5, scope: !9217)
!9236 = !DILocation(line: 2975, column: 6, scope: !9237)
!9237 = distinct !DILexicalBlock(scope: !9213, file: !3, line: 2974, column: 10)
!9238 = !DILocation(line: 2975, column: 15, scope: !9237)
!9239 = !DILocation(line: 2975, column: 21, scope: !9237)
!9240 = !DILocation(line: 2975, column: 24, scope: !9237)
!9241 = !DILocation(line: 2975, column: 30, scope: !9237)
!9242 = !DILocation(line: 2976, column: 6, scope: !9237)
!9243 = !DILocation(line: 2976, column: 15, scope: !9237)
!9244 = !DILocation(line: 2976, column: 21, scope: !9237)
!9245 = !DILocation(line: 2976, column: 24, scope: !9237)
!9246 = !DILocation(line: 2976, column: 34, scope: !9237)
!9247 = !DILocation(line: 2979, column: 34, scope: !9186)
!9248 = !DILocation(line: 2979, column: 44, scope: !9186)
!9249 = !DILocation(line: 2979, column: 50, scope: !9186)
!9250 = !DILocation(line: 2979, column: 53, scope: !9186)
!9251 = !DILocation(line: 2979, column: 5, scope: !9186)
!9252 = !DILocation(line: 2979, column: 14, scope: !9186)
!9253 = !DILocation(line: 2979, column: 20, scope: !9186)
!9254 = !DILocation(line: 2979, column: 23, scope: !9186)
!9255 = !DILocation(line: 2979, column: 32, scope: !9186)
!9256 = !DILocation(line: 2980, column: 34, scope: !9186)
!9257 = !DILocation(line: 2980, column: 44, scope: !9186)
!9258 = !DILocation(line: 2980, column: 50, scope: !9186)
!9259 = !DILocation(line: 2980, column: 53, scope: !9186)
!9260 = !DILocation(line: 2980, column: 5, scope: !9186)
!9261 = !DILocation(line: 2980, column: 14, scope: !9186)
!9262 = !DILocation(line: 2980, column: 20, scope: !9186)
!9263 = !DILocation(line: 2980, column: 23, scope: !9186)
!9264 = !DILocation(line: 2980, column: 32, scope: !9186)
!9265 = !DILocation(line: 2981, column: 4, scope: !9186)
!9266 = !DILocation(line: 2983, column: 9, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 2983, column: 9)
!9268 = distinct !DILexicalBlock(scope: !9180, file: !3, line: 2982, column: 9)
!9269 = !DILocation(line: 2983, column: 19, scope: !9267)
!9270 = !DILocation(line: 2983, column: 25, scope: !9267)
!9271 = !DILocation(line: 2983, column: 28, scope: !9267)
!9272 = !DILocation(line: 2983, column: 9, scope: !9268)
!9273 = !DILocation(line: 2984, column: 47, scope: !9267)
!9274 = !DILocation(line: 2985, column: 47, scope: !9267)
!9275 = !DILocation(line: 2985, column: 57, scope: !9267)
!9276 = !DILocation(line: 2985, column: 63, scope: !9267)
!9277 = !DILocation(line: 2985, column: 66, scope: !9267)
!9278 = !DILocation(line: 2984, column: 14, scope: !9267)
!9279 = !DILocation(line: 2984, column: 12, scope: !9267)
!9280 = !DILocation(line: 2984, column: 6, scope: !9267)
!9281 = !DILocation(line: 2987, column: 48, scope: !9267)
!9282 = !DILocation(line: 2987, column: 14, scope: !9267)
!9283 = !DILocation(line: 2987, column: 12, scope: !9267)
!9284 = !DILocation(line: 2989, column: 9, scope: !9268)
!9285 = !DILocation(line: 2989, column: 18, scope: !9268)
!9286 = !DILocation(line: 2989, column: 26, scope: !9268)
!9287 = !DILocation(line: 2989, column: 7, scope: !9268)
!9288 = !DILocation(line: 2991, column: 9, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 2991, column: 9)
!9290 = !DILocation(line: 2991, column: 15, scope: !9289)
!9291 = !DILocation(line: 2991, column: 9, scope: !9268)
!9292 = !DILocation(line: 2992, column: 32, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9289, file: !3, line: 2991, column: 22)
!9294 = !DILocation(line: 2992, column: 40, scope: !9293)
!9295 = !DILocation(line: 2992, column: 47, scope: !9293)
!9296 = !DILocation(line: 2992, column: 54, scope: !9293)
!9297 = !DILocation(line: 2992, column: 6, scope: !9293)
!9298 = !DILocation(line: 2992, column: 15, scope: !9293)
!9299 = !DILocation(line: 2992, column: 21, scope: !9293)
!9300 = !DILocation(line: 2992, column: 24, scope: !9293)
!9301 = !DILocation(line: 2992, column: 30, scope: !9293)
!9302 = !DILocation(line: 2993, column: 36, scope: !9293)
!9303 = !DILocation(line: 2993, column: 44, scope: !9293)
!9304 = !DILocation(line: 2993, column: 51, scope: !9293)
!9305 = !DILocation(line: 2993, column: 58, scope: !9293)
!9306 = !DILocation(line: 2993, column: 6, scope: !9293)
!9307 = !DILocation(line: 2993, column: 15, scope: !9293)
!9308 = !DILocation(line: 2993, column: 21, scope: !9293)
!9309 = !DILocation(line: 2993, column: 24, scope: !9293)
!9310 = !DILocation(line: 2993, column: 34, scope: !9293)
!9311 = !DILocation(line: 2994, column: 5, scope: !9293)
!9312 = !DILocation(line: 2996, column: 6, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9289, file: !3, line: 2995, column: 10)
!9314 = !DILocation(line: 2996, column: 15, scope: !9313)
!9315 = !DILocation(line: 2996, column: 21, scope: !9313)
!9316 = !DILocation(line: 2996, column: 24, scope: !9313)
!9317 = !DILocation(line: 2996, column: 30, scope: !9313)
!9318 = !DILocation(line: 2997, column: 6, scope: !9313)
!9319 = !DILocation(line: 2997, column: 15, scope: !9313)
!9320 = !DILocation(line: 2997, column: 21, scope: !9313)
!9321 = !DILocation(line: 2997, column: 24, scope: !9313)
!9322 = !DILocation(line: 2997, column: 34, scope: !9313)
!9323 = !DILocation(line: 3000, column: 34, scope: !9268)
!9324 = !DILocation(line: 3000, column: 44, scope: !9268)
!9325 = !DILocation(line: 3000, column: 50, scope: !9268)
!9326 = !DILocation(line: 3000, column: 53, scope: !9268)
!9327 = !DILocation(line: 3000, column: 5, scope: !9268)
!9328 = !DILocation(line: 3000, column: 14, scope: !9268)
!9329 = !DILocation(line: 3000, column: 20, scope: !9268)
!9330 = !DILocation(line: 3000, column: 23, scope: !9268)
!9331 = !DILocation(line: 3000, column: 32, scope: !9268)
!9332 = !DILocation(line: 3001, column: 34, scope: !9268)
!9333 = !DILocation(line: 3001, column: 44, scope: !9268)
!9334 = !DILocation(line: 3001, column: 50, scope: !9268)
!9335 = !DILocation(line: 3001, column: 53, scope: !9268)
!9336 = !DILocation(line: 3001, column: 5, scope: !9268)
!9337 = !DILocation(line: 3001, column: 14, scope: !9268)
!9338 = !DILocation(line: 3001, column: 20, scope: !9268)
!9339 = !DILocation(line: 3001, column: 23, scope: !9268)
!9340 = !DILocation(line: 3001, column: 32, scope: !9268)
!9341 = !DILocation(line: 3003, column: 3, scope: !9181)
!9342 = !DILocation(line: 3004, column: 12, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9172, file: !3, line: 3004, column: 12)
!9344 = !DILocation(line: 3004, column: 22, scope: !9343)
!9345 = !DILocation(line: 3004, column: 28, scope: !9343)
!9346 = !DILocation(line: 3004, column: 31, scope: !9343)
!9347 = !DILocation(line: 3004, column: 36, scope: !9343)
!9348 = !DILocation(line: 3004, column: 12, scope: !9172)
!9349 = !DILocation(line: 3005, column: 8, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9351, file: !3, line: 3005, column: 8)
!9351 = distinct !DILexicalBlock(scope: !9343, file: !3, line: 3004, column: 48)
!9352 = !DILocation(line: 3005, column: 12, scope: !9350)
!9353 = !DILocation(line: 3005, column: 17, scope: !9350)
!9354 = !DILocation(line: 3005, column: 8, scope: !9351)
!9355 = !DILocalVariable(name: "ldata", scope: !9356, file: !3, line: 3007, type: !2209)
!9356 = distinct !DILexicalBlock(scope: !9350, file: !3, line: 3005, column: 39)
!9357 = !DILocation(line: 3007, column: 17, scope: !9356)
!9358 = !DILocation(line: 3007, column: 25, scope: !9356)
!9359 = !DILocation(line: 3007, column: 29, scope: !9356)
!9360 = !DILocation(line: 3007, column: 47, scope: !9356)
!9361 = !DILocation(line: 3009, column: 9, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9356, file: !3, line: 3009, column: 9)
!9363 = !DILocation(line: 3009, column: 19, scope: !9362)
!9364 = !DILocation(line: 3009, column: 25, scope: !9362)
!9365 = !DILocation(line: 3009, column: 28, scope: !9362)
!9366 = !DILocation(line: 3009, column: 9, scope: !9356)
!9367 = !DILocation(line: 3010, column: 47, scope: !9362)
!9368 = !DILocation(line: 3011, column: 47, scope: !9362)
!9369 = !DILocation(line: 3011, column: 57, scope: !9362)
!9370 = !DILocation(line: 3011, column: 63, scope: !9362)
!9371 = !DILocation(line: 3011, column: 66, scope: !9362)
!9372 = !DILocation(line: 3010, column: 14, scope: !9362)
!9373 = !DILocation(line: 3010, column: 12, scope: !9362)
!9374 = !DILocation(line: 3010, column: 6, scope: !9362)
!9375 = !DILocation(line: 3013, column: 48, scope: !9362)
!9376 = !DILocation(line: 3013, column: 14, scope: !9362)
!9377 = !DILocation(line: 3013, column: 12, scope: !9362)
!9378 = !DILocation(line: 3015, column: 9, scope: !9356)
!9379 = !DILocation(line: 3015, column: 18, scope: !9356)
!9380 = !DILocation(line: 3015, column: 25, scope: !9356)
!9381 = !DILocation(line: 3015, column: 7, scope: !9356)
!9382 = !DILocation(line: 3017, column: 9, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9356, file: !3, line: 3017, column: 9)
!9384 = !DILocation(line: 3017, column: 15, scope: !9383)
!9385 = !DILocation(line: 3017, column: 9, scope: !9356)
!9386 = !DILocation(line: 3018, column: 31, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9383, file: !3, line: 3017, column: 22)
!9388 = !DILocation(line: 3018, column: 39, scope: !9387)
!9389 = !DILocation(line: 3018, column: 46, scope: !9387)
!9390 = !DILocation(line: 3018, column: 53, scope: !9387)
!9391 = !DILocation(line: 3018, column: 6, scope: !9387)
!9392 = !DILocation(line: 3018, column: 15, scope: !9387)
!9393 = !DILocation(line: 3018, column: 20, scope: !9387)
!9394 = !DILocation(line: 3018, column: 23, scope: !9387)
!9395 = !DILocation(line: 3018, column: 29, scope: !9387)
!9396 = !DILocation(line: 3020, column: 35, scope: !9387)
!9397 = !DILocation(line: 3020, column: 42, scope: !9387)
!9398 = !DILocation(line: 3020, column: 49, scope: !9387)
!9399 = !DILocation(line: 3020, column: 56, scope: !9387)
!9400 = !DILocation(line: 3020, column: 6, scope: !9387)
!9401 = !DILocation(line: 3020, column: 15, scope: !9387)
!9402 = !DILocation(line: 3020, column: 20, scope: !9387)
!9403 = !DILocation(line: 3020, column: 23, scope: !9387)
!9404 = !DILocation(line: 3020, column: 33, scope: !9387)
!9405 = !DILocation(line: 3021, column: 5, scope: !9387)
!9406 = !DILocation(line: 3023, column: 6, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9383, file: !3, line: 3022, column: 10)
!9408 = !DILocation(line: 3023, column: 15, scope: !9407)
!9409 = !DILocation(line: 3023, column: 20, scope: !9407)
!9410 = !DILocation(line: 3023, column: 23, scope: !9407)
!9411 = !DILocation(line: 3023, column: 29, scope: !9407)
!9412 = !DILocation(line: 3024, column: 6, scope: !9407)
!9413 = !DILocation(line: 3024, column: 15, scope: !9407)
!9414 = !DILocation(line: 3024, column: 20, scope: !9407)
!9415 = !DILocation(line: 3024, column: 23, scope: !9407)
!9416 = !DILocation(line: 3024, column: 33, scope: !9407)
!9417 = !DILocation(line: 3027, column: 33, scope: !9356)
!9418 = !DILocation(line: 3027, column: 43, scope: !9356)
!9419 = !DILocation(line: 3027, column: 49, scope: !9356)
!9420 = !DILocation(line: 3027, column: 52, scope: !9356)
!9421 = !DILocation(line: 3027, column: 5, scope: !9356)
!9422 = !DILocation(line: 3027, column: 14, scope: !9356)
!9423 = !DILocation(line: 3027, column: 19, scope: !9356)
!9424 = !DILocation(line: 3027, column: 22, scope: !9356)
!9425 = !DILocation(line: 3027, column: 31, scope: !9356)
!9426 = !DILocation(line: 3028, column: 4, scope: !9356)
!9427 = !DILocation(line: 3031, column: 9, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 3031, column: 9)
!9429 = distinct !DILexicalBlock(scope: !9350, file: !3, line: 3029, column: 9)
!9430 = !DILocation(line: 3031, column: 19, scope: !9428)
!9431 = !DILocation(line: 3031, column: 25, scope: !9428)
!9432 = !DILocation(line: 3031, column: 28, scope: !9428)
!9433 = !DILocation(line: 3031, column: 9, scope: !9429)
!9434 = !DILocation(line: 3032, column: 47, scope: !9428)
!9435 = !DILocation(line: 3033, column: 47, scope: !9428)
!9436 = !DILocation(line: 3033, column: 57, scope: !9428)
!9437 = !DILocation(line: 3033, column: 63, scope: !9428)
!9438 = !DILocation(line: 3033, column: 66, scope: !9428)
!9439 = !DILocation(line: 3032, column: 14, scope: !9428)
!9440 = !DILocation(line: 3032, column: 12, scope: !9428)
!9441 = !DILocation(line: 3032, column: 6, scope: !9428)
!9442 = !DILocation(line: 3035, column: 48, scope: !9428)
!9443 = !DILocation(line: 3035, column: 14, scope: !9428)
!9444 = !DILocation(line: 3035, column: 12, scope: !9428)
!9445 = !DILocation(line: 3037, column: 9, scope: !9429)
!9446 = !DILocation(line: 3037, column: 18, scope: !9429)
!9447 = !DILocation(line: 3037, column: 25, scope: !9429)
!9448 = !DILocation(line: 3037, column: 7, scope: !9429)
!9449 = !DILocation(line: 3039, column: 9, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 3039, column: 9)
!9451 = !DILocation(line: 3039, column: 15, scope: !9450)
!9452 = !DILocation(line: 3039, column: 9, scope: !9429)
!9453 = !DILocation(line: 3040, column: 31, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9450, file: !3, line: 3039, column: 22)
!9455 = !DILocation(line: 3040, column: 39, scope: !9454)
!9456 = !DILocation(line: 3040, column: 46, scope: !9454)
!9457 = !DILocation(line: 3040, column: 53, scope: !9454)
!9458 = !DILocation(line: 3040, column: 6, scope: !9454)
!9459 = !DILocation(line: 3040, column: 15, scope: !9454)
!9460 = !DILocation(line: 3040, column: 20, scope: !9454)
!9461 = !DILocation(line: 3040, column: 23, scope: !9454)
!9462 = !DILocation(line: 3040, column: 29, scope: !9454)
!9463 = !DILocation(line: 3042, column: 35, scope: !9454)
!9464 = !DILocation(line: 3042, column: 43, scope: !9454)
!9465 = !DILocation(line: 3042, column: 50, scope: !9454)
!9466 = !DILocation(line: 3042, column: 57, scope: !9454)
!9467 = !DILocation(line: 3042, column: 6, scope: !9454)
!9468 = !DILocation(line: 3042, column: 15, scope: !9454)
!9469 = !DILocation(line: 3042, column: 20, scope: !9454)
!9470 = !DILocation(line: 3042, column: 23, scope: !9454)
!9471 = !DILocation(line: 3042, column: 33, scope: !9454)
!9472 = !DILocation(line: 3043, column: 5, scope: !9454)
!9473 = !DILocation(line: 3045, column: 6, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9450, file: !3, line: 3044, column: 10)
!9475 = !DILocation(line: 3045, column: 15, scope: !9474)
!9476 = !DILocation(line: 3045, column: 20, scope: !9474)
!9477 = !DILocation(line: 3045, column: 23, scope: !9474)
!9478 = !DILocation(line: 3045, column: 29, scope: !9474)
!9479 = !DILocation(line: 3046, column: 6, scope: !9474)
!9480 = !DILocation(line: 3046, column: 15, scope: !9474)
!9481 = !DILocation(line: 3046, column: 20, scope: !9474)
!9482 = !DILocation(line: 3046, column: 23, scope: !9474)
!9483 = !DILocation(line: 3046, column: 33, scope: !9474)
!9484 = !DILocation(line: 3049, column: 33, scope: !9429)
!9485 = !DILocation(line: 3049, column: 43, scope: !9429)
!9486 = !DILocation(line: 3049, column: 49, scope: !9429)
!9487 = !DILocation(line: 3049, column: 52, scope: !9429)
!9488 = !DILocation(line: 3049, column: 5, scope: !9429)
!9489 = !DILocation(line: 3049, column: 14, scope: !9429)
!9490 = !DILocation(line: 3049, column: 19, scope: !9429)
!9491 = !DILocation(line: 3049, column: 22, scope: !9429)
!9492 = !DILocation(line: 3049, column: 31, scope: !9429)
!9493 = !DILocation(line: 3051, column: 3, scope: !9351)
!9494 = !DILocation(line: 3052, column: 12, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9343, file: !3, line: 3052, column: 12)
!9496 = !DILocation(line: 3052, column: 22, scope: !9495)
!9497 = !DILocation(line: 3052, column: 28, scope: !9495)
!9498 = !DILocation(line: 3052, column: 31, scope: !9495)
!9499 = !DILocation(line: 3052, column: 36, scope: !9495)
!9500 = !DILocation(line: 3052, column: 12, scope: !9343)
!9501 = !DILocation(line: 3054, column: 39, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9495, file: !3, line: 3052, column: 51)
!9503 = !DILocation(line: 3054, column: 12, scope: !9502)
!9504 = !DILocation(line: 3054, column: 10, scope: !9502)
!9505 = !DILocation(line: 3056, column: 4, scope: !9502)
!9506 = !DILocation(line: 3056, column: 13, scope: !9502)
!9507 = !DILocation(line: 3056, column: 21, scope: !9502)
!9508 = !DILocation(line: 3058, column: 8, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9502, file: !3, line: 3058, column: 8)
!9510 = !DILocation(line: 3058, column: 14, scope: !9509)
!9511 = !DILocation(line: 3058, column: 8, scope: !9502)
!9512 = !DILocation(line: 3059, column: 27, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9509, file: !3, line: 3058, column: 21)
!9514 = !DILocation(line: 3059, column: 34, scope: !9513)
!9515 = !DILocation(line: 3059, column: 41, scope: !9513)
!9516 = !DILocation(line: 3059, column: 48, scope: !9513)
!9517 = !DILocation(line: 3059, column: 5, scope: !9513)
!9518 = !DILocation(line: 3059, column: 14, scope: !9513)
!9519 = !DILocation(line: 3059, column: 19, scope: !9513)
!9520 = !DILocation(line: 3059, column: 25, scope: !9513)
!9521 = !DILocation(line: 3060, column: 31, scope: !9513)
!9522 = !DILocation(line: 3060, column: 38, scope: !9513)
!9523 = !DILocation(line: 3060, column: 45, scope: !9513)
!9524 = !DILocation(line: 3060, column: 52, scope: !9513)
!9525 = !DILocation(line: 3060, column: 5, scope: !9513)
!9526 = !DILocation(line: 3060, column: 14, scope: !9513)
!9527 = !DILocation(line: 3060, column: 19, scope: !9513)
!9528 = !DILocation(line: 3060, column: 29, scope: !9513)
!9529 = !DILocation(line: 3061, column: 4, scope: !9513)
!9530 = !DILocation(line: 3063, column: 5, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9509, file: !3, line: 3062, column: 9)
!9532 = !DILocation(line: 3063, column: 14, scope: !9531)
!9533 = !DILocation(line: 3063, column: 19, scope: !9531)
!9534 = !DILocation(line: 3063, column: 25, scope: !9531)
!9535 = !DILocation(line: 3064, column: 5, scope: !9531)
!9536 = !DILocation(line: 3064, column: 14, scope: !9531)
!9537 = !DILocation(line: 3064, column: 19, scope: !9531)
!9538 = !DILocation(line: 3064, column: 29, scope: !9531)
!9539 = !DILocation(line: 3067, column: 29, scope: !9502)
!9540 = !DILocation(line: 3067, column: 39, scope: !9502)
!9541 = !DILocation(line: 3067, column: 45, scope: !9502)
!9542 = !DILocation(line: 3067, column: 48, scope: !9502)
!9543 = !DILocation(line: 3067, column: 4, scope: !9502)
!9544 = !DILocation(line: 3067, column: 13, scope: !9502)
!9545 = !DILocation(line: 3067, column: 18, scope: !9502)
!9546 = !DILocation(line: 3067, column: 27, scope: !9502)
!9547 = !DILocation(line: 3068, column: 3, scope: !9502)
!9548 = !DILocation(line: 3069, column: 12, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9495, file: !3, line: 3069, column: 12)
!9550 = !DILocation(line: 3069, column: 22, scope: !9549)
!9551 = !DILocation(line: 3069, column: 28, scope: !9549)
!9552 = !DILocation(line: 3069, column: 31, scope: !9549)
!9553 = !DILocation(line: 3069, column: 36, scope: !9549)
!9554 = !DILocation(line: 3069, column: 12, scope: !9495)
!9555 = !DILocation(line: 3071, column: 39, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9549, file: !3, line: 3069, column: 48)
!9557 = !DILocation(line: 3071, column: 12, scope: !9556)
!9558 = !DILocation(line: 3071, column: 10, scope: !9556)
!9559 = !DILocation(line: 3072, column: 4, scope: !9556)
!9560 = !DILocation(line: 3072, column: 13, scope: !9556)
!9561 = !DILocation(line: 3072, column: 21, scope: !9556)
!9562 = !DILocation(line: 3074, column: 8, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9556, file: !3, line: 3074, column: 8)
!9564 = !DILocation(line: 3074, column: 14, scope: !9563)
!9565 = !DILocation(line: 3074, column: 8, scope: !9556)
!9566 = !DILocation(line: 3075, column: 27, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9563, file: !3, line: 3074, column: 21)
!9568 = !DILocation(line: 3075, column: 34, scope: !9567)
!9569 = !DILocation(line: 3075, column: 41, scope: !9567)
!9570 = !DILocation(line: 3075, column: 48, scope: !9567)
!9571 = !DILocation(line: 3075, column: 5, scope: !9567)
!9572 = !DILocation(line: 3075, column: 14, scope: !9567)
!9573 = !DILocation(line: 3075, column: 19, scope: !9567)
!9574 = !DILocation(line: 3075, column: 25, scope: !9567)
!9575 = !DILocation(line: 3076, column: 31, scope: !9567)
!9576 = !DILocation(line: 3076, column: 38, scope: !9567)
!9577 = !DILocation(line: 3076, column: 45, scope: !9567)
!9578 = !DILocation(line: 3076, column: 52, scope: !9567)
!9579 = !DILocation(line: 3076, column: 5, scope: !9567)
!9580 = !DILocation(line: 3076, column: 14, scope: !9567)
!9581 = !DILocation(line: 3076, column: 19, scope: !9567)
!9582 = !DILocation(line: 3076, column: 29, scope: !9567)
!9583 = !DILocation(line: 3077, column: 4, scope: !9567)
!9584 = !DILocation(line: 3079, column: 5, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9563, file: !3, line: 3078, column: 9)
!9586 = !DILocation(line: 3079, column: 14, scope: !9585)
!9587 = !DILocation(line: 3079, column: 19, scope: !9585)
!9588 = !DILocation(line: 3079, column: 25, scope: !9585)
!9589 = !DILocation(line: 3080, column: 5, scope: !9585)
!9590 = !DILocation(line: 3080, column: 14, scope: !9585)
!9591 = !DILocation(line: 3080, column: 19, scope: !9585)
!9592 = !DILocation(line: 3080, column: 29, scope: !9585)
!9593 = !DILocation(line: 3083, column: 29, scope: !9556)
!9594 = !DILocation(line: 3083, column: 39, scope: !9556)
!9595 = !DILocation(line: 3083, column: 45, scope: !9556)
!9596 = !DILocation(line: 3083, column: 48, scope: !9556)
!9597 = !DILocation(line: 3083, column: 4, scope: !9556)
!9598 = !DILocation(line: 3083, column: 13, scope: !9556)
!9599 = !DILocation(line: 3083, column: 18, scope: !9556)
!9600 = !DILocation(line: 3083, column: 27, scope: !9556)
!9601 = !DILocation(line: 3084, column: 29, scope: !9556)
!9602 = !DILocation(line: 3084, column: 39, scope: !9556)
!9603 = !DILocation(line: 3084, column: 45, scope: !9556)
!9604 = !DILocation(line: 3084, column: 48, scope: !9556)
!9605 = !DILocation(line: 3084, column: 4, scope: !9556)
!9606 = !DILocation(line: 3084, column: 13, scope: !9556)
!9607 = !DILocation(line: 3084, column: 18, scope: !9556)
!9608 = !DILocation(line: 3084, column: 27, scope: !9556)
!9609 = !DILocation(line: 3085, column: 3, scope: !9556)
!9610 = !DILocation(line: 3086, column: 2, scope: !9173)
!9611 = !DILocation(line: 2955, column: 39, scope: !9166)
!9612 = !DILocation(line: 2955, column: 2, scope: !9166)
!9613 = distinct !{!9613, !9170, !9614}
!9614 = !DILocation(line: 3086, column: 2, scope: !9163)
!9615 = !DILocation(line: 3087, column: 1, scope: !9044)
!9616 = distinct !DISubprogram(name: "DM_set_object_boundbox", scope: !3, file: !3, line: 3090, type: !9617, scopeLine: 3091, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!9617 = !DISubroutineType(types: !9618)
!9618 = !{null, !4007, !2108}
!9619 = !DILocalVariable(name: "ob", arg: 1, scope: !9616, file: !3, line: 3090, type: !4007)
!9620 = !DILocation(line: 3090, column: 37, scope: !9616)
!9621 = !DILocalVariable(name: "dm", arg: 2, scope: !9616, file: !3, line: 3090, type: !2108)
!9622 = !DILocation(line: 3090, column: 54, scope: !9616)
!9623 = !DILocalVariable(name: "min", scope: !9616, file: !3, line: 3092, type: !357)
!9624 = !DILocation(line: 3092, column: 8, scope: !9616)
!9625 = !DILocalVariable(name: "max", scope: !9616, file: !3, line: 3092, type: !357)
!9626 = !DILocation(line: 3092, column: 16, scope: !9616)
!9627 = !DILocation(line: 3094, column: 2, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 3094, column: 2)
!9629 = !DILocation(line: 3096, column: 2, scope: !9616)
!9630 = !DILocation(line: 3096, column: 6, scope: !9616)
!9631 = !DILocation(line: 3096, column: 16, scope: !9616)
!9632 = !DILocation(line: 3096, column: 20, scope: !9616)
!9633 = !DILocation(line: 3096, column: 25, scope: !9616)
!9634 = !DILocation(line: 3098, column: 7, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 3098, column: 6)
!9636 = !DILocation(line: 3098, column: 11, scope: !9635)
!9637 = !DILocation(line: 3098, column: 6, scope: !9616)
!9638 = !DILocation(line: 3099, column: 12, scope: !9635)
!9639 = !DILocation(line: 3099, column: 3, scope: !9635)
!9640 = !DILocation(line: 3099, column: 7, scope: !9635)
!9641 = !DILocation(line: 3099, column: 10, scope: !9635)
!9642 = !DILocation(line: 3101, column: 32, scope: !9616)
!9643 = !DILocation(line: 3101, column: 36, scope: !9616)
!9644 = !DILocation(line: 3101, column: 40, scope: !9616)
!9645 = !DILocation(line: 3101, column: 45, scope: !9616)
!9646 = !DILocation(line: 3101, column: 2, scope: !9616)
!9647 = !DILocation(line: 3102, column: 1, scope: !9616)
!9648 = !DILocalVariable(name: "dm", arg: 1, scope: !2936, file: !3, line: 3287, type: !2108)
!9649 = !DILocation(line: 3287, column: 37, scope: !2936)
!9650 = !DILocalVariable(name: "lof_array", scope: !2936, file: !3, line: 3291, type: !9651)
!9651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9652, size: 64)
!9652 = !DIDerivedType(tag: DW_TAG_typedef, name: "OrigSpaceLoop", file: !299, line: 184, baseType: !9653)
!9653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OrigSpaceLoop", file: !299, line: 182, size: 64, elements: !9654)
!9654 = !{!9655}
!9655 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !9653, file: !299, line: 183, baseType: !880, size: 64)
!9656 = !DILocation(line: 3291, column: 17, scope: !2936)
!9657 = !DILocation(line: 3291, column: 51, scope: !2936)
!9658 = !DILocation(line: 3291, column: 55, scope: !2936)
!9659 = !DILocation(line: 3291, column: 29, scope: !2936)
!9660 = !DILocalVariable(name: "lof", scope: !2936, file: !3, line: 3292, type: !9651)
!9661 = !DILocation(line: 3292, column: 17, scope: !2936)
!9662 = !DILocalVariable(name: "numpoly", scope: !2936, file: !3, line: 3293, type: !3793)
!9663 = !DILocation(line: 3293, column: 12, scope: !2936)
!9664 = !DILocation(line: 3293, column: 22, scope: !2936)
!9665 = !DILocation(line: 3293, column: 26, scope: !2936)
!9666 = !DILocation(line: 3293, column: 38, scope: !2936)
!9667 = !DILocalVariable(name: "mp", scope: !2936, file: !3, line: 3295, type: !3169)
!9668 = !DILocation(line: 3295, column: 9, scope: !2936)
!9669 = !DILocation(line: 3295, column: 14, scope: !2936)
!9670 = !DILocation(line: 3295, column: 18, scope: !2936)
!9671 = !DILocation(line: 3295, column: 31, scope: !2936)
!9672 = !DILocalVariable(name: "i", scope: !2936, file: !3, line: 3296, type: !156)
!9673 = !DILocation(line: 3296, column: 6, scope: !2936)
!9674 = !DILocalVariable(name: "j", scope: !2936, file: !3, line: 3296, type: !156)
!9675 = !DILocation(line: 3296, column: 9, scope: !2936)
!9676 = !DILocation(line: 3298, column: 9, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !2936, file: !3, line: 3298, column: 2)
!9678 = !DILocation(line: 3298, column: 7, scope: !9677)
!9679 = !DILocation(line: 3298, column: 14, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9677, file: !3, line: 3298, column: 2)
!9681 = !DILocation(line: 3298, column: 18, scope: !9680)
!9682 = !DILocation(line: 3298, column: 16, scope: !9680)
!9683 = !DILocation(line: 3298, column: 2, scope: !9677)
!9684 = !DILocation(line: 3300, column: 7, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9686, file: !3, line: 3300, column: 7)
!9686 = distinct !DILexicalBlock(scope: !9680, file: !3, line: 3298, column: 38)
!9687 = !DILocation(line: 3300, column: 11, scope: !9685)
!9688 = !DILocation(line: 3300, column: 19, scope: !9685)
!9689 = !DILocation(line: 3300, column: 24, scope: !9685)
!9690 = !DILocation(line: 3300, column: 27, scope: !9685)
!9691 = !DILocation(line: 3300, column: 31, scope: !9685)
!9692 = !DILocation(line: 3300, column: 39, scope: !9685)
!9693 = !DILocation(line: 3300, column: 7, scope: !9686)
!9694 = !DILocation(line: 3301, column: 10, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9685, file: !3, line: 3300, column: 45)
!9696 = !DILocation(line: 3301, column: 22, scope: !9695)
!9697 = !DILocation(line: 3301, column: 26, scope: !9695)
!9698 = !DILocation(line: 3301, column: 20, scope: !9695)
!9699 = !DILocation(line: 3301, column: 8, scope: !9695)
!9700 = !DILocation(line: 3302, column: 11, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 3302, column: 4)
!9702 = !DILocation(line: 3302, column: 9, scope: !9701)
!9703 = !DILocation(line: 3302, column: 16, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9701, file: !3, line: 3302, column: 4)
!9705 = !DILocation(line: 3302, column: 20, scope: !9704)
!9706 = !DILocation(line: 3302, column: 24, scope: !9704)
!9707 = !DILocation(line: 3302, column: 18, scope: !9704)
!9708 = !DILocation(line: 3302, column: 4, scope: !9701)
!9709 = !DILocation(line: 3303, column: 16, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9704, file: !3, line: 3302, column: 45)
!9711 = !DILocation(line: 3303, column: 21, scope: !9710)
!9712 = !DILocation(line: 3303, column: 37, scope: !9710)
!9713 = !DILocation(line: 3303, column: 25, scope: !9710)
!9714 = !DILocation(line: 3303, column: 5, scope: !9710)
!9715 = !DILocation(line: 3304, column: 4, scope: !9710)
!9716 = !DILocation(line: 3302, column: 34, scope: !9704)
!9717 = !DILocation(line: 3302, column: 41, scope: !9704)
!9718 = !DILocation(line: 3302, column: 4, scope: !9704)
!9719 = distinct !{!9719, !9708, !9720}
!9720 = !DILocation(line: 3304, column: 4, scope: !9701)
!9721 = !DILocation(line: 3305, column: 3, scope: !9695)
!9722 = !DILocation(line: 3306, column: 2, scope: !9686)
!9723 = !DILocation(line: 3298, column: 28, scope: !9680)
!9724 = !DILocation(line: 3298, column: 34, scope: !9680)
!9725 = !DILocation(line: 3298, column: 2, scope: !9680)
!9726 = distinct !{!9726, !9683, !9727}
!9727 = !DILocation(line: 3306, column: 2, scope: !9677)
!9728 = !DILocation(line: 3308, column: 2, scope: !2936)
!9729 = !DILocation(line: 3308, column: 6, scope: !2936)
!9730 = !DILocation(line: 3308, column: 12, scope: !2936)
!9731 = !DILocation(line: 3309, column: 1, scope: !2936)
!9732 = distinct !DISubprogram(name: "DM_get_vert_array", scope: !3, file: !3, line: 3453, type: !9733, scopeLine: 3454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!9733 = !DISubroutineType(types: !9734)
!9734 = !{!1635, !2108, !326}
!9735 = !DILocalVariable(name: "dm", arg: 1, scope: !9732, file: !3, line: 3453, type: !2108)
!9736 = !DILocation(line: 3453, column: 39, scope: !9732)
!9737 = !DILocalVariable(name: "allocated", arg: 2, scope: !9732, file: !3, line: 3453, type: !326)
!9738 = !DILocation(line: 3453, column: 49, scope: !9732)
!9739 = !DILocalVariable(name: "vert_data", scope: !9732, file: !3, line: 3455, type: !2209)
!9740 = !DILocation(line: 3455, column: 14, scope: !9732)
!9741 = !DILocation(line: 3455, column: 26, scope: !9732)
!9742 = !DILocation(line: 3455, column: 30, scope: !9732)
!9743 = !DILocation(line: 3455, column: 48, scope: !9732)
!9744 = !DILocalVariable(name: "mvert", scope: !9732, file: !3, line: 3456, type: !2812)
!9745 = !DILocation(line: 3456, column: 9, scope: !9732)
!9746 = !DILocation(line: 3456, column: 38, scope: !9732)
!9747 = !DILocation(line: 3456, column: 17, scope: !9732)
!9748 = !DILocation(line: 3457, column: 3, scope: !9732)
!9749 = !DILocation(line: 3457, column: 13, scope: !9732)
!9750 = !DILocation(line: 3459, column: 6, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 3459, column: 6)
!9752 = !DILocation(line: 3459, column: 12, scope: !9751)
!9753 = !DILocation(line: 3459, column: 6, scope: !9732)
!9754 = !DILocation(line: 3460, column: 11, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9751, file: !3, line: 3459, column: 21)
!9756 = !DILocation(line: 3460, column: 39, scope: !9755)
!9757 = !DILocation(line: 3460, column: 43, scope: !9755)
!9758 = !DILocation(line: 3460, column: 55, scope: !9755)
!9759 = !DILocation(line: 3460, column: 37, scope: !9755)
!9760 = !DILocation(line: 3460, column: 9, scope: !9755)
!9761 = !DILocation(line: 3461, column: 3, scope: !9755)
!9762 = !DILocation(line: 3461, column: 7, scope: !9755)
!9763 = !DILocation(line: 3461, column: 21, scope: !9755)
!9764 = !DILocation(line: 3461, column: 25, scope: !9755)
!9765 = !DILocation(line: 3462, column: 4, scope: !9755)
!9766 = !DILocation(line: 3462, column: 14, scope: !9755)
!9767 = !DILocation(line: 3463, column: 2, scope: !9755)
!9768 = !DILocation(line: 3465, column: 9, scope: !9732)
!9769 = !DILocation(line: 3465, column: 2, scope: !9732)
!9770 = distinct !DISubprogram(name: "DM_get_edge_array", scope: !3, file: !3, line: 3468, type: !9771, scopeLine: 3469, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!9771 = !DISubroutineType(types: !9772)
!9772 = !{!2132, !2108, !326}
!9773 = !DILocalVariable(name: "dm", arg: 1, scope: !9770, file: !3, line: 3468, type: !2108)
!9774 = !DILocation(line: 3468, column: 39, scope: !9770)
!9775 = !DILocalVariable(name: "allocated", arg: 2, scope: !9770, file: !3, line: 3468, type: !326)
!9776 = !DILocation(line: 3468, column: 49, scope: !9770)
!9777 = !DILocalVariable(name: "edge_data", scope: !9770, file: !3, line: 3470, type: !2209)
!9778 = !DILocation(line: 3470, column: 14, scope: !9770)
!9779 = !DILocation(line: 3470, column: 26, scope: !9770)
!9780 = !DILocation(line: 3470, column: 30, scope: !9770)
!9781 = !DILocation(line: 3470, column: 48, scope: !9770)
!9782 = !DILocalVariable(name: "medge", scope: !9770, file: !3, line: 3471, type: !3063)
!9783 = !DILocation(line: 3471, column: 9, scope: !9770)
!9784 = !DILocation(line: 3471, column: 38, scope: !9770)
!9785 = !DILocation(line: 3471, column: 17, scope: !9770)
!9786 = !DILocation(line: 3472, column: 3, scope: !9770)
!9787 = !DILocation(line: 3472, column: 13, scope: !9770)
!9788 = !DILocation(line: 3474, column: 6, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9770, file: !3, line: 3474, column: 6)
!9790 = !DILocation(line: 3474, column: 12, scope: !9789)
!9791 = !DILocation(line: 3474, column: 6, scope: !9770)
!9792 = !DILocation(line: 3475, column: 11, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9789, file: !3, line: 3474, column: 21)
!9794 = !DILocation(line: 3475, column: 39, scope: !9793)
!9795 = !DILocation(line: 3475, column: 43, scope: !9793)
!9796 = !DILocation(line: 3475, column: 55, scope: !9793)
!9797 = !DILocation(line: 3475, column: 37, scope: !9793)
!9798 = !DILocation(line: 3475, column: 9, scope: !9793)
!9799 = !DILocation(line: 3476, column: 3, scope: !9793)
!9800 = !DILocation(line: 3476, column: 7, scope: !9793)
!9801 = !DILocation(line: 3476, column: 21, scope: !9793)
!9802 = !DILocation(line: 3476, column: 25, scope: !9793)
!9803 = !DILocation(line: 3477, column: 4, scope: !9793)
!9804 = !DILocation(line: 3477, column: 14, scope: !9793)
!9805 = !DILocation(line: 3478, column: 2, scope: !9793)
!9806 = !DILocation(line: 3480, column: 9, scope: !9770)
!9807 = !DILocation(line: 3480, column: 2, scope: !9770)
!9808 = distinct !DISubprogram(name: "DM_get_loop_array", scope: !3, file: !3, line: 3483, type: !9809, scopeLine: 3484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!9809 = !DISubroutineType(types: !9810)
!9810 = !{!1652, !2108, !326}
!9811 = !DILocalVariable(name: "dm", arg: 1, scope: !9808, file: !3, line: 3483, type: !2108)
!9812 = !DILocation(line: 3483, column: 39, scope: !9808)
!9813 = !DILocalVariable(name: "allocated", arg: 2, scope: !9808, file: !3, line: 3483, type: !326)
!9814 = !DILocation(line: 3483, column: 49, scope: !9808)
!9815 = !DILocalVariable(name: "loop_data", scope: !9808, file: !3, line: 3485, type: !2209)
!9816 = !DILocation(line: 3485, column: 14, scope: !9808)
!9817 = !DILocation(line: 3485, column: 26, scope: !9808)
!9818 = !DILocation(line: 3485, column: 30, scope: !9808)
!9819 = !DILocation(line: 3485, column: 48, scope: !9808)
!9820 = !DILocalVariable(name: "mloop", scope: !9808, file: !3, line: 3486, type: !3136)
!9821 = !DILocation(line: 3486, column: 9, scope: !9808)
!9822 = !DILocation(line: 3486, column: 38, scope: !9808)
!9823 = !DILocation(line: 3486, column: 17, scope: !9808)
!9824 = !DILocation(line: 3487, column: 3, scope: !9808)
!9825 = !DILocation(line: 3487, column: 13, scope: !9808)
!9826 = !DILocation(line: 3489, column: 6, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9808, file: !3, line: 3489, column: 6)
!9828 = !DILocation(line: 3489, column: 12, scope: !9827)
!9829 = !DILocation(line: 3489, column: 6, scope: !9808)
!9830 = !DILocation(line: 3490, column: 11, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9827, file: !3, line: 3489, column: 21)
!9832 = !DILocation(line: 3490, column: 39, scope: !9831)
!9833 = !DILocation(line: 3490, column: 43, scope: !9831)
!9834 = !DILocation(line: 3490, column: 55, scope: !9831)
!9835 = !DILocation(line: 3490, column: 37, scope: !9831)
!9836 = !DILocation(line: 3490, column: 9, scope: !9831)
!9837 = !DILocation(line: 3491, column: 3, scope: !9831)
!9838 = !DILocation(line: 3491, column: 7, scope: !9831)
!9839 = !DILocation(line: 3491, column: 21, scope: !9831)
!9840 = !DILocation(line: 3491, column: 25, scope: !9831)
!9841 = !DILocation(line: 3492, column: 4, scope: !9831)
!9842 = !DILocation(line: 3492, column: 14, scope: !9831)
!9843 = !DILocation(line: 3493, column: 2, scope: !9831)
!9844 = !DILocation(line: 3495, column: 9, scope: !9808)
!9845 = !DILocation(line: 3495, column: 2, scope: !9808)
!9846 = distinct !DISubprogram(name: "DM_get_poly_array", scope: !3, file: !3, line: 3498, type: !9847, scopeLine: 3499, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!9847 = !DISubroutineType(types: !9848)
!9848 = !{!1643, !2108, !326}
!9849 = !DILocalVariable(name: "dm", arg: 1, scope: !9846, file: !3, line: 3498, type: !2108)
!9850 = !DILocation(line: 3498, column: 39, scope: !9846)
!9851 = !DILocalVariable(name: "allocated", arg: 2, scope: !9846, file: !3, line: 3498, type: !326)
!9852 = !DILocation(line: 3498, column: 49, scope: !9846)
!9853 = !DILocalVariable(name: "poly_data", scope: !9846, file: !3, line: 3500, type: !2209)
!9854 = !DILocation(line: 3500, column: 14, scope: !9846)
!9855 = !DILocation(line: 3500, column: 26, scope: !9846)
!9856 = !DILocation(line: 3500, column: 30, scope: !9846)
!9857 = !DILocation(line: 3500, column: 48, scope: !9846)
!9858 = !DILocalVariable(name: "mpoly", scope: !9846, file: !3, line: 3501, type: !3169)
!9859 = !DILocation(line: 3501, column: 9, scope: !9846)
!9860 = !DILocation(line: 3501, column: 38, scope: !9846)
!9861 = !DILocation(line: 3501, column: 17, scope: !9846)
!9862 = !DILocation(line: 3502, column: 3, scope: !9846)
!9863 = !DILocation(line: 3502, column: 13, scope: !9846)
!9864 = !DILocation(line: 3504, column: 6, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9846, file: !3, line: 3504, column: 6)
!9866 = !DILocation(line: 3504, column: 12, scope: !9865)
!9867 = !DILocation(line: 3504, column: 6, scope: !9846)
!9868 = !DILocation(line: 3505, column: 11, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9865, file: !3, line: 3504, column: 21)
!9870 = !DILocation(line: 3505, column: 39, scope: !9869)
!9871 = !DILocation(line: 3505, column: 43, scope: !9869)
!9872 = !DILocation(line: 3505, column: 55, scope: !9869)
!9873 = !DILocation(line: 3505, column: 37, scope: !9869)
!9874 = !DILocation(line: 3505, column: 9, scope: !9869)
!9875 = !DILocation(line: 3506, column: 3, scope: !9869)
!9876 = !DILocation(line: 3506, column: 7, scope: !9869)
!9877 = !DILocation(line: 3506, column: 21, scope: !9869)
!9878 = !DILocation(line: 3506, column: 25, scope: !9869)
!9879 = !DILocation(line: 3507, column: 4, scope: !9869)
!9880 = !DILocation(line: 3507, column: 14, scope: !9869)
!9881 = !DILocation(line: 3508, column: 2, scope: !9869)
!9882 = !DILocation(line: 3510, column: 9, scope: !9846)
!9883 = !DILocation(line: 3510, column: 2, scope: !9846)
!9884 = distinct !DISubprogram(name: "DM_get_tessface_array", scope: !3, file: !3, line: 3513, type: !9885, scopeLine: 3514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!9885 = !DISubroutineType(types: !9886)
!9886 = !{!2144, !2108, !326}
!9887 = !DILocalVariable(name: "dm", arg: 1, scope: !9884, file: !3, line: 3513, type: !2108)
!9888 = !DILocation(line: 3513, column: 43, scope: !9884)
!9889 = !DILocalVariable(name: "allocated", arg: 2, scope: !9884, file: !3, line: 3513, type: !326)
!9890 = !DILocation(line: 3513, column: 53, scope: !9884)
!9891 = !DILocalVariable(name: "tessface_data", scope: !9884, file: !3, line: 3515, type: !2209)
!9892 = !DILocation(line: 3515, column: 14, scope: !9884)
!9893 = !DILocation(line: 3515, column: 30, scope: !9884)
!9894 = !DILocation(line: 3515, column: 34, scope: !9884)
!9895 = !DILocation(line: 3515, column: 56, scope: !9884)
!9896 = !DILocalVariable(name: "mface", scope: !9884, file: !3, line: 3516, type: !304)
!9897 = !DILocation(line: 3516, column: 9, scope: !9884)
!9898 = !DILocation(line: 3516, column: 38, scope: !9884)
!9899 = !DILocation(line: 3516, column: 17, scope: !9884)
!9900 = !DILocation(line: 3517, column: 3, scope: !9884)
!9901 = !DILocation(line: 3517, column: 13, scope: !9884)
!9902 = !DILocation(line: 3519, column: 6, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9884, file: !3, line: 3519, column: 6)
!9904 = !DILocation(line: 3519, column: 12, scope: !9903)
!9905 = !DILocation(line: 3519, column: 6, scope: !9884)
!9906 = !DILocalVariable(name: "numTessFaces", scope: !9907, file: !3, line: 3520, type: !156)
!9907 = distinct !DILexicalBlock(scope: !9903, file: !3, line: 3519, column: 21)
!9908 = !DILocation(line: 3520, column: 7, scope: !9907)
!9909 = !DILocation(line: 3520, column: 22, scope: !9907)
!9910 = !DILocation(line: 3520, column: 26, scope: !9907)
!9911 = !DILocation(line: 3520, column: 42, scope: !9907)
!9912 = !DILocation(line: 3522, column: 7, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9907, file: !3, line: 3522, column: 7)
!9914 = !DILocation(line: 3522, column: 20, scope: !9913)
!9915 = !DILocation(line: 3522, column: 7, scope: !9907)
!9916 = !DILocation(line: 3523, column: 12, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9913, file: !3, line: 3522, column: 25)
!9918 = !DILocation(line: 3523, column: 40, scope: !9917)
!9919 = !DILocation(line: 3523, column: 38, scope: !9917)
!9920 = !DILocation(line: 3523, column: 10, scope: !9917)
!9921 = !DILocation(line: 3524, column: 4, scope: !9917)
!9922 = !DILocation(line: 3524, column: 8, scope: !9917)
!9923 = !DILocation(line: 3524, column: 26, scope: !9917)
!9924 = !DILocation(line: 3524, column: 30, scope: !9917)
!9925 = !DILocation(line: 3525, column: 5, scope: !9917)
!9926 = !DILocation(line: 3525, column: 15, scope: !9917)
!9927 = !DILocation(line: 3526, column: 3, scope: !9917)
!9928 = !DILocation(line: 3527, column: 2, scope: !9907)
!9929 = !DILocation(line: 3529, column: 9, scope: !9884)
!9930 = !DILocation(line: 3529, column: 2, scope: !9884)
!9931 = distinct !DISubprogram(name: "weightpaint_color", scope: !3, file: !3, line: 1115, type: !9932, scopeLine: 1116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!9932 = !DISubroutineType(types: !9933)
!9933 = !{null, !326, !5944, !2114}
!9934 = !DILocalVariable(name: "r_col", arg: 1, scope: !9931, file: !3, line: 1115, type: !326)
!9935 = !DILocation(line: 1115, column: 45, scope: !9931)
!9936 = !DILocalVariable(name: "dm_wcinfo", arg: 2, scope: !9931, file: !3, line: 1115, type: !5944)
!9937 = !DILocation(line: 1115, column: 74, scope: !9931)
!9938 = !DILocalVariable(name: "input", arg: 3, scope: !9931, file: !3, line: 1115, type: !2114)
!9939 = !DILocation(line: 1115, column: 97, scope: !9931)
!9940 = !DILocalVariable(name: "colf", scope: !9931, file: !3, line: 1117, type: !656)
!9941 = !DILocation(line: 1117, column: 8, scope: !9931)
!9942 = !DILocation(line: 1119, column: 6, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9931, file: !3, line: 1119, column: 6)
!9944 = !DILocation(line: 1119, column: 16, scope: !9943)
!9945 = !DILocation(line: 1119, column: 19, scope: !9943)
!9946 = !DILocation(line: 1119, column: 30, scope: !9943)
!9947 = !DILocation(line: 1119, column: 6, scope: !9931)
!9948 = !DILocation(line: 1120, column: 16, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9943, file: !3, line: 1119, column: 36)
!9950 = !DILocation(line: 1120, column: 27, scope: !9949)
!9951 = !DILocation(line: 1120, column: 33, scope: !9949)
!9952 = !DILocation(line: 1120, column: 40, scope: !9949)
!9953 = !DILocation(line: 1120, column: 3, scope: !9949)
!9954 = !DILocation(line: 1121, column: 2, scope: !9949)
!9955 = !DILocation(line: 1123, column: 17, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9943, file: !3, line: 1122, column: 7)
!9957 = !DILocation(line: 1123, column: 23, scope: !9956)
!9958 = !DILocation(line: 1123, column: 3, scope: !9956)
!9959 = !DILocation(line: 1128, column: 29, scope: !9931)
!9960 = !DILocation(line: 1128, column: 37, scope: !9931)
!9961 = !DILocation(line: 1128, column: 13, scope: !9931)
!9962 = !DILocation(line: 1128, column: 2, scope: !9931)
!9963 = !DILocation(line: 1128, column: 11, scope: !9931)
!9964 = !DILocation(line: 1129, column: 29, scope: !9931)
!9965 = !DILocation(line: 1129, column: 37, scope: !9931)
!9966 = !DILocation(line: 1129, column: 13, scope: !9931)
!9967 = !DILocation(line: 1129, column: 2, scope: !9931)
!9968 = !DILocation(line: 1129, column: 11, scope: !9931)
!9969 = !DILocation(line: 1130, column: 29, scope: !9931)
!9970 = !DILocation(line: 1130, column: 37, scope: !9931)
!9971 = !DILocation(line: 1130, column: 13, scope: !9931)
!9972 = !DILocation(line: 1130, column: 2, scope: !9931)
!9973 = !DILocation(line: 1130, column: 11, scope: !9931)
!9974 = !DILocation(line: 1131, column: 2, scope: !9931)
!9975 = !DILocation(line: 1131, column: 11, scope: !9931)
!9976 = !DILocation(line: 1132, column: 1, scope: !9931)
!9977 = distinct !DISubprogram(name: "calc_weightpaint_vert_color", scope: !3, file: !3, line: 1135, type: !9978, scopeLine: 1142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!9978 = !DISubroutineType(types: !9979)
!9979 = !{null, !326, !9980, !5944, !3793, !3793, !9982, !3793, !3793}
!9980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9981, size: 64)
!9981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5957)
!9982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 64)
!9983 = !DILocalVariable(name: "r_col", arg: 1, scope: !9977, file: !3, line: 1136, type: !326)
!9984 = !DILocation(line: 1136, column: 23, scope: !9977)
!9985 = !DILocalVariable(name: "dv", arg: 2, scope: !9977, file: !3, line: 1137, type: !9980)
!9986 = !DILocation(line: 1137, column: 28, scope: !9977)
!9987 = !DILocalVariable(name: "dm_wcinfo", arg: 3, scope: !9977, file: !3, line: 1138, type: !5944)
!9988 = !DILocation(line: 1138, column: 28, scope: !9977)
!9989 = !DILocalVariable(name: "defbase_tot", arg: 4, scope: !9977, file: !3, line: 1139, type: !3793)
!9990 = !DILocation(line: 1139, column: 19, scope: !9977)
!9991 = !DILocalVariable(name: "defbase_act", arg: 5, scope: !9977, file: !3, line: 1139, type: !3793)
!9992 = !DILocation(line: 1139, column: 42, scope: !9977)
!9993 = !DILocalVariable(name: "defbase_sel", arg: 6, scope: !9977, file: !3, line: 1140, type: !9982)
!9994 = !DILocation(line: 1140, column: 21, scope: !9977)
!9995 = !DILocalVariable(name: "defbase_sel_tot", arg: 7, scope: !9977, file: !3, line: 1140, type: !3793)
!9996 = !DILocation(line: 1140, column: 44, scope: !9977)
!9997 = !DILocalVariable(name: "draw_flag", arg: 8, scope: !9977, file: !3, line: 1141, type: !3793)
!9998 = !DILocation(line: 1141, column: 19, scope: !9977)
!9999 = !DILocalVariable(name: "input", scope: !9977, file: !3, line: 1143, type: !321)
!10000 = !DILocation(line: 1143, column: 8, scope: !9977)
!10001 = !DILocalVariable(name: "show_alert_color", scope: !9977, file: !3, line: 1145, type: !327)
!10002 = !DILocation(line: 1145, column: 7, scope: !9977)
!10003 = !DILocation(line: 1147, column: 7, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9977, file: !3, line: 1147, column: 6)
!10005 = !DILocation(line: 1147, column: 23, scope: !10004)
!10006 = !DILocation(line: 1147, column: 28, scope: !10004)
!10007 = !DILocation(line: 1147, column: 32, scope: !10004)
!10008 = !DILocation(line: 1147, column: 42, scope: !10004)
!10009 = !DILocation(line: 1147, column: 6, scope: !9977)
!10010 = !DILocalVariable(name: "was_a_nonzero", scope: !10011, file: !3, line: 1149, type: !327)
!10011 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 1147, column: 65)
!10012 = !DILocation(line: 1149, column: 8, scope: !10011)
!10013 = !DILocalVariable(name: "i", scope: !10011, file: !3, line: 1150, type: !7)
!10014 = !DILocation(line: 1150, column: 16, scope: !10011)
!10015 = !DILocalVariable(name: "dw", scope: !10011, file: !3, line: 1152, type: !10016)
!10016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10017, size: 64)
!10017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10018)
!10018 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDeformWeight", file: !299, line: 57, baseType: !1049)
!10019 = !DILocation(line: 1152, column: 24, scope: !10011)
!10020 = !DILocation(line: 1152, column: 29, scope: !10011)
!10021 = !DILocation(line: 1152, column: 33, scope: !10011)
!10022 = !DILocation(line: 1153, column: 12, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10011, file: !3, line: 1153, column: 3)
!10024 = !DILocation(line: 1153, column: 16, scope: !10023)
!10025 = !DILocation(line: 1153, column: 10, scope: !10023)
!10026 = !DILocation(line: 1153, column: 8, scope: !10023)
!10027 = !DILocation(line: 1153, column: 27, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10023, file: !3, line: 1153, column: 3)
!10029 = !DILocation(line: 1153, column: 29, scope: !10028)
!10030 = !DILocation(line: 1153, column: 3, scope: !10023)
!10031 = !DILocation(line: 1156, column: 8, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 1156, column: 8)
!10033 = distinct !DILexicalBlock(scope: !10028, file: !3, line: 1153, column: 46)
!10034 = !DILocation(line: 1156, column: 12, scope: !10032)
!10035 = !DILocation(line: 1156, column: 21, scope: !10032)
!10036 = !DILocation(line: 1156, column: 19, scope: !10032)
!10037 = !DILocation(line: 1156, column: 8, scope: !10033)
!10038 = !DILocation(line: 1157, column: 9, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 1157, column: 9)
!10040 = distinct !DILexicalBlock(scope: !10032, file: !3, line: 1156, column: 34)
!10041 = !DILocation(line: 1157, column: 21, scope: !10039)
!10042 = !DILocation(line: 1157, column: 25, scope: !10039)
!10043 = !DILocation(line: 1157, column: 9, scope: !10040)
!10044 = !DILocation(line: 1158, column: 10, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10046, file: !3, line: 1158, column: 10)
!10046 = distinct !DILexicalBlock(scope: !10039, file: !3, line: 1157, column: 34)
!10047 = !DILocation(line: 1158, column: 14, scope: !10045)
!10048 = !DILocation(line: 1158, column: 10, scope: !10046)
!10049 = !DILocation(line: 1159, column: 16, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10045, file: !3, line: 1158, column: 22)
!10051 = !DILocation(line: 1159, column: 20, scope: !10050)
!10052 = !DILocation(line: 1159, column: 13, scope: !10050)
!10053 = !DILocation(line: 1160, column: 21, scope: !10050)
!10054 = !DILocation(line: 1161, column: 6, scope: !10050)
!10055 = !DILocation(line: 1162, column: 5, scope: !10046)
!10056 = !DILocation(line: 1163, column: 4, scope: !10040)
!10057 = !DILocation(line: 1164, column: 3, scope: !10033)
!10058 = !DILocation(line: 1153, column: 36, scope: !10028)
!10059 = !DILocation(line: 1153, column: 42, scope: !10028)
!10060 = !DILocation(line: 1153, column: 3, scope: !10028)
!10061 = distinct !{!10061, !10030, !10062}
!10062 = !DILocation(line: 1164, column: 3, scope: !10023)
!10063 = !DILocation(line: 1167, column: 7, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10011, file: !3, line: 1167, column: 7)
!10065 = !DILocation(line: 1167, column: 21, scope: !10064)
!10066 = !DILocation(line: 1167, column: 7, scope: !10011)
!10067 = !DILocation(line: 1168, column: 21, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10064, file: !3, line: 1167, column: 31)
!10069 = !DILocation(line: 1169, column: 3, scope: !10068)
!10070 = !DILocation(line: 1170, column: 13, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10064, file: !3, line: 1170, column: 12)
!10072 = !DILocation(line: 1170, column: 23, scope: !10071)
!10073 = !DILocation(line: 1170, column: 49, scope: !10071)
!10074 = !DILocation(line: 1170, column: 12, scope: !10064)
!10075 = !DILocation(line: 1171, column: 13, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10071, file: !3, line: 1170, column: 59)
!10077 = !DILocation(line: 1171, column: 10, scope: !10076)
!10078 = !DILocation(line: 1172, column: 3, scope: !10076)
!10079 = !DILocation(line: 1173, column: 2, scope: !10011)
!10080 = !DILocation(line: 1176, column: 31, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 1174, column: 7)
!10082 = !DILocation(line: 1176, column: 35, scope: !10081)
!10083 = !DILocation(line: 1176, column: 11, scope: !10081)
!10084 = !DILocation(line: 1176, column: 9, scope: !10081)
!10085 = !DILocation(line: 1178, column: 7, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10081, file: !3, line: 1178, column: 7)
!10087 = !DILocation(line: 1178, column: 17, scope: !10086)
!10088 = !DILocation(line: 1178, column: 7, scope: !10081)
!10089 = !DILocation(line: 1179, column: 8, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 1179, column: 8)
!10091 = distinct !DILexicalBlock(scope: !10086, file: !3, line: 1178, column: 46)
!10092 = !DILocation(line: 1179, column: 14, scope: !10090)
!10093 = !DILocation(line: 1179, column: 8, scope: !10091)
!10094 = !DILocation(line: 1180, column: 22, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10090, file: !3, line: 1179, column: 23)
!10096 = !DILocation(line: 1181, column: 4, scope: !10095)
!10097 = !DILocation(line: 1182, column: 3, scope: !10091)
!10098 = !DILocation(line: 1183, column: 12, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10086, file: !3, line: 1183, column: 12)
!10100 = !DILocation(line: 1183, column: 22, scope: !10099)
!10101 = !DILocation(line: 1183, column: 12, scope: !10086)
!10102 = !DILocation(line: 1184, column: 8, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10104, file: !3, line: 1184, column: 8)
!10104 = distinct !DILexicalBlock(scope: !10099, file: !3, line: 1183, column: 48)
!10105 = !DILocation(line: 1184, column: 14, scope: !10103)
!10106 = !DILocation(line: 1184, column: 8, scope: !10104)
!10107 = !DILocation(line: 1185, column: 47, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10103, file: !3, line: 1184, column: 23)
!10109 = !DILocation(line: 1185, column: 51, scope: !10108)
!10110 = !DILocation(line: 1185, column: 24, scope: !10108)
!10111 = !DILocation(line: 1185, column: 22, scope: !10108)
!10112 = !DILocation(line: 1186, column: 4, scope: !10108)
!10113 = !DILocation(line: 1187, column: 3, scope: !10104)
!10114 = !DILocation(line: 1190, column: 6, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !9977, file: !3, line: 1190, column: 6)
!10116 = !DILocation(line: 1190, column: 23, scope: !10115)
!10117 = !DILocation(line: 1190, column: 6, scope: !9977)
!10118 = !DILocation(line: 1191, column: 3, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 1191, column: 3)
!10120 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 1191, column: 3)
!10121 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 1190, column: 33)
!10122 = !DILocation(line: 1191, column: 3, scope: !10120)
!10123 = !DILocation(line: 1191, column: 3, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10119, file: !3, line: 1191, column: 3)
!10125 = !DILocation(line: 1192, column: 21, scope: !10121)
!10126 = !DILocation(line: 1192, column: 28, scope: !10121)
!10127 = !DILocation(line: 1192, column: 39, scope: !10121)
!10128 = !DILocation(line: 1192, column: 3, scope: !10121)
!10129 = !DILocation(line: 1193, column: 2, scope: !10121)
!10130 = !DILocation(line: 1195, column: 27, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 1194, column: 7)
!10132 = !DILocation(line: 1195, column: 34, scope: !10131)
!10133 = !DILocation(line: 1195, column: 45, scope: !10131)
!10134 = !DILocation(line: 1195, column: 3, scope: !10131)
!10135 = !DILocation(line: 1196, column: 3, scope: !10131)
!10136 = !DILocation(line: 1196, column: 12, scope: !10131)
!10137 = !DILocation(line: 1198, column: 1, scope: !9977)
!10138 = distinct !DISubprogram(name: "copy_v3_v3_char", scope: !4729, file: !4729, line: 107, type: !6059, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!10139 = !DILocalVariable(name: "r", arg: 1, scope: !10138, file: !4729, line: 107, type: !319)
!10140 = !DILocation(line: 107, column: 35, scope: !10138)
!10141 = !DILocalVariable(name: "a", arg: 2, scope: !10138, file: !4729, line: 107, type: !1712)
!10142 = !DILocation(line: 107, column: 52, scope: !10138)
!10143 = !DILocation(line: 109, column: 9, scope: !10138)
!10144 = !DILocation(line: 109, column: 2, scope: !10138)
!10145 = !DILocation(line: 109, column: 7, scope: !10138)
!10146 = !DILocation(line: 110, column: 9, scope: !10138)
!10147 = !DILocation(line: 110, column: 2, scope: !10138)
!10148 = !DILocation(line: 110, column: 7, scope: !10138)
!10149 = !DILocation(line: 111, column: 9, scope: !10138)
!10150 = !DILocation(line: 111, column: 2, scope: !10138)
!10151 = !DILocation(line: 111, column: 7, scope: !10138)
!10152 = !DILocation(line: 112, column: 1, scope: !10138)
!10153 = distinct !DISubprogram(name: "BM_iter_init", scope: !6207, file: !6207, line: 53, type: !10154, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!10154 = !DISubroutineType(types: !10155)
!10155 = !{!327, !6210, !1749, !1713, !318}
!10156 = !DILocalVariable(name: "iter", arg: 1, scope: !10153, file: !6207, line: 53, type: !6210)
!10157 = !DILocation(line: 53, column: 38, scope: !10153)
!10158 = !DILocalVariable(name: "bm", arg: 2, scope: !10153, file: !6207, line: 53, type: !1749)
!10159 = !DILocation(line: 53, column: 51, scope: !10153)
!10160 = !DILocalVariable(name: "itype", arg: 3, scope: !10153, file: !6207, line: 53, type: !1713)
!10161 = !DILocation(line: 53, column: 66, scope: !10153)
!10162 = !DILocalVariable(name: "data", arg: 4, scope: !10153, file: !6207, line: 53, type: !318)
!10163 = !DILocation(line: 53, column: 79, scope: !10153)
!10164 = !DILocation(line: 56, column: 16, scope: !10153)
!10165 = !DILocation(line: 56, column: 2, scope: !10153)
!10166 = !DILocation(line: 56, column: 8, scope: !10153)
!10167 = !DILocation(line: 56, column: 14, scope: !10153)
!10168 = !DILocation(line: 59, column: 22, scope: !10153)
!10169 = !DILocation(line: 59, column: 10, scope: !10153)
!10170 = !DILocation(line: 59, column: 2, scope: !10153)
!10171 = !DILocation(line: 63, column: 4, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10153, file: !6207, line: 59, column: 29)
!10173 = !DILocation(line: 63, column: 10, scope: !10172)
!10174 = !DILocation(line: 63, column: 16, scope: !10172)
!10175 = !DILocation(line: 64, column: 4, scope: !10172)
!10176 = !DILocation(line: 64, column: 10, scope: !10172)
!10177 = !DILocation(line: 64, column: 16, scope: !10172)
!10178 = !DILocation(line: 65, column: 44, scope: !10172)
!10179 = !DILocation(line: 65, column: 48, scope: !10172)
!10180 = !DILocation(line: 65, column: 4, scope: !10172)
!10181 = !DILocation(line: 65, column: 10, scope: !10172)
!10182 = !DILocation(line: 65, column: 15, scope: !10172)
!10183 = !DILocation(line: 65, column: 28, scope: !10172)
!10184 = !DILocation(line: 65, column: 37, scope: !10172)
!10185 = !DILocation(line: 65, column: 42, scope: !10172)
!10186 = !DILocation(line: 66, column: 4, scope: !10172)
!10187 = !DILocation(line: 70, column: 4, scope: !10172)
!10188 = !DILocation(line: 70, column: 10, scope: !10172)
!10189 = !DILocation(line: 70, column: 16, scope: !10172)
!10190 = !DILocation(line: 71, column: 4, scope: !10172)
!10191 = !DILocation(line: 71, column: 10, scope: !10172)
!10192 = !DILocation(line: 71, column: 16, scope: !10172)
!10193 = !DILocation(line: 72, column: 44, scope: !10172)
!10194 = !DILocation(line: 72, column: 48, scope: !10172)
!10195 = !DILocation(line: 72, column: 4, scope: !10172)
!10196 = !DILocation(line: 72, column: 10, scope: !10172)
!10197 = !DILocation(line: 72, column: 15, scope: !10172)
!10198 = !DILocation(line: 72, column: 28, scope: !10172)
!10199 = !DILocation(line: 72, column: 37, scope: !10172)
!10200 = !DILocation(line: 72, column: 42, scope: !10172)
!10201 = !DILocation(line: 73, column: 4, scope: !10172)
!10202 = !DILocation(line: 77, column: 4, scope: !10172)
!10203 = !DILocation(line: 77, column: 10, scope: !10172)
!10204 = !DILocation(line: 77, column: 16, scope: !10172)
!10205 = !DILocation(line: 78, column: 4, scope: !10172)
!10206 = !DILocation(line: 78, column: 10, scope: !10172)
!10207 = !DILocation(line: 78, column: 16, scope: !10172)
!10208 = !DILocation(line: 79, column: 44, scope: !10172)
!10209 = !DILocation(line: 79, column: 48, scope: !10172)
!10210 = !DILocation(line: 79, column: 4, scope: !10172)
!10211 = !DILocation(line: 79, column: 10, scope: !10172)
!10212 = !DILocation(line: 79, column: 15, scope: !10172)
!10213 = !DILocation(line: 79, column: 28, scope: !10172)
!10214 = !DILocation(line: 79, column: 37, scope: !10172)
!10215 = !DILocation(line: 79, column: 42, scope: !10172)
!10216 = !DILocation(line: 80, column: 4, scope: !10172)
!10217 = !DILocation(line: 84, column: 4, scope: !10172)
!10218 = !DILocation(line: 84, column: 10, scope: !10172)
!10219 = !DILocation(line: 84, column: 16, scope: !10172)
!10220 = !DILocation(line: 85, column: 4, scope: !10172)
!10221 = !DILocation(line: 85, column: 10, scope: !10172)
!10222 = !DILocation(line: 85, column: 16, scope: !10172)
!10223 = !DILocation(line: 86, column: 46, scope: !10172)
!10224 = !DILocation(line: 86, column: 36, scope: !10172)
!10225 = !DILocation(line: 86, column: 4, scope: !10172)
!10226 = !DILocation(line: 86, column: 10, scope: !10172)
!10227 = !DILocation(line: 86, column: 15, scope: !10172)
!10228 = !DILocation(line: 86, column: 28, scope: !10172)
!10229 = !DILocation(line: 86, column: 34, scope: !10172)
!10230 = !DILocation(line: 87, column: 4, scope: !10172)
!10231 = !DILocation(line: 91, column: 4, scope: !10172)
!10232 = !DILocation(line: 91, column: 10, scope: !10172)
!10233 = !DILocation(line: 91, column: 16, scope: !10172)
!10234 = !DILocation(line: 92, column: 4, scope: !10172)
!10235 = !DILocation(line: 92, column: 10, scope: !10172)
!10236 = !DILocation(line: 92, column: 16, scope: !10172)
!10237 = !DILocation(line: 93, column: 46, scope: !10172)
!10238 = !DILocation(line: 93, column: 36, scope: !10172)
!10239 = !DILocation(line: 93, column: 4, scope: !10172)
!10240 = !DILocation(line: 93, column: 10, scope: !10172)
!10241 = !DILocation(line: 93, column: 15, scope: !10172)
!10242 = !DILocation(line: 93, column: 28, scope: !10172)
!10243 = !DILocation(line: 93, column: 34, scope: !10172)
!10244 = !DILocation(line: 94, column: 4, scope: !10172)
!10245 = !DILocation(line: 98, column: 4, scope: !10172)
!10246 = !DILocation(line: 98, column: 10, scope: !10172)
!10247 = !DILocation(line: 98, column: 16, scope: !10172)
!10248 = !DILocation(line: 99, column: 4, scope: !10172)
!10249 = !DILocation(line: 99, column: 10, scope: !10172)
!10250 = !DILocation(line: 99, column: 16, scope: !10172)
!10251 = !DILocation(line: 100, column: 46, scope: !10172)
!10252 = !DILocation(line: 100, column: 36, scope: !10172)
!10253 = !DILocation(line: 100, column: 4, scope: !10172)
!10254 = !DILocation(line: 100, column: 10, scope: !10172)
!10255 = !DILocation(line: 100, column: 15, scope: !10172)
!10256 = !DILocation(line: 100, column: 28, scope: !10172)
!10257 = !DILocation(line: 100, column: 34, scope: !10172)
!10258 = !DILocation(line: 101, column: 4, scope: !10172)
!10259 = !DILocation(line: 105, column: 4, scope: !10172)
!10260 = !DILocation(line: 105, column: 10, scope: !10172)
!10261 = !DILocation(line: 105, column: 16, scope: !10172)
!10262 = !DILocation(line: 106, column: 4, scope: !10172)
!10263 = !DILocation(line: 106, column: 10, scope: !10172)
!10264 = !DILocation(line: 106, column: 16, scope: !10172)
!10265 = !DILocation(line: 107, column: 46, scope: !10172)
!10266 = !DILocation(line: 107, column: 36, scope: !10172)
!10267 = !DILocation(line: 107, column: 4, scope: !10172)
!10268 = !DILocation(line: 107, column: 10, scope: !10172)
!10269 = !DILocation(line: 107, column: 15, scope: !10172)
!10270 = !DILocation(line: 107, column: 28, scope: !10172)
!10271 = !DILocation(line: 107, column: 34, scope: !10172)
!10272 = !DILocation(line: 108, column: 4, scope: !10172)
!10273 = !DILocation(line: 112, column: 4, scope: !10172)
!10274 = !DILocation(line: 112, column: 10, scope: !10172)
!10275 = !DILocation(line: 112, column: 16, scope: !10172)
!10276 = !DILocation(line: 113, column: 4, scope: !10172)
!10277 = !DILocation(line: 113, column: 10, scope: !10172)
!10278 = !DILocation(line: 113, column: 16, scope: !10172)
!10279 = !DILocation(line: 114, column: 46, scope: !10172)
!10280 = !DILocation(line: 114, column: 36, scope: !10172)
!10281 = !DILocation(line: 114, column: 4, scope: !10172)
!10282 = !DILocation(line: 114, column: 10, scope: !10172)
!10283 = !DILocation(line: 114, column: 15, scope: !10172)
!10284 = !DILocation(line: 114, column: 28, scope: !10172)
!10285 = !DILocation(line: 114, column: 34, scope: !10172)
!10286 = !DILocation(line: 115, column: 4, scope: !10172)
!10287 = !DILocation(line: 119, column: 4, scope: !10172)
!10288 = !DILocation(line: 119, column: 10, scope: !10172)
!10289 = !DILocation(line: 119, column: 16, scope: !10172)
!10290 = !DILocation(line: 120, column: 4, scope: !10172)
!10291 = !DILocation(line: 120, column: 10, scope: !10172)
!10292 = !DILocation(line: 120, column: 16, scope: !10172)
!10293 = !DILocation(line: 121, column: 46, scope: !10172)
!10294 = !DILocation(line: 121, column: 36, scope: !10172)
!10295 = !DILocation(line: 121, column: 4, scope: !10172)
!10296 = !DILocation(line: 121, column: 10, scope: !10172)
!10297 = !DILocation(line: 121, column: 15, scope: !10172)
!10298 = !DILocation(line: 121, column: 28, scope: !10172)
!10299 = !DILocation(line: 121, column: 34, scope: !10172)
!10300 = !DILocation(line: 122, column: 4, scope: !10172)
!10301 = !DILocation(line: 126, column: 4, scope: !10172)
!10302 = !DILocation(line: 126, column: 10, scope: !10172)
!10303 = !DILocation(line: 126, column: 16, scope: !10172)
!10304 = !DILocation(line: 127, column: 4, scope: !10172)
!10305 = !DILocation(line: 127, column: 10, scope: !10172)
!10306 = !DILocation(line: 127, column: 16, scope: !10172)
!10307 = !DILocation(line: 128, column: 46, scope: !10172)
!10308 = !DILocation(line: 128, column: 36, scope: !10172)
!10309 = !DILocation(line: 128, column: 4, scope: !10172)
!10310 = !DILocation(line: 128, column: 10, scope: !10172)
!10311 = !DILocation(line: 128, column: 15, scope: !10172)
!10312 = !DILocation(line: 128, column: 28, scope: !10172)
!10313 = !DILocation(line: 128, column: 34, scope: !10172)
!10314 = !DILocation(line: 129, column: 4, scope: !10172)
!10315 = !DILocation(line: 133, column: 4, scope: !10172)
!10316 = !DILocation(line: 133, column: 10, scope: !10172)
!10317 = !DILocation(line: 133, column: 16, scope: !10172)
!10318 = !DILocation(line: 134, column: 4, scope: !10172)
!10319 = !DILocation(line: 134, column: 10, scope: !10172)
!10320 = !DILocation(line: 134, column: 16, scope: !10172)
!10321 = !DILocation(line: 135, column: 46, scope: !10172)
!10322 = !DILocation(line: 135, column: 36, scope: !10172)
!10323 = !DILocation(line: 135, column: 4, scope: !10172)
!10324 = !DILocation(line: 135, column: 10, scope: !10172)
!10325 = !DILocation(line: 135, column: 15, scope: !10172)
!10326 = !DILocation(line: 135, column: 28, scope: !10172)
!10327 = !DILocation(line: 135, column: 34, scope: !10172)
!10328 = !DILocation(line: 136, column: 4, scope: !10172)
!10329 = !DILocation(line: 140, column: 4, scope: !10172)
!10330 = !DILocation(line: 140, column: 10, scope: !10172)
!10331 = !DILocation(line: 140, column: 16, scope: !10172)
!10332 = !DILocation(line: 141, column: 4, scope: !10172)
!10333 = !DILocation(line: 141, column: 10, scope: !10172)
!10334 = !DILocation(line: 141, column: 16, scope: !10172)
!10335 = !DILocation(line: 142, column: 46, scope: !10172)
!10336 = !DILocation(line: 142, column: 36, scope: !10172)
!10337 = !DILocation(line: 142, column: 4, scope: !10172)
!10338 = !DILocation(line: 142, column: 10, scope: !10172)
!10339 = !DILocation(line: 142, column: 15, scope: !10172)
!10340 = !DILocation(line: 142, column: 28, scope: !10172)
!10341 = !DILocation(line: 142, column: 34, scope: !10172)
!10342 = !DILocation(line: 143, column: 4, scope: !10172)
!10343 = !DILocation(line: 147, column: 4, scope: !10172)
!10344 = !DILocation(line: 147, column: 10, scope: !10172)
!10345 = !DILocation(line: 147, column: 16, scope: !10172)
!10346 = !DILocation(line: 148, column: 4, scope: !10172)
!10347 = !DILocation(line: 148, column: 10, scope: !10172)
!10348 = !DILocation(line: 148, column: 16, scope: !10172)
!10349 = !DILocation(line: 149, column: 46, scope: !10172)
!10350 = !DILocation(line: 149, column: 36, scope: !10172)
!10351 = !DILocation(line: 149, column: 4, scope: !10172)
!10352 = !DILocation(line: 149, column: 10, scope: !10172)
!10353 = !DILocation(line: 149, column: 15, scope: !10172)
!10354 = !DILocation(line: 149, column: 28, scope: !10172)
!10355 = !DILocation(line: 149, column: 34, scope: !10172)
!10356 = !DILocation(line: 150, column: 4, scope: !10172)
!10357 = !DILocation(line: 154, column: 4, scope: !10172)
!10358 = !DILocation(line: 158, column: 2, scope: !10153)
!10359 = !DILocation(line: 158, column: 8, scope: !10153)
!10360 = !DILocation(line: 158, column: 14, scope: !10153)
!10361 = !DILocation(line: 160, column: 2, scope: !10153)
!10362 = !DILocation(line: 161, column: 1, scope: !10153)
!10363 = distinct !DISubprogram(name: "editbmesh_calc_modifiers", scope: !3, file: !3, line: 1994, type: !10364, scopeLine: 1997, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!10364 = !DISubroutineType(types: !10365)
!10365 = !{null, !5258, !4007, !5722, !6577, !6577, !2768}
!10366 = !DILocalVariable(name: "scene", arg: 1, scope: !10363, file: !3, line: 1994, type: !5258)
!10367 = !DILocation(line: 1994, column: 45, scope: !10363)
!10368 = !DILocalVariable(name: "ob", arg: 2, scope: !10363, file: !3, line: 1994, type: !4007)
!10369 = !DILocation(line: 1994, column: 60, scope: !10363)
!10370 = !DILocalVariable(name: "em", arg: 3, scope: !10363, file: !3, line: 1994, type: !5722)
!10371 = !DILocation(line: 1994, column: 76, scope: !10363)
!10372 = !DILocalVariable(name: "cage_r", arg: 4, scope: !10363, file: !3, line: 1994, type: !6577)
!10373 = !DILocation(line: 1994, column: 94, scope: !10363)
!10374 = !DILocalVariable(name: "final_r", arg: 5, scope: !10363, file: !3, line: 1995, type: !6577)
!10375 = !DILocation(line: 1995, column: 52, scope: !10363)
!10376 = !DILocalVariable(name: "dataMask", arg: 6, scope: !10363, file: !3, line: 1996, type: !2768)
!10377 = !DILocation(line: 1996, column: 53, scope: !10363)
!10378 = !DILocalVariable(name: "md", scope: !10363, file: !3, line: 1998, type: !5260)
!10379 = !DILocation(line: 1998, column: 16, scope: !10363)
!10380 = !DILocalVariable(name: "previewmd", scope: !10363, file: !3, line: 1998, type: !5260)
!10381 = !DILocation(line: 1998, column: 21, scope: !10363)
!10382 = !DILocalVariable(name: "deformedVerts", scope: !10363, file: !3, line: 1999, type: !1660)
!10383 = !DILocation(line: 1999, column: 10, scope: !10363)
!10384 = !DILocalVariable(name: "mask", scope: !10363, file: !3, line: 2000, type: !2768)
!10385 = !DILocation(line: 2000, column: 17, scope: !10363)
!10386 = !DILocalVariable(name: "previewmask", scope: !10363, file: !3, line: 2000, type: !2768)
!10387 = !DILocation(line: 2000, column: 23, scope: !10363)
!10388 = !DILocalVariable(name: "append_mask", scope: !10363, file: !3, line: 2000, type: !2768)
!10389 = !DILocation(line: 2000, column: 40, scope: !10363)
!10390 = !DILocalVariable(name: "dm", scope: !10363, file: !3, line: 2001, type: !2108)
!10391 = !DILocation(line: 2001, column: 15, scope: !10363)
!10392 = !DILocalVariable(name: "orcodm", scope: !10363, file: !3, line: 2001, type: !2108)
!10393 = !DILocation(line: 2001, column: 27, scope: !10363)
!10394 = !DILocalVariable(name: "i", scope: !10363, file: !3, line: 2002, type: !156)
!10395 = !DILocation(line: 2002, column: 6, scope: !10363)
!10396 = !DILocalVariable(name: "numVerts", scope: !10363, file: !3, line: 2002, type: !156)
!10397 = !DILocation(line: 2002, column: 9, scope: !10363)
!10398 = !DILocalVariable(name: "cageIndex", scope: !10363, file: !3, line: 2002, type: !156)
!10399 = !DILocation(line: 2002, column: 23, scope: !10363)
!10400 = !DILocation(line: 2002, column: 58, scope: !10363)
!10401 = !DILocation(line: 2002, column: 65, scope: !10363)
!10402 = !DILocation(line: 2002, column: 35, scope: !10363)
!10403 = !DILocalVariable(name: "datamasks", scope: !10363, file: !3, line: 2003, type: !6613)
!10404 = !DILocation(line: 2003, column: 14, scope: !10363)
!10405 = !DILocalVariable(name: "curr", scope: !10363, file: !3, line: 2003, type: !6613)
!10406 = !DILocation(line: 2003, column: 26, scope: !10363)
!10407 = !DILocalVariable(name: "required_mode", scope: !10363, file: !3, line: 2004, type: !156)
!10408 = !DILocation(line: 2004, column: 6, scope: !10363)
!10409 = !DILocalVariable(name: "draw_flag", scope: !10363, file: !3, line: 2005, type: !156)
!10410 = !DILocation(line: 2005, column: 6, scope: !10363)
!10411 = !DILocation(line: 2005, column: 35, scope: !10363)
!10412 = !DILocation(line: 2005, column: 42, scope: !10363)
!10413 = !DILocation(line: 2005, column: 18, scope: !10363)
!10414 = !DILocalVariable(name: "do_final_wmcol", scope: !10363, file: !3, line: 2011, type: !2353)
!10415 = !DILocation(line: 2011, column: 13, scope: !10363)
!10416 = !DILocalVariable(name: "do_init_wmcol", scope: !10363, file: !3, line: 2012, type: !2353)
!10417 = !DILocation(line: 2012, column: 13, scope: !10363)
!10418 = !DILocation(line: 2012, column: 40, scope: !10363)
!10419 = !DILocation(line: 2012, column: 44, scope: !10363)
!10420 = !DILocation(line: 2012, column: 32, scope: !10363)
!10421 = !DILocation(line: 2012, column: 51, scope: !10363)
!10422 = !DILocation(line: 2012, column: 60, scope: !10363)
!10423 = !DILocation(line: 2012, column: 76, scope: !10363)
!10424 = !DILocation(line: 0, scope: !10363)
!10425 = !DILocation(line: 2012, column: 29, scope: !10363)
!10426 = !DILocalVariable(name: "do_init_statvis", scope: !10363, file: !3, line: 2013, type: !2353)
!10427 = !DILocation(line: 2013, column: 13, scope: !10363)
!10428 = !DILocation(line: 2013, column: 42, scope: !10363)
!10429 = !DILocation(line: 2013, column: 46, scope: !10363)
!10430 = !DILocation(line: 2013, column: 34, scope: !10363)
!10431 = !DILocation(line: 2013, column: 53, scope: !10363)
!10432 = !DILocation(line: 2013, column: 62, scope: !10363)
!10433 = !DILocation(line: 2013, column: 81, scope: !10363)
!10434 = !DILocation(line: 2013, column: 85, scope: !10363)
!10435 = !DILocation(line: 2013, column: 84, scope: !10363)
!10436 = !DILocation(line: 2013, column: 31, scope: !10363)
!10437 = !DILocalVariable(name: "do_mod_wmcol", scope: !10363, file: !3, line: 2014, type: !2353)
!10438 = !DILocation(line: 2014, column: 13, scope: !10363)
!10439 = !DILocation(line: 2014, column: 28, scope: !10363)
!10440 = !DILocalVariable(name: "virtualModifierData", scope: !10363, file: !3, line: 2015, type: !6723)
!10441 = !DILocation(line: 2015, column: 22, scope: !10363)
!10442 = !DILocalVariable(name: "do_loop_normals", scope: !10363, file: !3, line: 2017, type: !2353)
!10443 = !DILocation(line: 2017, column: 13, scope: !10363)
!10444 = !DILocation(line: 2017, column: 42, scope: !10363)
!10445 = !DILocation(line: 2017, column: 46, scope: !10363)
!10446 = !DILocation(line: 2017, column: 33, scope: !10363)
!10447 = !DILocation(line: 2017, column: 54, scope: !10363)
!10448 = !DILocation(line: 2017, column: 32, scope: !10363)
!10449 = !DILocation(line: 2017, column: 59, scope: !10363)
!10450 = !DILocation(line: 2017, column: 31, scope: !10363)
!10451 = !DILocalVariable(name: "loop_normals_split_angle", scope: !10363, file: !3, line: 2018, type: !2114)
!10452 = !DILocation(line: 2018, column: 14, scope: !10363)
!10453 = !DILocation(line: 2018, column: 51, scope: !10363)
!10454 = !DILocation(line: 2018, column: 55, scope: !10363)
!10455 = !DILocation(line: 2018, column: 42, scope: !10363)
!10456 = !DILocation(line: 2018, column: 63, scope: !10363)
!10457 = !DILocation(line: 2020, column: 24, scope: !10363)
!10458 = !DILocation(line: 2020, column: 2, scope: !10363)
!10459 = !DILocation(line: 2022, column: 6, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 2022, column: 6)
!10461 = !DILocation(line: 2022, column: 13, scope: !10460)
!10462 = !DILocation(line: 2022, column: 16, scope: !10460)
!10463 = !DILocation(line: 2022, column: 26, scope: !10460)
!10464 = !DILocation(line: 2022, column: 6, scope: !10363)
!10465 = !DILocation(line: 2023, column: 33, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10460, file: !3, line: 2022, column: 33)
!10467 = !DILocation(line: 2023, column: 37, scope: !10466)
!10468 = !DILocation(line: 2023, column: 13, scope: !10466)
!10469 = !DILocation(line: 2023, column: 4, scope: !10466)
!10470 = !DILocation(line: 2023, column: 11, scope: !10466)
!10471 = !DILocation(line: 2024, column: 2, scope: !10466)
!10472 = !DILocation(line: 2026, column: 40, scope: !10363)
!10473 = !DILocation(line: 2026, column: 7, scope: !10363)
!10474 = !DILocation(line: 2026, column: 5, scope: !10363)
!10475 = !DILocation(line: 2029, column: 6, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 2029, column: 6)
!10477 = !DILocation(line: 2029, column: 6, scope: !10363)
!10478 = !DILocation(line: 2030, column: 40, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10476, file: !3, line: 2029, column: 20)
!10480 = !DILocation(line: 2030, column: 47, scope: !10479)
!10481 = !DILocation(line: 2030, column: 51, scope: !10479)
!10482 = !DILocation(line: 2030, column: 15, scope: !10479)
!10483 = !DILocation(line: 2030, column: 13, scope: !10479)
!10484 = !DILocation(line: 2032, column: 7, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10479, file: !3, line: 2032, column: 7)
!10486 = !DILocation(line: 2032, column: 7, scope: !10479)
!10487 = !DILocation(line: 2033, column: 16, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10485, file: !3, line: 2032, column: 18)
!10489 = !DILocation(line: 2034, column: 3, scope: !10488)
!10490 = !DILocation(line: 2035, column: 2, scope: !10479)
!10491 = !DILocation(line: 2037, column: 38, scope: !10363)
!10492 = !DILocation(line: 2037, column: 45, scope: !10363)
!10493 = !DILocation(line: 2037, column: 49, scope: !10363)
!10494 = !DILocation(line: 2037, column: 53, scope: !10363)
!10495 = !DILocation(line: 2037, column: 63, scope: !10363)
!10496 = !DILocation(line: 2037, column: 78, scope: !10363)
!10497 = !DILocation(line: 2037, column: 89, scope: !10363)
!10498 = !DILocation(line: 2037, column: 14, scope: !10363)
!10499 = !DILocation(line: 2037, column: 12, scope: !10363)
!10500 = !DILocation(line: 2039, column: 9, scope: !10363)
!10501 = !DILocation(line: 2039, column: 7, scope: !10363)
!10502 = !DILocation(line: 2040, column: 9, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 2040, column: 2)
!10504 = !DILocation(line: 2040, column: 7, scope: !10503)
!10505 = !DILocation(line: 2040, column: 14, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10503, file: !3, line: 2040, column: 2)
!10507 = !DILocation(line: 2040, column: 2, scope: !10503)
!10508 = !DILocalVariable(name: "mti", scope: !10509, file: !3, line: 2041, type: !5274)
!10509 = distinct !DILexicalBlock(scope: !10506, file: !3, line: 2040, column: 57)
!10510 = !DILocation(line: 2041, column: 21, scope: !10509)
!10511 = !DILocation(line: 2041, column: 48, scope: !10509)
!10512 = !DILocation(line: 2041, column: 52, scope: !10509)
!10513 = !DILocation(line: 2041, column: 27, scope: !10509)
!10514 = !DILocation(line: 2043, column: 15, scope: !10509)
!10515 = !DILocation(line: 2043, column: 3, scope: !10509)
!10516 = !DILocation(line: 2043, column: 7, scope: !10509)
!10517 = !DILocation(line: 2043, column: 13, scope: !10509)
!10518 = !DILocation(line: 2045, column: 38, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10509, file: !3, line: 2045, column: 7)
!10520 = !DILocation(line: 2045, column: 45, scope: !10519)
!10521 = !DILocation(line: 2045, column: 49, scope: !10519)
!10522 = !DILocation(line: 2045, column: 8, scope: !10519)
!10523 = !DILocation(line: 2045, column: 7, scope: !10509)
!10524 = !DILocation(line: 2046, column: 4, scope: !10519)
!10525 = !DILocation(line: 2049, column: 7, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10509, file: !3, line: 2049, column: 7)
!10527 = !DILocation(line: 2049, column: 10, scope: !10526)
!10528 = !DILocation(line: 2049, column: 13, scope: !10526)
!10529 = !DILocation(line: 2049, column: 18, scope: !10526)
!10530 = !DILocation(line: 2049, column: 7, scope: !10509)
!10531 = !DILocation(line: 2050, column: 11, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10526, file: !3, line: 2049, column: 36)
!10533 = !DILocation(line: 2050, column: 16, scope: !10532)
!10534 = !DILocation(line: 2050, column: 33, scope: !10532)
!10535 = !DILocation(line: 2050, column: 37, scope: !10532)
!10536 = !DILocation(line: 2050, column: 9, scope: !10532)
!10537 = !DILocation(line: 2051, column: 8, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 2051, column: 8)
!10539 = !DILocation(line: 2051, column: 13, scope: !10538)
!10540 = !DILocation(line: 2051, column: 8, scope: !10532)
!10541 = !DILocation(line: 2052, column: 17, scope: !10538)
!10542 = !DILocation(line: 2052, column: 21, scope: !10538)
!10543 = !DILocation(line: 2052, column: 25, scope: !10538)
!10544 = !DILocation(line: 2052, column: 29, scope: !10538)
!10545 = !DILocation(line: 2052, column: 5, scope: !10538)
!10546 = !DILocation(line: 2053, column: 3, scope: !10532)
!10547 = !DILocation(line: 2060, column: 7, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10509, file: !3, line: 2060, column: 7)
!10549 = !DILocation(line: 2060, column: 12, scope: !10548)
!10550 = !DILocation(line: 2060, column: 17, scope: !10548)
!10551 = !DILocation(line: 2060, column: 7, scope: !10509)
!10552 = !DILocation(line: 2062, column: 9, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10554, file: !3, line: 2062, column: 8)
!10554 = distinct !DILexicalBlock(scope: !10548, file: !3, line: 2060, column: 50)
!10555 = !DILocation(line: 2062, column: 8, scope: !10554)
!10556 = !DILocation(line: 2063, column: 9, scope: !10557)
!10557 = distinct !DILexicalBlock(scope: !10558, file: !3, line: 2063, column: 9)
!10558 = distinct !DILexicalBlock(scope: !10553, file: !3, line: 2062, column: 24)
!10559 = !DILocation(line: 2063, column: 9, scope: !10558)
!10560 = !DILocation(line: 2068, column: 17, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10557, file: !3, line: 2063, column: 13)
!10562 = !DILocation(line: 2068, column: 21, scope: !10561)
!10563 = !DILocation(line: 2068, column: 33, scope: !10561)
!10564 = !DILocation(line: 2068, column: 15, scope: !10561)
!10565 = !DILocation(line: 2070, column: 10, scope: !10561)
!10566 = !DILocation(line: 2070, column: 47, scope: !10561)
!10567 = !DILocation(line: 2070, column: 45, scope: !10561)
!10568 = !DILocation(line: 2069, column: 20, scope: !10561)
!10569 = !DILocation(line: 2071, column: 6, scope: !10561)
!10570 = !DILocation(line: 2071, column: 10, scope: !10561)
!10571 = !DILocation(line: 2071, column: 21, scope: !10561)
!10572 = !DILocation(line: 2071, column: 25, scope: !10561)
!10573 = !DILocation(line: 2072, column: 5, scope: !10561)
!10574 = !DILocation(line: 2074, column: 47, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10557, file: !3, line: 2073, column: 10)
!10576 = !DILocation(line: 2074, column: 22, scope: !10575)
!10577 = !DILocation(line: 2074, column: 20, scope: !10575)
!10578 = !DILocation(line: 2076, column: 4, scope: !10558)
!10579 = !DILocation(line: 2078, column: 8, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10554, file: !3, line: 2078, column: 8)
!10581 = !DILocation(line: 2078, column: 13, scope: !10580)
!10582 = !DILocation(line: 2078, column: 8, scope: !10554)
!10583 = !DILocation(line: 2079, column: 27, scope: !10580)
!10584 = !DILocation(line: 2079, column: 31, scope: !10580)
!10585 = !DILocation(line: 2079, column: 35, scope: !10580)
!10586 = !DILocation(line: 2079, column: 39, scope: !10580)
!10587 = !DILocation(line: 2079, column: 43, scope: !10580)
!10588 = !DILocation(line: 2079, column: 58, scope: !10580)
!10589 = !DILocation(line: 2079, column: 5, scope: !10580)
!10590 = !DILocation(line: 2081, column: 25, scope: !10580)
!10591 = !DILocation(line: 2081, column: 29, scope: !10580)
!10592 = !DILocation(line: 2081, column: 33, scope: !10580)
!10593 = !DILocation(line: 2081, column: 37, scope: !10580)
!10594 = !DILocation(line: 2081, column: 52, scope: !10580)
!10595 = !DILocation(line: 2081, column: 5, scope: !10580)
!10596 = !DILocation(line: 2082, column: 3, scope: !10554)
!10597 = !DILocalVariable(name: "ndm", scope: !10598, file: !3, line: 2084, type: !2108)
!10598 = distinct !DILexicalBlock(scope: !10548, file: !3, line: 2083, column: 8)
!10599 = !DILocation(line: 2084, column: 17, scope: !10598)
!10600 = !DILocation(line: 2087, column: 8, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 2087, column: 8)
!10602 = !DILocation(line: 2087, column: 8, scope: !10598)
!10603 = !DILocation(line: 2088, column: 9, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10605, file: !3, line: 2088, column: 9)
!10605 = distinct !DILexicalBlock(scope: !10601, file: !3, line: 2087, column: 12)
!10606 = !DILocation(line: 2088, column: 9, scope: !10605)
!10607 = !DILocalVariable(name: "tdm", scope: !10608, file: !3, line: 2089, type: !2108)
!10608 = distinct !DILexicalBlock(scope: !10604, file: !3, line: 2088, column: 24)
!10609 = !DILocation(line: 2089, column: 19, scope: !10608)
!10610 = !DILocation(line: 2089, column: 35, scope: !10608)
!10611 = !DILocation(line: 2089, column: 25, scope: !10608)
!10612 = !DILocation(line: 2090, column: 12, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10608, file: !3, line: 2090, column: 10)
!10614 = !DILocation(line: 2090, column: 19, scope: !10613)
!10615 = !DILocation(line: 2090, column: 22, scope: !10613)
!10616 = !DILocation(line: 2090, column: 29, scope: !10613)
!10617 = !DILocation(line: 2090, column: 28, scope: !10613)
!10618 = !DILocation(line: 2090, column: 25, scope: !10613)
!10619 = !DILocation(line: 2090, column: 10, scope: !10608)
!10620 = !DILocation(line: 2090, column: 38, scope: !10613)
!10621 = !DILocation(line: 2090, column: 42, scope: !10613)
!10622 = !DILocation(line: 2090, column: 50, scope: !10613)
!10623 = !DILocation(line: 2091, column: 11, scope: !10608)
!10624 = !DILocation(line: 2091, column: 9, scope: !10608)
!10625 = !DILocation(line: 2093, column: 29, scope: !10608)
!10626 = !DILocation(line: 2093, column: 33, scope: !10608)
!10627 = !DILocation(line: 2093, column: 6, scope: !10608)
!10628 = !DILocation(line: 2094, column: 5, scope: !10608)
!10629 = !DILocation(line: 2095, column: 14, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10604, file: !3, line: 2095, column: 14)
!10631 = !DILocation(line: 2095, column: 21, scope: !10630)
!10632 = !DILocation(line: 2095, column: 24, scope: !10630)
!10633 = !DILocation(line: 2095, column: 31, scope: !10630)
!10634 = !DILocation(line: 2095, column: 30, scope: !10630)
!10635 = !DILocation(line: 2095, column: 27, scope: !10630)
!10636 = !DILocation(line: 2095, column: 14, scope: !10604)
!10637 = !DILocation(line: 2098, column: 21, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10630, file: !3, line: 2095, column: 39)
!10639 = !DILocation(line: 2098, column: 11, scope: !10638)
!10640 = !DILocation(line: 2098, column: 9, scope: !10638)
!10641 = !DILocation(line: 2099, column: 5, scope: !10638)
!10642 = !DILocation(line: 2101, column: 4, scope: !10605)
!10643 = !DILocation(line: 2103, column: 30, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10601, file: !3, line: 2102, column: 9)
!10645 = !DILocation(line: 2103, column: 10, scope: !10644)
!10646 = !DILocation(line: 2103, column: 8, scope: !10644)
!10647 = !DILocation(line: 2106, column: 9, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10644, file: !3, line: 2106, column: 9)
!10649 = !DILocation(line: 2106, column: 9, scope: !10644)
!10650 = !DILocation(line: 2107, column: 29, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10648, file: !3, line: 2106, column: 24)
!10652 = !DILocation(line: 2107, column: 33, scope: !10651)
!10653 = !DILocation(line: 2107, column: 6, scope: !10651)
!10654 = !DILocation(line: 2108, column: 5, scope: !10651)
!10655 = !DILocation(line: 2110, column: 9, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10644, file: !3, line: 2110, column: 9)
!10657 = !DILocation(line: 2110, column: 9, scope: !10644)
!10658 = !DILocation(line: 2111, column: 28, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10656, file: !3, line: 2110, column: 24)
!10660 = !DILocation(line: 2111, column: 32, scope: !10659)
!10661 = !DILocation(line: 2111, column: 36, scope: !10659)
!10662 = !DILocation(line: 2111, column: 6, scope: !10659)
!10663 = !DILocation(line: 2112, column: 5, scope: !10659)
!10664 = !DILocation(line: 2116, column: 11, scope: !10598)
!10665 = !DILocation(line: 2116, column: 17, scope: !10598)
!10666 = !DILocation(line: 2116, column: 9, scope: !10598)
!10667 = !DILocation(line: 2117, column: 8, scope: !10668)
!10668 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 2117, column: 8)
!10669 = !DILocation(line: 2117, column: 13, scope: !10668)
!10670 = !DILocation(line: 2117, column: 8, scope: !10598)
!10671 = !DILocation(line: 2118, column: 10, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 2118, column: 9)
!10673 = distinct !DILexicalBlock(scope: !10668, file: !3, line: 2117, column: 29)
!10674 = !DILocation(line: 2118, column: 9, scope: !10673)
!10675 = !DILocation(line: 2119, column: 30, scope: !10672)
!10676 = !DILocation(line: 2119, column: 34, scope: !10672)
!10677 = !DILocation(line: 2119, column: 38, scope: !10672)
!10678 = !DILocation(line: 2119, column: 44, scope: !10672)
!10679 = !DILocation(line: 2119, column: 15, scope: !10672)
!10680 = !DILocation(line: 2119, column: 13, scope: !10672)
!10681 = !DILocation(line: 2119, column: 6, scope: !10672)
!10682 = !DILocation(line: 2121, column: 10, scope: !10673)
!10683 = !DILocation(line: 2122, column: 22, scope: !10673)
!10684 = !DILocation(line: 2122, column: 30, scope: !10673)
!10685 = !DILocation(line: 2122, column: 35, scope: !10673)
!10686 = !DILocation(line: 2122, column: 5, scope: !10673)
!10687 = !DILocation(line: 2124, column: 9, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 2124, column: 9)
!10689 = !DILocation(line: 2124, column: 14, scope: !10688)
!10690 = !DILocation(line: 2124, column: 9, scope: !10673)
!10691 = !DILocation(line: 2125, column: 36, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10688, file: !3, line: 2124, column: 31)
!10693 = !DILocation(line: 2125, column: 40, scope: !10692)
!10694 = !DILocation(line: 2125, column: 44, scope: !10692)
!10695 = !DILocation(line: 2125, column: 48, scope: !10692)
!10696 = !DILocation(line: 2125, column: 12, scope: !10692)
!10697 = !DILocation(line: 2125, column: 10, scope: !10692)
!10698 = !DILocation(line: 2126, column: 5, scope: !10692)
!10699 = !DILocation(line: 2128, column: 34, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10688, file: !3, line: 2127, column: 10)
!10701 = !DILocation(line: 2128, column: 38, scope: !10700)
!10702 = !DILocation(line: 2128, column: 42, scope: !10700)
!10703 = !DILocation(line: 2128, column: 12, scope: !10700)
!10704 = !DILocation(line: 2128, column: 10, scope: !10700)
!10705 = !DILocation(line: 2132, column: 9, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 2132, column: 9)
!10707 = !DILocation(line: 2132, column: 9, scope: !10673)
!10708 = !DILocation(line: 2134, column: 10, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !10710, file: !3, line: 2134, column: 10)
!10710 = distinct !DILexicalBlock(scope: !10706, file: !3, line: 2132, column: 14)
!10711 = !DILocation(line: 2134, column: 17, scope: !10709)
!10712 = !DILocation(line: 2134, column: 20, scope: !10709)
!10713 = !DILocation(line: 2134, column: 30, scope: !10709)
!10714 = !DILocation(line: 2134, column: 27, scope: !10709)
!10715 = !DILocation(line: 2134, column: 10, scope: !10710)
!10716 = !DILocation(line: 2134, column: 35, scope: !10709)
!10717 = !DILocation(line: 2134, column: 43, scope: !10709)
!10718 = !DILocation(line: 2134, column: 51, scope: !10709)
!10719 = !DILocation(line: 2135, column: 15, scope: !10710)
!10720 = !DILocation(line: 2135, column: 13, scope: !10710)
!10721 = !DILocation(line: 2136, column: 5, scope: !10710)
!10722 = !DILocation(line: 2137, column: 4, scope: !10673)
!10723 = !DILocation(line: 2140, column: 12, scope: !10598)
!10724 = !DILocation(line: 2140, column: 9, scope: !10598)
!10725 = !DILocation(line: 2141, column: 11, scope: !10598)
!10726 = !DILocation(line: 2141, column: 17, scope: !10598)
!10727 = !DILocation(line: 2141, column: 9, scope: !10598)
!10728 = !DILocation(line: 2143, column: 21, scope: !10598)
!10729 = !DILocation(line: 2143, column: 25, scope: !10598)
!10730 = !DILocation(line: 2143, column: 30, scope: !10598)
!10731 = !DILocation(line: 2143, column: 4, scope: !10598)
!10732 = !DILocation(line: 2145, column: 8, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 2145, column: 8)
!10734 = !DILocation(line: 2145, column: 13, scope: !10733)
!10735 = !DILocation(line: 2145, column: 8, scope: !10598)
!10736 = !DILocation(line: 2146, column: 32, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10738, file: !3, line: 2146, column: 9)
!10738 = distinct !DILexicalBlock(scope: !10733, file: !3, line: 2145, column: 40)
!10739 = !DILocation(line: 2146, column: 36, scope: !10737)
!10740 = !DILocation(line: 2146, column: 10, scope: !10737)
!10741 = !DILocation(line: 2146, column: 9, scope: !10738)
!10742 = !DILocation(line: 2147, column: 24, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10737, file: !3, line: 2146, column: 67)
!10744 = !DILocation(line: 2147, column: 6, scope: !10743)
!10745 = !DILocation(line: 2148, column: 24, scope: !10743)
!10746 = !DILocation(line: 2148, column: 6, scope: !10743)
!10747 = !DILocation(line: 2149, column: 5, scope: !10743)
!10748 = !DILocation(line: 2150, column: 4, scope: !10738)
!10749 = !DILocation(line: 2152, column: 8, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 2152, column: 8)
!10751 = !DILocation(line: 2152, column: 13, scope: !10750)
!10752 = !DILocation(line: 2152, column: 8, scope: !10598)
!10753 = !DILocation(line: 2153, column: 35, scope: !10750)
!10754 = !DILocation(line: 2153, column: 39, scope: !10750)
!10755 = !DILocation(line: 2153, column: 43, scope: !10750)
!10756 = !DILocation(line: 2153, column: 47, scope: !10750)
!10757 = !DILocation(line: 2153, column: 11, scope: !10750)
!10758 = !DILocation(line: 2153, column: 9, scope: !10750)
!10759 = !DILocation(line: 2153, column: 5, scope: !10750)
!10760 = !DILocation(line: 2155, column: 33, scope: !10750)
!10761 = !DILocation(line: 2155, column: 37, scope: !10750)
!10762 = !DILocation(line: 2155, column: 41, scope: !10750)
!10763 = !DILocation(line: 2155, column: 11, scope: !10750)
!10764 = !DILocation(line: 2155, column: 9, scope: !10750)
!10765 = !DILocation(line: 2158, column: 8, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 2158, column: 8)
!10767 = !DILocation(line: 2158, column: 8, scope: !10598)
!10768 = !DILocation(line: 2159, column: 9, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10770, file: !3, line: 2159, column: 9)
!10770 = distinct !DILexicalBlock(scope: !10766, file: !3, line: 2158, column: 13)
!10771 = !DILocation(line: 2159, column: 12, scope: !10769)
!10772 = !DILocation(line: 2159, column: 15, scope: !10769)
!10773 = !DILocation(line: 2159, column: 21, scope: !10769)
!10774 = !DILocation(line: 2159, column: 18, scope: !10769)
!10775 = !DILocation(line: 2159, column: 9, scope: !10770)
!10776 = !DILocation(line: 2160, column: 6, scope: !10769)
!10777 = !DILocation(line: 2160, column: 10, scope: !10769)
!10778 = !DILocation(line: 2160, column: 18, scope: !10769)
!10779 = !DILocation(line: 2162, column: 10, scope: !10770)
!10780 = !DILocation(line: 2162, column: 8, scope: !10770)
!10781 = !DILocation(line: 2164, column: 9, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10770, file: !3, line: 2164, column: 9)
!10783 = !DILocation(line: 2164, column: 9, scope: !10770)
!10784 = !DILocation(line: 2165, column: 6, scope: !10785)
!10785 = distinct !DILexicalBlock(scope: !10782, file: !3, line: 2164, column: 24)
!10786 = !DILocation(line: 2165, column: 16, scope: !10785)
!10787 = !DILocation(line: 2166, column: 20, scope: !10785)
!10788 = !DILocation(line: 2167, column: 5, scope: !10785)
!10789 = !DILocation(line: 2168, column: 4, scope: !10770)
!10790 = !DILocation(line: 2172, column: 8, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10509, file: !3, line: 2172, column: 7)
!10792 = !DILocation(line: 2172, column: 14, scope: !10791)
!10793 = !DILocation(line: 2172, column: 11, scope: !10791)
!10794 = !DILocation(line: 2172, column: 25, scope: !10791)
!10795 = !DILocation(line: 2172, column: 29, scope: !10791)
!10796 = !DILocation(line: 2172, column: 28, scope: !10791)
!10797 = !DILocation(line: 2172, column: 7, scope: !10509)
!10798 = !DILocation(line: 2173, column: 26, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10791, file: !3, line: 2172, column: 44)
!10800 = !DILocation(line: 2173, column: 30, scope: !10799)
!10801 = !DILocation(line: 2173, column: 34, scope: !10799)
!10802 = !DILocation(line: 2173, column: 4, scope: !10799)
!10803 = !DILocation(line: 2174, column: 16, scope: !10799)
!10804 = !DILocation(line: 2175, column: 3, scope: !10799)
!10805 = !DILocation(line: 2177, column: 7, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10509, file: !3, line: 2177, column: 7)
!10807 = !DILocation(line: 2177, column: 14, scope: !10806)
!10808 = !DILocation(line: 2177, column: 17, scope: !10806)
!10809 = !DILocation(line: 2177, column: 22, scope: !10806)
!10810 = !DILocation(line: 2177, column: 19, scope: !10806)
!10811 = !DILocation(line: 2177, column: 7, scope: !10509)
!10812 = !DILocation(line: 2178, column: 8, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10814, file: !3, line: 2178, column: 8)
!10814 = distinct !DILexicalBlock(scope: !10806, file: !3, line: 2177, column: 33)
!10815 = !DILocation(line: 2178, column: 11, scope: !10813)
!10816 = !DILocation(line: 2178, column: 14, scope: !10813)
!10817 = !DILocation(line: 2178, column: 8, scope: !10814)
!10818 = !DILocation(line: 2179, column: 25, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10813, file: !3, line: 2178, column: 29)
!10820 = !DILocation(line: 2179, column: 15, scope: !10819)
!10821 = !DILocation(line: 2179, column: 6, scope: !10819)
!10822 = !DILocation(line: 2179, column: 13, scope: !10819)
!10823 = !DILocation(line: 2180, column: 29, scope: !10819)
!10824 = !DILocation(line: 2180, column: 28, scope: !10819)
!10825 = !DILocation(line: 2180, column: 37, scope: !10819)
!10826 = !DILocation(line: 2180, column: 5, scope: !10819)
!10827 = !DILocation(line: 2181, column: 4, scope: !10819)
!10828 = !DILocation(line: 2182, column: 13, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10813, file: !3, line: 2182, column: 13)
!10830 = !DILocation(line: 2182, column: 13, scope: !10813)
!10831 = !DILocation(line: 2183, column: 15, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10829, file: !3, line: 2182, column: 17)
!10833 = !DILocation(line: 2183, column: 6, scope: !10832)
!10834 = !DILocation(line: 2183, column: 13, scope: !10832)
!10835 = !DILocation(line: 2184, column: 4, scope: !10832)
!10836 = !DILocation(line: 2187, column: 29, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10829, file: !3, line: 2185, column: 9)
!10838 = !DILocation(line: 2187, column: 33, scope: !10837)
!10839 = !DILocation(line: 2188, column: 29, scope: !10837)
!10840 = !DILocation(line: 2188, column: 45, scope: !10837)
!10841 = !DILocation(line: 2188, column: 59, scope: !10837)
!10842 = !DILocation(line: 2187, column: 9, scope: !10837)
!10843 = !DILocation(line: 2186, column: 6, scope: !10837)
!10844 = !DILocation(line: 2186, column: 13, scope: !10837)
!10845 = !DILocation(line: 2190, column: 3, scope: !10814)
!10846 = !DILocation(line: 2191, column: 2, scope: !10509)
!10847 = !DILocation(line: 2040, column: 19, scope: !10506)
!10848 = !DILocation(line: 2040, column: 28, scope: !10506)
!10849 = !DILocation(line: 2040, column: 32, scope: !10506)
!10850 = !DILocation(line: 2040, column: 26, scope: !10506)
!10851 = !DILocation(line: 2040, column: 45, scope: !10506)
!10852 = !DILocation(line: 2040, column: 51, scope: !10506)
!10853 = !DILocation(line: 2040, column: 43, scope: !10506)
!10854 = !DILocation(line: 2040, column: 2, scope: !10506)
!10855 = distinct !{!10855, !10507, !10856}
!10856 = !DILocation(line: 2191, column: 2, scope: !10503)
!10857 = !DILocation(line: 2193, column: 32, scope: !10363)
!10858 = !DILocation(line: 2193, column: 20, scope: !10363)
!10859 = !DILocation(line: 2193, column: 2, scope: !10363)
!10860 = !DILocation(line: 2199, column: 6, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 2199, column: 6)
!10862 = !DILocation(line: 2199, column: 9, scope: !10861)
!10863 = !DILocation(line: 2199, column: 12, scope: !10861)
!10864 = !DILocation(line: 2199, column: 6, scope: !10363)
!10865 = !DILocation(line: 2200, column: 24, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10861, file: !3, line: 2199, column: 27)
!10867 = !DILocation(line: 2200, column: 14, scope: !10866)
!10868 = !DILocation(line: 2200, column: 4, scope: !10866)
!10869 = !DILocation(line: 2200, column: 12, scope: !10866)
!10870 = !DILocation(line: 2202, column: 9, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10866, file: !3, line: 2202, column: 7)
!10872 = !DILocation(line: 2202, column: 16, scope: !10871)
!10873 = !DILocation(line: 2202, column: 19, scope: !10871)
!10874 = !DILocation(line: 2202, column: 26, scope: !10871)
!10875 = !DILocation(line: 2202, column: 25, scope: !10871)
!10876 = !DILocation(line: 2202, column: 22, scope: !10871)
!10877 = !DILocation(line: 2202, column: 7, scope: !10866)
!10878 = !DILocation(line: 2202, column: 35, scope: !10871)
!10879 = !DILocation(line: 2202, column: 39, scope: !10871)
!10880 = !DILocation(line: 2202, column: 47, scope: !10871)
!10881 = !DILocation(line: 2204, column: 27, scope: !10866)
!10882 = !DILocation(line: 2204, column: 26, scope: !10866)
!10883 = !DILocation(line: 2204, column: 36, scope: !10866)
!10884 = !DILocation(line: 2204, column: 3, scope: !10866)
!10885 = !DILocation(line: 2205, column: 2, scope: !10866)
!10886 = !DILocation(line: 2206, column: 11, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10861, file: !3, line: 2206, column: 11)
!10888 = !DILocation(line: 2206, column: 11, scope: !10861)
!10889 = !DILocation(line: 2207, column: 14, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 2206, column: 15)
!10891 = !DILocation(line: 2207, column: 4, scope: !10890)
!10892 = !DILocation(line: 2207, column: 12, scope: !10890)
!10893 = !DILocation(line: 2208, column: 2, scope: !10890)
!10894 = !DILocation(line: 2209, column: 12, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 2209, column: 11)
!10896 = !DILocation(line: 2209, column: 26, scope: !10895)
!10897 = !DILocation(line: 2209, column: 29, scope: !10895)
!10898 = !DILocation(line: 2209, column: 36, scope: !10895)
!10899 = !DILocation(line: 2209, column: 40, scope: !10895)
!10900 = !DILocation(line: 2209, column: 39, scope: !10895)
!10901 = !DILocation(line: 2209, column: 11, scope: !10887)
!10902 = !DILocation(line: 2211, column: 15, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10895, file: !3, line: 2209, column: 48)
!10904 = !DILocation(line: 2211, column: 14, scope: !10903)
!10905 = !DILocation(line: 2211, column: 4, scope: !10903)
!10906 = !DILocation(line: 2211, column: 12, scope: !10903)
!10907 = !DILocation(line: 2214, column: 7, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 2214, column: 7)
!10909 = !DILocation(line: 2214, column: 7, scope: !10903)
!10910 = !DILocation(line: 2215, column: 26, scope: !10908)
!10911 = !DILocation(line: 2215, column: 31, scope: !10908)
!10912 = !DILocation(line: 2215, column: 30, scope: !10908)
!10913 = !DILocation(line: 2215, column: 40, scope: !10908)
!10914 = !DILocation(line: 2215, column: 4, scope: !10908)
!10915 = !DILocation(line: 2216, column: 7, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 2216, column: 7)
!10917 = !DILocation(line: 2216, column: 7, scope: !10903)
!10918 = !DILocation(line: 2217, column: 28, scope: !10916)
!10919 = !DILocation(line: 2217, column: 35, scope: !10916)
!10920 = !DILocation(line: 2217, column: 40, scope: !10916)
!10921 = !DILocation(line: 2217, column: 39, scope: !10916)
!10922 = !DILocation(line: 2217, column: 4, scope: !10916)
!10923 = !DILocation(line: 2218, column: 2, scope: !10903)
!10924 = !DILocation(line: 2221, column: 34, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10895, file: !3, line: 2219, column: 7)
!10926 = !DILocation(line: 2221, column: 38, scope: !10925)
!10927 = !DILocation(line: 2221, column: 42, scope: !10925)
!10928 = !DILocation(line: 2221, column: 14, scope: !10925)
!10929 = !DILocation(line: 2221, column: 4, scope: !10925)
!10930 = !DILocation(line: 2221, column: 12, scope: !10925)
!10931 = !DILocation(line: 2222, column: 17, scope: !10925)
!10932 = !DILocation(line: 2225, column: 7, scope: !10933)
!10933 = distinct !DILexicalBlock(scope: !10925, file: !3, line: 2225, column: 7)
!10934 = !DILocation(line: 2225, column: 7, scope: !10925)
!10935 = !DILocation(line: 2226, column: 26, scope: !10933)
!10936 = !DILocation(line: 2226, column: 31, scope: !10933)
!10937 = !DILocation(line: 2226, column: 30, scope: !10933)
!10938 = !DILocation(line: 2226, column: 40, scope: !10933)
!10939 = !DILocation(line: 2226, column: 4, scope: !10933)
!10940 = !DILocation(line: 2227, column: 7, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10925, file: !3, line: 2227, column: 7)
!10942 = !DILocation(line: 2227, column: 7, scope: !10925)
!10943 = !DILocation(line: 2228, column: 28, scope: !10941)
!10944 = !DILocation(line: 2228, column: 35, scope: !10941)
!10945 = !DILocation(line: 2228, column: 40, scope: !10941)
!10946 = !DILocation(line: 2228, column: 39, scope: !10941)
!10947 = !DILocation(line: 2228, column: 4, scope: !10941)
!10948 = !DILocation(line: 2231, column: 6, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 2231, column: 6)
!10950 = !DILocation(line: 2231, column: 6, scope: !10363)
!10951 = !DILocation(line: 2233, column: 25, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10949, file: !3, line: 2231, column: 23)
!10953 = !DILocation(line: 2233, column: 24, scope: !10952)
!10954 = !DILocation(line: 2233, column: 34, scope: !10952)
!10955 = !DILocation(line: 2233, column: 3, scope: !10952)
!10956 = !DILocation(line: 2234, column: 7, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10952, file: !3, line: 2234, column: 7)
!10958 = !DILocation(line: 2234, column: 14, scope: !10957)
!10959 = !DILocation(line: 2234, column: 18, scope: !10957)
!10960 = !DILocation(line: 2234, column: 17, scope: !10957)
!10961 = !DILocation(line: 2234, column: 25, scope: !10957)
!10962 = !DILocation(line: 2234, column: 30, scope: !10957)
!10963 = !DILocation(line: 2234, column: 29, scope: !10957)
!10964 = !DILocation(line: 2234, column: 41, scope: !10957)
!10965 = !DILocation(line: 2234, column: 40, scope: !10957)
!10966 = !DILocation(line: 2234, column: 37, scope: !10957)
!10967 = !DILocation(line: 2234, column: 7, scope: !10952)
!10968 = !DILocation(line: 2235, column: 26, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10957, file: !3, line: 2234, column: 51)
!10970 = !DILocation(line: 2235, column: 25, scope: !10969)
!10971 = !DILocation(line: 2235, column: 34, scope: !10969)
!10972 = !DILocation(line: 2235, column: 4, scope: !10969)
!10973 = !DILocation(line: 2236, column: 3, scope: !10969)
!10974 = !DILocation(line: 2237, column: 2, scope: !10952)
!10975 = !DILocation(line: 2244, column: 8, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 2244, column: 6)
!10977 = !DILocation(line: 2244, column: 7, scope: !10976)
!10978 = !DILocation(line: 2244, column: 18, scope: !10976)
!10979 = !DILocation(line: 2244, column: 23, scope: !10976)
!10980 = !DILocation(line: 2244, column: 6, scope: !10363)
!10981 = !DILocation(line: 2245, column: 23, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10976, file: !3, line: 2244, column: 45)
!10983 = !DILocation(line: 2245, column: 22, scope: !10982)
!10984 = !DILocation(line: 2245, column: 3, scope: !10982)
!10985 = !DILocation(line: 2246, column: 2, scope: !10982)
!10986 = !DILocation(line: 2247, column: 6, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 2247, column: 6)
!10988 = !DILocation(line: 2247, column: 13, scope: !10987)
!10989 = !DILocation(line: 2247, column: 17, scope: !10987)
!10990 = !DILocation(line: 2247, column: 16, scope: !10987)
!10991 = !DILocation(line: 2247, column: 6, scope: !10363)
!10992 = !DILocation(line: 2248, column: 9, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10994, file: !3, line: 2248, column: 7)
!10994 = distinct !DILexicalBlock(scope: !10987, file: !3, line: 2247, column: 25)
!10995 = !DILocation(line: 2248, column: 8, scope: !10993)
!10996 = !DILocation(line: 2248, column: 18, scope: !10993)
!10997 = !DILocation(line: 2248, column: 23, scope: !10993)
!10998 = !DILocation(line: 2248, column: 7, scope: !10994)
!10999 = !DILocation(line: 2249, column: 9, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !11001, file: !3, line: 2249, column: 8)
!11001 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 2248, column: 45)
!11002 = !DILocation(line: 2249, column: 8, scope: !11000)
!11003 = !DILocation(line: 2249, column: 20, scope: !11000)
!11004 = !DILocation(line: 2249, column: 19, scope: !11000)
!11005 = !DILocation(line: 2249, column: 16, scope: !11000)
!11006 = !DILocation(line: 2249, column: 8, scope: !11001)
!11007 = !DILocation(line: 2250, column: 25, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !11000, file: !3, line: 2249, column: 29)
!11009 = !DILocation(line: 2250, column: 24, scope: !11008)
!11010 = !DILocation(line: 2250, column: 5, scope: !11008)
!11011 = !DILocation(line: 2251, column: 4, scope: !11008)
!11012 = !DILocation(line: 2252, column: 3, scope: !11001)
!11013 = !DILocation(line: 2253, column: 2, scope: !10994)
!11014 = !DILocation(line: 2257, column: 7, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 2257, column: 6)
!11016 = !DILocation(line: 2257, column: 6, scope: !10363)
!11017 = !DILocation(line: 2258, column: 30, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !11015, file: !3, line: 2257, column: 24)
!11019 = !DILocation(line: 2258, column: 29, scope: !11018)
!11020 = !DILocation(line: 2258, column: 3, scope: !11018)
!11021 = !DILocation(line: 2259, column: 2, scope: !11018)
!11022 = !DILocation(line: 2262, column: 6, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 2262, column: 6)
!11024 = !DILocation(line: 2262, column: 15, scope: !11023)
!11025 = !DILocation(line: 2262, column: 6, scope: !10363)
!11026 = !DILocation(line: 2263, column: 15, scope: !11023)
!11027 = !DILocation(line: 2263, column: 19, scope: !11023)
!11028 = !DILocation(line: 2263, column: 24, scope: !11023)
!11029 = !DILocation(line: 2263, column: 23, scope: !11023)
!11030 = !DILocation(line: 2263, column: 33, scope: !11023)
!11031 = !DILocation(line: 2263, column: 3, scope: !11023)
!11032 = !DILocation(line: 2265, column: 6, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 2265, column: 6)
!11034 = !DILocation(line: 2265, column: 6, scope: !10363)
!11035 = !DILocation(line: 2266, column: 3, scope: !11033)
!11036 = !DILocation(line: 2266, column: 11, scope: !11033)
!11037 = !DILocation(line: 2266, column: 19, scope: !11033)
!11038 = !DILocation(line: 2268, column: 6, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 2268, column: 6)
!11040 = !DILocation(line: 2268, column: 6, scope: !10363)
!11041 = !DILocation(line: 2269, column: 3, scope: !11039)
!11042 = !DILocation(line: 2269, column: 13, scope: !11039)
!11043 = !DILocation(line: 2270, column: 1, scope: !10363)
!11044 = distinct !DISubprogram(name: "dm_drawflag_calc", scope: !3, file: !3, line: 1107, type: !11045, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!11045 = !DISubroutineType(types: !11046)
!11046 = !{!156, !11047}
!11047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11048, size: 64)
!11048 = !DIDerivedType(tag: DW_TAG_typedef, name: "ToolSettings", file: !282, line: 1180, baseType: !776)
!11049 = !DILocalVariable(name: "ts", arg: 1, scope: !11044, file: !3, line: 1107, type: !11047)
!11050 = !DILocation(line: 1107, column: 43, scope: !11044)
!11051 = !DILocation(line: 1109, column: 11, scope: !11044)
!11052 = !DILocation(line: 1109, column: 15, scope: !11044)
!11053 = !DILocation(line: 1111, column: 34, scope: !11044)
!11054 = !DILocation(line: 1111, column: 38, scope: !11044)
!11055 = !DILocation(line: 1111, column: 31, scope: !11044)
!11056 = !DILocation(line: 1112, column: 11, scope: !11044)
!11057 = !DILocation(line: 1112, column: 15, scope: !11044)
!11058 = !DILocation(line: 1111, column: 51, scope: !11044)
!11059 = !DILocation(line: 1109, column: 2, scope: !11044)
!11060 = distinct !DISubprogram(name: "add_orco_dm", scope: !3, file: !3, line: 1016, type: !11061, scopeLine: 1018, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!11061 = !DISubroutineType(types: !11062)
!11062 = !{null, !4007, !5722, !2108, !2108, !156}
!11063 = !DILocalVariable(name: "ob", arg: 1, scope: !11060, file: !3, line: 1016, type: !4007)
!11064 = !DILocation(line: 1016, column: 33, scope: !11060)
!11065 = !DILocalVariable(name: "em", arg: 2, scope: !11060, file: !3, line: 1016, type: !5722)
!11066 = !DILocation(line: 1016, column: 49, scope: !11060)
!11067 = !DILocalVariable(name: "dm", arg: 3, scope: !11060, file: !3, line: 1016, type: !2108)
!11068 = !DILocation(line: 1016, column: 66, scope: !11060)
!11069 = !DILocalVariable(name: "orcodm", arg: 4, scope: !11060, file: !3, line: 1017, type: !2108)
!11070 = !DILocation(line: 1017, column: 38, scope: !11060)
!11071 = !DILocalVariable(name: "layer", arg: 5, scope: !11060, file: !3, line: 1017, type: !156)
!11072 = !DILocation(line: 1017, column: 50, scope: !11060)
!11073 = !DILocalVariable(name: "orco", scope: !11060, file: !3, line: 1019, type: !1660)
!11074 = !DILocation(line: 1019, column: 10, scope: !11060)
!11075 = !DILocalVariable(name: "layerorco", scope: !11060, file: !3, line: 1019, type: !1660)
!11076 = !DILocation(line: 1019, column: 22, scope: !11060)
!11077 = !DILocalVariable(name: "totvert", scope: !11060, file: !3, line: 1020, type: !156)
!11078 = !DILocation(line: 1020, column: 6, scope: !11060)
!11079 = !DILocalVariable(name: "free", scope: !11060, file: !3, line: 1020, type: !156)
!11080 = !DILocation(line: 1020, column: 15, scope: !11060)
!11081 = !DILocation(line: 1022, column: 12, scope: !11060)
!11082 = !DILocation(line: 1022, column: 16, scope: !11060)
!11083 = !DILocation(line: 1022, column: 28, scope: !11060)
!11084 = !DILocation(line: 1022, column: 10, scope: !11060)
!11085 = !DILocation(line: 1024, column: 6, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11060, file: !3, line: 1024, column: 6)
!11087 = !DILocation(line: 1024, column: 6, scope: !11060)
!11088 = !DILocation(line: 1025, column: 10, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 1024, column: 14)
!11090 = !DILocation(line: 1025, column: 41, scope: !11089)
!11091 = !DILocation(line: 1025, column: 39, scope: !11089)
!11092 = !DILocation(line: 1025, column: 8, scope: !11089)
!11093 = !DILocation(line: 1026, column: 8, scope: !11089)
!11094 = !DILocation(line: 1028, column: 7, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11089, file: !3, line: 1028, column: 7)
!11096 = !DILocation(line: 1028, column: 15, scope: !11095)
!11097 = !DILocation(line: 1028, column: 27, scope: !11095)
!11098 = !DILocation(line: 1028, column: 38, scope: !11095)
!11099 = !DILocation(line: 1028, column: 35, scope: !11095)
!11100 = !DILocation(line: 1028, column: 7, scope: !11089)
!11101 = !DILocation(line: 1029, column: 4, scope: !11095)
!11102 = !DILocation(line: 1029, column: 12, scope: !11095)
!11103 = !DILocation(line: 1029, column: 23, scope: !11095)
!11104 = !DILocation(line: 1029, column: 31, scope: !11095)
!11105 = !DILocation(line: 1031, column: 4, scope: !11095)
!11106 = !DILocation(line: 1031, column: 8, scope: !11095)
!11107 = !DILocation(line: 1031, column: 19, scope: !11095)
!11108 = !DILocation(line: 1031, column: 23, scope: !11095)
!11109 = !DILocation(line: 1032, column: 2, scope: !11089)
!11110 = !DILocation(line: 1034, column: 29, scope: !11086)
!11111 = !DILocation(line: 1034, column: 33, scope: !11086)
!11112 = !DILocation(line: 1034, column: 37, scope: !11086)
!11113 = !DILocation(line: 1034, column: 10, scope: !11086)
!11114 = !DILocation(line: 1034, column: 8, scope: !11086)
!11115 = !DILocation(line: 1036, column: 6, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11060, file: !3, line: 1036, column: 6)
!11117 = !DILocation(line: 1036, column: 6, scope: !11060)
!11118 = !DILocation(line: 1037, column: 7, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11120, file: !3, line: 1037, column: 7)
!11120 = distinct !DILexicalBlock(scope: !11116, file: !3, line: 1036, column: 12)
!11121 = !DILocation(line: 1037, column: 13, scope: !11119)
!11122 = !DILocation(line: 1037, column: 7, scope: !11120)
!11123 = !DILocation(line: 1038, column: 34, scope: !11119)
!11124 = !DILocation(line: 1038, column: 38, scope: !11119)
!11125 = !DILocation(line: 1038, column: 44, scope: !11119)
!11126 = !DILocation(line: 1038, column: 50, scope: !11119)
!11127 = !DILocation(line: 1038, column: 4, scope: !11119)
!11128 = !DILocation(line: 1040, column: 44, scope: !11129)
!11129 = distinct !DILexicalBlock(scope: !11120, file: !3, line: 1040, column: 7)
!11130 = !DILocation(line: 1040, column: 48, scope: !11129)
!11131 = !DILocation(line: 1040, column: 21, scope: !11129)
!11132 = !DILocation(line: 1040, column: 19, scope: !11129)
!11133 = !DILocation(line: 1040, column: 7, scope: !11120)
!11134 = !DILocation(line: 1041, column: 22, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11129, file: !3, line: 1040, column: 57)
!11136 = !DILocation(line: 1041, column: 26, scope: !11135)
!11137 = !DILocation(line: 1041, column: 4, scope: !11135)
!11138 = !DILocation(line: 1042, column: 39, scope: !11135)
!11139 = !DILocation(line: 1042, column: 43, scope: !11135)
!11140 = !DILocation(line: 1042, column: 16, scope: !11135)
!11141 = !DILocation(line: 1042, column: 14, scope: !11135)
!11142 = !DILocation(line: 1043, column: 3, scope: !11135)
!11143 = !DILocation(line: 1045, column: 10, scope: !11120)
!11144 = !DILocation(line: 1045, column: 3, scope: !11120)
!11145 = !DILocation(line: 1045, column: 21, scope: !11120)
!11146 = !DILocation(line: 1045, column: 47, scope: !11120)
!11147 = !DILocation(line: 1045, column: 45, scope: !11120)
!11148 = !DILocation(line: 1046, column: 7, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11120, file: !3, line: 1046, column: 7)
!11150 = !DILocation(line: 1046, column: 7, scope: !11120)
!11151 = !DILocation(line: 1046, column: 13, scope: !11149)
!11152 = !DILocation(line: 1046, column: 23, scope: !11149)
!11153 = !DILocation(line: 1047, column: 2, scope: !11120)
!11154 = !DILocation(line: 1048, column: 1, scope: !11060)
!11155 = distinct !DISubprogram(name: "create_orco_dm", scope: !3, file: !3, line: 997, type: !11156, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!11156 = !DISubroutineType(types: !11157)
!11157 = !{!2108, !4007, !404, !5722, !156}
!11158 = !DILocalVariable(name: "ob", arg: 1, scope: !11155, file: !3, line: 997, type: !4007)
!11159 = !DILocation(line: 997, column: 44, scope: !11155)
!11160 = !DILocalVariable(name: "me", arg: 2, scope: !11155, file: !3, line: 997, type: !404)
!11161 = !DILocation(line: 997, column: 54, scope: !11155)
!11162 = !DILocalVariable(name: "em", arg: 3, scope: !11155, file: !3, line: 997, type: !5722)
!11163 = !DILocation(line: 997, column: 70, scope: !11155)
!11164 = !DILocalVariable(name: "layer", arg: 4, scope: !11155, file: !3, line: 997, type: !156)
!11165 = !DILocation(line: 997, column: 78, scope: !11155)
!11166 = !DILocalVariable(name: "dm", scope: !11155, file: !3, line: 999, type: !2108)
!11167 = !DILocation(line: 999, column: 15, scope: !11155)
!11168 = !DILocalVariable(name: "orco", scope: !11155, file: !3, line: 1000, type: !1660)
!11169 = !DILocation(line: 1000, column: 10, scope: !11155)
!11170 = !DILocalVariable(name: "free", scope: !11155, file: !3, line: 1001, type: !156)
!11171 = !DILocation(line: 1001, column: 6, scope: !11155)
!11172 = !DILocation(line: 1003, column: 6, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11155, file: !3, line: 1003, column: 6)
!11174 = !DILocation(line: 1003, column: 6, scope: !11155)
!11175 = !DILocation(line: 1003, column: 35, scope: !11173)
!11176 = !DILocation(line: 1003, column: 15, scope: !11173)
!11177 = !DILocation(line: 1003, column: 13, scope: !11173)
!11178 = !DILocation(line: 1003, column: 10, scope: !11173)
!11179 = !DILocation(line: 1004, column: 27, scope: !11173)
!11180 = !DILocation(line: 1004, column: 12, scope: !11173)
!11181 = !DILocation(line: 1004, column: 10, scope: !11173)
!11182 = !DILocation(line: 1006, column: 28, scope: !11155)
!11183 = !DILocation(line: 1006, column: 32, scope: !11155)
!11184 = !DILocation(line: 1006, column: 36, scope: !11155)
!11185 = !DILocation(line: 1006, column: 9, scope: !11155)
!11186 = !DILocation(line: 1006, column: 7, scope: !11155)
!11187 = !DILocation(line: 1008, column: 6, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11155, file: !3, line: 1008, column: 6)
!11189 = !DILocation(line: 1008, column: 6, scope: !11155)
!11190 = !DILocation(line: 1009, column: 26, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11188, file: !3, line: 1008, column: 12)
!11192 = !DILocation(line: 1009, column: 30, scope: !11191)
!11193 = !DILocation(line: 1009, column: 3, scope: !11191)
!11194 = !DILocation(line: 1010, column: 7, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11191, file: !3, line: 1010, column: 7)
!11196 = !DILocation(line: 1010, column: 7, scope: !11191)
!11197 = !DILocation(line: 1010, column: 13, scope: !11195)
!11198 = !DILocation(line: 1010, column: 23, scope: !11195)
!11199 = !DILocation(line: 1011, column: 2, scope: !11191)
!11200 = !DILocation(line: 1013, column: 9, scope: !11155)
!11201 = !DILocation(line: 1013, column: 2, scope: !11155)
!11202 = distinct !DISubprogram(name: "DM_update_statvis_color", scope: !3, file: !3, line: 1344, type: !11203, scopeLine: 1345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!11203 = !DISubroutineType(types: !11204)
!11204 = !{null, !5258, !4007, !2108}
!11205 = !DILocalVariable(name: "scene", arg: 1, scope: !11202, file: !3, line: 1344, type: !5258)
!11206 = !DILocation(line: 1344, column: 44, scope: !11202)
!11207 = !DILocalVariable(name: "ob", arg: 2, scope: !11202, file: !3, line: 1344, type: !4007)
!11208 = !DILocation(line: 1344, column: 59, scope: !11202)
!11209 = !DILocalVariable(name: "dm", arg: 3, scope: !11202, file: !3, line: 1344, type: !2108)
!11210 = !DILocation(line: 1344, column: 76, scope: !11202)
!11211 = !DILocalVariable(name: "em", scope: !11202, file: !3, line: 1346, type: !5722)
!11212 = !DILocation(line: 1346, column: 14, scope: !11202)
!11213 = !DILocation(line: 1346, column: 44, scope: !11202)
!11214 = !DILocation(line: 1346, column: 19, scope: !11202)
!11215 = !DILocation(line: 1348, column: 28, scope: !11202)
!11216 = !DILocation(line: 1348, column: 32, scope: !11202)
!11217 = !DILocation(line: 1348, column: 37, scope: !11202)
!11218 = !DILocation(line: 1348, column: 44, scope: !11202)
!11219 = !DILocation(line: 1348, column: 58, scope: !11202)
!11220 = !DILocation(line: 1348, column: 2, scope: !11202)
!11221 = !DILocation(line: 1349, column: 1, scope: !11202)
!11222 = distinct !DISubprogram(name: "DM_calc_loop_normals", scope: !3, file: !3, line: 397, type: !11223, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!11223 = !DISubroutineType(types: !11224)
!11224 = !{null, !2108, !321}
!11225 = !DILocalVariable(name: "dm", arg: 1, scope: !11222, file: !3, line: 397, type: !2108)
!11226 = !DILocation(line: 397, column: 47, scope: !11222)
!11227 = !DILocalVariable(name: "split_angle", arg: 2, scope: !11222, file: !3, line: 397, type: !321)
!11228 = !DILocation(line: 397, column: 57, scope: !11222)
!11229 = !DILocation(line: 399, column: 2, scope: !11222)
!11230 = !DILocation(line: 399, column: 6, scope: !11222)
!11231 = !DILocation(line: 399, column: 22, scope: !11222)
!11232 = !DILocation(line: 399, column: 26, scope: !11222)
!11233 = !DILocation(line: 400, column: 2, scope: !11222)
!11234 = !DILocation(line: 400, column: 6, scope: !11222)
!11235 = !DILocation(line: 400, column: 12, scope: !11222)
!11236 = !DILocation(line: 401, column: 1, scope: !11222)
!11237 = distinct !DISubprogram(name: "dm_ensure_display_normals", scope: !3, file: !3, line: 1452, type: !2106, scopeLine: 1453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!11238 = !DILocalVariable(name: "dm", arg: 1, scope: !11237, file: !3, line: 1452, type: !2108)
!11239 = !DILocation(line: 1452, column: 52, scope: !11237)
!11240 = !DILocation(line: 1457, column: 7, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11237, file: !3, line: 1457, column: 6)
!11242 = !DILocation(line: 1457, column: 11, scope: !11241)
!11243 = !DILocation(line: 1457, column: 16, scope: !11241)
!11244 = !DILocation(line: 1457, column: 33, scope: !11241)
!11245 = !DILocation(line: 1458, column: 8, scope: !11241)
!11246 = !DILocation(line: 1458, column: 12, scope: !11241)
!11247 = !DILocation(line: 1458, column: 18, scope: !11241)
!11248 = !DILocation(line: 1458, column: 38, scope: !11241)
!11249 = !DILocation(line: 1458, column: 63, scope: !11241)
!11250 = !DILocation(line: 1458, column: 67, scope: !11241)
!11251 = !DILocation(line: 1458, column: 41, scope: !11241)
!11252 = !DILocation(line: 1458, column: 88, scope: !11241)
!11253 = !DILocation(line: 1457, column: 6, scope: !11237)
!11254 = !DILocation(line: 1461, column: 32, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11241, file: !3, line: 1459, column: 2)
!11256 = !DILocation(line: 1461, column: 37, scope: !11255)
!11257 = !DILocation(line: 1461, column: 41, scope: !11255)
!11258 = !DILocation(line: 1461, column: 47, scope: !11255)
!11259 = !DILocation(line: 1461, column: 36, scope: !11255)
!11260 = !DILocation(line: 1461, column: 3, scope: !11255)
!11261 = !DILocation(line: 1462, column: 2, scope: !11255)
!11262 = !DILocation(line: 1463, column: 1, scope: !11237)
!11263 = distinct !DISubprogram(name: "get_orco_coords_dm", scope: !3, file: !3, line: 967, type: !11264, scopeLine: 968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!11264 = !DISubroutineType(types: !11265)
!11265 = !{!1660, !4007, !5722, !156, !328}
!11266 = !DILocalVariable(name: "ob", arg: 1, scope: !11263, file: !3, line: 967, type: !4007)
!11267 = !DILocation(line: 967, column: 43, scope: !11263)
!11268 = !DILocalVariable(name: "em", arg: 2, scope: !11263, file: !3, line: 967, type: !5722)
!11269 = !DILocation(line: 967, column: 59, scope: !11263)
!11270 = !DILocalVariable(name: "layer", arg: 3, scope: !11263, file: !3, line: 967, type: !156)
!11271 = !DILocation(line: 967, column: 67, scope: !11263)
!11272 = !DILocalVariable(name: "free", arg: 4, scope: !11263, file: !3, line: 967, type: !328)
!11273 = !DILocation(line: 967, column: 79, scope: !11263)
!11274 = !DILocation(line: 969, column: 3, scope: !11263)
!11275 = !DILocation(line: 969, column: 8, scope: !11263)
!11276 = !DILocation(line: 971, column: 6, scope: !11277)
!11277 = distinct !DILexicalBlock(scope: !11263, file: !3, line: 971, column: 6)
!11278 = !DILocation(line: 971, column: 12, scope: !11277)
!11279 = !DILocation(line: 971, column: 6, scope: !11263)
!11280 = !DILocation(line: 973, column: 4, scope: !11281)
!11281 = distinct !DILexicalBlock(scope: !11277, file: !3, line: 971, column: 24)
!11282 = !DILocation(line: 973, column: 9, scope: !11281)
!11283 = !DILocation(line: 975, column: 7, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11281, file: !3, line: 975, column: 7)
!11285 = !DILocation(line: 975, column: 7, scope: !11281)
!11286 = !DILocation(line: 976, column: 36, scope: !11284)
!11287 = !DILocation(line: 976, column: 11, scope: !11284)
!11288 = !DILocation(line: 976, column: 4, scope: !11284)
!11289 = !DILocation(line: 978, column: 35, scope: !11284)
!11290 = !DILocation(line: 978, column: 11, scope: !11284)
!11291 = !DILocation(line: 978, column: 4, scope: !11284)
!11292 = !DILocation(line: 980, column: 11, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11277, file: !3, line: 980, column: 11)
!11294 = !DILocation(line: 980, column: 17, scope: !11293)
!11295 = !DILocation(line: 980, column: 11, scope: !11277)
!11296 = !DILocation(line: 983, column: 8, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11298, file: !3, line: 983, column: 7)
!11298 = distinct !DILexicalBlock(scope: !11293, file: !3, line: 980, column: 35)
!11299 = !DILocation(line: 983, column: 7, scope: !11298)
!11300 = !DILocalVariable(name: "clmd", scope: !11301, file: !3, line: 984, type: !2829)
!11301 = distinct !DILexicalBlock(scope: !11297, file: !3, line: 983, column: 12)
!11302 = !DILocation(line: 984, column: 23, scope: !11301)
!11303 = !DILocation(line: 984, column: 72, scope: !11301)
!11304 = !DILocation(line: 984, column: 51, scope: !11301)
!11305 = !DILocation(line: 984, column: 30, scope: !11301)
!11306 = !DILocalVariable(name: "kb", scope: !11301, file: !3, line: 985, type: !501)
!11307 = !DILocation(line: 985, column: 14, scope: !11301)
!11308 = !DILocation(line: 985, column: 61, scope: !11301)
!11309 = !DILocation(line: 985, column: 41, scope: !11301)
!11310 = !DILocation(line: 985, column: 66, scope: !11301)
!11311 = !DILocation(line: 985, column: 72, scope: !11301)
!11312 = !DILocation(line: 985, column: 83, scope: !11301)
!11313 = !DILocation(line: 985, column: 19, scope: !11301)
!11314 = !DILocation(line: 987, column: 8, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11301, file: !3, line: 987, column: 8)
!11316 = !DILocation(line: 987, column: 12, scope: !11315)
!11317 = !DILocation(line: 987, column: 8, scope: !11301)
!11318 = !DILocation(line: 988, column: 12, scope: !11315)
!11319 = !DILocation(line: 988, column: 16, scope: !11315)
!11320 = !DILocation(line: 988, column: 5, scope: !11315)
!11321 = !DILocation(line: 989, column: 3, scope: !11301)
!11322 = !DILocation(line: 991, column: 3, scope: !11298)
!11323 = !DILocation(line: 994, column: 2, scope: !11263)
!11324 = !DILocation(line: 995, column: 1, scope: !11263)
!11325 = distinct !DISubprogram(name: "get_editbmesh_orco_verts", scope: !3, file: !3, line: 947, type: !11326, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!11326 = !DISubroutineType(types: !11327)
!11327 = !{!1660, !5722}
!11328 = !DILocalVariable(name: "em", arg: 1, scope: !11325, file: !3, line: 947, type: !5722)
!11329 = !DILocation(line: 947, column: 53, scope: !11325)
!11330 = !DILocalVariable(name: "iter", scope: !11325, file: !3, line: 949, type: !6086)
!11331 = !DILocation(line: 949, column: 9, scope: !11325)
!11332 = !DILocalVariable(name: "eve", scope: !11325, file: !3, line: 950, type: !338)
!11333 = !DILocation(line: 950, column: 10, scope: !11325)
!11334 = !DILocalVariable(name: "orco", scope: !11325, file: !3, line: 951, type: !1660)
!11335 = !DILocation(line: 951, column: 10, scope: !11325)
!11336 = !DILocalVariable(name: "i", scope: !11325, file: !3, line: 952, type: !156)
!11337 = !DILocation(line: 952, column: 6, scope: !11325)
!11338 = !DILocation(line: 957, column: 9, scope: !11325)
!11339 = !DILocation(line: 957, column: 41, scope: !11325)
!11340 = !DILocation(line: 957, column: 45, scope: !11325)
!11341 = !DILocation(line: 957, column: 49, scope: !11325)
!11342 = !DILocation(line: 957, column: 39, scope: !11325)
!11343 = !DILocation(line: 957, column: 7, scope: !11325)
!11344 = !DILocation(line: 959, column: 2, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11325, file: !3, line: 959, column: 2)
!11346 = !DILocation(line: 959, column: 2, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11345, file: !3, line: 959, column: 2)
!11348 = !DILocation(line: 960, column: 14, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11347, file: !3, line: 959, column: 63)
!11350 = !DILocation(line: 960, column: 19, scope: !11349)
!11351 = !DILocation(line: 960, column: 23, scope: !11349)
!11352 = !DILocation(line: 960, column: 28, scope: !11349)
!11353 = !DILocation(line: 960, column: 3, scope: !11349)
!11354 = !DILocation(line: 961, column: 2, scope: !11349)
!11355 = distinct !{!11355, !11344, !11356}
!11356 = !DILocation(line: 961, column: 2, scope: !11345)
!11357 = !DILocation(line: 963, column: 9, scope: !11325)
!11358 = !DILocation(line: 963, column: 2, scope: !11325)
!11359 = distinct !DISubprogram(name: "normal_short_to_float_v3", scope: !4729, file: !4729, line: 835, type: !11360, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!11360 = !DISubroutineType(types: !11361)
!11361 = !{null, !320, !2273}
!11362 = !DILocalVariable(name: "out", arg: 1, scope: !11359, file: !4729, line: 835, type: !320)
!11363 = !DILocation(line: 835, column: 45, scope: !11359)
!11364 = !DILocalVariable(name: "in", arg: 2, scope: !11359, file: !4729, line: 835, type: !2273)
!11365 = !DILocation(line: 835, column: 65, scope: !11359)
!11366 = !DILocation(line: 837, column: 11, scope: !11359)
!11367 = !DILocation(line: 837, column: 17, scope: !11359)
!11368 = !DILocation(line: 837, column: 2, scope: !11359)
!11369 = !DILocation(line: 837, column: 9, scope: !11359)
!11370 = !DILocation(line: 838, column: 11, scope: !11359)
!11371 = !DILocation(line: 838, column: 17, scope: !11359)
!11372 = !DILocation(line: 838, column: 2, scope: !11359)
!11373 = !DILocation(line: 838, column: 9, scope: !11359)
!11374 = !DILocation(line: 839, column: 11, scope: !11359)
!11375 = !DILocation(line: 839, column: 17, scope: !11359)
!11376 = !DILocation(line: 839, column: 2, scope: !11359)
!11377 = !DILocation(line: 839, column: 9, scope: !11359)
!11378 = !DILocation(line: 840, column: 1, scope: !11359)
!11379 = distinct !DISubprogram(name: "dot_v3v3", scope: !4729, file: !4729, line: 619, type: !8945, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!11380 = !DILocalVariable(name: "a", arg: 1, scope: !11379, file: !4729, line: 619, type: !2272)
!11381 = !DILocation(line: 619, column: 36, scope: !11379)
!11382 = !DILocalVariable(name: "b", arg: 2, scope: !11379, file: !4729, line: 619, type: !2272)
!11383 = !DILocation(line: 619, column: 54, scope: !11379)
!11384 = !DILocation(line: 621, column: 9, scope: !11379)
!11385 = !DILocation(line: 621, column: 16, scope: !11379)
!11386 = !DILocation(line: 621, column: 14, scope: !11379)
!11387 = !DILocation(line: 621, column: 23, scope: !11379)
!11388 = !DILocation(line: 621, column: 30, scope: !11379)
!11389 = !DILocation(line: 621, column: 28, scope: !11379)
!11390 = !DILocation(line: 621, column: 21, scope: !11379)
!11391 = !DILocation(line: 621, column: 37, scope: !11379)
!11392 = !DILocation(line: 621, column: 44, scope: !11379)
!11393 = !DILocation(line: 621, column: 42, scope: !11379)
!11394 = !DILocation(line: 621, column: 35, scope: !11379)
!11395 = !DILocation(line: 621, column: 2, scope: !11379)
!11396 = distinct !DISubprogram(name: "dot_v2v2", scope: !4729, file: !4729, line: 614, type: !8945, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2937)
!11397 = !DILocalVariable(name: "a", arg: 1, scope: !11396, file: !4729, line: 614, type: !2272)
!11398 = !DILocation(line: 614, column: 36, scope: !11396)
!11399 = !DILocalVariable(name: "b", arg: 2, scope: !11396, file: !4729, line: 614, type: !2272)
!11400 = !DILocation(line: 614, column: 54, scope: !11396)
!11401 = !DILocation(line: 616, column: 9, scope: !11396)
!11402 = !DILocation(line: 616, column: 16, scope: !11396)
!11403 = !DILocation(line: 616, column: 14, scope: !11396)
!11404 = !DILocation(line: 616, column: 23, scope: !11396)
!11405 = !DILocation(line: 616, column: 30, scope: !11396)
!11406 = !DILocation(line: 616, column: 28, scope: !11396)
!11407 = !DILocation(line: 616, column: 21, scope: !11396)
!11408 = !DILocation(line: 616, column: 2, scope: !11396)
