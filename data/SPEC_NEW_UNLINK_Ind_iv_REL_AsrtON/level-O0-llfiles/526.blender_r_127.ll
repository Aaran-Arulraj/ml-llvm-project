; ModuleID = 'blender/source/blender/blenkernel/intern/displist.c'
source_filename = "blender/source/blender/blenkernel/intern/displist.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.DispList = type { %struct.DispList*, %struct.DispList*, i16, i16, i32, i32, i16, i16, float*, float*, i32*, i32, i32, i32* }
%struct.ScanFillContext = type { %struct.ListBase, %struct.ListBase, %struct.ListBase, i16, %struct.MemArena* }
%struct.MemArena = type opaque
%struct.ScanFillVert = type { %struct.ScanFillVert*, %struct.ScanFillVert*, %union.anon, [3 x float], [2 x float], i32, i16, i8, i8 }
%union.anon = type { %struct.ScanFillVert* }
%struct.ScanFillFace = type { %struct.ScanFillFace*, %struct.ScanFillFace*, %struct.ScanFillVert*, %struct.ScanFillVert*, %struct.ScanFillVert* }
%struct.ScanFillEdge = type { %struct.ScanFillEdge*, %struct.ScanFillEdge*, %struct.ScanFillVert*, %struct.ScanFillVert*, i16, i8, %union.anon.0 }
%union.anon.0 = type { i8 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type opaque
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rctf = type { float, float, float, float }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type { %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Path* }
%struct.Path = type { %struct.PathPoint*, i32, float }
%struct.PathPoint = type { [4 x float], [4 x float], float, float }
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.LinkNode = type opaque
%struct.GPUDrawObject = type opaque
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type opaque
%struct.DMFlagMat = type { i16, i8 }
%struct.MeshElemMap = type opaque
%struct.PBVH = type opaque
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.EvaluationContext = type { i32 }
%struct.Nurb = type { %struct.Nurb*, %struct.Nurb*, i16, i16, i16, i16, i32, i32, [2 x i16], i16, i16, i16, i16, i16, i16, float*, float*, %struct.BPoint*, %struct.BezTriple*, i16, i16, i32 }
%struct.BPoint = type { [4 x float], float, float, i16, i16, float, float }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.Curve = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.ListBase, %struct.EditNurb*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.Key*, %struct.Material**, [3 x float], [3 x float], [3 x float], i16, i16, i16, i16, float, float, i32, i16, i16, i32, float, float, float, i16, i16, i16, i16, i32, i32, [4 x i8], i16, i8, i8, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i8*, %struct.EditFont*, [64 x i8], %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.TextBox*, i32, i32, %struct.CharInfo*, %struct.CharInfo, float, float, float, i8, i8, [2 x i8] }
%struct.EditNurb = type { %struct.ListBase, %struct.GHash*, i32, [4 x i8] }
%struct.Key = type opaque
%struct.EditFont = type { i32*, %struct.CharInfo*, i32*, %struct.CharInfo*, %struct.EditFontSelBox*, [4 x [2 x float]], i32, i32, i32, i32 }
%struct.EditFontSelBox = type { float, float, float, float, float }
%struct.VFont = type { %struct.ID, [1024 x i8], %struct.VFontData*, %struct.PackedFile*, %struct.PackedFile* }
%struct.VFontData = type opaque
%struct.TextBox = type { float, float, float, float }
%struct.CharInfo = type { i16, i16, i8, i8, i16 }
%struct.VirtualModifierData = type { %struct.ArmatureModifierData, %struct.CurveModifierData, %struct.LatticeModifierData, %struct.ShapeKeyModifierData }
%struct.ArmatureModifierData = type { %struct.ModifierData, i16, i16, i32, %struct.Object*, float*, [64 x i8] }
%struct.ModifierData = type { %struct.ModifierData*, %struct.ModifierData*, i32, i32, i32, i32, [64 x i8], %struct.Scene*, i8* }
%struct.CurveModifierData = type { %struct.ModifierData, %struct.Object*, [64 x i8], i16, [6 x i8] }
%struct.LatticeModifierData = type { %struct.ModifierData, %struct.Object*, [64 x i8], float, [4 x i8] }
%struct.ShapeKeyModifierData = type { %struct.ModifierData }
%struct.ModifierTypeInfo = type { [32 x i8], [32 x i8], i32, i32, i32, void (%struct.ModifierData*, %struct.ModifierData*)*, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, i32, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, [3 x [3 x float]]*, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, [3 x [3 x float]]*, i32)*, %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, i32)*, %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, i32)*, void (%struct.ModifierData*)*, i64 (%struct.Object*, %struct.ModifierData*)*, void (%struct.ModifierData*)*, i8 (%struct.ModifierData*, i32)*, void (%struct.ModifierData*, %struct.DagForest*, %struct.Scene*, %struct.Object*, %struct.DagNode*)*, i8 (%struct.ModifierData*)*, i8 (%struct.ModifierData*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.Object**)*, i8*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.ID**)*, i8*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.ModifierData*, i8*)*, i8*)* }
%struct.BMEditMesh = type opaque
%struct.DagNode = type opaque
%struct.BevList = type { %struct.BevList*, %struct.BevList*, i32, i32, i32, i32, i32, i32*, float*, [0 x %struct.BevPoint] }
%struct.BevPoint = type { [3 x float], float, float, float, float, float, float, [3 x float], [3 x float], [4 x float], i16, i16 }

@MEM_freeN = external dso_local global void (i8*)*, align 8
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [10 x i8] c"find_disp\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@.str.1 = private unnamed_addr constant [7 x i8] c"dlnors\00", align 1
@__func__.BKE_displist_fill = private unnamed_addr constant [18 x i8] c"BKE_displist_fill\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"filldisplist\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.3 = private unnamed_addr constant [8 x i8] c"dlindex\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"dlverts\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"CurveCache for MBall\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"makeDispListsurf\00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"CurveCache for curve types\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"CurveCache for Curve\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"index array nurbs\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"dfmv\00", align 1
@.str.11 = private unnamed_addr constant [31 x i8] c"displist_get_allverts allverts\00", align 1
@__const.curve_to_filledpoly.z_up = private unnamed_addr constant [3 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4
@__const.bevels_to_filledpoly.z_up = private unnamed_addr constant [3 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4
@.str.12 = private unnamed_addr constant [9 x i8] c"filldisp\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"filldisp1\00", align 1
@G = external dso_local global %struct.Global, align 8
@.str.14 = private unnamed_addr constant [16 x i8] c"makeDispListbev\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"makeDispListbev1\00", align 1
@.str.16 = private unnamed_addr constant [15 x i8] c"bevelSplitFlag\00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"makeDispListbez\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"makeDispListpoly\00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"makeDispListbev2\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"dm orco\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"boundbox\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_displist_elem_free(%struct.DispList* %dl) #0 !dbg !237 {
entry:
  %dl.addr = alloca %struct.DispList*, align 8
  store %struct.DispList* %dl, %struct.DispList** %dl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl.addr, metadata !241, metadata !DIExpression()), !dbg !242
  %0 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !243
  %tobool = icmp ne %struct.DispList* %0, null, !dbg !243
  br i1 %tobool, label %if.then, label %if.end16, !dbg !245

if.then:                                          ; preds = %entry
  %1 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !246
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %1, i32 0, i32 8, !dbg !249
  %2 = load float*, float** %verts, align 8, !dbg !249
  %tobool1 = icmp ne float* %2, null, !dbg !246
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !250

if.then2:                                         ; preds = %if.then
  %3 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !251
  %4 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !252
  %verts3 = getelementptr inbounds %struct.DispList, %struct.DispList* %4, i32 0, i32 8, !dbg !253
  %5 = load float*, float** %verts3, align 8, !dbg !253
  %6 = bitcast float* %5 to i8*, !dbg !252
  call void %3(i8* %6), !dbg !251
  br label %if.end, !dbg !251

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !254
  %nors = getelementptr inbounds %struct.DispList, %struct.DispList* %7, i32 0, i32 9, !dbg !256
  %8 = load float*, float** %nors, align 8, !dbg !256
  %tobool4 = icmp ne float* %8, null, !dbg !254
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !257

if.then5:                                         ; preds = %if.end
  %9 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !258
  %10 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !259
  %nors6 = getelementptr inbounds %struct.DispList, %struct.DispList* %10, i32 0, i32 9, !dbg !260
  %11 = load float*, float** %nors6, align 8, !dbg !260
  %12 = bitcast float* %11 to i8*, !dbg !259
  call void %9(i8* %12), !dbg !258
  br label %if.end7, !dbg !258

if.end7:                                          ; preds = %if.then5, %if.end
  %13 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !261
  %index = getelementptr inbounds %struct.DispList, %struct.DispList* %13, i32 0, i32 10, !dbg !263
  %14 = load i32*, i32** %index, align 8, !dbg !263
  %tobool8 = icmp ne i32* %14, null, !dbg !261
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !264

if.then9:                                         ; preds = %if.end7
  %15 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !265
  %16 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !266
  %index10 = getelementptr inbounds %struct.DispList, %struct.DispList* %16, i32 0, i32 10, !dbg !267
  %17 = load i32*, i32** %index10, align 8, !dbg !267
  %18 = bitcast i32* %17 to i8*, !dbg !266
  call void %15(i8* %18), !dbg !265
  br label %if.end11, !dbg !265

if.end11:                                         ; preds = %if.then9, %if.end7
  %19 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !268
  %bevelSplitFlag = getelementptr inbounds %struct.DispList, %struct.DispList* %19, i32 0, i32 13, !dbg !270
  %20 = load i32*, i32** %bevelSplitFlag, align 8, !dbg !270
  %tobool12 = icmp ne i32* %20, null, !dbg !268
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !271

if.then13:                                        ; preds = %if.end11
  %21 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !272
  %22 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !273
  %bevelSplitFlag14 = getelementptr inbounds %struct.DispList, %struct.DispList* %22, i32 0, i32 13, !dbg !274
  %23 = load i32*, i32** %bevelSplitFlag14, align 8, !dbg !274
  %24 = bitcast i32* %23 to i8*, !dbg !273
  call void %21(i8* %24), !dbg !272
  br label %if.end15, !dbg !272

if.end15:                                         ; preds = %if.then13, %if.end11
  %25 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !275
  %26 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !276
  %27 = bitcast %struct.DispList* %26 to i8*, !dbg !276
  call void %25(i8* %27), !dbg !275
  br label %if.end16, !dbg !277

if.end16:                                         ; preds = %if.end15, %entry
  ret void, !dbg !278
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_displist_free(%struct.ListBase* %lb) #0 !dbg !279 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %dl = alloca %struct.DispList*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !289, metadata !DIExpression()), !dbg !290
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !291, metadata !DIExpression()), !dbg !292
  br label %while.cond, !dbg !293

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !294
  %call = call i8* @BLI_pophead(%struct.ListBase* %0), !dbg !295
  %1 = bitcast i8* %call to %struct.DispList*, !dbg !295
  store %struct.DispList* %1, %struct.DispList** %dl, align 8, !dbg !296
  %tobool = icmp ne %struct.DispList* %1, null, !dbg !293
  br i1 %tobool, label %while.body, label %while.end, !dbg !293

while.body:                                       ; preds = %while.cond
  %2 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !297
  call void @BKE_displist_elem_free(%struct.DispList* %2), !dbg !299
  br label %while.cond, !dbg !293, !llvm.loop !300

while.end:                                        ; preds = %while.cond
  ret void, !dbg !302
}

declare dso_local i8* @BLI_pophead(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DispList* @BKE_displist_find_or_create(%struct.ListBase* %lb, i32 %type) #0 !dbg !303 {
entry:
  %retval = alloca %struct.DispList*, align 8
  %lb.addr = alloca %struct.ListBase*, align 8
  %type.addr = alloca i32, align 4
  %dl = alloca %struct.DispList*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !306, metadata !DIExpression()), !dbg !307
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !308, metadata !DIExpression()), !dbg !309
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !310, metadata !DIExpression()), !dbg !311
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !312
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !313
  %1 = load i8*, i8** %first, align 8, !dbg !313
  %2 = bitcast i8* %1 to %struct.DispList*, !dbg !312
  store %struct.DispList* %2, %struct.DispList** %dl, align 8, !dbg !314
  br label %while.cond, !dbg !315

while.cond:                                       ; preds = %if.end, %entry
  %3 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !316
  %tobool = icmp ne %struct.DispList* %3, null, !dbg !315
  br i1 %tobool, label %while.body, label %while.end, !dbg !315

while.body:                                       ; preds = %while.cond
  %4 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !317
  %type1 = getelementptr inbounds %struct.DispList, %struct.DispList* %4, i32 0, i32 2, !dbg !320
  %5 = load i16, i16* %type1, align 8, !dbg !320
  %conv = sext i16 %5 to i32, !dbg !317
  %6 = load i32, i32* %type.addr, align 4, !dbg !321
  %cmp = icmp eq i32 %conv, %6, !dbg !322
  br i1 %cmp, label %if.then, label %if.end, !dbg !323

if.then:                                          ; preds = %while.body
  %7 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !324
  store %struct.DispList* %7, %struct.DispList** %retval, align 8, !dbg !325
  br label %return, !dbg !325

if.end:                                           ; preds = %while.body
  %8 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !326
  %next = getelementptr inbounds %struct.DispList, %struct.DispList* %8, i32 0, i32 0, !dbg !327
  %9 = load %struct.DispList*, %struct.DispList** %next, align 8, !dbg !327
  store %struct.DispList* %9, %struct.DispList** %dl, align 8, !dbg !328
  br label %while.cond, !dbg !315, !llvm.loop !329

while.end:                                        ; preds = %while.cond
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !331
  %call = call i8* %10(i64 72, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)), !dbg !331
  %11 = bitcast i8* %call to %struct.DispList*, !dbg !331
  store %struct.DispList* %11, %struct.DispList** %dl, align 8, !dbg !332
  %12 = load i32, i32* %type.addr, align 4, !dbg !333
  %conv3 = trunc i32 %12 to i16, !dbg !333
  %13 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !334
  %type4 = getelementptr inbounds %struct.DispList, %struct.DispList* %13, i32 0, i32 2, !dbg !335
  store i16 %conv3, i16* %type4, align 8, !dbg !336
  %14 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !337
  %15 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !338
  %16 = bitcast %struct.DispList* %15 to i8*, !dbg !338
  call void @BLI_addtail(%struct.ListBase* %14, i8* %16), !dbg !339
  %17 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !340
  store %struct.DispList* %17, %struct.DispList** %retval, align 8, !dbg !341
  br label %return, !dbg !341

return:                                           ; preds = %while.end, %if.then
  %18 = load %struct.DispList*, %struct.DispList** %retval, align 8, !dbg !342
  ret %struct.DispList* %18, !dbg !342
}

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DispList* @BKE_displist_find(%struct.ListBase* %lb, i32 %type) #0 !dbg !343 {
entry:
  %retval = alloca %struct.DispList*, align 8
  %lb.addr = alloca %struct.ListBase*, align 8
  %type.addr = alloca i32, align 4
  %dl = alloca %struct.DispList*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !344, metadata !DIExpression()), !dbg !345
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !346, metadata !DIExpression()), !dbg !347
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !348, metadata !DIExpression()), !dbg !349
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !350
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !351
  %1 = load i8*, i8** %first, align 8, !dbg !351
  %2 = bitcast i8* %1 to %struct.DispList*, !dbg !350
  store %struct.DispList* %2, %struct.DispList** %dl, align 8, !dbg !352
  br label %while.cond, !dbg !353

while.cond:                                       ; preds = %if.end, %entry
  %3 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !354
  %tobool = icmp ne %struct.DispList* %3, null, !dbg !353
  br i1 %tobool, label %while.body, label %while.end, !dbg !353

while.body:                                       ; preds = %while.cond
  %4 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !355
  %type1 = getelementptr inbounds %struct.DispList, %struct.DispList* %4, i32 0, i32 2, !dbg !358
  %5 = load i16, i16* %type1, align 8, !dbg !358
  %conv = sext i16 %5 to i32, !dbg !355
  %6 = load i32, i32* %type.addr, align 4, !dbg !359
  %cmp = icmp eq i32 %conv, %6, !dbg !360
  br i1 %cmp, label %if.then, label %if.end, !dbg !361

if.then:                                          ; preds = %while.body
  %7 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !362
  store %struct.DispList* %7, %struct.DispList** %retval, align 8, !dbg !363
  br label %return, !dbg !363

if.end:                                           ; preds = %while.body
  %8 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !364
  %next = getelementptr inbounds %struct.DispList, %struct.DispList* %8, i32 0, i32 0, !dbg !365
  %9 = load %struct.DispList*, %struct.DispList** %next, align 8, !dbg !365
  store %struct.DispList* %9, %struct.DispList** %dl, align 8, !dbg !366
  br label %while.cond, !dbg !353, !llvm.loop !367

while.end:                                        ; preds = %while.cond
  store %struct.DispList* null, %struct.DispList** %retval, align 8, !dbg !369
  br label %return, !dbg !369

return:                                           ; preds = %while.end, %if.then
  %10 = load %struct.DispList*, %struct.DispList** %retval, align 8, !dbg !370
  ret %struct.DispList* %10, !dbg !370
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_displist_has_faces(%struct.ListBase* %lb) #0 !dbg !371 {
entry:
  %retval = alloca i8, align 1
  %lb.addr = alloca %struct.ListBase*, align 8
  %dl = alloca %struct.DispList*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !375, metadata !DIExpression()), !dbg !376
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !377, metadata !DIExpression()), !dbg !378
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !379
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !381
  %1 = load i8*, i8** %first, align 8, !dbg !381
  %2 = bitcast i8* %1 to %struct.DispList*, !dbg !379
  store %struct.DispList* %2, %struct.DispList** %dl, align 8, !dbg !382
  br label %for.cond, !dbg !383

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !384
  %tobool = icmp ne %struct.DispList* %3, null, !dbg !386
  br i1 %tobool, label %for.body, label %for.end, !dbg !386

for.body:                                         ; preds = %for.cond
  %4 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !387
  %type = getelementptr inbounds %struct.DispList, %struct.DispList* %4, i32 0, i32 2, !dbg !387
  %5 = load i16, i16* %type, align 8, !dbg !387
  %conv = sext i16 %5 to i32, !dbg !387
  %cmp = icmp eq i32 %conv, 4, !dbg !387
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !387

lor.lhs.false:                                    ; preds = %for.body
  %6 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !387
  %type2 = getelementptr inbounds %struct.DispList, %struct.DispList* %6, i32 0, i32 2, !dbg !387
  %7 = load i16, i16* %type2, align 8, !dbg !387
  %conv3 = sext i16 %7 to i32, !dbg !387
  %cmp4 = icmp eq i32 %conv3, 5, !dbg !387
  br i1 %cmp4, label %if.then, label %lor.lhs.false6, !dbg !387

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %8 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !387
  %type7 = getelementptr inbounds %struct.DispList, %struct.DispList* %8, i32 0, i32 2, !dbg !387
  %9 = load i16, i16* %type7, align 8, !dbg !387
  %conv8 = sext i16 %9 to i32, !dbg !387
  %cmp9 = icmp eq i32 %conv8, 2, !dbg !387
  br i1 %cmp9, label %if.then, label %if.end, !dbg !390

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false, %for.body
  store i8 1, i8* %retval, align 1, !dbg !391
  br label %return, !dbg !391

if.end:                                           ; preds = %lor.lhs.false6
  br label %for.inc, !dbg !393

for.inc:                                          ; preds = %if.end
  %10 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !394
  %next = getelementptr inbounds %struct.DispList, %struct.DispList* %10, i32 0, i32 0, !dbg !395
  %11 = load %struct.DispList*, %struct.DispList** %next, align 8, !dbg !395
  store %struct.DispList* %11, %struct.DispList** %dl, align 8, !dbg !396
  br label %for.cond, !dbg !397, !llvm.loop !398

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !400
  br label %return, !dbg !400

return:                                           ; preds = %for.end, %if.then
  %12 = load i8, i8* %retval, align 1, !dbg !401
  ret i8 %12, !dbg !401
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_displist_copy(%struct.ListBase* %lbn, %struct.ListBase* %lb) #0 !dbg !402 {
entry:
  %lbn.addr = alloca %struct.ListBase*, align 8
  %lb.addr = alloca %struct.ListBase*, align 8
  %dln = alloca %struct.DispList*, align 8
  %dl = alloca %struct.DispList*, align 8
  store %struct.ListBase* %lbn, %struct.ListBase** %lbn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lbn.addr, metadata !405, metadata !DIExpression()), !dbg !406
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !407, metadata !DIExpression()), !dbg !408
  call void @llvm.dbg.declare(metadata %struct.DispList** %dln, metadata !409, metadata !DIExpression()), !dbg !410
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !411, metadata !DIExpression()), !dbg !412
  %0 = load %struct.ListBase*, %struct.ListBase** %lbn.addr, align 8, !dbg !413
  call void @BKE_displist_free(%struct.ListBase* %0), !dbg !414
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !415
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !416
  %2 = load i8*, i8** %first, align 8, !dbg !416
  %3 = bitcast i8* %2 to %struct.DispList*, !dbg !415
  store %struct.DispList* %3, %struct.DispList** %dl, align 8, !dbg !417
  br label %while.cond, !dbg !418

while.cond:                                       ; preds = %if.end, %entry
  %4 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !419
  %tobool = icmp ne %struct.DispList* %4, null, !dbg !418
  br i1 %tobool, label %while.body, label %while.end, !dbg !418

while.body:                                       ; preds = %while.cond
  %5 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !420
  %6 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !422
  %7 = bitcast %struct.DispList* %6 to i8*, !dbg !422
  %call = call i8* %5(i8* %7), !dbg !420
  %8 = bitcast i8* %call to %struct.DispList*, !dbg !420
  store %struct.DispList* %8, %struct.DispList** %dln, align 8, !dbg !423
  %9 = load %struct.ListBase*, %struct.ListBase** %lbn.addr, align 8, !dbg !424
  %10 = load %struct.DispList*, %struct.DispList** %dln, align 8, !dbg !425
  %11 = bitcast %struct.DispList* %10 to i8*, !dbg !425
  call void @BLI_addtail(%struct.ListBase* %9, i8* %11), !dbg !426
  %12 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !427
  %13 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !428
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %13, i32 0, i32 8, !dbg !429
  %14 = load float*, float** %verts, align 8, !dbg !429
  %15 = bitcast float* %14 to i8*, !dbg !428
  %call1 = call i8* %12(i8* %15), !dbg !427
  %16 = bitcast i8* %call1 to float*, !dbg !427
  %17 = load %struct.DispList*, %struct.DispList** %dln, align 8, !dbg !430
  %verts2 = getelementptr inbounds %struct.DispList, %struct.DispList* %17, i32 0, i32 8, !dbg !431
  store float* %16, float** %verts2, align 8, !dbg !432
  %18 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !433
  %19 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !434
  %nors = getelementptr inbounds %struct.DispList, %struct.DispList* %19, i32 0, i32 9, !dbg !435
  %20 = load float*, float** %nors, align 8, !dbg !435
  %21 = bitcast float* %20 to i8*, !dbg !434
  %call3 = call i8* %18(i8* %21), !dbg !433
  %22 = bitcast i8* %call3 to float*, !dbg !433
  %23 = load %struct.DispList*, %struct.DispList** %dln, align 8, !dbg !436
  %nors4 = getelementptr inbounds %struct.DispList, %struct.DispList* %23, i32 0, i32 9, !dbg !437
  store float* %22, float** %nors4, align 8, !dbg !438
  %24 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !439
  %25 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !440
  %index = getelementptr inbounds %struct.DispList, %struct.DispList* %25, i32 0, i32 10, !dbg !441
  %26 = load i32*, i32** %index, align 8, !dbg !441
  %27 = bitcast i32* %26 to i8*, !dbg !440
  %call5 = call i8* %24(i8* %27), !dbg !439
  %28 = bitcast i8* %call5 to i32*, !dbg !439
  %29 = load %struct.DispList*, %struct.DispList** %dln, align 8, !dbg !442
  %index6 = getelementptr inbounds %struct.DispList, %struct.DispList* %29, i32 0, i32 10, !dbg !443
  store i32* %28, i32** %index6, align 8, !dbg !444
  %30 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !445
  %bevelSplitFlag = getelementptr inbounds %struct.DispList, %struct.DispList* %30, i32 0, i32 13, !dbg !447
  %31 = load i32*, i32** %bevelSplitFlag, align 8, !dbg !447
  %tobool7 = icmp ne i32* %31, null, !dbg !445
  br i1 %tobool7, label %if.then, label %if.end, !dbg !448

if.then:                                          ; preds = %while.body
  %32 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !449
  %33 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !450
  %bevelSplitFlag8 = getelementptr inbounds %struct.DispList, %struct.DispList* %33, i32 0, i32 13, !dbg !451
  %34 = load i32*, i32** %bevelSplitFlag8, align 8, !dbg !451
  %35 = bitcast i32* %34 to i8*, !dbg !450
  %call9 = call i8* %32(i8* %35), !dbg !449
  %36 = bitcast i8* %call9 to i32*, !dbg !449
  %37 = load %struct.DispList*, %struct.DispList** %dln, align 8, !dbg !452
  %bevelSplitFlag10 = getelementptr inbounds %struct.DispList, %struct.DispList* %37, i32 0, i32 13, !dbg !453
  store i32* %36, i32** %bevelSplitFlag10, align 8, !dbg !454
  br label %if.end, !dbg !452

if.end:                                           ; preds = %if.then, %while.body
  %38 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !455
  %next = getelementptr inbounds %struct.DispList, %struct.DispList* %38, i32 0, i32 0, !dbg !456
  %39 = load %struct.DispList*, %struct.DispList** %next, align 8, !dbg !456
  store %struct.DispList* %39, %struct.DispList** %dl, align 8, !dbg !457
  br label %while.cond, !dbg !418, !llvm.loop !458

while.end:                                        ; preds = %while.cond
  ret void, !dbg !460
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_displist_normals_add(%struct.ListBase* %lb) #0 !dbg !461 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %dl = alloca %struct.DispList*, align 8
  %vdata = alloca float*, align 8
  %ndata = alloca float*, align 8
  %nor = alloca [3 x float], align 4
  %v1 = alloca float*, align 8
  %v2 = alloca float*, align 8
  %v3 = alloca float*, align 8
  %v4 = alloca float*, align 8
  %n1 = alloca float*, align 8
  %n2 = alloca float*, align 8
  %n3 = alloca float*, align 8
  %n4 = alloca float*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %p1 = alloca i32, align 4
  %p2 = alloca i32, align 4
  %p3 = alloca i32, align 4
  %p4 = alloca i32, align 4
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !462, metadata !DIExpression()), !dbg !463
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !464, metadata !DIExpression()), !dbg !465
  store %struct.DispList* null, %struct.DispList** %dl, align 8, !dbg !465
  call void @llvm.dbg.declare(metadata float** %vdata, metadata !466, metadata !DIExpression()), !dbg !467
  call void @llvm.dbg.declare(metadata float** %ndata, metadata !468, metadata !DIExpression()), !dbg !469
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !470, metadata !DIExpression()), !dbg !474
  call void @llvm.dbg.declare(metadata float** %v1, metadata !475, metadata !DIExpression()), !dbg !476
  call void @llvm.dbg.declare(metadata float** %v2, metadata !477, metadata !DIExpression()), !dbg !478
  call void @llvm.dbg.declare(metadata float** %v3, metadata !479, metadata !DIExpression()), !dbg !480
  call void @llvm.dbg.declare(metadata float** %v4, metadata !481, metadata !DIExpression()), !dbg !482
  call void @llvm.dbg.declare(metadata float** %n1, metadata !483, metadata !DIExpression()), !dbg !484
  call void @llvm.dbg.declare(metadata float** %n2, metadata !485, metadata !DIExpression()), !dbg !486
  call void @llvm.dbg.declare(metadata float** %n3, metadata !487, metadata !DIExpression()), !dbg !488
  call void @llvm.dbg.declare(metadata float** %n4, metadata !489, metadata !DIExpression()), !dbg !490
  call void @llvm.dbg.declare(metadata i32* %a, metadata !491, metadata !DIExpression()), !dbg !492
  call void @llvm.dbg.declare(metadata i32* %b, metadata !493, metadata !DIExpression()), !dbg !494
  call void @llvm.dbg.declare(metadata i32* %p1, metadata !495, metadata !DIExpression()), !dbg !496
  call void @llvm.dbg.declare(metadata i32* %p2, metadata !497, metadata !DIExpression()), !dbg !498
  call void @llvm.dbg.declare(metadata i32* %p3, metadata !499, metadata !DIExpression()), !dbg !500
  call void @llvm.dbg.declare(metadata i32* %p4, metadata !501, metadata !DIExpression()), !dbg !502
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !503
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !504
  %1 = load i8*, i8** %first, align 8, !dbg !504
  %2 = bitcast i8* %1 to %struct.DispList*, !dbg !503
  store %struct.DispList* %2, %struct.DispList** %dl, align 8, !dbg !505
  br label %while.cond, !dbg !506

while.cond:                                       ; preds = %if.end89, %entry
  %3 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !507
  %tobool = icmp ne %struct.DispList* %3, null, !dbg !506
  br i1 %tobool, label %while.body, label %while.end90, !dbg !506

while.body:                                       ; preds = %while.cond
  %4 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !508
  %type = getelementptr inbounds %struct.DispList, %struct.DispList* %4, i32 0, i32 2, !dbg !511
  %5 = load i16, i16* %type, align 8, !dbg !511
  %conv = sext i16 %5 to i32, !dbg !508
  %cmp = icmp eq i32 %conv, 4, !dbg !512
  br i1 %cmp, label %if.then, label %if.else14, !dbg !513

if.then:                                          ; preds = %while.body
  %6 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !514
  %nors = getelementptr inbounds %struct.DispList, %struct.DispList* %6, i32 0, i32 9, !dbg !517
  %7 = load float*, float** %nors, align 8, !dbg !517
  %cmp2 = icmp eq float* %7, null, !dbg !518
  br i1 %cmp2, label %if.then4, label %if.end13, !dbg !519

if.then4:                                         ; preds = %if.then
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !520
  %call = call i8* %8(i64 12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)), !dbg !520
  %9 = bitcast i8* %call to float*, !dbg !520
  %10 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !522
  %nors5 = getelementptr inbounds %struct.DispList, %struct.DispList* %10, i32 0, i32 9, !dbg !523
  store float* %9, float** %nors5, align 8, !dbg !524
  %11 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !525
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %11, i32 0, i32 8, !dbg !527
  %12 = load float*, float** %verts, align 8, !dbg !527
  %arrayidx = getelementptr inbounds float, float* %12, i64 2, !dbg !525
  %13 = load float, float* %arrayidx, align 4, !dbg !525
  %cmp6 = fcmp olt float %13, 0.000000e+00, !dbg !528
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !529

if.then8:                                         ; preds = %if.then4
  %14 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !530
  %nors9 = getelementptr inbounds %struct.DispList, %struct.DispList* %14, i32 0, i32 9, !dbg !531
  %15 = load float*, float** %nors9, align 8, !dbg !531
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 2, !dbg !530
  store float -1.000000e+00, float* %arrayidx10, align 4, !dbg !532
  br label %if.end, !dbg !530

if.else:                                          ; preds = %if.then4
  %16 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !533
  %nors11 = getelementptr inbounds %struct.DispList, %struct.DispList* %16, i32 0, i32 9, !dbg !534
  %17 = load float*, float** %nors11, align 8, !dbg !534
  %arrayidx12 = getelementptr inbounds float, float* %17, i64 2, !dbg !533
  store float 1.000000e+00, float* %arrayidx12, align 4, !dbg !535
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  br label %if.end13, !dbg !536

if.end13:                                         ; preds = %if.end, %if.then
  br label %if.end89, !dbg !537

if.else14:                                        ; preds = %while.body
  %18 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !538
  %type15 = getelementptr inbounds %struct.DispList, %struct.DispList* %18, i32 0, i32 2, !dbg !540
  %19 = load i16, i16* %type15, align 8, !dbg !540
  %conv16 = sext i16 %19 to i32, !dbg !538
  %cmp17 = icmp eq i32 %conv16, 2, !dbg !541
  br i1 %cmp17, label %if.then19, label %if.end88, !dbg !542

if.then19:                                        ; preds = %if.else14
  %20 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !543
  %nors20 = getelementptr inbounds %struct.DispList, %struct.DispList* %20, i32 0, i32 9, !dbg !546
  %21 = load float*, float** %nors20, align 8, !dbg !546
  %cmp21 = icmp eq float* %21, null, !dbg !547
  br i1 %cmp21, label %if.then23, label %if.end87, !dbg !548

if.then23:                                        ; preds = %if.then19
  %22 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !549
  %23 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !551
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %23, i32 0, i32 5, !dbg !552
  %24 = load i32, i32* %nr, align 8, !dbg !552
  %conv24 = sext i32 %24 to i64, !dbg !551
  %mul = mul i64 12, %conv24, !dbg !553
  %25 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !554
  %parts = getelementptr inbounds %struct.DispList, %struct.DispList* %25, i32 0, i32 4, !dbg !555
  %26 = load i32, i32* %parts, align 4, !dbg !555
  %conv25 = sext i32 %26 to i64, !dbg !554
  %mul26 = mul i64 %mul, %conv25, !dbg !556
  %call27 = call i8* %22(i64 %mul26, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)), !dbg !549
  %27 = bitcast i8* %call27 to float*, !dbg !549
  %28 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !557
  %nors28 = getelementptr inbounds %struct.DispList, %struct.DispList* %28, i32 0, i32 9, !dbg !558
  store float* %27, float** %nors28, align 8, !dbg !559
  %29 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !560
  %verts29 = getelementptr inbounds %struct.DispList, %struct.DispList* %29, i32 0, i32 8, !dbg !561
  %30 = load float*, float** %verts29, align 8, !dbg !561
  store float* %30, float** %vdata, align 8, !dbg !562
  %31 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !563
  %nors30 = getelementptr inbounds %struct.DispList, %struct.DispList* %31, i32 0, i32 9, !dbg !564
  %32 = load float*, float** %nors30, align 8, !dbg !564
  store float* %32, float** %ndata, align 8, !dbg !565
  store i32 0, i32* %a, align 4, !dbg !566
  br label %for.cond, !dbg !568

for.cond:                                         ; preds = %for.inc76, %if.then23
  %33 = load i32, i32* %a, align 4, !dbg !569
  %34 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !571
  %parts31 = getelementptr inbounds %struct.DispList, %struct.DispList* %34, i32 0, i32 4, !dbg !572
  %35 = load i32, i32* %parts31, align 4, !dbg !572
  %cmp32 = icmp slt i32 %33, %35, !dbg !573
  br i1 %cmp32, label %for.body, label %for.end78, !dbg !574

for.body:                                         ; preds = %for.cond
  %36 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !575
  %37 = load i32, i32* %a, align 4, !dbg !578
  %call34 = call zeroext i8 @BKE_displist_surfindex_get(%struct.DispList* %36, i32 %37, i32* %b, i32* %p1, i32* %p2, i32* %p3, i32* %p4), !dbg !579
  %conv35 = zext i8 %call34 to i32, !dbg !579
  %cmp36 = icmp eq i32 %conv35, 0, !dbg !580
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !581

if.then38:                                        ; preds = %for.body
  br label %for.end78, !dbg !582

if.end39:                                         ; preds = %for.body
  %38 = load float*, float** %vdata, align 8, !dbg !583
  %39 = load i32, i32* %p1, align 4, !dbg !584
  %mul40 = mul nsw i32 3, %39, !dbg !585
  %idx.ext = sext i32 %mul40 to i64, !dbg !586
  %add.ptr = getelementptr inbounds float, float* %38, i64 %idx.ext, !dbg !586
  store float* %add.ptr, float** %v1, align 8, !dbg !587
  %40 = load float*, float** %ndata, align 8, !dbg !588
  %41 = load i32, i32* %p1, align 4, !dbg !589
  %mul41 = mul nsw i32 3, %41, !dbg !590
  %idx.ext42 = sext i32 %mul41 to i64, !dbg !591
  %add.ptr43 = getelementptr inbounds float, float* %40, i64 %idx.ext42, !dbg !591
  store float* %add.ptr43, float** %n1, align 8, !dbg !592
  %42 = load float*, float** %vdata, align 8, !dbg !593
  %43 = load i32, i32* %p2, align 4, !dbg !594
  %mul44 = mul nsw i32 3, %43, !dbg !595
  %idx.ext45 = sext i32 %mul44 to i64, !dbg !596
  %add.ptr46 = getelementptr inbounds float, float* %42, i64 %idx.ext45, !dbg !596
  store float* %add.ptr46, float** %v2, align 8, !dbg !597
  %44 = load float*, float** %ndata, align 8, !dbg !598
  %45 = load i32, i32* %p2, align 4, !dbg !599
  %mul47 = mul nsw i32 3, %45, !dbg !600
  %idx.ext48 = sext i32 %mul47 to i64, !dbg !601
  %add.ptr49 = getelementptr inbounds float, float* %44, i64 %idx.ext48, !dbg !601
  store float* %add.ptr49, float** %n2, align 8, !dbg !602
  %46 = load float*, float** %vdata, align 8, !dbg !603
  %47 = load i32, i32* %p3, align 4, !dbg !604
  %mul50 = mul nsw i32 3, %47, !dbg !605
  %idx.ext51 = sext i32 %mul50 to i64, !dbg !606
  %add.ptr52 = getelementptr inbounds float, float* %46, i64 %idx.ext51, !dbg !606
  store float* %add.ptr52, float** %v3, align 8, !dbg !607
  %48 = load float*, float** %ndata, align 8, !dbg !608
  %49 = load i32, i32* %p3, align 4, !dbg !609
  %mul53 = mul nsw i32 3, %49, !dbg !610
  %idx.ext54 = sext i32 %mul53 to i64, !dbg !611
  %add.ptr55 = getelementptr inbounds float, float* %48, i64 %idx.ext54, !dbg !611
  store float* %add.ptr55, float** %n3, align 8, !dbg !612
  %50 = load float*, float** %vdata, align 8, !dbg !613
  %51 = load i32, i32* %p4, align 4, !dbg !614
  %mul56 = mul nsw i32 3, %51, !dbg !615
  %idx.ext57 = sext i32 %mul56 to i64, !dbg !616
  %add.ptr58 = getelementptr inbounds float, float* %50, i64 %idx.ext57, !dbg !616
  store float* %add.ptr58, float** %v4, align 8, !dbg !617
  %52 = load float*, float** %ndata, align 8, !dbg !618
  %53 = load i32, i32* %p4, align 4, !dbg !619
  %mul59 = mul nsw i32 3, %53, !dbg !620
  %idx.ext60 = sext i32 %mul59 to i64, !dbg !621
  %add.ptr61 = getelementptr inbounds float, float* %52, i64 %idx.ext60, !dbg !621
  store float* %add.ptr61, float** %n4, align 8, !dbg !622
  br label %for.cond62, !dbg !623

for.cond62:                                       ; preds = %for.inc, %if.end39
  %54 = load i32, i32* %b, align 4, !dbg !624
  %55 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !627
  %nr63 = getelementptr inbounds %struct.DispList, %struct.DispList* %55, i32 0, i32 5, !dbg !628
  %56 = load i32, i32* %nr63, align 8, !dbg !628
  %cmp64 = icmp slt i32 %54, %56, !dbg !629
  br i1 %cmp64, label %for.body66, label %for.end, !dbg !630

for.body66:                                       ; preds = %for.cond62
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !631
  %57 = load float*, float** %v1, align 8, !dbg !633
  %58 = load float*, float** %v3, align 8, !dbg !634
  %59 = load float*, float** %v4, align 8, !dbg !635
  %60 = load float*, float** %v2, align 8, !dbg !636
  %call67 = call float @normal_quad_v3(float* %arraydecay, float* %57, float* %58, float* %59, float* %60), !dbg !637
  %61 = load float*, float** %n1, align 8, !dbg !638
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !639
  call void @add_v3_v3(float* %61, float* %arraydecay68), !dbg !640
  %62 = load float*, float** %n2, align 8, !dbg !641
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !642
  call void @add_v3_v3(float* %62, float* %arraydecay69), !dbg !643
  %63 = load float*, float** %n3, align 8, !dbg !644
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !645
  call void @add_v3_v3(float* %63, float* %arraydecay70), !dbg !646
  %64 = load float*, float** %n4, align 8, !dbg !647
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !648
  call void @add_v3_v3(float* %64, float* %arraydecay71), !dbg !649
  %65 = load float*, float** %v1, align 8, !dbg !650
  store float* %65, float** %v2, align 8, !dbg !651
  %66 = load float*, float** %v1, align 8, !dbg !652
  %add.ptr72 = getelementptr inbounds float, float* %66, i64 3, !dbg !652
  store float* %add.ptr72, float** %v1, align 8, !dbg !652
  %67 = load float*, float** %v3, align 8, !dbg !653
  store float* %67, float** %v4, align 8, !dbg !654
  %68 = load float*, float** %v3, align 8, !dbg !655
  %add.ptr73 = getelementptr inbounds float, float* %68, i64 3, !dbg !655
  store float* %add.ptr73, float** %v3, align 8, !dbg !655
  %69 = load float*, float** %n1, align 8, !dbg !656
  store float* %69, float** %n2, align 8, !dbg !657
  %70 = load float*, float** %n1, align 8, !dbg !658
  %add.ptr74 = getelementptr inbounds float, float* %70, i64 3, !dbg !658
  store float* %add.ptr74, float** %n1, align 8, !dbg !658
  %71 = load float*, float** %n3, align 8, !dbg !659
  store float* %71, float** %n4, align 8, !dbg !660
  %72 = load float*, float** %n3, align 8, !dbg !661
  %add.ptr75 = getelementptr inbounds float, float* %72, i64 3, !dbg !661
  store float* %add.ptr75, float** %n3, align 8, !dbg !661
  br label %for.inc, !dbg !662

for.inc:                                          ; preds = %for.body66
  %73 = load i32, i32* %b, align 4, !dbg !663
  %inc = add nsw i32 %73, 1, !dbg !663
  store i32 %inc, i32* %b, align 4, !dbg !663
  br label %for.cond62, !dbg !664, !llvm.loop !665

for.end:                                          ; preds = %for.cond62
  br label %for.inc76, !dbg !667

for.inc76:                                        ; preds = %for.end
  %74 = load i32, i32* %a, align 4, !dbg !668
  %inc77 = add nsw i32 %74, 1, !dbg !668
  store i32 %inc77, i32* %a, align 4, !dbg !668
  br label %for.cond, !dbg !669, !llvm.loop !670

for.end78:                                        ; preds = %if.then38, %for.cond
  %75 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !672
  %parts79 = getelementptr inbounds %struct.DispList, %struct.DispList* %75, i32 0, i32 4, !dbg !673
  %76 = load i32, i32* %parts79, align 4, !dbg !673
  %77 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !674
  %nr80 = getelementptr inbounds %struct.DispList, %struct.DispList* %77, i32 0, i32 5, !dbg !675
  %78 = load i32, i32* %nr80, align 8, !dbg !675
  %mul81 = mul nsw i32 %76, %78, !dbg !676
  store i32 %mul81, i32* %a, align 4, !dbg !677
  %79 = load float*, float** %ndata, align 8, !dbg !678
  store float* %79, float** %v1, align 8, !dbg !679
  br label %while.cond82, !dbg !680

while.cond82:                                     ; preds = %while.body84, %for.end78
  %80 = load i32, i32* %a, align 4, !dbg !681
  %dec = add nsw i32 %80, -1, !dbg !681
  store i32 %dec, i32* %a, align 4, !dbg !681
  %tobool83 = icmp ne i32 %80, 0, !dbg !680
  br i1 %tobool83, label %while.body84, label %while.end, !dbg !680

while.body84:                                     ; preds = %while.cond82
  %81 = load float*, float** %v1, align 8, !dbg !682
  %call85 = call float @normalize_v3(float* %81), !dbg !684
  %82 = load float*, float** %v1, align 8, !dbg !685
  %add.ptr86 = getelementptr inbounds float, float* %82, i64 3, !dbg !685
  store float* %add.ptr86, float** %v1, align 8, !dbg !685
  br label %while.cond82, !dbg !680, !llvm.loop !686

while.end:                                        ; preds = %while.cond82
  br label %if.end87, !dbg !688

if.end87:                                         ; preds = %while.end, %if.then19
  br label %if.end88, !dbg !689

if.end88:                                         ; preds = %if.end87, %if.else14
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.end13
  %83 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !690
  %next = getelementptr inbounds %struct.DispList, %struct.DispList* %83, i32 0, i32 0, !dbg !691
  %84 = load %struct.DispList*, %struct.DispList** %next, align 8, !dbg !691
  store %struct.DispList* %84, %struct.DispList** %dl, align 8, !dbg !692
  br label %while.cond, !dbg !506, !llvm.loop !693

while.end90:                                      ; preds = %while.cond
  ret void, !dbg !695
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_displist_surfindex_get(%struct.DispList* %dl, i32 %a, i32* %b, i32* %p1, i32* %p2, i32* %p3, i32* %p4) #0 !dbg !696 {
entry:
  %retval = alloca i8, align 1
  %dl.addr = alloca %struct.DispList*, align 8
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32*, align 8
  %p1.addr = alloca i32*, align 8
  %p2.addr = alloca i32*, align 8
  %p3.addr = alloca i32*, align 8
  %p4.addr = alloca i32*, align 8
  store %struct.DispList* %dl, %struct.DispList** %dl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl.addr, metadata !699, metadata !DIExpression()), !dbg !700
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !701, metadata !DIExpression()), !dbg !702
  store i32* %b, i32** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %b.addr, metadata !703, metadata !DIExpression()), !dbg !704
  store i32* %p1, i32** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p1.addr, metadata !705, metadata !DIExpression()), !dbg !706
  store i32* %p2, i32** %p2.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p2.addr, metadata !707, metadata !DIExpression()), !dbg !708
  store i32* %p3, i32** %p3.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p3.addr, metadata !709, metadata !DIExpression()), !dbg !710
  store i32* %p4, i32** %p4.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p4.addr, metadata !711, metadata !DIExpression()), !dbg !712
  %0 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !713
  %flag = getelementptr inbounds %struct.DispList, %struct.DispList* %0, i32 0, i32 3, !dbg !715
  %1 = load i16, i16* %flag, align 2, !dbg !715
  %conv = sext i16 %1 to i32, !dbg !713
  %and = and i32 %conv, 2, !dbg !716
  %cmp = icmp eq i32 %and, 0, !dbg !717
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !718

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !719
  %3 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !720
  %parts = getelementptr inbounds %struct.DispList, %struct.DispList* %3, i32 0, i32 4, !dbg !721
  %4 = load i32, i32* %parts, align 4, !dbg !721
  %sub = sub nsw i32 %4, 1, !dbg !722
  %cmp2 = icmp eq i32 %2, %sub, !dbg !723
  br i1 %cmp2, label %if.then, label %if.end, !dbg !724

if.then:                                          ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !725
  br label %return, !dbg !725

if.end:                                           ; preds = %land.lhs.true, %entry
  %5 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !727
  %flag4 = getelementptr inbounds %struct.DispList, %struct.DispList* %5, i32 0, i32 3, !dbg !729
  %6 = load i16, i16* %flag4, align 2, !dbg !729
  %conv5 = sext i16 %6 to i32, !dbg !727
  %and6 = and i32 %conv5, 1, !dbg !730
  %tobool = icmp ne i32 %and6, 0, !dbg !730
  br i1 %tobool, label %if.then7, label %if.else, !dbg !731

if.then7:                                         ; preds = %if.end
  %7 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !732
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %7, i32 0, i32 5, !dbg !734
  %8 = load i32, i32* %nr, align 8, !dbg !734
  %9 = load i32, i32* %a.addr, align 4, !dbg !735
  %mul = mul nsw i32 %8, %9, !dbg !736
  %10 = load i32*, i32** %p1.addr, align 8, !dbg !737
  store i32 %mul, i32* %10, align 4, !dbg !738
  %11 = load i32*, i32** %p1.addr, align 8, !dbg !739
  %12 = load i32, i32* %11, align 4, !dbg !740
  %13 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !741
  %nr8 = getelementptr inbounds %struct.DispList, %struct.DispList* %13, i32 0, i32 5, !dbg !742
  %14 = load i32, i32* %nr8, align 8, !dbg !742
  %add = add nsw i32 %12, %14, !dbg !743
  %sub9 = sub nsw i32 %add, 1, !dbg !744
  %15 = load i32*, i32** %p2.addr, align 8, !dbg !745
  store i32 %sub9, i32* %15, align 4, !dbg !746
  %16 = load i32*, i32** %p1.addr, align 8, !dbg !747
  %17 = load i32, i32* %16, align 4, !dbg !748
  %18 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !749
  %nr10 = getelementptr inbounds %struct.DispList, %struct.DispList* %18, i32 0, i32 5, !dbg !750
  %19 = load i32, i32* %nr10, align 8, !dbg !750
  %add11 = add nsw i32 %17, %19, !dbg !751
  %20 = load i32*, i32** %p3.addr, align 8, !dbg !752
  store i32 %add11, i32* %20, align 4, !dbg !753
  %21 = load i32*, i32** %p2.addr, align 8, !dbg !754
  %22 = load i32, i32* %21, align 4, !dbg !755
  %23 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !756
  %nr12 = getelementptr inbounds %struct.DispList, %struct.DispList* %23, i32 0, i32 5, !dbg !757
  %24 = load i32, i32* %nr12, align 8, !dbg !757
  %add13 = add nsw i32 %22, %24, !dbg !758
  %25 = load i32*, i32** %p4.addr, align 8, !dbg !759
  store i32 %add13, i32* %25, align 4, !dbg !760
  %26 = load i32*, i32** %b.addr, align 8, !dbg !761
  store i32 0, i32* %26, align 4, !dbg !762
  br label %if.end21, !dbg !763

if.else:                                          ; preds = %if.end
  %27 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !764
  %nr14 = getelementptr inbounds %struct.DispList, %struct.DispList* %27, i32 0, i32 5, !dbg !766
  %28 = load i32, i32* %nr14, align 8, !dbg !766
  %29 = load i32, i32* %a.addr, align 4, !dbg !767
  %mul15 = mul nsw i32 %28, %29, !dbg !768
  %30 = load i32*, i32** %p2.addr, align 8, !dbg !769
  store i32 %mul15, i32* %30, align 4, !dbg !770
  %31 = load i32*, i32** %p2.addr, align 8, !dbg !771
  %32 = load i32, i32* %31, align 4, !dbg !772
  %add16 = add nsw i32 %32, 1, !dbg !773
  %33 = load i32*, i32** %p1.addr, align 8, !dbg !774
  store i32 %add16, i32* %33, align 4, !dbg !775
  %34 = load i32*, i32** %p2.addr, align 8, !dbg !776
  %35 = load i32, i32* %34, align 4, !dbg !777
  %36 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !778
  %nr17 = getelementptr inbounds %struct.DispList, %struct.DispList* %36, i32 0, i32 5, !dbg !779
  %37 = load i32, i32* %nr17, align 8, !dbg !779
  %add18 = add nsw i32 %35, %37, !dbg !780
  %38 = load i32*, i32** %p4.addr, align 8, !dbg !781
  store i32 %add18, i32* %38, align 4, !dbg !782
  %39 = load i32*, i32** %p1.addr, align 8, !dbg !783
  %40 = load i32, i32* %39, align 4, !dbg !784
  %41 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !785
  %nr19 = getelementptr inbounds %struct.DispList, %struct.DispList* %41, i32 0, i32 5, !dbg !786
  %42 = load i32, i32* %nr19, align 8, !dbg !786
  %add20 = add nsw i32 %40, %42, !dbg !787
  %43 = load i32*, i32** %p3.addr, align 8, !dbg !788
  store i32 %add20, i32* %43, align 4, !dbg !789
  %44 = load i32*, i32** %b.addr, align 8, !dbg !790
  store i32 1, i32* %44, align 4, !dbg !791
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then7
  %45 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !792
  %flag22 = getelementptr inbounds %struct.DispList, %struct.DispList* %45, i32 0, i32 3, !dbg !794
  %46 = load i16, i16* %flag22, align 2, !dbg !794
  %conv23 = sext i16 %46 to i32, !dbg !792
  %and24 = and i32 %conv23, 2, !dbg !795
  %tobool25 = icmp ne i32 %and24, 0, !dbg !795
  br i1 %tobool25, label %land.lhs.true26, label %if.end40, !dbg !796

land.lhs.true26:                                  ; preds = %if.end21
  %47 = load i32, i32* %a.addr, align 4, !dbg !797
  %48 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !798
  %parts27 = getelementptr inbounds %struct.DispList, %struct.DispList* %48, i32 0, i32 4, !dbg !799
  %49 = load i32, i32* %parts27, align 4, !dbg !799
  %sub28 = sub nsw i32 %49, 1, !dbg !800
  %cmp29 = icmp eq i32 %47, %sub28, !dbg !801
  br i1 %cmp29, label %if.then31, label %if.end40, !dbg !802

if.then31:                                        ; preds = %land.lhs.true26
  %50 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !803
  %nr32 = getelementptr inbounds %struct.DispList, %struct.DispList* %50, i32 0, i32 5, !dbg !805
  %51 = load i32, i32* %nr32, align 8, !dbg !805
  %52 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !806
  %parts33 = getelementptr inbounds %struct.DispList, %struct.DispList* %52, i32 0, i32 4, !dbg !807
  %53 = load i32, i32* %parts33, align 4, !dbg !807
  %mul34 = mul nsw i32 %51, %53, !dbg !808
  %54 = load i32*, i32** %p3.addr, align 8, !dbg !809
  %55 = load i32, i32* %54, align 4, !dbg !810
  %sub35 = sub nsw i32 %55, %mul34, !dbg !810
  store i32 %sub35, i32* %54, align 4, !dbg !810
  %56 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !811
  %nr36 = getelementptr inbounds %struct.DispList, %struct.DispList* %56, i32 0, i32 5, !dbg !812
  %57 = load i32, i32* %nr36, align 8, !dbg !812
  %58 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !813
  %parts37 = getelementptr inbounds %struct.DispList, %struct.DispList* %58, i32 0, i32 4, !dbg !814
  %59 = load i32, i32* %parts37, align 4, !dbg !814
  %mul38 = mul nsw i32 %57, %59, !dbg !815
  %60 = load i32*, i32** %p4.addr, align 8, !dbg !816
  %61 = load i32, i32* %60, align 4, !dbg !817
  %sub39 = sub nsw i32 %61, %mul38, !dbg !817
  store i32 %sub39, i32* %60, align 4, !dbg !817
  br label %if.end40, !dbg !818

if.end40:                                         ; preds = %if.then31, %land.lhs.true26, %if.end21
  store i8 1, i8* %retval, align 1, !dbg !819
  br label %return, !dbg !819

return:                                           ; preds = %if.end40, %if.then
  %62 = load i8, i8* %retval, align 1, !dbg !820
  ret i8 %62, !dbg !820
}

declare dso_local float @normal_quad_v3(float*, float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !821 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !827, metadata !DIExpression()), !dbg !828
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !829, metadata !DIExpression()), !dbg !830
  %0 = load float*, float** %a.addr, align 8, !dbg !831
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !831
  %1 = load float, float* %arrayidx, align 4, !dbg !831
  %2 = load float*, float** %r.addr, align 8, !dbg !832
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !832
  %3 = load float, float* %arrayidx1, align 4, !dbg !833
  %add = fadd float %3, %1, !dbg !833
  store float %add, float* %arrayidx1, align 4, !dbg !833
  %4 = load float*, float** %a.addr, align 8, !dbg !834
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !834
  %5 = load float, float* %arrayidx2, align 4, !dbg !834
  %6 = load float*, float** %r.addr, align 8, !dbg !835
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !835
  %7 = load float, float* %arrayidx3, align 4, !dbg !836
  %add4 = fadd float %7, %5, !dbg !836
  store float %add4, float* %arrayidx3, align 4, !dbg !836
  %8 = load float*, float** %a.addr, align 8, !dbg !837
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !837
  %9 = load float, float* %arrayidx5, align 4, !dbg !837
  %10 = load float*, float** %r.addr, align 8, !dbg !838
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !838
  %11 = load float, float* %arrayidx6, align 4, !dbg !839
  %add7 = fadd float %11, %9, !dbg !839
  store float %add7, float* %arrayidx6, align 4, !dbg !839
  ret void, !dbg !840
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !841 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !844, metadata !DIExpression()), !dbg !845
  %0 = load float*, float** %n.addr, align 8, !dbg !846
  %1 = load float*, float** %n.addr, align 8, !dbg !847
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !848
  ret float %call, !dbg !849
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_displist_count(%struct.ListBase* %lb, i32* %totvert, i32* %totface, i32* %tottri) #0 !dbg !850 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %totvert.addr = alloca i32*, align 8
  %totface.addr = alloca i32*, align 8
  %tottri.addr = alloca i32*, align 8
  %dl = alloca %struct.DispList*, align 8
  %vert_tot = alloca i32, align 4
  %face_tot = alloca i32, align 4
  %tri_tot = alloca i32, align 4
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !853, metadata !DIExpression()), !dbg !854
  store i32* %totvert, i32** %totvert.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %totvert.addr, metadata !855, metadata !DIExpression()), !dbg !856
  store i32* %totface, i32** %totface.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %totface.addr, metadata !857, metadata !DIExpression()), !dbg !858
  store i32* %tottri, i32** %tottri.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %tottri.addr, metadata !859, metadata !DIExpression()), !dbg !860
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !861, metadata !DIExpression()), !dbg !862
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !863
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !865
  %1 = load i8*, i8** %first, align 8, !dbg !865
  %2 = bitcast i8* %1 to %struct.DispList*, !dbg !863
  store %struct.DispList* %2, %struct.DispList** %dl, align 8, !dbg !866
  br label %for.cond, !dbg !867

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !868
  %tobool = icmp ne %struct.DispList* %3, null, !dbg !870
  br i1 %tobool, label %for.body, label %for.end, !dbg !870

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %vert_tot, metadata !871, metadata !DIExpression()), !dbg !873
  store i32 0, i32* %vert_tot, align 4, !dbg !873
  call void @llvm.dbg.declare(metadata i32* %face_tot, metadata !874, metadata !DIExpression()), !dbg !875
  store i32 0, i32* %face_tot, align 4, !dbg !875
  call void @llvm.dbg.declare(metadata i32* %tri_tot, metadata !876, metadata !DIExpression()), !dbg !877
  store i32 0, i32* %tri_tot, align 4, !dbg !877
  %4 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !878
  %type = getelementptr inbounds %struct.DispList, %struct.DispList* %4, i32 0, i32 2, !dbg !879
  %5 = load i16, i16* %type, align 8, !dbg !879
  %conv = sext i16 %5 to i32, !dbg !878
  switch i32 %conv, label %sw.epilog [
    i32 2, label %sw.bb
    i32 4, label %sw.bb6
    i32 5, label %sw.bb9
    i32 0, label %sw.bb13
    i32 1, label %sw.bb13
  ], !dbg !880

sw.bb:                                            ; preds = %for.body
  %6 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !881
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %6, i32 0, i32 5, !dbg !884
  %7 = load i32, i32* %nr, align 8, !dbg !884
  %8 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !885
  %parts = getelementptr inbounds %struct.DispList, %struct.DispList* %8, i32 0, i32 4, !dbg !886
  %9 = load i32, i32* %parts, align 4, !dbg !886
  %mul = mul nsw i32 %7, %9, !dbg !887
  store i32 %mul, i32* %vert_tot, align 4, !dbg !888
  %10 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !889
  %nr1 = getelementptr inbounds %struct.DispList, %struct.DispList* %10, i32 0, i32 5, !dbg !890
  %11 = load i32, i32* %nr1, align 8, !dbg !890
  %sub = sub nsw i32 %11, 1, !dbg !891
  %12 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !892
  %parts2 = getelementptr inbounds %struct.DispList, %struct.DispList* %12, i32 0, i32 4, !dbg !893
  %13 = load i32, i32* %parts2, align 4, !dbg !893
  %sub3 = sub nsw i32 %13, 1, !dbg !894
  %mul4 = mul nsw i32 %sub, %sub3, !dbg !895
  store i32 %mul4, i32* %face_tot, align 4, !dbg !896
  %14 = load i32, i32* %face_tot, align 4, !dbg !897
  %mul5 = mul nsw i32 %14, 2, !dbg !898
  store i32 %mul5, i32* %tri_tot, align 4, !dbg !899
  br label %sw.epilog, !dbg !900

sw.bb6:                                           ; preds = %for.body
  %15 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !901
  %nr7 = getelementptr inbounds %struct.DispList, %struct.DispList* %15, i32 0, i32 5, !dbg !903
  %16 = load i32, i32* %nr7, align 8, !dbg !903
  store i32 %16, i32* %vert_tot, align 4, !dbg !904
  %17 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !905
  %parts8 = getelementptr inbounds %struct.DispList, %struct.DispList* %17, i32 0, i32 4, !dbg !906
  %18 = load i32, i32* %parts8, align 4, !dbg !906
  store i32 %18, i32* %face_tot, align 4, !dbg !907
  %19 = load i32, i32* %face_tot, align 4, !dbg !908
  store i32 %19, i32* %tri_tot, align 4, !dbg !909
  br label %sw.epilog, !dbg !910

sw.bb9:                                           ; preds = %for.body
  %20 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !911
  %nr10 = getelementptr inbounds %struct.DispList, %struct.DispList* %20, i32 0, i32 5, !dbg !913
  %21 = load i32, i32* %nr10, align 8, !dbg !913
  store i32 %21, i32* %vert_tot, align 4, !dbg !914
  %22 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !915
  %parts11 = getelementptr inbounds %struct.DispList, %struct.DispList* %22, i32 0, i32 4, !dbg !916
  %23 = load i32, i32* %parts11, align 4, !dbg !916
  store i32 %23, i32* %face_tot, align 4, !dbg !917
  %24 = load i32, i32* %face_tot, align 4, !dbg !918
  %mul12 = mul nsw i32 %24, 2, !dbg !919
  store i32 %mul12, i32* %tri_tot, align 4, !dbg !920
  br label %sw.epilog, !dbg !921

sw.bb13:                                          ; preds = %for.body, %for.body
  %25 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !922
  %nr14 = getelementptr inbounds %struct.DispList, %struct.DispList* %25, i32 0, i32 5, !dbg !924
  %26 = load i32, i32* %nr14, align 8, !dbg !924
  %27 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !925
  %parts15 = getelementptr inbounds %struct.DispList, %struct.DispList* %27, i32 0, i32 4, !dbg !926
  %28 = load i32, i32* %parts15, align 4, !dbg !926
  %mul16 = mul nsw i32 %26, %28, !dbg !927
  store i32 %mul16, i32* %vert_tot, align 4, !dbg !928
  br label %sw.epilog, !dbg !929

sw.epilog:                                        ; preds = %for.body, %sw.bb13, %sw.bb9, %sw.bb6, %sw.bb
  %29 = load i32, i32* %vert_tot, align 4, !dbg !930
  %30 = load i32*, i32** %totvert.addr, align 8, !dbg !931
  %31 = load i32, i32* %30, align 4, !dbg !932
  %add = add nsw i32 %31, %29, !dbg !932
  store i32 %add, i32* %30, align 4, !dbg !932
  %32 = load i32, i32* %face_tot, align 4, !dbg !933
  %33 = load i32*, i32** %totface.addr, align 8, !dbg !934
  %34 = load i32, i32* %33, align 4, !dbg !935
  %add17 = add nsw i32 %34, %32, !dbg !935
  store i32 %add17, i32* %33, align 4, !dbg !935
  %35 = load i32, i32* %tri_tot, align 4, !dbg !936
  %36 = load i32*, i32** %tottri.addr, align 8, !dbg !937
  %37 = load i32, i32* %36, align 4, !dbg !938
  %add18 = add nsw i32 %37, %35, !dbg !938
  store i32 %add18, i32* %36, align 4, !dbg !938
  br label %for.inc, !dbg !939

for.inc:                                          ; preds = %sw.epilog
  %38 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !940
  %next = getelementptr inbounds %struct.DispList, %struct.DispList* %38, i32 0, i32 0, !dbg !941
  %39 = load %struct.DispList*, %struct.DispList** %next, align 8, !dbg !941
  store %struct.DispList* %39, %struct.DispList** %dl, align 8, !dbg !942
  br label %for.cond, !dbg !943, !llvm.loop !944

for.end:                                          ; preds = %for.cond
  ret void, !dbg !946
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_displist_fill(%struct.ListBase* %dispbase, %struct.ListBase* %to, float* %normal_proj, i8 zeroext %flipnormal) #0 !dbg !947 {
entry:
  %dispbase.addr = alloca %struct.ListBase*, align 8
  %to.addr = alloca %struct.ListBase*, align 8
  %normal_proj.addr = alloca float*, align 8
  %flipnormal.addr = alloca i8, align 1
  %sf_ctx = alloca %struct.ScanFillContext, align 8
  %sf_vert = alloca %struct.ScanFillVert*, align 8
  %sf_vert_new = alloca %struct.ScanFillVert*, align 8
  %sf_vert_last = alloca %struct.ScanFillVert*, align 8
  %sf_tri = alloca %struct.ScanFillFace*, align 8
  %sf_arena = alloca %struct.MemArena*, align 8
  %dlnew = alloca %struct.DispList*, align 8
  %dl = alloca %struct.DispList*, align 8
  %f1 = alloca float*, align 8
  %colnr = alloca i32, align 4
  %charidx = alloca i32, align 4
  %cont = alloca i32, align 4
  %tot = alloca i32, align 4
  %a = alloca i32, align 4
  %index = alloca i32*, align 8
  %nextcol = alloca i32, align 4
  %totvert = alloca i32, align 4
  %scanfill_flag = alloca i32, align 4
  %sw_ap = alloca i32, align 4
  store %struct.ListBase* %dispbase, %struct.ListBase** %dispbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dispbase.addr, metadata !951, metadata !DIExpression()), !dbg !952
  store %struct.ListBase* %to, %struct.ListBase** %to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %to.addr, metadata !953, metadata !DIExpression()), !dbg !954
  store float* %normal_proj, float** %normal_proj.addr, align 8
  call void @llvm.dbg.declare(metadata float** %normal_proj.addr, metadata !955, metadata !DIExpression()), !dbg !956
  store i8 %flipnormal, i8* %flipnormal.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %flipnormal.addr, metadata !957, metadata !DIExpression()), !dbg !958
  call void @llvm.dbg.declare(metadata %struct.ScanFillContext* %sf_ctx, metadata !959, metadata !DIExpression()), !dbg !972
  call void @llvm.dbg.declare(metadata %struct.ScanFillVert** %sf_vert, metadata !973, metadata !DIExpression()), !dbg !998
  call void @llvm.dbg.declare(metadata %struct.ScanFillVert** %sf_vert_new, metadata !999, metadata !DIExpression()), !dbg !1000
  call void @llvm.dbg.declare(metadata %struct.ScanFillVert** %sf_vert_last, metadata !1001, metadata !DIExpression()), !dbg !1002
  call void @llvm.dbg.declare(metadata %struct.ScanFillFace** %sf_tri, metadata !1003, metadata !DIExpression()), !dbg !1014
  call void @llvm.dbg.declare(metadata %struct.MemArena** %sf_arena, metadata !1015, metadata !DIExpression()), !dbg !1018
  call void @llvm.dbg.declare(metadata %struct.DispList** %dlnew, metadata !1019, metadata !DIExpression()), !dbg !1020
  store %struct.DispList* null, %struct.DispList** %dlnew, align 8, !dbg !1020
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !1021, metadata !DIExpression()), !dbg !1022
  call void @llvm.dbg.declare(metadata float** %f1, metadata !1023, metadata !DIExpression()), !dbg !1024
  call void @llvm.dbg.declare(metadata i32* %colnr, metadata !1025, metadata !DIExpression()), !dbg !1026
  store i32 0, i32* %colnr, align 4, !dbg !1026
  call void @llvm.dbg.declare(metadata i32* %charidx, metadata !1027, metadata !DIExpression()), !dbg !1028
  store i32 0, i32* %charidx, align 4, !dbg !1028
  call void @llvm.dbg.declare(metadata i32* %cont, metadata !1029, metadata !DIExpression()), !dbg !1030
  store i32 1, i32* %cont, align 4, !dbg !1030
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !1031, metadata !DIExpression()), !dbg !1032
  call void @llvm.dbg.declare(metadata i32* %a, metadata !1033, metadata !DIExpression()), !dbg !1034
  call void @llvm.dbg.declare(metadata i32** %index, metadata !1035, metadata !DIExpression()), !dbg !1036
  call void @llvm.dbg.declare(metadata i32* %nextcol, metadata !1037, metadata !DIExpression()), !dbg !1038
  store i32 0, i32* %nextcol, align 4, !dbg !1038
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !1039, metadata !DIExpression()), !dbg !1040
  call void @llvm.dbg.declare(metadata i32* %scanfill_flag, metadata !1041, metadata !DIExpression()), !dbg !1043
  store i32 14, i32* %scanfill_flag, align 4, !dbg !1043
  %0 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !1044
  %cmp = icmp eq %struct.ListBase* %0, null, !dbg !1046
  br i1 %cmp, label %if.then, label %if.end, !dbg !1047

if.then:                                          ; preds = %entry
  br label %return, !dbg !1048

if.end:                                           ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !1049
  %call = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %1), !dbg !1051
  %tobool = icmp ne i8 %call, 0, !dbg !1051
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !1052

if.then1:                                         ; preds = %if.end
  br label %return, !dbg !1053

if.end2:                                          ; preds = %if.end
  %call3 = call %struct.MemArena* @BLI_memarena_new(i64 16376, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.BKE_displist_fill, i64 0, i64 0)), !dbg !1054
  store %struct.MemArena* %call3, %struct.MemArena** %sf_arena, align 8, !dbg !1055
  br label %while.cond, !dbg !1056

while.cond:                                       ; preds = %if.end111, %if.end2
  %2 = load i32, i32* %cont, align 4, !dbg !1057
  %tobool4 = icmp ne i32 %2, 0, !dbg !1056
  br i1 %tobool4, label %while.body, label %while.end112, !dbg !1056

while.body:                                       ; preds = %while.cond
  store i32 0, i32* %cont, align 4, !dbg !1058
  store i32 0, i32* %totvert, align 4, !dbg !1060
  store i32 0, i32* %nextcol, align 4, !dbg !1061
  %3 = load %struct.MemArena*, %struct.MemArena** %sf_arena, align 8, !dbg !1062
  call void @BLI_scanfill_begin_arena(%struct.ScanFillContext* %sf_ctx, %struct.MemArena* %3), !dbg !1063
  %4 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !1064
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %4, i32 0, i32 0, !dbg !1065
  %5 = load i8*, i8** %first, align 8, !dbg !1065
  %6 = bitcast i8* %5 to %struct.DispList*, !dbg !1064
  store %struct.DispList* %6, %struct.DispList** %dl, align 8, !dbg !1066
  br label %while.cond5, !dbg !1067

while.cond5:                                      ; preds = %if.end51, %while.body
  %7 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !1068
  %tobool6 = icmp ne %struct.DispList* %7, null, !dbg !1067
  br i1 %tobool6, label %while.body7, label %while.end52, !dbg !1067

while.body7:                                      ; preds = %while.cond5
  %8 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !1069
  %type = getelementptr inbounds %struct.DispList, %struct.DispList* %8, i32 0, i32 2, !dbg !1072
  %9 = load i16, i16* %type, align 8, !dbg !1072
  %conv = sext i16 %9 to i32, !dbg !1069
  %cmp8 = icmp eq i32 %conv, 0, !dbg !1073
  br i1 %cmp8, label %if.then10, label %if.end51, !dbg !1074

if.then10:                                        ; preds = %while.body7
  %10 = load i32, i32* %charidx, align 4, !dbg !1075
  %11 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !1078
  %charidx11 = getelementptr inbounds %struct.DispList, %struct.DispList* %11, i32 0, i32 11, !dbg !1079
  %12 = load i32, i32* %charidx11, align 8, !dbg !1079
  %cmp12 = icmp slt i32 %10, %12, !dbg !1080
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !1081

if.then14:                                        ; preds = %if.then10
  store i32 1, i32* %cont, align 4, !dbg !1082
  br label %if.end50, !dbg !1083

if.else:                                          ; preds = %if.then10
  %13 = load i32, i32* %charidx, align 4, !dbg !1084
  %14 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !1086
  %charidx15 = getelementptr inbounds %struct.DispList, %struct.DispList* %14, i32 0, i32 11, !dbg !1087
  %15 = load i32, i32* %charidx15, align 8, !dbg !1087
  %cmp16 = icmp eq i32 %13, %15, !dbg !1088
  br i1 %cmp16, label %if.then18, label %if.end49, !dbg !1089

if.then18:                                        ; preds = %if.else
  %16 = load i32, i32* %colnr, align 4, !dbg !1090
  %17 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !1093
  %col = getelementptr inbounds %struct.DispList, %struct.DispList* %17, i32 0, i32 6, !dbg !1094
  %18 = load i16, i16* %col, align 4, !dbg !1094
  %conv19 = sext i16 %18 to i32, !dbg !1093
  %cmp20 = icmp eq i32 %16, %conv19, !dbg !1095
  br i1 %cmp20, label %if.then22, label %if.else41, !dbg !1096

if.then22:                                        ; preds = %if.then18
  %poly_nr = getelementptr inbounds %struct.ScanFillContext, %struct.ScanFillContext* %sf_ctx, i32 0, i32 3, !dbg !1097
  %19 = load i16, i16* %poly_nr, align 8, !dbg !1099
  %inc = add i16 %19, 1, !dbg !1099
  store i16 %inc, i16* %poly_nr, align 8, !dbg !1099
  %20 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !1100
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %20, i32 0, i32 8, !dbg !1101
  %21 = load float*, float** %verts, align 8, !dbg !1101
  store float* %21, float** %f1, align 8, !dbg !1102
  %22 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !1103
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %22, i32 0, i32 5, !dbg !1104
  %23 = load i32, i32* %nr, align 8, !dbg !1104
  store i32 %23, i32* %a, align 4, !dbg !1105
  store %struct.ScanFillVert* null, %struct.ScanFillVert** %sf_vert_new, align 8, !dbg !1106
  store %struct.ScanFillVert* null, %struct.ScanFillVert** %sf_vert, align 8, !dbg !1107
  br label %while.cond23, !dbg !1108

while.cond23:                                     ; preds = %if.end33, %if.then22
  %24 = load i32, i32* %a, align 4, !dbg !1109
  %dec = add nsw i32 %24, -1, !dbg !1109
  store i32 %dec, i32* %a, align 4, !dbg !1109
  %tobool24 = icmp ne i32 %24, 0, !dbg !1108
  br i1 %tobool24, label %while.body25, label %while.end, !dbg !1108

while.body25:                                     ; preds = %while.cond23
  %25 = load %struct.ScanFillVert*, %struct.ScanFillVert** %sf_vert, align 8, !dbg !1110
  store %struct.ScanFillVert* %25, %struct.ScanFillVert** %sf_vert_last, align 8, !dbg !1112
  %26 = load float*, float** %f1, align 8, !dbg !1113
  %call26 = call %struct.ScanFillVert* @BLI_scanfill_vert_add(%struct.ScanFillContext* %sf_ctx, float* %26), !dbg !1114
  store %struct.ScanFillVert* %call26, %struct.ScanFillVert** %sf_vert, align 8, !dbg !1115
  %27 = load i32, i32* %totvert, align 4, !dbg !1116
  %inc27 = add nsw i32 %27, 1, !dbg !1116
  store i32 %inc27, i32* %totvert, align 4, !dbg !1116
  %28 = load %struct.ScanFillVert*, %struct.ScanFillVert** %sf_vert_last, align 8, !dbg !1117
  %cmp28 = icmp eq %struct.ScanFillVert* %28, null, !dbg !1119
  br i1 %cmp28, label %if.then30, label %if.else31, !dbg !1120

if.then30:                                        ; preds = %while.body25
  %29 = load %struct.ScanFillVert*, %struct.ScanFillVert** %sf_vert, align 8, !dbg !1121
  store %struct.ScanFillVert* %29, %struct.ScanFillVert** %sf_vert_new, align 8, !dbg !1122
  br label %if.end33, !dbg !1123

if.else31:                                        ; preds = %while.body25
  %30 = load %struct.ScanFillVert*, %struct.ScanFillVert** %sf_vert_last, align 8, !dbg !1124
  %31 = load %struct.ScanFillVert*, %struct.ScanFillVert** %sf_vert, align 8, !dbg !1126
  %call32 = call %struct.ScanFillEdge* @BLI_scanfill_edge_add(%struct.ScanFillContext* %sf_ctx, %struct.ScanFillVert* %30, %struct.ScanFillVert* %31), !dbg !1127
  br label %if.end33

if.end33:                                         ; preds = %if.else31, %if.then30
  %32 = load float*, float** %f1, align 8, !dbg !1128
  %add.ptr = getelementptr inbounds float, float* %32, i64 3, !dbg !1128
  store float* %add.ptr, float** %f1, align 8, !dbg !1128
  br label %while.cond23, !dbg !1108, !llvm.loop !1129

while.end:                                        ; preds = %while.cond23
  %33 = load %struct.ScanFillVert*, %struct.ScanFillVert** %sf_vert, align 8, !dbg !1131
  %cmp34 = icmp ne %struct.ScanFillVert* %33, null, !dbg !1133
  br i1 %cmp34, label %land.lhs.true, label %if.end40, !dbg !1134

land.lhs.true:                                    ; preds = %while.end
  %34 = load %struct.ScanFillVert*, %struct.ScanFillVert** %sf_vert_new, align 8, !dbg !1135
  %cmp36 = icmp ne %struct.ScanFillVert* %34, null, !dbg !1136
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !1137

if.then38:                                        ; preds = %land.lhs.true
  %35 = load %struct.ScanFillVert*, %struct.ScanFillVert** %sf_vert, align 8, !dbg !1138
  %36 = load %struct.ScanFillVert*, %struct.ScanFillVert** %sf_vert_new, align 8, !dbg !1140
  %call39 = call %struct.ScanFillEdge* @BLI_scanfill_edge_add(%struct.ScanFillContext* %sf_ctx, %struct.ScanFillVert* %35, %struct.ScanFillVert* %36), !dbg !1141
  br label %if.end40, !dbg !1142

if.end40:                                         ; preds = %if.then38, %land.lhs.true, %while.end
  br label %if.end48, !dbg !1143

if.else41:                                        ; preds = %if.then18
  %37 = load i32, i32* %colnr, align 4, !dbg !1144
  %38 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !1146
  %col42 = getelementptr inbounds %struct.DispList, %struct.DispList* %38, i32 0, i32 6, !dbg !1147
  %39 = load i16, i16* %col42, align 4, !dbg !1147
  %conv43 = sext i16 %39 to i32, !dbg !1146
  %cmp44 = icmp slt i32 %37, %conv43, !dbg !1148
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !1149

if.then46:                                        ; preds = %if.else41
  store i32 1, i32* %cont, align 4, !dbg !1150
  store i32 1, i32* %nextcol, align 4, !dbg !1152
  br label %if.end47, !dbg !1153

if.end47:                                         ; preds = %if.then46, %if.else41
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.end40
  br label %if.end49, !dbg !1154

if.end49:                                         ; preds = %if.end48, %if.else
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then14
  br label %if.end51, !dbg !1155

if.end51:                                         ; preds = %if.end50, %while.body7
  %40 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !1156
  %next = getelementptr inbounds %struct.DispList, %struct.DispList* %40, i32 0, i32 0, !dbg !1157
  %41 = load %struct.DispList*, %struct.DispList** %next, align 8, !dbg !1157
  store %struct.DispList* %41, %struct.DispList** %dl, align 8, !dbg !1158
  br label %while.cond5, !dbg !1067, !llvm.loop !1159

while.end52:                                      ; preds = %while.cond5
  %42 = load i32, i32* %totvert, align 4, !dbg !1161
  %tobool53 = icmp ne i32 %42, 0, !dbg !1161
  br i1 %tobool53, label %land.lhs.true54, label %if.end105, !dbg !1163

land.lhs.true54:                                  ; preds = %while.end52
  %43 = load float*, float** %normal_proj.addr, align 8, !dbg !1164
  %call55 = call i32 @BLI_scanfill_calc_ex(%struct.ScanFillContext* %sf_ctx, i32 14, float* %43), !dbg !1165
  store i32 %call55, i32* %tot, align 4, !dbg !1166
  %tobool56 = icmp ne i32 %call55, 0, !dbg !1166
  br i1 %tobool56, label %if.then57, label %if.end105, !dbg !1167

if.then57:                                        ; preds = %land.lhs.true54
  %44 = load i32, i32* %tot, align 4, !dbg !1168
  %tobool58 = icmp ne i32 %44, 0, !dbg !1168
  br i1 %tobool58, label %if.then59, label %if.end104, !dbg !1171

if.then59:                                        ; preds = %if.then57
  %45 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !1172
  %call60 = call i8* %45(i64 72, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0)), !dbg !1172
  %46 = bitcast i8* %call60 to %struct.DispList*, !dbg !1172
  store %struct.DispList* %46, %struct.DispList** %dlnew, align 8, !dbg !1174
  %47 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !1175
  %type61 = getelementptr inbounds %struct.DispList, %struct.DispList* %47, i32 0, i32 2, !dbg !1176
  store i16 4, i16* %type61, align 8, !dbg !1177
  %48 = load i32, i32* %colnr, align 4, !dbg !1178
  %conv62 = trunc i32 %48 to i16, !dbg !1178
  %49 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !1179
  %col63 = getelementptr inbounds %struct.DispList, %struct.DispList* %49, i32 0, i32 6, !dbg !1180
  store i16 %conv62, i16* %col63, align 4, !dbg !1181
  %50 = load i32, i32* %totvert, align 4, !dbg !1182
  %51 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !1183
  %nr64 = getelementptr inbounds %struct.DispList, %struct.DispList* %51, i32 0, i32 5, !dbg !1184
  store i32 %50, i32* %nr64, align 8, !dbg !1185
  %52 = load i32, i32* %tot, align 4, !dbg !1186
  %53 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !1187
  %parts = getelementptr inbounds %struct.DispList, %struct.DispList* %53, i32 0, i32 4, !dbg !1188
  store i32 %52, i32* %parts, align 4, !dbg !1189
  %54 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !1190
  %55 = load i32, i32* %tot, align 4, !dbg !1191
  %mul = mul nsw i32 %55, 3, !dbg !1192
  %conv65 = sext i32 %mul to i64, !dbg !1191
  %mul66 = mul i64 %conv65, 4, !dbg !1193
  %call67 = call i8* %54(i64 %mul66, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0)), !dbg !1190
  %56 = bitcast i8* %call67 to i32*, !dbg !1190
  %57 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !1194
  %index68 = getelementptr inbounds %struct.DispList, %struct.DispList* %57, i32 0, i32 10, !dbg !1195
  store i32* %56, i32** %index68, align 8, !dbg !1196
  %58 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !1197
  %59 = load i32, i32* %totvert, align 4, !dbg !1198
  %mul69 = mul nsw i32 %59, 3, !dbg !1199
  %conv70 = sext i32 %mul69 to i64, !dbg !1198
  %mul71 = mul i64 %conv70, 4, !dbg !1200
  %call72 = call i8* %58(i64 %mul71, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)), !dbg !1197
  %60 = bitcast i8* %call72 to float*, !dbg !1197
  %61 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !1201
  %verts73 = getelementptr inbounds %struct.DispList, %struct.DispList* %61, i32 0, i32 8, !dbg !1202
  store float* %60, float** %verts73, align 8, !dbg !1203
  %62 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !1204
  %verts74 = getelementptr inbounds %struct.DispList, %struct.DispList* %62, i32 0, i32 8, !dbg !1205
  %63 = load float*, float** %verts74, align 8, !dbg !1205
  store float* %63, float** %f1, align 8, !dbg !1206
  store i32 0, i32* %totvert, align 4, !dbg !1207
  %fillvertbase = getelementptr inbounds %struct.ScanFillContext, %struct.ScanFillContext* %sf_ctx, i32 0, i32 0, !dbg !1208
  %first75 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %fillvertbase, i32 0, i32 0, !dbg !1210
  %64 = load i8*, i8** %first75, align 8, !dbg !1210
  %65 = bitcast i8* %64 to %struct.ScanFillVert*, !dbg !1211
  store %struct.ScanFillVert* %65, %struct.ScanFillVert** %sf_vert, align 8, !dbg !1212
  br label %for.cond, !dbg !1213

for.cond:                                         ; preds = %for.inc, %if.then59
  %66 = load %struct.ScanFillVert*, %struct.ScanFillVert** %sf_vert, align 8, !dbg !1214
  %tobool76 = icmp ne %struct.ScanFillVert* %66, null, !dbg !1216
  br i1 %tobool76, label %for.body, label %for.end, !dbg !1216

for.body:                                         ; preds = %for.cond
  %67 = load float*, float** %f1, align 8, !dbg !1217
  %68 = load %struct.ScanFillVert*, %struct.ScanFillVert** %sf_vert, align 8, !dbg !1219
  %co = getelementptr inbounds %struct.ScanFillVert, %struct.ScanFillVert* %68, i32 0, i32 3, !dbg !1220
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !1219
  call void @copy_v3_v3(float* %67, float* %arraydecay), !dbg !1221
  %69 = load float*, float** %f1, align 8, !dbg !1222
  %add.ptr77 = getelementptr inbounds float, float* %69, i64 3, !dbg !1222
  store float* %add.ptr77, float** %f1, align 8, !dbg !1222
  %70 = load i32, i32* %totvert, align 4, !dbg !1223
  %71 = load %struct.ScanFillVert*, %struct.ScanFillVert** %sf_vert, align 8, !dbg !1224
  %tmp = getelementptr inbounds %struct.ScanFillVert, %struct.ScanFillVert* %71, i32 0, i32 2, !dbg !1225
  %i = bitcast %union.anon* %tmp to i32*, !dbg !1226
  store i32 %70, i32* %i, align 8, !dbg !1227
  %72 = load i32, i32* %totvert, align 4, !dbg !1228
  %inc78 = add nsw i32 %72, 1, !dbg !1228
  store i32 %inc78, i32* %totvert, align 4, !dbg !1228
  br label %for.inc, !dbg !1229

for.inc:                                          ; preds = %for.body
  %73 = load %struct.ScanFillVert*, %struct.ScanFillVert** %sf_vert, align 8, !dbg !1230
  %next79 = getelementptr inbounds %struct.ScanFillVert, %struct.ScanFillVert* %73, i32 0, i32 0, !dbg !1231
  %74 = load %struct.ScanFillVert*, %struct.ScanFillVert** %next79, align 8, !dbg !1231
  store %struct.ScanFillVert* %74, %struct.ScanFillVert** %sf_vert, align 8, !dbg !1232
  br label %for.cond, !dbg !1233, !llvm.loop !1234

for.end:                                          ; preds = %for.cond
  %75 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !1236
  %index80 = getelementptr inbounds %struct.DispList, %struct.DispList* %75, i32 0, i32 10, !dbg !1237
  %76 = load i32*, i32** %index80, align 8, !dbg !1237
  store i32* %76, i32** %index, align 8, !dbg !1238
  %fillfacebase = getelementptr inbounds %struct.ScanFillContext, %struct.ScanFillContext* %sf_ctx, i32 0, i32 2, !dbg !1239
  %first81 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %fillfacebase, i32 0, i32 0, !dbg !1241
  %77 = load i8*, i8** %first81, align 8, !dbg !1241
  %78 = bitcast i8* %77 to %struct.ScanFillFace*, !dbg !1242
  store %struct.ScanFillFace* %78, %struct.ScanFillFace** %sf_tri, align 8, !dbg !1243
  br label %for.cond82, !dbg !1244

for.cond82:                                       ; preds = %for.inc101, %for.end
  %79 = load %struct.ScanFillFace*, %struct.ScanFillFace** %sf_tri, align 8, !dbg !1245
  %tobool83 = icmp ne %struct.ScanFillFace* %79, null, !dbg !1247
  br i1 %tobool83, label %for.body84, label %for.end103, !dbg !1247

for.body84:                                       ; preds = %for.cond82
  %80 = load %struct.ScanFillFace*, %struct.ScanFillFace** %sf_tri, align 8, !dbg !1248
  %v1 = getelementptr inbounds %struct.ScanFillFace, %struct.ScanFillFace* %80, i32 0, i32 2, !dbg !1250
  %81 = load %struct.ScanFillVert*, %struct.ScanFillVert** %v1, align 8, !dbg !1250
  %tmp85 = getelementptr inbounds %struct.ScanFillVert, %struct.ScanFillVert* %81, i32 0, i32 2, !dbg !1251
  %i86 = bitcast %union.anon* %tmp85 to i32*, !dbg !1252
  %82 = load i32, i32* %i86, align 8, !dbg !1252
  %83 = load i32*, i32** %index, align 8, !dbg !1253
  %arrayidx = getelementptr inbounds i32, i32* %83, i64 0, !dbg !1253
  store i32 %82, i32* %arrayidx, align 4, !dbg !1254
  %84 = load %struct.ScanFillFace*, %struct.ScanFillFace** %sf_tri, align 8, !dbg !1255
  %v2 = getelementptr inbounds %struct.ScanFillFace, %struct.ScanFillFace* %84, i32 0, i32 3, !dbg !1256
  %85 = load %struct.ScanFillVert*, %struct.ScanFillVert** %v2, align 8, !dbg !1256
  %tmp87 = getelementptr inbounds %struct.ScanFillVert, %struct.ScanFillVert* %85, i32 0, i32 2, !dbg !1257
  %i88 = bitcast %union.anon* %tmp87 to i32*, !dbg !1258
  %86 = load i32, i32* %i88, align 8, !dbg !1258
  %87 = load i32*, i32** %index, align 8, !dbg !1259
  %arrayidx89 = getelementptr inbounds i32, i32* %87, i64 1, !dbg !1259
  store i32 %86, i32* %arrayidx89, align 4, !dbg !1260
  %88 = load %struct.ScanFillFace*, %struct.ScanFillFace** %sf_tri, align 8, !dbg !1261
  %v3 = getelementptr inbounds %struct.ScanFillFace, %struct.ScanFillFace* %88, i32 0, i32 4, !dbg !1262
  %89 = load %struct.ScanFillVert*, %struct.ScanFillVert** %v3, align 8, !dbg !1262
  %tmp90 = getelementptr inbounds %struct.ScanFillVert, %struct.ScanFillVert* %89, i32 0, i32 2, !dbg !1263
  %i91 = bitcast %union.anon* %tmp90 to i32*, !dbg !1264
  %90 = load i32, i32* %i91, align 8, !dbg !1264
  %91 = load i32*, i32** %index, align 8, !dbg !1265
  %arrayidx92 = getelementptr inbounds i32, i32* %91, i64 2, !dbg !1265
  store i32 %90, i32* %arrayidx92, align 4, !dbg !1266
  %92 = load i8, i8* %flipnormal.addr, align 1, !dbg !1267
  %tobool93 = icmp ne i8 %92, 0, !dbg !1267
  br i1 %tobool93, label %if.then94, label %if.end99, !dbg !1269

if.then94:                                        ; preds = %for.body84
  call void @llvm.dbg.declare(metadata i32* %sw_ap, metadata !1270, metadata !DIExpression()), !dbg !1272
  %93 = load i32*, i32** %index, align 8, !dbg !1272
  %arrayidx95 = getelementptr inbounds i32, i32* %93, i64 0, !dbg !1272
  %94 = load i32, i32* %arrayidx95, align 4, !dbg !1272
  store i32 %94, i32* %sw_ap, align 4, !dbg !1272
  %95 = load i32*, i32** %index, align 8, !dbg !1272
  %arrayidx96 = getelementptr inbounds i32, i32* %95, i64 2, !dbg !1272
  %96 = load i32, i32* %arrayidx96, align 4, !dbg !1272
  %97 = load i32*, i32** %index, align 8, !dbg !1272
  %arrayidx97 = getelementptr inbounds i32, i32* %97, i64 0, !dbg !1272
  store i32 %96, i32* %arrayidx97, align 4, !dbg !1272
  %98 = load i32, i32* %sw_ap, align 4, !dbg !1272
  %99 = load i32*, i32** %index, align 8, !dbg !1272
  %arrayidx98 = getelementptr inbounds i32, i32* %99, i64 2, !dbg !1272
  store i32 %98, i32* %arrayidx98, align 4, !dbg !1272
  br label %if.end99, !dbg !1272

if.end99:                                         ; preds = %if.then94, %for.body84
  %100 = load i32*, i32** %index, align 8, !dbg !1273
  %add.ptr100 = getelementptr inbounds i32, i32* %100, i64 3, !dbg !1273
  store i32* %add.ptr100, i32** %index, align 8, !dbg !1273
  br label %for.inc101, !dbg !1274

for.inc101:                                       ; preds = %if.end99
  %101 = load %struct.ScanFillFace*, %struct.ScanFillFace** %sf_tri, align 8, !dbg !1275
  %next102 = getelementptr inbounds %struct.ScanFillFace, %struct.ScanFillFace* %101, i32 0, i32 0, !dbg !1276
  %102 = load %struct.ScanFillFace*, %struct.ScanFillFace** %next102, align 8, !dbg !1276
  store %struct.ScanFillFace* %102, %struct.ScanFillFace** %sf_tri, align 8, !dbg !1277
  br label %for.cond82, !dbg !1278, !llvm.loop !1279

for.end103:                                       ; preds = %for.cond82
  br label %if.end104, !dbg !1281

if.end104:                                        ; preds = %for.end103, %if.then57
  %103 = load %struct.ListBase*, %struct.ListBase** %to.addr, align 8, !dbg !1282
  %104 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !1283
  %105 = bitcast %struct.DispList* %104 to i8*, !dbg !1283
  call void @BLI_addhead(%struct.ListBase* %103, i8* %105), !dbg !1284
  br label %if.end105, !dbg !1285

if.end105:                                        ; preds = %if.end104, %land.lhs.true54, %while.end52
  %106 = load %struct.MemArena*, %struct.MemArena** %sf_arena, align 8, !dbg !1286
  call void @BLI_scanfill_end_arena(%struct.ScanFillContext* %sf_ctx, %struct.MemArena* %106), !dbg !1287
  %107 = load i32, i32* %nextcol, align 4, !dbg !1288
  %tobool106 = icmp ne i32 %107, 0, !dbg !1288
  br i1 %tobool106, label %if.then107, label %if.else109, !dbg !1290

if.then107:                                       ; preds = %if.end105
  %108 = load i32, i32* %colnr, align 4, !dbg !1291
  %inc108 = add nsw i32 %108, 1, !dbg !1291
  store i32 %inc108, i32* %colnr, align 4, !dbg !1291
  br label %if.end111, !dbg !1293

if.else109:                                       ; preds = %if.end105
  %109 = load i32, i32* %charidx, align 4, !dbg !1294
  %inc110 = add nsw i32 %109, 1, !dbg !1294
  store i32 %inc110, i32* %charidx, align 4, !dbg !1294
  store i32 0, i32* %colnr, align 4, !dbg !1296
  br label %if.end111

if.end111:                                        ; preds = %if.else109, %if.then107
  br label %while.cond, !dbg !1056, !llvm.loop !1297

while.end112:                                     ; preds = %while.cond
  %110 = load %struct.MemArena*, %struct.MemArena** %sf_arena, align 8, !dbg !1299
  call void @BLI_memarena_free(%struct.MemArena* %110), !dbg !1300
  br label %return, !dbg !1301

return:                                           ; preds = %while.end112, %if.then1, %if.then
  ret void, !dbg !1301
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %lb) #0 !dbg !1302 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !1308, metadata !DIExpression()), !dbg !1309
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !1310
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !1311
  %1 = load i8*, i8** %first, align 8, !dbg !1311
  %cmp = icmp eq i8* %1, null, !dbg !1312
  %conv = zext i1 %cmp to i32, !dbg !1312
  %conv1 = trunc i32 %conv to i8, !dbg !1313
  ret i8 %conv1, !dbg !1314
}

declare dso_local %struct.MemArena* @BLI_memarena_new(i64, i8*) #2

declare dso_local void @BLI_scanfill_begin_arena(%struct.ScanFillContext*, %struct.MemArena*) #2

declare dso_local %struct.ScanFillVert* @BLI_scanfill_vert_add(%struct.ScanFillContext*, float*) #2

declare dso_local %struct.ScanFillEdge* @BLI_scanfill_edge_add(%struct.ScanFillContext*, %struct.ScanFillVert*, %struct.ScanFillVert*) #2

declare dso_local i32 @BLI_scanfill_calc_ex(%struct.ScanFillContext*, i32, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !1315 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !1316, metadata !DIExpression()), !dbg !1317
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !1318, metadata !DIExpression()), !dbg !1319
  %0 = load float*, float** %a.addr, align 8, !dbg !1320
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !1320
  %1 = load float, float* %arrayidx, align 4, !dbg !1320
  %2 = load float*, float** %r.addr, align 8, !dbg !1321
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !1321
  store float %1, float* %arrayidx1, align 4, !dbg !1322
  %3 = load float*, float** %a.addr, align 8, !dbg !1323
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !1323
  %4 = load float, float* %arrayidx2, align 4, !dbg !1323
  %5 = load float*, float** %r.addr, align 8, !dbg !1324
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !1324
  store float %4, float* %arrayidx3, align 4, !dbg !1325
  %6 = load float*, float** %a.addr, align 8, !dbg !1326
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !1326
  %7 = load float, float* %arrayidx4, align 4, !dbg !1326
  %8 = load float*, float** %r.addr, align 8, !dbg !1327
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !1327
  store float %7, float* %arrayidx5, align 4, !dbg !1328
  ret void, !dbg !1329
}

declare dso_local void @BLI_addhead(%struct.ListBase*, i8*) #2

declare dso_local void @BLI_scanfill_end_arena(%struct.ScanFillContext*, %struct.MemArena*) #2

declare dso_local void @BLI_memarena_free(%struct.MemArena*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local float @BKE_displist_calc_taper(%struct.Scene* %scene, %struct.Object* %taperobj, i32 %cur, i32 %tot) #0 !dbg !1330 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %taperobj.addr = alloca %struct.Object*, align 8
  %cur.addr = alloca i32, align 4
  %tot.addr = alloca i32, align 4
  %fac = alloca float, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !2873, metadata !DIExpression()), !dbg !2874
  store %struct.Object* %taperobj, %struct.Object** %taperobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %taperobj.addr, metadata !2875, metadata !DIExpression()), !dbg !2876
  store i32 %cur, i32* %cur.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cur.addr, metadata !2877, metadata !DIExpression()), !dbg !2878
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !2879, metadata !DIExpression()), !dbg !2880
  call void @llvm.dbg.declare(metadata float* %fac, metadata !2881, metadata !DIExpression()), !dbg !2882
  %0 = load i32, i32* %cur.addr, align 4, !dbg !2883
  %conv = sitofp i32 %0 to float, !dbg !2884
  %1 = load i32, i32* %tot.addr, align 4, !dbg !2885
  %sub = sub nsw i32 %1, 1, !dbg !2886
  %conv1 = sitofp i32 %sub to float, !dbg !2887
  %div = fdiv float %conv, %conv1, !dbg !2888
  store float %div, float* %fac, align 4, !dbg !2882
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2889
  %3 = load %struct.Object*, %struct.Object** %taperobj.addr, align 8, !dbg !2890
  %4 = load float, float* %fac, align 4, !dbg !2891
  %call = call float @displist_calc_taper(%struct.Scene* %2, %struct.Object* %3, float %4), !dbg !2892
  ret float %call, !dbg !2893
}

; Function Attrs: noinline nounwind uwtable
define internal float @displist_calc_taper(%struct.Scene* %scene, %struct.Object* %taperobj, float %fac) #0 !dbg !2894 {
entry:
  %retval = alloca float, align 4
  %scene.addr = alloca %struct.Scene*, align 8
  %taperobj.addr = alloca %struct.Object*, align 8
  %fac.addr = alloca float, align 4
  %dl = alloca %struct.DispList*, align 8
  %minx = alloca float, align 4
  %dx = alloca float, align 4
  %fp = alloca float*, align 8
  %a = alloca i32, align 4
  %fac1 = alloca float, align 4
  %fac2 = alloca float, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !2897, metadata !DIExpression()), !dbg !2898
  store %struct.Object* %taperobj, %struct.Object** %taperobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %taperobj.addr, metadata !2899, metadata !DIExpression()), !dbg !2900
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !2901, metadata !DIExpression()), !dbg !2902
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !2903, metadata !DIExpression()), !dbg !2904
  %0 = load %struct.Object*, %struct.Object** %taperobj.addr, align 8, !dbg !2905
  %cmp = icmp eq %struct.Object* %0, null, !dbg !2907
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2908

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %taperobj.addr, align 8, !dbg !2909
  %type = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 3, !dbg !2910
  %2 = load i16, i16* %type, align 8, !dbg !2910
  %conv = sext i16 %2 to i32, !dbg !2909
  %cmp1 = icmp ne i32 %conv, 2, !dbg !2911
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2912

if.then:                                          ; preds = %lor.lhs.false, %entry
  store float 1.000000e+00, float* %retval, align 4, !dbg !2913
  br label %return, !dbg !2913

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.Object*, %struct.Object** %taperobj.addr, align 8, !dbg !2914
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 118, !dbg !2915
  %4 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !2915
  %tobool = icmp ne %struct.CurveCache* %4, null, !dbg !2914
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2914

cond.true:                                        ; preds = %if.end
  %5 = load %struct.Object*, %struct.Object** %taperobj.addr, align 8, !dbg !2916
  %curve_cache3 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 118, !dbg !2917
  %6 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache3, align 8, !dbg !2917
  %disp = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %6, i32 0, i32 0, !dbg !2918
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %disp, i32 0, i32 0, !dbg !2919
  %7 = load i8*, i8** %first, align 8, !dbg !2919
  br label %cond.end, !dbg !2914

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !2914

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %7, %cond.true ], [ null, %cond.false ], !dbg !2914
  %8 = bitcast i8* %cond to %struct.DispList*, !dbg !2914
  store %struct.DispList* %8, %struct.DispList** %dl, align 8, !dbg !2920
  %9 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !2921
  %cmp4 = icmp eq %struct.DispList* %9, null, !dbg !2923
  br i1 %cmp4, label %if.then6, label %if.end10, !dbg !2924

if.then6:                                         ; preds = %cond.end
  %10 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2925
  %11 = load %struct.Object*, %struct.Object** %taperobj.addr, align 8, !dbg !2927
  call void @BKE_displist_make_curveTypes(%struct.Scene* %10, %struct.Object* %11, i8 zeroext 0), !dbg !2928
  %12 = load %struct.Object*, %struct.Object** %taperobj.addr, align 8, !dbg !2929
  %curve_cache7 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 118, !dbg !2930
  %13 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache7, align 8, !dbg !2930
  %disp8 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %13, i32 0, i32 0, !dbg !2931
  %first9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %disp8, i32 0, i32 0, !dbg !2932
  %14 = load i8*, i8** %first9, align 8, !dbg !2932
  %15 = bitcast i8* %14 to %struct.DispList*, !dbg !2929
  store %struct.DispList* %15, %struct.DispList** %dl, align 8, !dbg !2933
  br label %if.end10, !dbg !2934

if.end10:                                         ; preds = %if.then6, %cond.end
  %16 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !2935
  %tobool11 = icmp ne %struct.DispList* %16, null, !dbg !2935
  br i1 %tobool11, label %if.then12, label %if.end56, !dbg !2937

if.then12:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata float* %minx, metadata !2938, metadata !DIExpression()), !dbg !2940
  call void @llvm.dbg.declare(metadata float* %dx, metadata !2941, metadata !DIExpression()), !dbg !2942
  call void @llvm.dbg.declare(metadata float** %fp, metadata !2943, metadata !DIExpression()), !dbg !2944
  call void @llvm.dbg.declare(metadata i32* %a, metadata !2945, metadata !DIExpression()), !dbg !2946
  %17 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !2947
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %17, i32 0, i32 8, !dbg !2948
  %18 = load float*, float** %verts, align 8, !dbg !2948
  %arrayidx = getelementptr inbounds float, float* %18, i64 0, !dbg !2947
  %19 = load float, float* %arrayidx, align 4, !dbg !2947
  store float %19, float* %minx, align 4, !dbg !2949
  %20 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !2950
  %verts13 = getelementptr inbounds %struct.DispList, %struct.DispList* %20, i32 0, i32 8, !dbg !2951
  %21 = load float*, float** %verts13, align 8, !dbg !2951
  %22 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !2952
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %22, i32 0, i32 5, !dbg !2953
  %23 = load i32, i32* %nr, align 8, !dbg !2953
  %sub = sub nsw i32 %23, 1, !dbg !2954
  %mul = mul nsw i32 3, %sub, !dbg !2955
  %idxprom = sext i32 %mul to i64, !dbg !2950
  %arrayidx14 = getelementptr inbounds float, float* %21, i64 %idxprom, !dbg !2950
  %24 = load float, float* %arrayidx14, align 4, !dbg !2950
  %25 = load float, float* %minx, align 4, !dbg !2956
  %sub15 = fsub float %24, %25, !dbg !2957
  store float %sub15, float* %dx, align 4, !dbg !2958
  %26 = load float, float* %dx, align 4, !dbg !2959
  %cmp16 = fcmp ogt float %26, 0.000000e+00, !dbg !2961
  br i1 %cmp16, label %if.then18, label %if.end55, !dbg !2962

if.then18:                                        ; preds = %if.then12
  %27 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !2963
  %verts19 = getelementptr inbounds %struct.DispList, %struct.DispList* %27, i32 0, i32 8, !dbg !2965
  %28 = load float*, float** %verts19, align 8, !dbg !2965
  store float* %28, float** %fp, align 8, !dbg !2966
  store i32 0, i32* %a, align 4, !dbg !2967
  br label %for.cond, !dbg !2969

for.cond:                                         ; preds = %for.inc, %if.then18
  %29 = load i32, i32* %a, align 4, !dbg !2970
  %30 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !2972
  %nr20 = getelementptr inbounds %struct.DispList, %struct.DispList* %30, i32 0, i32 5, !dbg !2973
  %31 = load i32, i32* %nr20, align 8, !dbg !2973
  %cmp21 = icmp slt i32 %29, %31, !dbg !2974
  br i1 %cmp21, label %for.body, label %for.end, !dbg !2975

for.body:                                         ; preds = %for.cond
  %32 = load float*, float** %fp, align 8, !dbg !2976
  %arrayidx23 = getelementptr inbounds float, float* %32, i64 0, !dbg !2976
  %33 = load float, float* %arrayidx23, align 4, !dbg !2976
  %34 = load float, float* %minx, align 4, !dbg !2979
  %sub24 = fsub float %33, %34, !dbg !2980
  %35 = load float, float* %dx, align 4, !dbg !2981
  %div = fdiv float %sub24, %35, !dbg !2982
  %36 = load float, float* %fac.addr, align 4, !dbg !2983
  %cmp25 = fcmp oge float %div, %36, !dbg !2984
  br i1 %cmp25, label %if.then27, label %if.end53, !dbg !2985

if.then27:                                        ; preds = %for.body
  %37 = load i32, i32* %a, align 4, !dbg !2986
  %cmp28 = icmp sgt i32 %37, 0, !dbg !2989
  br i1 %cmp28, label %if.then30, label %if.end51, !dbg !2990

if.then30:                                        ; preds = %if.then27
  call void @llvm.dbg.declare(metadata float* %fac1, metadata !2991, metadata !DIExpression()), !dbg !2993
  %38 = load float*, float** %fp, align 8, !dbg !2994
  %arrayidx31 = getelementptr inbounds float, float* %38, i64 -3, !dbg !2994
  %39 = load float, float* %arrayidx31, align 4, !dbg !2994
  %40 = load float, float* %minx, align 4, !dbg !2995
  %sub32 = fsub float %39, %40, !dbg !2996
  %41 = load float, float* %dx, align 4, !dbg !2997
  %div33 = fdiv float %sub32, %41, !dbg !2998
  store float %div33, float* %fac1, align 4, !dbg !2993
  call void @llvm.dbg.declare(metadata float* %fac2, metadata !2999, metadata !DIExpression()), !dbg !3000
  %42 = load float*, float** %fp, align 8, !dbg !3001
  %arrayidx34 = getelementptr inbounds float, float* %42, i64 0, !dbg !3001
  %43 = load float, float* %arrayidx34, align 4, !dbg !3001
  %44 = load float, float* %minx, align 4, !dbg !3002
  %sub35 = fsub float %43, %44, !dbg !3003
  %45 = load float, float* %dx, align 4, !dbg !3004
  %div36 = fdiv float %sub35, %45, !dbg !3005
  store float %div36, float* %fac2, align 4, !dbg !3000
  %46 = load float, float* %fac1, align 4, !dbg !3006
  %47 = load float, float* %fac2, align 4, !dbg !3008
  %cmp37 = fcmp une float %46, %47, !dbg !3009
  br i1 %cmp37, label %if.then39, label %if.end50, !dbg !3010

if.then39:                                        ; preds = %if.then30
  %48 = load float*, float** %fp, align 8, !dbg !3011
  %arrayidx40 = getelementptr inbounds float, float* %48, i64 1, !dbg !3011
  %49 = load float, float* %arrayidx40, align 4, !dbg !3011
  %50 = load float, float* %fac1, align 4, !dbg !3012
  %51 = load float, float* %fac.addr, align 4, !dbg !3013
  %sub41 = fsub float %50, %51, !dbg !3014
  %mul42 = fmul float %49, %sub41, !dbg !3015
  %52 = load float, float* %fac1, align 4, !dbg !3016
  %53 = load float, float* %fac2, align 4, !dbg !3017
  %sub43 = fsub float %52, %53, !dbg !3018
  %div44 = fdiv float %mul42, %sub43, !dbg !3019
  %54 = load float*, float** %fp, align 8, !dbg !3020
  %arrayidx45 = getelementptr inbounds float, float* %54, i64 -2, !dbg !3020
  %55 = load float, float* %arrayidx45, align 4, !dbg !3020
  %56 = load float, float* %fac.addr, align 4, !dbg !3021
  %57 = load float, float* %fac2, align 4, !dbg !3022
  %sub46 = fsub float %56, %57, !dbg !3023
  %mul47 = fmul float %55, %sub46, !dbg !3024
  %58 = load float, float* %fac1, align 4, !dbg !3025
  %59 = load float, float* %fac2, align 4, !dbg !3026
  %sub48 = fsub float %58, %59, !dbg !3027
  %div49 = fdiv float %mul47, %sub48, !dbg !3028
  %add = fadd float %div44, %div49, !dbg !3029
  store float %add, float* %retval, align 4, !dbg !3030
  br label %return, !dbg !3030

if.end50:                                         ; preds = %if.then30
  br label %if.end51, !dbg !3031

if.end51:                                         ; preds = %if.end50, %if.then27
  %60 = load float*, float** %fp, align 8, !dbg !3032
  %arrayidx52 = getelementptr inbounds float, float* %60, i64 1, !dbg !3032
  %61 = load float, float* %arrayidx52, align 4, !dbg !3032
  store float %61, float* %retval, align 4, !dbg !3033
  br label %return, !dbg !3033

if.end53:                                         ; preds = %for.body
  br label %for.inc, !dbg !3034

for.inc:                                          ; preds = %if.end53
  %62 = load i32, i32* %a, align 4, !dbg !3035
  %inc = add nsw i32 %62, 1, !dbg !3035
  store i32 %inc, i32* %a, align 4, !dbg !3035
  %63 = load float*, float** %fp, align 8, !dbg !3036
  %add.ptr = getelementptr inbounds float, float* %63, i64 3, !dbg !3036
  store float* %add.ptr, float** %fp, align 8, !dbg !3036
  br label %for.cond, !dbg !3037, !llvm.loop !3038

for.end:                                          ; preds = %for.cond
  %64 = load float*, float** %fp, align 8, !dbg !3040
  %arrayidx54 = getelementptr inbounds float, float* %64, i64 -2, !dbg !3040
  %65 = load float, float* %arrayidx54, align 4, !dbg !3040
  store float %65, float* %retval, align 4, !dbg !3041
  br label %return, !dbg !3041

if.end55:                                         ; preds = %if.then12
  br label %if.end56, !dbg !3042

if.end56:                                         ; preds = %if.end55, %if.end10
  store float 1.000000e+00, float* %retval, align 4, !dbg !3043
  br label %return, !dbg !3043

return:                                           ; preds = %if.end56, %for.end, %if.end51, %if.then39, %if.then
  %66 = load float, float* %retval, align 4, !dbg !3044
  ret float %66, !dbg !3044
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_displist_make_mball(%struct.EvaluationContext* %eval_ctx, %struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !3045 {
entry:
  %eval_ctx.addr = alloca %struct.EvaluationContext*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.EvaluationContext* %eval_ctx, %struct.EvaluationContext** %eval_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EvaluationContext** %eval_ctx.addr, metadata !3053, metadata !DIExpression()), !dbg !3054
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !3055, metadata !DIExpression()), !dbg !3056
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3057, metadata !DIExpression()), !dbg !3058
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3059
  %tobool = icmp ne %struct.Object* %0, null, !dbg !3059
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !3061

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3062
  %type = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 3, !dbg !3063
  %2 = load i16, i16* %type, align 8, !dbg !3063
  %conv = sext i16 %2 to i32, !dbg !3062
  %cmp = icmp ne i32 %conv, 5, !dbg !3064
  br i1 %cmp, label %if.then, label %if.end, !dbg !3065

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end16, !dbg !3066

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3067
  %4 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3069
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3070
  %call = call %struct.Object* @BKE_mball_basis_find(%struct.Scene* %4, %struct.Object* %5), !dbg !3071
  %cmp2 = icmp eq %struct.Object* %3, %call, !dbg !3072
  br i1 %cmp2, label %if.then4, label %if.end16, !dbg !3073

if.then4:                                         ; preds = %if.end
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3074
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 118, !dbg !3077
  %7 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !3077
  %tobool5 = icmp ne %struct.CurveCache* %7, null, !dbg !3074
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !3078

if.then6:                                         ; preds = %if.then4
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3079
  %curve_cache7 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 118, !dbg !3081
  %9 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache7, align 8, !dbg !3081
  %disp = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %9, i32 0, i32 0, !dbg !3082
  call void @BKE_displist_free(%struct.ListBase* %disp), !dbg !3083
  br label %if.end10, !dbg !3084

if.else:                                          ; preds = %if.then4
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3085
  %call8 = call i8* %10(i64 56, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0)), !dbg !3085
  %11 = bitcast i8* %call8 to %struct.CurveCache*, !dbg !3085
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3087
  %curve_cache9 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 118, !dbg !3088
  store %struct.CurveCache* %11, %struct.CurveCache** %curve_cache9, align 8, !dbg !3089
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then6
  %13 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx.addr, align 8, !dbg !3090
  %14 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3091
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3092
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3093
  %curve_cache11 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 118, !dbg !3094
  %17 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache11, align 8, !dbg !3094
  %disp12 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %17, i32 0, i32 0, !dbg !3095
  call void @BKE_mball_polygonize(%struct.EvaluationContext* %13, %struct.Scene* %14, %struct.Object* %15, %struct.ListBase* %disp12), !dbg !3096
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3097
  call void @BKE_mball_texspace_calc(%struct.Object* %18), !dbg !3098
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3099
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3100
  %curve_cache13 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 118, !dbg !3101
  %21 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache13, align 8, !dbg !3101
  %disp14 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %21, i32 0, i32 0, !dbg !3102
  %call15 = call zeroext i8 @object_deform_mball(%struct.Object* %19, %struct.ListBase* %disp14), !dbg !3103
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3104
  call void @boundbox_displist_object(%struct.Object* %22), !dbg !3105
  br label %if.end16, !dbg !3106

if.end16:                                         ; preds = %if.then, %if.end10, %if.end
  ret void, !dbg !3107
}

declare dso_local %struct.Object* @BKE_mball_basis_find(%struct.Scene*, %struct.Object*) #2

declare dso_local void @BKE_mball_polygonize(%struct.EvaluationContext*, %struct.Scene*, %struct.Object*, %struct.ListBase*) #2

declare dso_local void @BKE_mball_texspace_calc(%struct.Object*) #2

declare dso_local zeroext i8 @object_deform_mball(%struct.Object*, %struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @boundbox_displist_object(%struct.Object* %ob) #0 !dbg !3108 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %min = alloca [3 x float], align 4
  %max = alloca [3 x float], align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3111, metadata !DIExpression()), !dbg !3112
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3113
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !3113
  %1 = load i16, i16* %type, align 8, !dbg !3113
  %conv = sext i16 %1 to i32, !dbg !3113
  %cmp = icmp eq i32 %conv, 2, !dbg !3113
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3113

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3113
  %type2 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !3113
  %3 = load i16, i16* %type2, align 8, !dbg !3113
  %conv3 = sext i16 %3 to i32, !dbg !3113
  %cmp4 = icmp eq i32 %conv3, 3, !dbg !3113
  br i1 %cmp4, label %if.then, label %lor.lhs.false6, !dbg !3113

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3113
  %type7 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 3, !dbg !3113
  %5 = load i16, i16* %type7, align 8, !dbg !3113
  %conv8 = sext i16 %5 to i32, !dbg !3113
  %cmp9 = icmp eq i32 %conv8, 4, !dbg !3113
  br i1 %cmp9, label %if.then, label %if.end27, !dbg !3115

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false, %entry
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3116
  %bb = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 15, !dbg !3119
  %7 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !3119
  %cmp11 = icmp eq %struct.BoundBox* %7, null, !dbg !3120
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !3121

if.then13:                                        ; preds = %if.then
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3122
  %call = call i8* %8(i64 104, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0)), !dbg !3122
  %9 = bitcast i8* %call to %struct.BoundBox*, !dbg !3122
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3123
  %bb14 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 15, !dbg !3124
  store %struct.BoundBox* %9, %struct.BoundBox** %bb14, align 8, !dbg !3125
  br label %if.end, !dbg !3123

if.end:                                           ; preds = %if.then13, %if.then
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3126
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 120, !dbg !3128
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !3128
  %tobool = icmp ne %struct.DerivedMesh* %12, null, !dbg !3126
  br i1 %tobool, label %if.then15, label %if.else, !dbg !3129

if.then15:                                        ; preds = %if.end
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3130
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3132
  %derivedFinal16 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 120, !dbg !3133
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal16, align 8, !dbg !3133
  call void @DM_set_object_boundbox(%struct.Object* %13, %struct.DerivedMesh* %15), !dbg !3134
  br label %if.end26, !dbg !3135

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata [3 x float]* %min, metadata !3136, metadata !DIExpression()), !dbg !3138
  call void @llvm.dbg.declare(metadata [3 x float]* %max, metadata !3139, metadata !DIExpression()), !dbg !3140
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !3141
  store float 0x46293E5940000000, float* %arrayidx, align 4, !dbg !3141
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !3141
  store float 0x46293E5940000000, float* %arrayidx17, align 4, !dbg !3141
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !3141
  store float 0x46293E5940000000, float* %arrayidx18, align 4, !dbg !3141
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 2, !dbg !3141
  store float 0xC6293E5940000000, float* %arrayidx19, align 4, !dbg !3141
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 1, !dbg !3141
  store float 0xC6293E5940000000, float* %arrayidx20, align 4, !dbg !3141
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !3141
  store float 0xC6293E5940000000, float* %arrayidx21, align 4, !dbg !3141
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3143
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 118, !dbg !3144
  %17 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !3144
  %disp = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %17, i32 0, i32 0, !dbg !3145
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !3146
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !3147
  call void @BKE_displist_minmax(%struct.ListBase* %disp, float* %arraydecay, float* %arraydecay22), !dbg !3148
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3149
  %bb23 = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 15, !dbg !3150
  %19 = load %struct.BoundBox*, %struct.BoundBox** %bb23, align 8, !dbg !3150
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !3151
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !3152
  call void @BKE_boundbox_init_from_minmax(%struct.BoundBox* %19, float* %arraydecay24, float* %arraydecay25), !dbg !3153
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then15
  br label %if.end27, !dbg !3154

if.end27:                                         ; preds = %if.end26, %lor.lhs.false6
  ret void, !dbg !3155
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_displist_make_mball_forRender(%struct.EvaluationContext* %eval_ctx, %struct.Scene* %scene, %struct.Object* %ob, %struct.ListBase* %dispbase) #0 !dbg !3156 {
entry:
  %eval_ctx.addr = alloca %struct.EvaluationContext*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dispbase.addr = alloca %struct.ListBase*, align 8
  store %struct.EvaluationContext* %eval_ctx, %struct.EvaluationContext** %eval_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EvaluationContext** %eval_ctx.addr, metadata !3159, metadata !DIExpression()), !dbg !3160
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !3161, metadata !DIExpression()), !dbg !3162
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3163, metadata !DIExpression()), !dbg !3164
  store %struct.ListBase* %dispbase, %struct.ListBase** %dispbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dispbase.addr, metadata !3165, metadata !DIExpression()), !dbg !3166
  %0 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx.addr, align 8, !dbg !3167
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3168
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3169
  %3 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !3170
  call void @BKE_mball_polygonize(%struct.EvaluationContext* %0, %struct.Scene* %1, %struct.Object* %2, %struct.ListBase* %3), !dbg !3171
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3172
  call void @BKE_mball_texspace_calc(%struct.Object* %4), !dbg !3173
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3174
  %6 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !3175
  %call = call zeroext i8 @object_deform_mball(%struct.Object* %5, %struct.ListBase* %6), !dbg !3176
  ret void, !dbg !3177
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_displist_make_surf(%struct.Scene* %scene, %struct.Object* %ob, %struct.ListBase* %dispbase, %struct.DerivedMesh** %r_dm_final, i8 zeroext %for_render, i8 zeroext %for_orco, i8 zeroext %use_render_resolution) #0 !dbg !3178 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dispbase.addr = alloca %struct.ListBase*, align 8
  %r_dm_final.addr = alloca %struct.DerivedMesh**, align 8
  %for_render.addr = alloca i8, align 1
  %for_orco.addr = alloca i8, align 1
  %use_render_resolution.addr = alloca i8, align 1
  %nubase = alloca %struct.ListBase, align 8
  %nu = alloca %struct.Nurb*, align 8
  %cu = alloca %struct.Curve*, align 8
  %dl = alloca %struct.DispList*, align 8
  %data1 = alloca float*, align 8
  %len = alloca i32, align 4
  %resolu = alloca i32, align 4
  %resolv = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !3182, metadata !DIExpression()), !dbg !3183
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3184, metadata !DIExpression()), !dbg !3185
  store %struct.ListBase* %dispbase, %struct.ListBase** %dispbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dispbase.addr, metadata !3186, metadata !DIExpression()), !dbg !3187
  store %struct.DerivedMesh** %r_dm_final, %struct.DerivedMesh*** %r_dm_final.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh*** %r_dm_final.addr, metadata !3188, metadata !DIExpression()), !dbg !3189
  store i8 %for_render, i8* %for_render.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %for_render.addr, metadata !3190, metadata !DIExpression()), !dbg !3191
  store i8 %for_orco, i8* %for_orco.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %for_orco.addr, metadata !3192, metadata !DIExpression()), !dbg !3193
  store i8 %use_render_resolution, i8* %use_render_resolution.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_render_resolution.addr, metadata !3194, metadata !DIExpression()), !dbg !3195
  call void @llvm.dbg.declare(metadata %struct.ListBase* %nubase, metadata !3196, metadata !DIExpression()), !dbg !3197
  %0 = bitcast %struct.ListBase* %nubase to i8*, !dbg !3197
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !3197
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !3198, metadata !DIExpression()), !dbg !3260
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !3261, metadata !DIExpression()), !dbg !3398
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3399
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !3400
  %2 = load i8*, i8** %data, align 8, !dbg !3400
  %3 = bitcast i8* %2 to %struct.Curve*, !dbg !3399
  store %struct.Curve* %3, %struct.Curve** %cu, align 8, !dbg !3398
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !3401, metadata !DIExpression()), !dbg !3402
  call void @llvm.dbg.declare(metadata float** %data1, metadata !3403, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3405, metadata !DIExpression()), !dbg !3406
  %4 = load i8, i8* %for_render.addr, align 1, !dbg !3407
  %tobool = icmp ne i8 %4, 0, !dbg !3407
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3409

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3410
  %editnurb = getelementptr inbounds %struct.Curve, %struct.Curve* %5, i32 0, i32 4, !dbg !3411
  %6 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !3411
  %tobool2 = icmp ne %struct.EditNurb* %6, null, !dbg !3410
  br i1 %tobool2, label %if.then, label %if.else, !dbg !3412

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3413
  %call = call %struct.ListBase* @BKE_curve_editNurbs_get(%struct.Curve* %7), !dbg !3415
  call void @BKE_nurbList_duplicate(%struct.ListBase* %nubase, %struct.ListBase* %call), !dbg !3416
  br label %if.end, !dbg !3417

if.else:                                          ; preds = %land.lhs.true, %entry
  %8 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3418
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %8, i32 0, i32 3, !dbg !3420
  call void @BKE_nurbList_duplicate(%struct.ListBase* %nubase, %struct.ListBase* %nurb), !dbg !3421
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load i8, i8* %for_orco.addr, align 1, !dbg !3422
  %tobool3 = icmp ne i8 %9, 0, !dbg !3422
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !3424

if.then4:                                         ; preds = %if.end
  %10 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3425
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3426
  %12 = load i8, i8* %for_render.addr, align 1, !dbg !3427
  %13 = load i8, i8* %use_render_resolution.addr, align 1, !dbg !3428
  call void @curve_calc_modifiers_pre(%struct.Scene* %10, %struct.Object* %11, %struct.ListBase* %nubase, i8 zeroext %12, i8 zeroext %13), !dbg !3429
  br label %if.end5, !dbg !3429

if.end5:                                          ; preds = %if.then4, %if.end
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nubase, i32 0, i32 0, !dbg !3430
  %14 = load i8*, i8** %first, align 8, !dbg !3430
  %15 = bitcast i8* %14 to %struct.Nurb*, !dbg !3432
  store %struct.Nurb* %15, %struct.Nurb** %nu, align 8, !dbg !3433
  br label %for.cond, !dbg !3434

for.cond:                                         ; preds = %for.inc, %if.end5
  %16 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3435
  %tobool6 = icmp ne %struct.Nurb* %16, null, !dbg !3437
  br i1 %tobool6, label %for.body, label %for.end, !dbg !3437

for.body:                                         ; preds = %for.cond
  %17 = load i8, i8* %for_render.addr, align 1, !dbg !3438
  %conv = zext i8 %17 to i32, !dbg !3438
  %tobool7 = icmp ne i32 %conv, 0, !dbg !3438
  br i1 %tobool7, label %land.lhs.true10, label %lor.lhs.false, !dbg !3441

lor.lhs.false:                                    ; preds = %for.body
  %18 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3442
  %hide = getelementptr inbounds %struct.Nurb, %struct.Nurb* %18, i32 0, i32 4, !dbg !3443
  %19 = load i16, i16* %hide, align 4, !dbg !3443
  %conv8 = sext i16 %19 to i32, !dbg !3442
  %cmp = icmp eq i32 %conv8, 0, !dbg !3444
  br i1 %cmp, label %land.lhs.true10, label %if.end102, !dbg !3445

land.lhs.true10:                                  ; preds = %lor.lhs.false, %for.body
  %20 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3446
  %call11 = call zeroext i8 @BKE_nurb_check_valid_uv(%struct.Nurb* %20), !dbg !3447
  %conv12 = zext i8 %call11 to i32, !dbg !3447
  %tobool13 = icmp ne i32 %conv12, 0, !dbg !3447
  br i1 %tobool13, label %if.then14, label %if.end102, !dbg !3448

if.then14:                                        ; preds = %land.lhs.true10
  call void @llvm.dbg.declare(metadata i32* %resolu, metadata !3449, metadata !DIExpression()), !dbg !3451
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3452
  %resolu15 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 9, !dbg !3453
  %22 = load i16, i16* %resolu15, align 4, !dbg !3453
  %conv16 = sext i16 %22 to i32, !dbg !3452
  store i32 %conv16, i32* %resolu, align 4, !dbg !3451
  call void @llvm.dbg.declare(metadata i32* %resolv, metadata !3454, metadata !DIExpression()), !dbg !3455
  %23 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3456
  %resolv17 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %23, i32 0, i32 10, !dbg !3457
  %24 = load i16, i16* %resolv17, align 2, !dbg !3457
  %conv18 = sext i16 %24 to i32, !dbg !3456
  store i32 %conv18, i32* %resolv, align 4, !dbg !3455
  %25 = load i8, i8* %use_render_resolution.addr, align 1, !dbg !3458
  %tobool19 = icmp ne i8 %25, 0, !dbg !3458
  br i1 %tobool19, label %if.then20, label %if.end31, !dbg !3460

if.then20:                                        ; preds = %if.then14
  %26 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3461
  %resolu_ren = getelementptr inbounds %struct.Curve, %struct.Curve* %26, i32 0, i32 29, !dbg !3464
  %27 = load i16, i16* %resolu_ren, align 8, !dbg !3464
  %tobool21 = icmp ne i16 %27, 0, !dbg !3461
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !3465

if.then22:                                        ; preds = %if.then20
  %28 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3466
  %resolu_ren23 = getelementptr inbounds %struct.Curve, %struct.Curve* %28, i32 0, i32 29, !dbg !3467
  %29 = load i16, i16* %resolu_ren23, align 8, !dbg !3467
  %conv24 = sext i16 %29 to i32, !dbg !3466
  store i32 %conv24, i32* %resolu, align 4, !dbg !3468
  br label %if.end25, !dbg !3469

if.end25:                                         ; preds = %if.then22, %if.then20
  %30 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3470
  %resolv_ren = getelementptr inbounds %struct.Curve, %struct.Curve* %30, i32 0, i32 30, !dbg !3472
  %31 = load i16, i16* %resolv_ren, align 2, !dbg !3472
  %tobool26 = icmp ne i16 %31, 0, !dbg !3470
  br i1 %tobool26, label %if.then27, label %if.end30, !dbg !3473

if.then27:                                        ; preds = %if.end25
  %32 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3474
  %resolv_ren28 = getelementptr inbounds %struct.Curve, %struct.Curve* %32, i32 0, i32 30, !dbg !3475
  %33 = load i16, i16* %resolv_ren28, align 2, !dbg !3475
  %conv29 = sext i16 %33 to i32, !dbg !3474
  store i32 %conv29, i32* %resolv, align 4, !dbg !3476
  br label %if.end30, !dbg !3477

if.end30:                                         ; preds = %if.then27, %if.end25
  br label %if.end31, !dbg !3478

if.end31:                                         ; preds = %if.end30, %if.then14
  %34 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3479
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %34, i32 0, i32 7, !dbg !3481
  %35 = load i32, i32* %pntsv, align 4, !dbg !3481
  %cmp32 = icmp eq i32 %35, 1, !dbg !3482
  br i1 %cmp32, label %if.then34, label %if.else55, !dbg !3483

if.then34:                                        ; preds = %if.end31
  %36 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3484
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %36, i32 0, i32 13, !dbg !3484
  %37 = load i16, i16* %flagu, align 4, !dbg !3484
  %conv35 = sext i16 %37 to i32, !dbg !3484
  %and = and i32 %conv35, 1, !dbg !3484
  %tobool36 = icmp ne i32 %and, 0, !dbg !3484
  br i1 %tobool36, label %cond.true, label %cond.false, !dbg !3484

cond.true:                                        ; preds = %if.then34
  %38 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3484
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %38, i32 0, i32 6, !dbg !3484
  %39 = load i32, i32* %pntsu, align 8, !dbg !3484
  br label %cond.end, !dbg !3484

cond.false:                                       ; preds = %if.then34
  %40 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3484
  %pntsu37 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %40, i32 0, i32 6, !dbg !3484
  %41 = load i32, i32* %pntsu37, align 8, !dbg !3484
  %sub = sub nsw i32 %41, 1, !dbg !3484
  br label %cond.end, !dbg !3484

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %39, %cond.true ], [ %sub, %cond.false ], !dbg !3484
  %42 = load i32, i32* %resolu, align 4, !dbg !3486
  %mul = mul nsw i32 %cond, %42, !dbg !3487
  store i32 %mul, i32* %len, align 4, !dbg !3488
  %43 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3489
  %call38 = call i8* %43(i64 72, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0)), !dbg !3489
  %44 = bitcast i8* %call38 to %struct.DispList*, !dbg !3489
  store %struct.DispList* %44, %struct.DispList** %dl, align 8, !dbg !3490
  %45 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3491
  %46 = load i32, i32* %len, align 4, !dbg !3492
  %conv39 = sext i32 %46 to i64, !dbg !3492
  %mul40 = mul i64 %conv39, 12, !dbg !3493
  %call41 = call i8* %45(i64 %mul40, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)), !dbg !3491
  %47 = bitcast i8* %call41 to float*, !dbg !3491
  %48 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3494
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %48, i32 0, i32 8, !dbg !3495
  store float* %47, float** %verts, align 8, !dbg !3496
  %49 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !3497
  %50 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3498
  %51 = bitcast %struct.DispList* %50 to i8*, !dbg !3498
  call void @BLI_addtail(%struct.ListBase* %49, i8* %51), !dbg !3499
  %52 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3500
  %parts = getelementptr inbounds %struct.DispList, %struct.DispList* %52, i32 0, i32 4, !dbg !3501
  store i32 1, i32* %parts, align 4, !dbg !3502
  %53 = load i32, i32* %len, align 4, !dbg !3503
  %54 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3504
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %54, i32 0, i32 5, !dbg !3505
  store i32 %53, i32* %nr, align 8, !dbg !3506
  %55 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3507
  %mat_nr = getelementptr inbounds %struct.Nurb, %struct.Nurb* %55, i32 0, i32 3, !dbg !3508
  %56 = load i16, i16* %mat_nr, align 2, !dbg !3508
  %57 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3509
  %col = getelementptr inbounds %struct.DispList, %struct.DispList* %57, i32 0, i32 6, !dbg !3510
  store i16 %56, i16* %col, align 4, !dbg !3511
  %58 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3512
  %charidx = getelementptr inbounds %struct.Nurb, %struct.Nurb* %58, i32 0, i32 21, !dbg !3513
  %59 = load i32, i32* %charidx, align 4, !dbg !3513
  %60 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3514
  %charidx42 = getelementptr inbounds %struct.DispList, %struct.DispList* %60, i32 0, i32 11, !dbg !3515
  store i32 %59, i32* %charidx42, align 8, !dbg !3516
  %61 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3517
  %flag = getelementptr inbounds %struct.Nurb, %struct.Nurb* %61, i32 0, i32 5, !dbg !3518
  %62 = load i16, i16* %flag, align 2, !dbg !3518
  %conv43 = sext i16 %62 to i32, !dbg !3517
  %and44 = and i32 %conv43, -9, !dbg !3519
  %conv45 = trunc i32 %and44 to i16, !dbg !3517
  %63 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3520
  %rt = getelementptr inbounds %struct.DispList, %struct.DispList* %63, i32 0, i32 7, !dbg !3521
  store i16 %conv45, i16* %rt, align 2, !dbg !3522
  %64 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3523
  %verts46 = getelementptr inbounds %struct.DispList, %struct.DispList* %64, i32 0, i32 8, !dbg !3524
  %65 = load float*, float** %verts46, align 8, !dbg !3524
  store float* %65, float** %data1, align 8, !dbg !3525
  %66 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3526
  %flagu47 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %66, i32 0, i32 13, !dbg !3528
  %67 = load i16, i16* %flagu47, align 4, !dbg !3528
  %conv48 = sext i16 %67 to i32, !dbg !3526
  %and49 = and i32 %conv48, 1, !dbg !3529
  %tobool50 = icmp ne i32 %and49, 0, !dbg !3529
  br i1 %tobool50, label %if.then51, label %if.else52, !dbg !3530

if.then51:                                        ; preds = %cond.end
  %68 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3531
  %type = getelementptr inbounds %struct.DispList, %struct.DispList* %68, i32 0, i32 2, !dbg !3532
  store i16 0, i16* %type, align 8, !dbg !3533
  br label %if.end54, !dbg !3531

if.else52:                                        ; preds = %cond.end
  %69 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3534
  %type53 = getelementptr inbounds %struct.DispList, %struct.DispList* %69, i32 0, i32 2, !dbg !3535
  store i16 1, i16* %type53, align 8, !dbg !3536
  br label %if.end54

if.end54:                                         ; preds = %if.else52, %if.then51
  %70 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3537
  %71 = load float*, float** %data1, align 8, !dbg !3538
  %72 = load i32, i32* %resolu, align 4, !dbg !3539
  call void @BKE_nurb_makeCurve(%struct.Nurb* %70, float* %71, float* null, float* null, float* null, i32 %72, i32 12), !dbg !3540
  br label %if.end101, !dbg !3541

if.else55:                                        ; preds = %if.end31
  %73 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3542
  %pntsu56 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %73, i32 0, i32 6, !dbg !3544
  %74 = load i32, i32* %pntsu56, align 8, !dbg !3544
  %75 = load i32, i32* %resolu, align 4, !dbg !3545
  %mul57 = mul nsw i32 %74, %75, !dbg !3546
  %76 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3547
  %pntsv58 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %76, i32 0, i32 7, !dbg !3548
  %77 = load i32, i32* %pntsv58, align 4, !dbg !3548
  %78 = load i32, i32* %resolv, align 4, !dbg !3549
  %mul59 = mul nsw i32 %77, %78, !dbg !3550
  %mul60 = mul nsw i32 %mul57, %mul59, !dbg !3551
  store i32 %mul60, i32* %len, align 4, !dbg !3552
  %79 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3553
  %call61 = call i8* %79(i64 72, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0)), !dbg !3553
  %80 = bitcast i8* %call61 to %struct.DispList*, !dbg !3553
  store %struct.DispList* %80, %struct.DispList** %dl, align 8, !dbg !3554
  %81 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3555
  %82 = load i32, i32* %len, align 4, !dbg !3556
  %conv62 = sext i32 %82 to i64, !dbg !3556
  %mul63 = mul i64 %conv62, 12, !dbg !3557
  %call64 = call i8* %81(i64 %mul63, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)), !dbg !3555
  %83 = bitcast i8* %call64 to float*, !dbg !3555
  %84 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3558
  %verts65 = getelementptr inbounds %struct.DispList, %struct.DispList* %84, i32 0, i32 8, !dbg !3559
  store float* %83, float** %verts65, align 8, !dbg !3560
  %85 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !3561
  %86 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3562
  %87 = bitcast %struct.DispList* %86 to i8*, !dbg !3562
  call void @BLI_addtail(%struct.ListBase* %85, i8* %87), !dbg !3563
  %88 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3564
  %mat_nr66 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %88, i32 0, i32 3, !dbg !3565
  %89 = load i16, i16* %mat_nr66, align 2, !dbg !3565
  %90 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3566
  %col67 = getelementptr inbounds %struct.DispList, %struct.DispList* %90, i32 0, i32 6, !dbg !3567
  store i16 %89, i16* %col67, align 4, !dbg !3568
  %91 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3569
  %charidx68 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %91, i32 0, i32 21, !dbg !3570
  %92 = load i32, i32* %charidx68, align 4, !dbg !3570
  %93 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3571
  %charidx69 = getelementptr inbounds %struct.DispList, %struct.DispList* %93, i32 0, i32 11, !dbg !3572
  store i32 %92, i32* %charidx69, align 8, !dbg !3573
  %94 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3574
  %flag70 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %94, i32 0, i32 5, !dbg !3575
  %95 = load i16, i16* %flag70, align 2, !dbg !3575
  %conv71 = sext i16 %95 to i32, !dbg !3574
  %and72 = and i32 %conv71, -9, !dbg !3576
  %conv73 = trunc i32 %and72 to i16, !dbg !3574
  %96 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3577
  %rt74 = getelementptr inbounds %struct.DispList, %struct.DispList* %96, i32 0, i32 7, !dbg !3578
  store i16 %conv73, i16* %rt74, align 2, !dbg !3579
  %97 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3580
  %verts75 = getelementptr inbounds %struct.DispList, %struct.DispList* %97, i32 0, i32 8, !dbg !3581
  %98 = load float*, float** %verts75, align 8, !dbg !3581
  store float* %98, float** %data1, align 8, !dbg !3582
  %99 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3583
  %type76 = getelementptr inbounds %struct.DispList, %struct.DispList* %99, i32 0, i32 2, !dbg !3584
  store i16 2, i16* %type76, align 8, !dbg !3585
  %100 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3586
  %pntsu77 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %100, i32 0, i32 6, !dbg !3587
  %101 = load i32, i32* %pntsu77, align 8, !dbg !3587
  %102 = load i32, i32* %resolu, align 4, !dbg !3588
  %mul78 = mul nsw i32 %101, %102, !dbg !3589
  %103 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3590
  %parts79 = getelementptr inbounds %struct.DispList, %struct.DispList* %103, i32 0, i32 4, !dbg !3591
  store i32 %mul78, i32* %parts79, align 4, !dbg !3592
  %104 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3593
  %pntsv80 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %104, i32 0, i32 7, !dbg !3594
  %105 = load i32, i32* %pntsv80, align 4, !dbg !3594
  %106 = load i32, i32* %resolv, align 4, !dbg !3595
  %mul81 = mul nsw i32 %105, %106, !dbg !3596
  %107 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3597
  %nr82 = getelementptr inbounds %struct.DispList, %struct.DispList* %107, i32 0, i32 5, !dbg !3598
  store i32 %mul81, i32* %nr82, align 8, !dbg !3599
  %108 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3600
  %flagv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %108, i32 0, i32 14, !dbg !3602
  %109 = load i16, i16* %flagv, align 2, !dbg !3602
  %conv83 = sext i16 %109 to i32, !dbg !3600
  %and84 = and i32 %conv83, 1, !dbg !3603
  %tobool85 = icmp ne i32 %and84, 0, !dbg !3603
  br i1 %tobool85, label %if.then86, label %if.end90, !dbg !3604

if.then86:                                        ; preds = %if.else55
  %110 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3605
  %flag87 = getelementptr inbounds %struct.DispList, %struct.DispList* %110, i32 0, i32 3, !dbg !3606
  %111 = load i16, i16* %flag87, align 2, !dbg !3607
  %conv88 = sext i16 %111 to i32, !dbg !3607
  %or = or i32 %conv88, 1, !dbg !3607
  %conv89 = trunc i32 %or to i16, !dbg !3607
  store i16 %conv89, i16* %flag87, align 2, !dbg !3607
  br label %if.end90, !dbg !3605

if.end90:                                         ; preds = %if.then86, %if.else55
  %112 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3608
  %flagu91 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %112, i32 0, i32 13, !dbg !3610
  %113 = load i16, i16* %flagu91, align 4, !dbg !3610
  %conv92 = sext i16 %113 to i32, !dbg !3608
  %and93 = and i32 %conv92, 1, !dbg !3611
  %tobool94 = icmp ne i32 %and93, 0, !dbg !3611
  br i1 %tobool94, label %if.then95, label %if.end100, !dbg !3612

if.then95:                                        ; preds = %if.end90
  %114 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3613
  %flag96 = getelementptr inbounds %struct.DispList, %struct.DispList* %114, i32 0, i32 3, !dbg !3614
  %115 = load i16, i16* %flag96, align 2, !dbg !3615
  %conv97 = sext i16 %115 to i32, !dbg !3615
  %or98 = or i32 %conv97, 2, !dbg !3615
  %conv99 = trunc i32 %or98 to i16, !dbg !3615
  store i16 %conv99, i16* %flag96, align 2, !dbg !3615
  br label %if.end100, !dbg !3613

if.end100:                                        ; preds = %if.then95, %if.end90
  %116 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3616
  %117 = load float*, float** %data1, align 8, !dbg !3617
  %118 = load i32, i32* %resolu, align 4, !dbg !3618
  %119 = load i32, i32* %resolv, align 4, !dbg !3619
  call void @BKE_nurb_makeFaces(%struct.Nurb* %116, float* %117, i32 0, i32 %118, i32 %119), !dbg !3620
  %120 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3621
  call void @displist_surf_indices(%struct.DispList* %120), !dbg !3622
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.end54
  br label %if.end102, !dbg !3623

if.end102:                                        ; preds = %if.end101, %land.lhs.true10, %lor.lhs.false
  br label %for.inc, !dbg !3624

for.inc:                                          ; preds = %if.end102
  %121 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3625
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %121, i32 0, i32 0, !dbg !3626
  %122 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !3626
  store %struct.Nurb* %122, %struct.Nurb** %nu, align 8, !dbg !3627
  br label %for.cond, !dbg !3628, !llvm.loop !3629

for.end:                                          ; preds = %for.cond
  %123 = load i8, i8* %for_orco.addr, align 1, !dbg !3631
  %tobool103 = icmp ne i8 %123, 0, !dbg !3631
  br i1 %tobool103, label %if.end105, label %if.then104, !dbg !3633

if.then104:                                       ; preds = %for.end
  %124 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3634
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %124, i32 0, i32 118, !dbg !3636
  %125 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !3636
  %deformed_nurbs = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %125, i32 0, i32 2, !dbg !3637
  call void @BKE_nurbList_duplicate(%struct.ListBase* %deformed_nurbs, %struct.ListBase* %nubase), !dbg !3638
  %126 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3639
  %127 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3640
  %128 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !3641
  %129 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %r_dm_final.addr, align 8, !dbg !3642
  %130 = load i8, i8* %for_render.addr, align 1, !dbg !3643
  %131 = load i8, i8* %use_render_resolution.addr, align 1, !dbg !3644
  call void @curve_calc_modifiers_post(%struct.Scene* %126, %struct.Object* %127, %struct.ListBase* %nubase, %struct.ListBase* %128, %struct.DerivedMesh** %129, i8 zeroext %130, i8 zeroext %131), !dbg !3645
  br label %if.end105, !dbg !3646

if.end105:                                        ; preds = %if.then104, %for.end
  call void @BKE_nurbList_free(%struct.ListBase* %nubase), !dbg !3647
  ret void, !dbg !3648
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local void @BKE_nurbList_duplicate(%struct.ListBase*, %struct.ListBase*) #2

declare dso_local %struct.ListBase* @BKE_curve_editNurbs_get(%struct.Curve*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @curve_calc_modifiers_pre(%struct.Scene* %scene, %struct.Object* %ob, %struct.ListBase* %nurb, i8 zeroext %for_render, i8 zeroext %use_render_resolution) #0 !dbg !3649 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nurb.addr = alloca %struct.ListBase*, align 8
  %for_render.addr = alloca i8, align 1
  %use_render_resolution.addr = alloca i8, align 1
  %virtualModifierData = alloca %struct.VirtualModifierData, align 8
  %md = alloca %struct.ModifierData*, align 8
  %pretessellatePoint = alloca %struct.ModifierData*, align 8
  %cu = alloca %struct.Curve*, align 8
  %numVerts = alloca i32, align 4
  %editmode = alloca i8, align 1
  %app_flag = alloca i32, align 4
  %deformedVerts = alloca [3 x float]*, align 8
  %keyVerts = alloca float*, align 8
  %required_mode = alloca i32, align 4
  %mti = alloca %struct.ModifierTypeInfo*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !3652, metadata !DIExpression()), !dbg !3653
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3654, metadata !DIExpression()), !dbg !3655
  store %struct.ListBase* %nurb, %struct.ListBase** %nurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nurb.addr, metadata !3656, metadata !DIExpression()), !dbg !3657
  store i8 %for_render, i8* %for_render.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %for_render.addr, metadata !3658, metadata !DIExpression()), !dbg !3659
  store i8 %use_render_resolution, i8* %use_render_resolution.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_render_resolution.addr, metadata !3660, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.declare(metadata %struct.VirtualModifierData* %virtualModifierData, metadata !3662, metadata !DIExpression()), !dbg !3713
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !3714, metadata !DIExpression()), !dbg !3716
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3717
  %call = call %struct.ModifierData* @modifiers_getVirtualModifierList(%struct.Object* %0, %struct.VirtualModifierData* %virtualModifierData), !dbg !3718
  store %struct.ModifierData* %call, %struct.ModifierData** %md, align 8, !dbg !3716
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %pretessellatePoint, metadata !3719, metadata !DIExpression()), !dbg !3720
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !3721, metadata !DIExpression()), !dbg !3722
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3723
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !3724
  %2 = load i8*, i8** %data, align 8, !dbg !3724
  %3 = bitcast i8* %2 to %struct.Curve*, !dbg !3723
  store %struct.Curve* %3, %struct.Curve** %cu, align 8, !dbg !3722
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !3725, metadata !DIExpression()), !dbg !3726
  store i32 0, i32* %numVerts, align 4, !dbg !3726
  call void @llvm.dbg.declare(metadata i8* %editmode, metadata !3727, metadata !DIExpression()), !dbg !3728
  %4 = load i8, i8* %for_render.addr, align 1, !dbg !3729
  %tobool = icmp ne i8 %4, 0, !dbg !3729
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !3730

land.rhs:                                         ; preds = %entry
  %5 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3731
  %editnurb = getelementptr inbounds %struct.Curve, %struct.Curve* %5, i32 0, i32 4, !dbg !3732
  %6 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !3732
  %tobool1 = icmp ne %struct.EditNurb* %6, null, !dbg !3731
  br i1 %tobool1, label %lor.end, label %lor.rhs, !dbg !3733

lor.rhs:                                          ; preds = %land.rhs
  %7 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3734
  %editfont = getelementptr inbounds %struct.Curve, %struct.Curve* %7, i32 0, i32 53, !dbg !3735
  %8 = load %struct.EditFont*, %struct.EditFont** %editfont, align 8, !dbg !3735
  %tobool2 = icmp ne %struct.EditFont* %8, null, !dbg !3733
  br label %lor.end, !dbg !3733

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %9 = phi i1 [ true, %land.rhs ], [ %tobool2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %entry
  %10 = phi i1 [ false, %entry ], [ %9, %lor.end ], !dbg !3736
  %land.ext = zext i1 %10 to i32, !dbg !3730
  %conv = trunc i32 %land.ext to i8, !dbg !3737
  store i8 %conv, i8* %editmode, align 1, !dbg !3728
  call void @llvm.dbg.declare(metadata i32* %app_flag, metadata !3738, metadata !DIExpression()), !dbg !3740
  store i32 0, i32* %app_flag, align 4, !dbg !3740
  call void @llvm.dbg.declare(metadata [3 x float]** %deformedVerts, metadata !3741, metadata !DIExpression()), !dbg !3742
  store [3 x float]* null, [3 x float]** %deformedVerts, align 8, !dbg !3742
  call void @llvm.dbg.declare(metadata float** %keyVerts, metadata !3743, metadata !DIExpression()), !dbg !3744
  store float* null, float** %keyVerts, align 8, !dbg !3744
  call void @llvm.dbg.declare(metadata i32* %required_mode, metadata !3745, metadata !DIExpression()), !dbg !3746
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3747
  call void @modifiers_clearErrors(%struct.Object* %11), !dbg !3748
  %12 = load i8, i8* %editmode, align 1, !dbg !3749
  %tobool3 = icmp ne i8 %12, 0, !dbg !3749
  br i1 %tobool3, label %if.then, label %if.end, !dbg !3751

if.then:                                          ; preds = %land.end
  %13 = load i32, i32* %app_flag, align 4, !dbg !3752
  %or = or i32 %13, 2, !dbg !3752
  store i32 %or, i32* %app_flag, align 4, !dbg !3752
  br label %if.end, !dbg !3753

if.end:                                           ; preds = %if.then, %land.end
  %14 = load i8, i8* %use_render_resolution.addr, align 1, !dbg !3754
  %tobool4 = icmp ne i8 %14, 0, !dbg !3754
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !3756

if.then5:                                         ; preds = %if.end
  %15 = load i32, i32* %app_flag, align 4, !dbg !3757
  %or6 = or i32 %15, 1, !dbg !3757
  store i32 %or6, i32* %app_flag, align 4, !dbg !3757
  store i32 2, i32* %required_mode, align 4, !dbg !3759
  br label %if.end7, !dbg !3760

if.else:                                          ; preds = %if.end
  store i32 1, i32* %required_mode, align 4, !dbg !3761
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then5
  %16 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3762
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3763
  %18 = load i8, i8* %use_render_resolution.addr, align 1, !dbg !3764
  %19 = load i8, i8* %editmode, align 1, !dbg !3765
  %call8 = call %struct.ModifierData* @curve_get_tessellate_point(%struct.Scene* %16, %struct.Object* %17, i8 zeroext %18, i8 zeroext %19), !dbg !3766
  store %struct.ModifierData* %call8, %struct.ModifierData** %pretessellatePoint, align 8, !dbg !3767
  %20 = load i8, i8* %editmode, align 1, !dbg !3768
  %tobool9 = icmp ne i8 %20, 0, !dbg !3768
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !3770

if.then10:                                        ; preds = %if.end7
  %21 = load i32, i32* %required_mode, align 4, !dbg !3771
  %or11 = or i32 %21, 4, !dbg !3771
  store i32 %or11, i32* %required_mode, align 4, !dbg !3771
  br label %if.end12, !dbg !3772

if.end12:                                         ; preds = %if.then10, %if.end7
  %22 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3773
  %editnurb13 = getelementptr inbounds %struct.Curve, %struct.Curve* %22, i32 0, i32 4, !dbg !3775
  %23 = load %struct.EditNurb*, %struct.EditNurb** %editnurb13, align 8, !dbg !3775
  %cmp = icmp eq %struct.EditNurb* %23, null, !dbg !3776
  br i1 %cmp, label %if.then15, label %if.end21, !dbg !3777

if.then15:                                        ; preds = %if.end12
  %24 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3778
  %25 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3780
  %call16 = call float* @BKE_key_evaluate_object(%struct.Scene* %24, %struct.Object* %25, i32* %numVerts), !dbg !3781
  store float* %call16, float** %keyVerts, align 8, !dbg !3782
  %26 = load float*, float** %keyVerts, align 8, !dbg !3783
  %tobool17 = icmp ne float* %26, null, !dbg !3783
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !3785

if.then18:                                        ; preds = %if.then15
  %27 = load %struct.ListBase*, %struct.ListBase** %nurb.addr, align 8, !dbg !3786
  %28 = load float*, float** %keyVerts, align 8, !dbg !3788
  %call19 = call [3 x float]* @BKE_curve_nurbs_keyVertexCos_get(%struct.ListBase* %27, float* %28), !dbg !3789
  store [3 x float]* %call19, [3 x float]** %deformedVerts, align 8, !dbg !3790
  br label %if.end20, !dbg !3791

if.end20:                                         ; preds = %if.then18, %if.then15
  br label %if.end21, !dbg !3792

if.end21:                                         ; preds = %if.end20, %if.end12
  %29 = load %struct.ModifierData*, %struct.ModifierData** %pretessellatePoint, align 8, !dbg !3793
  %tobool22 = icmp ne %struct.ModifierData* %29, null, !dbg !3793
  br i1 %tobool22, label %if.then23, label %if.end44, !dbg !3795

if.then23:                                        ; preds = %if.end21
  br label %for.cond, !dbg !3796

for.cond:                                         ; preds = %for.inc, %if.then23
  %30 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !3798
  %tobool24 = icmp ne %struct.ModifierData* %30, null, !dbg !3801
  br i1 %tobool24, label %for.body, label %for.end, !dbg !3801

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ModifierTypeInfo** %mti, metadata !3802, metadata !DIExpression()), !dbg !3900
  %31 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !3901
  %type = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %31, i32 0, i32 2, !dbg !3902
  %32 = load i32, i32* %type, align 8, !dbg !3902
  %call25 = call %struct.ModifierTypeInfo* @modifierType_getInfo(i32 %32), !dbg !3903
  store %struct.ModifierTypeInfo* %call25, %struct.ModifierTypeInfo** %mti, align 8, !dbg !3900
  %33 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3904
  %34 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !3905
  %scene26 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %34, i32 0, i32 7, !dbg !3906
  store %struct.Scene* %33, %struct.Scene** %scene26, align 8, !dbg !3907
  %35 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3908
  %36 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !3910
  %37 = load i32, i32* %required_mode, align 4, !dbg !3911
  %call27 = call zeroext i8 @modifier_isEnabled(%struct.Scene* %35, %struct.ModifierData* %36, i32 %37), !dbg !3912
  %tobool28 = icmp ne i8 %call27, 0, !dbg !3912
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !3913

if.then29:                                        ; preds = %for.body
  br label %for.inc, !dbg !3914

if.end30:                                         ; preds = %for.body
  %38 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !3915
  %type31 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %38, i32 0, i32 3, !dbg !3917
  %39 = load i32, i32* %type31, align 4, !dbg !3917
  %cmp32 = icmp ne i32 %39, 1, !dbg !3918
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !3919

if.then34:                                        ; preds = %if.end30
  br label %for.inc, !dbg !3920

if.end35:                                         ; preds = %if.end30
  %40 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !3921
  %tobool36 = icmp ne [3 x float]* %40, null, !dbg !3921
  br i1 %tobool36, label %if.end39, label %if.then37, !dbg !3923

if.then37:                                        ; preds = %if.end35
  %41 = load %struct.ListBase*, %struct.ListBase** %nurb.addr, align 8, !dbg !3924
  %call38 = call [3 x float]* @BKE_curve_nurbs_vertexCos_get(%struct.ListBase* %41, i32* %numVerts), !dbg !3926
  store [3 x float]* %call38, [3 x float]** %deformedVerts, align 8, !dbg !3927
  br label %if.end39, !dbg !3928

if.end39:                                         ; preds = %if.then37, %if.end35
  %42 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !3929
  %deformVerts = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %42, i32 0, i32 6, !dbg !3930
  %43 = load void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, i32, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, i32, i32)** %deformVerts, align 8, !dbg !3930
  %44 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !3931
  %45 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3932
  %46 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !3933
  %47 = load i32, i32* %numVerts, align 4, !dbg !3934
  %48 = load i32, i32* %app_flag, align 4, !dbg !3935
  call void %43(%struct.ModifierData* %44, %struct.Object* %45, %struct.DerivedMesh* null, [3 x float]* %46, i32 %47, i32 %48), !dbg !3929
  %49 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !3936
  %50 = load %struct.ModifierData*, %struct.ModifierData** %pretessellatePoint, align 8, !dbg !3938
  %cmp40 = icmp eq %struct.ModifierData* %49, %50, !dbg !3939
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !3940

if.then42:                                        ; preds = %if.end39
  br label %for.end, !dbg !3941

if.end43:                                         ; preds = %if.end39
  br label %for.inc, !dbg !3942

for.inc:                                          ; preds = %if.end43, %if.then34, %if.then29
  %51 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !3943
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %51, i32 0, i32 0, !dbg !3944
  %52 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !3944
  store %struct.ModifierData* %52, %struct.ModifierData** %md, align 8, !dbg !3945
  br label %for.cond, !dbg !3946, !llvm.loop !3947

for.end:                                          ; preds = %if.then42, %for.cond
  br label %if.end44, !dbg !3949

if.end44:                                         ; preds = %for.end, %if.end21
  %53 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !3950
  %tobool45 = icmp ne [3 x float]* %53, null, !dbg !3950
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !3952

if.then46:                                        ; preds = %if.end44
  %54 = load %struct.ListBase*, %struct.ListBase** %nurb.addr, align 8, !dbg !3953
  %55 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !3955
  call void @BK_curve_nurbs_vertexCos_apply(%struct.ListBase* %54, [3 x float]* %55), !dbg !3956
  %56 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3957
  %57 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !3958
  %58 = bitcast [3 x float]* %57 to i8*, !dbg !3958
  call void %56(i8* %58), !dbg !3957
  br label %if.end47, !dbg !3959

if.end47:                                         ; preds = %if.then46, %if.end44
  %59 = load float*, float** %keyVerts, align 8, !dbg !3960
  %tobool48 = icmp ne float* %59, null, !dbg !3960
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !3962

if.then49:                                        ; preds = %if.end47
  %60 = load %struct.ListBase*, %struct.ListBase** %nurb.addr, align 8, !dbg !3963
  %61 = load float*, float** %keyVerts, align 8, !dbg !3964
  call void @BKE_curve_nurbs_keyVertexTilts_apply(%struct.ListBase* %60, float* %61), !dbg !3965
  br label %if.end50, !dbg !3965

if.end50:                                         ; preds = %if.then49, %if.end47
  %62 = load float*, float** %keyVerts, align 8, !dbg !3966
  %tobool51 = icmp ne float* %62, null, !dbg !3966
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !3968

if.then52:                                        ; preds = %if.end50
  %63 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3969
  %64 = load float*, float** %keyVerts, align 8, !dbg !3970
  %65 = bitcast float* %64 to i8*, !dbg !3970
  call void %63(i8* %65), !dbg !3969
  br label %if.end53, !dbg !3969

if.end53:                                         ; preds = %if.then52, %if.end50
  ret void, !dbg !3971
}

declare dso_local zeroext i8 @BKE_nurb_check_valid_uv(%struct.Nurb*) #2

declare dso_local void @BKE_nurb_makeCurve(%struct.Nurb*, float*, float*, float*, float*, i32, i32) #2

declare dso_local void @BKE_nurb_makeFaces(%struct.Nurb*, float*, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @displist_surf_indices(%struct.DispList* %dl) #0 !dbg !3972 {
entry:
  %dl.addr = alloca %struct.DispList*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %p1 = alloca i32, align 4
  %p2 = alloca i32, align 4
  %p3 = alloca i32, align 4
  %p4 = alloca i32, align 4
  %index = alloca i32*, align 8
  store %struct.DispList* %dl, %struct.DispList** %dl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl.addr, metadata !3973, metadata !DIExpression()), !dbg !3974
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3975, metadata !DIExpression()), !dbg !3976
  call void @llvm.dbg.declare(metadata i32* %b, metadata !3977, metadata !DIExpression()), !dbg !3978
  call void @llvm.dbg.declare(metadata i32* %p1, metadata !3979, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.declare(metadata i32* %p2, metadata !3981, metadata !DIExpression()), !dbg !3982
  call void @llvm.dbg.declare(metadata i32* %p3, metadata !3983, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.declare(metadata i32* %p4, metadata !3985, metadata !DIExpression()), !dbg !3986
  call void @llvm.dbg.declare(metadata i32** %index, metadata !3987, metadata !DIExpression()), !dbg !3988
  %0 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !3989
  %totindex = getelementptr inbounds %struct.DispList, %struct.DispList* %0, i32 0, i32 12, !dbg !3990
  store i32 0, i32* %totindex, align 4, !dbg !3991
  %1 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3992
  %2 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !3993
  %parts = getelementptr inbounds %struct.DispList, %struct.DispList* %2, i32 0, i32 4, !dbg !3994
  %3 = load i32, i32* %parts, align 4, !dbg !3994
  %add = add nsw i32 %3, 1, !dbg !3995
  %conv = sext i32 %add to i64, !dbg !3996
  %mul = mul i64 16, %conv, !dbg !3997
  %4 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !3998
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %4, i32 0, i32 5, !dbg !3999
  %5 = load i32, i32* %nr, align 8, !dbg !3999
  %add1 = add nsw i32 %5, 1, !dbg !4000
  %conv2 = sext i32 %add1 to i64, !dbg !4001
  %mul3 = mul i64 %mul, %conv2, !dbg !4002
  %call = call i8* %1(i64 %mul3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0)), !dbg !3992
  %6 = bitcast i8* %call to i32*, !dbg !3992
  %7 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !4003
  %index4 = getelementptr inbounds %struct.DispList, %struct.DispList* %7, i32 0, i32 10, !dbg !4004
  store i32* %6, i32** %index4, align 8, !dbg !4005
  store i32* %6, i32** %index, align 8, !dbg !4006
  store i32 0, i32* %a, align 4, !dbg !4007
  br label %for.cond, !dbg !4009

for.cond:                                         ; preds = %for.inc23, %entry
  %8 = load i32, i32* %a, align 4, !dbg !4010
  %9 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !4012
  %parts5 = getelementptr inbounds %struct.DispList, %struct.DispList* %9, i32 0, i32 4, !dbg !4013
  %10 = load i32, i32* %parts5, align 4, !dbg !4013
  %cmp = icmp slt i32 %8, %10, !dbg !4014
  br i1 %cmp, label %for.body, label %for.end25, !dbg !4015

for.body:                                         ; preds = %for.cond
  %11 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !4016
  %12 = load i32, i32* %a, align 4, !dbg !4019
  %call7 = call zeroext i8 @BKE_displist_surfindex_get(%struct.DispList* %11, i32 %12, i32* %b, i32* %p1, i32* %p2, i32* %p3, i32* %p4), !dbg !4020
  %conv8 = zext i8 %call7 to i32, !dbg !4020
  %cmp9 = icmp eq i32 %conv8, 0, !dbg !4021
  br i1 %cmp9, label %if.then, label %if.end, !dbg !4022

if.then:                                          ; preds = %for.body
  br label %for.end25, !dbg !4023

if.end:                                           ; preds = %for.body
  br label %for.cond11, !dbg !4024

for.cond11:                                       ; preds = %for.inc, %if.end
  %13 = load i32, i32* %b, align 4, !dbg !4025
  %14 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !4028
  %nr12 = getelementptr inbounds %struct.DispList, %struct.DispList* %14, i32 0, i32 5, !dbg !4029
  %15 = load i32, i32* %nr12, align 8, !dbg !4029
  %cmp13 = icmp slt i32 %13, %15, !dbg !4030
  br i1 %cmp13, label %for.body15, label %for.end, !dbg !4031

for.body15:                                       ; preds = %for.cond11
  %16 = load i32, i32* %p1, align 4, !dbg !4032
  %17 = load i32*, i32** %index, align 8, !dbg !4034
  %arrayidx = getelementptr inbounds i32, i32* %17, i64 0, !dbg !4034
  store i32 %16, i32* %arrayidx, align 4, !dbg !4035
  %18 = load i32, i32* %p2, align 4, !dbg !4036
  %19 = load i32*, i32** %index, align 8, !dbg !4037
  %arrayidx16 = getelementptr inbounds i32, i32* %19, i64 1, !dbg !4037
  store i32 %18, i32* %arrayidx16, align 4, !dbg !4038
  %20 = load i32, i32* %p4, align 4, !dbg !4039
  %21 = load i32*, i32** %index, align 8, !dbg !4040
  %arrayidx17 = getelementptr inbounds i32, i32* %21, i64 2, !dbg !4040
  store i32 %20, i32* %arrayidx17, align 4, !dbg !4041
  %22 = load i32, i32* %p3, align 4, !dbg !4042
  %23 = load i32*, i32** %index, align 8, !dbg !4043
  %arrayidx18 = getelementptr inbounds i32, i32* %23, i64 3, !dbg !4043
  store i32 %22, i32* %arrayidx18, align 4, !dbg !4044
  %24 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !4045
  %totindex19 = getelementptr inbounds %struct.DispList, %struct.DispList* %24, i32 0, i32 12, !dbg !4046
  %25 = load i32, i32* %totindex19, align 4, !dbg !4047
  %inc = add nsw i32 %25, 1, !dbg !4047
  store i32 %inc, i32* %totindex19, align 4, !dbg !4047
  %26 = load i32, i32* %p1, align 4, !dbg !4048
  store i32 %26, i32* %p2, align 4, !dbg !4049
  %27 = load i32, i32* %p1, align 4, !dbg !4050
  %inc20 = add nsw i32 %27, 1, !dbg !4050
  store i32 %inc20, i32* %p1, align 4, !dbg !4050
  %28 = load i32, i32* %p3, align 4, !dbg !4051
  store i32 %28, i32* %p4, align 4, !dbg !4052
  %29 = load i32, i32* %p3, align 4, !dbg !4053
  %inc21 = add nsw i32 %29, 1, !dbg !4053
  store i32 %inc21, i32* %p3, align 4, !dbg !4053
  br label %for.inc, !dbg !4054

for.inc:                                          ; preds = %for.body15
  %30 = load i32, i32* %b, align 4, !dbg !4055
  %inc22 = add nsw i32 %30, 1, !dbg !4055
  store i32 %inc22, i32* %b, align 4, !dbg !4055
  %31 = load i32*, i32** %index, align 8, !dbg !4056
  %add.ptr = getelementptr inbounds i32, i32* %31, i64 4, !dbg !4056
  store i32* %add.ptr, i32** %index, align 8, !dbg !4056
  br label %for.cond11, !dbg !4057, !llvm.loop !4058

for.end:                                          ; preds = %for.cond11
  br label %for.inc23, !dbg !4060

for.inc23:                                        ; preds = %for.end
  %32 = load i32, i32* %a, align 4, !dbg !4061
  %inc24 = add nsw i32 %32, 1, !dbg !4061
  store i32 %inc24, i32* %a, align 4, !dbg !4061
  br label %for.cond, !dbg !4062, !llvm.loop !4063

for.end25:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !4065
}

; Function Attrs: noinline nounwind uwtable
define internal void @curve_calc_modifiers_post(%struct.Scene* %scene, %struct.Object* %ob, %struct.ListBase* %nurb, %struct.ListBase* %dispbase, %struct.DerivedMesh** %r_dm_final, i8 zeroext %for_render, i8 zeroext %use_render_resolution) #0 !dbg !4066 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nurb.addr = alloca %struct.ListBase*, align 8
  %dispbase.addr = alloca %struct.ListBase*, align 8
  %r_dm_final.addr = alloca %struct.DerivedMesh**, align 8
  %for_render.addr = alloca i8, align 1
  %use_render_resolution.addr = alloca i8, align 1
  %virtualModifierData = alloca %struct.VirtualModifierData, align 8
  %md = alloca %struct.ModifierData*, align 8
  %pretessellatePoint = alloca %struct.ModifierData*, align 8
  %cu = alloca %struct.Curve*, align 8
  %required_mode = alloca i32, align 4
  %totvert = alloca i32, align 4
  %editmode = alloca i8, align 1
  %dm = alloca %struct.DerivedMesh*, align 8
  %ndm = alloca %struct.DerivedMesh*, align 8
  %vertCos = alloca [3 x float]*, align 8
  %useCache = alloca i32, align 4
  %app_flag = alloca i32, align 4
  %mti = alloca %struct.ModifierTypeInfo*, align 8
  %appf = alloca i32, align 4
  %tdm = alloca %struct.DerivedMesh*, align 8
  %tdm105 = alloca %struct.DerivedMesh*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4069, metadata !DIExpression()), !dbg !4070
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4071, metadata !DIExpression()), !dbg !4072
  store %struct.ListBase* %nurb, %struct.ListBase** %nurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nurb.addr, metadata !4073, metadata !DIExpression()), !dbg !4074
  store %struct.ListBase* %dispbase, %struct.ListBase** %dispbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dispbase.addr, metadata !4075, metadata !DIExpression()), !dbg !4076
  store %struct.DerivedMesh** %r_dm_final, %struct.DerivedMesh*** %r_dm_final.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh*** %r_dm_final.addr, metadata !4077, metadata !DIExpression()), !dbg !4078
  store i8 %for_render, i8* %for_render.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %for_render.addr, metadata !4079, metadata !DIExpression()), !dbg !4080
  store i8 %use_render_resolution, i8* %use_render_resolution.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_render_resolution.addr, metadata !4081, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.declare(metadata %struct.VirtualModifierData* %virtualModifierData, metadata !4083, metadata !DIExpression()), !dbg !4084
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !4085, metadata !DIExpression()), !dbg !4086
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4087
  %call = call %struct.ModifierData* @modifiers_getVirtualModifierList(%struct.Object* %0, %struct.VirtualModifierData* %virtualModifierData), !dbg !4088
  store %struct.ModifierData* %call, %struct.ModifierData** %md, align 8, !dbg !4086
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %pretessellatePoint, metadata !4089, metadata !DIExpression()), !dbg !4090
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !4091, metadata !DIExpression()), !dbg !4092
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4093
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !4094
  %2 = load i8*, i8** %data, align 8, !dbg !4094
  %3 = bitcast i8* %2 to %struct.Curve*, !dbg !4093
  store %struct.Curve* %3, %struct.Curve** %cu, align 8, !dbg !4092
  call void @llvm.dbg.declare(metadata i32* %required_mode, metadata !4095, metadata !DIExpression()), !dbg !4096
  store i32 0, i32* %required_mode, align 4, !dbg !4096
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !4097, metadata !DIExpression()), !dbg !4098
  store i32 0, i32* %totvert, align 4, !dbg !4098
  call void @llvm.dbg.declare(metadata i8* %editmode, metadata !4099, metadata !DIExpression()), !dbg !4100
  %4 = load i8, i8* %for_render.addr, align 1, !dbg !4101
  %tobool = icmp ne i8 %4, 0, !dbg !4101
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !4102

land.rhs:                                         ; preds = %entry
  %5 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4103
  %editnurb = getelementptr inbounds %struct.Curve, %struct.Curve* %5, i32 0, i32 4, !dbg !4104
  %6 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4104
  %tobool1 = icmp ne %struct.EditNurb* %6, null, !dbg !4103
  br i1 %tobool1, label %lor.end, label %lor.rhs, !dbg !4105

lor.rhs:                                          ; preds = %land.rhs
  %7 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4106
  %editfont = getelementptr inbounds %struct.Curve, %struct.Curve* %7, i32 0, i32 53, !dbg !4107
  %8 = load %struct.EditFont*, %struct.EditFont** %editfont, align 8, !dbg !4107
  %tobool2 = icmp ne %struct.EditFont* %8, null, !dbg !4105
  br label %lor.end, !dbg !4105

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %9 = phi i1 [ true, %land.rhs ], [ %tobool2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %entry
  %10 = phi i1 [ false, %entry ], [ %9, %lor.end ], !dbg !4108
  %land.ext = zext i1 %10 to i32, !dbg !4102
  %conv = trunc i32 %land.ext to i8, !dbg !4109
  store i8 %conv, i8* %editmode, align 1, !dbg !4100
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !4110, metadata !DIExpression()), !dbg !4111
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %dm, align 8, !dbg !4111
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %ndm, metadata !4112, metadata !DIExpression()), !dbg !4113
  call void @llvm.dbg.declare(metadata [3 x float]** %vertCos, metadata !4114, metadata !DIExpression()), !dbg !4115
  store [3 x float]* null, [3 x float]** %vertCos, align 8, !dbg !4115
  call void @llvm.dbg.declare(metadata i32* %useCache, metadata !4116, metadata !DIExpression()), !dbg !4117
  %11 = load i8, i8* %for_render.addr, align 1, !dbg !4118
  %tobool3 = icmp ne i8 %11, 0, !dbg !4119
  %lnot = xor i1 %tobool3, true, !dbg !4119
  %lnot.ext = zext i1 %lnot to i32, !dbg !4119
  store i32 %lnot.ext, i32* %useCache, align 4, !dbg !4117
  call void @llvm.dbg.declare(metadata i32* %app_flag, metadata !4120, metadata !DIExpression()), !dbg !4121
  store i32 0, i32* %app_flag, align 4, !dbg !4121
  %12 = load i8, i8* %use_render_resolution.addr, align 1, !dbg !4122
  %tobool4 = icmp ne i8 %12, 0, !dbg !4122
  br i1 %tobool4, label %if.then, label %if.else, !dbg !4124

if.then:                                          ; preds = %land.end
  %13 = load i32, i32* %app_flag, align 4, !dbg !4125
  %or = or i32 %13, 1, !dbg !4125
  store i32 %or, i32* %app_flag, align 4, !dbg !4125
  store i32 2, i32* %required_mode, align 4, !dbg !4127
  br label %if.end, !dbg !4128

if.else:                                          ; preds = %land.end
  store i32 1, i32* %required_mode, align 4, !dbg !4129
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4130
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4131
  %16 = load i8, i8* %use_render_resolution.addr, align 1, !dbg !4132
  %17 = load i8, i8* %editmode, align 1, !dbg !4133
  %call5 = call %struct.ModifierData* @curve_get_tessellate_point(%struct.Scene* %14, %struct.Object* %15, i8 zeroext %16, i8 zeroext %17), !dbg !4134
  store %struct.ModifierData* %call5, %struct.ModifierData** %pretessellatePoint, align 8, !dbg !4135
  %18 = load i8, i8* %editmode, align 1, !dbg !4136
  %tobool6 = icmp ne i8 %18, 0, !dbg !4136
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !4138

if.then7:                                         ; preds = %if.end
  %19 = load i32, i32* %required_mode, align 4, !dbg !4139
  %or8 = or i32 %19, 4, !dbg !4139
  store i32 %or8, i32* %required_mode, align 4, !dbg !4139
  br label %if.end9, !dbg !4140

if.end9:                                          ; preds = %if.then7, %if.end
  %20 = load %struct.ModifierData*, %struct.ModifierData** %pretessellatePoint, align 8, !dbg !4141
  %tobool10 = icmp ne %struct.ModifierData* %20, null, !dbg !4141
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !4143

if.then11:                                        ; preds = %if.end9
  %21 = load %struct.ModifierData*, %struct.ModifierData** %pretessellatePoint, align 8, !dbg !4144
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %21, i32 0, i32 0, !dbg !4146
  %22 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !4146
  store %struct.ModifierData* %22, %struct.ModifierData** %md, align 8, !dbg !4147
  br label %if.end12, !dbg !4148

if.end12:                                         ; preds = %if.then11, %if.end9
  %23 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %r_dm_final.addr, align 8, !dbg !4149
  %tobool13 = icmp ne %struct.DerivedMesh** %23, null, !dbg !4149
  br i1 %tobool13, label %land.lhs.true, label %if.end16, !dbg !4151

land.lhs.true:                                    ; preds = %if.end12
  %24 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %r_dm_final.addr, align 8, !dbg !4152
  %25 = load %struct.DerivedMesh*, %struct.DerivedMesh** %24, align 8, !dbg !4153
  %tobool14 = icmp ne %struct.DerivedMesh* %25, null, !dbg !4153
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !4154

if.then15:                                        ; preds = %land.lhs.true
  %26 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %r_dm_final.addr, align 8, !dbg !4155
  %27 = load %struct.DerivedMesh*, %struct.DerivedMesh** %26, align 8, !dbg !4157
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %27, i32 0, i32 95, !dbg !4158
  %28 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !4158
  %29 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %r_dm_final.addr, align 8, !dbg !4159
  %30 = load %struct.DerivedMesh*, %struct.DerivedMesh** %29, align 8, !dbg !4160
  call void %28(%struct.DerivedMesh* %30), !dbg !4161
  br label %if.end16, !dbg !4162

if.end16:                                         ; preds = %if.then15, %land.lhs.true, %if.end12
  br label %for.cond, !dbg !4163

for.cond:                                         ; preds = %for.inc, %if.end16
  %31 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !4164
  %tobool17 = icmp ne %struct.ModifierData* %31, null, !dbg !4167
  br i1 %tobool17, label %for.body, label %for.end, !dbg !4167

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ModifierTypeInfo** %mti, metadata !4168, metadata !DIExpression()), !dbg !4170
  %32 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !4171
  %type = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %32, i32 0, i32 2, !dbg !4172
  %33 = load i32, i32* %type, align 8, !dbg !4172
  %call18 = call %struct.ModifierTypeInfo* @modifierType_getInfo(i32 %33), !dbg !4173
  store %struct.ModifierTypeInfo* %call18, %struct.ModifierTypeInfo** %mti, align 8, !dbg !4170
  call void @llvm.dbg.declare(metadata i32* %appf, metadata !4174, metadata !DIExpression()), !dbg !4175
  %34 = load i32, i32* %app_flag, align 4, !dbg !4176
  store i32 %34, i32* %appf, align 4, !dbg !4175
  %35 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4177
  %36 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !4178
  %scene19 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %36, i32 0, i32 7, !dbg !4179
  store %struct.Scene* %35, %struct.Scene** %scene19, align 8, !dbg !4180
  %37 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4181
  %38 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !4183
  %39 = load i32, i32* %required_mode, align 4, !dbg !4184
  %call20 = call zeroext i8 @modifier_isEnabled(%struct.Scene* %37, %struct.ModifierData* %38, i32 %39), !dbg !4185
  %tobool21 = icmp ne i8 %call20, 0, !dbg !4185
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !4186

if.then22:                                        ; preds = %for.body
  br label %for.inc, !dbg !4187

if.end23:                                         ; preds = %for.body
  %40 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !4188
  %type24 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %40, i32 0, i32 3, !dbg !4190
  %41 = load i32, i32* %type24, align 4, !dbg !4190
  %cmp = icmp eq i32 %41, 1, !dbg !4191
  br i1 %cmp, label %if.then31, label %lor.lhs.false, !dbg !4192

lor.lhs.false:                                    ; preds = %if.end23
  %42 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !4193
  %type26 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %42, i32 0, i32 3, !dbg !4194
  %43 = load i32, i32* %type26, align 4, !dbg !4194
  %cmp27 = icmp eq i32 %43, 4, !dbg !4195
  br i1 %cmp27, label %land.lhs.true29, label %if.else51, !dbg !4196

land.lhs.true29:                                  ; preds = %lor.lhs.false
  %44 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4197
  %tobool30 = icmp ne %struct.DerivedMesh* %44, null, !dbg !4197
  br i1 %tobool30, label %if.else51, label %if.then31, !dbg !4198

if.then31:                                        ; preds = %land.lhs.true29, %if.end23
  %45 = load i8, i8* %editmode, align 1, !dbg !4199
  %tobool32 = icmp ne i8 %45, 0, !dbg !4199
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !4202

if.then33:                                        ; preds = %if.then31
  %46 = load i32, i32* %appf, align 4, !dbg !4203
  %or34 = or i32 %46, 2, !dbg !4203
  store i32 %or34, i32* %appf, align 4, !dbg !4203
  br label %if.end35, !dbg !4204

if.end35:                                         ; preds = %if.then33, %if.then31
  %47 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4205
  %tobool36 = icmp ne %struct.DerivedMesh* %47, null, !dbg !4205
  br i1 %tobool36, label %if.then37, label %if.else44, !dbg !4207

if.then37:                                        ; preds = %if.end35
  %48 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !4208
  %tobool38 = icmp ne [3 x float]* %48, null, !dbg !4208
  br i1 %tobool38, label %if.end43, label %if.then39, !dbg !4211

if.then39:                                        ; preds = %if.then37
  %49 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4212
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %49, i32 0, i32 23, !dbg !4214
  %50 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !4214
  %51 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4215
  %call40 = call i32 %50(%struct.DerivedMesh* %51), !dbg !4212
  store i32 %call40, i32* %totvert, align 4, !dbg !4216
  %52 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4217
  %53 = load i32, i32* %totvert, align 4, !dbg !4218
  %conv41 = sext i32 %53 to i64, !dbg !4218
  %mul = mul i64 12, %conv41, !dbg !4219
  %call42 = call i8* %52(i64 %mul, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)), !dbg !4217
  %54 = bitcast i8* %call42 to [3 x float]*, !dbg !4217
  store [3 x float]* %54, [3 x float]** %vertCos, align 8, !dbg !4220
  %55 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4221
  %getVertCos = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %55, i32 0, i32 77, !dbg !4222
  %56 = load void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, [3 x float]*)** %getVertCos, align 8, !dbg !4222
  %57 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4223
  %58 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !4224
  call void %56(%struct.DerivedMesh* %57, [3 x float]* %58), !dbg !4221
  br label %if.end43, !dbg !4225

if.end43:                                         ; preds = %if.then39, %if.then37
  %59 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !4226
  %deformVerts = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %59, i32 0, i32 6, !dbg !4227
  %60 = load void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, i32, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, i32, i32)** %deformVerts, align 8, !dbg !4227
  %61 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !4228
  %62 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4229
  %63 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4230
  %64 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !4231
  %65 = load i32, i32* %totvert, align 4, !dbg !4232
  %66 = load i32, i32* %appf, align 4, !dbg !4233
  call void %60(%struct.ModifierData* %61, %struct.Object* %62, %struct.DerivedMesh* %63, [3 x float]* %64, i32 %65, i32 %66), !dbg !4226
  br label %if.end50, !dbg !4234

if.else44:                                        ; preds = %if.end35
  %67 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !4235
  %tobool45 = icmp ne [3 x float]* %67, null, !dbg !4235
  br i1 %tobool45, label %if.end48, label %if.then46, !dbg !4238

if.then46:                                        ; preds = %if.else44
  %68 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !4239
  %call47 = call [3 x float]* @displist_get_allverts(%struct.ListBase* %68, i32* %totvert), !dbg !4241
  store [3 x float]* %call47, [3 x float]** %vertCos, align 8, !dbg !4242
  br label %if.end48, !dbg !4243

if.end48:                                         ; preds = %if.then46, %if.else44
  %69 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !4244
  %deformVerts49 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %69, i32 0, i32 6, !dbg !4245
  %70 = load void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, i32, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, i32, i32)** %deformVerts49, align 8, !dbg !4245
  %71 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !4246
  %72 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4247
  %73 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !4248
  %74 = load i32, i32* %totvert, align 4, !dbg !4249
  %75 = load i32, i32* %appf, align 4, !dbg !4250
  call void %70(%struct.ModifierData* %71, %struct.Object* %72, %struct.DerivedMesh* null, [3 x float]* %73, i32 %74, i32 %75), !dbg !4244
  br label %if.end50

if.end50:                                         ; preds = %if.end48, %if.end43
  br label %if.end99, !dbg !4251

if.else51:                                        ; preds = %land.lhs.true29, %lor.lhs.false
  %76 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %r_dm_final.addr, align 8, !dbg !4252
  %tobool52 = icmp ne %struct.DerivedMesh** %76, null, !dbg !4252
  br i1 %tobool52, label %if.end54, label %if.then53, !dbg !4255

if.then53:                                        ; preds = %if.else51
  br label %for.end, !dbg !4256

if.end54:                                         ; preds = %if.else51
  %77 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4258
  %tobool55 = icmp ne %struct.DerivedMesh* %77, null, !dbg !4258
  br i1 %tobool55, label %if.then56, label %if.else62, !dbg !4260

if.then56:                                        ; preds = %if.end54
  %78 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !4261
  %tobool57 = icmp ne [3 x float]* %78, null, !dbg !4261
  br i1 %tobool57, label %if.then58, label %if.end61, !dbg !4264

if.then58:                                        ; preds = %if.then56
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %tdm, metadata !4265, metadata !DIExpression()), !dbg !4267
  %79 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4268
  %call59 = call %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh* %79), !dbg !4269
  store %struct.DerivedMesh* %call59, %struct.DerivedMesh** %tdm, align 8, !dbg !4267
  %80 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4270
  %release60 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %80, i32 0, i32 95, !dbg !4271
  %81 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release60, align 8, !dbg !4271
  %82 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4272
  call void %81(%struct.DerivedMesh* %82), !dbg !4270
  %83 = load %struct.DerivedMesh*, %struct.DerivedMesh** %tdm, align 8, !dbg !4273
  store %struct.DerivedMesh* %83, %struct.DerivedMesh** %dm, align 8, !dbg !4274
  %84 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4275
  %85 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !4276
  call void @CDDM_apply_vert_coords(%struct.DerivedMesh* %84, [3 x float]* %85), !dbg !4277
  br label %if.end61, !dbg !4278

if.end61:                                         ; preds = %if.then58, %if.then56
  br label %if.end80, !dbg !4279

if.else62:                                        ; preds = %if.end54
  %86 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !4280
  %tobool63 = icmp ne [3 x float]* %86, null, !dbg !4280
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !4283

if.then64:                                        ; preds = %if.else62
  %87 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !4284
  %88 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !4286
  call void @displist_apply_allverts(%struct.ListBase* %87, [3 x float]* %88), !dbg !4287
  br label %if.end65, !dbg !4288

if.end65:                                         ; preds = %if.then64, %if.else62
  %89 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4289
  %type66 = getelementptr inbounds %struct.Object, %struct.Object* %89, i32 0, i32 3, !dbg !4289
  %90 = load i16, i16* %type66, align 8, !dbg !4289
  %conv67 = sext i16 %90 to i32, !dbg !4289
  %cmp68 = icmp eq i32 %conv67, 2, !dbg !4289
  br i1 %cmp68, label %land.lhs.true75, label %lor.lhs.false70, !dbg !4289

lor.lhs.false70:                                  ; preds = %if.end65
  %91 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4289
  %type71 = getelementptr inbounds %struct.Object, %struct.Object* %91, i32 0, i32 3, !dbg !4289
  %92 = load i16, i16* %type71, align 8, !dbg !4289
  %conv72 = sext i16 %92 to i32, !dbg !4289
  %cmp73 = icmp eq i32 %conv72, 4, !dbg !4289
  br i1 %cmp73, label %land.lhs.true75, label %if.end78, !dbg !4291

land.lhs.true75:                                  ; preds = %lor.lhs.false70, %if.end65
  %93 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4292
  %flag = getelementptr inbounds %struct.Curve, %struct.Curve* %93, i32 0, i32 23, !dbg !4293
  %94 = load i32, i32* %flag, align 4, !dbg !4293
  %and = and i32 %94, 8192, !dbg !4294
  %tobool76 = icmp ne i32 %and, 0, !dbg !4294
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !4295

if.then77:                                        ; preds = %land.lhs.true75
  %95 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4296
  %96 = load %struct.ListBase*, %struct.ListBase** %nurb.addr, align 8, !dbg !4298
  %97 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !4299
  call void @curve_to_filledpoly(%struct.Curve* %95, %struct.ListBase* %96, %struct.ListBase* %97), !dbg !4300
  br label %if.end78, !dbg !4301

if.end78:                                         ; preds = %if.then77, %land.lhs.true75, %lor.lhs.false70
  %98 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4302
  %99 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !4303
  %call79 = call %struct.DerivedMesh* @CDDM_from_curve_displist(%struct.Object* %98, %struct.ListBase* %99), !dbg !4304
  store %struct.DerivedMesh* %call79, %struct.DerivedMesh** %dm, align 8, !dbg !4305
  br label %if.end80

if.end80:                                         ; preds = %if.end78, %if.end61
  %100 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !4306
  %tobool81 = icmp ne [3 x float]* %100, null, !dbg !4306
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !4308

if.then82:                                        ; preds = %if.end80
  %101 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4309
  %102 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !4311
  %103 = bitcast [3 x float]* %102 to i8*, !dbg !4311
  call void %101(i8* %103), !dbg !4309
  store [3 x float]* null, [3 x float]** %vertCos, align 8, !dbg !4312
  br label %if.end83, !dbg !4313

if.end83:                                         ; preds = %if.then82, %if.end80
  %104 = load i32, i32* %useCache, align 4, !dbg !4314
  %tobool84 = icmp ne i32 %104, 0, !dbg !4314
  br i1 %tobool84, label %if.then85, label %if.end87, !dbg !4316

if.then85:                                        ; preds = %if.end83
  %105 = load i32, i32* %appf, align 4, !dbg !4317
  %or86 = or i32 %105, 2, !dbg !4317
  store i32 %or86, i32* %appf, align 4, !dbg !4317
  br label %if.end87, !dbg !4318

if.end87:                                         ; preds = %if.then85, %if.end83
  %106 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !4319
  %107 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4320
  %108 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4321
  %109 = load i32, i32* %appf, align 4, !dbg !4322
  %call88 = call %struct.DerivedMesh* @modwrap_applyModifier(%struct.ModifierData* %106, %struct.Object* %107, %struct.DerivedMesh* %108, i32 %109), !dbg !4323
  store %struct.DerivedMesh* %call88, %struct.DerivedMesh** %ndm, align 8, !dbg !4324
  %110 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !4325
  %tobool89 = icmp ne %struct.DerivedMesh* %110, null, !dbg !4325
  br i1 %tobool89, label %if.then90, label %if.end98, !dbg !4327

if.then90:                                        ; preds = %if.end87
  %111 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4328
  %tobool91 = icmp ne %struct.DerivedMesh* %111, null, !dbg !4328
  br i1 %tobool91, label %land.lhs.true92, label %if.end97, !dbg !4331

land.lhs.true92:                                  ; preds = %if.then90
  %112 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4332
  %113 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !4333
  %cmp93 = icmp ne %struct.DerivedMesh* %112, %113, !dbg !4334
  br i1 %cmp93, label %if.then95, label %if.end97, !dbg !4335

if.then95:                                        ; preds = %land.lhs.true92
  %114 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4336
  %release96 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %114, i32 0, i32 95, !dbg !4337
  %115 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release96, align 8, !dbg !4337
  %116 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4338
  call void %115(%struct.DerivedMesh* %116), !dbg !4336
  br label %if.end97, !dbg !4336

if.end97:                                         ; preds = %if.then95, %land.lhs.true92, %if.then90
  %117 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !4339
  store %struct.DerivedMesh* %117, %struct.DerivedMesh** %dm, align 8, !dbg !4340
  br label %if.end98, !dbg !4341

if.end98:                                         ; preds = %if.end97, %if.end87
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %if.end50
  br label %for.inc, !dbg !4342

for.inc:                                          ; preds = %if.end99, %if.then22
  %118 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !4343
  %next100 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %118, i32 0, i32 0, !dbg !4344
  %119 = load %struct.ModifierData*, %struct.ModifierData** %next100, align 8, !dbg !4344
  store %struct.ModifierData* %119, %struct.ModifierData** %md, align 8, !dbg !4345
  br label %for.cond, !dbg !4346, !llvm.loop !4347

for.end:                                          ; preds = %if.then53, %for.cond
  %120 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !4349
  %tobool101 = icmp ne [3 x float]* %120, null, !dbg !4349
  br i1 %tobool101, label %if.then102, label %if.end110, !dbg !4351

if.then102:                                       ; preds = %for.end
  %121 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4352
  %tobool103 = icmp ne %struct.DerivedMesh* %121, null, !dbg !4352
  br i1 %tobool103, label %if.then104, label %if.else108, !dbg !4355

if.then104:                                       ; preds = %if.then102
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %tdm105, metadata !4356, metadata !DIExpression()), !dbg !4358
  %122 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4359
  %call106 = call %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh* %122), !dbg !4360
  store %struct.DerivedMesh* %call106, %struct.DerivedMesh** %tdm105, align 8, !dbg !4358
  %123 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4361
  %release107 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %123, i32 0, i32 95, !dbg !4362
  %124 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release107, align 8, !dbg !4362
  %125 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4363
  call void %124(%struct.DerivedMesh* %125), !dbg !4361
  %126 = load %struct.DerivedMesh*, %struct.DerivedMesh** %tdm105, align 8, !dbg !4364
  store %struct.DerivedMesh* %126, %struct.DerivedMesh** %dm, align 8, !dbg !4365
  %127 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4366
  %128 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !4367
  call void @CDDM_apply_vert_coords(%struct.DerivedMesh* %127, [3 x float]* %128), !dbg !4368
  %129 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4369
  call void @CDDM_calc_normals_mapping(%struct.DerivedMesh* %129), !dbg !4370
  %130 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4371
  %131 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !4372
  %132 = bitcast [3 x float]* %131 to i8*, !dbg !4372
  call void %130(i8* %132), !dbg !4371
  br label %if.end109, !dbg !4373

if.else108:                                       ; preds = %if.then102
  %133 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !4374
  %134 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !4376
  call void @displist_apply_allverts(%struct.ListBase* %133, [3 x float]* %134), !dbg !4377
  %135 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4378
  %136 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !4379
  %137 = bitcast [3 x float]* %136 to i8*, !dbg !4379
  call void %135(i8* %137), !dbg !4378
  store [3 x float]* null, [3 x float]** %vertCos, align 8, !dbg !4380
  br label %if.end109

if.end109:                                        ; preds = %if.else108, %if.then104
  br label %if.end110, !dbg !4381

if.end110:                                        ; preds = %if.end109, %for.end
  %138 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %r_dm_final.addr, align 8, !dbg !4382
  %tobool111 = icmp ne %struct.DerivedMesh** %138, null, !dbg !4382
  br i1 %tobool111, label %if.then112, label %if.end135, !dbg !4384

if.then112:                                       ; preds = %if.end110
  %139 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4385
  %tobool113 = icmp ne %struct.DerivedMesh* %139, null, !dbg !4385
  br i1 %tobool113, label %if.then114, label %if.end134, !dbg !4388

if.then114:                                       ; preds = %if.then112
  %140 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4389
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %140, i32 0, i32 25, !dbg !4392
  %141 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !4392
  %142 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4393
  %call115 = call i32 %141(%struct.DerivedMesh* %142), !dbg !4389
  %cmp116 = icmp eq i32 %call115, 0, !dbg !4394
  br i1 %cmp116, label %if.then118, label %if.else119, !dbg !4395

if.then118:                                       ; preds = %if.then114
  %143 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4396
  %recalcTessellation = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %143, i32 0, i32 22, !dbg !4398
  %144 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %recalcTessellation, align 8, !dbg !4398
  %145 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4399
  call void %144(%struct.DerivedMesh* %145), !dbg !4396
  br label %if.end124, !dbg !4400

if.else119:                                       ; preds = %if.then114
  %146 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4401
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %146, i32 0, i32 16, !dbg !4403
  %147 = load i32, i32* %dirty, align 8, !dbg !4403
  %and120 = and i32 %147, 1, !dbg !4404
  %tobool121 = icmp ne i32 %and120, 0, !dbg !4404
  br i1 %tobool121, label %if.then122, label %if.end123, !dbg !4405

if.then122:                                       ; preds = %if.else119
  %148 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4406
  call void @DM_update_tessface_data(%struct.DerivedMesh* %148), !dbg !4408
  br label %if.end123, !dbg !4409

if.end123:                                        ; preds = %if.then122, %if.else119
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.then118
  %149 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4410
  %type125 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %149, i32 0, i32 14, !dbg !4412
  %150 = load i32, i32* %type125, align 8, !dbg !4412
  %cmp126 = icmp eq i32 %150, 0, !dbg !4413
  br i1 %cmp126, label %if.then128, label %if.end133, !dbg !4414

if.then128:                                       ; preds = %if.end124
  %151 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4415
  %152 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4417
  %dirty129 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %152, i32 0, i32 16, !dbg !4418
  %153 = load i32, i32* %dirty129, align 8, !dbg !4418
  %and130 = and i32 %153, 4, !dbg !4419
  %tobool131 = icmp ne i32 %and130, 0, !dbg !4420
  %154 = zext i1 %tobool131 to i64, !dbg !4420
  %cond = select i1 %tobool131, i32 0, i32 1, !dbg !4420
  %conv132 = trunc i32 %cond to i8, !dbg !4420
  call void @CDDM_calc_normals_mapping_ex(%struct.DerivedMesh* %151, i8 zeroext %conv132), !dbg !4421
  br label %if.end133, !dbg !4422

if.end133:                                        ; preds = %if.then128, %if.end124
  br label %if.end134, !dbg !4423

if.end134:                                        ; preds = %if.end133, %if.then112
  %155 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4424
  %156 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %r_dm_final.addr, align 8, !dbg !4425
  store %struct.DerivedMesh* %155, %struct.DerivedMesh** %156, align 8, !dbg !4426
  br label %if.end135, !dbg !4427

if.end135:                                        ; preds = %if.end134, %if.end110
  ret void, !dbg !4428
}

declare dso_local void @BKE_nurbList_free(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_displist_make_curveTypes(%struct.Scene* %scene, %struct.Object* %ob, i8 zeroext %for_orco) #0 !dbg !4429 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %for_orco.addr = alloca i8, align 1
  %dispbase = alloca %struct.ListBase*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4432, metadata !DIExpression()), !dbg !4433
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4434, metadata !DIExpression()), !dbg !4435
  store i8 %for_orco, i8* %for_orco.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %for_orco.addr, metadata !4436, metadata !DIExpression()), !dbg !4437
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dispbase, metadata !4438, metadata !DIExpression()), !dbg !4439
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4440
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !4440
  %1 = load i16, i16* %type, align 8, !dbg !4440
  %conv = sext i16 %1 to i32, !dbg !4440
  %cmp = icmp eq i32 %conv, 3, !dbg !4440
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !4440

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4440
  %type2 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !4440
  %3 = load i16, i16* %type2, align 8, !dbg !4440
  %conv3 = sext i16 %3 to i32, !dbg !4440
  %cmp4 = icmp eq i32 %conv3, 2, !dbg !4440
  br i1 %cmp4, label %if.end, label %lor.lhs.false6, !dbg !4440

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4440
  %type7 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 3, !dbg !4440
  %5 = load i16, i16* %type7, align 8, !dbg !4440
  %conv8 = sext i16 %5 to i32, !dbg !4440
  %cmp9 = icmp eq i32 %conv8, 4, !dbg !4440
  br i1 %cmp9, label %if.end, label %if.then, !dbg !4442

if.then:                                          ; preds = %lor.lhs.false6
  br label %return, !dbg !4443

if.end:                                           ; preds = %lor.lhs.false6, %lor.lhs.false, %entry
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4444
  call void @BKE_object_free_derived_caches(%struct.Object* %6), !dbg !4445
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4446
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 118, !dbg !4448
  %8 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !4448
  %tobool = icmp ne %struct.CurveCache* %8, null, !dbg !4446
  br i1 %tobool, label %if.end13, label %if.then11, !dbg !4449

if.then11:                                        ; preds = %if.end
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4450
  %call = call i8* %9(i64 56, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0)), !dbg !4450
  %10 = bitcast i8* %call to %struct.CurveCache*, !dbg !4450
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4452
  %curve_cache12 = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 118, !dbg !4453
  store %struct.CurveCache* %10, %struct.CurveCache** %curve_cache12, align 8, !dbg !4454
  br label %if.end13, !dbg !4455

if.end13:                                         ; preds = %if.then11, %if.end
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4456
  %curve_cache14 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 118, !dbg !4457
  %13 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache14, align 8, !dbg !4457
  %disp = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %13, i32 0, i32 0, !dbg !4458
  store %struct.ListBase* %disp, %struct.ListBase** %dispbase, align 8, !dbg !4459
  %14 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4460
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4461
  %16 = load %struct.ListBase*, %struct.ListBase** %dispbase, align 8, !dbg !4462
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4463
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 120, !dbg !4464
  %18 = load i8, i8* %for_orco.addr, align 1, !dbg !4465
  call void @do_makeDispListCurveTypes(%struct.Scene* %14, %struct.Object* %15, %struct.ListBase* %16, %struct.DerivedMesh** %derivedFinal, i8 zeroext 0, i8 zeroext %18, i8 zeroext 0), !dbg !4466
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4467
  call void @boundbox_displist_object(%struct.Object* %19), !dbg !4468
  br label %return, !dbg !4469

return:                                           ; preds = %if.end13, %if.then
  ret void, !dbg !4469
}

declare dso_local void @BKE_object_free_derived_caches(%struct.Object*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @do_makeDispListCurveTypes(%struct.Scene* %scene, %struct.Object* %ob, %struct.ListBase* %dispbase, %struct.DerivedMesh** %r_dm_final, i8 zeroext %for_render, i8 zeroext %for_orco, i8 zeroext %use_render_resolution) #0 !dbg !4470 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dispbase.addr = alloca %struct.ListBase*, align 8
  %r_dm_final.addr = alloca %struct.DerivedMesh**, align 8
  %for_render.addr = alloca i8, align 1
  %for_orco.addr = alloca i8, align 1
  %use_render_resolution.addr = alloca i8, align 1
  %cu = alloca %struct.Curve*, align 8
  %dlbev = alloca %struct.ListBase, align 8
  %nubase = alloca %struct.ListBase, align 8
  %widfac = alloca float, align 4
  %bl = alloca %struct.BevList*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %dl = alloca %struct.DispList*, align 8
  %data63 = alloca float*, align 8
  %a = alloca i32, align 4
  %bevp = alloca %struct.BevPoint*, align 8
  %dlb = alloca %struct.DispList*, align 8
  %bottom_capbase = alloca %struct.ListBase, align 8
  %top_capbase = alloca %struct.ListBase, align 8
  %bottom_no = alloca [3 x float], align 4
  %top_no = alloca [3 x float], align 4
  %firstblend = alloca float, align 4
  %lastblend = alloca float, align 4
  %i = alloca i32, align 4
  %start = alloca i32, align 4
  %steps = alloca i32, align 4
  %bevp_first = alloca %struct.BevPoint*, align 8
  %bevp_last = alloca %struct.BevPoint*, align 8
  %bevp121 = alloca %struct.BevPoint*, align 8
  %fac = alloca float, align 4
  %cur_data = alloca float*, align 8
  %len = alloca float, align 4
  %taper_fac = alloca float, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4471, metadata !DIExpression()), !dbg !4472
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4473, metadata !DIExpression()), !dbg !4474
  store %struct.ListBase* %dispbase, %struct.ListBase** %dispbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dispbase.addr, metadata !4475, metadata !DIExpression()), !dbg !4476
  store %struct.DerivedMesh** %r_dm_final, %struct.DerivedMesh*** %r_dm_final.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh*** %r_dm_final.addr, metadata !4477, metadata !DIExpression()), !dbg !4478
  store i8 %for_render, i8* %for_render.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %for_render.addr, metadata !4479, metadata !DIExpression()), !dbg !4480
  store i8 %for_orco, i8* %for_orco.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %for_orco.addr, metadata !4481, metadata !DIExpression()), !dbg !4482
  store i8 %use_render_resolution, i8* %use_render_resolution.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_render_resolution.addr, metadata !4483, metadata !DIExpression()), !dbg !4484
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !4485, metadata !DIExpression()), !dbg !4486
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4487
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !4488
  %1 = load i8*, i8** %data, align 8, !dbg !4488
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !4487
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !4486
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4489
  %type = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 3, !dbg !4489
  %4 = load i16, i16* %type, align 8, !dbg !4489
  %conv = sext i16 %4 to i32, !dbg !4489
  %cmp = icmp eq i32 %conv, 3, !dbg !4489
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !4489

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4489
  %type2 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 3, !dbg !4489
  %6 = load i16, i16* %type2, align 8, !dbg !4489
  %conv3 = sext i16 %6 to i32, !dbg !4489
  %cmp4 = icmp eq i32 %conv3, 2, !dbg !4489
  br i1 %cmp4, label %if.end, label %lor.lhs.false6, !dbg !4489

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4489
  %type7 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 3, !dbg !4489
  %8 = load i16, i16* %type7, align 8, !dbg !4489
  %conv8 = sext i16 %8 to i32, !dbg !4489
  %cmp9 = icmp eq i32 %conv8, 4, !dbg !4489
  br i1 %cmp9, label %if.end, label %if.then, !dbg !4491

if.then:                                          ; preds = %lor.lhs.false6
  br label %if.end341, !dbg !4492

if.end:                                           ; preds = %lor.lhs.false6, %lor.lhs.false, %entry
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4493
  %type11 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 3, !dbg !4495
  %10 = load i16, i16* %type11, align 8, !dbg !4495
  %conv12 = sext i16 %10 to i32, !dbg !4493
  %cmp13 = icmp eq i32 %conv12, 3, !dbg !4496
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !4497

if.then15:                                        ; preds = %if.end
  %11 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4498
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4500
  %13 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !4501
  %14 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %r_dm_final.addr, align 8, !dbg !4502
  %15 = load i8, i8* %for_render.addr, align 1, !dbg !4503
  %16 = load i8, i8* %for_orco.addr, align 1, !dbg !4504
  %17 = load i8, i8* %use_render_resolution.addr, align 1, !dbg !4505
  call void @BKE_displist_make_surf(%struct.Scene* %11, %struct.Object* %12, %struct.ListBase* %13, %struct.DerivedMesh** %14, i8 zeroext %15, i8 zeroext %16, i8 zeroext %17), !dbg !4506
  br label %if.end341, !dbg !4507

if.else:                                          ; preds = %if.end
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4508
  %type16 = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 3, !dbg !4508
  %19 = load i16, i16* %type16, align 8, !dbg !4508
  %conv17 = sext i16 %19 to i32, !dbg !4508
  %cmp18 = icmp eq i32 %conv17, 2, !dbg !4508
  br i1 %cmp18, label %if.then25, label %lor.lhs.false20, !dbg !4508

lor.lhs.false20:                                  ; preds = %if.else
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4508
  %type21 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 3, !dbg !4508
  %21 = load i16, i16* %type21, align 8, !dbg !4508
  %conv22 = sext i16 %21 to i32, !dbg !4508
  %cmp23 = icmp eq i32 %conv22, 4, !dbg !4508
  br i1 %cmp23, label %if.then25, label %if.end340, !dbg !4510

if.then25:                                        ; preds = %lor.lhs.false20, %if.else
  call void @llvm.dbg.declare(metadata %struct.ListBase* %dlbev, metadata !4511, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.declare(metadata %struct.ListBase* %nubase, metadata !4514, metadata !DIExpression()), !dbg !4515
  %22 = bitcast %struct.ListBase* %nubase to i8*, !dbg !4515
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false), !dbg !4515
  %23 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4516
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 118, !dbg !4517
  %24 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !4517
  %bev = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %24, i32 0, i32 1, !dbg !4518
  call void @BKE_curve_bevelList_free(%struct.ListBase* %bev), !dbg !4519
  %25 = load i8, i8* %for_orco.addr, align 1, !dbg !4520
  %tobool = icmp ne i8 %25, 0, !dbg !4520
  br i1 %tobool, label %if.end35, label %if.then26, !dbg !4522

if.then26:                                        ; preds = %if.then25
  %26 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4523
  %curve_cache27 = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 118, !dbg !4526
  %27 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache27, align 8, !dbg !4526
  %path = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %27, i32 0, i32 3, !dbg !4527
  %28 = load %struct.Path*, %struct.Path** %path, align 8, !dbg !4527
  %tobool28 = icmp ne %struct.Path* %28, null, !dbg !4523
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !4528

if.then29:                                        ; preds = %if.then26
  %29 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4529
  %curve_cache30 = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 118, !dbg !4530
  %30 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache30, align 8, !dbg !4530
  %path31 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %30, i32 0, i32 3, !dbg !4531
  %31 = load %struct.Path*, %struct.Path** %path31, align 8, !dbg !4531
  call void @free_path(%struct.Path* %31), !dbg !4532
  br label %if.end32, !dbg !4532

if.end32:                                         ; preds = %if.then29, %if.then26
  %32 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4533
  %curve_cache33 = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 118, !dbg !4534
  %33 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache33, align 8, !dbg !4534
  %path34 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %33, i32 0, i32 3, !dbg !4535
  store %struct.Path* null, %struct.Path** %path34, align 8, !dbg !4536
  br label %if.end35, !dbg !4537

if.end35:                                         ; preds = %if.end32, %if.then25
  %34 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4538
  %type36 = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 3, !dbg !4540
  %35 = load i16, i16* %type36, align 8, !dbg !4540
  %conv37 = sext i16 %35 to i32, !dbg !4538
  %cmp38 = icmp eq i32 %conv37, 4, !dbg !4541
  br i1 %cmp38, label %if.then40, label %if.else41, !dbg !4542

if.then40:                                        ; preds = %if.end35
  %36 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !4543
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4545
  %call = call zeroext i8 @BKE_vfont_to_curve_nubase(%struct.Main* %36, %struct.Object* %37, i32 0, %struct.ListBase* %nubase), !dbg !4546
  br label %if.end43, !dbg !4547

if.else41:                                        ; preds = %if.end35
  %38 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4548
  %call42 = call %struct.ListBase* @BKE_curve_nurbs_get(%struct.Curve* %38), !dbg !4550
  call void @BKE_nurbList_duplicate(%struct.ListBase* %nubase, %struct.ListBase* %call42), !dbg !4551
  br label %if.end43

if.end43:                                         ; preds = %if.else41, %if.then40
  %39 = load i8, i8* %for_orco.addr, align 1, !dbg !4552
  %tobool44 = icmp ne i8 %39, 0, !dbg !4552
  br i1 %tobool44, label %if.end46, label %if.then45, !dbg !4554

if.then45:                                        ; preds = %if.end43
  %40 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4555
  %41 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4556
  %42 = load i8, i8* %for_render.addr, align 1, !dbg !4557
  %43 = load i8, i8* %use_render_resolution.addr, align 1, !dbg !4558
  call void @curve_calc_modifiers_pre(%struct.Scene* %40, %struct.Object* %41, %struct.ListBase* %nubase, i8 zeroext %42, i8 zeroext %43), !dbg !4559
  br label %if.end46, !dbg !4559

if.end46:                                         ; preds = %if.then45, %if.end43
  %44 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4560
  %45 = load i8, i8* %for_render.addr, align 1, !dbg !4561
  %conv47 = zext i8 %45 to i32, !dbg !4561
  %cmp48 = icmp ne i32 %conv47, 0, !dbg !4562
  %conv49 = zext i1 %cmp48 to i32, !dbg !4562
  %conv50 = trunc i32 %conv49 to i8, !dbg !4561
  call void @BKE_curve_bevelList_make(%struct.Object* %44, %struct.ListBase* %nubase, i8 zeroext %conv50), !dbg !4563
  %46 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4564
  %47 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4565
  %48 = load i8, i8* %for_render.addr, align 1, !dbg !4566
  %49 = load i8, i8* %use_render_resolution.addr, align 1, !dbg !4567
  call void @BKE_curve_bevel_make(%struct.Scene* %46, %struct.Object* %47, %struct.ListBase* %dlbev, i8 zeroext %48, i8 zeroext %49), !dbg !4568
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %dlbev, i32 0, i32 0, !dbg !4569
  %50 = load i8*, i8** %first, align 8, !dbg !4569
  %tobool51 = icmp ne i8* %50, null, !dbg !4571
  br i1 %tobool51, label %if.else55, label %land.lhs.true, !dbg !4572

land.lhs.true:                                    ; preds = %if.end46
  %51 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4573
  %width = getelementptr inbounds %struct.Curve, %struct.Curve* %51, i32 0, i32 24, !dbg !4574
  %52 = load float, float* %width, align 8, !dbg !4574
  %cmp52 = fcmp oeq float %52, 1.000000e+00, !dbg !4575
  br i1 %cmp52, label %if.then54, label %if.else55, !dbg !4576

if.then54:                                        ; preds = %land.lhs.true
  %53 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4577
  %54 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !4579
  %55 = load i8, i8* %for_render.addr, align 1, !dbg !4580
  %56 = load i8, i8* %use_render_resolution.addr, align 1, !dbg !4581
  call void @curve_to_displist(%struct.Curve* %53, %struct.ListBase* %nubase, %struct.ListBase* %54, i8 zeroext %55, i8 zeroext %56), !dbg !4582
  br label %if.end310, !dbg !4583

if.else55:                                        ; preds = %land.lhs.true, %if.end46
  call void @llvm.dbg.declare(metadata float* %widfac, metadata !4584, metadata !DIExpression()), !dbg !4586
  %57 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4587
  %width56 = getelementptr inbounds %struct.Curve, %struct.Curve* %57, i32 0, i32 24, !dbg !4588
  %58 = load float, float* %width56, align 8, !dbg !4588
  %sub = fsub float %58, 1.000000e+00, !dbg !4589
  store float %sub, float* %widfac, align 4, !dbg !4586
  call void @llvm.dbg.declare(metadata %struct.BevList** %bl, metadata !4590, metadata !DIExpression()), !dbg !4624
  %59 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4625
  %curve_cache57 = getelementptr inbounds %struct.Object, %struct.Object* %59, i32 0, i32 118, !dbg !4626
  %60 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache57, align 8, !dbg !4626
  %bev58 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %60, i32 0, i32 1, !dbg !4627
  %first59 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %bev58, i32 0, i32 0, !dbg !4628
  %61 = load i8*, i8** %first59, align 8, !dbg !4628
  %62 = bitcast i8* %61 to %struct.BevList*, !dbg !4625
  store %struct.BevList* %62, %struct.BevList** %bl, align 8, !dbg !4624
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !4629, metadata !DIExpression()), !dbg !4630
  %first60 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nubase, i32 0, i32 0, !dbg !4631
  %63 = load i8*, i8** %first60, align 8, !dbg !4631
  %64 = bitcast i8* %63 to %struct.Nurb*, !dbg !4632
  store %struct.Nurb* %64, %struct.Nurb** %nu, align 8, !dbg !4630
  br label %for.cond, !dbg !4633

for.cond:                                         ; preds = %for.inc306, %if.else55
  %65 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !4634
  %tobool61 = icmp ne %struct.BevList* %65, null, !dbg !4634
  br i1 %tobool61, label %land.rhs, label %land.end, !dbg !4637

land.rhs:                                         ; preds = %for.cond
  %66 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4638
  %tobool62 = icmp ne %struct.Nurb* %66, null, !dbg !4637
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %67 = phi i1 [ false, %for.cond ], [ %tobool62, %land.rhs ], !dbg !4639
  br i1 %67, label %for.body, label %for.end309, !dbg !4640

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !4641, metadata !DIExpression()), !dbg !4643
  call void @llvm.dbg.declare(metadata float** %data63, metadata !4644, metadata !DIExpression()), !dbg !4645
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4646, metadata !DIExpression()), !dbg !4647
  %68 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !4648
  %nr = getelementptr inbounds %struct.BevList, %struct.BevList* %68, i32 0, i32 2, !dbg !4650
  %69 = load i32, i32* %nr, align 8, !dbg !4650
  %tobool64 = icmp ne i32 %69, 0, !dbg !4648
  br i1 %tobool64, label %if.then65, label %if.end305, !dbg !4651

if.then65:                                        ; preds = %for.body
  %call66 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %dlbev), !dbg !4652
  %tobool67 = icmp ne i8 %call66, 0, !dbg !4652
  br i1 %tobool67, label %if.then68, label %if.else105, !dbg !4655

if.then68:                                        ; preds = %if.then65
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp, metadata !4656, metadata !DIExpression()), !dbg !4659
  %70 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4660
  %call69 = call i8* %70(i64 72, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0)), !dbg !4660
  %71 = bitcast i8* %call69 to %struct.DispList*, !dbg !4660
  store %struct.DispList* %71, %struct.DispList** %dl, align 8, !dbg !4661
  %72 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4662
  %73 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !4663
  %nr70 = getelementptr inbounds %struct.BevList, %struct.BevList* %73, i32 0, i32 2, !dbg !4664
  %74 = load i32, i32* %nr70, align 8, !dbg !4664
  %conv71 = sext i32 %74 to i64, !dbg !4663
  %mul = mul i64 12, %conv71, !dbg !4665
  %call72 = call i8* %72(i64 %mul, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)), !dbg !4662
  %75 = bitcast i8* %call72 to float*, !dbg !4662
  %76 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4666
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %76, i32 0, i32 8, !dbg !4667
  store float* %75, float** %verts, align 8, !dbg !4668
  %77 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !4669
  %78 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4670
  %79 = bitcast %struct.DispList* %78 to i8*, !dbg !4670
  call void @BLI_addtail(%struct.ListBase* %77, i8* %79), !dbg !4671
  %80 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !4672
  %poly = getelementptr inbounds %struct.BevList, %struct.BevList* %80, i32 0, i32 4, !dbg !4674
  %81 = load i32, i32* %poly, align 8, !dbg !4674
  %cmp73 = icmp ne i32 %81, -1, !dbg !4675
  br i1 %cmp73, label %if.then75, label %if.else77, !dbg !4676

if.then75:                                        ; preds = %if.then68
  %82 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4677
  %type76 = getelementptr inbounds %struct.DispList, %struct.DispList* %82, i32 0, i32 2, !dbg !4678
  store i16 0, i16* %type76, align 8, !dbg !4679
  br label %if.end79, !dbg !4677

if.else77:                                        ; preds = %if.then68
  %83 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4680
  %type78 = getelementptr inbounds %struct.DispList, %struct.DispList* %83, i32 0, i32 2, !dbg !4681
  store i16 1, i16* %type78, align 8, !dbg !4682
  br label %if.end79

if.end79:                                         ; preds = %if.else77, %if.then75
  %84 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4683
  %type80 = getelementptr inbounds %struct.DispList, %struct.DispList* %84, i32 0, i32 2, !dbg !4685
  %85 = load i16, i16* %type80, align 8, !dbg !4685
  %conv81 = sext i16 %85 to i32, !dbg !4683
  %cmp82 = icmp eq i32 %conv81, 1, !dbg !4686
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !4687

if.then84:                                        ; preds = %if.end79
  %86 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4688
  %flag = getelementptr inbounds %struct.DispList, %struct.DispList* %86, i32 0, i32 3, !dbg !4689
  store i16 12, i16* %flag, align 2, !dbg !4690
  br label %if.end85, !dbg !4688

if.end85:                                         ; preds = %if.then84, %if.end79
  %87 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4691
  %parts = getelementptr inbounds %struct.DispList, %struct.DispList* %87, i32 0, i32 4, !dbg !4692
  store i32 1, i32* %parts, align 4, !dbg !4693
  %88 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !4694
  %nr86 = getelementptr inbounds %struct.BevList, %struct.BevList* %88, i32 0, i32 2, !dbg !4695
  %89 = load i32, i32* %nr86, align 8, !dbg !4695
  %90 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4696
  %nr87 = getelementptr inbounds %struct.DispList, %struct.DispList* %90, i32 0, i32 5, !dbg !4697
  store i32 %89, i32* %nr87, align 8, !dbg !4698
  %91 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4699
  %mat_nr = getelementptr inbounds %struct.Nurb, %struct.Nurb* %91, i32 0, i32 3, !dbg !4700
  %92 = load i16, i16* %mat_nr, align 2, !dbg !4700
  %93 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4701
  %col = getelementptr inbounds %struct.DispList, %struct.DispList* %93, i32 0, i32 6, !dbg !4702
  store i16 %92, i16* %col, align 4, !dbg !4703
  %94 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4704
  %charidx = getelementptr inbounds %struct.Nurb, %struct.Nurb* %94, i32 0, i32 21, !dbg !4705
  %95 = load i32, i32* %charidx, align 4, !dbg !4705
  %96 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4706
  %charidx88 = getelementptr inbounds %struct.DispList, %struct.DispList* %96, i32 0, i32 11, !dbg !4707
  store i32 %95, i32* %charidx88, align 8, !dbg !4708
  %97 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4709
  %flag89 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %97, i32 0, i32 5, !dbg !4710
  %98 = load i16, i16* %flag89, align 2, !dbg !4710
  %conv90 = sext i16 %98 to i32, !dbg !4709
  %and = and i32 %conv90, -9, !dbg !4711
  %conv91 = trunc i32 %and to i16, !dbg !4709
  %99 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4712
  %rt = getelementptr inbounds %struct.DispList, %struct.DispList* %99, i32 0, i32 7, !dbg !4713
  store i16 %conv91, i16* %rt, align 2, !dbg !4714
  %100 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4715
  %nr92 = getelementptr inbounds %struct.DispList, %struct.DispList* %100, i32 0, i32 5, !dbg !4716
  %101 = load i32, i32* %nr92, align 8, !dbg !4716
  store i32 %101, i32* %a, align 4, !dbg !4717
  %102 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !4718
  %bevpoints = getelementptr inbounds %struct.BevList, %struct.BevList* %102, i32 0, i32 9, !dbg !4719
  %arraydecay = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints, i64 0, i64 0, !dbg !4718
  store %struct.BevPoint* %arraydecay, %struct.BevPoint** %bevp, align 8, !dbg !4720
  %103 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4721
  %verts93 = getelementptr inbounds %struct.DispList, %struct.DispList* %103, i32 0, i32 8, !dbg !4722
  %104 = load float*, float** %verts93, align 8, !dbg !4722
  store float* %104, float** %data63, align 8, !dbg !4723
  br label %while.cond, !dbg !4724

while.cond:                                       ; preds = %while.body, %if.end85
  %105 = load i32, i32* %a, align 4, !dbg !4725
  %dec = add nsw i32 %105, -1, !dbg !4725
  store i32 %dec, i32* %a, align 4, !dbg !4725
  %tobool94 = icmp ne i32 %105, 0, !dbg !4724
  br i1 %tobool94, label %while.body, label %while.end, !dbg !4724

while.body:                                       ; preds = %while.cond
  %106 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !4726
  %vec = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %106, i32 0, i32 0, !dbg !4728
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !4726
  %107 = load float, float* %arrayidx, align 4, !dbg !4726
  %108 = load float, float* %widfac, align 4, !dbg !4729
  %109 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !4730
  %sina = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %109, i32 0, i32 5, !dbg !4731
  %110 = load float, float* %sina, align 4, !dbg !4731
  %mul95 = fmul float %108, %110, !dbg !4732
  %add = fadd float %107, %mul95, !dbg !4733
  %111 = load float*, float** %data63, align 8, !dbg !4734
  %arrayidx96 = getelementptr inbounds float, float* %111, i64 0, !dbg !4734
  store float %add, float* %arrayidx96, align 4, !dbg !4735
  %112 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !4736
  %vec97 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %112, i32 0, i32 0, !dbg !4737
  %arrayidx98 = getelementptr inbounds [3 x float], [3 x float]* %vec97, i64 0, i64 1, !dbg !4736
  %113 = load float, float* %arrayidx98, align 4, !dbg !4736
  %114 = load float, float* %widfac, align 4, !dbg !4738
  %115 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !4739
  %cosa = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %115, i32 0, i32 6, !dbg !4740
  %116 = load float, float* %cosa, align 4, !dbg !4740
  %mul99 = fmul float %114, %116, !dbg !4741
  %add100 = fadd float %113, %mul99, !dbg !4742
  %117 = load float*, float** %data63, align 8, !dbg !4743
  %arrayidx101 = getelementptr inbounds float, float* %117, i64 1, !dbg !4743
  store float %add100, float* %arrayidx101, align 4, !dbg !4744
  %118 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !4745
  %vec102 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %118, i32 0, i32 0, !dbg !4746
  %arrayidx103 = getelementptr inbounds [3 x float], [3 x float]* %vec102, i64 0, i64 2, !dbg !4745
  %119 = load float, float* %arrayidx103, align 4, !dbg !4745
  %120 = load float*, float** %data63, align 8, !dbg !4747
  %arrayidx104 = getelementptr inbounds float, float* %120, i64 2, !dbg !4747
  store float %119, float* %arrayidx104, align 4, !dbg !4748
  %121 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !4749
  %incdec.ptr = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %121, i32 1, !dbg !4749
  store %struct.BevPoint* %incdec.ptr, %struct.BevPoint** %bevp, align 8, !dbg !4749
  %122 = load float*, float** %data63, align 8, !dbg !4750
  %add.ptr = getelementptr inbounds float, float* %122, i64 3, !dbg !4750
  store float* %add.ptr, float** %data63, align 8, !dbg !4750
  br label %while.cond, !dbg !4724, !llvm.loop !4751

while.end:                                        ; preds = %while.cond
  br label %if.end304, !dbg !4753

if.else105:                                       ; preds = %if.then65
  call void @llvm.dbg.declare(metadata %struct.DispList** %dlb, metadata !4754, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.declare(metadata %struct.ListBase* %bottom_capbase, metadata !4757, metadata !DIExpression()), !dbg !4758
  %123 = bitcast %struct.ListBase* %bottom_capbase to i8*, !dbg !4758
  call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 16, i1 false), !dbg !4758
  call void @llvm.dbg.declare(metadata %struct.ListBase* %top_capbase, metadata !4759, metadata !DIExpression()), !dbg !4760
  %124 = bitcast %struct.ListBase* %top_capbase to i8*, !dbg !4760
  call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 16, i1 false), !dbg !4760
  call void @llvm.dbg.declare(metadata [3 x float]* %bottom_no, metadata !4761, metadata !DIExpression()), !dbg !4762
  %125 = bitcast [3 x float]* %bottom_no to i8*, !dbg !4762
  call void @llvm.memset.p0i8.i64(i8* align 4 %125, i8 0, i64 12, i1 false), !dbg !4762
  call void @llvm.dbg.declare(metadata [3 x float]* %top_no, metadata !4763, metadata !DIExpression()), !dbg !4764
  %126 = bitcast [3 x float]* %top_no to i8*, !dbg !4764
  call void @llvm.memset.p0i8.i64(i8* align 4 %126, i8 0, i64 12, i1 false), !dbg !4764
  call void @llvm.dbg.declare(metadata float* %firstblend, metadata !4765, metadata !DIExpression()), !dbg !4766
  store float 0.000000e+00, float* %firstblend, align 4, !dbg !4766
  call void @llvm.dbg.declare(metadata float* %lastblend, metadata !4767, metadata !DIExpression()), !dbg !4768
  store float 0.000000e+00, float* %lastblend, align 4, !dbg !4768
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4769, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.declare(metadata i32* %start, metadata !4771, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.declare(metadata i32* %steps, metadata !4773, metadata !DIExpression()), !dbg !4774
  %127 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4775
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %127, i32 0, i32 13, !dbg !4777
  %128 = load i16, i16* %flagu, align 4, !dbg !4777
  %conv106 = sext i16 %128 to i32, !dbg !4775
  %and107 = and i32 %conv106, 1, !dbg !4778
  %tobool108 = icmp ne i32 %and107, 0, !dbg !4778
  br i1 %tobool108, label %if.then109, label %if.else110, !dbg !4779

if.then109:                                       ; preds = %if.else105
  %129 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !4780
  call void @calc_bevfac_mapping_default(%struct.BevList* %129, i32* %start, float* %firstblend, i32* %steps, float* %lastblend), !dbg !4782
  br label %if.end116, !dbg !4783

if.else110:                                       ; preds = %if.else105
  %130 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4784
  %bevfac2 = getelementptr inbounds %struct.Curve, %struct.Curve* %130, i32 0, i32 66, !dbg !4787
  %131 = load float, float* %bevfac2, align 8, !dbg !4787
  %132 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4788
  %bevfac1 = getelementptr inbounds %struct.Curve, %struct.Curve* %132, i32 0, i32 65, !dbg !4789
  %133 = load float, float* %bevfac1, align 4, !dbg !4789
  %sub111 = fsub float %131, %133, !dbg !4790
  %134 = call float @llvm.fabs.f32(float %sub111), !dbg !4791
  %cmp112 = fcmp olt float %134, 0x3E80000000000000, !dbg !4792
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !4793

if.then114:                                       ; preds = %if.else110
  br label %for.inc306, !dbg !4794

if.end115:                                        ; preds = %if.else110
  %135 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4796
  %136 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !4797
  %137 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4798
  call void @calc_bevfac_mapping(%struct.Curve* %135, %struct.BevList* %136, %struct.Nurb* %137, i32* %start, float* %firstblend, i32* %steps, float* %lastblend), !dbg !4799
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.then109
  %first117 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %dlbev, i32 0, i32 0, !dbg !4800
  %138 = load i8*, i8** %first117, align 8, !dbg !4800
  %139 = bitcast i8* %138 to %struct.DispList*, !dbg !4802
  store %struct.DispList* %139, %struct.DispList** %dlb, align 8, !dbg !4803
  br label %for.cond118, !dbg !4804

for.cond118:                                      ; preds = %for.inc296, %if.end116
  %140 = load %struct.DispList*, %struct.DispList** %dlb, align 8, !dbg !4805
  %tobool119 = icmp ne %struct.DispList* %140, null, !dbg !4807
  br i1 %tobool119, label %for.body120, label %for.end297, !dbg !4807

for.body120:                                      ; preds = %for.cond118
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp_first, metadata !4808, metadata !DIExpression()), !dbg !4810
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp_last, metadata !4811, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp121, metadata !4813, metadata !DIExpression()), !dbg !4814
  %141 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4815
  %call122 = call i8* %141(i64 72, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0)), !dbg !4815
  %142 = bitcast i8* %call122 to %struct.DispList*, !dbg !4815
  store %struct.DispList* %142, %struct.DispList** %dl, align 8, !dbg !4816
  %143 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4817
  %144 = load %struct.DispList*, %struct.DispList** %dlb, align 8, !dbg !4818
  %nr123 = getelementptr inbounds %struct.DispList, %struct.DispList* %144, i32 0, i32 5, !dbg !4819
  %145 = load i32, i32* %nr123, align 8, !dbg !4819
  %conv124 = sext i32 %145 to i64, !dbg !4818
  %mul125 = mul i64 12, %conv124, !dbg !4820
  %146 = load i32, i32* %steps, align 4, !dbg !4821
  %conv126 = sext i32 %146 to i64, !dbg !4821
  %mul127 = mul i64 %mul125, %conv126, !dbg !4822
  %call128 = call i8* %143(i64 %mul127, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)), !dbg !4817
  %147 = bitcast i8* %call128 to float*, !dbg !4817
  store float* %147, float** %data63, align 8, !dbg !4823
  %148 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4824
  %verts129 = getelementptr inbounds %struct.DispList, %struct.DispList* %148, i32 0, i32 8, !dbg !4825
  store float* %147, float** %verts129, align 8, !dbg !4826
  %149 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !4827
  %150 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4828
  %151 = bitcast %struct.DispList* %150 to i8*, !dbg !4828
  call void @BLI_addtail(%struct.ListBase* %149, i8* %151), !dbg !4829
  %152 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4830
  %type130 = getelementptr inbounds %struct.DispList, %struct.DispList* %152, i32 0, i32 2, !dbg !4831
  store i16 2, i16* %type130, align 8, !dbg !4832
  %153 = load %struct.DispList*, %struct.DispList** %dlb, align 8, !dbg !4833
  %flag131 = getelementptr inbounds %struct.DispList, %struct.DispList* %153, i32 0, i32 3, !dbg !4834
  %154 = load i16, i16* %flag131, align 2, !dbg !4834
  %conv132 = sext i16 %154 to i32, !dbg !4833
  %and133 = and i32 %conv132, 12, !dbg !4835
  %conv134 = trunc i32 %and133 to i16, !dbg !4833
  %155 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4836
  %flag135 = getelementptr inbounds %struct.DispList, %struct.DispList* %155, i32 0, i32 3, !dbg !4837
  store i16 %conv134, i16* %flag135, align 2, !dbg !4838
  %156 = load %struct.DispList*, %struct.DispList** %dlb, align 8, !dbg !4839
  %type136 = getelementptr inbounds %struct.DispList, %struct.DispList* %156, i32 0, i32 2, !dbg !4841
  %157 = load i16, i16* %type136, align 8, !dbg !4841
  %conv137 = sext i16 %157 to i32, !dbg !4839
  %cmp138 = icmp eq i32 %conv137, 0, !dbg !4842
  br i1 %cmp138, label %if.then140, label %if.end144, !dbg !4843

if.then140:                                       ; preds = %for.body120
  %158 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4844
  %flag141 = getelementptr inbounds %struct.DispList, %struct.DispList* %158, i32 0, i32 3, !dbg !4845
  %159 = load i16, i16* %flag141, align 2, !dbg !4846
  %conv142 = sext i16 %159 to i32, !dbg !4846
  %or = or i32 %conv142, 1, !dbg !4846
  %conv143 = trunc i32 %or to i16, !dbg !4846
  store i16 %conv143, i16* %flag141, align 2, !dbg !4846
  br label %if.end144, !dbg !4844

if.end144:                                        ; preds = %if.then140, %for.body120
  %160 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !4847
  %poly145 = getelementptr inbounds %struct.BevList, %struct.BevList* %160, i32 0, i32 4, !dbg !4849
  %161 = load i32, i32* %poly145, align 8, !dbg !4849
  %cmp146 = icmp sge i32 %161, 0, !dbg !4850
  br i1 %cmp146, label %if.then148, label %if.end153, !dbg !4851

if.then148:                                       ; preds = %if.end144
  %162 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4852
  %flag149 = getelementptr inbounds %struct.DispList, %struct.DispList* %162, i32 0, i32 3, !dbg !4853
  %163 = load i16, i16* %flag149, align 2, !dbg !4854
  %conv150 = sext i16 %163 to i32, !dbg !4854
  %or151 = or i32 %conv150, 2, !dbg !4854
  %conv152 = trunc i32 %or151 to i16, !dbg !4854
  store i16 %conv152, i16* %flag149, align 2, !dbg !4854
  br label %if.end153, !dbg !4852

if.end153:                                        ; preds = %if.then148, %if.end144
  %164 = load i32, i32* %steps, align 4, !dbg !4855
  %165 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4856
  %parts154 = getelementptr inbounds %struct.DispList, %struct.DispList* %165, i32 0, i32 4, !dbg !4857
  store i32 %164, i32* %parts154, align 4, !dbg !4858
  %166 = load %struct.DispList*, %struct.DispList** %dlb, align 8, !dbg !4859
  %nr155 = getelementptr inbounds %struct.DispList, %struct.DispList* %166, i32 0, i32 5, !dbg !4860
  %167 = load i32, i32* %nr155, align 8, !dbg !4860
  %168 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4861
  %nr156 = getelementptr inbounds %struct.DispList, %struct.DispList* %168, i32 0, i32 5, !dbg !4862
  store i32 %167, i32* %nr156, align 8, !dbg !4863
  %169 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4864
  %mat_nr157 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %169, i32 0, i32 3, !dbg !4865
  %170 = load i16, i16* %mat_nr157, align 2, !dbg !4865
  %171 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4866
  %col158 = getelementptr inbounds %struct.DispList, %struct.DispList* %171, i32 0, i32 6, !dbg !4867
  store i16 %170, i16* %col158, align 4, !dbg !4868
  %172 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4869
  %charidx159 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %172, i32 0, i32 21, !dbg !4870
  %173 = load i32, i32* %charidx159, align 4, !dbg !4870
  %174 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4871
  %charidx160 = getelementptr inbounds %struct.DispList, %struct.DispList* %174, i32 0, i32 11, !dbg !4872
  store i32 %173, i32* %charidx160, align 8, !dbg !4873
  %175 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !4874
  %flag161 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %175, i32 0, i32 5, !dbg !4875
  %176 = load i16, i16* %flag161, align 2, !dbg !4875
  %conv162 = sext i16 %176 to i32, !dbg !4874
  %and163 = and i32 %conv162, -9, !dbg !4876
  %conv164 = trunc i32 %and163 to i16, !dbg !4874
  %177 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4877
  %rt165 = getelementptr inbounds %struct.DispList, %struct.DispList* %177, i32 0, i32 7, !dbg !4878
  store i16 %conv164, i16* %rt165, align 2, !dbg !4879
  %178 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4880
  %179 = load i32, i32* %steps, align 4, !dbg !4881
  %add166 = add nsw i32 %179, 31, !dbg !4882
  %shr = ashr i32 %add166, 5, !dbg !4883
  %conv167 = sext i32 %shr to i64, !dbg !4884
  %mul168 = mul i64 4, %conv167, !dbg !4885
  %call169 = call i8* %178(i64 %mul168, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i64 0, i64 0)), !dbg !4880
  %180 = bitcast i8* %call169 to i32*, !dbg !4880
  %181 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !4886
  %bevelSplitFlag = getelementptr inbounds %struct.DispList, %struct.DispList* %181, i32 0, i32 13, !dbg !4887
  store i32* %180, i32** %bevelSplitFlag, align 8, !dbg !4888
  %182 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !4889
  %bevpoints170 = getelementptr inbounds %struct.BevList, %struct.BevList* %182, i32 0, i32 9, !dbg !4890
  %arraydecay171 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints170, i64 0, i64 0, !dbg !4889
  store %struct.BevPoint* %arraydecay171, %struct.BevPoint** %bevp_first, align 8, !dbg !4891
  %183 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !4892
  %bevpoints172 = getelementptr inbounds %struct.BevList, %struct.BevList* %183, i32 0, i32 9, !dbg !4893
  %184 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !4894
  %nr173 = getelementptr inbounds %struct.BevList, %struct.BevList* %184, i32 0, i32 2, !dbg !4895
  %185 = load i32, i32* %nr173, align 8, !dbg !4895
  %sub174 = sub nsw i32 %185, 1, !dbg !4896
  %idxprom = sext i32 %sub174 to i64, !dbg !4892
  %arrayidx175 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints172, i64 0, i64 %idxprom, !dbg !4892
  store %struct.BevPoint* %arrayidx175, %struct.BevPoint** %bevp_last, align 8, !dbg !4897
  %186 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !4898
  %bevpoints176 = getelementptr inbounds %struct.BevList, %struct.BevList* %186, i32 0, i32 9, !dbg !4899
  %187 = load i32, i32* %start, align 4, !dbg !4900
  %idxprom177 = sext i32 %187 to i64, !dbg !4898
  %arrayidx178 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints176, i64 0, i64 %idxprom177, !dbg !4898
  store %struct.BevPoint* %arrayidx178, %struct.BevPoint** %bevp121, align 8, !dbg !4901
  %188 = load i32, i32* %start, align 4, !dbg !4902
  store i32 %188, i32* %i, align 4, !dbg !4904
  store i32 0, i32* %a, align 4, !dbg !4905
  br label %for.cond179, !dbg !4906

for.cond179:                                      ; preds = %for.inc, %if.end153
  %189 = load i32, i32* %a, align 4, !dbg !4907
  %190 = load i32, i32* %steps, align 4, !dbg !4909
  %cmp180 = icmp slt i32 %189, %190, !dbg !4910
  br i1 %cmp180, label %for.body182, label %for.end, !dbg !4911

for.body182:                                      ; preds = %for.cond179
  call void @llvm.dbg.declare(metadata float* %fac, metadata !4912, metadata !DIExpression()), !dbg !4914
  store float 1.000000e+00, float* %fac, align 4, !dbg !4914
  call void @llvm.dbg.declare(metadata float** %cur_data, metadata !4915, metadata !DIExpression()), !dbg !4916
  %191 = load float*, float** %data63, align 8, !dbg !4917
  store float* %191, float** %cur_data, align 8, !dbg !4916
  %192 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4918
  %taperobj = getelementptr inbounds %struct.Curve, %struct.Curve* %192, i32 0, i32 6, !dbg !4920
  %193 = load %struct.Object*, %struct.Object** %taperobj, align 8, !dbg !4920
  %cmp183 = icmp eq %struct.Object* %193, null, !dbg !4921
  br i1 %cmp183, label %if.then185, label %if.else186, !dbg !4922

if.then185:                                       ; preds = %for.body182
  %194 = load %struct.BevPoint*, %struct.BevPoint** %bevp121, align 8, !dbg !4923
  %radius = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %194, i32 0, i32 2, !dbg !4925
  %195 = load float, float* %radius, align 4, !dbg !4925
  store float %195, float* %fac, align 4, !dbg !4926
  br label %if.end234, !dbg !4927

if.else186:                                       ; preds = %for.body182
  call void @llvm.dbg.declare(metadata float* %len, metadata !4928, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.declare(metadata float* %taper_fac, metadata !4931, metadata !DIExpression()), !dbg !4932
  %196 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4933
  %flag187 = getelementptr inbounds %struct.Curve, %struct.Curve* %196, i32 0, i32 23, !dbg !4935
  %197 = load i32, i32* %flag187, align 4, !dbg !4935
  %and188 = and i32 %197, 32768, !dbg !4936
  %tobool189 = icmp ne i32 %and188, 0, !dbg !4936
  br i1 %tobool189, label %if.then190, label %if.else209, !dbg !4937

if.then190:                                       ; preds = %if.else186
  %198 = load i32, i32* %steps, align 4, !dbg !4938
  %sub191 = sub nsw i32 %198, 3, !dbg !4940
  %conv192 = sitofp i32 %sub191 to float, !dbg !4941
  %199 = load float, float* %firstblend, align 4, !dbg !4942
  %add193 = fadd float %conv192, %199, !dbg !4943
  %200 = load float, float* %lastblend, align 4, !dbg !4944
  %add194 = fadd float %add193, %200, !dbg !4945
  store float %add194, float* %len, align 4, !dbg !4946
  %201 = load i32, i32* %a, align 4, !dbg !4947
  %cmp195 = icmp eq i32 %201, 0, !dbg !4949
  br i1 %cmp195, label %if.then197, label %if.else198, !dbg !4950

if.then197:                                       ; preds = %if.then190
  store float 0.000000e+00, float* %taper_fac, align 4, !dbg !4951
  br label %if.end208, !dbg !4952

if.else198:                                       ; preds = %if.then190
  %202 = load i32, i32* %a, align 4, !dbg !4953
  %203 = load i32, i32* %steps, align 4, !dbg !4955
  %sub199 = sub nsw i32 %203, 1, !dbg !4956
  %cmp200 = icmp eq i32 %202, %sub199, !dbg !4957
  br i1 %cmp200, label %if.then202, label %if.else203, !dbg !4958

if.then202:                                       ; preds = %if.else198
  store float 1.000000e+00, float* %taper_fac, align 4, !dbg !4959
  br label %if.end207, !dbg !4960

if.else203:                                       ; preds = %if.else198
  %204 = load i32, i32* %a, align 4, !dbg !4961
  %conv204 = sitofp i32 %204 to float, !dbg !4962
  %205 = load float, float* %firstblend, align 4, !dbg !4963
  %sub205 = fsub float 1.000000e+00, %205, !dbg !4964
  %sub206 = fsub float %conv204, %sub205, !dbg !4965
  %206 = load float, float* %len, align 4, !dbg !4966
  %div = fdiv float %sub206, %206, !dbg !4967
  store float %div, float* %taper_fac, align 4, !dbg !4968
  br label %if.end207

if.end207:                                        ; preds = %if.else203, %if.then202
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %if.then197
  br label %if.end231, !dbg !4969

if.else209:                                       ; preds = %if.else186
  %207 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !4970
  %nr210 = getelementptr inbounds %struct.BevList, %struct.BevList* %207, i32 0, i32 2, !dbg !4972
  %208 = load i32, i32* %nr210, align 8, !dbg !4972
  %sub211 = sub nsw i32 %208, 1, !dbg !4973
  %conv212 = sitofp i32 %sub211 to float, !dbg !4970
  store float %conv212, float* %len, align 4, !dbg !4974
  %209 = load i32, i32* %i, align 4, !dbg !4975
  %conv213 = sitofp i32 %209 to float, !dbg !4976
  %210 = load float, float* %len, align 4, !dbg !4977
  %div214 = fdiv float %conv213, %210, !dbg !4978
  store float %div214, float* %taper_fac, align 4, !dbg !4979
  %211 = load i32, i32* %a, align 4, !dbg !4980
  %cmp215 = icmp eq i32 %211, 0, !dbg !4982
  br i1 %cmp215, label %if.then217, label %if.else221, !dbg !4983

if.then217:                                       ; preds = %if.else209
  %212 = load float, float* %firstblend, align 4, !dbg !4984
  %sub218 = fsub float 1.000000e+00, %212, !dbg !4985
  %213 = load float, float* %len, align 4, !dbg !4986
  %div219 = fdiv float %sub218, %213, !dbg !4987
  %214 = load float, float* %taper_fac, align 4, !dbg !4988
  %add220 = fadd float %214, %div219, !dbg !4988
  store float %add220, float* %taper_fac, align 4, !dbg !4988
  br label %if.end230, !dbg !4989

if.else221:                                       ; preds = %if.else209
  %215 = load i32, i32* %a, align 4, !dbg !4990
  %216 = load i32, i32* %steps, align 4, !dbg !4992
  %sub222 = sub nsw i32 %216, 1, !dbg !4993
  %cmp223 = icmp eq i32 %215, %sub222, !dbg !4994
  br i1 %cmp223, label %if.then225, label %if.end229, !dbg !4995

if.then225:                                       ; preds = %if.else221
  %217 = load float, float* %lastblend, align 4, !dbg !4996
  %sub226 = fsub float 1.000000e+00, %217, !dbg !4997
  %218 = load float, float* %len, align 4, !dbg !4998
  %div227 = fdiv float %sub226, %218, !dbg !4999
  %219 = load float, float* %taper_fac, align 4, !dbg !5000
  %sub228 = fsub float %219, %div227, !dbg !5000
  store float %sub228, float* %taper_fac, align 4, !dbg !5000
  br label %if.end229, !dbg !5001

if.end229:                                        ; preds = %if.then225, %if.else221
  br label %if.end230

if.end230:                                        ; preds = %if.end229, %if.then217
  br label %if.end231

if.end231:                                        ; preds = %if.end230, %if.end208
  %220 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5002
  %221 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5003
  %taperobj232 = getelementptr inbounds %struct.Curve, %struct.Curve* %221, i32 0, i32 6, !dbg !5004
  %222 = load %struct.Object*, %struct.Object** %taperobj232, align 8, !dbg !5004
  %223 = load float, float* %taper_fac, align 4, !dbg !5005
  %call233 = call float @displist_calc_taper(%struct.Scene* %220, %struct.Object* %222, float %223), !dbg !5006
  store float %call233, float* %fac, align 4, !dbg !5007
  br label %if.end234

if.end234:                                        ; preds = %if.end231, %if.then185
  %224 = load %struct.BevPoint*, %struct.BevPoint** %bevp121, align 8, !dbg !5008
  %split_tag = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %224, i32 0, i32 10, !dbg !5010
  %225 = load i16, i16* %split_tag, align 4, !dbg !5010
  %tobool235 = icmp ne i16 %225, 0, !dbg !5008
  br i1 %tobool235, label %if.then236, label %if.end243, !dbg !5011

if.then236:                                       ; preds = %if.end234
  %226 = load i32, i32* %a, align 4, !dbg !5012
  %and237 = and i32 %226, 31, !dbg !5014
  %shl = shl i32 1, %and237, !dbg !5015
  %227 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5016
  %bevelSplitFlag238 = getelementptr inbounds %struct.DispList, %struct.DispList* %227, i32 0, i32 13, !dbg !5017
  %228 = load i32*, i32** %bevelSplitFlag238, align 8, !dbg !5017
  %229 = load i32, i32* %a, align 4, !dbg !5018
  %shr239 = ashr i32 %229, 5, !dbg !5019
  %idxprom240 = sext i32 %shr239 to i64, !dbg !5016
  %arrayidx241 = getelementptr inbounds i32, i32* %228, i64 %idxprom240, !dbg !5016
  %230 = load i32, i32* %arrayidx241, align 4, !dbg !5020
  %or242 = or i32 %230, %shl, !dbg !5020
  store i32 %or242, i32* %arrayidx241, align 4, !dbg !5020
  br label %if.end243, !dbg !5021

if.end243:                                        ; preds = %if.then236, %if.end234
  %231 = load i32, i32* %a, align 4, !dbg !5022
  %cmp244 = icmp eq i32 %231, 0, !dbg !5024
  br i1 %cmp244, label %land.lhs.true246, label %if.else252, !dbg !5025

land.lhs.true246:                                 ; preds = %if.end243
  %232 = load %struct.BevPoint*, %struct.BevPoint** %bevp121, align 8, !dbg !5026
  %233 = load %struct.BevPoint*, %struct.BevPoint** %bevp_last, align 8, !dbg !5027
  %cmp247 = icmp ne %struct.BevPoint* %232, %233, !dbg !5028
  br i1 %cmp247, label %if.then249, label %if.else252, !dbg !5029

if.then249:                                       ; preds = %land.lhs.true246
  %234 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5030
  %235 = load %struct.BevPoint*, %struct.BevPoint** %bevp121, align 8, !dbg !5032
  %236 = load %struct.BevPoint*, %struct.BevPoint** %bevp121, align 8, !dbg !5033
  %add.ptr250 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %236, i64 1, !dbg !5034
  %237 = load %struct.DispList*, %struct.DispList** %dlb, align 8, !dbg !5035
  %238 = load float, float* %firstblend, align 4, !dbg !5036
  %sub251 = fsub float 1.000000e+00, %238, !dbg !5037
  %239 = load float, float* %widfac, align 4, !dbg !5038
  %240 = load float, float* %fac, align 4, !dbg !5039
  call void @rotateBevelPiece(%struct.Curve* %234, %struct.BevPoint* %235, %struct.BevPoint* %add.ptr250, %struct.DispList* %237, float %sub251, float %239, float %240, float** %data63), !dbg !5040
  br label %if.end264, !dbg !5041

if.else252:                                       ; preds = %land.lhs.true246, %if.end243
  %241 = load i32, i32* %a, align 4, !dbg !5042
  %242 = load i32, i32* %steps, align 4, !dbg !5044
  %sub253 = sub nsw i32 %242, 1, !dbg !5045
  %cmp254 = icmp eq i32 %241, %sub253, !dbg !5046
  br i1 %cmp254, label %land.lhs.true256, label %if.else262, !dbg !5047

land.lhs.true256:                                 ; preds = %if.else252
  %243 = load %struct.BevPoint*, %struct.BevPoint** %bevp121, align 8, !dbg !5048
  %244 = load %struct.BevPoint*, %struct.BevPoint** %bevp_first, align 8, !dbg !5049
  %cmp257 = icmp ne %struct.BevPoint* %243, %244, !dbg !5050
  br i1 %cmp257, label %if.then259, label %if.else262, !dbg !5051

if.then259:                                       ; preds = %land.lhs.true256
  %245 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5052
  %246 = load %struct.BevPoint*, %struct.BevPoint** %bevp121, align 8, !dbg !5054
  %247 = load %struct.BevPoint*, %struct.BevPoint** %bevp121, align 8, !dbg !5055
  %add.ptr260 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %247, i64 -1, !dbg !5056
  %248 = load %struct.DispList*, %struct.DispList** %dlb, align 8, !dbg !5057
  %249 = load float, float* %lastblend, align 4, !dbg !5058
  %sub261 = fsub float 1.000000e+00, %249, !dbg !5059
  %250 = load float, float* %widfac, align 4, !dbg !5060
  %251 = load float, float* %fac, align 4, !dbg !5061
  call void @rotateBevelPiece(%struct.Curve* %245, %struct.BevPoint* %246, %struct.BevPoint* %add.ptr260, %struct.DispList* %248, float %sub261, float %250, float %251, float** %data63), !dbg !5062
  br label %if.end263, !dbg !5063

if.else262:                                       ; preds = %land.lhs.true256, %if.else252
  %252 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5064
  %253 = load %struct.BevPoint*, %struct.BevPoint** %bevp121, align 8, !dbg !5066
  %254 = load %struct.DispList*, %struct.DispList** %dlb, align 8, !dbg !5067
  %255 = load float, float* %widfac, align 4, !dbg !5068
  %256 = load float, float* %fac, align 4, !dbg !5069
  call void @rotateBevelPiece(%struct.Curve* %252, %struct.BevPoint* %253, %struct.BevPoint* null, %struct.DispList* %254, float 0.000000e+00, float %255, float %256, float** %data63), !dbg !5070
  br label %if.end263

if.end263:                                        ; preds = %if.else262, %if.then259
  br label %if.end264

if.end264:                                        ; preds = %if.end263, %if.then249
  %257 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5071
  %bevobj = getelementptr inbounds %struct.Curve, %struct.Curve* %257, i32 0, i32 5, !dbg !5073
  %258 = load %struct.Object*, %struct.Object** %bevobj, align 8, !dbg !5073
  %tobool265 = icmp ne %struct.Object* %258, null, !dbg !5071
  br i1 %tobool265, label %land.lhs.true266, label %if.end293, !dbg !5074

land.lhs.true266:                                 ; preds = %if.end264
  %259 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5075
  %flag267 = getelementptr inbounds %struct.Curve, %struct.Curve* %259, i32 0, i32 23, !dbg !5076
  %260 = load i32, i32* %flag267, align 4, !dbg !5076
  %and268 = and i32 %260, 16384, !dbg !5077
  %tobool269 = icmp ne i32 %and268, 0, !dbg !5077
  br i1 %tobool269, label %land.lhs.true270, label %if.end293, !dbg !5078

land.lhs.true270:                                 ; preds = %land.lhs.true266
  %261 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5079
  %flagu271 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %261, i32 0, i32 13, !dbg !5080
  %262 = load i16, i16* %flagu271, align 4, !dbg !5080
  %conv272 = sext i16 %262 to i32, !dbg !5079
  %and273 = and i32 %conv272, 1, !dbg !5081
  %tobool274 = icmp ne i32 %and273, 0, !dbg !5081
  br i1 %tobool274, label %if.end293, label %if.then275, !dbg !5082

if.then275:                                       ; preds = %land.lhs.true270
  %263 = load i32, i32* %a, align 4, !dbg !5083
  %cmp276 = icmp eq i32 %263, 1, !dbg !5086
  br i1 %cmp276, label %if.then278, label %if.end284, !dbg !5087

if.then278:                                       ; preds = %if.then275
  %264 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5088
  %265 = load %struct.DispList*, %struct.DispList** %dlb, align 8, !dbg !5090
  %266 = load float*, float** %cur_data, align 8, !dbg !5091
  %267 = load %struct.DispList*, %struct.DispList** %dlb, align 8, !dbg !5092
  %nr279 = getelementptr inbounds %struct.DispList, %struct.DispList* %267, i32 0, i32 5, !dbg !5093
  %268 = load i32, i32* %nr279, align 8, !dbg !5093
  %mul280 = mul nsw i32 3, %268, !dbg !5094
  %idx.ext = sext i32 %mul280 to i64, !dbg !5095
  %idx.neg = sub i64 0, %idx.ext, !dbg !5095
  %add.ptr281 = getelementptr inbounds float, float* %266, i64 %idx.neg, !dbg !5095
  call void @fillBevelCap(%struct.Nurb* %264, %struct.DispList* %265, float* %add.ptr281, %struct.ListBase* %bottom_capbase), !dbg !5096
  %arraydecay282 = getelementptr inbounds [3 x float], [3 x float]* %bottom_no, i64 0, i64 0, !dbg !5097
  %269 = load %struct.BevPoint*, %struct.BevPoint** %bevp121, align 8, !dbg !5098
  %dir = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %269, i32 0, i32 7, !dbg !5099
  %arraydecay283 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !5098
  call void @negate_v3_v3(float* %arraydecay282, float* %arraydecay283), !dbg !5100
  br label %if.end284, !dbg !5101

if.end284:                                        ; preds = %if.then278, %if.then275
  %270 = load i32, i32* %a, align 4, !dbg !5102
  %271 = load i32, i32* %steps, align 4, !dbg !5104
  %sub285 = sub nsw i32 %271, 1, !dbg !5105
  %cmp286 = icmp eq i32 %270, %sub285, !dbg !5106
  br i1 %cmp286, label %if.then288, label %if.end292, !dbg !5107

if.then288:                                       ; preds = %if.end284
  %272 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5108
  %273 = load %struct.DispList*, %struct.DispList** %dlb, align 8, !dbg !5110
  %274 = load float*, float** %cur_data, align 8, !dbg !5111
  call void @fillBevelCap(%struct.Nurb* %272, %struct.DispList* %273, float* %274, %struct.ListBase* %top_capbase), !dbg !5112
  %arraydecay289 = getelementptr inbounds [3 x float], [3 x float]* %top_no, i64 0, i64 0, !dbg !5113
  %275 = load %struct.BevPoint*, %struct.BevPoint** %bevp121, align 8, !dbg !5114
  %dir290 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %275, i32 0, i32 7, !dbg !5115
  %arraydecay291 = getelementptr inbounds [3 x float], [3 x float]* %dir290, i64 0, i64 0, !dbg !5114
  call void @copy_v3_v3(float* %arraydecay289, float* %arraydecay291), !dbg !5116
  br label %if.end292, !dbg !5117

if.end292:                                        ; preds = %if.then288, %if.end284
  br label %if.end293, !dbg !5118

if.end293:                                        ; preds = %if.end292, %land.lhs.true270, %land.lhs.true266, %if.end264
  br label %for.inc, !dbg !5119

for.inc:                                          ; preds = %if.end293
  %276 = load i32, i32* %i, align 4, !dbg !5120
  %inc = add nsw i32 %276, 1, !dbg !5120
  store i32 %inc, i32* %i, align 4, !dbg !5120
  %277 = load %struct.BevPoint*, %struct.BevPoint** %bevp121, align 8, !dbg !5121
  %incdec.ptr294 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %277, i32 1, !dbg !5121
  store %struct.BevPoint* %incdec.ptr294, %struct.BevPoint** %bevp121, align 8, !dbg !5121
  %278 = load i32, i32* %a, align 4, !dbg !5122
  %inc295 = add nsw i32 %278, 1, !dbg !5122
  store i32 %inc295, i32* %a, align 4, !dbg !5122
  br label %for.cond179, !dbg !5123, !llvm.loop !5124

for.end:                                          ; preds = %for.cond179
  %279 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5126
  call void @displist_surf_indices(%struct.DispList* %279), !dbg !5127
  br label %for.inc296, !dbg !5128

for.inc296:                                       ; preds = %for.end
  %280 = load %struct.DispList*, %struct.DispList** %dlb, align 8, !dbg !5129
  %next = getelementptr inbounds %struct.DispList, %struct.DispList* %280, i32 0, i32 0, !dbg !5130
  %281 = load %struct.DispList*, %struct.DispList** %next, align 8, !dbg !5130
  store %struct.DispList* %281, %struct.DispList** %dlb, align 8, !dbg !5131
  br label %for.cond118, !dbg !5132, !llvm.loop !5133

for.end297:                                       ; preds = %for.cond118
  %first298 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %bottom_capbase, i32 0, i32 0, !dbg !5135
  %282 = load i8*, i8** %first298, align 8, !dbg !5135
  %tobool299 = icmp ne i8* %282, null, !dbg !5137
  br i1 %tobool299, label %if.then300, label %if.end303, !dbg !5138

if.then300:                                       ; preds = %for.end297
  %283 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !5139
  %arraydecay301 = getelementptr inbounds [3 x float], [3 x float]* %bottom_no, i64 0, i64 0, !dbg !5141
  call void @BKE_displist_fill(%struct.ListBase* %bottom_capbase, %struct.ListBase* %283, float* %arraydecay301, i8 zeroext 0), !dbg !5142
  %284 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !5143
  %arraydecay302 = getelementptr inbounds [3 x float], [3 x float]* %top_no, i64 0, i64 0, !dbg !5144
  call void @BKE_displist_fill(%struct.ListBase* %top_capbase, %struct.ListBase* %284, float* %arraydecay302, i8 zeroext 0), !dbg !5145
  call void @BKE_displist_free(%struct.ListBase* %bottom_capbase), !dbg !5146
  call void @BKE_displist_free(%struct.ListBase* %top_capbase), !dbg !5147
  br label %if.end303, !dbg !5148

if.end303:                                        ; preds = %if.then300, %for.end297
  br label %if.end304

if.end304:                                        ; preds = %if.end303, %while.end
  br label %if.end305, !dbg !5149

if.end305:                                        ; preds = %if.end304, %for.body
  br label %for.inc306, !dbg !5150

for.inc306:                                       ; preds = %if.end305, %if.then114
  %285 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !5151
  %next307 = getelementptr inbounds %struct.BevList, %struct.BevList* %285, i32 0, i32 0, !dbg !5152
  %286 = load %struct.BevList*, %struct.BevList** %next307, align 8, !dbg !5152
  store %struct.BevList* %286, %struct.BevList** %bl, align 8, !dbg !5153
  %287 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5154
  %next308 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %287, i32 0, i32 0, !dbg !5155
  %288 = load %struct.Nurb*, %struct.Nurb** %next308, align 8, !dbg !5155
  store %struct.Nurb* %288, %struct.Nurb** %nu, align 8, !dbg !5156
  br label %for.cond, !dbg !5157, !llvm.loop !5158

for.end309:                                       ; preds = %land.end
  call void @BKE_displist_free(%struct.ListBase* %dlbev), !dbg !5160
  br label %if.end310

if.end310:                                        ; preds = %for.end309, %if.then54
  %289 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5161
  %flag311 = getelementptr inbounds %struct.Curve, %struct.Curve* %289, i32 0, i32 23, !dbg !5163
  %290 = load i32, i32* %flag311, align 4, !dbg !5163
  %and312 = and i32 %290, 8192, !dbg !5164
  %tobool313 = icmp ne i32 %and312, 0, !dbg !5164
  br i1 %tobool313, label %if.end315, label %if.then314, !dbg !5165

if.then314:                                       ; preds = %if.end310
  %291 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5166
  %292 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !5168
  call void @curve_to_filledpoly(%struct.Curve* %291, %struct.ListBase* %nubase, %struct.ListBase* %292), !dbg !5169
  br label %if.end315, !dbg !5170

if.end315:                                        ; preds = %if.then314, %if.end310
  %293 = load i8, i8* %for_orco.addr, align 1, !dbg !5171
  %tobool316 = icmp ne i8 %293, 0, !dbg !5171
  br i1 %tobool316, label %if.end328, label %if.then317, !dbg !5173

if.then317:                                       ; preds = %if.end315
  %294 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5174
  %flag318 = getelementptr inbounds %struct.Curve, %struct.Curve* %294, i32 0, i32 23, !dbg !5177
  %295 = load i32, i32* %flag318, align 4, !dbg !5177
  %and319 = and i32 %295, 8, !dbg !5178
  %tobool320 = icmp ne i32 %and319, 0, !dbg !5178
  br i1 %tobool320, label %if.then326, label %lor.lhs.false321, !dbg !5179

lor.lhs.false321:                                 ; preds = %if.then317
  %296 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5180
  %297 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5181
  %298 = bitcast %struct.Object* %297 to i8*, !dbg !5181
  %call322 = call signext i16 @DAG_get_eval_flags_for_object(%struct.Scene* %296, i8* %298), !dbg !5182
  %conv323 = sext i16 %call322 to i32, !dbg !5182
  %and324 = and i32 %conv323, 1, !dbg !5183
  %tobool325 = icmp ne i32 %and324, 0, !dbg !5183
  br i1 %tobool325, label %if.then326, label %if.end327, !dbg !5184

if.then326:                                       ; preds = %lor.lhs.false321, %if.then317
  %299 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5185
  call void @calc_curvepath(%struct.Object* %299, %struct.ListBase* %nubase), !dbg !5187
  br label %if.end327, !dbg !5188

if.end327:                                        ; preds = %if.then326, %lor.lhs.false321
  br label %if.end328, !dbg !5189

if.end328:                                        ; preds = %if.end327, %if.end315
  %300 = load i8, i8* %for_orco.addr, align 1, !dbg !5190
  %tobool329 = icmp ne i8 %300, 0, !dbg !5190
  br i1 %tobool329, label %if.end332, label %if.then330, !dbg !5192

if.then330:                                       ; preds = %if.end328
  %301 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5193
  %curve_cache331 = getelementptr inbounds %struct.Object, %struct.Object* %301, i32 0, i32 118, !dbg !5195
  %302 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache331, align 8, !dbg !5195
  %deformed_nurbs = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %302, i32 0, i32 2, !dbg !5196
  call void @BKE_nurbList_duplicate(%struct.ListBase* %deformed_nurbs, %struct.ListBase* %nubase), !dbg !5197
  %303 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5198
  %304 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5199
  %305 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !5200
  %306 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %r_dm_final.addr, align 8, !dbg !5201
  %307 = load i8, i8* %for_render.addr, align 1, !dbg !5202
  %308 = load i8, i8* %use_render_resolution.addr, align 1, !dbg !5203
  call void @curve_calc_modifiers_post(%struct.Scene* %303, %struct.Object* %304, %struct.ListBase* %nubase, %struct.ListBase* %305, %struct.DerivedMesh** %306, i8 zeroext %307, i8 zeroext %308), !dbg !5204
  br label %if.end332, !dbg !5205

if.end332:                                        ; preds = %if.then330, %if.end328
  %309 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5206
  %flag333 = getelementptr inbounds %struct.Curve, %struct.Curve* %309, i32 0, i32 23, !dbg !5208
  %310 = load i32, i32* %flag333, align 4, !dbg !5208
  %and334 = and i32 %310, 8192, !dbg !5209
  %tobool335 = icmp ne i32 %and334, 0, !dbg !5209
  br i1 %tobool335, label %land.lhs.true336, label %if.end339, !dbg !5210

land.lhs.true336:                                 ; preds = %if.end332
  %311 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5211
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %311, i32 0, i32 120, !dbg !5212
  %312 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !5212
  %tobool337 = icmp ne %struct.DerivedMesh* %312, null, !dbg !5211
  br i1 %tobool337, label %if.end339, label %if.then338, !dbg !5213

if.then338:                                       ; preds = %land.lhs.true336
  %313 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5214
  %314 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !5216
  call void @curve_to_filledpoly(%struct.Curve* %313, %struct.ListBase* %nubase, %struct.ListBase* %314), !dbg !5217
  br label %if.end339, !dbg !5218

if.end339:                                        ; preds = %if.then338, %land.lhs.true336, %if.end332
  call void @BKE_nurbList_free(%struct.ListBase* %nubase), !dbg !5219
  br label %if.end340, !dbg !5220

if.end340:                                        ; preds = %if.end339, %lor.lhs.false20
  br label %if.end341

if.end341:                                        ; preds = %if.then, %if.end340, %if.then15
  ret void, !dbg !5221
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_displist_make_curveTypes_forRender(%struct.Scene* %scene, %struct.Object* %ob, %struct.ListBase* %dispbase, %struct.DerivedMesh** %r_dm_final, i8 zeroext %for_orco, i8 zeroext %use_render_resolution) #0 !dbg !5222 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dispbase.addr = alloca %struct.ListBase*, align 8
  %r_dm_final.addr = alloca %struct.DerivedMesh**, align 8
  %for_orco.addr = alloca i8, align 1
  %use_render_resolution.addr = alloca i8, align 1
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5225, metadata !DIExpression()), !dbg !5226
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5227, metadata !DIExpression()), !dbg !5228
  store %struct.ListBase* %dispbase, %struct.ListBase** %dispbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dispbase.addr, metadata !5229, metadata !DIExpression()), !dbg !5230
  store %struct.DerivedMesh** %r_dm_final, %struct.DerivedMesh*** %r_dm_final.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh*** %r_dm_final.addr, metadata !5231, metadata !DIExpression()), !dbg !5232
  store i8 %for_orco, i8* %for_orco.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %for_orco.addr, metadata !5233, metadata !DIExpression()), !dbg !5234
  store i8 %use_render_resolution, i8* %use_render_resolution.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_render_resolution.addr, metadata !5235, metadata !DIExpression()), !dbg !5236
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5237
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 118, !dbg !5239
  %1 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !5239
  %cmp = icmp eq %struct.CurveCache* %1, null, !dbg !5240
  br i1 %cmp, label %if.then, label %if.end, !dbg !5241

if.then:                                          ; preds = %entry
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5242
  %call = call i8* %2(i64 56, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0)), !dbg !5242
  %3 = bitcast i8* %call to %struct.CurveCache*, !dbg !5242
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5244
  %curve_cache1 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 118, !dbg !5245
  store %struct.CurveCache* %3, %struct.CurveCache** %curve_cache1, align 8, !dbg !5246
  br label %if.end, !dbg !5247

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5248
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5249
  %7 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !5250
  %8 = load %struct.DerivedMesh**, %struct.DerivedMesh*** %r_dm_final.addr, align 8, !dbg !5251
  %9 = load i8, i8* %for_orco.addr, align 1, !dbg !5252
  %10 = load i8, i8* %use_render_resolution.addr, align 1, !dbg !5253
  call void @do_makeDispListCurveTypes(%struct.Scene* %5, %struct.Object* %6, %struct.ListBase* %7, %struct.DerivedMesh** %8, i8 zeroext 1, i8 zeroext %9, i8 zeroext %10), !dbg !5254
  ret void, !dbg !5255
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_displist_make_curveTypes_forOrco(%struct.Scene* %scene, %struct.Object* %ob, %struct.ListBase* %dispbase) #0 !dbg !5256 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dispbase.addr = alloca %struct.ListBase*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5260, metadata !DIExpression()), !dbg !5261
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5262, metadata !DIExpression()), !dbg !5263
  store %struct.ListBase* %dispbase, %struct.ListBase** %dispbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dispbase.addr, metadata !5264, metadata !DIExpression()), !dbg !5265
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5266
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 118, !dbg !5268
  %1 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !5268
  %cmp = icmp eq %struct.CurveCache* %1, null, !dbg !5269
  br i1 %cmp, label %if.then, label %if.end, !dbg !5270

if.then:                                          ; preds = %entry
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5271
  %call = call i8* %2(i64 56, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0)), !dbg !5271
  %3 = bitcast i8* %call to %struct.CurveCache*, !dbg !5271
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5273
  %curve_cache1 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 118, !dbg !5274
  store %struct.CurveCache* %3, %struct.CurveCache** %curve_cache1, align 8, !dbg !5275
  br label %if.end, !dbg !5276

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5277
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5278
  %7 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !5279
  call void @do_makeDispListCurveTypes(%struct.Scene* %5, %struct.Object* %6, %struct.ListBase* %7, %struct.DerivedMesh** null, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1), !dbg !5280
  ret void, !dbg !5281
}

; Function Attrs: noinline nounwind uwtable
define dso_local float* @BKE_displist_make_orco(%struct.Scene* %scene, %struct.Object* %ob, %struct.DerivedMesh* %dm_final, i8 zeroext %for_render, i8 zeroext %use_render_resolution) #0 !dbg !5282 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dm_final.addr = alloca %struct.DerivedMesh*, align 8
  %for_render.addr = alloca i8, align 1
  %use_render_resolution.addr = alloca i8, align 1
  %orco = alloca float*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5285, metadata !DIExpression()), !dbg !5286
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5287, metadata !DIExpression()), !dbg !5288
  store %struct.DerivedMesh* %dm_final, %struct.DerivedMesh** %dm_final.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm_final.addr, metadata !5289, metadata !DIExpression()), !dbg !5290
  store i8 %for_render, i8* %for_render.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %for_render.addr, metadata !5291, metadata !DIExpression()), !dbg !5292
  store i8 %use_render_resolution, i8* %use_render_resolution.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_render_resolution.addr, metadata !5293, metadata !DIExpression()), !dbg !5294
  call void @llvm.dbg.declare(metadata float** %orco, metadata !5295, metadata !DIExpression()), !dbg !5296
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm_final.addr, align 8, !dbg !5297
  %cmp = icmp eq %struct.DerivedMesh* %0, null, !dbg !5299
  br i1 %cmp, label %if.then, label %if.end, !dbg !5300

if.then:                                          ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5301
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 120, !dbg !5302
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !5302
  store %struct.DerivedMesh* %2, %struct.DerivedMesh** %dm_final.addr, align 8, !dbg !5303
  br label %if.end, !dbg !5304

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm_final.addr, align 8, !dbg !5305
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 50, !dbg !5307
  %4 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !5307
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm_final.addr, align 8, !dbg !5308
  %call = call i8* %4(%struct.DerivedMesh* %5, i32 14), !dbg !5305
  %tobool = icmp ne i8* %call, null, !dbg !5305
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !5309

if.then1:                                         ; preds = %if.end
  %6 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5310
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5312
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm_final.addr, align 8, !dbg !5313
  %9 = load i8, i8* %for_render.addr, align 1, !dbg !5314
  %10 = load i8, i8* %use_render_resolution.addr, align 1, !dbg !5315
  call void @curve_calc_orcodm(%struct.Scene* %6, %struct.Object* %7, %struct.DerivedMesh* %8, i8 zeroext %9, i8 zeroext %10), !dbg !5316
  br label %if.end2, !dbg !5317

if.end2:                                          ; preds = %if.then1, %if.end
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm_final.addr, align 8, !dbg !5318
  %getVertDataArray3 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %11, i32 0, i32 50, !dbg !5319
  %12 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray3, align 8, !dbg !5319
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm_final.addr, align 8, !dbg !5320
  %call4 = call i8* %12(%struct.DerivedMesh* %13, i32 14), !dbg !5318
  %14 = bitcast i8* %call4 to float*, !dbg !5318
  store float* %14, float** %orco, align 8, !dbg !5321
  %15 = load float*, float** %orco, align 8, !dbg !5322
  %tobool5 = icmp ne float* %15, null, !dbg !5322
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !5324

if.then6:                                         ; preds = %if.end2
  %16 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !5325
  %17 = load float*, float** %orco, align 8, !dbg !5327
  %18 = bitcast float* %17 to i8*, !dbg !5327
  %call7 = call i8* %16(i8* %18), !dbg !5325
  %19 = bitcast i8* %call7 to float*, !dbg !5325
  store float* %19, float** %orco, align 8, !dbg !5328
  br label %if.end8, !dbg !5329

if.end8:                                          ; preds = %if.then6, %if.end2
  %20 = load float*, float** %orco, align 8, !dbg !5330
  ret float* %20, !dbg !5331
}

; Function Attrs: noinline nounwind uwtable
define internal void @curve_calc_orcodm(%struct.Scene* %scene, %struct.Object* %ob, %struct.DerivedMesh* %dm_final, i8 zeroext %for_render, i8 zeroext %use_render_resolution) #0 !dbg !5332 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dm_final.addr = alloca %struct.DerivedMesh*, align 8
  %for_render.addr = alloca i8, align 1
  %use_render_resolution.addr = alloca i8, align 1
  %virtualModifierData = alloca %struct.VirtualModifierData, align 8
  %md = alloca %struct.ModifierData*, align 8
  %pretessellatePoint = alloca %struct.ModifierData*, align 8
  %cu = alloca %struct.Curve*, align 8
  %required_mode = alloca i32, align 4
  %editmode = alloca i8, align 1
  %ndm = alloca %struct.DerivedMesh*, align 8
  %orcodm = alloca %struct.DerivedMesh*, align 8
  %app_flag = alloca i32, align 4
  %mti = alloca %struct.ModifierTypeInfo*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5335, metadata !DIExpression()), !dbg !5336
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5337, metadata !DIExpression()), !dbg !5338
  store %struct.DerivedMesh* %dm_final, %struct.DerivedMesh** %dm_final.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm_final.addr, metadata !5339, metadata !DIExpression()), !dbg !5340
  store i8 %for_render, i8* %for_render.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %for_render.addr, metadata !5341, metadata !DIExpression()), !dbg !5342
  store i8 %use_render_resolution, i8* %use_render_resolution.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_render_resolution.addr, metadata !5343, metadata !DIExpression()), !dbg !5344
  call void @llvm.dbg.declare(metadata %struct.VirtualModifierData* %virtualModifierData, metadata !5345, metadata !DIExpression()), !dbg !5346
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !5347, metadata !DIExpression()), !dbg !5348
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5349
  %call = call %struct.ModifierData* @modifiers_getVirtualModifierList(%struct.Object* %0, %struct.VirtualModifierData* %virtualModifierData), !dbg !5350
  store %struct.ModifierData* %call, %struct.ModifierData** %md, align 8, !dbg !5348
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %pretessellatePoint, metadata !5351, metadata !DIExpression()), !dbg !5352
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !5353, metadata !DIExpression()), !dbg !5354
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5355
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !5356
  %2 = load i8*, i8** %data, align 8, !dbg !5356
  %3 = bitcast i8* %2 to %struct.Curve*, !dbg !5355
  store %struct.Curve* %3, %struct.Curve** %cu, align 8, !dbg !5354
  call void @llvm.dbg.declare(metadata i32* %required_mode, metadata !5357, metadata !DIExpression()), !dbg !5358
  call void @llvm.dbg.declare(metadata i8* %editmode, metadata !5359, metadata !DIExpression()), !dbg !5360
  %4 = load i8, i8* %for_render.addr, align 1, !dbg !5361
  %tobool = icmp ne i8 %4, 0, !dbg !5361
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !5362

land.rhs:                                         ; preds = %entry
  %5 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5363
  %editnurb = getelementptr inbounds %struct.Curve, %struct.Curve* %5, i32 0, i32 4, !dbg !5364
  %6 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !5364
  %tobool1 = icmp ne %struct.EditNurb* %6, null, !dbg !5363
  br i1 %tobool1, label %lor.end, label %lor.rhs, !dbg !5365

lor.rhs:                                          ; preds = %land.rhs
  %7 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5366
  %editfont = getelementptr inbounds %struct.Curve, %struct.Curve* %7, i32 0, i32 53, !dbg !5367
  %8 = load %struct.EditFont*, %struct.EditFont** %editfont, align 8, !dbg !5367
  %tobool2 = icmp ne %struct.EditFont* %8, null, !dbg !5365
  br label %lor.end, !dbg !5365

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %9 = phi i1 [ true, %land.rhs ], [ %tobool2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %entry
  %10 = phi i1 [ false, %entry ], [ %9, %lor.end ], !dbg !5368
  %land.ext = zext i1 %10 to i32, !dbg !5362
  %conv = trunc i32 %land.ext to i8, !dbg !5369
  store i8 %conv, i8* %editmode, align 1, !dbg !5360
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %ndm, metadata !5370, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %orcodm, metadata !5372, metadata !DIExpression()), !dbg !5373
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %orcodm, align 8, !dbg !5373
  call void @llvm.dbg.declare(metadata i32* %app_flag, metadata !5374, metadata !DIExpression()), !dbg !5375
  store i32 4, i32* %app_flag, align 4, !dbg !5375
  %11 = load i8, i8* %use_render_resolution.addr, align 1, !dbg !5376
  %tobool3 = icmp ne i8 %11, 0, !dbg !5376
  br i1 %tobool3, label %if.then, label %if.else, !dbg !5378

if.then:                                          ; preds = %land.end
  %12 = load i32, i32* %app_flag, align 4, !dbg !5379
  %or = or i32 %12, 1, !dbg !5379
  store i32 %or, i32* %app_flag, align 4, !dbg !5379
  store i32 2, i32* %required_mode, align 4, !dbg !5381
  br label %if.end, !dbg !5382

if.else:                                          ; preds = %land.end
  store i32 1, i32* %required_mode, align 4, !dbg !5383
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5384
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5385
  %15 = load i8, i8* %use_render_resolution.addr, align 1, !dbg !5386
  %16 = load i8, i8* %editmode, align 1, !dbg !5387
  %call4 = call %struct.ModifierData* @curve_get_tessellate_point(%struct.Scene* %13, %struct.Object* %14, i8 zeroext %15, i8 zeroext %16), !dbg !5388
  store %struct.ModifierData* %call4, %struct.ModifierData** %pretessellatePoint, align 8, !dbg !5389
  %17 = load i8, i8* %editmode, align 1, !dbg !5390
  %tobool5 = icmp ne i8 %17, 0, !dbg !5390
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !5392

if.then6:                                         ; preds = %if.end
  %18 = load i32, i32* %required_mode, align 4, !dbg !5393
  %or7 = or i32 %18, 4, !dbg !5393
  store i32 %or7, i32* %required_mode, align 4, !dbg !5393
  br label %if.end8, !dbg !5394

if.end8:                                          ; preds = %if.then6, %if.end
  %19 = load %struct.ModifierData*, %struct.ModifierData** %pretessellatePoint, align 8, !dbg !5395
  %tobool9 = icmp ne %struct.ModifierData* %19, null, !dbg !5395
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !5397

if.then10:                                        ; preds = %if.end8
  %20 = load %struct.ModifierData*, %struct.ModifierData** %pretessellatePoint, align 8, !dbg !5398
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %20, i32 0, i32 0, !dbg !5400
  %21 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !5400
  store %struct.ModifierData* %21, %struct.ModifierData** %md, align 8, !dbg !5401
  br label %if.end11, !dbg !5402

if.end11:                                         ; preds = %if.then10, %if.end8
  %22 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5403
  %23 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5404
  %call12 = call %struct.DerivedMesh* @create_orco_dm(%struct.Scene* %22, %struct.Object* %23), !dbg !5405
  store %struct.DerivedMesh* %call12, %struct.DerivedMesh** %orcodm, align 8, !dbg !5406
  br label %for.cond, !dbg !5407

for.cond:                                         ; preds = %for.inc, %if.end11
  %24 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5408
  %tobool13 = icmp ne %struct.ModifierData* %24, null, !dbg !5411
  br i1 %tobool13, label %for.body, label %for.end, !dbg !5411

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ModifierTypeInfo** %mti, metadata !5412, metadata !DIExpression()), !dbg !5414
  %25 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5415
  %type = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %25, i32 0, i32 2, !dbg !5416
  %26 = load i32, i32* %type, align 8, !dbg !5416
  %call14 = call %struct.ModifierTypeInfo* @modifierType_getInfo(i32 %26), !dbg !5417
  store %struct.ModifierTypeInfo* %call14, %struct.ModifierTypeInfo** %mti, align 8, !dbg !5414
  %27 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5418
  %28 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5419
  %scene15 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %28, i32 0, i32 7, !dbg !5420
  store %struct.Scene* %27, %struct.Scene** %scene15, align 8, !dbg !5421
  %29 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5422
  %30 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5424
  %31 = load i32, i32* %required_mode, align 4, !dbg !5425
  %call16 = call zeroext i8 @modifier_isEnabled(%struct.Scene* %29, %struct.ModifierData* %30, i32 %31), !dbg !5426
  %tobool17 = icmp ne i8 %call16, 0, !dbg !5426
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !5427

if.then18:                                        ; preds = %for.body
  br label %for.inc, !dbg !5428

if.end19:                                         ; preds = %for.body
  %32 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !5429
  %type20 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %32, i32 0, i32 3, !dbg !5431
  %33 = load i32, i32* %type20, align 4, !dbg !5431
  %cmp = icmp ne i32 %33, 2, !dbg !5432
  br i1 %cmp, label %if.then22, label %if.end23, !dbg !5433

if.then22:                                        ; preds = %if.end19
  br label %for.inc, !dbg !5434

if.end23:                                         ; preds = %if.end19
  %34 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5435
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5436
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !5437
  %37 = load i32, i32* %app_flag, align 4, !dbg !5438
  %call24 = call %struct.DerivedMesh* @modwrap_applyModifier(%struct.ModifierData* %34, %struct.Object* %35, %struct.DerivedMesh* %36, i32 %37), !dbg !5439
  store %struct.DerivedMesh* %call24, %struct.DerivedMesh** %ndm, align 8, !dbg !5440
  %38 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !5441
  %tobool25 = icmp ne %struct.DerivedMesh* %38, null, !dbg !5441
  br i1 %tobool25, label %if.then26, label %if.end32, !dbg !5443

if.then26:                                        ; preds = %if.end23
  %39 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !5444
  %tobool27 = icmp ne %struct.DerivedMesh* %39, null, !dbg !5444
  br i1 %tobool27, label %land.lhs.true, label %if.end31, !dbg !5447

land.lhs.true:                                    ; preds = %if.then26
  %40 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !5448
  %41 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !5449
  %cmp28 = icmp ne %struct.DerivedMesh* %40, %41, !dbg !5450
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !5451

if.then30:                                        ; preds = %land.lhs.true
  %42 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !5452
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %42, i32 0, i32 95, !dbg !5454
  %43 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !5454
  %44 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !5455
  call void %43(%struct.DerivedMesh* %44), !dbg !5452
  br label %if.end31, !dbg !5456

if.end31:                                         ; preds = %if.then30, %land.lhs.true, %if.then26
  %45 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !5457
  store %struct.DerivedMesh* %45, %struct.DerivedMesh** %orcodm, align 8, !dbg !5458
  br label %if.end32, !dbg !5459

if.end32:                                         ; preds = %if.end31, %if.end23
  br label %for.inc, !dbg !5460

for.inc:                                          ; preds = %if.end32, %if.then22, %if.then18
  %46 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5461
  %next33 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %46, i32 0, i32 0, !dbg !5462
  %47 = load %struct.ModifierData*, %struct.ModifierData** %next33, align 8, !dbg !5462
  store %struct.ModifierData* %47, %struct.ModifierData** %md, align 8, !dbg !5463
  br label %for.cond, !dbg !5464, !llvm.loop !5465

for.end:                                          ; preds = %for.cond
  %48 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5467
  %49 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm_final.addr, align 8, !dbg !5468
  %50 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !5469
  call void @add_orco_dm(%struct.Object* %48, %struct.DerivedMesh* %49, %struct.DerivedMesh* %50), !dbg !5470
  %51 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !5471
  %release34 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %51, i32 0, i32 95, !dbg !5472
  %52 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release34, align 8, !dbg !5472
  %53 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm, align 8, !dbg !5473
  call void %52(%struct.DerivedMesh* %53), !dbg !5471
  ret void, !dbg !5474
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_displist_minmax(%struct.ListBase* %dispbase, float* %min, float* %max) #0 !dbg !5475 {
entry:
  %dispbase.addr = alloca %struct.ListBase*, align 8
  %min.addr = alloca float*, align 8
  %max.addr = alloca float*, align 8
  %dl = alloca %struct.DispList*, align 8
  %vert = alloca float*, align 8
  %a = alloca i32, align 4
  %tot = alloca i32, align 4
  %doit = alloca i32, align 4
  store %struct.ListBase* %dispbase, %struct.ListBase** %dispbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dispbase.addr, metadata !5478, metadata !DIExpression()), !dbg !5479
  store float* %min, float** %min.addr, align 8
  call void @llvm.dbg.declare(metadata float** %min.addr, metadata !5480, metadata !DIExpression()), !dbg !5481
  store float* %max, float** %max.addr, align 8
  call void @llvm.dbg.declare(metadata float** %max.addr, metadata !5482, metadata !DIExpression()), !dbg !5483
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !5484, metadata !DIExpression()), !dbg !5485
  call void @llvm.dbg.declare(metadata float** %vert, metadata !5486, metadata !DIExpression()), !dbg !5487
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5488, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !5490, metadata !DIExpression()), !dbg !5491
  store i32 0, i32* %tot, align 4, !dbg !5491
  call void @llvm.dbg.declare(metadata i32* %doit, metadata !5492, metadata !DIExpression()), !dbg !5493
  store i32 0, i32* %doit, align 4, !dbg !5493
  %0 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !5494
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !5496
  %1 = load i8*, i8** %first, align 8, !dbg !5496
  %2 = bitcast i8* %1 to %struct.DispList*, !dbg !5494
  store %struct.DispList* %2, %struct.DispList** %dl, align 8, !dbg !5497
  br label %for.cond, !dbg !5498

for.cond:                                         ; preds = %for.inc9, %entry
  %3 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5499
  %tobool = icmp ne %struct.DispList* %3, null, !dbg !5501
  br i1 %tobool, label %for.body, label %for.end10, !dbg !5501

for.body:                                         ; preds = %for.cond
  %4 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5502
  %type = getelementptr inbounds %struct.DispList, %struct.DispList* %4, i32 0, i32 2, !dbg !5504
  %5 = load i16, i16* %type, align 8, !dbg !5504
  %conv = sext i16 %5 to i32, !dbg !5502
  %cmp = icmp eq i32 %conv, 4, !dbg !5505
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5506

cond.true:                                        ; preds = %for.body
  %6 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5507
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %6, i32 0, i32 5, !dbg !5508
  %7 = load i32, i32* %nr, align 8, !dbg !5508
  br label %cond.end, !dbg !5506

cond.false:                                       ; preds = %for.body
  %8 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5509
  %nr2 = getelementptr inbounds %struct.DispList, %struct.DispList* %8, i32 0, i32 5, !dbg !5510
  %9 = load i32, i32* %nr2, align 8, !dbg !5510
  %10 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5511
  %parts = getelementptr inbounds %struct.DispList, %struct.DispList* %10, i32 0, i32 4, !dbg !5512
  %11 = load i32, i32* %parts, align 4, !dbg !5512
  %mul = mul nsw i32 %9, %11, !dbg !5513
  br label %cond.end, !dbg !5506

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ %mul, %cond.false ], !dbg !5506
  store i32 %cond, i32* %tot, align 4, !dbg !5514
  %12 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5515
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %12, i32 0, i32 8, !dbg !5516
  %13 = load float*, float** %verts, align 8, !dbg !5516
  store float* %13, float** %vert, align 8, !dbg !5517
  store i32 0, i32* %a, align 4, !dbg !5518
  br label %for.cond3, !dbg !5520

for.cond3:                                        ; preds = %for.inc, %cond.end
  %14 = load i32, i32* %a, align 4, !dbg !5521
  %15 = load i32, i32* %tot, align 4, !dbg !5523
  %cmp4 = icmp slt i32 %14, %15, !dbg !5524
  br i1 %cmp4, label %for.body6, label %for.end, !dbg !5525

for.body6:                                        ; preds = %for.cond3
  %16 = load float*, float** %min.addr, align 8, !dbg !5526
  %17 = load float*, float** %max.addr, align 8, !dbg !5528
  %18 = load float*, float** %vert, align 8, !dbg !5529
  call void @minmax_v3v3_v3(float* %16, float* %17, float* %18), !dbg !5530
  br label %for.inc, !dbg !5531

for.inc:                                          ; preds = %for.body6
  %19 = load i32, i32* %a, align 4, !dbg !5532
  %inc = add nsw i32 %19, 1, !dbg !5532
  store i32 %inc, i32* %a, align 4, !dbg !5532
  %20 = load float*, float** %vert, align 8, !dbg !5533
  %add.ptr = getelementptr inbounds float, float* %20, i64 3, !dbg !5533
  store float* %add.ptr, float** %vert, align 8, !dbg !5533
  br label %for.cond3, !dbg !5534, !llvm.loop !5535

for.end:                                          ; preds = %for.cond3
  %21 = load i32, i32* %tot, align 4, !dbg !5537
  %cmp7 = icmp ne i32 %21, 0, !dbg !5538
  %conv8 = zext i1 %cmp7 to i32, !dbg !5538
  %22 = load i32, i32* %doit, align 4, !dbg !5539
  %or = or i32 %22, %conv8, !dbg !5539
  store i32 %or, i32* %doit, align 4, !dbg !5539
  br label %for.inc9, !dbg !5540

for.inc9:                                         ; preds = %for.end
  %23 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5541
  %next = getelementptr inbounds %struct.DispList, %struct.DispList* %23, i32 0, i32 0, !dbg !5542
  %24 = load %struct.DispList*, %struct.DispList** %next, align 8, !dbg !5542
  store %struct.DispList* %24, %struct.DispList** %dl, align 8, !dbg !5543
  br label %for.cond, !dbg !5544, !llvm.loop !5545

for.end10:                                        ; preds = %for.cond
  %25 = load i32, i32* %doit, align 4, !dbg !5547
  %tobool11 = icmp ne i32 %25, 0, !dbg !5547
  br i1 %tobool11, label %if.end, label %if.then, !dbg !5549

if.then:                                          ; preds = %for.end10
  %26 = load float*, float** %min.addr, align 8, !dbg !5550
  call void @zero_v3(float* %26), !dbg !5552
  %27 = load float*, float** %max.addr, align 8, !dbg !5553
  call void @zero_v3(float* %27), !dbg !5554
  br label %if.end, !dbg !5555

if.end:                                           ; preds = %if.then, %for.end10
  ret void, !dbg !5556
}

declare dso_local void @minmax_v3v3_v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !5557 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5560, metadata !DIExpression()), !dbg !5561
  %0 = load float*, float** %r.addr, align 8, !dbg !5562
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5562
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !5563
  %1 = load float*, float** %r.addr, align 8, !dbg !5564
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !5564
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !5565
  %2 = load float*, float** %r.addr, align 8, !dbg !5566
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !5566
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !5567
  ret void, !dbg !5568
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !5569 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5572, metadata !DIExpression()), !dbg !5573
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5574, metadata !DIExpression()), !dbg !5575
  call void @llvm.dbg.declare(metadata float* %d, metadata !5576, metadata !DIExpression()), !dbg !5577
  %0 = load float*, float** %a.addr, align 8, !dbg !5578
  %1 = load float*, float** %a.addr, align 8, !dbg !5579
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !5580
  store float %call, float* %d, align 4, !dbg !5577
  %2 = load float, float* %d, align 4, !dbg !5581
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !5583
  br i1 %cmp, label %if.then, label %if.else, !dbg !5584

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !5585
  %call1 = call float @sqrtf(float %3) #5, !dbg !5587
  store float %call1, float* %d, align 4, !dbg !5588
  %4 = load float*, float** %r.addr, align 8, !dbg !5589
  %5 = load float*, float** %a.addr, align 8, !dbg !5590
  %6 = load float, float* %d, align 4, !dbg !5591
  %div = fdiv float 1.000000e+00, %6, !dbg !5592
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !5593
  br label %if.end, !dbg !5594

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !5595
  call void @zero_v3(float* %7), !dbg !5597
  store float 0.000000e+00, float* %d, align 4, !dbg !5598
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !5599
  ret float %8, !dbg !5600
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !5601 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5604, metadata !DIExpression()), !dbg !5605
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5606, metadata !DIExpression()), !dbg !5607
  %0 = load float*, float** %a.addr, align 8, !dbg !5608
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5608
  %1 = load float, float* %arrayidx, align 4, !dbg !5608
  %2 = load float*, float** %b.addr, align 8, !dbg !5609
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5609
  %3 = load float, float* %arrayidx1, align 4, !dbg !5609
  %mul = fmul float %1, %3, !dbg !5610
  %4 = load float*, float** %a.addr, align 8, !dbg !5611
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5611
  %5 = load float, float* %arrayidx2, align 4, !dbg !5611
  %6 = load float*, float** %b.addr, align 8, !dbg !5612
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5612
  %7 = load float, float* %arrayidx3, align 4, !dbg !5612
  %mul4 = fmul float %5, %7, !dbg !5613
  %add = fadd float %mul, %mul4, !dbg !5614
  %8 = load float*, float** %a.addr, align 8, !dbg !5615
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5615
  %9 = load float, float* %arrayidx5, align 4, !dbg !5615
  %10 = load float*, float** %b.addr, align 8, !dbg !5616
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !5616
  %11 = load float, float* %arrayidx6, align 4, !dbg !5616
  %mul7 = fmul float %9, %11, !dbg !5617
  %add8 = fadd float %add, %mul7, !dbg !5618
  ret float %add8, !dbg !5619
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !5620 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5623, metadata !DIExpression()), !dbg !5624
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5625, metadata !DIExpression()), !dbg !5626
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !5627, metadata !DIExpression()), !dbg !5628
  %0 = load float*, float** %a.addr, align 8, !dbg !5629
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5629
  %1 = load float, float* %arrayidx, align 4, !dbg !5629
  %2 = load float, float* %f.addr, align 4, !dbg !5630
  %mul = fmul float %1, %2, !dbg !5631
  %3 = load float*, float** %r.addr, align 8, !dbg !5632
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !5632
  store float %mul, float* %arrayidx1, align 4, !dbg !5633
  %4 = load float*, float** %a.addr, align 8, !dbg !5634
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5634
  %5 = load float, float* %arrayidx2, align 4, !dbg !5634
  %6 = load float, float* %f.addr, align 4, !dbg !5635
  %mul3 = fmul float %5, %6, !dbg !5636
  %7 = load float*, float** %r.addr, align 8, !dbg !5637
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !5637
  store float %mul3, float* %arrayidx4, align 4, !dbg !5638
  %8 = load float*, float** %a.addr, align 8, !dbg !5639
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5639
  %9 = load float, float* %arrayidx5, align 4, !dbg !5639
  %10 = load float, float* %f.addr, align 4, !dbg !5640
  %mul6 = fmul float %9, %10, !dbg !5641
  %11 = load float*, float** %r.addr, align 8, !dbg !5642
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !5642
  store float %mul6, float* %arrayidx7, align 4, !dbg !5643
  ret void, !dbg !5644
}

declare dso_local %struct.ModifierData* @modifiers_getVirtualModifierList(%struct.Object*, %struct.VirtualModifierData*) #2

declare dso_local void @modifiers_clearErrors(%struct.Object*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.ModifierData* @curve_get_tessellate_point(%struct.Scene* %scene, %struct.Object* %ob, i8 zeroext %use_render_resolution, i8 zeroext %editmode) #0 !dbg !5645 {
entry:
  %retval = alloca %struct.ModifierData*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %use_render_resolution.addr = alloca i8, align 1
  %editmode.addr = alloca i8, align 1
  %virtualModifierData = alloca %struct.VirtualModifierData, align 8
  %md = alloca %struct.ModifierData*, align 8
  %pretessellatePoint = alloca %struct.ModifierData*, align 8
  %required_mode = alloca i32, align 4
  %mti = alloca %struct.ModifierTypeInfo*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5648, metadata !DIExpression()), !dbg !5649
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5650, metadata !DIExpression()), !dbg !5651
  store i8 %use_render_resolution, i8* %use_render_resolution.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_render_resolution.addr, metadata !5652, metadata !DIExpression()), !dbg !5653
  store i8 %editmode, i8* %editmode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %editmode.addr, metadata !5654, metadata !DIExpression()), !dbg !5655
  call void @llvm.dbg.declare(metadata %struct.VirtualModifierData* %virtualModifierData, metadata !5656, metadata !DIExpression()), !dbg !5657
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !5658, metadata !DIExpression()), !dbg !5659
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5660
  %call = call %struct.ModifierData* @modifiers_getVirtualModifierList(%struct.Object* %0, %struct.VirtualModifierData* %virtualModifierData), !dbg !5661
  store %struct.ModifierData* %call, %struct.ModifierData** %md, align 8, !dbg !5659
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %pretessellatePoint, metadata !5662, metadata !DIExpression()), !dbg !5663
  call void @llvm.dbg.declare(metadata i32* %required_mode, metadata !5664, metadata !DIExpression()), !dbg !5665
  %1 = load i8, i8* %use_render_resolution.addr, align 1, !dbg !5666
  %tobool = icmp ne i8 %1, 0, !dbg !5666
  br i1 %tobool, label %if.then, label %if.else, !dbg !5668

if.then:                                          ; preds = %entry
  store i32 2, i32* %required_mode, align 4, !dbg !5669
  br label %if.end, !dbg !5670

if.else:                                          ; preds = %entry
  store i32 1, i32* %required_mode, align 4, !dbg !5671
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %2 = load i8, i8* %editmode.addr, align 1, !dbg !5672
  %tobool1 = icmp ne i8 %2, 0, !dbg !5672
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !5674

if.then2:                                         ; preds = %if.end
  %3 = load i32, i32* %required_mode, align 4, !dbg !5675
  %or = or i32 %3, 4, !dbg !5675
  store i32 %or, i32* %required_mode, align 4, !dbg !5675
  br label %if.end3, !dbg !5676

if.end3:                                          ; preds = %if.then2, %if.end
  store %struct.ModifierData* null, %struct.ModifierData** %pretessellatePoint, align 8, !dbg !5677
  br label %for.cond, !dbg !5678

for.cond:                                         ; preds = %for.inc, %if.end3
  %4 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5679
  %tobool4 = icmp ne %struct.ModifierData* %4, null, !dbg !5682
  br i1 %tobool4, label %for.body, label %for.end, !dbg !5682

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ModifierTypeInfo** %mti, metadata !5683, metadata !DIExpression()), !dbg !5685
  %5 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5686
  %type = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %5, i32 0, i32 2, !dbg !5687
  %6 = load i32, i32* %type, align 8, !dbg !5687
  %call5 = call %struct.ModifierTypeInfo* @modifierType_getInfo(i32 %6), !dbg !5688
  store %struct.ModifierTypeInfo* %call5, %struct.ModifierTypeInfo** %mti, align 8, !dbg !5685
  %7 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5689
  %8 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5691
  %9 = load i32, i32* %required_mode, align 4, !dbg !5692
  %call6 = call zeroext i8 @modifier_isEnabled(%struct.Scene* %7, %struct.ModifierData* %8, i32 %9), !dbg !5693
  %tobool7 = icmp ne i8 %call6, 0, !dbg !5693
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !5694

if.then8:                                         ; preds = %for.body
  br label %for.inc, !dbg !5695

if.end9:                                          ; preds = %for.body
  %10 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !5696
  %type10 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %10, i32 0, i32 3, !dbg !5698
  %11 = load i32, i32* %type10, align 4, !dbg !5698
  %cmp = icmp eq i32 %11, 2, !dbg !5699
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !5700

if.then11:                                        ; preds = %if.end9
  %12 = load %struct.ModifierData*, %struct.ModifierData** %pretessellatePoint, align 8, !dbg !5701
  store %struct.ModifierData* %12, %struct.ModifierData** %retval, align 8, !dbg !5702
  br label %return, !dbg !5702

if.end12:                                         ; preds = %if.end9
  %13 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5703
  %type13 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %13, i32 0, i32 2, !dbg !5703
  %14 = load i32, i32* %type13, align 8, !dbg !5703
  %cmp14 = icmp eq i32 %14, 9, !dbg !5703
  br i1 %cmp14, label %if.then20, label %lor.lhs.false, !dbg !5703

lor.lhs.false:                                    ; preds = %if.end12
  %15 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5703
  %type15 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %15, i32 0, i32 2, !dbg !5703
  %16 = load i32, i32* %type15, align 8, !dbg !5703
  %cmp16 = icmp eq i32 %16, 10, !dbg !5703
  br i1 %cmp16, label %if.then20, label %lor.lhs.false17, !dbg !5703

lor.lhs.false17:                                  ; preds = %lor.lhs.false
  %17 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5703
  %type18 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %17, i32 0, i32 2, !dbg !5703
  %18 = load i32, i32* %type18, align 8, !dbg !5703
  %cmp19 = icmp eq i32 %18, 18, !dbg !5703
  br i1 %cmp19, label %if.then20, label %if.else22, !dbg !5705

if.then20:                                        ; preds = %lor.lhs.false17, %lor.lhs.false, %if.end12
  %19 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5706
  store %struct.ModifierData* %19, %struct.ModifierData** %pretessellatePoint, align 8, !dbg !5708
  %20 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5709
  %mode = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %20, i32 0, i32 3, !dbg !5710
  %21 = load i32, i32* %mode, align 4, !dbg !5711
  %or21 = or i32 %21, 64, !dbg !5711
  store i32 %or21, i32* %mode, align 4, !dbg !5711
  br label %if.end27, !dbg !5712

if.else22:                                        ; preds = %lor.lhs.false17
  %22 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5713
  %mode23 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %22, i32 0, i32 3, !dbg !5715
  %23 = load i32, i32* %mode23, align 4, !dbg !5715
  %and = and i32 %23, 64, !dbg !5716
  %tobool24 = icmp ne i32 %and, 0, !dbg !5716
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !5717

if.then25:                                        ; preds = %if.else22
  %24 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5718
  store %struct.ModifierData* %24, %struct.ModifierData** %pretessellatePoint, align 8, !dbg !5720
  br label %if.end26, !dbg !5721

if.end26:                                         ; preds = %if.then25, %if.else22
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then20
  br label %for.inc, !dbg !5722

for.inc:                                          ; preds = %if.end27, %if.then8
  %25 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5723
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %25, i32 0, i32 0, !dbg !5724
  %26 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !5724
  store %struct.ModifierData* %26, %struct.ModifierData** %md, align 8, !dbg !5725
  br label %for.cond, !dbg !5726, !llvm.loop !5727

for.end:                                          ; preds = %for.cond
  %27 = load %struct.ModifierData*, %struct.ModifierData** %pretessellatePoint, align 8, !dbg !5729
  store %struct.ModifierData* %27, %struct.ModifierData** %retval, align 8, !dbg !5730
  br label %return, !dbg !5730

return:                                           ; preds = %for.end, %if.then11
  %28 = load %struct.ModifierData*, %struct.ModifierData** %retval, align 8, !dbg !5731
  ret %struct.ModifierData* %28, !dbg !5731
}

declare dso_local float* @BKE_key_evaluate_object(%struct.Scene*, %struct.Object*, i32*) #2

declare dso_local [3 x float]* @BKE_curve_nurbs_keyVertexCos_get(%struct.ListBase*, float*) #2

declare dso_local %struct.ModifierTypeInfo* @modifierType_getInfo(i32) #2

declare dso_local zeroext i8 @modifier_isEnabled(%struct.Scene*, %struct.ModifierData*, i32) #2

declare dso_local [3 x float]* @BKE_curve_nurbs_vertexCos_get(%struct.ListBase*, i32*) #2

declare dso_local void @BK_curve_nurbs_vertexCos_apply(%struct.ListBase*, [3 x float]*) #2

declare dso_local void @BKE_curve_nurbs_keyVertexTilts_apply(%struct.ListBase*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal [3 x float]* @displist_get_allverts(%struct.ListBase* %dispbase, i32* %totvert) #0 !dbg !5732 {
entry:
  %dispbase.addr = alloca %struct.ListBase*, align 8
  %totvert.addr = alloca i32*, align 8
  %dl = alloca %struct.DispList*, align 8
  %allverts = alloca [3 x float]*, align 8
  %fp = alloca float*, align 8
  %offs = alloca i32, align 4
  store %struct.ListBase* %dispbase, %struct.ListBase** %dispbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dispbase.addr, metadata !5735, metadata !DIExpression()), !dbg !5736
  store i32* %totvert, i32** %totvert.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %totvert.addr, metadata !5737, metadata !DIExpression()), !dbg !5738
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !5739, metadata !DIExpression()), !dbg !5740
  call void @llvm.dbg.declare(metadata [3 x float]** %allverts, metadata !5741, metadata !DIExpression()), !dbg !5742
  call void @llvm.dbg.declare(metadata float** %fp, metadata !5743, metadata !DIExpression()), !dbg !5744
  %0 = load i32*, i32** %totvert.addr, align 8, !dbg !5745
  store i32 0, i32* %0, align 4, !dbg !5746
  %1 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !5747
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !5749
  %2 = load i8*, i8** %first, align 8, !dbg !5749
  %3 = bitcast i8* %2 to %struct.DispList*, !dbg !5747
  store %struct.DispList* %3, %struct.DispList** %dl, align 8, !dbg !5750
  br label %for.cond, !dbg !5751

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5752
  %tobool = icmp ne %struct.DispList* %4, null, !dbg !5754
  br i1 %tobool, label %for.body, label %for.end, !dbg !5754

for.body:                                         ; preds = %for.cond
  %5 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5755
  %type = getelementptr inbounds %struct.DispList, %struct.DispList* %5, i32 0, i32 2, !dbg !5756
  %6 = load i16, i16* %type, align 8, !dbg !5756
  %conv = sext i16 %6 to i32, !dbg !5755
  %cmp = icmp eq i32 %conv, 4, !dbg !5757
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5758

cond.true:                                        ; preds = %for.body
  %7 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5759
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %7, i32 0, i32 5, !dbg !5760
  %8 = load i32, i32* %nr, align 8, !dbg !5760
  br label %cond.end, !dbg !5758

cond.false:                                       ; preds = %for.body
  %9 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5761
  %parts = getelementptr inbounds %struct.DispList, %struct.DispList* %9, i32 0, i32 4, !dbg !5762
  %10 = load i32, i32* %parts, align 4, !dbg !5762
  %11 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5763
  %nr2 = getelementptr inbounds %struct.DispList, %struct.DispList* %11, i32 0, i32 5, !dbg !5764
  %12 = load i32, i32* %nr2, align 8, !dbg !5764
  %mul = mul nsw i32 %10, %12, !dbg !5765
  br label %cond.end, !dbg !5758

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ %mul, %cond.false ], !dbg !5758
  %13 = load i32*, i32** %totvert.addr, align 8, !dbg !5766
  %14 = load i32, i32* %13, align 4, !dbg !5767
  %add = add nsw i32 %14, %cond, !dbg !5767
  store i32 %add, i32* %13, align 4, !dbg !5767
  br label %for.inc, !dbg !5768

for.inc:                                          ; preds = %cond.end
  %15 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5769
  %next = getelementptr inbounds %struct.DispList, %struct.DispList* %15, i32 0, i32 0, !dbg !5770
  %16 = load %struct.DispList*, %struct.DispList** %next, align 8, !dbg !5770
  store %struct.DispList* %16, %struct.DispList** %dl, align 8, !dbg !5771
  br label %for.cond, !dbg !5772, !llvm.loop !5773

for.end:                                          ; preds = %for.cond
  %17 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5775
  %18 = load i32*, i32** %totvert.addr, align 8, !dbg !5776
  %19 = load i32, i32* %18, align 4, !dbg !5777
  %conv3 = sext i32 %19 to i64, !dbg !5778
  %mul4 = mul i64 %conv3, 4, !dbg !5779
  %mul5 = mul i64 %mul4, 3, !dbg !5780
  %call = call i8* %17(i64 %mul5, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11, i64 0, i64 0)), !dbg !5775
  %20 = bitcast i8* %call to [3 x float]*, !dbg !5775
  store [3 x float]* %20, [3 x float]** %allverts, align 8, !dbg !5781
  %21 = load [3 x float]*, [3 x float]** %allverts, align 8, !dbg !5782
  %22 = bitcast [3 x float]* %21 to float*, !dbg !5783
  store float* %22, float** %fp, align 8, !dbg !5784
  %23 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !5785
  %first6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %23, i32 0, i32 0, !dbg !5787
  %24 = load i8*, i8** %first6, align 8, !dbg !5787
  %25 = bitcast i8* %24 to %struct.DispList*, !dbg !5785
  store %struct.DispList* %25, %struct.DispList** %dl, align 8, !dbg !5788
  br label %for.cond7, !dbg !5789

for.cond7:                                        ; preds = %for.inc25, %for.end
  %26 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5790
  %tobool8 = icmp ne %struct.DispList* %26, null, !dbg !5792
  br i1 %tobool8, label %for.body9, label %for.end27, !dbg !5792

for.body9:                                        ; preds = %for.cond7
  call void @llvm.dbg.declare(metadata i32* %offs, metadata !5793, metadata !DIExpression()), !dbg !5795
  %27 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5796
  %type10 = getelementptr inbounds %struct.DispList, %struct.DispList* %27, i32 0, i32 2, !dbg !5797
  %28 = load i16, i16* %type10, align 8, !dbg !5797
  %conv11 = sext i16 %28 to i32, !dbg !5796
  %cmp12 = icmp eq i32 %conv11, 4, !dbg !5798
  br i1 %cmp12, label %cond.true14, label %cond.false16, !dbg !5799

cond.true14:                                      ; preds = %for.body9
  %29 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5800
  %nr15 = getelementptr inbounds %struct.DispList, %struct.DispList* %29, i32 0, i32 5, !dbg !5801
  %30 = load i32, i32* %nr15, align 8, !dbg !5801
  br label %cond.end20, !dbg !5799

cond.false16:                                     ; preds = %for.body9
  %31 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5802
  %parts17 = getelementptr inbounds %struct.DispList, %struct.DispList* %31, i32 0, i32 4, !dbg !5803
  %32 = load i32, i32* %parts17, align 4, !dbg !5803
  %33 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5804
  %nr18 = getelementptr inbounds %struct.DispList, %struct.DispList* %33, i32 0, i32 5, !dbg !5805
  %34 = load i32, i32* %nr18, align 8, !dbg !5805
  %mul19 = mul nsw i32 %32, %34, !dbg !5806
  br label %cond.end20, !dbg !5799

cond.end20:                                       ; preds = %cond.false16, %cond.true14
  %cond21 = phi i32 [ %30, %cond.true14 ], [ %mul19, %cond.false16 ], !dbg !5799
  %mul22 = mul nsw i32 3, %cond21, !dbg !5807
  store i32 %mul22, i32* %offs, align 4, !dbg !5795
  %35 = load float*, float** %fp, align 8, !dbg !5808
  %36 = bitcast float* %35 to i8*, !dbg !5809
  %37 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5810
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %37, i32 0, i32 8, !dbg !5811
  %38 = load float*, float** %verts, align 8, !dbg !5811
  %39 = bitcast float* %38 to i8*, !dbg !5809
  %40 = load i32, i32* %offs, align 4, !dbg !5812
  %conv23 = sext i32 %40 to i64, !dbg !5812
  %mul24 = mul i64 4, %conv23, !dbg !5813
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %39, i64 %mul24, i1 false), !dbg !5809
  %41 = load i32, i32* %offs, align 4, !dbg !5814
  %42 = load float*, float** %fp, align 8, !dbg !5815
  %idx.ext = sext i32 %41 to i64, !dbg !5815
  %add.ptr = getelementptr inbounds float, float* %42, i64 %idx.ext, !dbg !5815
  store float* %add.ptr, float** %fp, align 8, !dbg !5815
  br label %for.inc25, !dbg !5816

for.inc25:                                        ; preds = %cond.end20
  %43 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5817
  %next26 = getelementptr inbounds %struct.DispList, %struct.DispList* %43, i32 0, i32 0, !dbg !5818
  %44 = load %struct.DispList*, %struct.DispList** %next26, align 8, !dbg !5818
  store %struct.DispList* %44, %struct.DispList** %dl, align 8, !dbg !5819
  br label %for.cond7, !dbg !5820, !llvm.loop !5821

for.end27:                                        ; preds = %for.cond7
  %45 = load [3 x float]*, [3 x float]** %allverts, align 8, !dbg !5823
  ret [3 x float]* %45, !dbg !5824
}

declare dso_local %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh*) #2

declare dso_local void @CDDM_apply_vert_coords(%struct.DerivedMesh*, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @displist_apply_allverts(%struct.ListBase* %dispbase, [3 x float]* %allverts) #0 !dbg !5825 {
entry:
  %dispbase.addr = alloca %struct.ListBase*, align 8
  %allverts.addr = alloca [3 x float]*, align 8
  %dl = alloca %struct.DispList*, align 8
  %fp = alloca float*, align 8
  %offs = alloca i32, align 4
  store %struct.ListBase* %dispbase, %struct.ListBase** %dispbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dispbase.addr, metadata !5828, metadata !DIExpression()), !dbg !5829
  store [3 x float]* %allverts, [3 x float]** %allverts.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %allverts.addr, metadata !5830, metadata !DIExpression()), !dbg !5831
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !5832, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.declare(metadata float** %fp, metadata !5834, metadata !DIExpression()), !dbg !5835
  %0 = load [3 x float]*, [3 x float]** %allverts.addr, align 8, !dbg !5836
  %1 = bitcast [3 x float]* %0 to float*, !dbg !5837
  store float* %1, float** %fp, align 8, !dbg !5838
  %2 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !5839
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %2, i32 0, i32 0, !dbg !5841
  %3 = load i8*, i8** %first, align 8, !dbg !5841
  %4 = bitcast i8* %3 to %struct.DispList*, !dbg !5839
  store %struct.DispList* %4, %struct.DispList** %dl, align 8, !dbg !5842
  br label %for.cond, !dbg !5843

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5844
  %tobool = icmp ne %struct.DispList* %5, null, !dbg !5846
  br i1 %tobool, label %for.body, label %for.end, !dbg !5846

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %offs, metadata !5847, metadata !DIExpression()), !dbg !5849
  %6 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5850
  %type = getelementptr inbounds %struct.DispList, %struct.DispList* %6, i32 0, i32 2, !dbg !5851
  %7 = load i16, i16* %type, align 8, !dbg !5851
  %conv = sext i16 %7 to i32, !dbg !5850
  %cmp = icmp eq i32 %conv, 4, !dbg !5852
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5853

cond.true:                                        ; preds = %for.body
  %8 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5854
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %8, i32 0, i32 5, !dbg !5855
  %9 = load i32, i32* %nr, align 8, !dbg !5855
  br label %cond.end, !dbg !5853

cond.false:                                       ; preds = %for.body
  %10 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5856
  %parts = getelementptr inbounds %struct.DispList, %struct.DispList* %10, i32 0, i32 4, !dbg !5857
  %11 = load i32, i32* %parts, align 4, !dbg !5857
  %12 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5858
  %nr2 = getelementptr inbounds %struct.DispList, %struct.DispList* %12, i32 0, i32 5, !dbg !5859
  %13 = load i32, i32* %nr2, align 8, !dbg !5859
  %mul = mul nsw i32 %11, %13, !dbg !5860
  br label %cond.end, !dbg !5853

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ %mul, %cond.false ], !dbg !5853
  %mul3 = mul nsw i32 3, %cond, !dbg !5861
  store i32 %mul3, i32* %offs, align 4, !dbg !5849
  %14 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5862
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %14, i32 0, i32 8, !dbg !5863
  %15 = load float*, float** %verts, align 8, !dbg !5863
  %16 = bitcast float* %15 to i8*, !dbg !5864
  %17 = load float*, float** %fp, align 8, !dbg !5865
  %18 = bitcast float* %17 to i8*, !dbg !5864
  %19 = load i32, i32* %offs, align 4, !dbg !5866
  %conv4 = sext i32 %19 to i64, !dbg !5866
  %mul5 = mul i64 4, %conv4, !dbg !5867
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %18, i64 %mul5, i1 false), !dbg !5864
  %20 = load i32, i32* %offs, align 4, !dbg !5868
  %21 = load float*, float** %fp, align 8, !dbg !5869
  %idx.ext = sext i32 %20 to i64, !dbg !5869
  %add.ptr = getelementptr inbounds float, float* %21, i64 %idx.ext, !dbg !5869
  store float* %add.ptr, float** %fp, align 8, !dbg !5869
  br label %for.inc, !dbg !5870

for.inc:                                          ; preds = %cond.end
  %22 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5871
  %next = getelementptr inbounds %struct.DispList, %struct.DispList* %22, i32 0, i32 0, !dbg !5872
  %23 = load %struct.DispList*, %struct.DispList** %next, align 8, !dbg !5872
  store %struct.DispList* %23, %struct.DispList** %dl, align 8, !dbg !5873
  br label %for.cond, !dbg !5874, !llvm.loop !5875

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5877
}

; Function Attrs: noinline nounwind uwtable
define internal void @curve_to_filledpoly(%struct.Curve* %cu, %struct.ListBase* %UNUSED_nurb, %struct.ListBase* %dispbase) #0 !dbg !5878 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %UNUSED_nurb.addr = alloca %struct.ListBase*, align 8
  %dispbase.addr = alloca %struct.ListBase*, align 8
  %z_up = alloca [3 x float], align 4
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !5881, metadata !DIExpression()), !dbg !5882
  store %struct.ListBase* %UNUSED_nurb, %struct.ListBase** %UNUSED_nurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %UNUSED_nurb.addr, metadata !5883, metadata !DIExpression()), !dbg !5884
  store %struct.ListBase* %dispbase, %struct.ListBase** %dispbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dispbase.addr, metadata !5885, metadata !DIExpression()), !dbg !5886
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !5887
  %flag = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 23, !dbg !5887
  %1 = load i32, i32* %flag, align 4, !dbg !5887
  %and = and i32 %1, 1, !dbg !5887
  %cmp = icmp eq i32 %and, 0, !dbg !5887
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !5887

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !5887
  %flag1 = getelementptr inbounds %struct.Curve, %struct.Curve* %2, i32 0, i32 23, !dbg !5887
  %3 = load i32, i32* %flag1, align 4, !dbg !5887
  %and2 = and i32 %3, 6, !dbg !5887
  %cmp3 = icmp ne i32 %and2, 0, !dbg !5887
  br i1 %cmp3, label %if.end, label %if.then, !dbg !5889

if.then:                                          ; preds = %land.lhs.true, %entry
  br label %if.end9, !dbg !5890

if.end:                                           ; preds = %land.lhs.true
  %4 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !5891
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %4, i32 0, i32 0, !dbg !5893
  %5 = load i8*, i8** %first, align 8, !dbg !5893
  %tobool = icmp ne i8* %5, null, !dbg !5891
  br i1 %tobool, label %land.lhs.true4, label %if.else, !dbg !5894

land.lhs.true4:                                   ; preds = %if.end
  %6 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !5895
  %first5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %6, i32 0, i32 0, !dbg !5896
  %7 = load i8*, i8** %first5, align 8, !dbg !5896
  %8 = bitcast i8* %7 to %struct.DispList*, !dbg !5897
  %type = getelementptr inbounds %struct.DispList, %struct.DispList* %8, i32 0, i32 2, !dbg !5898
  %9 = load i16, i16* %type, align 8, !dbg !5898
  %conv = sext i16 %9 to i32, !dbg !5899
  %cmp6 = icmp eq i32 %conv, 2, !dbg !5900
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !5901

if.then8:                                         ; preds = %land.lhs.true4
  %10 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !5902
  %11 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !5904
  call void @bevels_to_filledpoly(%struct.Curve* %10, %struct.ListBase* %11), !dbg !5905
  br label %if.end9, !dbg !5906

if.else:                                          ; preds = %land.lhs.true4, %if.end
  call void @llvm.dbg.declare(metadata [3 x float]* %z_up, metadata !5907, metadata !DIExpression()), !dbg !5910
  %12 = bitcast [3 x float]* %z_up to i8*, !dbg !5910
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 bitcast ([3 x float]* @__const.curve_to_filledpoly.z_up to i8*), i64 12, i1 false), !dbg !5910
  %13 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !5911
  %14 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !5912
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %z_up, i64 0, i64 0, !dbg !5913
  call void @BKE_displist_fill(%struct.ListBase* %13, %struct.ListBase* %14, float* %arraydecay, i8 zeroext 0), !dbg !5914
  br label %if.end9

if.end9:                                          ; preds = %if.then, %if.else, %if.then8
  ret void, !dbg !5915
}

declare dso_local %struct.DerivedMesh* @CDDM_from_curve_displist(%struct.Object*, %struct.ListBase*) #2

declare dso_local %struct.DerivedMesh* @modwrap_applyModifier(%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, i32) #2

declare dso_local void @CDDM_calc_normals_mapping(%struct.DerivedMesh*) #2

declare dso_local void @DM_update_tessface_data(%struct.DerivedMesh*) #2

declare dso_local void @CDDM_calc_normals_mapping_ex(%struct.DerivedMesh*, i8 zeroext) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @bevels_to_filledpoly(%struct.Curve* %cu, %struct.ListBase* %dispbase) #0 !dbg !5916 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %dispbase.addr = alloca %struct.ListBase*, align 8
  %z_up = alloca [3 x float], align 4
  %front = alloca %struct.ListBase, align 8
  %back = alloca %struct.ListBase, align 8
  %dl = alloca %struct.DispList*, align 8
  %dlnew = alloca %struct.DispList*, align 8
  %fp = alloca float*, align 8
  %fp1 = alloca float*, align 8
  %a = alloca i32, align 4
  %dpoly = alloca i32, align 4
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !5919, metadata !DIExpression()), !dbg !5920
  store %struct.ListBase* %dispbase, %struct.ListBase** %dispbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dispbase.addr, metadata !5921, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.declare(metadata [3 x float]* %z_up, metadata !5923, metadata !DIExpression()), !dbg !5924
  %0 = bitcast [3 x float]* %z_up to i8*, !dbg !5924
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 bitcast ([3 x float]* @__const.bevels_to_filledpoly.z_up to i8*), i64 12, i1 false), !dbg !5924
  call void @llvm.dbg.declare(metadata %struct.ListBase* %front, metadata !5925, metadata !DIExpression()), !dbg !5926
  call void @llvm.dbg.declare(metadata %struct.ListBase* %back, metadata !5927, metadata !DIExpression()), !dbg !5928
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !5929, metadata !DIExpression()), !dbg !5930
  call void @llvm.dbg.declare(metadata %struct.DispList** %dlnew, metadata !5931, metadata !DIExpression()), !dbg !5932
  call void @llvm.dbg.declare(metadata float** %fp, metadata !5933, metadata !DIExpression()), !dbg !5934
  call void @llvm.dbg.declare(metadata float** %fp1, metadata !5935, metadata !DIExpression()), !dbg !5936
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5937, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.declare(metadata i32* %dpoly, metadata !5939, metadata !DIExpression()), !dbg !5940
  call void @BLI_listbase_clear(%struct.ListBase* %front), !dbg !5941
  call void @BLI_listbase_clear(%struct.ListBase* %back), !dbg !5942
  %1 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !5943
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !5944
  %2 = load i8*, i8** %first, align 8, !dbg !5944
  %3 = bitcast i8* %2 to %struct.DispList*, !dbg !5943
  store %struct.DispList* %3, %struct.DispList** %dl, align 8, !dbg !5945
  br label %while.cond, !dbg !5946

while.cond:                                       ; preds = %if.end75, %entry
  %4 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5947
  %tobool = icmp ne %struct.DispList* %4, null, !dbg !5946
  br i1 %tobool, label %while.body, label %while.end76, !dbg !5946

while.body:                                       ; preds = %while.cond
  %5 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5948
  %type = getelementptr inbounds %struct.DispList, %struct.DispList* %5, i32 0, i32 2, !dbg !5951
  %6 = load i16, i16* %type, align 8, !dbg !5951
  %conv = sext i16 %6 to i32, !dbg !5948
  %cmp = icmp eq i32 %conv, 2, !dbg !5952
  br i1 %cmp, label %if.then, label %if.end75, !dbg !5953

if.then:                                          ; preds = %while.body
  %7 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5954
  %flag = getelementptr inbounds %struct.DispList, %struct.DispList* %7, i32 0, i32 3, !dbg !5957
  %8 = load i16, i16* %flag, align 2, !dbg !5957
  %conv2 = sext i16 %8 to i32, !dbg !5954
  %and = and i32 %conv2, 2, !dbg !5958
  %tobool3 = icmp ne i32 %and, 0, !dbg !5958
  br i1 %tobool3, label %land.lhs.true, label %if.end74, !dbg !5959

land.lhs.true:                                    ; preds = %if.then
  %9 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5960
  %flag4 = getelementptr inbounds %struct.DispList, %struct.DispList* %9, i32 0, i32 3, !dbg !5961
  %10 = load i16, i16* %flag4, align 2, !dbg !5961
  %conv5 = sext i16 %10 to i32, !dbg !5960
  %and6 = and i32 %conv5, 1, !dbg !5962
  %cmp7 = icmp eq i32 %and6, 0, !dbg !5963
  br i1 %cmp7, label %if.then9, label %if.end74, !dbg !5964

if.then9:                                         ; preds = %land.lhs.true
  %11 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !5965
  %flag10 = getelementptr inbounds %struct.Curve, %struct.Curve* %11, i32 0, i32 23, !dbg !5968
  %12 = load i32, i32* %flag10, align 4, !dbg !5968
  %and11 = and i32 %12, 4, !dbg !5969
  %tobool12 = icmp ne i32 %and11, 0, !dbg !5969
  br i1 %tobool12, label %land.lhs.true13, label %if.end, !dbg !5970

land.lhs.true13:                                  ; preds = %if.then9
  %13 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5971
  %flag14 = getelementptr inbounds %struct.DispList, %struct.DispList* %13, i32 0, i32 3, !dbg !5972
  %14 = load i16, i16* %flag14, align 2, !dbg !5972
  %conv15 = sext i16 %14 to i32, !dbg !5971
  %and16 = and i32 %conv15, 8, !dbg !5973
  %tobool17 = icmp ne i32 %and16, 0, !dbg !5973
  br i1 %tobool17, label %if.then18, label %if.end, !dbg !5974

if.then18:                                        ; preds = %land.lhs.true13
  %15 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5975
  %call = call i8* %15(i64 72, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0)), !dbg !5975
  %16 = bitcast i8* %call to %struct.DispList*, !dbg !5975
  store %struct.DispList* %16, %struct.DispList** %dlnew, align 8, !dbg !5977
  %17 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !5978
  %18 = bitcast %struct.DispList* %17 to i8*, !dbg !5978
  call void @BLI_addtail(%struct.ListBase* %front, i8* %18), !dbg !5979
  %19 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5980
  %20 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5981
  %parts = getelementptr inbounds %struct.DispList, %struct.DispList* %20, i32 0, i32 4, !dbg !5982
  %21 = load i32, i32* %parts, align 4, !dbg !5982
  %conv19 = sext i32 %21 to i64, !dbg !5981
  %mul = mul i64 12, %conv19, !dbg !5983
  %call20 = call i8* %19(i64 %mul, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)), !dbg !5980
  %22 = bitcast i8* %call20 to float*, !dbg !5980
  store float* %22, float** %fp1, align 8, !dbg !5984
  %23 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !5985
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %23, i32 0, i32 8, !dbg !5986
  store float* %22, float** %verts, align 8, !dbg !5987
  %24 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5988
  %parts21 = getelementptr inbounds %struct.DispList, %struct.DispList* %24, i32 0, i32 4, !dbg !5989
  %25 = load i32, i32* %parts21, align 4, !dbg !5989
  %26 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !5990
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %26, i32 0, i32 5, !dbg !5991
  store i32 %25, i32* %nr, align 8, !dbg !5992
  %27 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !5993
  %parts22 = getelementptr inbounds %struct.DispList, %struct.DispList* %27, i32 0, i32 4, !dbg !5994
  store i32 1, i32* %parts22, align 4, !dbg !5995
  %28 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !5996
  %type23 = getelementptr inbounds %struct.DispList, %struct.DispList* %28, i32 0, i32 2, !dbg !5997
  store i16 0, i16* %type23, align 8, !dbg !5998
  %29 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !5999
  %col = getelementptr inbounds %struct.DispList, %struct.DispList* %29, i32 0, i32 6, !dbg !6000
  %30 = load i16, i16* %col, align 4, !dbg !6000
  %31 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !6001
  %col24 = getelementptr inbounds %struct.DispList, %struct.DispList* %31, i32 0, i32 6, !dbg !6002
  store i16 %30, i16* %col24, align 4, !dbg !6003
  %32 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6004
  %charidx = getelementptr inbounds %struct.DispList, %struct.DispList* %32, i32 0, i32 11, !dbg !6005
  %33 = load i32, i32* %charidx, align 8, !dbg !6005
  %34 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !6006
  %charidx25 = getelementptr inbounds %struct.DispList, %struct.DispList* %34, i32 0, i32 11, !dbg !6007
  store i32 %33, i32* %charidx25, align 8, !dbg !6008
  %35 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6009
  %verts26 = getelementptr inbounds %struct.DispList, %struct.DispList* %35, i32 0, i32 8, !dbg !6010
  %36 = load float*, float** %verts26, align 8, !dbg !6010
  store float* %36, float** %fp, align 8, !dbg !6011
  %37 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6012
  %nr27 = getelementptr inbounds %struct.DispList, %struct.DispList* %37, i32 0, i32 5, !dbg !6013
  %38 = load i32, i32* %nr27, align 8, !dbg !6013
  %mul28 = mul nsw i32 3, %38, !dbg !6014
  store i32 %mul28, i32* %dpoly, align 4, !dbg !6015
  %39 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6016
  %parts29 = getelementptr inbounds %struct.DispList, %struct.DispList* %39, i32 0, i32 4, !dbg !6017
  %40 = load i32, i32* %parts29, align 4, !dbg !6017
  store i32 %40, i32* %a, align 4, !dbg !6018
  br label %while.cond30, !dbg !6019

while.cond30:                                     ; preds = %while.body32, %if.then18
  %41 = load i32, i32* %a, align 4, !dbg !6020
  %dec = add nsw i32 %41, -1, !dbg !6020
  store i32 %dec, i32* %a, align 4, !dbg !6020
  %tobool31 = icmp ne i32 %41, 0, !dbg !6019
  br i1 %tobool31, label %while.body32, label %while.end, !dbg !6019

while.body32:                                     ; preds = %while.cond30
  %42 = load float*, float** %fp1, align 8, !dbg !6021
  %43 = load float*, float** %fp, align 8, !dbg !6023
  call void @copy_v3_v3(float* %42, float* %43), !dbg !6024
  %44 = load float*, float** %fp1, align 8, !dbg !6025
  %add.ptr = getelementptr inbounds float, float* %44, i64 3, !dbg !6025
  store float* %add.ptr, float** %fp1, align 8, !dbg !6025
  %45 = load i32, i32* %dpoly, align 4, !dbg !6026
  %46 = load float*, float** %fp, align 8, !dbg !6027
  %idx.ext = sext i32 %45 to i64, !dbg !6027
  %add.ptr33 = getelementptr inbounds float, float* %46, i64 %idx.ext, !dbg !6027
  store float* %add.ptr33, float** %fp, align 8, !dbg !6027
  br label %while.cond30, !dbg !6019, !llvm.loop !6028

while.end:                                        ; preds = %while.cond30
  br label %if.end, !dbg !6030

if.end:                                           ; preds = %while.end, %land.lhs.true13, %if.then9
  %47 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !6031
  %flag34 = getelementptr inbounds %struct.Curve, %struct.Curve* %47, i32 0, i32 23, !dbg !6033
  %48 = load i32, i32* %flag34, align 4, !dbg !6033
  %and35 = and i32 %48, 2, !dbg !6034
  %tobool36 = icmp ne i32 %and35, 0, !dbg !6034
  br i1 %tobool36, label %land.lhs.true37, label %if.end73, !dbg !6035

land.lhs.true37:                                  ; preds = %if.end
  %49 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6036
  %flag38 = getelementptr inbounds %struct.DispList, %struct.DispList* %49, i32 0, i32 3, !dbg !6037
  %50 = load i16, i16* %flag38, align 2, !dbg !6037
  %conv39 = sext i16 %50 to i32, !dbg !6036
  %and40 = and i32 %conv39, 4, !dbg !6038
  %tobool41 = icmp ne i32 %and40, 0, !dbg !6038
  br i1 %tobool41, label %if.then42, label %if.end73, !dbg !6039

if.then42:                                        ; preds = %land.lhs.true37
  %51 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6040
  %call43 = call i8* %51(i64 72, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0)), !dbg !6040
  %52 = bitcast i8* %call43 to %struct.DispList*, !dbg !6040
  store %struct.DispList* %52, %struct.DispList** %dlnew, align 8, !dbg !6042
  %53 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !6043
  %54 = bitcast %struct.DispList* %53 to i8*, !dbg !6043
  call void @BLI_addtail(%struct.ListBase* %back, i8* %54), !dbg !6044
  %55 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6045
  %56 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6046
  %parts44 = getelementptr inbounds %struct.DispList, %struct.DispList* %56, i32 0, i32 4, !dbg !6047
  %57 = load i32, i32* %parts44, align 4, !dbg !6047
  %conv45 = sext i32 %57 to i64, !dbg !6046
  %mul46 = mul i64 12, %conv45, !dbg !6048
  %call47 = call i8* %55(i64 %mul46, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)), !dbg !6045
  %58 = bitcast i8* %call47 to float*, !dbg !6045
  store float* %58, float** %fp1, align 8, !dbg !6049
  %59 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !6050
  %verts48 = getelementptr inbounds %struct.DispList, %struct.DispList* %59, i32 0, i32 8, !dbg !6051
  store float* %58, float** %verts48, align 8, !dbg !6052
  %60 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6053
  %parts49 = getelementptr inbounds %struct.DispList, %struct.DispList* %60, i32 0, i32 4, !dbg !6054
  %61 = load i32, i32* %parts49, align 4, !dbg !6054
  %62 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !6055
  %nr50 = getelementptr inbounds %struct.DispList, %struct.DispList* %62, i32 0, i32 5, !dbg !6056
  store i32 %61, i32* %nr50, align 8, !dbg !6057
  %63 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !6058
  %parts51 = getelementptr inbounds %struct.DispList, %struct.DispList* %63, i32 0, i32 4, !dbg !6059
  store i32 1, i32* %parts51, align 4, !dbg !6060
  %64 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !6061
  %type52 = getelementptr inbounds %struct.DispList, %struct.DispList* %64, i32 0, i32 2, !dbg !6062
  store i16 0, i16* %type52, align 8, !dbg !6063
  %65 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6064
  %col53 = getelementptr inbounds %struct.DispList, %struct.DispList* %65, i32 0, i32 6, !dbg !6065
  %66 = load i16, i16* %col53, align 4, !dbg !6065
  %67 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !6066
  %col54 = getelementptr inbounds %struct.DispList, %struct.DispList* %67, i32 0, i32 6, !dbg !6067
  store i16 %66, i16* %col54, align 4, !dbg !6068
  %68 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6069
  %charidx55 = getelementptr inbounds %struct.DispList, %struct.DispList* %68, i32 0, i32 11, !dbg !6070
  %69 = load i32, i32* %charidx55, align 8, !dbg !6070
  %70 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !6071
  %charidx56 = getelementptr inbounds %struct.DispList, %struct.DispList* %70, i32 0, i32 11, !dbg !6072
  store i32 %69, i32* %charidx56, align 8, !dbg !6073
  %71 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6074
  %verts57 = getelementptr inbounds %struct.DispList, %struct.DispList* %71, i32 0, i32 8, !dbg !6075
  %72 = load float*, float** %verts57, align 8, !dbg !6075
  %73 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6076
  %nr58 = getelementptr inbounds %struct.DispList, %struct.DispList* %73, i32 0, i32 5, !dbg !6077
  %74 = load i32, i32* %nr58, align 8, !dbg !6077
  %sub = sub nsw i32 %74, 1, !dbg !6078
  %mul59 = mul nsw i32 3, %sub, !dbg !6079
  %idx.ext60 = sext i32 %mul59 to i64, !dbg !6080
  %add.ptr61 = getelementptr inbounds float, float* %72, i64 %idx.ext60, !dbg !6080
  store float* %add.ptr61, float** %fp, align 8, !dbg !6081
  %75 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6082
  %nr62 = getelementptr inbounds %struct.DispList, %struct.DispList* %75, i32 0, i32 5, !dbg !6083
  %76 = load i32, i32* %nr62, align 8, !dbg !6083
  %mul63 = mul nsw i32 3, %76, !dbg !6084
  store i32 %mul63, i32* %dpoly, align 4, !dbg !6085
  %77 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6086
  %parts64 = getelementptr inbounds %struct.DispList, %struct.DispList* %77, i32 0, i32 4, !dbg !6087
  %78 = load i32, i32* %parts64, align 4, !dbg !6087
  store i32 %78, i32* %a, align 4, !dbg !6088
  br label %while.cond65, !dbg !6089

while.cond65:                                     ; preds = %while.body68, %if.then42
  %79 = load i32, i32* %a, align 4, !dbg !6090
  %dec66 = add nsw i32 %79, -1, !dbg !6090
  store i32 %dec66, i32* %a, align 4, !dbg !6090
  %tobool67 = icmp ne i32 %79, 0, !dbg !6089
  br i1 %tobool67, label %while.body68, label %while.end72, !dbg !6089

while.body68:                                     ; preds = %while.cond65
  %80 = load float*, float** %fp1, align 8, !dbg !6091
  %81 = load float*, float** %fp, align 8, !dbg !6093
  call void @copy_v3_v3(float* %80, float* %81), !dbg !6094
  %82 = load float*, float** %fp1, align 8, !dbg !6095
  %add.ptr69 = getelementptr inbounds float, float* %82, i64 3, !dbg !6095
  store float* %add.ptr69, float** %fp1, align 8, !dbg !6095
  %83 = load i32, i32* %dpoly, align 4, !dbg !6096
  %84 = load float*, float** %fp, align 8, !dbg !6097
  %idx.ext70 = sext i32 %83 to i64, !dbg !6097
  %add.ptr71 = getelementptr inbounds float, float* %84, i64 %idx.ext70, !dbg !6097
  store float* %add.ptr71, float** %fp, align 8, !dbg !6097
  br label %while.cond65, !dbg !6089, !llvm.loop !6098

while.end72:                                      ; preds = %while.cond65
  br label %if.end73, !dbg !6100

if.end73:                                         ; preds = %while.end72, %land.lhs.true37, %if.end
  br label %if.end74, !dbg !6101

if.end74:                                         ; preds = %if.end73, %land.lhs.true, %if.then
  br label %if.end75, !dbg !6102

if.end75:                                         ; preds = %if.end74, %while.body
  %85 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6103
  %next = getelementptr inbounds %struct.DispList, %struct.DispList* %85, i32 0, i32 0, !dbg !6104
  %86 = load %struct.DispList*, %struct.DispList** %next, align 8, !dbg !6104
  store %struct.DispList* %86, %struct.DispList** %dl, align 8, !dbg !6105
  br label %while.cond, !dbg !5946, !llvm.loop !6106

while.end76:                                      ; preds = %while.cond
  %87 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !6108
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %z_up, i64 0, i64 0, !dbg !6109
  call void @BKE_displist_fill(%struct.ListBase* %front, %struct.ListBase* %87, float* %arraydecay, i8 zeroext 1), !dbg !6110
  %88 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !6111
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %z_up, i64 0, i64 0, !dbg !6112
  call void @BKE_displist_fill(%struct.ListBase* %back, %struct.ListBase* %88, float* %arraydecay77, i8 zeroext 0), !dbg !6113
  call void @BKE_displist_free(%struct.ListBase* %front), !dbg !6114
  call void @BKE_displist_free(%struct.ListBase* %back), !dbg !6115
  %89 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !6116
  %90 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !6117
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %z_up, i64 0, i64 0, !dbg !6118
  call void @BKE_displist_fill(%struct.ListBase* %89, %struct.ListBase* %90, float* %arraydecay78, i8 zeroext 0), !dbg !6119
  ret void, !dbg !6120
}

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !6121 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !6124, metadata !DIExpression()), !dbg !6125
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !6126
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !6127
  store i8* null, i8** %last, align 8, !dbg !6128
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !6129
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !6130
  store i8* null, i8** %first, align 8, !dbg !6131
  ret void, !dbg !6132
}

declare dso_local void @BKE_curve_bevelList_free(%struct.ListBase*) #2

declare dso_local void @free_path(%struct.Path*) #2

declare dso_local zeroext i8 @BKE_vfont_to_curve_nubase(%struct.Main*, %struct.Object*, i32, %struct.ListBase*) #2

declare dso_local %struct.ListBase* @BKE_curve_nurbs_get(%struct.Curve*) #2

declare dso_local void @BKE_curve_bevelList_make(%struct.Object*, %struct.ListBase*, i8 zeroext) #2

declare dso_local void @BKE_curve_bevel_make(%struct.Scene*, %struct.Object*, %struct.ListBase*, i8 zeroext, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @curve_to_displist(%struct.Curve* %cu, %struct.ListBase* %nubase, %struct.ListBase* %dispbase, i8 zeroext %for_render, i8 zeroext %use_render_resolution) #0 !dbg !6133 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %nubase.addr = alloca %struct.ListBase*, align 8
  %dispbase.addr = alloca %struct.ListBase*, align 8
  %for_render.addr = alloca i8, align 1
  %use_render_resolution.addr = alloca i8, align 1
  %nu = alloca %struct.Nurb*, align 8
  %dl = alloca %struct.DispList*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %prevbezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %data = alloca float*, align 8
  %a = alloca i32, align 4
  %len = alloca i32, align 4
  %resolu = alloca i32, align 4
  %editmode = alloca i8, align 1
  %j = alloca i32, align 4
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !6136, metadata !DIExpression()), !dbg !6137
  store %struct.ListBase* %nubase, %struct.ListBase** %nubase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nubase.addr, metadata !6138, metadata !DIExpression()), !dbg !6139
  store %struct.ListBase* %dispbase, %struct.ListBase** %dispbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dispbase.addr, metadata !6140, metadata !DIExpression()), !dbg !6141
  store i8 %for_render, i8* %for_render.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %for_render.addr, metadata !6142, metadata !DIExpression()), !dbg !6143
  store i8 %use_render_resolution, i8* %use_render_resolution.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_render_resolution.addr, metadata !6144, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !6146, metadata !DIExpression()), !dbg !6147
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !6148, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !6150, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %prevbezt, metadata !6152, metadata !DIExpression()), !dbg !6153
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !6154, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.declare(metadata float** %data, metadata !6156, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6158, metadata !DIExpression()), !dbg !6159
  call void @llvm.dbg.declare(metadata i32* %len, metadata !6160, metadata !DIExpression()), !dbg !6161
  call void @llvm.dbg.declare(metadata i32* %resolu, metadata !6162, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.declare(metadata i8* %editmode, metadata !6164, metadata !DIExpression()), !dbg !6165
  %0 = load i8, i8* %for_render.addr, align 1, !dbg !6166
  %tobool = icmp ne i8 %0, 0, !dbg !6166
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !6167

land.rhs:                                         ; preds = %entry
  %1 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !6168
  %editnurb = getelementptr inbounds %struct.Curve, %struct.Curve* %1, i32 0, i32 4, !dbg !6169
  %2 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !6169
  %tobool1 = icmp ne %struct.EditNurb* %2, null, !dbg !6168
  br i1 %tobool1, label %lor.end, label %lor.rhs, !dbg !6170

lor.rhs:                                          ; preds = %land.rhs
  %3 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !6171
  %editfont = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 53, !dbg !6172
  %4 = load %struct.EditFont*, %struct.EditFont** %editfont, align 8, !dbg !6172
  %tobool2 = icmp ne %struct.EditFont* %4, null, !dbg !6170
  br label %lor.end, !dbg !6170

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %5 = phi i1 [ true, %land.rhs ], [ %tobool2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %entry
  %6 = phi i1 [ false, %entry ], [ %5, %lor.end ], !dbg !6173
  %land.ext = zext i1 %6 to i32, !dbg !6167
  %conv = trunc i32 %land.ext to i8, !dbg !6174
  store i8 %conv, i8* %editmode, align 1, !dbg !6165
  %7 = load %struct.ListBase*, %struct.ListBase** %nubase.addr, align 8, !dbg !6175
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %7, i32 0, i32 0, !dbg !6176
  %8 = load i8*, i8** %first, align 8, !dbg !6176
  %9 = bitcast i8* %8 to %struct.Nurb*, !dbg !6175
  store %struct.Nurb* %9, %struct.Nurb** %nu, align 8, !dbg !6177
  br label %while.cond, !dbg !6178

while.cond:                                       ; preds = %if.end226, %land.end
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6179
  %tobool3 = icmp ne %struct.Nurb* %10, null, !dbg !6178
  br i1 %tobool3, label %while.body, label %while.end227, !dbg !6178

while.body:                                       ; preds = %while.cond
  %11 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6180
  %hide = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 4, !dbg !6183
  %12 = load i16, i16* %hide, align 4, !dbg !6183
  %conv4 = sext i16 %12 to i32, !dbg !6180
  %cmp = icmp eq i32 %conv4, 0, !dbg !6184
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6185

lor.lhs.false:                                    ; preds = %while.body
  %13 = load i8, i8* %editmode, align 1, !dbg !6186
  %conv6 = zext i8 %13 to i32, !dbg !6186
  %cmp7 = icmp eq i32 %conv6, 0, !dbg !6187
  br i1 %cmp7, label %if.then, label %if.end226, !dbg !6188

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %14 = load i8, i8* %use_render_resolution.addr, align 1, !dbg !6189
  %conv9 = zext i8 %14 to i32, !dbg !6189
  %tobool10 = icmp ne i32 %conv9, 0, !dbg !6189
  br i1 %tobool10, label %land.lhs.true, label %if.else, !dbg !6192

land.lhs.true:                                    ; preds = %if.then
  %15 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !6193
  %resolu_ren = getelementptr inbounds %struct.Curve, %struct.Curve* %15, i32 0, i32 29, !dbg !6194
  %16 = load i16, i16* %resolu_ren, align 8, !dbg !6194
  %conv11 = sext i16 %16 to i32, !dbg !6193
  %cmp12 = icmp ne i32 %conv11, 0, !dbg !6195
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !6196

if.then14:                                        ; preds = %land.lhs.true
  %17 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !6197
  %resolu_ren15 = getelementptr inbounds %struct.Curve, %struct.Curve* %17, i32 0, i32 29, !dbg !6198
  %18 = load i16, i16* %resolu_ren15, align 8, !dbg !6198
  %conv16 = sext i16 %18 to i32, !dbg !6197
  store i32 %conv16, i32* %resolu, align 4, !dbg !6199
  br label %if.end, !dbg !6200

if.else:                                          ; preds = %land.lhs.true, %if.then
  %19 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6201
  %resolu17 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %19, i32 0, i32 9, !dbg !6202
  %20 = load i16, i16* %resolu17, align 4, !dbg !6202
  %conv18 = sext i16 %20 to i32, !dbg !6201
  store i32 %conv18, i32* %resolu, align 4, !dbg !6203
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then14
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6204
  %call = call zeroext i8 @BKE_nurb_check_valid_u(%struct.Nurb* %21), !dbg !6206
  %tobool19 = icmp ne i8 %call, 0, !dbg !6206
  br i1 %tobool19, label %if.else21, label %if.then20, !dbg !6207

if.then20:                                        ; preds = %if.end
  br label %if.end225, !dbg !6208

if.else21:                                        ; preds = %if.end
  %22 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6210
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %22, i32 0, i32 2, !dbg !6212
  %23 = load i16, i16* %type, align 8, !dbg !6212
  %conv22 = sext i16 %23 to i32, !dbg !6210
  %cmp23 = icmp eq i32 %conv22, 1, !dbg !6213
  br i1 %cmp23, label %if.then25, label %if.else149, !dbg !6214

if.then25:                                        ; preds = %if.else21
  store i32 0, i32* %len, align 4, !dbg !6215
  %24 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6217
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %24, i32 0, i32 6, !dbg !6218
  %25 = load i32, i32* %pntsu, align 8, !dbg !6218
  %sub = sub nsw i32 %25, 1, !dbg !6219
  store i32 %sub, i32* %a, align 4, !dbg !6220
  %26 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6221
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %26, i32 0, i32 13, !dbg !6223
  %27 = load i16, i16* %flagu, align 4, !dbg !6223
  %conv26 = sext i16 %27 to i32, !dbg !6221
  %and = and i32 %conv26, 1, !dbg !6224
  %tobool27 = icmp ne i32 %and, 0, !dbg !6224
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !6225

if.then28:                                        ; preds = %if.then25
  %28 = load i32, i32* %a, align 4, !dbg !6226
  %inc = add nsw i32 %28, 1, !dbg !6226
  store i32 %inc, i32* %a, align 4, !dbg !6226
  br label %if.end29, !dbg !6227

if.end29:                                         ; preds = %if.then28, %if.then25
  %29 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6228
  %bezt30 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %29, i32 0, i32 18, !dbg !6229
  %30 = load %struct.BezTriple*, %struct.BezTriple** %bezt30, align 8, !dbg !6229
  store %struct.BezTriple* %30, %struct.BezTriple** %prevbezt, align 8, !dbg !6230
  %31 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !6231
  %add.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %31, i64 1, !dbg !6232
  store %struct.BezTriple* %add.ptr, %struct.BezTriple** %bezt, align 8, !dbg !6233
  br label %while.cond31, !dbg !6234

while.cond31:                                     ; preds = %if.end65, %if.end29
  %32 = load i32, i32* %a, align 4, !dbg !6235
  %dec = add nsw i32 %32, -1, !dbg !6235
  store i32 %dec, i32* %a, align 4, !dbg !6235
  %tobool32 = icmp ne i32 %32, 0, !dbg !6234
  br i1 %tobool32, label %while.body33, label %while.end, !dbg !6234

while.body33:                                     ; preds = %while.cond31
  %33 = load i32, i32* %a, align 4, !dbg !6236
  %cmp34 = icmp eq i32 %33, 0, !dbg !6239
  br i1 %cmp34, label %land.lhs.true36, label %if.end43, !dbg !6240

land.lhs.true36:                                  ; preds = %while.body33
  %34 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6241
  %flagu37 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %34, i32 0, i32 13, !dbg !6242
  %35 = load i16, i16* %flagu37, align 4, !dbg !6242
  %conv38 = sext i16 %35 to i32, !dbg !6241
  %and39 = and i32 %conv38, 1, !dbg !6243
  %tobool40 = icmp ne i32 %and39, 0, !dbg !6243
  br i1 %tobool40, label %if.then41, label %if.end43, !dbg !6244

if.then41:                                        ; preds = %land.lhs.true36
  %36 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6245
  %bezt42 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %36, i32 0, i32 18, !dbg !6246
  %37 = load %struct.BezTriple*, %struct.BezTriple** %bezt42, align 8, !dbg !6246
  store %struct.BezTriple* %37, %struct.BezTriple** %bezt, align 8, !dbg !6247
  br label %if.end43, !dbg !6248

if.end43:                                         ; preds = %if.then41, %land.lhs.true36, %while.body33
  %38 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !6249
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %38, i32 0, i32 6, !dbg !6251
  %39 = load i8, i8* %h2, align 2, !dbg !6251
  %conv44 = zext i8 %39 to i32, !dbg !6249
  %cmp45 = icmp eq i32 %conv44, 2, !dbg !6252
  br i1 %cmp45, label %land.lhs.true47, label %if.else53, !dbg !6253

land.lhs.true47:                                  ; preds = %if.end43
  %40 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6254
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %40, i32 0, i32 5, !dbg !6255
  %41 = load i8, i8* %h1, align 1, !dbg !6255
  %conv48 = zext i8 %41 to i32, !dbg !6254
  %cmp49 = icmp eq i32 %conv48, 2, !dbg !6256
  br i1 %cmp49, label %if.then51, label %if.else53, !dbg !6257

if.then51:                                        ; preds = %land.lhs.true47
  %42 = load i32, i32* %len, align 4, !dbg !6258
  %inc52 = add nsw i32 %42, 1, !dbg !6258
  store i32 %inc52, i32* %len, align 4, !dbg !6258
  br label %if.end54, !dbg !6259

if.else53:                                        ; preds = %land.lhs.true47, %if.end43
  %43 = load i32, i32* %resolu, align 4, !dbg !6260
  %44 = load i32, i32* %len, align 4, !dbg !6261
  %add = add nsw i32 %44, %43, !dbg !6261
  store i32 %add, i32* %len, align 4, !dbg !6261
  br label %if.end54

if.end54:                                         ; preds = %if.else53, %if.then51
  %45 = load i32, i32* %a, align 4, !dbg !6262
  %cmp55 = icmp eq i32 %45, 0, !dbg !6264
  br i1 %cmp55, label %land.lhs.true57, label %if.end65, !dbg !6265

land.lhs.true57:                                  ; preds = %if.end54
  %46 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6266
  %flagu58 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %46, i32 0, i32 13, !dbg !6267
  %47 = load i16, i16* %flagu58, align 4, !dbg !6267
  %conv59 = sext i16 %47 to i32, !dbg !6266
  %and60 = and i32 %conv59, 1, !dbg !6268
  %cmp61 = icmp eq i32 %and60, 0, !dbg !6269
  br i1 %cmp61, label %if.then63, label %if.end65, !dbg !6270

if.then63:                                        ; preds = %land.lhs.true57
  %48 = load i32, i32* %len, align 4, !dbg !6271
  %inc64 = add nsw i32 %48, 1, !dbg !6271
  store i32 %inc64, i32* %len, align 4, !dbg !6271
  br label %if.end65, !dbg !6272

if.end65:                                         ; preds = %if.then63, %land.lhs.true57, %if.end54
  %49 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6273
  store %struct.BezTriple* %49, %struct.BezTriple** %prevbezt, align 8, !dbg !6274
  %50 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6275
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %50, i32 1, !dbg !6275
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !6275
  br label %while.cond31, !dbg !6234, !llvm.loop !6276

while.end:                                        ; preds = %while.cond31
  %51 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6278
  %call66 = call i8* %51(i64 72, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i64 0, i64 0)), !dbg !6278
  %52 = bitcast i8* %call66 to %struct.DispList*, !dbg !6278
  store %struct.DispList* %52, %struct.DispList** %dl, align 8, !dbg !6279
  %53 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6280
  %54 = load i32, i32* %len, align 4, !dbg !6281
  %add67 = add nsw i32 %54, 1, !dbg !6282
  %conv68 = sext i32 %add67 to i64, !dbg !6283
  %mul = mul i64 %conv68, 12, !dbg !6284
  %call69 = call i8* %53(i64 %mul, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)), !dbg !6280
  %55 = bitcast i8* %call69 to float*, !dbg !6280
  %56 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6285
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %56, i32 0, i32 8, !dbg !6286
  store float* %55, float** %verts, align 8, !dbg !6287
  %57 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !6288
  %58 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6289
  %59 = bitcast %struct.DispList* %58 to i8*, !dbg !6289
  call void @BLI_addtail(%struct.ListBase* %57, i8* %59), !dbg !6290
  %60 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6291
  %parts = getelementptr inbounds %struct.DispList, %struct.DispList* %60, i32 0, i32 4, !dbg !6292
  store i32 1, i32* %parts, align 4, !dbg !6293
  %61 = load i32, i32* %len, align 4, !dbg !6294
  %62 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6295
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %62, i32 0, i32 5, !dbg !6296
  store i32 %61, i32* %nr, align 8, !dbg !6297
  %63 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6298
  %mat_nr = getelementptr inbounds %struct.Nurb, %struct.Nurb* %63, i32 0, i32 3, !dbg !6299
  %64 = load i16, i16* %mat_nr, align 2, !dbg !6299
  %65 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6300
  %col = getelementptr inbounds %struct.DispList, %struct.DispList* %65, i32 0, i32 6, !dbg !6301
  store i16 %64, i16* %col, align 4, !dbg !6302
  %66 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6303
  %charidx = getelementptr inbounds %struct.Nurb, %struct.Nurb* %66, i32 0, i32 21, !dbg !6304
  %67 = load i32, i32* %charidx, align 4, !dbg !6304
  %68 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6305
  %charidx70 = getelementptr inbounds %struct.DispList, %struct.DispList* %68, i32 0, i32 11, !dbg !6306
  store i32 %67, i32* %charidx70, align 8, !dbg !6307
  %69 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6308
  %verts71 = getelementptr inbounds %struct.DispList, %struct.DispList* %69, i32 0, i32 8, !dbg !6309
  %70 = load float*, float** %verts71, align 8, !dbg !6309
  store float* %70, float** %data, align 8, !dbg !6310
  %71 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6311
  %flagu72 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %71, i32 0, i32 13, !dbg !6313
  %72 = load i16, i16* %flagu72, align 4, !dbg !6313
  %conv73 = sext i16 %72 to i32, !dbg !6311
  %and74 = and i32 %conv73, 1, !dbg !6314
  %tobool75 = icmp ne i32 %and74, 0, !dbg !6314
  br i1 %tobool75, label %if.then76, label %if.else79, !dbg !6315

if.then76:                                        ; preds = %while.end
  %73 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6316
  %type77 = getelementptr inbounds %struct.DispList, %struct.DispList* %73, i32 0, i32 2, !dbg !6318
  store i16 0, i16* %type77, align 8, !dbg !6319
  %74 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6320
  %pntsu78 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %74, i32 0, i32 6, !dbg !6321
  %75 = load i32, i32* %pntsu78, align 8, !dbg !6321
  store i32 %75, i32* %a, align 4, !dbg !6322
  br label %if.end83, !dbg !6323

if.else79:                                        ; preds = %while.end
  %76 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6324
  %type80 = getelementptr inbounds %struct.DispList, %struct.DispList* %76, i32 0, i32 2, !dbg !6326
  store i16 1, i16* %type80, align 8, !dbg !6327
  %77 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6328
  %pntsu81 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %77, i32 0, i32 6, !dbg !6329
  %78 = load i32, i32* %pntsu81, align 8, !dbg !6329
  %sub82 = sub nsw i32 %78, 1, !dbg !6330
  store i32 %sub82, i32* %a, align 4, !dbg !6331
  br label %if.end83

if.end83:                                         ; preds = %if.else79, %if.then76
  %79 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6332
  %bezt84 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %79, i32 0, i32 18, !dbg !6333
  %80 = load %struct.BezTriple*, %struct.BezTriple** %bezt84, align 8, !dbg !6333
  store %struct.BezTriple* %80, %struct.BezTriple** %prevbezt, align 8, !dbg !6334
  %81 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !6335
  %add.ptr85 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %81, i64 1, !dbg !6336
  store %struct.BezTriple* %add.ptr85, %struct.BezTriple** %bezt, align 8, !dbg !6337
  br label %while.cond86, !dbg !6338

while.cond86:                                     ; preds = %if.end146, %if.end83
  %82 = load i32, i32* %a, align 4, !dbg !6339
  %dec87 = add nsw i32 %82, -1, !dbg !6339
  store i32 %dec87, i32* %a, align 4, !dbg !6339
  %tobool88 = icmp ne i32 %82, 0, !dbg !6338
  br i1 %tobool88, label %while.body89, label %while.end148, !dbg !6338

while.body89:                                     ; preds = %while.cond86
  %83 = load i32, i32* %a, align 4, !dbg !6340
  %cmp90 = icmp eq i32 %83, 0, !dbg !6343
  br i1 %cmp90, label %land.lhs.true92, label %if.end99, !dbg !6344

land.lhs.true92:                                  ; preds = %while.body89
  %84 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6345
  %type93 = getelementptr inbounds %struct.DispList, %struct.DispList* %84, i32 0, i32 2, !dbg !6346
  %85 = load i16, i16* %type93, align 8, !dbg !6346
  %conv94 = sext i16 %85 to i32, !dbg !6345
  %cmp95 = icmp eq i32 %conv94, 0, !dbg !6347
  br i1 %cmp95, label %if.then97, label %if.end99, !dbg !6348

if.then97:                                        ; preds = %land.lhs.true92
  %86 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6349
  %bezt98 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %86, i32 0, i32 18, !dbg !6350
  %87 = load %struct.BezTriple*, %struct.BezTriple** %bezt98, align 8, !dbg !6350
  store %struct.BezTriple* %87, %struct.BezTriple** %bezt, align 8, !dbg !6351
  br label %if.end99, !dbg !6352

if.end99:                                         ; preds = %if.then97, %land.lhs.true92, %while.body89
  %88 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !6353
  %h2100 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %88, i32 0, i32 6, !dbg !6355
  %89 = load i8, i8* %h2100, align 2, !dbg !6355
  %conv101 = zext i8 %89 to i32, !dbg !6353
  %cmp102 = icmp eq i32 %conv101, 2, !dbg !6356
  br i1 %cmp102, label %land.lhs.true104, label %if.else111, !dbg !6357

land.lhs.true104:                                 ; preds = %if.end99
  %90 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6358
  %h1105 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %90, i32 0, i32 5, !dbg !6359
  %91 = load i8, i8* %h1105, align 1, !dbg !6359
  %conv106 = zext i8 %91 to i32, !dbg !6358
  %cmp107 = icmp eq i32 %conv106, 2, !dbg !6360
  br i1 %cmp107, label %if.then109, label %if.else111, !dbg !6361

if.then109:                                       ; preds = %land.lhs.true104
  %92 = load float*, float** %data, align 8, !dbg !6362
  %93 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !6364
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %93, i32 0, i32 0, !dbg !6365
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 1, !dbg !6364
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !6364
  call void @copy_v3_v3(float* %92, float* %arraydecay), !dbg !6366
  %94 = load float*, float** %data, align 8, !dbg !6367
  %add.ptr110 = getelementptr inbounds float, float* %94, i64 3, !dbg !6367
  store float* %add.ptr110, float** %data, align 8, !dbg !6367
  br label %if.end134, !dbg !6368

if.else111:                                       ; preds = %land.lhs.true104, %if.end99
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6369, metadata !DIExpression()), !dbg !6371
  store i32 0, i32* %j, align 4, !dbg !6372
  br label %for.cond, !dbg !6374

for.cond:                                         ; preds = %for.inc, %if.else111
  %95 = load i32, i32* %j, align 4, !dbg !6375
  %cmp112 = icmp slt i32 %95, 3, !dbg !6377
  br i1 %cmp112, label %for.body, label %for.end, !dbg !6378

for.body:                                         ; preds = %for.cond
  %96 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !6379
  %vec114 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %96, i32 0, i32 0, !dbg !6381
  %arrayidx115 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec114, i64 0, i64 1, !dbg !6379
  %97 = load i32, i32* %j, align 4, !dbg !6382
  %idxprom = sext i32 %97 to i64, !dbg !6379
  %arrayidx116 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx115, i64 0, i64 %idxprom, !dbg !6379
  %98 = load float, float* %arrayidx116, align 4, !dbg !6379
  %99 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !6383
  %vec117 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %99, i32 0, i32 0, !dbg !6384
  %arrayidx118 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec117, i64 0, i64 2, !dbg !6383
  %100 = load i32, i32* %j, align 4, !dbg !6385
  %idxprom119 = sext i32 %100 to i64, !dbg !6383
  %arrayidx120 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx118, i64 0, i64 %idxprom119, !dbg !6383
  %101 = load float, float* %arrayidx120, align 4, !dbg !6383
  %102 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6386
  %vec121 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %102, i32 0, i32 0, !dbg !6387
  %arrayidx122 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec121, i64 0, i64 0, !dbg !6386
  %103 = load i32, i32* %j, align 4, !dbg !6388
  %idxprom123 = sext i32 %103 to i64, !dbg !6386
  %arrayidx124 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx122, i64 0, i64 %idxprom123, !dbg !6386
  %104 = load float, float* %arrayidx124, align 4, !dbg !6386
  %105 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6389
  %vec125 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %105, i32 0, i32 0, !dbg !6390
  %arrayidx126 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec125, i64 0, i64 1, !dbg !6389
  %106 = load i32, i32* %j, align 4, !dbg !6391
  %idxprom127 = sext i32 %106 to i64, !dbg !6389
  %arrayidx128 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx126, i64 0, i64 %idxprom127, !dbg !6389
  %107 = load float, float* %arrayidx128, align 4, !dbg !6389
  %108 = load float*, float** %data, align 8, !dbg !6392
  %109 = load i32, i32* %j, align 4, !dbg !6393
  %idx.ext = sext i32 %109 to i64, !dbg !6394
  %add.ptr129 = getelementptr inbounds float, float* %108, i64 %idx.ext, !dbg !6394
  %110 = load i32, i32* %resolu, align 4, !dbg !6395
  call void @BKE_curve_forward_diff_bezier(float %98, float %101, float %104, float %107, float* %add.ptr129, i32 %110, i32 12), !dbg !6396
  br label %for.inc, !dbg !6397

for.inc:                                          ; preds = %for.body
  %111 = load i32, i32* %j, align 4, !dbg !6398
  %inc130 = add nsw i32 %111, 1, !dbg !6398
  store i32 %inc130, i32* %j, align 4, !dbg !6398
  br label %for.cond, !dbg !6399, !llvm.loop !6400

for.end:                                          ; preds = %for.cond
  %112 = load i32, i32* %resolu, align 4, !dbg !6402
  %mul131 = mul nsw i32 3, %112, !dbg !6403
  %113 = load float*, float** %data, align 8, !dbg !6404
  %idx.ext132 = sext i32 %mul131 to i64, !dbg !6404
  %add.ptr133 = getelementptr inbounds float, float* %113, i64 %idx.ext132, !dbg !6404
  store float* %add.ptr133, float** %data, align 8, !dbg !6404
  br label %if.end134

if.end134:                                        ; preds = %for.end, %if.then109
  %114 = load i32, i32* %a, align 4, !dbg !6405
  %cmp135 = icmp eq i32 %114, 0, !dbg !6407
  br i1 %cmp135, label %land.lhs.true137, label %if.end146, !dbg !6408

land.lhs.true137:                                 ; preds = %if.end134
  %115 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6409
  %type138 = getelementptr inbounds %struct.DispList, %struct.DispList* %115, i32 0, i32 2, !dbg !6410
  %116 = load i16, i16* %type138, align 8, !dbg !6410
  %conv139 = sext i16 %116 to i32, !dbg !6409
  %cmp140 = icmp eq i32 %conv139, 1, !dbg !6411
  br i1 %cmp140, label %if.then142, label %if.end146, !dbg !6412

if.then142:                                       ; preds = %land.lhs.true137
  %117 = load float*, float** %data, align 8, !dbg !6413
  %118 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6415
  %vec143 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %118, i32 0, i32 0, !dbg !6416
  %arrayidx144 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec143, i64 0, i64 1, !dbg !6415
  %arraydecay145 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx144, i64 0, i64 0, !dbg !6415
  call void @copy_v3_v3(float* %117, float* %arraydecay145), !dbg !6417
  br label %if.end146, !dbg !6418

if.end146:                                        ; preds = %if.then142, %land.lhs.true137, %if.end134
  %119 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6419
  store %struct.BezTriple* %119, %struct.BezTriple** %prevbezt, align 8, !dbg !6420
  %120 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6421
  %incdec.ptr147 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %120, i32 1, !dbg !6421
  store %struct.BezTriple* %incdec.ptr147, %struct.BezTriple** %bezt, align 8, !dbg !6421
  br label %while.cond86, !dbg !6338, !llvm.loop !6422

while.end148:                                     ; preds = %while.cond86
  br label %if.end224, !dbg !6424

if.else149:                                       ; preds = %if.else21
  %121 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6425
  %type150 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %121, i32 0, i32 2, !dbg !6427
  %122 = load i16, i16* %type150, align 8, !dbg !6427
  %conv151 = sext i16 %122 to i32, !dbg !6425
  %cmp152 = icmp eq i32 %conv151, 4, !dbg !6428
  br i1 %cmp152, label %if.then154, label %if.else184, !dbg !6429

if.then154:                                       ; preds = %if.else149
  %123 = load i32, i32* %resolu, align 4, !dbg !6430
  %124 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6432
  %flagu155 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %124, i32 0, i32 13, !dbg !6432
  %125 = load i16, i16* %flagu155, align 4, !dbg !6432
  %conv156 = sext i16 %125 to i32, !dbg !6432
  %and157 = and i32 %conv156, 1, !dbg !6432
  %tobool158 = icmp ne i32 %and157, 0, !dbg !6432
  br i1 %tobool158, label %cond.true, label %cond.false, !dbg !6432

cond.true:                                        ; preds = %if.then154
  %126 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6432
  %pntsu159 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %126, i32 0, i32 6, !dbg !6432
  %127 = load i32, i32* %pntsu159, align 8, !dbg !6432
  br label %cond.end, !dbg !6432

cond.false:                                       ; preds = %if.then154
  %128 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6432
  %pntsu160 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %128, i32 0, i32 6, !dbg !6432
  %129 = load i32, i32* %pntsu160, align 8, !dbg !6432
  %sub161 = sub nsw i32 %129, 1, !dbg !6432
  br label %cond.end, !dbg !6432

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %127, %cond.true ], [ %sub161, %cond.false ], !dbg !6432
  %mul162 = mul nsw i32 %123, %cond, !dbg !6433
  store i32 %mul162, i32* %len, align 4, !dbg !6434
  %130 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6435
  %call163 = call i8* %130(i64 72, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0)), !dbg !6435
  %131 = bitcast i8* %call163 to %struct.DispList*, !dbg !6435
  store %struct.DispList* %131, %struct.DispList** %dl, align 8, !dbg !6436
  %132 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6437
  %133 = load i32, i32* %len, align 4, !dbg !6438
  %conv164 = sext i32 %133 to i64, !dbg !6438
  %mul165 = mul i64 %conv164, 12, !dbg !6439
  %call166 = call i8* %132(i64 %mul165, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)), !dbg !6437
  %134 = bitcast i8* %call166 to float*, !dbg !6437
  %135 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6440
  %verts167 = getelementptr inbounds %struct.DispList, %struct.DispList* %135, i32 0, i32 8, !dbg !6441
  store float* %134, float** %verts167, align 8, !dbg !6442
  %136 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !6443
  %137 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6444
  %138 = bitcast %struct.DispList* %137 to i8*, !dbg !6444
  call void @BLI_addtail(%struct.ListBase* %136, i8* %138), !dbg !6445
  %139 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6446
  %parts168 = getelementptr inbounds %struct.DispList, %struct.DispList* %139, i32 0, i32 4, !dbg !6447
  store i32 1, i32* %parts168, align 4, !dbg !6448
  %140 = load i32, i32* %len, align 4, !dbg !6449
  %141 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6450
  %nr169 = getelementptr inbounds %struct.DispList, %struct.DispList* %141, i32 0, i32 5, !dbg !6451
  store i32 %140, i32* %nr169, align 8, !dbg !6452
  %142 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6453
  %mat_nr170 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %142, i32 0, i32 3, !dbg !6454
  %143 = load i16, i16* %mat_nr170, align 2, !dbg !6454
  %144 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6455
  %col171 = getelementptr inbounds %struct.DispList, %struct.DispList* %144, i32 0, i32 6, !dbg !6456
  store i16 %143, i16* %col171, align 4, !dbg !6457
  %145 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6458
  %charidx172 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %145, i32 0, i32 21, !dbg !6459
  %146 = load i32, i32* %charidx172, align 4, !dbg !6459
  %147 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6460
  %charidx173 = getelementptr inbounds %struct.DispList, %struct.DispList* %147, i32 0, i32 11, !dbg !6461
  store i32 %146, i32* %charidx173, align 8, !dbg !6462
  %148 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6463
  %verts174 = getelementptr inbounds %struct.DispList, %struct.DispList* %148, i32 0, i32 8, !dbg !6464
  %149 = load float*, float** %verts174, align 8, !dbg !6464
  store float* %149, float** %data, align 8, !dbg !6465
  %150 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6466
  %flagu175 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %150, i32 0, i32 13, !dbg !6468
  %151 = load i16, i16* %flagu175, align 4, !dbg !6468
  %conv176 = sext i16 %151 to i32, !dbg !6466
  %and177 = and i32 %conv176, 1, !dbg !6469
  %tobool178 = icmp ne i32 %and177, 0, !dbg !6469
  br i1 %tobool178, label %if.then179, label %if.else181, !dbg !6470

if.then179:                                       ; preds = %cond.end
  %152 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6471
  %type180 = getelementptr inbounds %struct.DispList, %struct.DispList* %152, i32 0, i32 2, !dbg !6472
  store i16 0, i16* %type180, align 8, !dbg !6473
  br label %if.end183, !dbg !6471

if.else181:                                       ; preds = %cond.end
  %153 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6474
  %type182 = getelementptr inbounds %struct.DispList, %struct.DispList* %153, i32 0, i32 2, !dbg !6475
  store i16 1, i16* %type182, align 8, !dbg !6476
  br label %if.end183

if.end183:                                        ; preds = %if.else181, %if.then179
  %154 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6477
  %155 = load float*, float** %data, align 8, !dbg !6478
  %156 = load i32, i32* %resolu, align 4, !dbg !6479
  call void @BKE_nurb_makeCurve(%struct.Nurb* %154, float* %155, float* null, float* null, float* null, i32 %156, i32 12), !dbg !6480
  br label %if.end223, !dbg !6481

if.else184:                                       ; preds = %if.else149
  %157 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6482
  %type185 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %157, i32 0, i32 2, !dbg !6484
  %158 = load i16, i16* %type185, align 8, !dbg !6484
  %conv186 = sext i16 %158 to i32, !dbg !6482
  %cmp187 = icmp eq i32 %conv186, 0, !dbg !6485
  br i1 %cmp187, label %if.then189, label %if.end222, !dbg !6486

if.then189:                                       ; preds = %if.else184
  %159 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6487
  %pntsu190 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %159, i32 0, i32 6, !dbg !6489
  %160 = load i32, i32* %pntsu190, align 8, !dbg !6489
  store i32 %160, i32* %len, align 4, !dbg !6490
  %161 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6491
  %call191 = call i8* %161(i64 72, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)), !dbg !6491
  %162 = bitcast i8* %call191 to %struct.DispList*, !dbg !6491
  store %struct.DispList* %162, %struct.DispList** %dl, align 8, !dbg !6492
  %163 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6493
  %164 = load i32, i32* %len, align 4, !dbg !6494
  %conv192 = sext i32 %164 to i64, !dbg !6494
  %mul193 = mul i64 %conv192, 12, !dbg !6495
  %call194 = call i8* %163(i64 %mul193, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)), !dbg !6493
  %165 = bitcast i8* %call194 to float*, !dbg !6493
  %166 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6496
  %verts195 = getelementptr inbounds %struct.DispList, %struct.DispList* %166, i32 0, i32 8, !dbg !6497
  store float* %165, float** %verts195, align 8, !dbg !6498
  %167 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !6499
  %168 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6500
  %169 = bitcast %struct.DispList* %168 to i8*, !dbg !6500
  call void @BLI_addtail(%struct.ListBase* %167, i8* %169), !dbg !6501
  %170 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6502
  %parts196 = getelementptr inbounds %struct.DispList, %struct.DispList* %170, i32 0, i32 4, !dbg !6503
  store i32 1, i32* %parts196, align 4, !dbg !6504
  %171 = load i32, i32* %len, align 4, !dbg !6505
  %172 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6506
  %nr197 = getelementptr inbounds %struct.DispList, %struct.DispList* %172, i32 0, i32 5, !dbg !6507
  store i32 %171, i32* %nr197, align 8, !dbg !6508
  %173 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6509
  %mat_nr198 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %173, i32 0, i32 3, !dbg !6510
  %174 = load i16, i16* %mat_nr198, align 2, !dbg !6510
  %175 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6511
  %col199 = getelementptr inbounds %struct.DispList, %struct.DispList* %175, i32 0, i32 6, !dbg !6512
  store i16 %174, i16* %col199, align 4, !dbg !6513
  %176 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6514
  %charidx200 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %176, i32 0, i32 21, !dbg !6515
  %177 = load i32, i32* %charidx200, align 4, !dbg !6515
  %178 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6516
  %charidx201 = getelementptr inbounds %struct.DispList, %struct.DispList* %178, i32 0, i32 11, !dbg !6517
  store i32 %177, i32* %charidx201, align 8, !dbg !6518
  %179 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6519
  %verts202 = getelementptr inbounds %struct.DispList, %struct.DispList* %179, i32 0, i32 8, !dbg !6520
  %180 = load float*, float** %verts202, align 8, !dbg !6520
  store float* %180, float** %data, align 8, !dbg !6521
  %181 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6522
  %flagu203 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %181, i32 0, i32 13, !dbg !6524
  %182 = load i16, i16* %flagu203, align 4, !dbg !6524
  %conv204 = sext i16 %182 to i32, !dbg !6522
  %and205 = and i32 %conv204, 1, !dbg !6525
  %tobool206 = icmp ne i32 %and205, 0, !dbg !6525
  br i1 %tobool206, label %if.then207, label %if.else209, !dbg !6526

if.then207:                                       ; preds = %if.then189
  %183 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6527
  %type208 = getelementptr inbounds %struct.DispList, %struct.DispList* %183, i32 0, i32 2, !dbg !6528
  store i16 0, i16* %type208, align 8, !dbg !6529
  br label %if.end211, !dbg !6527

if.else209:                                       ; preds = %if.then189
  %184 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6530
  %type210 = getelementptr inbounds %struct.DispList, %struct.DispList* %184, i32 0, i32 2, !dbg !6531
  store i16 1, i16* %type210, align 8, !dbg !6532
  br label %if.end211

if.end211:                                        ; preds = %if.else209, %if.then207
  %185 = load i32, i32* %len, align 4, !dbg !6533
  store i32 %185, i32* %a, align 4, !dbg !6534
  %186 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6535
  %bp212 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %186, i32 0, i32 17, !dbg !6536
  %187 = load %struct.BPoint*, %struct.BPoint** %bp212, align 8, !dbg !6536
  store %struct.BPoint* %187, %struct.BPoint** %bp, align 8, !dbg !6537
  br label %while.cond213, !dbg !6538

while.cond213:                                    ; preds = %while.body216, %if.end211
  %188 = load i32, i32* %a, align 4, !dbg !6539
  %dec214 = add nsw i32 %188, -1, !dbg !6539
  store i32 %dec214, i32* %a, align 4, !dbg !6539
  %tobool215 = icmp ne i32 %188, 0, !dbg !6538
  br i1 %tobool215, label %while.body216, label %while.end221, !dbg !6538

while.body216:                                    ; preds = %while.cond213
  %189 = load float*, float** %data, align 8, !dbg !6540
  %190 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6542
  %vec217 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %190, i32 0, i32 0, !dbg !6543
  %arraydecay218 = getelementptr inbounds [4 x float], [4 x float]* %vec217, i64 0, i64 0, !dbg !6542
  call void @copy_v3_v3(float* %189, float* %arraydecay218), !dbg !6544
  %191 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !6545
  %incdec.ptr219 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %191, i32 1, !dbg !6545
  store %struct.BPoint* %incdec.ptr219, %struct.BPoint** %bp, align 8, !dbg !6545
  %192 = load float*, float** %data, align 8, !dbg !6546
  %add.ptr220 = getelementptr inbounds float, float* %192, i64 3, !dbg !6546
  store float* %add.ptr220, float** %data, align 8, !dbg !6546
  br label %while.cond213, !dbg !6538, !llvm.loop !6547

while.end221:                                     ; preds = %while.cond213
  br label %if.end222, !dbg !6549

if.end222:                                        ; preds = %while.end221, %if.else184
  br label %if.end223

if.end223:                                        ; preds = %if.end222, %if.end183
  br label %if.end224

if.end224:                                        ; preds = %if.end223, %while.end148
  br label %if.end225

if.end225:                                        ; preds = %if.end224, %if.then20
  br label %if.end226, !dbg !6550

if.end226:                                        ; preds = %if.end225, %lor.lhs.false
  %193 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6551
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %193, i32 0, i32 0, !dbg !6552
  %194 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !6552
  store %struct.Nurb* %194, %struct.Nurb** %nu, align 8, !dbg !6553
  br label %while.cond, !dbg !6178, !llvm.loop !6554

while.end227:                                     ; preds = %while.cond
  ret void, !dbg !6556
}

; Function Attrs: noinline nounwind uwtable
define internal void @calc_bevfac_mapping_default(%struct.BevList* %bl, i32* %r_start, float* %r_firstblend, i32* %r_steps, float* %r_lastblend) #0 !dbg !6557 {
entry:
  %bl.addr = alloca %struct.BevList*, align 8
  %r_start.addr = alloca i32*, align 8
  %r_firstblend.addr = alloca float*, align 8
  %r_steps.addr = alloca i32*, align 8
  %r_lastblend.addr = alloca float*, align 8
  store %struct.BevList* %bl, %struct.BevList** %bl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevList** %bl.addr, metadata !6560, metadata !DIExpression()), !dbg !6561
  store i32* %r_start, i32** %r_start.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_start.addr, metadata !6562, metadata !DIExpression()), !dbg !6563
  store float* %r_firstblend, float** %r_firstblend.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_firstblend.addr, metadata !6564, metadata !DIExpression()), !dbg !6565
  store i32* %r_steps, i32** %r_steps.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_steps.addr, metadata !6566, metadata !DIExpression()), !dbg !6567
  store float* %r_lastblend, float** %r_lastblend.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_lastblend.addr, metadata !6568, metadata !DIExpression()), !dbg !6569
  %0 = load i32*, i32** %r_start.addr, align 8, !dbg !6570
  store i32 0, i32* %0, align 4, !dbg !6571
  %1 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !6572
  %nr = getelementptr inbounds %struct.BevList, %struct.BevList* %1, i32 0, i32 2, !dbg !6573
  %2 = load i32, i32* %nr, align 8, !dbg !6573
  %3 = load i32*, i32** %r_steps.addr, align 8, !dbg !6574
  store i32 %2, i32* %3, align 4, !dbg !6575
  %4 = load float*, float** %r_firstblend.addr, align 8, !dbg !6576
  store float 1.000000e+00, float* %4, align 4, !dbg !6577
  %5 = load float*, float** %r_lastblend.addr, align 8, !dbg !6578
  store float 1.000000e+00, float* %5, align 4, !dbg !6579
  ret void, !dbg !6580
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal void @calc_bevfac_mapping(%struct.Curve* %cu, %struct.BevList* %bl, %struct.Nurb* %nu, i32* %r_start, float* %r_firstblend, i32* %r_steps, float* %r_lastblend) #0 !dbg !6581 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %bl.addr = alloca %struct.BevList*, align 8
  %nu.addr = alloca %struct.Nurb*, align 8
  %r_start.addr = alloca i32*, align 8
  %r_firstblend.addr = alloca float*, align 8
  %r_steps.addr = alloca i32*, align 8
  %r_lastblend.addr = alloca float*, align 8
  %tmpf = alloca float, align 4
  %total_length = alloca float, align 4
  %end = alloca i32, align 4
  %i = alloca i32, align 4
  %start_fl = alloca float, align 4
  %end_fl = alloca float, align 4
  %sw_ap = alloca i32, align 4
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !6584, metadata !DIExpression()), !dbg !6585
  store %struct.BevList* %bl, %struct.BevList** %bl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevList** %bl.addr, metadata !6586, metadata !DIExpression()), !dbg !6587
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !6588, metadata !DIExpression()), !dbg !6589
  store i32* %r_start, i32** %r_start.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_start.addr, metadata !6590, metadata !DIExpression()), !dbg !6591
  store float* %r_firstblend, float** %r_firstblend.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_firstblend.addr, metadata !6592, metadata !DIExpression()), !dbg !6593
  store i32* %r_steps, i32** %r_steps.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_steps.addr, metadata !6594, metadata !DIExpression()), !dbg !6595
  store float* %r_lastblend, float** %r_lastblend.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_lastblend.addr, metadata !6596, metadata !DIExpression()), !dbg !6597
  call void @llvm.dbg.declare(metadata float* %tmpf, metadata !6598, metadata !DIExpression()), !dbg !6599
  call void @llvm.dbg.declare(metadata float* %total_length, metadata !6600, metadata !DIExpression()), !dbg !6601
  store float 0.000000e+00, float* %total_length, align 4, !dbg !6601
  call void @llvm.dbg.declare(metadata i32* %end, metadata !6602, metadata !DIExpression()), !dbg !6603
  store i32 0, i32* %end, align 4, !dbg !6603
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6604, metadata !DIExpression()), !dbg !6605
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !6606
  %call = call zeroext i8 @BKE_nurb_check_valid_u(%struct.Nurb* %0), !dbg !6608
  %conv = zext i8 %call to i32, !dbg !6608
  %cmp = icmp eq i32 %conv, 0, !dbg !6609
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6610

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !6611
  %bevfac1 = getelementptr inbounds %struct.Curve, %struct.Curve* %1, i32 0, i32 65, !dbg !6612
  %2 = load float, float* %bevfac1, align 4, !dbg !6612
  %3 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !6613
  %bevfac2 = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 66, !dbg !6614
  %4 = load float, float* %bevfac2, align 8, !dbg !6614
  %call2 = call float @min_ff(float %2, float %4), !dbg !6615
  %cmp3 = fcmp oeq float %call2, 0.000000e+00, !dbg !6616
  br i1 %cmp3, label %land.lhs.true, label %if.end, !dbg !6617

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !6618
  %bevfac15 = getelementptr inbounds %struct.Curve, %struct.Curve* %5, i32 0, i32 65, !dbg !6619
  %6 = load float, float* %bevfac15, align 4, !dbg !6619
  %7 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !6620
  %bevfac26 = getelementptr inbounds %struct.Curve, %struct.Curve* %7, i32 0, i32 66, !dbg !6621
  %8 = load float, float* %bevfac26, align 8, !dbg !6621
  %call7 = call float @max_ff(float %6, float %8), !dbg !6622
  %cmp8 = fcmp oeq float %call7, 1.000000e+00, !dbg !6623
  br i1 %cmp8, label %if.then, label %if.end, !dbg !6624

if.then:                                          ; preds = %land.lhs.true, %entry
  %9 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !6625
  %10 = load i32*, i32** %r_start.addr, align 8, !dbg !6627
  %11 = load float*, float** %r_firstblend.addr, align 8, !dbg !6628
  %12 = load i32*, i32** %r_steps.addr, align 8, !dbg !6629
  %13 = load float*, float** %r_lastblend.addr, align 8, !dbg !6630
  call void @calc_bevfac_mapping_default(%struct.BevList* %9, i32* %10, float* %11, i32* %12, float* %13), !dbg !6631
  br label %if.end82, !dbg !6632

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %14 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !6633
  %bevfac1_mapping = getelementptr inbounds %struct.Curve, %struct.Curve* %14, i32 0, i32 67, !dbg !6633
  %15 = load i8, i8* %bevfac1_mapping, align 4, !dbg !6633
  %conv10 = zext i8 %15 to i32, !dbg !6633
  %cmp11 = icmp eq i32 %conv10, 1, !dbg !6633
  br i1 %cmp11, label %if.then18, label %lor.lhs.false13, !dbg !6633

lor.lhs.false13:                                  ; preds = %if.end
  %16 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !6633
  %bevfac1_mapping14 = getelementptr inbounds %struct.Curve, %struct.Curve* %16, i32 0, i32 67, !dbg !6633
  %17 = load i8, i8* %bevfac1_mapping14, align 4, !dbg !6633
  %conv15 = zext i8 %17 to i32, !dbg !6633
  %cmp16 = icmp eq i32 %conv15, 2, !dbg !6633
  br i1 %cmp16, label %if.then18, label %if.end23, !dbg !6635

if.then18:                                        ; preds = %lor.lhs.false13, %if.end
  store i32 0, i32* %i, align 4, !dbg !6636
  br label %for.cond, !dbg !6639

for.cond:                                         ; preds = %for.inc, %if.then18
  %18 = load i32, i32* %i, align 4, !dbg !6640
  %19 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !6642
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %19, i32 0, i32 13, !dbg !6642
  %20 = load i16, i16* %flagu, align 4, !dbg !6642
  %conv19 = sext i16 %20 to i32, !dbg !6642
  %and = and i32 %conv19, 1, !dbg !6642
  %tobool = icmp ne i32 %and, 0, !dbg !6642
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6642

cond.true:                                        ; preds = %for.cond
  %21 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !6642
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 6, !dbg !6642
  %22 = load i32, i32* %pntsu, align 8, !dbg !6642
  br label %cond.end, !dbg !6642

cond.false:                                       ; preds = %for.cond
  %23 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !6642
  %pntsu20 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %23, i32 0, i32 6, !dbg !6642
  %24 = load i32, i32* %pntsu20, align 8, !dbg !6642
  %sub = sub nsw i32 %24, 1, !dbg !6642
  br label %cond.end, !dbg !6642

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %22, %cond.true ], [ %sub, %cond.false ], !dbg !6642
  %cmp21 = icmp slt i32 %18, %cond, !dbg !6643
  br i1 %cmp21, label %for.body, label %for.end, !dbg !6644

for.body:                                         ; preds = %cond.end
  %25 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !6645
  %seglen = getelementptr inbounds %struct.BevList, %struct.BevList* %25, i32 0, i32 8, !dbg !6647
  %26 = load float*, float** %seglen, align 8, !dbg !6647
  %27 = load i32, i32* %i, align 4, !dbg !6648
  %idxprom = sext i32 %27 to i64, !dbg !6645
  %arrayidx = getelementptr inbounds float, float* %26, i64 %idxprom, !dbg !6645
  %28 = load float, float* %arrayidx, align 4, !dbg !6645
  %29 = load float, float* %total_length, align 4, !dbg !6649
  %add = fadd float %29, %28, !dbg !6649
  store float %add, float* %total_length, align 4, !dbg !6649
  br label %for.inc, !dbg !6650

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !dbg !6651
  %inc = add nsw i32 %30, 1, !dbg !6651
  store i32 %inc, i32* %i, align 4, !dbg !6651
  br label %for.cond, !dbg !6652, !llvm.loop !6653

for.end:                                          ; preds = %cond.end
  br label %if.end23, !dbg !6655

if.end23:                                         ; preds = %for.end, %lor.lhs.false13
  %31 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !6656
  %bevfac1_mapping24 = getelementptr inbounds %struct.Curve, %struct.Curve* %31, i32 0, i32 67, !dbg !6657
  %32 = load i8, i8* %bevfac1_mapping24, align 4, !dbg !6657
  %conv25 = zext i8 %32 to i32, !dbg !6656
  switch i32 %conv25, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb33
    i32 2, label %sw.bb36
  ], !dbg !6658

sw.bb:                                            ; preds = %if.end23
  call void @llvm.dbg.declare(metadata float* %start_fl, metadata !6659, metadata !DIExpression()), !dbg !6662
  %33 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !6663
  %bevfac126 = getelementptr inbounds %struct.Curve, %struct.Curve* %33, i32 0, i32 65, !dbg !6664
  %34 = load float, float* %bevfac126, align 4, !dbg !6664
  %35 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !6665
  %nr = getelementptr inbounds %struct.BevList, %struct.BevList* %35, i32 0, i32 2, !dbg !6666
  %36 = load i32, i32* %nr, align 8, !dbg !6666
  %sub27 = sub nsw i32 %36, 1, !dbg !6667
  %conv28 = sitofp i32 %sub27 to float, !dbg !6668
  %mul = fmul float %34, %conv28, !dbg !6669
  store float %mul, float* %start_fl, align 4, !dbg !6662
  %37 = load float, float* %start_fl, align 4, !dbg !6670
  %conv29 = fptosi float %37 to i32, !dbg !6671
  %38 = load i32*, i32** %r_start.addr, align 8, !dbg !6672
  store i32 %conv29, i32* %38, align 4, !dbg !6673
  %39 = load float, float* %start_fl, align 4, !dbg !6674
  %40 = load i32*, i32** %r_start.addr, align 8, !dbg !6675
  %41 = load i32, i32* %40, align 4, !dbg !6676
  %conv30 = sitofp i32 %41 to float, !dbg !6677
  %sub31 = fsub float %39, %conv30, !dbg !6678
  %sub32 = fsub float 1.000000e+00, %sub31, !dbg !6679
  %42 = load float*, float** %r_firstblend.addr, align 8, !dbg !6680
  store float %sub32, float* %42, align 4, !dbg !6681
  br label %sw.epilog, !dbg !6682

sw.bb33:                                          ; preds = %if.end23
  %43 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !6683
  %44 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !6685
  %bevfac134 = getelementptr inbounds %struct.Curve, %struct.Curve* %44, i32 0, i32 65, !dbg !6686
  %45 = load float, float* %bevfac134, align 4, !dbg !6686
  %46 = load float, float* %total_length, align 4, !dbg !6687
  %47 = load i32*, i32** %r_start.addr, align 8, !dbg !6688
  %48 = load float*, float** %r_firstblend.addr, align 8, !dbg !6689
  call void @calc_bevfac_segment_mapping(%struct.BevList* %43, float %45, float %46, i32* %47, float* %48), !dbg !6690
  %49 = load float*, float** %r_firstblend.addr, align 8, !dbg !6691
  %50 = load float, float* %49, align 4, !dbg !6692
  %sub35 = fsub float 1.000000e+00, %50, !dbg !6693
  %51 = load float*, float** %r_firstblend.addr, align 8, !dbg !6694
  store float %sub35, float* %51, align 4, !dbg !6695
  br label %sw.epilog, !dbg !6696

sw.bb36:                                          ; preds = %if.end23
  %52 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !6697
  %53 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !6699
  %bevfac137 = getelementptr inbounds %struct.Curve, %struct.Curve* %53, i32 0, i32 65, !dbg !6700
  %54 = load float, float* %bevfac137, align 4, !dbg !6700
  %55 = load float, float* %total_length, align 4, !dbg !6701
  %56 = load i32*, i32** %r_start.addr, align 8, !dbg !6702
  %57 = load float*, float** %r_firstblend.addr, align 8, !dbg !6703
  call void @calc_bevfac_spline_mapping(%struct.BevList* %52, float %54, float %55, i32* %56, float* %57), !dbg !6704
  %58 = load float*, float** %r_firstblend.addr, align 8, !dbg !6705
  %59 = load float, float* %58, align 4, !dbg !6706
  %sub38 = fsub float 1.000000e+00, %59, !dbg !6707
  %60 = load float*, float** %r_firstblend.addr, align 8, !dbg !6708
  store float %sub38, float* %60, align 4, !dbg !6709
  br label %sw.epilog, !dbg !6710

sw.epilog:                                        ; preds = %if.end23, %sw.bb36, %sw.bb33, %sw.bb
  %61 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !6711
  %bevfac2_mapping = getelementptr inbounds %struct.Curve, %struct.Curve* %61, i32 0, i32 68, !dbg !6712
  %62 = load i8, i8* %bevfac2_mapping, align 1, !dbg !6712
  %conv39 = zext i8 %62 to i32, !dbg !6711
  switch i32 %conv39, label %sw.epilog59 [
    i32 0, label %sw.bb40
    i32 1, label %sw.bb51
    i32 2, label %sw.bb55
  ], !dbg !6713

sw.bb40:                                          ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata float* %end_fl, metadata !6714, metadata !DIExpression()), !dbg !6717
  %63 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !6718
  %bevfac241 = getelementptr inbounds %struct.Curve, %struct.Curve* %63, i32 0, i32 66, !dbg !6719
  %64 = load float, float* %bevfac241, align 8, !dbg !6719
  %65 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !6720
  %nr42 = getelementptr inbounds %struct.BevList, %struct.BevList* %65, i32 0, i32 2, !dbg !6721
  %66 = load i32, i32* %nr42, align 8, !dbg !6721
  %sub43 = sub nsw i32 %66, 1, !dbg !6722
  %conv44 = sitofp i32 %sub43 to float, !dbg !6723
  %mul45 = fmul float %64, %conv44, !dbg !6724
  store float %mul45, float* %end_fl, align 4, !dbg !6717
  %67 = load float, float* %end_fl, align 4, !dbg !6725
  %conv46 = fptosi float %67 to i32, !dbg !6726
  store i32 %conv46, i32* %end, align 4, !dbg !6727
  %68 = load i32, i32* %end, align 4, !dbg !6728
  %add47 = add nsw i32 2, %68, !dbg !6729
  %69 = load i32*, i32** %r_start.addr, align 8, !dbg !6730
  %70 = load i32, i32* %69, align 4, !dbg !6731
  %sub48 = sub nsw i32 %add47, %70, !dbg !6732
  %71 = load i32*, i32** %r_steps.addr, align 8, !dbg !6733
  store i32 %sub48, i32* %71, align 4, !dbg !6734
  %72 = load float, float* %end_fl, align 4, !dbg !6735
  %73 = load i32, i32* %end, align 4, !dbg !6736
  %conv49 = sitofp i32 %73 to float, !dbg !6736
  %sub50 = fsub float %72, %conv49, !dbg !6737
  %74 = load float*, float** %r_lastblend.addr, align 8, !dbg !6738
  store float %sub50, float* %74, align 4, !dbg !6739
  br label %sw.epilog59, !dbg !6740

sw.bb51:                                          ; preds = %sw.epilog
  %75 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !6741
  %76 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !6743
  %bevfac252 = getelementptr inbounds %struct.Curve, %struct.Curve* %76, i32 0, i32 66, !dbg !6744
  %77 = load float, float* %bevfac252, align 8, !dbg !6744
  %78 = load float, float* %total_length, align 4, !dbg !6745
  %79 = load float*, float** %r_lastblend.addr, align 8, !dbg !6746
  call void @calc_bevfac_segment_mapping(%struct.BevList* %75, float %77, float %78, i32* %end, float* %79), !dbg !6747
  %80 = load i32, i32* %end, align 4, !dbg !6748
  %81 = load i32*, i32** %r_start.addr, align 8, !dbg !6749
  %82 = load i32, i32* %81, align 4, !dbg !6750
  %sub53 = sub nsw i32 %80, %82, !dbg !6751
  %add54 = add nsw i32 %sub53, 2, !dbg !6752
  %83 = load i32*, i32** %r_steps.addr, align 8, !dbg !6753
  store i32 %add54, i32* %83, align 4, !dbg !6754
  br label %sw.epilog59, !dbg !6755

sw.bb55:                                          ; preds = %sw.epilog
  %84 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !6756
  %85 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !6758
  %bevfac256 = getelementptr inbounds %struct.Curve, %struct.Curve* %85, i32 0, i32 66, !dbg !6759
  %86 = load float, float* %bevfac256, align 8, !dbg !6759
  %87 = load float, float* %total_length, align 4, !dbg !6760
  %88 = load float*, float** %r_lastblend.addr, align 8, !dbg !6761
  call void @calc_bevfac_spline_mapping(%struct.BevList* %84, float %86, float %87, i32* %end, float* %88), !dbg !6762
  %89 = load i32, i32* %end, align 4, !dbg !6763
  %90 = load i32*, i32** %r_start.addr, align 8, !dbg !6764
  %91 = load i32, i32* %90, align 4, !dbg !6765
  %sub57 = sub nsw i32 %89, %91, !dbg !6766
  %add58 = add nsw i32 %sub57, 2, !dbg !6767
  %92 = load i32*, i32** %r_steps.addr, align 8, !dbg !6768
  store i32 %add58, i32* %92, align 4, !dbg !6769
  br label %sw.epilog59, !dbg !6770

sw.epilog59:                                      ; preds = %sw.epilog, %sw.bb55, %sw.bb51, %sw.bb40
  %93 = load i32, i32* %end, align 4, !dbg !6771
  %94 = load i32*, i32** %r_start.addr, align 8, !dbg !6773
  %95 = load i32, i32* %94, align 4, !dbg !6774
  %cmp60 = icmp slt i32 %93, %95, !dbg !6775
  br i1 %cmp60, label %if.then69, label %lor.lhs.false62, !dbg !6776

lor.lhs.false62:                                  ; preds = %sw.epilog59
  %96 = load i32, i32* %end, align 4, !dbg !6777
  %97 = load i32*, i32** %r_start.addr, align 8, !dbg !6778
  %98 = load i32, i32* %97, align 4, !dbg !6779
  %cmp63 = icmp eq i32 %96, %98, !dbg !6780
  br i1 %cmp63, label %land.lhs.true65, label %if.end74, !dbg !6781

land.lhs.true65:                                  ; preds = %lor.lhs.false62
  %99 = load float*, float** %r_lastblend.addr, align 8, !dbg !6782
  %100 = load float, float* %99, align 4, !dbg !6783
  %101 = load float*, float** %r_firstblend.addr, align 8, !dbg !6784
  %102 = load float, float* %101, align 4, !dbg !6785
  %sub66 = fsub float 1.000000e+00, %102, !dbg !6786
  %cmp67 = fcmp olt float %100, %sub66, !dbg !6787
  br i1 %cmp67, label %if.then69, label %if.end74, !dbg !6788

if.then69:                                        ; preds = %land.lhs.true65, %sw.epilog59
  call void @llvm.dbg.declare(metadata i32* %sw_ap, metadata !6789, metadata !DIExpression()), !dbg !6792
  %103 = load i32*, i32** %r_start.addr, align 8, !dbg !6792
  %104 = load i32, i32* %103, align 4, !dbg !6792
  store i32 %104, i32* %sw_ap, align 4, !dbg !6792
  %105 = load i32, i32* %end, align 4, !dbg !6792
  %106 = load i32*, i32** %r_start.addr, align 8, !dbg !6792
  store i32 %105, i32* %106, align 4, !dbg !6792
  %107 = load i32, i32* %sw_ap, align 4, !dbg !6792
  store i32 %107, i32* %end, align 4, !dbg !6792
  %108 = load float*, float** %r_lastblend.addr, align 8, !dbg !6793
  %109 = load float, float* %108, align 4, !dbg !6794
  store float %109, float* %tmpf, align 4, !dbg !6795
  %110 = load float*, float** %r_firstblend.addr, align 8, !dbg !6796
  %111 = load float, float* %110, align 4, !dbg !6797
  %sub70 = fsub float 1.000000e+00, %111, !dbg !6798
  %112 = load float*, float** %r_lastblend.addr, align 8, !dbg !6799
  store float %sub70, float* %112, align 4, !dbg !6800
  %113 = load float, float* %tmpf, align 4, !dbg !6801
  %sub71 = fsub float 1.000000e+00, %113, !dbg !6802
  %114 = load float*, float** %r_firstblend.addr, align 8, !dbg !6803
  store float %sub71, float* %114, align 4, !dbg !6804
  %115 = load i32, i32* %end, align 4, !dbg !6805
  %116 = load i32*, i32** %r_start.addr, align 8, !dbg !6806
  %117 = load i32, i32* %116, align 4, !dbg !6807
  %sub72 = sub nsw i32 %115, %117, !dbg !6808
  %add73 = add nsw i32 %sub72, 2, !dbg !6809
  %118 = load i32*, i32** %r_steps.addr, align 8, !dbg !6810
  store i32 %add73, i32* %118, align 4, !dbg !6811
  br label %if.end74, !dbg !6812

if.end74:                                         ; preds = %if.then69, %land.lhs.true65, %lor.lhs.false62
  %119 = load i32*, i32** %r_start.addr, align 8, !dbg !6813
  %120 = load i32, i32* %119, align 4, !dbg !6815
  %121 = load i32*, i32** %r_steps.addr, align 8, !dbg !6816
  %122 = load i32, i32* %121, align 4, !dbg !6817
  %add75 = add nsw i32 %120, %122, !dbg !6818
  %123 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !6819
  %nr76 = getelementptr inbounds %struct.BevList, %struct.BevList* %123, i32 0, i32 2, !dbg !6820
  %124 = load i32, i32* %nr76, align 8, !dbg !6820
  %cmp77 = icmp sgt i32 %add75, %124, !dbg !6821
  br i1 %cmp77, label %if.then79, label %if.end82, !dbg !6822

if.then79:                                        ; preds = %if.end74
  %125 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !6823
  %nr80 = getelementptr inbounds %struct.BevList, %struct.BevList* %125, i32 0, i32 2, !dbg !6825
  %126 = load i32, i32* %nr80, align 8, !dbg !6825
  %127 = load i32*, i32** %r_start.addr, align 8, !dbg !6826
  %128 = load i32, i32* %127, align 4, !dbg !6827
  %sub81 = sub nsw i32 %126, %128, !dbg !6828
  %129 = load i32*, i32** %r_steps.addr, align 8, !dbg !6829
  store i32 %sub81, i32* %129, align 4, !dbg !6830
  %130 = load float*, float** %r_lastblend.addr, align 8, !dbg !6831
  store float 1.000000e+00, float* %130, align 4, !dbg !6832
  br label %if.end82, !dbg !6833

if.end82:                                         ; preds = %if.then, %if.then79, %if.end74
  ret void, !dbg !6834
}

; Function Attrs: noinline nounwind uwtable
define internal void @rotateBevelPiece(%struct.Curve* %cu, %struct.BevPoint* %bevp, %struct.BevPoint* %nbevp, %struct.DispList* %dlb, float %bev_blend, float %widfac, float %fac, float** %r_data) #0 !dbg !6835 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %bevp.addr = alloca %struct.BevPoint*, align 8
  %nbevp.addr = alloca %struct.BevPoint*, align 8
  %dlb.addr = alloca %struct.DispList*, align 8
  %bev_blend.addr = alloca float, align 4
  %widfac.addr = alloca float, align 4
  %fac.addr = alloca float, align 4
  %r_data.addr = alloca float**, align 8
  %fp = alloca float*, align 8
  %data = alloca float*, align 8
  %b = alloca i32, align 4
  %vec = alloca [3 x float], align 4
  %quat = alloca [4 x float], align 16
  %sina = alloca float, align 4
  %cosa = alloca float, align 4
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !6839, metadata !DIExpression()), !dbg !6840
  store %struct.BevPoint* %bevp, %struct.BevPoint** %bevp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp.addr, metadata !6841, metadata !DIExpression()), !dbg !6842
  store %struct.BevPoint* %nbevp, %struct.BevPoint** %nbevp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %nbevp.addr, metadata !6843, metadata !DIExpression()), !dbg !6844
  store %struct.DispList* %dlb, %struct.DispList** %dlb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DispList** %dlb.addr, metadata !6845, metadata !DIExpression()), !dbg !6846
  store float %bev_blend, float* %bev_blend.addr, align 4
  call void @llvm.dbg.declare(metadata float* %bev_blend.addr, metadata !6847, metadata !DIExpression()), !dbg !6848
  store float %widfac, float* %widfac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %widfac.addr, metadata !6849, metadata !DIExpression()), !dbg !6850
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !6851, metadata !DIExpression()), !dbg !6852
  store float** %r_data, float*** %r_data.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %r_data.addr, metadata !6853, metadata !DIExpression()), !dbg !6854
  call void @llvm.dbg.declare(metadata float** %fp, metadata !6855, metadata !DIExpression()), !dbg !6856
  call void @llvm.dbg.declare(metadata float** %data, metadata !6857, metadata !DIExpression()), !dbg !6858
  %0 = load float**, float*** %r_data.addr, align 8, !dbg !6859
  %1 = load float*, float** %0, align 8, !dbg !6860
  store float* %1, float** %data, align 8, !dbg !6858
  call void @llvm.dbg.declare(metadata i32* %b, metadata !6861, metadata !DIExpression()), !dbg !6862
  %2 = load %struct.DispList*, %struct.DispList** %dlb.addr, align 8, !dbg !6863
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %2, i32 0, i32 8, !dbg !6864
  %3 = load float*, float** %verts, align 8, !dbg !6864
  store float* %3, float** %fp, align 8, !dbg !6865
  store i32 0, i32* %b, align 4, !dbg !6866
  br label %for.cond, !dbg !6868

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %b, align 4, !dbg !6869
  %5 = load %struct.DispList*, %struct.DispList** %dlb.addr, align 8, !dbg !6871
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %5, i32 0, i32 5, !dbg !6872
  %6 = load i32, i32* %nr, align 8, !dbg !6872
  %cmp = icmp slt i32 %4, %6, !dbg !6873
  br i1 %cmp, label %for.body, label %for.end, !dbg !6874

for.body:                                         ; preds = %for.cond
  %7 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !6875
  %flag = getelementptr inbounds %struct.Curve, %struct.Curve* %7, i32 0, i32 23, !dbg !6878
  %8 = load i32, i32* %flag, align 4, !dbg !6878
  %and = and i32 %8, 1, !dbg !6879
  %tobool = icmp ne i32 %and, 0, !dbg !6879
  br i1 %tobool, label %if.then, label %if.else33, !dbg !6880

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !6881, metadata !DIExpression()), !dbg !6883
  call void @llvm.dbg.declare(metadata [4 x float]* %quat, metadata !6884, metadata !DIExpression()), !dbg !6885
  %9 = load float*, float** %fp, align 8, !dbg !6886
  %arrayidx = getelementptr inbounds float, float* %9, i64 1, !dbg !6886
  %10 = load float, float* %arrayidx, align 4, !dbg !6886
  %11 = load float, float* %widfac.addr, align 4, !dbg !6887
  %add = fadd float %10, %11, !dbg !6888
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6889
  store float %add, float* %arrayidx1, align 4, !dbg !6890
  %12 = load float*, float** %fp, align 8, !dbg !6891
  %arrayidx2 = getelementptr inbounds float, float* %12, i64 2, !dbg !6891
  %13 = load float, float* %arrayidx2, align 4, !dbg !6891
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !6892
  store float %13, float* %arrayidx3, align 4, !dbg !6893
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !6894
  store float 0.000000e+00, float* %arrayidx4, align 4, !dbg !6895
  %14 = load %struct.BevPoint*, %struct.BevPoint** %nbevp.addr, align 8, !dbg !6896
  %cmp5 = icmp eq %struct.BevPoint* %14, null, !dbg !6898
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !6899

if.then6:                                         ; preds = %if.then
  %15 = load float*, float** %data, align 8, !dbg !6900
  %16 = load %struct.BevPoint*, %struct.BevPoint** %bevp.addr, align 8, !dbg !6902
  %vec7 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %16, i32 0, i32 0, !dbg !6903
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec7, i64 0, i64 0, !dbg !6902
  call void @copy_v3_v3(float* %15, float* %arraydecay), !dbg !6904
  %arraydecay8 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !6905
  %17 = load %struct.BevPoint*, %struct.BevPoint** %bevp.addr, align 8, !dbg !6906
  %quat9 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %17, i32 0, i32 9, !dbg !6907
  %arraydecay10 = getelementptr inbounds [4 x float], [4 x float]* %quat9, i64 0, i64 0, !dbg !6906
  call void @copy_qt_qt(float* %arraydecay8, float* %arraydecay10), !dbg !6908
  br label %if.end, !dbg !6909

if.else:                                          ; preds = %if.then
  %18 = load float*, float** %data, align 8, !dbg !6910
  %19 = load %struct.BevPoint*, %struct.BevPoint** %bevp.addr, align 8, !dbg !6912
  %vec11 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %19, i32 0, i32 0, !dbg !6913
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %vec11, i64 0, i64 0, !dbg !6912
  %20 = load %struct.BevPoint*, %struct.BevPoint** %nbevp.addr, align 8, !dbg !6914
  %vec13 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %20, i32 0, i32 0, !dbg !6915
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %vec13, i64 0, i64 0, !dbg !6914
  %21 = load float, float* %bev_blend.addr, align 4, !dbg !6916
  call void @interp_v3_v3v3(float* %18, float* %arraydecay12, float* %arraydecay14, float %21), !dbg !6917
  %arraydecay15 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !6918
  %22 = load %struct.BevPoint*, %struct.BevPoint** %bevp.addr, align 8, !dbg !6919
  %quat16 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %22, i32 0, i32 9, !dbg !6920
  %arraydecay17 = getelementptr inbounds [4 x float], [4 x float]* %quat16, i64 0, i64 0, !dbg !6919
  %23 = load %struct.BevPoint*, %struct.BevPoint** %nbevp.addr, align 8, !dbg !6921
  %quat18 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %23, i32 0, i32 9, !dbg !6922
  %arraydecay19 = getelementptr inbounds [4 x float], [4 x float]* %quat18, i64 0, i64 0, !dbg !6921
  %24 = load float, float* %bev_blend.addr, align 4, !dbg !6923
  call void @interp_qt_qtqt(float* %arraydecay15, float* %arraydecay17, float* %arraydecay19, float %24), !dbg !6924
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %arraydecay20 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !6925
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6926
  call void @mul_qt_v3(float* %arraydecay20, float* %arraydecay21), !dbg !6927
  %25 = load float, float* %fac.addr, align 4, !dbg !6928
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6929
  %26 = load float, float* %arrayidx22, align 4, !dbg !6929
  %mul = fmul float %25, %26, !dbg !6930
  %27 = load float*, float** %data, align 8, !dbg !6931
  %arrayidx23 = getelementptr inbounds float, float* %27, i64 0, !dbg !6931
  %28 = load float, float* %arrayidx23, align 4, !dbg !6932
  %add24 = fadd float %28, %mul, !dbg !6932
  store float %add24, float* %arrayidx23, align 4, !dbg !6932
  %29 = load float, float* %fac.addr, align 4, !dbg !6933
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !6934
  %30 = load float, float* %arrayidx25, align 4, !dbg !6934
  %mul26 = fmul float %29, %30, !dbg !6935
  %31 = load float*, float** %data, align 8, !dbg !6936
  %arrayidx27 = getelementptr inbounds float, float* %31, i64 1, !dbg !6936
  %32 = load float, float* %arrayidx27, align 4, !dbg !6937
  %add28 = fadd float %32, %mul26, !dbg !6937
  store float %add28, float* %arrayidx27, align 4, !dbg !6937
  %33 = load float, float* %fac.addr, align 4, !dbg !6938
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !6939
  %34 = load float, float* %arrayidx29, align 4, !dbg !6939
  %mul30 = fmul float %33, %34, !dbg !6940
  %35 = load float*, float** %data, align 8, !dbg !6941
  %arrayidx31 = getelementptr inbounds float, float* %35, i64 2, !dbg !6941
  %36 = load float, float* %arrayidx31, align 4, !dbg !6942
  %add32 = fadd float %36, %mul30, !dbg !6942
  store float %add32, float* %arrayidx31, align 4, !dbg !6942
  br label %if.end73, !dbg !6943

if.else33:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata float* %sina, metadata !6944, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.declare(metadata float* %cosa, metadata !6947, metadata !DIExpression()), !dbg !6948
  %37 = load %struct.BevPoint*, %struct.BevPoint** %nbevp.addr, align 8, !dbg !6949
  %cmp34 = icmp eq %struct.BevPoint* %37, null, !dbg !6951
  br i1 %cmp34, label %if.then35, label %if.else40, !dbg !6952

if.then35:                                        ; preds = %if.else33
  %38 = load float*, float** %data, align 8, !dbg !6953
  %39 = load %struct.BevPoint*, %struct.BevPoint** %bevp.addr, align 8, !dbg !6955
  %vec36 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %39, i32 0, i32 0, !dbg !6956
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %vec36, i64 0, i64 0, !dbg !6955
  call void @copy_v3_v3(float* %38, float* %arraydecay37), !dbg !6957
  %40 = load %struct.BevPoint*, %struct.BevPoint** %bevp.addr, align 8, !dbg !6958
  %sina38 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %40, i32 0, i32 5, !dbg !6959
  %41 = load float, float* %sina38, align 4, !dbg !6959
  store float %41, float* %sina, align 4, !dbg !6960
  %42 = load %struct.BevPoint*, %struct.BevPoint** %bevp.addr, align 8, !dbg !6961
  %cosa39 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %42, i32 0, i32 6, !dbg !6962
  %43 = load float, float* %cosa39, align 4, !dbg !6962
  store float %43, float* %cosa, align 4, !dbg !6963
  br label %if.end56, !dbg !6964

if.else40:                                        ; preds = %if.else33
  %44 = load float*, float** %data, align 8, !dbg !6965
  %45 = load %struct.BevPoint*, %struct.BevPoint** %bevp.addr, align 8, !dbg !6967
  %vec41 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %45, i32 0, i32 0, !dbg !6968
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %vec41, i64 0, i64 0, !dbg !6967
  %46 = load %struct.BevPoint*, %struct.BevPoint** %nbevp.addr, align 8, !dbg !6969
  %vec43 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %46, i32 0, i32 0, !dbg !6970
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %vec43, i64 0, i64 0, !dbg !6969
  %47 = load float, float* %bev_blend.addr, align 4, !dbg !6971
  call void @interp_v3_v3v3(float* %44, float* %arraydecay42, float* %arraydecay44, float %47), !dbg !6972
  %48 = load %struct.BevPoint*, %struct.BevPoint** %nbevp.addr, align 8, !dbg !6973
  %sina45 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %48, i32 0, i32 5, !dbg !6974
  %49 = load float, float* %sina45, align 4, !dbg !6974
  %50 = load float, float* %bev_blend.addr, align 4, !dbg !6975
  %mul46 = fmul float %49, %50, !dbg !6976
  %51 = load %struct.BevPoint*, %struct.BevPoint** %bevp.addr, align 8, !dbg !6977
  %sina47 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %51, i32 0, i32 5, !dbg !6978
  %52 = load float, float* %sina47, align 4, !dbg !6978
  %53 = load float, float* %bev_blend.addr, align 4, !dbg !6979
  %sub = fsub float 1.000000e+00, %53, !dbg !6980
  %mul48 = fmul float %52, %sub, !dbg !6981
  %add49 = fadd float %mul46, %mul48, !dbg !6982
  store float %add49, float* %sina, align 4, !dbg !6983
  %54 = load %struct.BevPoint*, %struct.BevPoint** %nbevp.addr, align 8, !dbg !6984
  %cosa50 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %54, i32 0, i32 6, !dbg !6985
  %55 = load float, float* %cosa50, align 4, !dbg !6985
  %56 = load float, float* %bev_blend.addr, align 4, !dbg !6986
  %mul51 = fmul float %55, %56, !dbg !6987
  %57 = load %struct.BevPoint*, %struct.BevPoint** %bevp.addr, align 8, !dbg !6988
  %cosa52 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %57, i32 0, i32 6, !dbg !6989
  %58 = load float, float* %cosa52, align 4, !dbg !6989
  %59 = load float, float* %bev_blend.addr, align 4, !dbg !6990
  %sub53 = fsub float 1.000000e+00, %59, !dbg !6991
  %mul54 = fmul float %58, %sub53, !dbg !6992
  %add55 = fadd float %mul51, %mul54, !dbg !6993
  store float %add55, float* %cosa, align 4, !dbg !6994
  br label %if.end56

if.end56:                                         ; preds = %if.else40, %if.then35
  %60 = load float, float* %fac.addr, align 4, !dbg !6995
  %61 = load float, float* %widfac.addr, align 4, !dbg !6996
  %62 = load float*, float** %fp, align 8, !dbg !6997
  %arrayidx57 = getelementptr inbounds float, float* %62, i64 1, !dbg !6997
  %63 = load float, float* %arrayidx57, align 4, !dbg !6997
  %add58 = fadd float %61, %63, !dbg !6998
  %mul59 = fmul float %60, %add58, !dbg !6999
  %64 = load float, float* %sina, align 4, !dbg !7000
  %mul60 = fmul float %mul59, %64, !dbg !7001
  %65 = load float*, float** %data, align 8, !dbg !7002
  %arrayidx61 = getelementptr inbounds float, float* %65, i64 0, !dbg !7002
  %66 = load float, float* %arrayidx61, align 4, !dbg !7003
  %add62 = fadd float %66, %mul60, !dbg !7003
  store float %add62, float* %arrayidx61, align 4, !dbg !7003
  %67 = load float, float* %fac.addr, align 4, !dbg !7004
  %68 = load float, float* %widfac.addr, align 4, !dbg !7005
  %69 = load float*, float** %fp, align 8, !dbg !7006
  %arrayidx63 = getelementptr inbounds float, float* %69, i64 1, !dbg !7006
  %70 = load float, float* %arrayidx63, align 4, !dbg !7006
  %add64 = fadd float %68, %70, !dbg !7007
  %mul65 = fmul float %67, %add64, !dbg !7008
  %71 = load float, float* %cosa, align 4, !dbg !7009
  %mul66 = fmul float %mul65, %71, !dbg !7010
  %72 = load float*, float** %data, align 8, !dbg !7011
  %arrayidx67 = getelementptr inbounds float, float* %72, i64 1, !dbg !7011
  %73 = load float, float* %arrayidx67, align 4, !dbg !7012
  %add68 = fadd float %73, %mul66, !dbg !7012
  store float %add68, float* %arrayidx67, align 4, !dbg !7012
  %74 = load float, float* %fac.addr, align 4, !dbg !7013
  %75 = load float*, float** %fp, align 8, !dbg !7014
  %arrayidx69 = getelementptr inbounds float, float* %75, i64 2, !dbg !7014
  %76 = load float, float* %arrayidx69, align 4, !dbg !7014
  %mul70 = fmul float %74, %76, !dbg !7015
  %77 = load float*, float** %data, align 8, !dbg !7016
  %arrayidx71 = getelementptr inbounds float, float* %77, i64 2, !dbg !7016
  %78 = load float, float* %arrayidx71, align 4, !dbg !7017
  %add72 = fadd float %78, %mul70, !dbg !7017
  store float %add72, float* %arrayidx71, align 4, !dbg !7017
  br label %if.end73

if.end73:                                         ; preds = %if.end56, %if.end
  br label %for.inc, !dbg !7018

for.inc:                                          ; preds = %if.end73
  %79 = load i32, i32* %b, align 4, !dbg !7019
  %inc = add nsw i32 %79, 1, !dbg !7019
  store i32 %inc, i32* %b, align 4, !dbg !7019
  %80 = load float*, float** %fp, align 8, !dbg !7020
  %add.ptr = getelementptr inbounds float, float* %80, i64 3, !dbg !7020
  store float* %add.ptr, float** %fp, align 8, !dbg !7020
  %81 = load float*, float** %data, align 8, !dbg !7021
  %add.ptr74 = getelementptr inbounds float, float* %81, i64 3, !dbg !7021
  store float* %add.ptr74, float** %data, align 8, !dbg !7021
  br label %for.cond, !dbg !7022, !llvm.loop !7023

for.end:                                          ; preds = %for.cond
  %82 = load float*, float** %data, align 8, !dbg !7025
  %83 = load float**, float*** %r_data.addr, align 8, !dbg !7026
  store float* %82, float** %83, align 8, !dbg !7027
  ret void, !dbg !7028
}

; Function Attrs: noinline nounwind uwtable
define internal void @fillBevelCap(%struct.Nurb* %nu, %struct.DispList* %dlb, float* %prev_fp, %struct.ListBase* %dispbase) #0 !dbg !7029 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %dlb.addr = alloca %struct.DispList*, align 8
  %prev_fp.addr = alloca float*, align 8
  %dispbase.addr = alloca %struct.ListBase*, align 8
  %dl = alloca %struct.DispList*, align 8
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !7032, metadata !DIExpression()), !dbg !7033
  store %struct.DispList* %dlb, %struct.DispList** %dlb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DispList** %dlb.addr, metadata !7034, metadata !DIExpression()), !dbg !7035
  store float* %prev_fp, float** %prev_fp.addr, align 8
  call void @llvm.dbg.declare(metadata float** %prev_fp.addr, metadata !7036, metadata !DIExpression()), !dbg !7037
  store %struct.ListBase* %dispbase, %struct.ListBase** %dispbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dispbase.addr, metadata !7038, metadata !DIExpression()), !dbg !7039
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !7040, metadata !DIExpression()), !dbg !7041
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7042
  %call = call i8* %0(i64 72, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0)), !dbg !7042
  %1 = bitcast i8* %call to %struct.DispList*, !dbg !7042
  store %struct.DispList* %1, %struct.DispList** %dl, align 8, !dbg !7043
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7044
  %3 = load %struct.DispList*, %struct.DispList** %dlb.addr, align 8, !dbg !7045
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %3, i32 0, i32 5, !dbg !7046
  %4 = load i32, i32* %nr, align 8, !dbg !7046
  %conv = sext i32 %4 to i64, !dbg !7045
  %mul = mul i64 12, %conv, !dbg !7047
  %call1 = call i8* %2(i64 %mul, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)), !dbg !7044
  %5 = bitcast i8* %call1 to float*, !dbg !7044
  %6 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7048
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %6, i32 0, i32 8, !dbg !7049
  store float* %5, float** %verts, align 8, !dbg !7050
  %7 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7051
  %verts2 = getelementptr inbounds %struct.DispList, %struct.DispList* %7, i32 0, i32 8, !dbg !7052
  %8 = load float*, float** %verts2, align 8, !dbg !7052
  %9 = bitcast float* %8 to i8*, !dbg !7053
  %10 = load float*, float** %prev_fp.addr, align 8, !dbg !7054
  %11 = bitcast float* %10 to i8*, !dbg !7053
  %12 = load %struct.DispList*, %struct.DispList** %dlb.addr, align 8, !dbg !7055
  %nr3 = getelementptr inbounds %struct.DispList, %struct.DispList* %12, i32 0, i32 5, !dbg !7056
  %13 = load i32, i32* %nr3, align 8, !dbg !7056
  %conv4 = sext i32 %13 to i64, !dbg !7055
  %mul5 = mul i64 12, %conv4, !dbg !7057
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %11, i64 %mul5, i1 false), !dbg !7053
  %14 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7058
  %type = getelementptr inbounds %struct.DispList, %struct.DispList* %14, i32 0, i32 2, !dbg !7059
  store i16 0, i16* %type, align 8, !dbg !7060
  %15 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7061
  %parts = getelementptr inbounds %struct.DispList, %struct.DispList* %15, i32 0, i32 4, !dbg !7062
  store i32 1, i32* %parts, align 4, !dbg !7063
  %16 = load %struct.DispList*, %struct.DispList** %dlb.addr, align 8, !dbg !7064
  %nr6 = getelementptr inbounds %struct.DispList, %struct.DispList* %16, i32 0, i32 5, !dbg !7065
  %17 = load i32, i32* %nr6, align 8, !dbg !7065
  %18 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7066
  %nr7 = getelementptr inbounds %struct.DispList, %struct.DispList* %18, i32 0, i32 5, !dbg !7067
  store i32 %17, i32* %nr7, align 8, !dbg !7068
  %19 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !7069
  %mat_nr = getelementptr inbounds %struct.Nurb, %struct.Nurb* %19, i32 0, i32 3, !dbg !7070
  %20 = load i16, i16* %mat_nr, align 2, !dbg !7070
  %21 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7071
  %col = getelementptr inbounds %struct.DispList, %struct.DispList* %21, i32 0, i32 6, !dbg !7072
  store i16 %20, i16* %col, align 4, !dbg !7073
  %22 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !7074
  %charidx = getelementptr inbounds %struct.Nurb, %struct.Nurb* %22, i32 0, i32 21, !dbg !7075
  %23 = load i32, i32* %charidx, align 4, !dbg !7075
  %24 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7076
  %charidx8 = getelementptr inbounds %struct.DispList, %struct.DispList* %24, i32 0, i32 11, !dbg !7077
  store i32 %23, i32* %charidx8, align 8, !dbg !7078
  %25 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !7079
  %flag = getelementptr inbounds %struct.Nurb, %struct.Nurb* %25, i32 0, i32 5, !dbg !7080
  %26 = load i16, i16* %flag, align 2, !dbg !7080
  %conv9 = sext i16 %26 to i32, !dbg !7079
  %and = and i32 %conv9, -9, !dbg !7081
  %conv10 = trunc i32 %and to i16, !dbg !7079
  %27 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7082
  %rt = getelementptr inbounds %struct.DispList, %struct.DispList* %27, i32 0, i32 7, !dbg !7083
  store i16 %conv10, i16* %rt, align 2, !dbg !7084
  %28 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !7085
  %29 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7086
  %30 = bitcast %struct.DispList* %29 to i8*, !dbg !7086
  call void @BLI_addtail(%struct.ListBase* %28, i8* %30), !dbg !7087
  ret void, !dbg !7088
}

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v3_v3(float* %r, float* %a) #0 !dbg !7089 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7090, metadata !DIExpression()), !dbg !7091
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7092, metadata !DIExpression()), !dbg !7093
  %0 = load float*, float** %a.addr, align 8, !dbg !7094
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7094
  %1 = load float, float* %arrayidx, align 4, !dbg !7094
  %fneg = fneg float %1, !dbg !7095
  %2 = load float*, float** %r.addr, align 8, !dbg !7096
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7096
  store float %fneg, float* %arrayidx1, align 4, !dbg !7097
  %3 = load float*, float** %a.addr, align 8, !dbg !7098
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !7098
  %4 = load float, float* %arrayidx2, align 4, !dbg !7098
  %fneg3 = fneg float %4, !dbg !7099
  %5 = load float*, float** %r.addr, align 8, !dbg !7100
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !7100
  store float %fneg3, float* %arrayidx4, align 4, !dbg !7101
  %6 = load float*, float** %a.addr, align 8, !dbg !7102
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !7102
  %7 = load float, float* %arrayidx5, align 4, !dbg !7102
  %fneg6 = fneg float %7, !dbg !7103
  %8 = load float*, float** %r.addr, align 8, !dbg !7104
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !7104
  store float %fneg6, float* %arrayidx7, align 4, !dbg !7105
  ret void, !dbg !7106
}

declare dso_local signext i16 @DAG_get_eval_flags_for_object(%struct.Scene*, i8*) #2

declare dso_local void @calc_curvepath(%struct.Object*, %struct.ListBase*) #2

declare dso_local zeroext i8 @BKE_nurb_check_valid_u(%struct.Nurb*) #2

declare dso_local void @BKE_curve_forward_diff_bezier(float, float, float, float, float*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !7107 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !7111, metadata !DIExpression()), !dbg !7112
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !7113, metadata !DIExpression()), !dbg !7114
  %0 = load float, float* %a.addr, align 4, !dbg !7115
  %1 = load float, float* %b.addr, align 4, !dbg !7116
  %cmp = fcmp olt float %0, %1, !dbg !7117
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7118

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !7119
  br label %cond.end, !dbg !7118

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !7120
  br label %cond.end, !dbg !7118

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !7118
  ret float %cond, !dbg !7121
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !7122 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !7123, metadata !DIExpression()), !dbg !7124
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !7125, metadata !DIExpression()), !dbg !7126
  %0 = load float, float* %a.addr, align 4, !dbg !7127
  %1 = load float, float* %b.addr, align 4, !dbg !7128
  %cmp = fcmp ogt float %0, %1, !dbg !7129
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7130

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !7131
  br label %cond.end, !dbg !7130

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !7132
  br label %cond.end, !dbg !7130

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !7130
  ret float %cond, !dbg !7133
}

; Function Attrs: noinline nounwind uwtable
define internal void @calc_bevfac_segment_mapping(%struct.BevList* %bl, float %bevfac, float %spline_length, i32* %r_bev, float* %r_blend) #0 !dbg !7134 {
entry:
  %bl.addr = alloca %struct.BevList*, align 8
  %bevfac.addr = alloca float, align 4
  %spline_length.addr = alloca float, align 4
  %r_bev.addr = alloca i32*, align 8
  %r_blend.addr = alloca float*, align 8
  %normlen = alloca float, align 4
  %normsum = alloca float, align 4
  %seglen = alloca float*, align 8
  %segbevcount = alloca i32*, align 8
  %bevcount = alloca i32, align 4
  %nr = alloca i32, align 4
  %bev_fl = alloca float, align 4
  store %struct.BevList* %bl, %struct.BevList** %bl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevList** %bl.addr, metadata !7137, metadata !DIExpression()), !dbg !7138
  store float %bevfac, float* %bevfac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %bevfac.addr, metadata !7139, metadata !DIExpression()), !dbg !7140
  store float %spline_length, float* %spline_length.addr, align 4
  call void @llvm.dbg.declare(metadata float* %spline_length.addr, metadata !7141, metadata !DIExpression()), !dbg !7142
  store i32* %r_bev, i32** %r_bev.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_bev.addr, metadata !7143, metadata !DIExpression()), !dbg !7144
  store float* %r_blend, float** %r_blend.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_blend.addr, metadata !7145, metadata !DIExpression()), !dbg !7146
  call void @llvm.dbg.declare(metadata float* %normlen, metadata !7147, metadata !DIExpression()), !dbg !7148
  call void @llvm.dbg.declare(metadata float* %normsum, metadata !7149, metadata !DIExpression()), !dbg !7150
  store float 0.000000e+00, float* %normsum, align 4, !dbg !7150
  call void @llvm.dbg.declare(metadata float** %seglen, metadata !7151, metadata !DIExpression()), !dbg !7152
  %0 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !7153
  %seglen1 = getelementptr inbounds %struct.BevList, %struct.BevList* %0, i32 0, i32 8, !dbg !7154
  %1 = load float*, float** %seglen1, align 8, !dbg !7154
  store float* %1, float** %seglen, align 8, !dbg !7152
  call void @llvm.dbg.declare(metadata i32** %segbevcount, metadata !7155, metadata !DIExpression()), !dbg !7156
  %2 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !7157
  %segbevcount2 = getelementptr inbounds %struct.BevList, %struct.BevList* %2, i32 0, i32 7, !dbg !7158
  %3 = load i32*, i32** %segbevcount2, align 8, !dbg !7158
  store i32* %3, i32** %segbevcount, align 8, !dbg !7156
  call void @llvm.dbg.declare(metadata i32* %bevcount, metadata !7159, metadata !DIExpression()), !dbg !7160
  store i32 0, i32* %bevcount, align 4, !dbg !7160
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !7161, metadata !DIExpression()), !dbg !7162
  %4 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !7163
  %nr3 = getelementptr inbounds %struct.BevList, %struct.BevList* %4, i32 0, i32 2, !dbg !7164
  %5 = load i32, i32* %nr3, align 8, !dbg !7164
  store i32 %5, i32* %nr, align 4, !dbg !7162
  call void @llvm.dbg.declare(metadata float* %bev_fl, metadata !7165, metadata !DIExpression()), !dbg !7166
  %6 = load float, float* %bevfac.addr, align 4, !dbg !7167
  %7 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !7168
  %nr4 = getelementptr inbounds %struct.BevList, %struct.BevList* %7, i32 0, i32 2, !dbg !7169
  %8 = load i32, i32* %nr4, align 8, !dbg !7169
  %sub = sub nsw i32 %8, 1, !dbg !7170
  %conv = sitofp i32 %sub to float, !dbg !7171
  %mul = fmul float %6, %conv, !dbg !7172
  store float %mul, float* %bev_fl, align 4, !dbg !7166
  %9 = load float, float* %bev_fl, align 4, !dbg !7173
  %conv5 = fptosi float %9 to i32, !dbg !7174
  %10 = load i32*, i32** %r_bev.addr, align 8, !dbg !7175
  store i32 %conv5, i32* %10, align 4, !dbg !7176
  br label %while.cond, !dbg !7177

while.cond:                                       ; preds = %if.end, %entry
  %11 = load i32, i32* %bevcount, align 4, !dbg !7178
  %12 = load i32, i32* %nr, align 4, !dbg !7179
  %sub6 = sub nsw i32 %12, 1, !dbg !7180
  %cmp = icmp slt i32 %11, %sub6, !dbg !7181
  br i1 %cmp, label %while.body, label %while.end, !dbg !7177

while.body:                                       ; preds = %while.cond
  %13 = load float*, float** %seglen, align 8, !dbg !7182
  %14 = load float, float* %13, align 4, !dbg !7184
  %15 = load float, float* %spline_length.addr, align 4, !dbg !7185
  %div = fdiv float %14, %15, !dbg !7186
  store float %div, float* %normlen, align 4, !dbg !7187
  %16 = load float, float* %normsum, align 4, !dbg !7188
  %17 = load float, float* %normlen, align 4, !dbg !7190
  %add = fadd float %16, %17, !dbg !7191
  %18 = load float, float* %bevfac.addr, align 4, !dbg !7192
  %cmp8 = fcmp ogt float %add, %18, !dbg !7193
  br i1 %cmp8, label %if.then, label %if.end, !dbg !7194

if.then:                                          ; preds = %while.body
  %19 = load i32, i32* %bevcount, align 4, !dbg !7195
  %conv10 = sitofp i32 %19 to float, !dbg !7195
  %20 = load float, float* %bevfac.addr, align 4, !dbg !7197
  %21 = load float, float* %normsum, align 4, !dbg !7198
  %sub11 = fsub float %20, %21, !dbg !7199
  %22 = load float, float* %normlen, align 4, !dbg !7200
  %div12 = fdiv float %sub11, %22, !dbg !7201
  %23 = load i32*, i32** %segbevcount, align 8, !dbg !7202
  %24 = load i32, i32* %23, align 4, !dbg !7203
  %conv13 = sitofp i32 %24 to float, !dbg !7203
  %mul14 = fmul float %div12, %conv13, !dbg !7204
  %add15 = fadd float %conv10, %mul14, !dbg !7205
  store float %add15, float* %bev_fl, align 4, !dbg !7206
  %25 = load float, float* %bev_fl, align 4, !dbg !7207
  %conv16 = fptosi float %25 to i32, !dbg !7208
  %26 = load i32*, i32** %r_bev.addr, align 8, !dbg !7209
  store i32 %conv16, i32* %26, align 4, !dbg !7210
  %27 = load float, float* %bev_fl, align 4, !dbg !7211
  %28 = load i32*, i32** %r_bev.addr, align 8, !dbg !7212
  %29 = load i32, i32* %28, align 4, !dbg !7213
  %conv17 = sitofp i32 %29 to float, !dbg !7213
  %sub18 = fsub float %27, %conv17, !dbg !7214
  %30 = load float*, float** %r_blend.addr, align 8, !dbg !7215
  store float %sub18, float* %30, align 4, !dbg !7216
  br label %while.end, !dbg !7217

if.end:                                           ; preds = %while.body
  %31 = load float, float* %normlen, align 4, !dbg !7218
  %32 = load float, float* %normsum, align 4, !dbg !7219
  %add19 = fadd float %32, %31, !dbg !7219
  store float %add19, float* %normsum, align 4, !dbg !7219
  %33 = load i32*, i32** %segbevcount, align 8, !dbg !7220
  %34 = load i32, i32* %33, align 4, !dbg !7221
  %35 = load i32, i32* %bevcount, align 4, !dbg !7222
  %add20 = add nsw i32 %35, %34, !dbg !7222
  store i32 %add20, i32* %bevcount, align 4, !dbg !7222
  %36 = load i32*, i32** %segbevcount, align 8, !dbg !7223
  %incdec.ptr = getelementptr inbounds i32, i32* %36, i32 1, !dbg !7223
  store i32* %incdec.ptr, i32** %segbevcount, align 8, !dbg !7223
  %37 = load float*, float** %seglen, align 8, !dbg !7224
  %incdec.ptr21 = getelementptr inbounds float, float* %37, i32 1, !dbg !7224
  store float* %incdec.ptr21, float** %seglen, align 8, !dbg !7224
  br label %while.cond, !dbg !7177, !llvm.loop !7225

while.end:                                        ; preds = %if.then, %while.cond
  ret void, !dbg !7227
}

; Function Attrs: noinline nounwind uwtable
define internal void @calc_bevfac_spline_mapping(%struct.BevList* %bl, float %bevfac, float %spline_length, i32* %r_bev, float* %r_blend) #0 !dbg !7228 {
entry:
  %bl.addr = alloca %struct.BevList*, align 8
  %bevfac.addr = alloca float, align 4
  %spline_length.addr = alloca float, align 4
  %r_bev.addr = alloca i32*, align 8
  %r_blend.addr = alloca float*, align 8
  %len_target = alloca float, align 4
  %bevp = alloca %struct.BevPoint*, align 8
  %len_next = alloca float, align 4
  %len = alloca float, align 4
  %i = alloca i32, align 4
  %nr = alloca i32, align 4
  store %struct.BevList* %bl, %struct.BevList** %bl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevList** %bl.addr, metadata !7229, metadata !DIExpression()), !dbg !7230
  store float %bevfac, float* %bevfac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %bevfac.addr, metadata !7231, metadata !DIExpression()), !dbg !7232
  store float %spline_length, float* %spline_length.addr, align 4
  call void @llvm.dbg.declare(metadata float* %spline_length.addr, metadata !7233, metadata !DIExpression()), !dbg !7234
  store i32* %r_bev, i32** %r_bev.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_bev.addr, metadata !7235, metadata !DIExpression()), !dbg !7236
  store float* %r_blend, float** %r_blend.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_blend.addr, metadata !7237, metadata !DIExpression()), !dbg !7238
  call void @llvm.dbg.declare(metadata float* %len_target, metadata !7239, metadata !DIExpression()), !dbg !7240
  %0 = load float, float* %bevfac.addr, align 4, !dbg !7241
  %1 = load float, float* %spline_length.addr, align 4, !dbg !7242
  %mul = fmul float %0, %1, !dbg !7243
  store float %mul, float* %len_target, align 4, !dbg !7240
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp, metadata !7244, metadata !DIExpression()), !dbg !7245
  %2 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !7246
  %bevpoints = getelementptr inbounds %struct.BevList, %struct.BevList* %2, i32 0, i32 9, !dbg !7247
  %arraydecay = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints, i64 0, i64 0, !dbg !7246
  store %struct.BevPoint* %arraydecay, %struct.BevPoint** %bevp, align 8, !dbg !7245
  call void @llvm.dbg.declare(metadata float* %len_next, metadata !7248, metadata !DIExpression()), !dbg !7249
  store float 0.000000e+00, float* %len_next, align 4, !dbg !7249
  call void @llvm.dbg.declare(metadata float* %len, metadata !7250, metadata !DIExpression()), !dbg !7251
  store float 0.000000e+00, float* %len, align 4, !dbg !7251
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7252, metadata !DIExpression()), !dbg !7253
  store i32 0, i32* %i, align 4, !dbg !7253
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !7254, metadata !DIExpression()), !dbg !7255
  %3 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !7256
  %nr1 = getelementptr inbounds %struct.BevList, %struct.BevList* %3, i32 0, i32 2, !dbg !7257
  %4 = load i32, i32* %nr1, align 8, !dbg !7257
  store i32 %4, i32* %nr, align 4, !dbg !7255
  br label %while.cond, !dbg !7258

while.cond:                                       ; preds = %if.end, %entry
  %5 = load i32, i32* %nr, align 4, !dbg !7259
  %dec = add nsw i32 %5, -1, !dbg !7259
  store i32 %dec, i32* %nr, align 4, !dbg !7259
  %tobool = icmp ne i32 %5, 0, !dbg !7258
  br i1 %tobool, label %while.body, label %while.end, !dbg !7258

while.body:                                       ; preds = %while.cond
  %6 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7260
  %incdec.ptr = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %6, i32 1, !dbg !7260
  store %struct.BevPoint* %incdec.ptr, %struct.BevPoint** %bevp, align 8, !dbg !7260
  %7 = load float, float* %len, align 4, !dbg !7262
  %8 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7263
  %offset = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %8, i32 0, i32 4, !dbg !7264
  %9 = load float, float* %offset, align 4, !dbg !7264
  %add = fadd float %7, %9, !dbg !7265
  store float %add, float* %len_next, align 4, !dbg !7266
  %10 = load float, float* %len_next, align 4, !dbg !7267
  %11 = load float, float* %len_target, align 4, !dbg !7269
  %cmp = fcmp ogt float %10, %11, !dbg !7270
  br i1 %cmp, label %if.then, label %if.end, !dbg !7271

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !7272

if.end:                                           ; preds = %while.body
  %12 = load float, float* %len_next, align 4, !dbg !7274
  store float %12, float* %len, align 4, !dbg !7275
  %13 = load i32, i32* %i, align 4, !dbg !7276
  %inc = add nsw i32 %13, 1, !dbg !7276
  store i32 %inc, i32* %i, align 4, !dbg !7276
  br label %while.cond, !dbg !7258, !llvm.loop !7277

while.end:                                        ; preds = %if.then, %while.cond
  %14 = load i32, i32* %i, align 4, !dbg !7279
  %15 = load i32*, i32** %r_bev.addr, align 8, !dbg !7280
  store i32 %14, i32* %15, align 4, !dbg !7281
  %16 = load float, float* %len_target, align 4, !dbg !7282
  %17 = load float, float* %len, align 4, !dbg !7283
  %sub = fsub float %16, %17, !dbg !7284
  %18 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7285
  %offset2 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %18, i32 0, i32 4, !dbg !7286
  %19 = load float, float* %offset2, align 4, !dbg !7286
  %div = fdiv float %sub, %19, !dbg !7287
  %20 = load float*, float** %r_blend.addr, align 8, !dbg !7288
  store float %div, float* %20, align 4, !dbg !7289
  ret void, !dbg !7290
}

declare dso_local void @copy_qt_qt(float*, float*) #2

declare dso_local void @interp_v3_v3v3(float*, float*, float*, float) #2

declare dso_local void @interp_qt_qtqt(float*, float*, float*, float) #2

declare dso_local void @mul_qt_v3(float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.DerivedMesh* @create_orco_dm(%struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !7291 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %disp = alloca %struct.ListBase, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7294, metadata !DIExpression()), !dbg !7295
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7296, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !7298, metadata !DIExpression()), !dbg !7299
  call void @llvm.dbg.declare(metadata %struct.ListBase* %disp, metadata !7300, metadata !DIExpression()), !dbg !7301
  %0 = bitcast %struct.ListBase* %disp to i8*, !dbg !7301
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !7301
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7302
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7303
  call void @BKE_displist_make_curveTypes_forOrco(%struct.Scene* %1, %struct.Object* %2, %struct.ListBase* %disp), !dbg !7304
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7305
  %call = call %struct.DerivedMesh* @CDDM_from_curve_displist(%struct.Object* %3, %struct.ListBase* %disp), !dbg !7306
  store %struct.DerivedMesh* %call, %struct.DerivedMesh** %dm, align 8, !dbg !7307
  call void @BKE_displist_free(%struct.ListBase* %disp), !dbg !7308
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7309
  ret %struct.DerivedMesh* %4, !dbg !7310
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_orco_dm(%struct.Object* %ob, %struct.DerivedMesh* %dm, %struct.DerivedMesh* %orcodm) #0 !dbg !7311 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %orcodm.addr = alloca %struct.DerivedMesh*, align 8
  %orco = alloca [3 x float]*, align 8
  %layerorco = alloca [3 x float]*, align 8
  %totvert = alloca i32, align 4
  %a = alloca i32, align 4
  %cu = alloca %struct.Curve*, align 8
  %co = alloca float*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7314, metadata !DIExpression()), !dbg !7315
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !7316, metadata !DIExpression()), !dbg !7317
  store %struct.DerivedMesh* %orcodm, %struct.DerivedMesh** %orcodm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %orcodm.addr, metadata !7318, metadata !DIExpression()), !dbg !7319
  call void @llvm.dbg.declare(metadata [3 x float]** %orco, metadata !7320, metadata !DIExpression()), !dbg !7321
  call void @llvm.dbg.declare(metadata [3 x float]** %layerorco, metadata !7322, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !7324, metadata !DIExpression()), !dbg !7325
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7326, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !7328, metadata !DIExpression()), !dbg !7329
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7330
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !7331
  %1 = load i8*, i8** %data, align 8, !dbg !7331
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !7330
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !7329
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7332
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 23, !dbg !7333
  %4 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !7333
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7334
  %call = call i32 %4(%struct.DerivedMesh* %5), !dbg !7332
  store i32 %call, i32* %totvert, align 4, !dbg !7335
  %6 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7336
  %7 = load i32, i32* %totvert, align 4, !dbg !7337
  %conv = sext i32 %7 to i64, !dbg !7337
  %mul = mul i64 12, %conv, !dbg !7338
  %call1 = call i8* %6(i64 %mul, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)), !dbg !7336
  %8 = bitcast i8* %call1 to [3 x float]*, !dbg !7336
  store [3 x float]* %8, [3 x float]** %orco, align 8, !dbg !7339
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm.addr, align 8, !dbg !7340
  %getNumVerts2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 23, !dbg !7342
  %10 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts2, align 8, !dbg !7342
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm.addr, align 8, !dbg !7343
  %call3 = call i32 %10(%struct.DerivedMesh* %11), !dbg !7340
  %12 = load i32, i32* %totvert, align 4, !dbg !7344
  %cmp = icmp eq i32 %call3, %12, !dbg !7345
  br i1 %cmp, label %if.then, label %if.else, !dbg !7346

if.then:                                          ; preds = %entry
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm.addr, align 8, !dbg !7347
  %getVertCos = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 77, !dbg !7348
  %14 = load void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, [3 x float]*)** %getVertCos, align 8, !dbg !7348
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcodm.addr, align 8, !dbg !7349
  %16 = load [3 x float]*, [3 x float]** %orco, align 8, !dbg !7350
  call void %14(%struct.DerivedMesh* %15, [3 x float]* %16), !dbg !7347
  br label %if.end, !dbg !7347

if.else:                                          ; preds = %entry
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7351
  %getVertCos5 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %17, i32 0, i32 77, !dbg !7352
  %18 = load void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, [3 x float]*)** %getVertCos5, align 8, !dbg !7352
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7353
  %20 = load [3 x float]*, [3 x float]** %orco, align 8, !dbg !7354
  call void %18(%struct.DerivedMesh* %19, [3 x float]* %20), !dbg !7351
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %a, align 4, !dbg !7355
  br label %for.cond, !dbg !7357

for.cond:                                         ; preds = %for.inc, %if.end
  %21 = load i32, i32* %a, align 4, !dbg !7358
  %22 = load i32, i32* %totvert, align 4, !dbg !7360
  %cmp6 = icmp slt i32 %21, %22, !dbg !7361
  br i1 %cmp6, label %for.body, label %for.end, !dbg !7362

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %co, metadata !7363, metadata !DIExpression()), !dbg !7365
  %23 = load [3 x float]*, [3 x float]** %orco, align 8, !dbg !7366
  %24 = load i32, i32* %a, align 4, !dbg !7367
  %idxprom = sext i32 %24 to i64, !dbg !7366
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %23, i64 %idxprom, !dbg !7366
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !7366
  store float* %arraydecay, float** %co, align 8, !dbg !7365
  %25 = load float*, float** %co, align 8, !dbg !7368
  %arrayidx8 = getelementptr inbounds float, float* %25, i64 0, !dbg !7368
  %26 = load float, float* %arrayidx8, align 4, !dbg !7368
  %27 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7369
  %loc = getelementptr inbounds %struct.Curve, %struct.Curve* %27, i32 0, i32 11, !dbg !7370
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !7369
  %28 = load float, float* %arrayidx9, align 8, !dbg !7369
  %sub = fsub float %26, %28, !dbg !7371
  %29 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7372
  %size = getelementptr inbounds %struct.Curve, %struct.Curve* %29, i32 0, i32 12, !dbg !7373
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !7372
  %30 = load float, float* %arrayidx10, align 4, !dbg !7372
  %div = fdiv float %sub, %30, !dbg !7374
  %31 = load float*, float** %co, align 8, !dbg !7375
  %arrayidx11 = getelementptr inbounds float, float* %31, i64 0, !dbg !7375
  store float %div, float* %arrayidx11, align 4, !dbg !7376
  %32 = load float*, float** %co, align 8, !dbg !7377
  %arrayidx12 = getelementptr inbounds float, float* %32, i64 1, !dbg !7377
  %33 = load float, float* %arrayidx12, align 4, !dbg !7377
  %34 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7378
  %loc13 = getelementptr inbounds %struct.Curve, %struct.Curve* %34, i32 0, i32 11, !dbg !7379
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %loc13, i64 0, i64 1, !dbg !7378
  %35 = load float, float* %arrayidx14, align 4, !dbg !7378
  %sub15 = fsub float %33, %35, !dbg !7380
  %36 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7381
  %size16 = getelementptr inbounds %struct.Curve, %struct.Curve* %36, i32 0, i32 12, !dbg !7382
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %size16, i64 0, i64 1, !dbg !7381
  %37 = load float, float* %arrayidx17, align 4, !dbg !7381
  %div18 = fdiv float %sub15, %37, !dbg !7383
  %38 = load float*, float** %co, align 8, !dbg !7384
  %arrayidx19 = getelementptr inbounds float, float* %38, i64 1, !dbg !7384
  store float %div18, float* %arrayidx19, align 4, !dbg !7385
  %39 = load float*, float** %co, align 8, !dbg !7386
  %arrayidx20 = getelementptr inbounds float, float* %39, i64 2, !dbg !7386
  %40 = load float, float* %arrayidx20, align 4, !dbg !7386
  %41 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7387
  %loc21 = getelementptr inbounds %struct.Curve, %struct.Curve* %41, i32 0, i32 11, !dbg !7388
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %loc21, i64 0, i64 2, !dbg !7387
  %42 = load float, float* %arrayidx22, align 8, !dbg !7387
  %sub23 = fsub float %40, %42, !dbg !7389
  %43 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7390
  %size24 = getelementptr inbounds %struct.Curve, %struct.Curve* %43, i32 0, i32 12, !dbg !7391
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %size24, i64 0, i64 2, !dbg !7390
  %44 = load float, float* %arrayidx25, align 4, !dbg !7390
  %div26 = fdiv float %sub23, %44, !dbg !7392
  %45 = load float*, float** %co, align 8, !dbg !7393
  %arrayidx27 = getelementptr inbounds float, float* %45, i64 2, !dbg !7393
  store float %div26, float* %arrayidx27, align 4, !dbg !7394
  br label %for.inc, !dbg !7395

for.inc:                                          ; preds = %for.body
  %46 = load i32, i32* %a, align 4, !dbg !7396
  %inc = add nsw i32 %46, 1, !dbg !7396
  store i32 %inc, i32* %a, align 4, !dbg !7396
  br label %for.cond, !dbg !7397, !llvm.loop !7398

for.end:                                          ; preds = %for.cond
  %47 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7400
  %call28 = call i8* @DM_get_vert_data_layer(%struct.DerivedMesh* %47, i32 14), !dbg !7402
  %48 = bitcast i8* %call28 to [3 x float]*, !dbg !7402
  store [3 x float]* %48, [3 x float]** %layerorco, align 8, !dbg !7403
  %tobool = icmp ne [3 x float]* %48, null, !dbg !7403
  br i1 %tobool, label %if.then29, label %if.else32, !dbg !7404

if.then29:                                        ; preds = %for.end
  %49 = load [3 x float]*, [3 x float]** %layerorco, align 8, !dbg !7405
  %50 = bitcast [3 x float]* %49 to i8*, !dbg !7407
  %51 = load [3 x float]*, [3 x float]** %orco, align 8, !dbg !7408
  %52 = bitcast [3 x float]* %51 to i8*, !dbg !7407
  %53 = load i32, i32* %totvert, align 4, !dbg !7409
  %conv30 = sext i32 %53 to i64, !dbg !7409
  %mul31 = mul i64 4, %conv30, !dbg !7410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %52, i64 %mul31, i1 false), !dbg !7407
  %54 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7411
  %55 = load [3 x float]*, [3 x float]** %orco, align 8, !dbg !7412
  %56 = bitcast [3 x float]* %55 to i8*, !dbg !7412
  call void %54(i8* %56), !dbg !7411
  br label %if.end33, !dbg !7413

if.else32:                                        ; preds = %for.end
  %57 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7414
  %58 = load [3 x float]*, [3 x float]** %orco, align 8, !dbg !7415
  %59 = bitcast [3 x float]* %58 to i8*, !dbg !7415
  call void @DM_add_vert_layer(%struct.DerivedMesh* %57, i32 14, i32 0, i8* %59), !dbg !7416
  br label %if.end33

if.end33:                                         ; preds = %if.else32, %if.then29
  ret void, !dbg !7417
}

declare dso_local i8* @DM_get_vert_data_layer(%struct.DerivedMesh*, i32) #2

declare dso_local void @DM_add_vert_layer(%struct.DerivedMesh*, i32, i32, i8*) #2

declare dso_local void @DM_set_object_boundbox(%struct.Object*, %struct.DerivedMesh*) #2

declare dso_local void @BKE_boundbox_init_from_minmax(%struct.BoundBox*, float*, float*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!233, !234, !235}
!llvm.ident = !{!236}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !206, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "blender/source/blender/blenkernel/intern/displist.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !12, !18, !23, !27, !33, !39, !53, !97, !104, !116, !124, !136, !188, !192, !201}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 103, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "blender/source/blender/blenlib/BLI_scanfill.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9, !10, !11}
!7 = !DIEnumerator(name: "BLI_SCANFILL_CALC_QUADTRI_FASTPATH", value: 1, isUnsigned: true)
!8 = !DIEnumerator(name: "BLI_SCANFILL_CALC_REMOVE_DOUBLES", value: 2, isUnsigned: true)
!9 = !DIEnumerator(name: "BLI_SCANFILL_CALC_POLYS", value: 4, isUnsigned: true)
!10 = !DIEnumerator(name: "BLI_SCANFILL_CALC_HOLES", value: 8, isUnsigned: true)
!11 = !DIEnumerator(name: "BLI_SCANFILL_CALC_LOOSE", value: 16, isUnsigned: true)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !13, line: 128, baseType: !5, size: 32, elements: !14)
!13 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!14 = !{!15, !16, !17}
!15 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!16 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!17 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !13, line: 164, baseType: !5, size: 32, elements: !19)
!19 = !{!20, !21, !22}
!20 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!21 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!22 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!23 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !13, line: 159, baseType: !5, size: 32, elements: !24)
!24 = !{!25, !26}
!25 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!26 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !13, line: 134, baseType: !5, size: 32, elements: !28)
!28 = !{!29, !30, !31, !32}
!29 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!30 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!31 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!32 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !13, line: 152, baseType: !5, size: 32, elements: !34)
!34 = !{!35, !36, !37, !38}
!35 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!36 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!37 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!38 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !40, line: 339, baseType: !5, size: 32, elements: !41)
!40 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!41 = !{!42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52}
!42 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!43 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!44 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!45 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!46 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!47 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!48 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!49 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!50 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!51 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!52 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !54, line: 76, baseType: !5, size: 32, elements: !55)
!54 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!55 = !{!56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96}
!56 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!58 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!59 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!60 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!61 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!62 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!63 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!64 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!65 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!66 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!67 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!68 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!69 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!70 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!71 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!72 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!73 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!74 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!75 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!76 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!77 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!78 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!79 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!80 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!81 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!82 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!83 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!84 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!85 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!86 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!87 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!88 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!89 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!90 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!91 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!92 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!93 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!94 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!95 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!96 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierApplyFlag", file: !98, line: 110, baseType: !5, size: 32, elements: !99)
!98 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_modifier.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!99 = !{!100, !101, !102, !103}
!100 = !DIEnumerator(name: "MOD_APPLY_RENDER", value: 1, isUnsigned: true)
!101 = !DIEnumerator(name: "MOD_APPLY_USECACHE", value: 2, isUnsigned: true)
!102 = !DIEnumerator(name: "MOD_APPLY_ORCO", value: 4, isUnsigned: true)
!103 = !DIEnumerator(name: "MOD_APPLY_IGNORE_SIMPLIFY", value: 8, isUnsigned: true)
!104 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierMode", file: !105, line: 88, baseType: !106, size: 32, elements: !107)
!105 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!106 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!107 = !{!108, !109, !110, !111, !112, !113, !114, !115}
!108 = !DIEnumerator(name: "eModifierMode_Realtime", value: 1)
!109 = !DIEnumerator(name: "eModifierMode_Render", value: 2)
!110 = !DIEnumerator(name: "eModifierMode_Editmode", value: 4)
!111 = !DIEnumerator(name: "eModifierMode_OnCage", value: 8)
!112 = !DIEnumerator(name: "eModifierMode_Expanded", value: 16)
!113 = !DIEnumerator(name: "eModifierMode_Virtual", value: 32)
!114 = !DIEnumerator(name: "eModifierMode_ApplyOnSpline", value: 64)
!115 = !DIEnumerator(name: "eModifierMode_DisableTemporary", value: -2147483648)
!116 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 47, baseType: !5, size: 32, elements: !117)
!117 = !{!118, !119, !120, !121, !122, !123}
!118 = !DIEnumerator(name: "eModifierTypeType_None", value: 0, isUnsigned: true)
!119 = !DIEnumerator(name: "eModifierTypeType_OnlyDeform", value: 1, isUnsigned: true)
!120 = !DIEnumerator(name: "eModifierTypeType_Constructive", value: 2, isUnsigned: true)
!121 = !DIEnumerator(name: "eModifierTypeType_Nonconstructive", value: 3, isUnsigned: true)
!122 = !DIEnumerator(name: "eModifierTypeType_DeformOrConstruct", value: 4, isUnsigned: true)
!123 = !DIEnumerator(name: "eModifierTypeType_NonGeometrical", value: 5, isUnsigned: true)
!124 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 73, baseType: !5, size: 32, elements: !125)
!125 = !{!126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!126 = !DIEnumerator(name: "eModifierTypeFlag_AcceptsMesh", value: 1, isUnsigned: true)
!127 = !DIEnumerator(name: "eModifierTypeFlag_AcceptsCVs", value: 2, isUnsigned: true)
!128 = !DIEnumerator(name: "eModifierTypeFlag_SupportsMapping", value: 4, isUnsigned: true)
!129 = !DIEnumerator(name: "eModifierTypeFlag_SupportsEditmode", value: 8, isUnsigned: true)
!130 = !DIEnumerator(name: "eModifierTypeFlag_EnableInEditmode", value: 16, isUnsigned: true)
!131 = !DIEnumerator(name: "eModifierTypeFlag_RequiresOriginalData", value: 32, isUnsigned: true)
!132 = !DIEnumerator(name: "eModifierTypeFlag_UsesPointCache", value: 64, isUnsigned: true)
!133 = !DIEnumerator(name: "eModifierTypeFlag_Single", value: 128, isUnsigned: true)
!134 = !DIEnumerator(name: "eModifierTypeFlag_NoUserAdd", value: 256, isUnsigned: true)
!135 = !DIEnumerator(name: "eModifierTypeFlag_UsesPreview", value: 512, isUnsigned: true)
!136 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierType", file: !105, line: 35, baseType: !5, size: 32, elements: !137)
!137 = !{!138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187}
!138 = !DIEnumerator(name: "eModifierType_None", value: 0, isUnsigned: true)
!139 = !DIEnumerator(name: "eModifierType_Subsurf", value: 1, isUnsigned: true)
!140 = !DIEnumerator(name: "eModifierType_Lattice", value: 2, isUnsigned: true)
!141 = !DIEnumerator(name: "eModifierType_Curve", value: 3, isUnsigned: true)
!142 = !DIEnumerator(name: "eModifierType_Build", value: 4, isUnsigned: true)
!143 = !DIEnumerator(name: "eModifierType_Mirror", value: 5, isUnsigned: true)
!144 = !DIEnumerator(name: "eModifierType_Decimate", value: 6, isUnsigned: true)
!145 = !DIEnumerator(name: "eModifierType_Wave", value: 7, isUnsigned: true)
!146 = !DIEnumerator(name: "eModifierType_Armature", value: 8, isUnsigned: true)
!147 = !DIEnumerator(name: "eModifierType_Hook", value: 9, isUnsigned: true)
!148 = !DIEnumerator(name: "eModifierType_Softbody", value: 10, isUnsigned: true)
!149 = !DIEnumerator(name: "eModifierType_Boolean", value: 11, isUnsigned: true)
!150 = !DIEnumerator(name: "eModifierType_Array", value: 12, isUnsigned: true)
!151 = !DIEnumerator(name: "eModifierType_EdgeSplit", value: 13, isUnsigned: true)
!152 = !DIEnumerator(name: "eModifierType_Displace", value: 14, isUnsigned: true)
!153 = !DIEnumerator(name: "eModifierType_UVProject", value: 15, isUnsigned: true)
!154 = !DIEnumerator(name: "eModifierType_Smooth", value: 16, isUnsigned: true)
!155 = !DIEnumerator(name: "eModifierType_Cast", value: 17, isUnsigned: true)
!156 = !DIEnumerator(name: "eModifierType_MeshDeform", value: 18, isUnsigned: true)
!157 = !DIEnumerator(name: "eModifierType_ParticleSystem", value: 19, isUnsigned: true)
!158 = !DIEnumerator(name: "eModifierType_ParticleInstance", value: 20, isUnsigned: true)
!159 = !DIEnumerator(name: "eModifierType_Explode", value: 21, isUnsigned: true)
!160 = !DIEnumerator(name: "eModifierType_Cloth", value: 22, isUnsigned: true)
!161 = !DIEnumerator(name: "eModifierType_Collision", value: 23, isUnsigned: true)
!162 = !DIEnumerator(name: "eModifierType_Bevel", value: 24, isUnsigned: true)
!163 = !DIEnumerator(name: "eModifierType_Shrinkwrap", value: 25, isUnsigned: true)
!164 = !DIEnumerator(name: "eModifierType_Fluidsim", value: 26, isUnsigned: true)
!165 = !DIEnumerator(name: "eModifierType_Mask", value: 27, isUnsigned: true)
!166 = !DIEnumerator(name: "eModifierType_SimpleDeform", value: 28, isUnsigned: true)
!167 = !DIEnumerator(name: "eModifierType_Multires", value: 29, isUnsigned: true)
!168 = !DIEnumerator(name: "eModifierType_Surface", value: 30, isUnsigned: true)
!169 = !DIEnumerator(name: "eModifierType_Smoke", value: 31, isUnsigned: true)
!170 = !DIEnumerator(name: "eModifierType_ShapeKey", value: 32, isUnsigned: true)
!171 = !DIEnumerator(name: "eModifierType_Solidify", value: 33, isUnsigned: true)
!172 = !DIEnumerator(name: "eModifierType_Screw", value: 34, isUnsigned: true)
!173 = !DIEnumerator(name: "eModifierType_Warp", value: 35, isUnsigned: true)
!174 = !DIEnumerator(name: "eModifierType_WeightVGEdit", value: 36, isUnsigned: true)
!175 = !DIEnumerator(name: "eModifierType_WeightVGMix", value: 37, isUnsigned: true)
!176 = !DIEnumerator(name: "eModifierType_WeightVGProximity", value: 38, isUnsigned: true)
!177 = !DIEnumerator(name: "eModifierType_Ocean", value: 39, isUnsigned: true)
!178 = !DIEnumerator(name: "eModifierType_DynamicPaint", value: 40, isUnsigned: true)
!179 = !DIEnumerator(name: "eModifierType_Remesh", value: 41, isUnsigned: true)
!180 = !DIEnumerator(name: "eModifierType_Skin", value: 42, isUnsigned: true)
!181 = !DIEnumerator(name: "eModifierType_LaplacianSmooth", value: 43, isUnsigned: true)
!182 = !DIEnumerator(name: "eModifierType_Triangulate", value: 44, isUnsigned: true)
!183 = !DIEnumerator(name: "eModifierType_UVWarp", value: 45, isUnsigned: true)
!184 = !DIEnumerator(name: "eModifierType_MeshCache", value: 46, isUnsigned: true)
!185 = !DIEnumerator(name: "eModifierType_LaplacianDeform", value: 47, isUnsigned: true)
!186 = !DIEnumerator(name: "eModifierType_Wireframe", value: 48, isUnsigned: true)
!187 = !DIEnumerator(name: "NUM_MODIFIER_TYPES", value: 49, isUnsigned: true)
!188 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !189, line: 69, baseType: !5, size: 32, elements: !190)
!189 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!190 = !{!191}
!191 = !DIEnumerator(name: "DAG_EVAL_NEED_CURVE_PATH", value: 1, isUnsigned: true)
!192 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBezTriple_Handle", file: !193, line: 361, baseType: !5, size: 32, elements: !194)
!193 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!194 = !{!195, !196, !197, !198, !199, !200}
!195 = !DIEnumerator(name: "HD_FREE", value: 0, isUnsigned: true)
!196 = !DIEnumerator(name: "HD_AUTO", value: 1, isUnsigned: true)
!197 = !DIEnumerator(name: "HD_VECT", value: 2, isUnsigned: true)
!198 = !DIEnumerator(name: "HD_ALIGN", value: 3, isUnsigned: true)
!199 = !DIEnumerator(name: "HD_AUTO_ANIM", value: 4, isUnsigned: true)
!200 = !DIEnumerator(name: "HD_ALIGN_DOUBLESIDE", value: 5, isUnsigned: true)
!201 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !193, line: 310, baseType: !5, size: 32, elements: !202)
!202 = !{!203, !204, !205}
!203 = !DIEnumerator(name: "CU_BEVFAC_MAP_RESOLU", value: 0, isUnsigned: true)
!204 = !DIEnumerator(name: "CU_BEVFAC_MAP_SEGMENT", value: 1, isUnsigned: true)
!205 = !DIEnumerator(name: "CU_BEVFAC_MAP_SPLINE", value: 2, isUnsigned: true)
!206 = !{!207, !208, !209, !210, !106}
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!208 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 64)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "DispList", file: !212, line: 79, baseType: !213)
!212 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_displist.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DispList", file: !212, line: 68, size: 576, elements: !214)
!214 = !{!215, !217, !218, !220, !221, !222, !223, !224, !225, !226, !227, !229, !230, !231}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !213, file: !212, line: 69, baseType: !216, size: 64)
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !213, file: !212, line: 69, baseType: !216, size: 64, offset: 64)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !213, file: !212, line: 70, baseType: !219, size: 16, offset: 128)
!219 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !213, file: !212, line: 70, baseType: !219, size: 16, offset: 144)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "parts", scope: !213, file: !212, line: 71, baseType: !106, size: 32, offset: 160)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !213, file: !212, line: 71, baseType: !106, size: 32, offset: 192)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !213, file: !212, line: 72, baseType: !219, size: 16, offset: 224)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !213, file: !212, line: 72, baseType: !219, size: 16, offset: 240)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !213, file: !212, line: 73, baseType: !209, size: 64, offset: 256)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "nors", scope: !213, file: !212, line: 73, baseType: !209, size: 64, offset: 320)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !213, file: !212, line: 74, baseType: !228, size: 64, offset: 384)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "charidx", scope: !213, file: !212, line: 75, baseType: !106, size: 32, offset: 448)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "totindex", scope: !213, file: !212, line: 76, baseType: !106, size: 32, offset: 480)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "bevelSplitFlag", scope: !213, file: !212, line: 78, baseType: !232, size: 64, offset: 512)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!233 = !{i32 7, !"Dwarf Version", i32 4}
!234 = !{i32 2, !"Debug Info Version", i32 3}
!235 = !{i32 1, !"wchar_size", i32 4}
!236 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!237 = distinct !DISubprogram(name: "BKE_displist_elem_free", scope: !1, file: !1, line: 68, type: !238, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !240)
!238 = !DISubroutineType(types: !239)
!239 = !{null, !210}
!240 = !{}
!241 = !DILocalVariable(name: "dl", arg: 1, scope: !237, file: !1, line: 68, type: !210)
!242 = !DILocation(line: 68, column: 39, scope: !237)
!243 = !DILocation(line: 70, column: 6, scope: !244)
!244 = distinct !DILexicalBlock(scope: !237, file: !1, line: 70, column: 6)
!245 = !DILocation(line: 70, column: 6, scope: !237)
!246 = !DILocation(line: 71, column: 7, scope: !247)
!247 = distinct !DILexicalBlock(scope: !248, file: !1, line: 71, column: 7)
!248 = distinct !DILexicalBlock(scope: !244, file: !1, line: 70, column: 10)
!249 = !DILocation(line: 71, column: 11, scope: !247)
!250 = !DILocation(line: 71, column: 7, scope: !248)
!251 = !DILocation(line: 71, column: 18, scope: !247)
!252 = !DILocation(line: 71, column: 28, scope: !247)
!253 = !DILocation(line: 71, column: 32, scope: !247)
!254 = !DILocation(line: 72, column: 7, scope: !255)
!255 = distinct !DILexicalBlock(scope: !248, file: !1, line: 72, column: 7)
!256 = !DILocation(line: 72, column: 11, scope: !255)
!257 = !DILocation(line: 72, column: 7, scope: !248)
!258 = !DILocation(line: 72, column: 17, scope: !255)
!259 = !DILocation(line: 72, column: 27, scope: !255)
!260 = !DILocation(line: 72, column: 31, scope: !255)
!261 = !DILocation(line: 73, column: 7, scope: !262)
!262 = distinct !DILexicalBlock(scope: !248, file: !1, line: 73, column: 7)
!263 = !DILocation(line: 73, column: 11, scope: !262)
!264 = !DILocation(line: 73, column: 7, scope: !248)
!265 = !DILocation(line: 73, column: 18, scope: !262)
!266 = !DILocation(line: 73, column: 28, scope: !262)
!267 = !DILocation(line: 73, column: 32, scope: !262)
!268 = !DILocation(line: 74, column: 7, scope: !269)
!269 = distinct !DILexicalBlock(scope: !248, file: !1, line: 74, column: 7)
!270 = !DILocation(line: 74, column: 11, scope: !269)
!271 = !DILocation(line: 74, column: 7, scope: !248)
!272 = !DILocation(line: 74, column: 27, scope: !269)
!273 = !DILocation(line: 74, column: 37, scope: !269)
!274 = !DILocation(line: 74, column: 41, scope: !269)
!275 = !DILocation(line: 75, column: 3, scope: !248)
!276 = !DILocation(line: 75, column: 13, scope: !248)
!277 = !DILocation(line: 76, column: 2, scope: !248)
!278 = !DILocation(line: 77, column: 1, scope: !237)
!279 = distinct !DISubprogram(name: "BKE_displist_free", scope: !1, file: !1, line: 79, type: !280, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !240)
!280 = !DISubroutineType(types: !281)
!281 = !{null, !282}
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64)
!283 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !284, line: 71, baseType: !285)
!284 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !284, line: 69, size: 128, elements: !286)
!286 = !{!287, !288}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !285, file: !284, line: 70, baseType: !207, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !285, file: !284, line: 70, baseType: !207, size: 64, offset: 64)
!289 = !DILocalVariable(name: "lb", arg: 1, scope: !279, file: !1, line: 79, type: !282)
!290 = !DILocation(line: 79, column: 34, scope: !279)
!291 = !DILocalVariable(name: "dl", scope: !279, file: !1, line: 81, type: !210)
!292 = !DILocation(line: 81, column: 12, scope: !279)
!293 = !DILocation(line: 83, column: 2, scope: !279)
!294 = !DILocation(line: 83, column: 27, scope: !279)
!295 = !DILocation(line: 83, column: 15, scope: !279)
!296 = !DILocation(line: 83, column: 13, scope: !279)
!297 = !DILocation(line: 84, column: 26, scope: !298)
!298 = distinct !DILexicalBlock(scope: !279, file: !1, line: 83, column: 33)
!299 = !DILocation(line: 84, column: 3, scope: !298)
!300 = distinct !{!300, !293, !301}
!301 = !DILocation(line: 85, column: 2, scope: !279)
!302 = !DILocation(line: 86, column: 1, scope: !279)
!303 = distinct !DISubprogram(name: "BKE_displist_find_or_create", scope: !1, file: !1, line: 88, type: !304, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !240)
!304 = !DISubroutineType(types: !305)
!305 = !{!210, !282, !106}
!306 = !DILocalVariable(name: "lb", arg: 1, scope: !303, file: !1, line: 88, type: !282)
!307 = !DILocation(line: 88, column: 49, scope: !303)
!308 = !DILocalVariable(name: "type", arg: 2, scope: !303, file: !1, line: 88, type: !106)
!309 = !DILocation(line: 88, column: 57, scope: !303)
!310 = !DILocalVariable(name: "dl", scope: !303, file: !1, line: 90, type: !210)
!311 = !DILocation(line: 90, column: 12, scope: !303)
!312 = !DILocation(line: 92, column: 7, scope: !303)
!313 = !DILocation(line: 92, column: 11, scope: !303)
!314 = !DILocation(line: 92, column: 5, scope: !303)
!315 = !DILocation(line: 93, column: 2, scope: !303)
!316 = !DILocation(line: 93, column: 9, scope: !303)
!317 = !DILocation(line: 94, column: 7, scope: !318)
!318 = distinct !DILexicalBlock(scope: !319, file: !1, line: 94, column: 7)
!319 = distinct !DILexicalBlock(scope: !303, file: !1, line: 93, column: 13)
!320 = !DILocation(line: 94, column: 11, scope: !318)
!321 = !DILocation(line: 94, column: 19, scope: !318)
!322 = !DILocation(line: 94, column: 16, scope: !318)
!323 = !DILocation(line: 94, column: 7, scope: !319)
!324 = !DILocation(line: 95, column: 11, scope: !318)
!325 = !DILocation(line: 95, column: 4, scope: !318)
!326 = !DILocation(line: 96, column: 8, scope: !319)
!327 = !DILocation(line: 96, column: 12, scope: !319)
!328 = !DILocation(line: 96, column: 6, scope: !319)
!329 = distinct !{!329, !315, !330}
!330 = !DILocation(line: 97, column: 2, scope: !303)
!331 = !DILocation(line: 99, column: 7, scope: !303)
!332 = !DILocation(line: 99, column: 5, scope: !303)
!333 = !DILocation(line: 100, column: 13, scope: !303)
!334 = !DILocation(line: 100, column: 2, scope: !303)
!335 = !DILocation(line: 100, column: 6, scope: !303)
!336 = !DILocation(line: 100, column: 11, scope: !303)
!337 = !DILocation(line: 101, column: 14, scope: !303)
!338 = !DILocation(line: 101, column: 18, scope: !303)
!339 = !DILocation(line: 101, column: 2, scope: !303)
!340 = !DILocation(line: 103, column: 9, scope: !303)
!341 = !DILocation(line: 103, column: 2, scope: !303)
!342 = !DILocation(line: 104, column: 1, scope: !303)
!343 = distinct !DISubprogram(name: "BKE_displist_find", scope: !1, file: !1, line: 106, type: !304, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !240)
!344 = !DILocalVariable(name: "lb", arg: 1, scope: !343, file: !1, line: 106, type: !282)
!345 = !DILocation(line: 106, column: 39, scope: !343)
!346 = !DILocalVariable(name: "type", arg: 2, scope: !343, file: !1, line: 106, type: !106)
!347 = !DILocation(line: 106, column: 47, scope: !343)
!348 = !DILocalVariable(name: "dl", scope: !343, file: !1, line: 108, type: !210)
!349 = !DILocation(line: 108, column: 12, scope: !343)
!350 = !DILocation(line: 110, column: 7, scope: !343)
!351 = !DILocation(line: 110, column: 11, scope: !343)
!352 = !DILocation(line: 110, column: 5, scope: !343)
!353 = !DILocation(line: 111, column: 2, scope: !343)
!354 = !DILocation(line: 111, column: 9, scope: !343)
!355 = !DILocation(line: 112, column: 7, scope: !356)
!356 = distinct !DILexicalBlock(scope: !357, file: !1, line: 112, column: 7)
!357 = distinct !DILexicalBlock(scope: !343, file: !1, line: 111, column: 13)
!358 = !DILocation(line: 112, column: 11, scope: !356)
!359 = !DILocation(line: 112, column: 19, scope: !356)
!360 = !DILocation(line: 112, column: 16, scope: !356)
!361 = !DILocation(line: 112, column: 7, scope: !357)
!362 = !DILocation(line: 113, column: 11, scope: !356)
!363 = !DILocation(line: 113, column: 4, scope: !356)
!364 = !DILocation(line: 114, column: 8, scope: !357)
!365 = !DILocation(line: 114, column: 12, scope: !357)
!366 = !DILocation(line: 114, column: 6, scope: !357)
!367 = distinct !{!367, !353, !368}
!368 = !DILocation(line: 115, column: 2, scope: !343)
!369 = !DILocation(line: 117, column: 2, scope: !343)
!370 = !DILocation(line: 118, column: 1, scope: !343)
!371 = distinct !DISubprogram(name: "BKE_displist_has_faces", scope: !1, file: !1, line: 120, type: !372, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !240)
!372 = !DISubroutineType(types: !373)
!373 = !{!374, !282}
!374 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!375 = !DILocalVariable(name: "lb", arg: 1, scope: !371, file: !1, line: 120, type: !282)
!376 = !DILocation(line: 120, column: 39, scope: !371)
!377 = !DILocalVariable(name: "dl", scope: !371, file: !1, line: 122, type: !210)
!378 = !DILocation(line: 122, column: 12, scope: !371)
!379 = !DILocation(line: 124, column: 12, scope: !380)
!380 = distinct !DILexicalBlock(scope: !371, file: !1, line: 124, column: 2)
!381 = !DILocation(line: 124, column: 16, scope: !380)
!382 = !DILocation(line: 124, column: 10, scope: !380)
!383 = !DILocation(line: 124, column: 7, scope: !380)
!384 = !DILocation(line: 124, column: 23, scope: !385)
!385 = distinct !DILexicalBlock(scope: !380, file: !1, line: 124, column: 2)
!386 = !DILocation(line: 124, column: 2, scope: !380)
!387 = !DILocation(line: 125, column: 7, scope: !388)
!388 = distinct !DILexicalBlock(scope: !389, file: !1, line: 125, column: 7)
!389 = distinct !DILexicalBlock(scope: !385, file: !1, line: 124, column: 42)
!390 = !DILocation(line: 125, column: 7, scope: !389)
!391 = !DILocation(line: 126, column: 4, scope: !392)
!392 = distinct !DILexicalBlock(scope: !388, file: !1, line: 125, column: 54)
!393 = !DILocation(line: 128, column: 2, scope: !389)
!394 = !DILocation(line: 124, column: 32, scope: !385)
!395 = !DILocation(line: 124, column: 36, scope: !385)
!396 = !DILocation(line: 124, column: 30, scope: !385)
!397 = !DILocation(line: 124, column: 2, scope: !385)
!398 = distinct !{!398, !386, !399}
!399 = !DILocation(line: 128, column: 2, scope: !380)
!400 = !DILocation(line: 130, column: 2, scope: !371)
!401 = !DILocation(line: 131, column: 1, scope: !371)
!402 = distinct !DISubprogram(name: "BKE_displist_copy", scope: !1, file: !1, line: 133, type: !403, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !240)
!403 = !DISubroutineType(types: !404)
!404 = !{null, !282, !282}
!405 = !DILocalVariable(name: "lbn", arg: 1, scope: !402, file: !1, line: 133, type: !282)
!406 = !DILocation(line: 133, column: 34, scope: !402)
!407 = !DILocalVariable(name: "lb", arg: 2, scope: !402, file: !1, line: 133, type: !282)
!408 = !DILocation(line: 133, column: 49, scope: !402)
!409 = !DILocalVariable(name: "dln", scope: !402, file: !1, line: 135, type: !210)
!410 = !DILocation(line: 135, column: 12, scope: !402)
!411 = !DILocalVariable(name: "dl", scope: !402, file: !1, line: 135, type: !210)
!412 = !DILocation(line: 135, column: 18, scope: !402)
!413 = !DILocation(line: 137, column: 20, scope: !402)
!414 = !DILocation(line: 137, column: 2, scope: !402)
!415 = !DILocation(line: 139, column: 7, scope: !402)
!416 = !DILocation(line: 139, column: 11, scope: !402)
!417 = !DILocation(line: 139, column: 5, scope: !402)
!418 = !DILocation(line: 140, column: 2, scope: !402)
!419 = !DILocation(line: 140, column: 9, scope: !402)
!420 = !DILocation(line: 141, column: 9, scope: !421)
!421 = distinct !DILexicalBlock(scope: !402, file: !1, line: 140, column: 13)
!422 = !DILocation(line: 141, column: 23, scope: !421)
!423 = !DILocation(line: 141, column: 7, scope: !421)
!424 = !DILocation(line: 142, column: 15, scope: !421)
!425 = !DILocation(line: 142, column: 20, scope: !421)
!426 = !DILocation(line: 142, column: 3, scope: !421)
!427 = !DILocation(line: 143, column: 16, scope: !421)
!428 = !DILocation(line: 143, column: 30, scope: !421)
!429 = !DILocation(line: 143, column: 34, scope: !421)
!430 = !DILocation(line: 143, column: 3, scope: !421)
!431 = !DILocation(line: 143, column: 8, scope: !421)
!432 = !DILocation(line: 143, column: 14, scope: !421)
!433 = !DILocation(line: 144, column: 15, scope: !421)
!434 = !DILocation(line: 144, column: 29, scope: !421)
!435 = !DILocation(line: 144, column: 33, scope: !421)
!436 = !DILocation(line: 144, column: 3, scope: !421)
!437 = !DILocation(line: 144, column: 8, scope: !421)
!438 = !DILocation(line: 144, column: 13, scope: !421)
!439 = !DILocation(line: 145, column: 16, scope: !421)
!440 = !DILocation(line: 145, column: 30, scope: !421)
!441 = !DILocation(line: 145, column: 34, scope: !421)
!442 = !DILocation(line: 145, column: 3, scope: !421)
!443 = !DILocation(line: 145, column: 8, scope: !421)
!444 = !DILocation(line: 145, column: 14, scope: !421)
!445 = !DILocation(line: 147, column: 7, scope: !446)
!446 = distinct !DILexicalBlock(scope: !421, file: !1, line: 147, column: 7)
!447 = !DILocation(line: 147, column: 11, scope: !446)
!448 = !DILocation(line: 147, column: 7, scope: !421)
!449 = !DILocation(line: 148, column: 26, scope: !446)
!450 = !DILocation(line: 148, column: 40, scope: !446)
!451 = !DILocation(line: 148, column: 44, scope: !446)
!452 = !DILocation(line: 148, column: 4, scope: !446)
!453 = !DILocation(line: 148, column: 9, scope: !446)
!454 = !DILocation(line: 148, column: 24, scope: !446)
!455 = !DILocation(line: 150, column: 8, scope: !421)
!456 = !DILocation(line: 150, column: 12, scope: !421)
!457 = !DILocation(line: 150, column: 6, scope: !421)
!458 = distinct !{!458, !418, !459}
!459 = !DILocation(line: 151, column: 2, scope: !402)
!460 = !DILocation(line: 152, column: 1, scope: !402)
!461 = distinct !DISubprogram(name: "BKE_displist_normals_add", scope: !1, file: !1, line: 154, type: !280, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !240)
!462 = !DILocalVariable(name: "lb", arg: 1, scope: !461, file: !1, line: 154, type: !282)
!463 = !DILocation(line: 154, column: 41, scope: !461)
!464 = !DILocalVariable(name: "dl", scope: !461, file: !1, line: 156, type: !210)
!465 = !DILocation(line: 156, column: 12, scope: !461)
!466 = !DILocalVariable(name: "vdata", scope: !461, file: !1, line: 157, type: !209)
!467 = !DILocation(line: 157, column: 9, scope: !461)
!468 = !DILocalVariable(name: "ndata", scope: !461, file: !1, line: 157, type: !209)
!469 = !DILocation(line: 157, column: 17, scope: !461)
!470 = !DILocalVariable(name: "nor", scope: !461, file: !1, line: 157, type: !471)
!471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 96, elements: !472)
!472 = !{!473}
!473 = !DISubrange(count: 3)
!474 = !DILocation(line: 157, column: 24, scope: !461)
!475 = !DILocalVariable(name: "v1", scope: !461, file: !1, line: 158, type: !209)
!476 = !DILocation(line: 158, column: 9, scope: !461)
!477 = !DILocalVariable(name: "v2", scope: !461, file: !1, line: 158, type: !209)
!478 = !DILocation(line: 158, column: 14, scope: !461)
!479 = !DILocalVariable(name: "v3", scope: !461, file: !1, line: 158, type: !209)
!480 = !DILocation(line: 158, column: 19, scope: !461)
!481 = !DILocalVariable(name: "v4", scope: !461, file: !1, line: 158, type: !209)
!482 = !DILocation(line: 158, column: 24, scope: !461)
!483 = !DILocalVariable(name: "n1", scope: !461, file: !1, line: 159, type: !209)
!484 = !DILocation(line: 159, column: 9, scope: !461)
!485 = !DILocalVariable(name: "n2", scope: !461, file: !1, line: 159, type: !209)
!486 = !DILocation(line: 159, column: 14, scope: !461)
!487 = !DILocalVariable(name: "n3", scope: !461, file: !1, line: 159, type: !209)
!488 = !DILocation(line: 159, column: 19, scope: !461)
!489 = !DILocalVariable(name: "n4", scope: !461, file: !1, line: 159, type: !209)
!490 = !DILocation(line: 159, column: 24, scope: !461)
!491 = !DILocalVariable(name: "a", scope: !461, file: !1, line: 160, type: !106)
!492 = !DILocation(line: 160, column: 6, scope: !461)
!493 = !DILocalVariable(name: "b", scope: !461, file: !1, line: 160, type: !106)
!494 = !DILocation(line: 160, column: 9, scope: !461)
!495 = !DILocalVariable(name: "p1", scope: !461, file: !1, line: 160, type: !106)
!496 = !DILocation(line: 160, column: 12, scope: !461)
!497 = !DILocalVariable(name: "p2", scope: !461, file: !1, line: 160, type: !106)
!498 = !DILocation(line: 160, column: 16, scope: !461)
!499 = !DILocalVariable(name: "p3", scope: !461, file: !1, line: 160, type: !106)
!500 = !DILocation(line: 160, column: 20, scope: !461)
!501 = !DILocalVariable(name: "p4", scope: !461, file: !1, line: 160, type: !106)
!502 = !DILocation(line: 160, column: 24, scope: !461)
!503 = !DILocation(line: 162, column: 7, scope: !461)
!504 = !DILocation(line: 162, column: 11, scope: !461)
!505 = !DILocation(line: 162, column: 5, scope: !461)
!506 = !DILocation(line: 164, column: 2, scope: !461)
!507 = !DILocation(line: 164, column: 9, scope: !461)
!508 = !DILocation(line: 165, column: 7, scope: !509)
!509 = distinct !DILexicalBlock(scope: !510, file: !1, line: 165, column: 7)
!510 = distinct !DILexicalBlock(scope: !461, file: !1, line: 164, column: 13)
!511 = !DILocation(line: 165, column: 11, scope: !509)
!512 = !DILocation(line: 165, column: 16, scope: !509)
!513 = !DILocation(line: 165, column: 7, scope: !510)
!514 = !DILocation(line: 166, column: 8, scope: !515)
!515 = distinct !DILexicalBlock(scope: !516, file: !1, line: 166, column: 8)
!516 = distinct !DILexicalBlock(scope: !509, file: !1, line: 165, column: 30)
!517 = !DILocation(line: 166, column: 12, scope: !515)
!518 = !DILocation(line: 166, column: 17, scope: !515)
!519 = !DILocation(line: 166, column: 8, scope: !516)
!520 = !DILocation(line: 167, column: 16, scope: !521)
!521 = distinct !DILexicalBlock(scope: !515, file: !1, line: 166, column: 26)
!522 = !DILocation(line: 167, column: 5, scope: !521)
!523 = !DILocation(line: 167, column: 9, scope: !521)
!524 = !DILocation(line: 167, column: 14, scope: !521)
!525 = !DILocation(line: 169, column: 9, scope: !526)
!526 = distinct !DILexicalBlock(scope: !521, file: !1, line: 169, column: 9)
!527 = !DILocation(line: 169, column: 13, scope: !526)
!528 = !DILocation(line: 169, column: 22, scope: !526)
!529 = !DILocation(line: 169, column: 9, scope: !521)
!530 = !DILocation(line: 170, column: 6, scope: !526)
!531 = !DILocation(line: 170, column: 10, scope: !526)
!532 = !DILocation(line: 170, column: 18, scope: !526)
!533 = !DILocation(line: 172, column: 6, scope: !526)
!534 = !DILocation(line: 172, column: 10, scope: !526)
!535 = !DILocation(line: 172, column: 18, scope: !526)
!536 = !DILocation(line: 173, column: 4, scope: !521)
!537 = !DILocation(line: 174, column: 3, scope: !516)
!538 = !DILocation(line: 175, column: 12, scope: !539)
!539 = distinct !DILexicalBlock(scope: !509, file: !1, line: 175, column: 12)
!540 = !DILocation(line: 175, column: 16, scope: !539)
!541 = !DILocation(line: 175, column: 21, scope: !539)
!542 = !DILocation(line: 175, column: 12, scope: !509)
!543 = !DILocation(line: 176, column: 8, scope: !544)
!544 = distinct !DILexicalBlock(scope: !545, file: !1, line: 176, column: 8)
!545 = distinct !DILexicalBlock(scope: !539, file: !1, line: 175, column: 33)
!546 = !DILocation(line: 176, column: 12, scope: !544)
!547 = !DILocation(line: 176, column: 17, scope: !544)
!548 = !DILocation(line: 176, column: 8, scope: !545)
!549 = !DILocation(line: 177, column: 16, scope: !550)
!550 = distinct !DILexicalBlock(scope: !544, file: !1, line: 176, column: 26)
!551 = !DILocation(line: 177, column: 48, scope: !550)
!552 = !DILocation(line: 177, column: 52, scope: !550)
!553 = !DILocation(line: 177, column: 46, scope: !550)
!554 = !DILocation(line: 177, column: 57, scope: !550)
!555 = !DILocation(line: 177, column: 61, scope: !550)
!556 = !DILocation(line: 177, column: 55, scope: !550)
!557 = !DILocation(line: 177, column: 5, scope: !550)
!558 = !DILocation(line: 177, column: 9, scope: !550)
!559 = !DILocation(line: 177, column: 14, scope: !550)
!560 = !DILocation(line: 179, column: 13, scope: !550)
!561 = !DILocation(line: 179, column: 17, scope: !550)
!562 = !DILocation(line: 179, column: 11, scope: !550)
!563 = !DILocation(line: 180, column: 13, scope: !550)
!564 = !DILocation(line: 180, column: 17, scope: !550)
!565 = !DILocation(line: 180, column: 11, scope: !550)
!566 = !DILocation(line: 182, column: 12, scope: !567)
!567 = distinct !DILexicalBlock(scope: !550, file: !1, line: 182, column: 5)
!568 = !DILocation(line: 182, column: 10, scope: !567)
!569 = !DILocation(line: 182, column: 17, scope: !570)
!570 = distinct !DILexicalBlock(scope: !567, file: !1, line: 182, column: 5)
!571 = !DILocation(line: 182, column: 21, scope: !570)
!572 = !DILocation(line: 182, column: 25, scope: !570)
!573 = !DILocation(line: 182, column: 19, scope: !570)
!574 = !DILocation(line: 182, column: 5, scope: !567)
!575 = !DILocation(line: 184, column: 37, scope: !576)
!576 = distinct !DILexicalBlock(scope: !577, file: !1, line: 184, column: 10)
!577 = distinct !DILexicalBlock(scope: !570, file: !1, line: 182, column: 37)
!578 = !DILocation(line: 184, column: 41, scope: !576)
!579 = !DILocation(line: 184, column: 10, scope: !576)
!580 = !DILocation(line: 184, column: 68, scope: !576)
!581 = !DILocation(line: 184, column: 10, scope: !577)
!582 = !DILocation(line: 185, column: 7, scope: !576)
!583 = !DILocation(line: 187, column: 11, scope: !577)
!584 = !DILocation(line: 187, column: 23, scope: !577)
!585 = !DILocation(line: 187, column: 21, scope: !577)
!586 = !DILocation(line: 187, column: 17, scope: !577)
!587 = !DILocation(line: 187, column: 9, scope: !577)
!588 = !DILocation(line: 188, column: 11, scope: !577)
!589 = !DILocation(line: 188, column: 23, scope: !577)
!590 = !DILocation(line: 188, column: 21, scope: !577)
!591 = !DILocation(line: 188, column: 17, scope: !577)
!592 = !DILocation(line: 188, column: 9, scope: !577)
!593 = !DILocation(line: 189, column: 11, scope: !577)
!594 = !DILocation(line: 189, column: 23, scope: !577)
!595 = !DILocation(line: 189, column: 21, scope: !577)
!596 = !DILocation(line: 189, column: 17, scope: !577)
!597 = !DILocation(line: 189, column: 9, scope: !577)
!598 = !DILocation(line: 190, column: 11, scope: !577)
!599 = !DILocation(line: 190, column: 23, scope: !577)
!600 = !DILocation(line: 190, column: 21, scope: !577)
!601 = !DILocation(line: 190, column: 17, scope: !577)
!602 = !DILocation(line: 190, column: 9, scope: !577)
!603 = !DILocation(line: 191, column: 11, scope: !577)
!604 = !DILocation(line: 191, column: 23, scope: !577)
!605 = !DILocation(line: 191, column: 21, scope: !577)
!606 = !DILocation(line: 191, column: 17, scope: !577)
!607 = !DILocation(line: 191, column: 9, scope: !577)
!608 = !DILocation(line: 192, column: 11, scope: !577)
!609 = !DILocation(line: 192, column: 23, scope: !577)
!610 = !DILocation(line: 192, column: 21, scope: !577)
!611 = !DILocation(line: 192, column: 17, scope: !577)
!612 = !DILocation(line: 192, column: 9, scope: !577)
!613 = !DILocation(line: 193, column: 11, scope: !577)
!614 = !DILocation(line: 193, column: 23, scope: !577)
!615 = !DILocation(line: 193, column: 21, scope: !577)
!616 = !DILocation(line: 193, column: 17, scope: !577)
!617 = !DILocation(line: 193, column: 9, scope: !577)
!618 = !DILocation(line: 194, column: 11, scope: !577)
!619 = !DILocation(line: 194, column: 23, scope: !577)
!620 = !DILocation(line: 194, column: 21, scope: !577)
!621 = !DILocation(line: 194, column: 17, scope: !577)
!622 = !DILocation(line: 194, column: 9, scope: !577)
!623 = !DILocation(line: 196, column: 6, scope: !577)
!624 = !DILocation(line: 196, column: 13, scope: !625)
!625 = distinct !DILexicalBlock(scope: !626, file: !1, line: 196, column: 6)
!626 = distinct !DILexicalBlock(scope: !577, file: !1, line: 196, column: 6)
!627 = !DILocation(line: 196, column: 17, scope: !625)
!628 = !DILocation(line: 196, column: 21, scope: !625)
!629 = !DILocation(line: 196, column: 15, scope: !625)
!630 = !DILocation(line: 196, column: 6, scope: !626)
!631 = !DILocation(line: 197, column: 22, scope: !632)
!632 = distinct !DILexicalBlock(scope: !625, file: !1, line: 196, column: 30)
!633 = !DILocation(line: 197, column: 27, scope: !632)
!634 = !DILocation(line: 197, column: 31, scope: !632)
!635 = !DILocation(line: 197, column: 35, scope: !632)
!636 = !DILocation(line: 197, column: 39, scope: !632)
!637 = !DILocation(line: 197, column: 7, scope: !632)
!638 = !DILocation(line: 199, column: 17, scope: !632)
!639 = !DILocation(line: 199, column: 21, scope: !632)
!640 = !DILocation(line: 199, column: 7, scope: !632)
!641 = !DILocation(line: 200, column: 17, scope: !632)
!642 = !DILocation(line: 200, column: 21, scope: !632)
!643 = !DILocation(line: 200, column: 7, scope: !632)
!644 = !DILocation(line: 201, column: 17, scope: !632)
!645 = !DILocation(line: 201, column: 21, scope: !632)
!646 = !DILocation(line: 201, column: 7, scope: !632)
!647 = !DILocation(line: 202, column: 17, scope: !632)
!648 = !DILocation(line: 202, column: 21, scope: !632)
!649 = !DILocation(line: 202, column: 7, scope: !632)
!650 = !DILocation(line: 204, column: 12, scope: !632)
!651 = !DILocation(line: 204, column: 10, scope: !632)
!652 = !DILocation(line: 204, column: 19, scope: !632)
!653 = !DILocation(line: 205, column: 12, scope: !632)
!654 = !DILocation(line: 205, column: 10, scope: !632)
!655 = !DILocation(line: 205, column: 19, scope: !632)
!656 = !DILocation(line: 206, column: 12, scope: !632)
!657 = !DILocation(line: 206, column: 10, scope: !632)
!658 = !DILocation(line: 206, column: 19, scope: !632)
!659 = !DILocation(line: 207, column: 12, scope: !632)
!660 = !DILocation(line: 207, column: 10, scope: !632)
!661 = !DILocation(line: 207, column: 19, scope: !632)
!662 = !DILocation(line: 208, column: 6, scope: !632)
!663 = !DILocation(line: 196, column: 26, scope: !625)
!664 = !DILocation(line: 196, column: 6, scope: !625)
!665 = distinct !{!665, !630, !666}
!666 = !DILocation(line: 208, column: 6, scope: !626)
!667 = !DILocation(line: 209, column: 5, scope: !577)
!668 = !DILocation(line: 182, column: 33, scope: !570)
!669 = !DILocation(line: 182, column: 5, scope: !570)
!670 = distinct !{!670, !574, !671}
!671 = !DILocation(line: 209, column: 5, scope: !567)
!672 = !DILocation(line: 210, column: 9, scope: !550)
!673 = !DILocation(line: 210, column: 13, scope: !550)
!674 = !DILocation(line: 210, column: 21, scope: !550)
!675 = !DILocation(line: 210, column: 25, scope: !550)
!676 = !DILocation(line: 210, column: 19, scope: !550)
!677 = !DILocation(line: 210, column: 7, scope: !550)
!678 = !DILocation(line: 211, column: 10, scope: !550)
!679 = !DILocation(line: 211, column: 8, scope: !550)
!680 = !DILocation(line: 212, column: 5, scope: !550)
!681 = !DILocation(line: 212, column: 13, scope: !550)
!682 = !DILocation(line: 213, column: 19, scope: !683)
!683 = distinct !DILexicalBlock(scope: !550, file: !1, line: 212, column: 17)
!684 = !DILocation(line: 213, column: 6, scope: !683)
!685 = !DILocation(line: 214, column: 9, scope: !683)
!686 = distinct !{!686, !680, !687}
!687 = !DILocation(line: 215, column: 5, scope: !550)
!688 = !DILocation(line: 216, column: 4, scope: !550)
!689 = !DILocation(line: 217, column: 3, scope: !545)
!690 = !DILocation(line: 218, column: 8, scope: !510)
!691 = !DILocation(line: 218, column: 12, scope: !510)
!692 = !DILocation(line: 218, column: 6, scope: !510)
!693 = distinct !{!693, !506, !694}
!694 = !DILocation(line: 219, column: 2, scope: !461)
!695 = !DILocation(line: 220, column: 1, scope: !461)
!696 = distinct !DISubprogram(name: "BKE_displist_surfindex_get", scope: !1, file: !1, line: 267, type: !697, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !240)
!697 = !DISubroutineType(types: !698)
!698 = !{!374, !210, !106, !228, !228, !228, !228, !228}
!699 = !DILocalVariable(name: "dl", arg: 1, scope: !696, file: !1, line: 267, type: !210)
!700 = !DILocation(line: 267, column: 43, scope: !696)
!701 = !DILocalVariable(name: "a", arg: 2, scope: !696, file: !1, line: 267, type: !106)
!702 = !DILocation(line: 267, column: 51, scope: !696)
!703 = !DILocalVariable(name: "b", arg: 3, scope: !696, file: !1, line: 267, type: !228)
!704 = !DILocation(line: 267, column: 59, scope: !696)
!705 = !DILocalVariable(name: "p1", arg: 4, scope: !696, file: !1, line: 267, type: !228)
!706 = !DILocation(line: 267, column: 67, scope: !696)
!707 = !DILocalVariable(name: "p2", arg: 5, scope: !696, file: !1, line: 267, type: !228)
!708 = !DILocation(line: 267, column: 76, scope: !696)
!709 = !DILocalVariable(name: "p3", arg: 6, scope: !696, file: !1, line: 267, type: !228)
!710 = !DILocation(line: 267, column: 85, scope: !696)
!711 = !DILocalVariable(name: "p4", arg: 7, scope: !696, file: !1, line: 267, type: !228)
!712 = !DILocation(line: 267, column: 94, scope: !696)
!713 = !DILocation(line: 269, column: 7, scope: !714)
!714 = distinct !DILexicalBlock(scope: !696, file: !1, line: 269, column: 6)
!715 = !DILocation(line: 269, column: 11, scope: !714)
!716 = !DILocation(line: 269, column: 16, scope: !714)
!717 = !DILocation(line: 269, column: 29, scope: !714)
!718 = !DILocation(line: 269, column: 34, scope: !714)
!719 = !DILocation(line: 269, column: 37, scope: !714)
!720 = !DILocation(line: 269, column: 43, scope: !714)
!721 = !DILocation(line: 269, column: 47, scope: !714)
!722 = !DILocation(line: 269, column: 54, scope: !714)
!723 = !DILocation(line: 269, column: 39, scope: !714)
!724 = !DILocation(line: 269, column: 6, scope: !696)
!725 = !DILocation(line: 270, column: 3, scope: !726)
!726 = distinct !DILexicalBlock(scope: !714, file: !1, line: 269, column: 59)
!727 = !DILocation(line: 273, column: 6, scope: !728)
!728 = distinct !DILexicalBlock(scope: !696, file: !1, line: 273, column: 6)
!729 = !DILocation(line: 273, column: 10, scope: !728)
!730 = !DILocation(line: 273, column: 15, scope: !728)
!731 = !DILocation(line: 273, column: 6, scope: !696)
!732 = !DILocation(line: 274, column: 11, scope: !733)
!733 = distinct !DILexicalBlock(scope: !728, file: !1, line: 273, column: 28)
!734 = !DILocation(line: 274, column: 15, scope: !733)
!735 = !DILocation(line: 274, column: 20, scope: !733)
!736 = !DILocation(line: 274, column: 18, scope: !733)
!737 = !DILocation(line: 274, column: 5, scope: !733)
!738 = !DILocation(line: 274, column: 9, scope: !733)
!739 = !DILocation(line: 275, column: 13, scope: !733)
!740 = !DILocation(line: 275, column: 12, scope: !733)
!741 = !DILocation(line: 275, column: 19, scope: !733)
!742 = !DILocation(line: 275, column: 23, scope: !733)
!743 = !DILocation(line: 275, column: 17, scope: !733)
!744 = !DILocation(line: 275, column: 26, scope: !733)
!745 = !DILocation(line: 275, column: 5, scope: !733)
!746 = !DILocation(line: 275, column: 9, scope: !733)
!747 = !DILocation(line: 276, column: 13, scope: !733)
!748 = !DILocation(line: 276, column: 12, scope: !733)
!749 = !DILocation(line: 276, column: 19, scope: !733)
!750 = !DILocation(line: 276, column: 23, scope: !733)
!751 = !DILocation(line: 276, column: 17, scope: !733)
!752 = !DILocation(line: 276, column: 5, scope: !733)
!753 = !DILocation(line: 276, column: 9, scope: !733)
!754 = !DILocation(line: 277, column: 13, scope: !733)
!755 = !DILocation(line: 277, column: 12, scope: !733)
!756 = !DILocation(line: 277, column: 19, scope: !733)
!757 = !DILocation(line: 277, column: 23, scope: !733)
!758 = !DILocation(line: 277, column: 17, scope: !733)
!759 = !DILocation(line: 277, column: 5, scope: !733)
!760 = !DILocation(line: 277, column: 9, scope: !733)
!761 = !DILocation(line: 278, column: 5, scope: !733)
!762 = !DILocation(line: 278, column: 8, scope: !733)
!763 = !DILocation(line: 279, column: 2, scope: !733)
!764 = !DILocation(line: 281, column: 11, scope: !765)
!765 = distinct !DILexicalBlock(scope: !728, file: !1, line: 280, column: 7)
!766 = !DILocation(line: 281, column: 15, scope: !765)
!767 = !DILocation(line: 281, column: 20, scope: !765)
!768 = !DILocation(line: 281, column: 18, scope: !765)
!769 = !DILocation(line: 281, column: 5, scope: !765)
!770 = !DILocation(line: 281, column: 9, scope: !765)
!771 = !DILocation(line: 282, column: 13, scope: !765)
!772 = !DILocation(line: 282, column: 12, scope: !765)
!773 = !DILocation(line: 282, column: 17, scope: !765)
!774 = !DILocation(line: 282, column: 5, scope: !765)
!775 = !DILocation(line: 282, column: 9, scope: !765)
!776 = !DILocation(line: 283, column: 13, scope: !765)
!777 = !DILocation(line: 283, column: 12, scope: !765)
!778 = !DILocation(line: 283, column: 19, scope: !765)
!779 = !DILocation(line: 283, column: 23, scope: !765)
!780 = !DILocation(line: 283, column: 17, scope: !765)
!781 = !DILocation(line: 283, column: 5, scope: !765)
!782 = !DILocation(line: 283, column: 9, scope: !765)
!783 = !DILocation(line: 284, column: 13, scope: !765)
!784 = !DILocation(line: 284, column: 12, scope: !765)
!785 = !DILocation(line: 284, column: 19, scope: !765)
!786 = !DILocation(line: 284, column: 23, scope: !765)
!787 = !DILocation(line: 284, column: 17, scope: !765)
!788 = !DILocation(line: 284, column: 5, scope: !765)
!789 = !DILocation(line: 284, column: 9, scope: !765)
!790 = !DILocation(line: 285, column: 5, scope: !765)
!791 = !DILocation(line: 285, column: 8, scope: !765)
!792 = !DILocation(line: 288, column: 7, scope: !793)
!793 = distinct !DILexicalBlock(scope: !696, file: !1, line: 288, column: 6)
!794 = !DILocation(line: 288, column: 11, scope: !793)
!795 = !DILocation(line: 288, column: 16, scope: !793)
!796 = !DILocation(line: 288, column: 29, scope: !793)
!797 = !DILocation(line: 288, column: 32, scope: !793)
!798 = !DILocation(line: 288, column: 37, scope: !793)
!799 = !DILocation(line: 288, column: 41, scope: !793)
!800 = !DILocation(line: 288, column: 47, scope: !793)
!801 = !DILocation(line: 288, column: 34, scope: !793)
!802 = !DILocation(line: 288, column: 6, scope: !696)
!803 = !DILocation(line: 289, column: 12, scope: !804)
!804 = distinct !DILexicalBlock(scope: !793, file: !1, line: 288, column: 52)
!805 = !DILocation(line: 289, column: 16, scope: !804)
!806 = !DILocation(line: 289, column: 21, scope: !804)
!807 = !DILocation(line: 289, column: 25, scope: !804)
!808 = !DILocation(line: 289, column: 19, scope: !804)
!809 = !DILocation(line: 289, column: 5, scope: !804)
!810 = !DILocation(line: 289, column: 9, scope: !804)
!811 = !DILocation(line: 290, column: 12, scope: !804)
!812 = !DILocation(line: 290, column: 16, scope: !804)
!813 = !DILocation(line: 290, column: 21, scope: !804)
!814 = !DILocation(line: 290, column: 25, scope: !804)
!815 = !DILocation(line: 290, column: 19, scope: !804)
!816 = !DILocation(line: 290, column: 5, scope: !804)
!817 = !DILocation(line: 290, column: 9, scope: !804)
!818 = !DILocation(line: 291, column: 2, scope: !804)
!819 = !DILocation(line: 293, column: 2, scope: !696)
!820 = !DILocation(line: 294, column: 1, scope: !696)
!821 = distinct !DISubprogram(name: "add_v3_v3", scope: !822, file: !822, line: 302, type: !823, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!822 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!823 = !DISubroutineType(types: !824)
!824 = !{null, !209, !825}
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!827 = !DILocalVariable(name: "r", arg: 1, scope: !821, file: !822, line: 302, type: !209)
!828 = !DILocation(line: 302, column: 30, scope: !821)
!829 = !DILocalVariable(name: "a", arg: 2, scope: !821, file: !822, line: 302, type: !825)
!830 = !DILocation(line: 302, column: 48, scope: !821)
!831 = !DILocation(line: 304, column: 10, scope: !821)
!832 = !DILocation(line: 304, column: 2, scope: !821)
!833 = !DILocation(line: 304, column: 7, scope: !821)
!834 = !DILocation(line: 305, column: 10, scope: !821)
!835 = !DILocation(line: 305, column: 2, scope: !821)
!836 = !DILocation(line: 305, column: 7, scope: !821)
!837 = !DILocation(line: 306, column: 10, scope: !821)
!838 = !DILocation(line: 306, column: 2, scope: !821)
!839 = !DILocation(line: 306, column: 7, scope: !821)
!840 = !DILocation(line: 307, column: 1, scope: !821)
!841 = distinct !DISubprogram(name: "normalize_v3", scope: !822, file: !822, line: 830, type: !842, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!842 = !DISubroutineType(types: !843)
!843 = !{!208, !209}
!844 = !DILocalVariable(name: "n", arg: 1, scope: !841, file: !822, line: 830, type: !209)
!845 = !DILocation(line: 830, column: 34, scope: !841)
!846 = !DILocation(line: 832, column: 25, scope: !841)
!847 = !DILocation(line: 832, column: 28, scope: !841)
!848 = !DILocation(line: 832, column: 9, scope: !841)
!849 = !DILocation(line: 832, column: 2, scope: !841)
!850 = distinct !DISubprogram(name: "BKE_displist_count", scope: !1, file: !1, line: 222, type: !851, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !240)
!851 = !DISubroutineType(types: !852)
!852 = !{null, !282, !228, !228, !228}
!853 = !DILocalVariable(name: "lb", arg: 1, scope: !850, file: !1, line: 222, type: !282)
!854 = !DILocation(line: 222, column: 35, scope: !850)
!855 = !DILocalVariable(name: "totvert", arg: 2, scope: !850, file: !1, line: 222, type: !228)
!856 = !DILocation(line: 222, column: 44, scope: !850)
!857 = !DILocalVariable(name: "totface", arg: 3, scope: !850, file: !1, line: 222, type: !228)
!858 = !DILocation(line: 222, column: 58, scope: !850)
!859 = !DILocalVariable(name: "tottri", arg: 4, scope: !850, file: !1, line: 222, type: !228)
!860 = !DILocation(line: 222, column: 72, scope: !850)
!861 = !DILocalVariable(name: "dl", scope: !850, file: !1, line: 224, type: !210)
!862 = !DILocation(line: 224, column: 12, scope: !850)
!863 = !DILocation(line: 226, column: 12, scope: !864)
!864 = distinct !DILexicalBlock(scope: !850, file: !1, line: 226, column: 2)
!865 = !DILocation(line: 226, column: 16, scope: !864)
!866 = !DILocation(line: 226, column: 10, scope: !864)
!867 = !DILocation(line: 226, column: 7, scope: !864)
!868 = !DILocation(line: 226, column: 23, scope: !869)
!869 = distinct !DILexicalBlock(scope: !864, file: !1, line: 226, column: 2)
!870 = !DILocation(line: 226, column: 2, scope: !864)
!871 = !DILocalVariable(name: "vert_tot", scope: !872, file: !1, line: 227, type: !106)
!872 = distinct !DILexicalBlock(scope: !869, file: !1, line: 226, column: 42)
!873 = !DILocation(line: 227, column: 7, scope: !872)
!874 = !DILocalVariable(name: "face_tot", scope: !872, file: !1, line: 228, type: !106)
!875 = !DILocation(line: 228, column: 7, scope: !872)
!876 = !DILocalVariable(name: "tri_tot", scope: !872, file: !1, line: 229, type: !106)
!877 = !DILocation(line: 229, column: 7, scope: !872)
!878 = !DILocation(line: 231, column: 11, scope: !872)
!879 = !DILocation(line: 231, column: 15, scope: !872)
!880 = !DILocation(line: 231, column: 3, scope: !872)
!881 = !DILocation(line: 234, column: 16, scope: !882)
!882 = distinct !DILexicalBlock(scope: !883, file: !1, line: 233, column: 4)
!883 = distinct !DILexicalBlock(scope: !872, file: !1, line: 231, column: 21)
!884 = !DILocation(line: 234, column: 20, scope: !882)
!885 = !DILocation(line: 234, column: 25, scope: !882)
!886 = !DILocation(line: 234, column: 29, scope: !882)
!887 = !DILocation(line: 234, column: 23, scope: !882)
!888 = !DILocation(line: 234, column: 14, scope: !882)
!889 = !DILocation(line: 235, column: 17, scope: !882)
!890 = !DILocation(line: 235, column: 21, scope: !882)
!891 = !DILocation(line: 235, column: 24, scope: !882)
!892 = !DILocation(line: 235, column: 32, scope: !882)
!893 = !DILocation(line: 235, column: 36, scope: !882)
!894 = !DILocation(line: 235, column: 42, scope: !882)
!895 = !DILocation(line: 235, column: 29, scope: !882)
!896 = !DILocation(line: 235, column: 14, scope: !882)
!897 = !DILocation(line: 236, column: 16, scope: !882)
!898 = !DILocation(line: 236, column: 25, scope: !882)
!899 = !DILocation(line: 236, column: 14, scope: !882)
!900 = !DILocation(line: 237, column: 5, scope: !882)
!901 = !DILocation(line: 241, column: 16, scope: !902)
!902 = distinct !DILexicalBlock(scope: !883, file: !1, line: 240, column: 4)
!903 = !DILocation(line: 241, column: 20, scope: !902)
!904 = !DILocation(line: 241, column: 14, scope: !902)
!905 = !DILocation(line: 242, column: 16, scope: !902)
!906 = !DILocation(line: 242, column: 20, scope: !902)
!907 = !DILocation(line: 242, column: 14, scope: !902)
!908 = !DILocation(line: 243, column: 16, scope: !902)
!909 = !DILocation(line: 243, column: 14, scope: !902)
!910 = !DILocation(line: 244, column: 5, scope: !902)
!911 = !DILocation(line: 248, column: 16, scope: !912)
!912 = distinct !DILexicalBlock(scope: !883, file: !1, line: 247, column: 4)
!913 = !DILocation(line: 248, column: 20, scope: !912)
!914 = !DILocation(line: 248, column: 14, scope: !912)
!915 = !DILocation(line: 249, column: 16, scope: !912)
!916 = !DILocation(line: 249, column: 20, scope: !912)
!917 = !DILocation(line: 249, column: 14, scope: !912)
!918 = !DILocation(line: 250, column: 16, scope: !912)
!919 = !DILocation(line: 250, column: 25, scope: !912)
!920 = !DILocation(line: 250, column: 14, scope: !912)
!921 = !DILocation(line: 251, column: 5, scope: !912)
!922 = !DILocation(line: 256, column: 16, scope: !923)
!923 = distinct !DILexicalBlock(scope: !883, file: !1, line: 255, column: 4)
!924 = !DILocation(line: 256, column: 20, scope: !923)
!925 = !DILocation(line: 256, column: 25, scope: !923)
!926 = !DILocation(line: 256, column: 29, scope: !923)
!927 = !DILocation(line: 256, column: 23, scope: !923)
!928 = !DILocation(line: 256, column: 14, scope: !923)
!929 = !DILocation(line: 257, column: 5, scope: !923)
!930 = !DILocation(line: 261, column: 15, scope: !872)
!931 = !DILocation(line: 261, column: 4, scope: !872)
!932 = !DILocation(line: 261, column: 12, scope: !872)
!933 = !DILocation(line: 262, column: 15, scope: !872)
!934 = !DILocation(line: 262, column: 4, scope: !872)
!935 = !DILocation(line: 262, column: 12, scope: !872)
!936 = !DILocation(line: 263, column: 15, scope: !872)
!937 = !DILocation(line: 263, column: 4, scope: !872)
!938 = !DILocation(line: 263, column: 12, scope: !872)
!939 = !DILocation(line: 264, column: 2, scope: !872)
!940 = !DILocation(line: 226, column: 32, scope: !869)
!941 = !DILocation(line: 226, column: 36, scope: !869)
!942 = !DILocation(line: 226, column: 30, scope: !869)
!943 = !DILocation(line: 226, column: 2, scope: !869)
!944 = distinct !{!944, !870, !945}
!945 = !DILocation(line: 264, column: 2, scope: !864)
!946 = !DILocation(line: 265, column: 1, scope: !850)
!947 = distinct !DISubprogram(name: "BKE_displist_fill", scope: !1, file: !1, line: 446, type: !948, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !240)
!948 = !DISubroutineType(types: !949)
!949 = !{null, !282, !282, !825, !950}
!950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !374)
!951 = !DILocalVariable(name: "dispbase", arg: 1, scope: !947, file: !1, line: 446, type: !282)
!952 = !DILocation(line: 446, column: 34, scope: !947)
!953 = !DILocalVariable(name: "to", arg: 2, scope: !947, file: !1, line: 446, type: !282)
!954 = !DILocation(line: 446, column: 54, scope: !947)
!955 = !DILocalVariable(name: "normal_proj", arg: 3, scope: !947, file: !1, line: 446, type: !825)
!956 = !DILocation(line: 446, column: 70, scope: !947)
!957 = !DILocalVariable(name: "flipnormal", arg: 4, scope: !947, file: !1, line: 446, type: !950)
!958 = !DILocation(line: 446, column: 97, scope: !947)
!959 = !DILocalVariable(name: "sf_ctx", scope: !947, file: !1, line: 448, type: !960)
!960 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScanFillContext", file: !4, line: 55, baseType: !961)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScanFillContext", file: !4, line: 44, size: 512, elements: !962)
!962 = !{!963, !964, !965, !966, !968}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "fillvertbase", scope: !961, file: !4, line: 45, baseType: !283, size: 128)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "filledgebase", scope: !961, file: !4, line: 46, baseType: !283, size: 128, offset: 128)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "fillfacebase", scope: !961, file: !4, line: 47, baseType: !283, size: 128, offset: 256)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "poly_nr", scope: !961, file: !4, line: 51, baseType: !967, size: 16, offset: 384)
!967 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !961, file: !4, line: 54, baseType: !969, size: 64, offset: 448)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !971, line: 52, flags: DIFlagFwdDecl)
!971 = !DIFile(filename: "blender/source/blender/blenlib/BLI_memarena.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!972 = !DILocation(line: 448, column: 18, scope: !947)
!973 = !DILocalVariable(name: "sf_vert", scope: !947, file: !1, line: 449, type: !974)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScanFillVert", file: !4, line: 81, baseType: !976)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScanFillVert", file: !4, line: 66, size: 448, elements: !977)
!977 = !{!978, !980, !981, !988, !989, !993, !994, !995, !996, !997}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !976, file: !4, line: 67, baseType: !979, size: 64)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !976, file: !4, line: 67, baseType: !979, size: 64, offset: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !976, file: !4, line: 73, baseType: !982, size: 64, offset: 128)
!982 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !976, file: !4, line: 68, size: 64, elements: !983)
!983 = !{!984, !985, !986, !987}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !982, file: !4, line: 69, baseType: !979, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !982, file: !4, line: 70, baseType: !207, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !982, file: !4, line: 71, baseType: !106, size: 32)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !982, file: !4, line: 72, baseType: !5, size: 32)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !976, file: !4, line: 74, baseType: !471, size: 96, offset: 192)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "xy", scope: !976, file: !4, line: 75, baseType: !990, size: 64, offset: 288)
!990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 64, elements: !991)
!991 = !{!992}
!992 = !DISubrange(count: 2)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "keyindex", scope: !976, file: !4, line: 76, baseType: !5, size: 32, offset: 352)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "poly_nr", scope: !976, file: !4, line: 77, baseType: !967, size: 16, offset: 384)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "edge_tot", scope: !976, file: !4, line: 78, baseType: !374, size: 8, offset: 400)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !976, file: !4, line: 79, baseType: !5, size: 4, offset: 408, flags: DIFlagBitField, extraData: i64 408)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "user_flag", scope: !976, file: !4, line: 80, baseType: !5, size: 4, offset: 412, flags: DIFlagBitField, extraData: i64 408)
!998 = !DILocation(line: 449, column: 16, scope: !947)
!999 = !DILocalVariable(name: "sf_vert_new", scope: !947, file: !1, line: 449, type: !974)
!1000 = !DILocation(line: 449, column: 26, scope: !947)
!1001 = !DILocalVariable(name: "sf_vert_last", scope: !947, file: !1, line: 449, type: !974)
!1002 = !DILocation(line: 449, column: 40, scope: !947)
!1003 = !DILocalVariable(name: "sf_tri", scope: !947, file: !1, line: 450, type: !1004)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScanFillFace", file: !4, line: 97, baseType: !1006)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScanFillFace", file: !4, line: 94, size: 320, elements: !1007)
!1007 = !{!1008, !1010, !1011, !1012, !1013}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1006, file: !4, line: 95, baseType: !1009, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1006, file: !4, line: 95, baseType: !1009, size: 64, offset: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1006, file: !4, line: 96, baseType: !979, size: 64, offset: 128)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1006, file: !4, line: 96, baseType: !979, size: 64, offset: 192)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1006, file: !4, line: 96, baseType: !979, size: 64, offset: 256)
!1014 = !DILocation(line: 450, column: 16, scope: !947)
!1015 = !DILocalVariable(name: "sf_arena", scope: !947, file: !1, line: 451, type: !1016)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "MemArena", file: !971, line: 53, baseType: !970)
!1018 = !DILocation(line: 451, column: 12, scope: !947)
!1019 = !DILocalVariable(name: "dlnew", scope: !947, file: !1, line: 452, type: !210)
!1020 = !DILocation(line: 452, column: 12, scope: !947)
!1021 = !DILocalVariable(name: "dl", scope: !947, file: !1, line: 452, type: !210)
!1022 = !DILocation(line: 452, column: 27, scope: !947)
!1023 = !DILocalVariable(name: "f1", scope: !947, file: !1, line: 453, type: !209)
!1024 = !DILocation(line: 453, column: 9, scope: !947)
!1025 = !DILocalVariable(name: "colnr", scope: !947, file: !1, line: 454, type: !106)
!1026 = !DILocation(line: 454, column: 6, scope: !947)
!1027 = !DILocalVariable(name: "charidx", scope: !947, file: !1, line: 454, type: !106)
!1028 = !DILocation(line: 454, column: 17, scope: !947)
!1029 = !DILocalVariable(name: "cont", scope: !947, file: !1, line: 454, type: !106)
!1030 = !DILocation(line: 454, column: 30, scope: !947)
!1031 = !DILocalVariable(name: "tot", scope: !947, file: !1, line: 454, type: !106)
!1032 = !DILocation(line: 454, column: 40, scope: !947)
!1033 = !DILocalVariable(name: "a", scope: !947, file: !1, line: 454, type: !106)
!1034 = !DILocation(line: 454, column: 45, scope: !947)
!1035 = !DILocalVariable(name: "index", scope: !947, file: !1, line: 454, type: !228)
!1036 = !DILocation(line: 454, column: 49, scope: !947)
!1037 = !DILocalVariable(name: "nextcol", scope: !947, file: !1, line: 454, type: !106)
!1038 = !DILocation(line: 454, column: 56, scope: !947)
!1039 = !DILocalVariable(name: "totvert", scope: !947, file: !1, line: 455, type: !106)
!1040 = !DILocation(line: 455, column: 6, scope: !947)
!1041 = !DILocalVariable(name: "scanfill_flag", scope: !947, file: !1, line: 456, type: !1042)
!1042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !106)
!1043 = !DILocation(line: 456, column: 12, scope: !947)
!1044 = !DILocation(line: 458, column: 6, scope: !1045)
!1045 = distinct !DILexicalBlock(scope: !947, file: !1, line: 458, column: 6)
!1046 = !DILocation(line: 458, column: 15, scope: !1045)
!1047 = !DILocation(line: 458, column: 6, scope: !947)
!1048 = !DILocation(line: 459, column: 3, scope: !1045)
!1049 = !DILocation(line: 460, column: 28, scope: !1050)
!1050 = distinct !DILexicalBlock(scope: !947, file: !1, line: 460, column: 6)
!1051 = !DILocation(line: 460, column: 6, scope: !1050)
!1052 = !DILocation(line: 460, column: 6, scope: !947)
!1053 = !DILocation(line: 461, column: 3, scope: !1050)
!1054 = !DILocation(line: 463, column: 13, scope: !947)
!1055 = !DILocation(line: 463, column: 11, scope: !947)
!1056 = !DILocation(line: 465, column: 2, scope: !947)
!1057 = !DILocation(line: 465, column: 9, scope: !947)
!1058 = !DILocation(line: 466, column: 8, scope: !1059)
!1059 = distinct !DILexicalBlock(scope: !947, file: !1, line: 465, column: 15)
!1060 = !DILocation(line: 467, column: 11, scope: !1059)
!1061 = !DILocation(line: 468, column: 11, scope: !1059)
!1062 = !DILocation(line: 470, column: 37, scope: !1059)
!1063 = !DILocation(line: 470, column: 3, scope: !1059)
!1064 = !DILocation(line: 472, column: 8, scope: !1059)
!1065 = !DILocation(line: 472, column: 18, scope: !1059)
!1066 = !DILocation(line: 472, column: 6, scope: !1059)
!1067 = !DILocation(line: 473, column: 3, scope: !1059)
!1068 = !DILocation(line: 473, column: 10, scope: !1059)
!1069 = !DILocation(line: 474, column: 8, scope: !1070)
!1070 = distinct !DILexicalBlock(scope: !1071, file: !1, line: 474, column: 8)
!1071 = distinct !DILexicalBlock(scope: !1059, file: !1, line: 473, column: 14)
!1072 = !DILocation(line: 474, column: 12, scope: !1070)
!1073 = !DILocation(line: 474, column: 17, scope: !1070)
!1074 = !DILocation(line: 474, column: 8, scope: !1071)
!1075 = !DILocation(line: 475, column: 9, scope: !1076)
!1076 = distinct !DILexicalBlock(scope: !1077, file: !1, line: 475, column: 9)
!1077 = distinct !DILexicalBlock(scope: !1070, file: !1, line: 474, column: 29)
!1078 = !DILocation(line: 475, column: 19, scope: !1076)
!1079 = !DILocation(line: 475, column: 23, scope: !1076)
!1080 = !DILocation(line: 475, column: 17, scope: !1076)
!1081 = !DILocation(line: 475, column: 9, scope: !1077)
!1082 = !DILocation(line: 476, column: 11, scope: !1076)
!1083 = !DILocation(line: 476, column: 6, scope: !1076)
!1084 = !DILocation(line: 477, column: 14, scope: !1085)
!1085 = distinct !DILexicalBlock(scope: !1076, file: !1, line: 477, column: 14)
!1086 = !DILocation(line: 477, column: 25, scope: !1085)
!1087 = !DILocation(line: 477, column: 29, scope: !1085)
!1088 = !DILocation(line: 477, column: 22, scope: !1085)
!1089 = !DILocation(line: 477, column: 14, scope: !1076)
!1090 = !DILocation(line: 478, column: 10, scope: !1091)
!1091 = distinct !DILexicalBlock(scope: !1092, file: !1, line: 478, column: 10)
!1092 = distinct !DILexicalBlock(scope: !1085, file: !1, line: 477, column: 38)
!1093 = !DILocation(line: 478, column: 19, scope: !1091)
!1094 = !DILocation(line: 478, column: 23, scope: !1091)
!1095 = !DILocation(line: 478, column: 16, scope: !1091)
!1096 = !DILocation(line: 478, column: 10, scope: !1092)
!1097 = !DILocation(line: 480, column: 14, scope: !1098)
!1098 = distinct !DILexicalBlock(scope: !1091, file: !1, line: 478, column: 28)
!1099 = !DILocation(line: 480, column: 21, scope: !1098)
!1100 = !DILocation(line: 483, column: 12, scope: !1098)
!1101 = !DILocation(line: 483, column: 16, scope: !1098)
!1102 = !DILocation(line: 483, column: 10, scope: !1098)
!1103 = !DILocation(line: 484, column: 11, scope: !1098)
!1104 = !DILocation(line: 484, column: 15, scope: !1098)
!1105 = !DILocation(line: 484, column: 9, scope: !1098)
!1106 = !DILocation(line: 485, column: 29, scope: !1098)
!1107 = !DILocation(line: 485, column: 15, scope: !1098)
!1108 = !DILocation(line: 487, column: 7, scope: !1098)
!1109 = !DILocation(line: 487, column: 15, scope: !1098)
!1110 = !DILocation(line: 488, column: 23, scope: !1111)
!1111 = distinct !DILexicalBlock(scope: !1098, file: !1, line: 487, column: 19)
!1112 = !DILocation(line: 488, column: 21, scope: !1111)
!1113 = !DILocation(line: 490, column: 49, scope: !1111)
!1114 = !DILocation(line: 490, column: 18, scope: !1111)
!1115 = !DILocation(line: 490, column: 16, scope: !1111)
!1116 = !DILocation(line: 491, column: 15, scope: !1111)
!1117 = !DILocation(line: 493, column: 12, scope: !1118)
!1118 = distinct !DILexicalBlock(scope: !1111, file: !1, line: 493, column: 12)
!1119 = !DILocation(line: 493, column: 25, scope: !1118)
!1120 = !DILocation(line: 493, column: 12, scope: !1111)
!1121 = !DILocation(line: 494, column: 23, scope: !1118)
!1122 = !DILocation(line: 494, column: 21, scope: !1118)
!1123 = !DILocation(line: 494, column: 9, scope: !1118)
!1124 = !DILocation(line: 496, column: 40, scope: !1125)
!1125 = distinct !DILexicalBlock(scope: !1118, file: !1, line: 495, column: 13)
!1126 = !DILocation(line: 496, column: 54, scope: !1125)
!1127 = !DILocation(line: 496, column: 9, scope: !1125)
!1128 = !DILocation(line: 498, column: 11, scope: !1111)
!1129 = distinct !{!1129, !1108, !1130}
!1130 = !DILocation(line: 499, column: 7, scope: !1098)
!1131 = !DILocation(line: 501, column: 11, scope: !1132)
!1132 = distinct !DILexicalBlock(scope: !1098, file: !1, line: 501, column: 11)
!1133 = !DILocation(line: 501, column: 19, scope: !1132)
!1134 = !DILocation(line: 501, column: 27, scope: !1132)
!1135 = !DILocation(line: 501, column: 30, scope: !1132)
!1136 = !DILocation(line: 501, column: 42, scope: !1132)
!1137 = !DILocation(line: 501, column: 11, scope: !1098)
!1138 = !DILocation(line: 502, column: 39, scope: !1139)
!1139 = distinct !DILexicalBlock(scope: !1132, file: !1, line: 501, column: 51)
!1140 = !DILocation(line: 502, column: 48, scope: !1139)
!1141 = !DILocation(line: 502, column: 8, scope: !1139)
!1142 = !DILocation(line: 503, column: 7, scope: !1139)
!1143 = !DILocation(line: 504, column: 6, scope: !1098)
!1144 = !DILocation(line: 505, column: 15, scope: !1145)
!1145 = distinct !DILexicalBlock(scope: !1091, file: !1, line: 505, column: 15)
!1146 = !DILocation(line: 505, column: 23, scope: !1145)
!1147 = !DILocation(line: 505, column: 27, scope: !1145)
!1148 = !DILocation(line: 505, column: 21, scope: !1145)
!1149 = !DILocation(line: 505, column: 15, scope: !1091)
!1150 = !DILocation(line: 507, column: 12, scope: !1151)
!1151 = distinct !DILexicalBlock(scope: !1145, file: !1, line: 505, column: 32)
!1152 = !DILocation(line: 508, column: 15, scope: !1151)
!1153 = !DILocation(line: 509, column: 6, scope: !1151)
!1154 = !DILocation(line: 510, column: 5, scope: !1092)
!1155 = !DILocation(line: 511, column: 4, scope: !1077)
!1156 = !DILocation(line: 512, column: 9, scope: !1071)
!1157 = !DILocation(line: 512, column: 13, scope: !1071)
!1158 = !DILocation(line: 512, column: 7, scope: !1071)
!1159 = distinct !{!1159, !1067, !1160}
!1160 = !DILocation(line: 513, column: 3, scope: !1059)
!1161 = !DILocation(line: 516, column: 7, scope: !1162)
!1162 = distinct !DILexicalBlock(scope: !1059, file: !1, line: 516, column: 7)
!1163 = !DILocation(line: 516, column: 15, scope: !1162)
!1164 = !DILocation(line: 518, column: 46, scope: !1162)
!1165 = !DILocation(line: 516, column: 25, scope: !1162)
!1166 = !DILocation(line: 516, column: 23, scope: !1162)
!1167 = !DILocation(line: 516, column: 7, scope: !1059)
!1168 = !DILocation(line: 520, column: 8, scope: !1169)
!1169 = distinct !DILexicalBlock(scope: !1170, file: !1, line: 520, column: 8)
!1170 = distinct !DILexicalBlock(scope: !1162, file: !1, line: 519, column: 3)
!1171 = !DILocation(line: 520, column: 8, scope: !1170)
!1172 = !DILocation(line: 521, column: 13, scope: !1173)
!1173 = distinct !DILexicalBlock(scope: !1169, file: !1, line: 520, column: 13)
!1174 = !DILocation(line: 521, column: 11, scope: !1173)
!1175 = !DILocation(line: 522, column: 5, scope: !1173)
!1176 = !DILocation(line: 522, column: 12, scope: !1173)
!1177 = !DILocation(line: 522, column: 17, scope: !1173)
!1178 = !DILocation(line: 523, column: 18, scope: !1173)
!1179 = !DILocation(line: 523, column: 5, scope: !1173)
!1180 = !DILocation(line: 523, column: 12, scope: !1173)
!1181 = !DILocation(line: 523, column: 16, scope: !1173)
!1182 = !DILocation(line: 524, column: 17, scope: !1173)
!1183 = !DILocation(line: 524, column: 5, scope: !1173)
!1184 = !DILocation(line: 524, column: 12, scope: !1173)
!1185 = !DILocation(line: 524, column: 15, scope: !1173)
!1186 = !DILocation(line: 525, column: 20, scope: !1173)
!1187 = !DILocation(line: 525, column: 5, scope: !1173)
!1188 = !DILocation(line: 525, column: 12, scope: !1173)
!1189 = !DILocation(line: 525, column: 18, scope: !1173)
!1190 = !DILocation(line: 527, column: 20, scope: !1173)
!1191 = !DILocation(line: 527, column: 32, scope: !1173)
!1192 = !DILocation(line: 527, column: 36, scope: !1173)
!1193 = !DILocation(line: 527, column: 40, scope: !1173)
!1194 = !DILocation(line: 527, column: 5, scope: !1173)
!1195 = !DILocation(line: 527, column: 12, scope: !1173)
!1196 = !DILocation(line: 527, column: 18, scope: !1173)
!1197 = !DILocation(line: 528, column: 20, scope: !1173)
!1198 = !DILocation(line: 528, column: 32, scope: !1173)
!1199 = !DILocation(line: 528, column: 40, scope: !1173)
!1200 = !DILocation(line: 528, column: 44, scope: !1173)
!1201 = !DILocation(line: 528, column: 5, scope: !1173)
!1202 = !DILocation(line: 528, column: 12, scope: !1173)
!1203 = !DILocation(line: 528, column: 18, scope: !1173)
!1204 = !DILocation(line: 531, column: 10, scope: !1173)
!1205 = !DILocation(line: 531, column: 17, scope: !1173)
!1206 = !DILocation(line: 531, column: 8, scope: !1173)
!1207 = !DILocation(line: 532, column: 13, scope: !1173)
!1208 = !DILocation(line: 534, column: 27, scope: !1209)
!1209 = distinct !DILexicalBlock(scope: !1173, file: !1, line: 534, column: 5)
!1210 = !DILocation(line: 534, column: 40, scope: !1209)
!1211 = !DILocation(line: 534, column: 20, scope: !1209)
!1212 = !DILocation(line: 534, column: 18, scope: !1209)
!1213 = !DILocation(line: 534, column: 10, scope: !1209)
!1214 = !DILocation(line: 534, column: 47, scope: !1215)
!1215 = distinct !DILexicalBlock(scope: !1209, file: !1, line: 534, column: 5)
!1216 = !DILocation(line: 534, column: 5, scope: !1209)
!1217 = !DILocation(line: 535, column: 17, scope: !1218)
!1218 = distinct !DILexicalBlock(scope: !1215, file: !1, line: 534, column: 81)
!1219 = !DILocation(line: 535, column: 21, scope: !1218)
!1220 = !DILocation(line: 535, column: 30, scope: !1218)
!1221 = !DILocation(line: 535, column: 6, scope: !1218)
!1222 = !DILocation(line: 536, column: 9, scope: !1218)
!1223 = !DILocation(line: 539, column: 23, scope: !1218)
!1224 = !DILocation(line: 539, column: 6, scope: !1218)
!1225 = !DILocation(line: 539, column: 15, scope: !1218)
!1226 = !DILocation(line: 539, column: 19, scope: !1218)
!1227 = !DILocation(line: 539, column: 21, scope: !1218)
!1228 = !DILocation(line: 540, column: 13, scope: !1218)
!1229 = !DILocation(line: 541, column: 5, scope: !1218)
!1230 = !DILocation(line: 534, column: 66, scope: !1215)
!1231 = !DILocation(line: 534, column: 75, scope: !1215)
!1232 = !DILocation(line: 534, column: 64, scope: !1215)
!1233 = !DILocation(line: 534, column: 5, scope: !1215)
!1234 = distinct !{!1234, !1216, !1235}
!1235 = !DILocation(line: 541, column: 5, scope: !1209)
!1236 = !DILocation(line: 545, column: 13, scope: !1173)
!1237 = !DILocation(line: 545, column: 20, scope: !1173)
!1238 = !DILocation(line: 545, column: 11, scope: !1173)
!1239 = !DILocation(line: 546, column: 26, scope: !1240)
!1240 = distinct !DILexicalBlock(scope: !1173, file: !1, line: 546, column: 5)
!1241 = !DILocation(line: 546, column: 39, scope: !1240)
!1242 = !DILocation(line: 546, column: 19, scope: !1240)
!1243 = !DILocation(line: 546, column: 17, scope: !1240)
!1244 = !DILocation(line: 546, column: 10, scope: !1240)
!1245 = !DILocation(line: 546, column: 46, scope: !1246)
!1246 = distinct !DILexicalBlock(scope: !1240, file: !1, line: 546, column: 5)
!1247 = !DILocation(line: 546, column: 5, scope: !1240)
!1248 = !DILocation(line: 547, column: 17, scope: !1249)
!1249 = distinct !DILexicalBlock(scope: !1246, file: !1, line: 546, column: 77)
!1250 = !DILocation(line: 547, column: 25, scope: !1249)
!1251 = !DILocation(line: 547, column: 29, scope: !1249)
!1252 = !DILocation(line: 547, column: 33, scope: !1249)
!1253 = !DILocation(line: 547, column: 6, scope: !1249)
!1254 = !DILocation(line: 547, column: 15, scope: !1249)
!1255 = !DILocation(line: 548, column: 17, scope: !1249)
!1256 = !DILocation(line: 548, column: 25, scope: !1249)
!1257 = !DILocation(line: 548, column: 29, scope: !1249)
!1258 = !DILocation(line: 548, column: 33, scope: !1249)
!1259 = !DILocation(line: 548, column: 6, scope: !1249)
!1260 = !DILocation(line: 548, column: 15, scope: !1249)
!1261 = !DILocation(line: 549, column: 17, scope: !1249)
!1262 = !DILocation(line: 549, column: 25, scope: !1249)
!1263 = !DILocation(line: 549, column: 29, scope: !1249)
!1264 = !DILocation(line: 549, column: 33, scope: !1249)
!1265 = !DILocation(line: 549, column: 6, scope: !1249)
!1266 = !DILocation(line: 549, column: 15, scope: !1249)
!1267 = !DILocation(line: 551, column: 10, scope: !1268)
!1268 = distinct !DILexicalBlock(scope: !1249, file: !1, line: 551, column: 10)
!1269 = !DILocation(line: 551, column: 10, scope: !1249)
!1270 = !DILocalVariable(name: "sw_ap", scope: !1271, file: !1, line: 552, type: !106)
!1271 = distinct !DILexicalBlock(scope: !1268, file: !1, line: 552, column: 7)
!1272 = !DILocation(line: 552, column: 7, scope: !1271)
!1273 = !DILocation(line: 554, column: 12, scope: !1249)
!1274 = !DILocation(line: 555, column: 5, scope: !1249)
!1275 = !DILocation(line: 546, column: 63, scope: !1246)
!1276 = !DILocation(line: 546, column: 71, scope: !1246)
!1277 = !DILocation(line: 546, column: 61, scope: !1246)
!1278 = !DILocation(line: 546, column: 5, scope: !1246)
!1279 = distinct !{!1279, !1247, !1280}
!1280 = !DILocation(line: 555, column: 5, scope: !1240)
!1281 = !DILocation(line: 556, column: 4, scope: !1173)
!1282 = !DILocation(line: 558, column: 16, scope: !1170)
!1283 = !DILocation(line: 558, column: 20, scope: !1170)
!1284 = !DILocation(line: 558, column: 4, scope: !1170)
!1285 = !DILocation(line: 559, column: 3, scope: !1170)
!1286 = !DILocation(line: 560, column: 35, scope: !1059)
!1287 = !DILocation(line: 560, column: 3, scope: !1059)
!1288 = !DILocation(line: 562, column: 7, scope: !1289)
!1289 = distinct !DILexicalBlock(scope: !1059, file: !1, line: 562, column: 7)
!1290 = !DILocation(line: 562, column: 7, scope: !1059)
!1291 = !DILocation(line: 564, column: 9, scope: !1292)
!1292 = distinct !DILexicalBlock(scope: !1289, file: !1, line: 562, column: 16)
!1293 = !DILocation(line: 565, column: 3, scope: !1292)
!1294 = !DILocation(line: 568, column: 11, scope: !1295)
!1295 = distinct !DILexicalBlock(scope: !1289, file: !1, line: 566, column: 8)
!1296 = !DILocation(line: 569, column: 10, scope: !1295)
!1297 = distinct !{!1297, !1056, !1298}
!1298 = !DILocation(line: 571, column: 2, scope: !947)
!1299 = !DILocation(line: 573, column: 20, scope: !947)
!1300 = !DILocation(line: 573, column: 2, scope: !947)
!1301 = !DILocation(line: 576, column: 1, scope: !947)
!1302 = distinct !DISubprogram(name: "BLI_listbase_is_empty", scope: !1303, file: !1303, line: 88, type: !1304, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!1303 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!374, !1306}
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64)
!1307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !285)
!1308 = !DILocalVariable(name: "lb", arg: 1, scope: !1302, file: !1303, line: 88, type: !1306)
!1309 = !DILocation(line: 88, column: 62, scope: !1302)
!1310 = !DILocation(line: 88, column: 76, scope: !1302)
!1311 = !DILocation(line: 88, column: 80, scope: !1302)
!1312 = !DILocation(line: 88, column: 86, scope: !1302)
!1313 = !DILocation(line: 88, column: 75, scope: !1302)
!1314 = !DILocation(line: 88, column: 68, scope: !1302)
!1315 = distinct !DISubprogram(name: "copy_v3_v3", scope: !822, file: !822, line: 64, type: !823, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!1316 = !DILocalVariable(name: "r", arg: 1, scope: !1315, file: !822, line: 64, type: !209)
!1317 = !DILocation(line: 64, column: 31, scope: !1315)
!1318 = !DILocalVariable(name: "a", arg: 2, scope: !1315, file: !822, line: 64, type: !825)
!1319 = !DILocation(line: 64, column: 49, scope: !1315)
!1320 = !DILocation(line: 66, column: 9, scope: !1315)
!1321 = !DILocation(line: 66, column: 2, scope: !1315)
!1322 = !DILocation(line: 66, column: 7, scope: !1315)
!1323 = !DILocation(line: 67, column: 9, scope: !1315)
!1324 = !DILocation(line: 67, column: 2, scope: !1315)
!1325 = !DILocation(line: 67, column: 7, scope: !1315)
!1326 = !DILocation(line: 68, column: 9, scope: !1315)
!1327 = !DILocation(line: 68, column: 2, scope: !1315)
!1328 = !DILocation(line: 68, column: 7, scope: !1315)
!1329 = !DILocation(line: 69, column: 1, scope: !1315)
!1330 = distinct !DISubprogram(name: "BKE_displist_calc_taper", scope: !1, file: !1, line: 706, type: !1331, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !240)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{!208, !1333, !2871, !106, !106}
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !1335, line: 1299, baseType: !1336)
!1335 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !1335, line: 1216, size: 39680, elements: !1337)
!1337 = !{!1338, !1401, !1404, !2182, !2185, !2186, !2187, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2213, !2216, !2219, !2443, !2446, !2745, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2767, !2768, !2769, !2770, !2771, !2779, !2845, !2852, !2853, !2860, !2863, !2864, !2865, !2866, !2867, !2868}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1336, file: !1335, line: 1217, baseType: !1339, size: 960)
!1339 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !1340, line: 130, baseType: !1341)
!1340 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !1340, line: 117, size: 960, elements: !1342)
!1342 = !{!1343, !1344, !1345, !1347, !1367, !1371, !1372, !1373, !1374, !1375}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1341, file: !1340, line: 118, baseType: !207, size: 64)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1341, file: !1340, line: 118, baseType: !207, size: 64, offset: 64)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !1341, file: !1340, line: 119, baseType: !1346, size: 64, offset: 128)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1341, file: !1340, line: 120, baseType: !1348, size: 64, offset: 192)
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !1340, line: 136, size: 17600, elements: !1350)
!1350 = !{!1351, !1352, !1354, !1357, !1362, !1363, !1364}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1349, file: !1340, line: 137, baseType: !1339, size: 960)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !1349, file: !1340, line: 138, baseType: !1353, size: 64, offset: 960)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !1349, file: !1340, line: 139, baseType: !1355, size: 64, offset: 1024)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !1340, line: 43, flags: DIFlagFwdDecl)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1349, file: !1340, line: 140, baseType: !1358, size: 8192, offset: 1088)
!1358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 8192, elements: !1360)
!1359 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1360 = !{!1361}
!1361 = !DISubrange(count: 1024)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1349, file: !1340, line: 141, baseType: !1358, size: 8192, offset: 9280)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1349, file: !1340, line: 148, baseType: !1348, size: 64, offset: 17472)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1349, file: !1340, line: 150, baseType: !1365, size: 64, offset: 17536)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1366 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !1340, line: 45, flags: DIFlagFwdDecl)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1341, file: !1340, line: 121, baseType: !1368, size: 528, offset: 256)
!1368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 528, elements: !1369)
!1369 = !{!1370}
!1370 = !DISubrange(count: 66)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1341, file: !1340, line: 126, baseType: !219, size: 16, offset: 784)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1341, file: !1340, line: 127, baseType: !106, size: 32, offset: 800)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !1341, file: !1340, line: 128, baseType: !106, size: 32, offset: 832)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1341, file: !1340, line: 128, baseType: !106, size: 32, offset: 864)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1341, file: !1340, line: 129, baseType: !1376, size: 64, offset: 896)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !1340, line: 75, baseType: !1378)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !1340, line: 62, size: 1024, elements: !1379)
!1379 = !{!1380, !1382, !1383, !1384, !1385, !1386, !1390, !1391, !1399, !1400}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1378, file: !1340, line: 63, baseType: !1381, size: 64)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1378, file: !1340, line: 63, baseType: !1381, size: 64, offset: 64)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1378, file: !1340, line: 64, baseType: !1359, size: 8, offset: 128)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1378, file: !1340, line: 64, baseType: !1359, size: 8, offset: 136)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1378, file: !1340, line: 65, baseType: !219, size: 16, offset: 144)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1378, file: !1340, line: 66, baseType: !1387, size: 512, offset: 160)
!1387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 512, elements: !1388)
!1388 = !{!1389}
!1389 = !DISubrange(count: 64)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !1378, file: !1340, line: 67, baseType: !106, size: 32, offset: 672)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1378, file: !1340, line: 69, baseType: !1392, size: 256, offset: 704)
!1392 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !1340, line: 60, baseType: !1393)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !1340, line: 48, size: 256, elements: !1394)
!1394 = !{!1395, !1396, !1397, !1398}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1393, file: !1340, line: 49, baseType: !207, size: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1393, file: !1340, line: 58, baseType: !283, size: 128, offset: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1393, file: !1340, line: 59, baseType: !106, size: 32, offset: 192)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !1393, file: !1340, line: 59, baseType: !106, size: 32, offset: 224)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1378, file: !1340, line: 70, baseType: !106, size: 32, offset: 960)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !1378, file: !1340, line: 74, baseType: !106, size: 32, offset: 992)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1336, file: !1335, line: 1218, baseType: !1402, size: 64, offset: 960)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!1403 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !193, line: 48, flags: DIFlagFwdDecl)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1336, file: !1335, line: 1220, baseType: !1405, size: 64, offset: 1024)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !40, line: 115, size: 11392, elements: !1407)
!1407 = !{!1408, !1409, !1410, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1427, !1437, !1451, !1452, !1493, !1494, !1497, !1498, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1524, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1540, !1541, !1542, !1543, !1544, !1545, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1615, !1618, !1622, !1623, !1624, !1625, !1626, !1629, !1651, !2130, !2131, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2146, !2149, !2150, !2170, !2171}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1406, file: !40, line: 116, baseType: !1339, size: 960)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1406, file: !40, line: 117, baseType: !1402, size: 64, offset: 960)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1406, file: !40, line: 119, baseType: !1411, size: 64, offset: 1024)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!1412 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !40, line: 57, flags: DIFlagFwdDecl)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1406, file: !40, line: 121, baseType: !219, size: 16, offset: 1088)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !1406, file: !40, line: 121, baseType: !219, size: 16, offset: 1104)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !1406, file: !40, line: 122, baseType: !106, size: 32, offset: 1120)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !1406, file: !40, line: 122, baseType: !106, size: 32, offset: 1152)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !1406, file: !40, line: 122, baseType: !106, size: 32, offset: 1184)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !1406, file: !40, line: 123, baseType: !1387, size: 512, offset: 1216)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1406, file: !40, line: 124, baseType: !1405, size: 64, offset: 1728)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !1406, file: !40, line: 124, baseType: !1405, size: 64, offset: 1792)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1406, file: !40, line: 127, baseType: !1405, size: 64, offset: 1856)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !1406, file: !40, line: 127, baseType: !1405, size: 64, offset: 1920)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !1406, file: !40, line: 127, baseType: !1405, size: 64, offset: 1984)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1406, file: !40, line: 128, baseType: !1425, size: 64, offset: 2048)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 64)
!1426 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !193, line: 44, flags: DIFlagFwdDecl)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1406, file: !40, line: 130, baseType: !1428, size: 64, offset: 2112)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !40, line: 97, size: 832, elements: !1430)
!1430 = !{!1431, !1435, !1436}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1429, file: !40, line: 98, baseType: !1432, size: 768)
!1432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 768, elements: !1433)
!1433 = !{!1434, !473}
!1434 = !DISubrange(count: 8)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1429, file: !40, line: 99, baseType: !106, size: 32, offset: 768)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1429, file: !40, line: 99, baseType: !106, size: 32, offset: 800)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1406, file: !40, line: 131, baseType: !1438, size: 64, offset: 2176)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !1440, line: 486, size: 1600, elements: !1441)
!1440 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1441 = !{!1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1439, file: !1440, line: 487, baseType: !1339, size: 960)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !1439, file: !1440, line: 489, baseType: !283, size: 128, offset: 960)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1439, file: !1440, line: 490, baseType: !283, size: 128, offset: 1088)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1439, file: !1440, line: 491, baseType: !283, size: 128, offset: 1216)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1439, file: !1440, line: 492, baseType: !283, size: 128, offset: 1344)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1439, file: !1440, line: 494, baseType: !106, size: 32, offset: 1472)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !1439, file: !1440, line: 495, baseType: !106, size: 32, offset: 1504)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !1439, file: !1440, line: 497, baseType: !106, size: 32, offset: 1536)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1439, file: !1440, line: 498, baseType: !106, size: 32, offset: 1568)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !1406, file: !40, line: 132, baseType: !1438, size: 64, offset: 2240)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !1406, file: !40, line: 133, baseType: !1453, size: 64, offset: 2304)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !1440, line: 334, size: 1728, elements: !1455)
!1455 = !{!1456, !1457, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1492}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1454, file: !1440, line: 335, baseType: !283, size: 128)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !1454, file: !1440, line: 336, baseType: !1458, size: 64, offset: 128)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64)
!1459 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !193, line: 51, flags: DIFlagFwdDecl)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1454, file: !1440, line: 338, baseType: !219, size: 16, offset: 192)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1454, file: !1440, line: 338, baseType: !219, size: 16, offset: 208)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !1454, file: !1440, line: 339, baseType: !5, size: 32, offset: 224)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1454, file: !1440, line: 340, baseType: !106, size: 32, offset: 256)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1454, file: !1440, line: 342, baseType: !208, size: 32, offset: 288)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !1454, file: !1440, line: 343, baseType: !471, size: 96, offset: 320)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !1454, file: !1440, line: 344, baseType: !471, size: 96, offset: 416)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !1454, file: !1440, line: 347, baseType: !283, size: 128, offset: 512)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !1454, file: !1440, line: 349, baseType: !106, size: 32, offset: 640)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !1454, file: !1440, line: 350, baseType: !106, size: 32, offset: 672)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !1454, file: !1440, line: 351, baseType: !207, size: 64, offset: 704)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !1454, file: !1440, line: 352, baseType: !207, size: 64, offset: 768)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !1454, file: !1440, line: 354, baseType: !1473, size: 384, offset: 832)
!1473 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !1440, line: 116, baseType: !1474)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !1440, line: 94, size: 384, elements: !1475)
!1475 = !{!1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !1474, file: !1440, line: 96, baseType: !106, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !1474, file: !1440, line: 96, baseType: !106, size: 32, offset: 32)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !1474, file: !1440, line: 97, baseType: !106, size: 32, offset: 64)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !1474, file: !1440, line: 97, baseType: !106, size: 32, offset: 96)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !1474, file: !1440, line: 99, baseType: !219, size: 16, offset: 128)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !1474, file: !1440, line: 100, baseType: !219, size: 16, offset: 144)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !1474, file: !1440, line: 102, baseType: !219, size: 16, offset: 160)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1474, file: !1440, line: 105, baseType: !219, size: 16, offset: 176)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !1474, file: !1440, line: 108, baseType: !219, size: 16, offset: 192)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !1474, file: !1440, line: 109, baseType: !219, size: 16, offset: 208)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !1474, file: !1440, line: 111, baseType: !219, size: 16, offset: 224)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !1474, file: !1440, line: 112, baseType: !219, size: 16, offset: 240)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !1474, file: !1440, line: 114, baseType: !106, size: 32, offset: 256)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !1474, file: !1440, line: 114, baseType: !106, size: 32, offset: 288)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !1474, file: !1440, line: 115, baseType: !106, size: 32, offset: 320)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !1474, file: !1440, line: 115, baseType: !106, size: 32, offset: 352)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !1454, file: !1440, line: 355, baseType: !1387, size: 512, offset: 1216)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1406, file: !40, line: 134, baseType: !207, size: 64, offset: 2368)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1406, file: !40, line: 136, baseType: !1495, size: 64, offset: 2432)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 64)
!1496 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !1335, line: 61, flags: DIFlagFwdDecl)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !1406, file: !40, line: 138, baseType: !1473, size: 384, offset: 2496)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !1406, file: !40, line: 139, baseType: !1499, size: 64, offset: 2880)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64)
!1500 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !1440, line: 80, baseType: !1501)
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !1440, line: 72, size: 192, elements: !1502)
!1502 = !{!1503, !1510, !1511, !1512, !1513}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1501, file: !1440, line: 73, baseType: !1504, size: 64)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 64)
!1505 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !1440, line: 59, baseType: !1506)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !1440, line: 56, size: 128, elements: !1507)
!1507 = !{!1508, !1509}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1506, file: !1440, line: 57, baseType: !471, size: 96)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1506, file: !1440, line: 58, baseType: !106, size: 32, offset: 96)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1501, file: !1440, line: 74, baseType: !106, size: 32, offset: 64)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1501, file: !1440, line: 76, baseType: !106, size: 32, offset: 96)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1501, file: !1440, line: 77, baseType: !106, size: 32, offset: 128)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1501, file: !1440, line: 79, baseType: !106, size: 32, offset: 160)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !1406, file: !40, line: 141, baseType: !283, size: 128, offset: 2944)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !1406, file: !40, line: 142, baseType: !283, size: 128, offset: 3072)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !1406, file: !40, line: 143, baseType: !283, size: 128, offset: 3200)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1406, file: !40, line: 144, baseType: !283, size: 128, offset: 3328)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1406, file: !40, line: 146, baseType: !106, size: 32, offset: 3456)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !1406, file: !40, line: 147, baseType: !106, size: 32, offset: 3488)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1406, file: !40, line: 150, baseType: !1521, size: 64, offset: 3520)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1523 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !193, line: 46, flags: DIFlagFwdDecl)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !1406, file: !40, line: 151, baseType: !1525, size: 64, offset: 3584)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !1406, file: !40, line: 152, baseType: !106, size: 32, offset: 3648)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !1406, file: !40, line: 153, baseType: !106, size: 32, offset: 3680)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1406, file: !40, line: 156, baseType: !471, size: 96, offset: 3712)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !1406, file: !40, line: 156, baseType: !471, size: 96, offset: 3808)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !1406, file: !40, line: 156, baseType: !471, size: 96, offset: 3904)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1406, file: !40, line: 157, baseType: !471, size: 96, offset: 4000)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !1406, file: !40, line: 158, baseType: !471, size: 96, offset: 4096)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !1406, file: !40, line: 159, baseType: !471, size: 96, offset: 4192)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1406, file: !40, line: 160, baseType: !471, size: 96, offset: 4288)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !1406, file: !40, line: 160, baseType: !471, size: 96, offset: 4384)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !1406, file: !40, line: 161, baseType: !1537, size: 128, offset: 4480)
!1537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 128, elements: !1538)
!1538 = !{!1539}
!1539 = !DISubrange(count: 4)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !1406, file: !40, line: 161, baseType: !1537, size: 128, offset: 4608)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !1406, file: !40, line: 162, baseType: !471, size: 96, offset: 4736)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !1406, file: !40, line: 162, baseType: !471, size: 96, offset: 4832)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !1406, file: !40, line: 163, baseType: !208, size: 32, offset: 4928)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !1406, file: !40, line: 163, baseType: !208, size: 32, offset: 4960)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !1406, file: !40, line: 164, baseType: !1546, size: 512, offset: 4992)
!1546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 512, elements: !1547)
!1547 = !{!1539, !1539}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !1406, file: !40, line: 165, baseType: !1546, size: 512, offset: 5504)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !1406, file: !40, line: 166, baseType: !1546, size: 512, offset: 6016)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1406, file: !40, line: 167, baseType: !1546, size: 512, offset: 6528)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !1406, file: !40, line: 176, baseType: !1546, size: 512, offset: 7040)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1406, file: !40, line: 178, baseType: !5, size: 32, offset: 7552)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1406, file: !40, line: 180, baseType: !219, size: 16, offset: 7584)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !1406, file: !40, line: 181, baseType: !219, size: 16, offset: 7600)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !1406, file: !40, line: 183, baseType: !219, size: 16, offset: 7616)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !1406, file: !40, line: 183, baseType: !219, size: 16, offset: 7632)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !1406, file: !40, line: 184, baseType: !219, size: 16, offset: 7648)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !1406, file: !40, line: 184, baseType: !219, size: 16, offset: 7664)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !1406, file: !40, line: 185, baseType: !219, size: 16, offset: 7680)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !1406, file: !40, line: 186, baseType: !219, size: 16, offset: 7696)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !1406, file: !40, line: 187, baseType: !219, size: 16, offset: 7712)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !1406, file: !40, line: 188, baseType: !1359, size: 8, offset: 7728)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !1406, file: !40, line: 189, baseType: !1359, size: 8, offset: 7736)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !1406, file: !40, line: 192, baseType: !106, size: 32, offset: 7744)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !1406, file: !40, line: 192, baseType: !106, size: 32, offset: 7776)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !1406, file: !40, line: 192, baseType: !106, size: 32, offset: 7808)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !1406, file: !40, line: 192, baseType: !106, size: 32, offset: 7840)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1406, file: !40, line: 194, baseType: !106, size: 32, offset: 7872)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !1406, file: !40, line: 202, baseType: !208, size: 32, offset: 7904)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !1406, file: !40, line: 202, baseType: !208, size: 32, offset: 7936)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !1406, file: !40, line: 202, baseType: !208, size: 32, offset: 7968)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !1406, file: !40, line: 211, baseType: !208, size: 32, offset: 8000)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !1406, file: !40, line: 212, baseType: !208, size: 32, offset: 8032)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1406, file: !40, line: 213, baseType: !208, size: 32, offset: 8064)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !1406, file: !40, line: 214, baseType: !208, size: 32, offset: 8096)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !1406, file: !40, line: 215, baseType: !208, size: 32, offset: 8128)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !1406, file: !40, line: 216, baseType: !208, size: 32, offset: 8160)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !1406, file: !40, line: 219, baseType: !208, size: 32, offset: 8192)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !1406, file: !40, line: 220, baseType: !208, size: 32, offset: 8224)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !1406, file: !40, line: 221, baseType: !208, size: 32, offset: 8256)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !1406, file: !40, line: 224, baseType: !967, size: 16, offset: 8288)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !1406, file: !40, line: 224, baseType: !967, size: 16, offset: 8304)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !1406, file: !40, line: 226, baseType: !219, size: 16, offset: 8320)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !1406, file: !40, line: 228, baseType: !1359, size: 8, offset: 8336)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !1406, file: !40, line: 229, baseType: !1359, size: 8, offset: 8344)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !1406, file: !40, line: 231, baseType: !219, size: 16, offset: 8352)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !1406, file: !40, line: 232, baseType: !1359, size: 8, offset: 8368)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !1406, file: !40, line: 233, baseType: !1359, size: 8, offset: 8376)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !1406, file: !40, line: 234, baseType: !208, size: 32, offset: 8384)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !1406, file: !40, line: 235, baseType: !208, size: 32, offset: 8416)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1406, file: !40, line: 237, baseType: !283, size: 128, offset: 8448)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !1406, file: !40, line: 238, baseType: !283, size: 128, offset: 8576)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !1406, file: !40, line: 239, baseType: !283, size: 128, offset: 8704)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !1406, file: !40, line: 240, baseType: !283, size: 128, offset: 8832)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1406, file: !40, line: 242, baseType: !208, size: 32, offset: 8960)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1406, file: !40, line: 244, baseType: !219, size: 16, offset: 8992)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !1406, file: !40, line: 245, baseType: !967, size: 16, offset: 9008)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1406, file: !40, line: 246, baseType: !1537, size: 128, offset: 9024)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !1406, file: !40, line: 248, baseType: !106, size: 32, offset: 9152)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !1406, file: !40, line: 249, baseType: !106, size: 32, offset: 9184)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !1406, file: !40, line: 251, baseType: !1602, size: 64, offset: 9216)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 64)
!1603 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !40, line: 251, flags: DIFlagFwdDecl)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !1406, file: !40, line: 253, baseType: !1359, size: 8, offset: 9280)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1406, file: !40, line: 254, baseType: !1359, size: 8, offset: 9288)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !1406, file: !40, line: 255, baseType: !219, size: 16, offset: 9296)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !1406, file: !40, line: 256, baseType: !471, size: 96, offset: 9312)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !1406, file: !40, line: 258, baseType: !283, size: 128, offset: 9408)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !1406, file: !40, line: 259, baseType: !283, size: 128, offset: 9536)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !1406, file: !40, line: 260, baseType: !283, size: 128, offset: 9664)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !1406, file: !40, line: 261, baseType: !283, size: 128, offset: 9792)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1406, file: !40, line: 263, baseType: !1613, size: 64, offset: 9920)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64)
!1614 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !40, line: 52, flags: DIFlagFwdDecl)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !1406, file: !40, line: 264, baseType: !1616, size: 64, offset: 9984)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!1617 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !40, line: 53, flags: DIFlagFwdDecl)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !1406, file: !40, line: 265, baseType: !1619, size: 64, offset: 10048)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !1621, line: 43, flags: DIFlagFwdDecl)
!1621 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !1406, file: !40, line: 267, baseType: !1359, size: 8, offset: 10112)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !1406, file: !40, line: 268, baseType: !1359, size: 8, offset: 10120)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !1406, file: !40, line: 269, baseType: !219, size: 16, offset: 10128)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !1406, file: !40, line: 270, baseType: !208, size: 32, offset: 10144)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !1406, file: !40, line: 272, baseType: !1627, size: 64, offset: 10176)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64)
!1628 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !40, line: 54, flags: DIFlagFwdDecl)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !1406, file: !40, line: 275, baseType: !1630, size: 64, offset: 10240)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !1632, line: 49, size: 448, elements: !1633)
!1632 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_curve.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1633 = !{!1634, !1635, !1636, !1637}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !1631, file: !1632, line: 50, baseType: !283, size: 128)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "bev", scope: !1631, file: !1632, line: 51, baseType: !283, size: 128, offset: 128)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "deformed_nurbs", scope: !1631, file: !1632, line: 52, baseType: !283, size: 128, offset: 256)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !1631, file: !1632, line: 53, baseType: !1638, size: 64, offset: 384)
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 64)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Path", file: !193, line: 65, size: 128, elements: !1640)
!1640 = !{!1641, !1649, !1650}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1639, file: !193, line: 66, baseType: !1642, size: 64)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PathPoint", file: !193, line: 56, size: 320, elements: !1644)
!1644 = !{!1645, !1646, !1647, !1648}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1643, file: !193, line: 57, baseType: !1537, size: 128)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !1643, file: !193, line: 58, baseType: !1537, size: 128, offset: 128)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1643, file: !193, line: 59, baseType: !208, size: 32, offset: 256)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1643, file: !193, line: 59, baseType: !208, size: 32, offset: 288)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1639, file: !193, line: 67, baseType: !106, size: 32, offset: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "totdist", scope: !1639, file: !193, line: 68, baseType: !208, size: 32, offset: 96)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !1406, file: !40, line: 277, baseType: !1652, size: 64, offset: 10304)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !13, line: 178, size: 13504, elements: !1654)
!1654 = !{!1655, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1707, !1710, !1712, !1713, !1715, !1716, !1717, !1718, !1724, !1728, !1729, !1733, !1734, !1735, !1736, !1737, !1750, !1762, !1776, !1780, !1784, !1788, !1797, !1809, !1813, !1817, !1821, !1825, !1829, !1830, !1831, !1832, !1833, !1834, !1838, !1839, !1840, !1841, !1845, !1846, !1847, !1848, !1849, !1854, !1855, !1856, !1857, !1858, !1862, !1863, !1864, !1865, !1866, !1873, !1884, !1888, !1894, !1904, !1909, !1919, !1926, !1933, !1937, !1941, !1945, !1950, !1951, !1952, !1959, !1965, !1966, !1967, !1971, !1972, !1981, !2087, !2091, !2099, !2103, !2107, !2111, !2119, !2129}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !1653, file: !13, line: 180, baseType: !1656, size: 1600)
!1656 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !54, line: 73, baseType: !1657)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !54, line: 64, size: 1600, elements: !1658)
!1658 = !{!1659, !1674, !1678, !1679, !1680, !1681, !1684}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1657, file: !54, line: 65, baseType: !1660, size: 64)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !54, line: 53, baseType: !1662)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !54, line: 42, size: 832, elements: !1663)
!1663 = !{!1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1662, file: !54, line: 43, baseType: !106, size: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1662, file: !54, line: 44, baseType: !106, size: 32, offset: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1662, file: !54, line: 45, baseType: !106, size: 32, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1662, file: !54, line: 46, baseType: !106, size: 32, offset: 96)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !1662, file: !54, line: 47, baseType: !106, size: 32, offset: 128)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !1662, file: !54, line: 48, baseType: !106, size: 32, offset: 160)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !1662, file: !54, line: 49, baseType: !106, size: 32, offset: 192)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1662, file: !54, line: 50, baseType: !106, size: 32, offset: 224)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1662, file: !54, line: 51, baseType: !1387, size: 512, offset: 256)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1662, file: !54, line: 52, baseType: !207, size: 64, offset: 768)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !1657, file: !54, line: 66, baseType: !1675, size: 1312, offset: 64)
!1675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 1312, elements: !1676)
!1676 = !{!1677}
!1677 = !DISubrange(count: 41)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !1657, file: !54, line: 69, baseType: !106, size: 32, offset: 1376)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !1657, file: !54, line: 69, baseType: !106, size: 32, offset: 1408)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !1657, file: !54, line: 70, baseType: !106, size: 32, offset: 1440)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1657, file: !54, line: 71, baseType: !1682, size: 64, offset: 1472)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 64)
!1683 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !54, line: 71, flags: DIFlagFwdDecl)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !1657, file: !54, line: 72, baseType: !1685, size: 64, offset: 1536)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64)
!1686 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !54, line: 59, baseType: !1687)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !54, line: 57, size: 8192, elements: !1688)
!1688 = !{!1689}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1687, file: !54, line: 58, baseType: !1358, size: 8192)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !1653, file: !13, line: 180, baseType: !1656, size: 1600, offset: 1600)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !1653, file: !13, line: 180, baseType: !1656, size: 1600, offset: 3200)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !1653, file: !13, line: 180, baseType: !1656, size: 1600, offset: 4800)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !1653, file: !13, line: 180, baseType: !1656, size: 1600, offset: 6400)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !1653, file: !13, line: 181, baseType: !106, size: 32, offset: 8000)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !1653, file: !13, line: 181, baseType: !106, size: 32, offset: 8032)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !1653, file: !13, line: 181, baseType: !106, size: 32, offset: 8064)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !1653, file: !13, line: 181, baseType: !106, size: 32, offset: 8096)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !1653, file: !13, line: 181, baseType: !106, size: 32, offset: 8128)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !1653, file: !13, line: 182, baseType: !106, size: 32, offset: 8160)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !1653, file: !13, line: 183, baseType: !106, size: 32, offset: 8192)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !1653, file: !13, line: 184, baseType: !1702, size: 64, offset: 8256)
!1702 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !1703, line: 124, baseType: !1704)
!1703 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64)
!1705 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !1706, line: 118, flags: DIFlagFwdDecl)
!1706 = !DIFile(filename: "blender/source/blender/blenlib/BLI_fileops.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !1653, file: !13, line: 185, baseType: !1708, size: 64, offset: 8320)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 64)
!1709 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !13, line: 97, flags: DIFlagFwdDecl)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1653, file: !13, line: 186, baseType: !1711, size: 32, offset: 8384)
!1711 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !13, line: 132, baseType: !12)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !1653, file: !13, line: 187, baseType: !208, size: 32, offset: 8416)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !1653, file: !13, line: 188, baseType: !1714, size: 32, offset: 8448)
!1714 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !13, line: 175, baseType: !18)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !1653, file: !13, line: 189, baseType: !106, size: 32, offset: 8480)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1653, file: !13, line: 190, baseType: !1521, size: 64, offset: 8512)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !1653, file: !13, line: 193, baseType: !1359, size: 8, offset: 8576)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !1653, file: !13, line: 196, baseType: !1719, size: 64, offset: 8640)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!1720 = !DISubroutineType(types: !1721)
!1721 = !{null, !1722}
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !13, line: 177, baseType: !1653)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !1653, file: !13, line: 199, baseType: !1725, size: 64, offset: 8704)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = !DISubroutineType(types: !1727)
!1727 = !{null, !1722, !826}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !1653, file: !13, line: 202, baseType: !1719, size: 64, offset: 8768)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !1653, file: !13, line: 207, baseType: !1730, size: 64, offset: 8832)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = !DISubroutineType(types: !1732)
!1732 = !{!106, !1722}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !1653, file: !13, line: 208, baseType: !1730, size: 64, offset: 8896)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !1653, file: !13, line: 209, baseType: !1730, size: 64, offset: 8960)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !1653, file: !13, line: 210, baseType: !1730, size: 64, offset: 9024)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !1653, file: !13, line: 211, baseType: !1730, size: 64, offset: 9088)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !1653, file: !13, line: 218, baseType: !1738, size: 64, offset: 9152)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64)
!1739 = !DISubroutineType(types: !1740)
!1740 = !{null, !1722, !106, !1741}
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !1743, line: 65, size: 160, elements: !1744)
!1743 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1744 = !{!1745, !1746, !1748, !1749}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1742, file: !1743, line: 66, baseType: !471, size: 96)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1742, file: !1743, line: 67, baseType: !1747, size: 48, offset: 96)
!1747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !219, size: 48, elements: !472)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1742, file: !1743, line: 68, baseType: !1359, size: 8, offset: 144)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !1742, file: !1743, line: 68, baseType: !1359, size: 8, offset: 152)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !1653, file: !13, line: 219, baseType: !1751, size: 64, offset: 9216)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!1752 = !DISubroutineType(types: !1753)
!1753 = !{null, !1722, !106, !1754}
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !1743, line: 48, size: 96, elements: !1756)
!1756 = !{!1757, !1758, !1759, !1760, !1761}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1755, file: !1743, line: 49, baseType: !5, size: 32)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1755, file: !1743, line: 49, baseType: !5, size: 32, offset: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !1755, file: !1743, line: 50, baseType: !1359, size: 8, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !1755, file: !1743, line: 50, baseType: !1359, size: 8, offset: 72)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1755, file: !1743, line: 51, baseType: !219, size: 16, offset: 80)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !1653, file: !13, line: 220, baseType: !1763, size: 64, offset: 9280)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 64)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{null, !1722, !106, !1766}
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 64)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !1743, line: 42, size: 160, elements: !1768)
!1768 = !{!1769, !1770, !1771, !1772, !1773, !1774, !1775}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1767, file: !1743, line: 43, baseType: !5, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1767, file: !1743, line: 43, baseType: !5, size: 32, offset: 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1767, file: !1743, line: 43, baseType: !5, size: 32, offset: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1767, file: !1743, line: 43, baseType: !5, size: 32, offset: 96)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1767, file: !1743, line: 44, baseType: !219, size: 16, offset: 128)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !1767, file: !1743, line: 45, baseType: !1359, size: 8, offset: 144)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1767, file: !1743, line: 45, baseType: !1359, size: 8, offset: 152)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !1653, file: !13, line: 227, baseType: !1777, size: 64, offset: 9344)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64)
!1778 = !DISubroutineType(types: !1779)
!1779 = !{!1741, !1722}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !1653, file: !13, line: 228, baseType: !1781, size: 64, offset: 9408)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 64)
!1782 = !DISubroutineType(types: !1783)
!1783 = !{!1754, !1722}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !1653, file: !13, line: 229, baseType: !1785, size: 64, offset: 9472)
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1786, size: 64)
!1786 = !DISubroutineType(types: !1787)
!1787 = !{!1766, !1722}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !1653, file: !13, line: 230, baseType: !1789, size: 64, offset: 9536)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64)
!1790 = !DISubroutineType(types: !1791)
!1791 = !{!1792, !1722}
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !1743, line: 88, size: 64, elements: !1794)
!1794 = !{!1795, !1796}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !1793, file: !1743, line: 89, baseType: !5, size: 32)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1793, file: !1743, line: 90, baseType: !5, size: 32, offset: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !1653, file: !13, line: 231, baseType: !1798, size: 64, offset: 9600)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{!1801, !1722}
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !1743, line: 79, size: 96, elements: !1803)
!1803 = !{!1804, !1805, !1806, !1807, !1808}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !1802, file: !1743, line: 81, baseType: !106, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !1802, file: !1743, line: 82, baseType: !106, size: 32, offset: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1802, file: !1743, line: 83, baseType: !219, size: 16, offset: 64)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1802, file: !1743, line: 84, baseType: !1359, size: 8, offset: 80)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1802, file: !1743, line: 84, baseType: !1359, size: 8, offset: 88)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !1653, file: !13, line: 236, baseType: !1810, size: 64, offset: 9664)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!1811 = !DISubroutineType(types: !1812)
!1812 = !{null, !1722, !1741}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !1653, file: !13, line: 237, baseType: !1814, size: 64, offset: 9728)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1815 = !DISubroutineType(types: !1816)
!1816 = !{null, !1722, !1754}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !1653, file: !13, line: 238, baseType: !1818, size: 64, offset: 9792)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1819 = !DISubroutineType(types: !1820)
!1820 = !{null, !1722, !1766}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !1653, file: !13, line: 239, baseType: !1822, size: 64, offset: 9856)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 64)
!1823 = !DISubroutineType(types: !1824)
!1824 = !{null, !1722, !1792}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !1653, file: !13, line: 240, baseType: !1826, size: 64, offset: 9920)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!1827 = !DISubroutineType(types: !1828)
!1828 = !{null, !1722, !1801}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !1653, file: !13, line: 245, baseType: !1777, size: 64, offset: 9984)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !1653, file: !13, line: 246, baseType: !1781, size: 64, offset: 10048)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !1653, file: !13, line: 247, baseType: !1785, size: 64, offset: 10112)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !1653, file: !13, line: 248, baseType: !1789, size: 64, offset: 10176)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !1653, file: !13, line: 249, baseType: !1798, size: 64, offset: 10240)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !1653, file: !13, line: 255, baseType: !1835, size: 64, offset: 10304)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64)
!1836 = !DISubroutineType(types: !1837)
!1837 = !{!207, !1722, !106, !106}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !1653, file: !13, line: 256, baseType: !1835, size: 64, offset: 10368)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !1653, file: !13, line: 257, baseType: !1835, size: 64, offset: 10432)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !1653, file: !13, line: 258, baseType: !1835, size: 64, offset: 10496)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !1653, file: !13, line: 264, baseType: !1842, size: 64, offset: 10560)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64)
!1843 = !DISubroutineType(types: !1844)
!1844 = !{!207, !1722, !106}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !1653, file: !13, line: 265, baseType: !1842, size: 64, offset: 10624)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !1653, file: !13, line: 266, baseType: !1842, size: 64, offset: 10688)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !1653, file: !13, line: 267, baseType: !1842, size: 64, offset: 10752)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !1653, file: !13, line: 268, baseType: !1842, size: 64, offset: 10816)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !1653, file: !13, line: 272, baseType: !1850, size: 64, offset: 10880)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 64)
!1851 = !DISubroutineType(types: !1852)
!1852 = !{!1853, !1722}
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !1653, file: !13, line: 273, baseType: !1850, size: 64, offset: 10944)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !1653, file: !13, line: 274, baseType: !1850, size: 64, offset: 11008)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !1653, file: !13, line: 275, baseType: !1850, size: 64, offset: 11072)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !1653, file: !13, line: 276, baseType: !1850, size: 64, offset: 11136)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !1653, file: !13, line: 279, baseType: !1859, size: 64, offset: 11200)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = !DISubroutineType(types: !1861)
!1861 = !{null, !1722, !106, !1853, !106}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !1653, file: !13, line: 280, baseType: !1859, size: 64, offset: 11264)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !1653, file: !13, line: 281, baseType: !1859, size: 64, offset: 11328)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !1653, file: !13, line: 284, baseType: !1730, size: 64, offset: 11392)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !1653, file: !13, line: 285, baseType: !1730, size: 64, offset: 11456)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !1653, file: !13, line: 286, baseType: !1867, size: 64, offset: 11520)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DISubroutineType(types: !1869)
!1869 = !{!1870, !1722}
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 64)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 64)
!1872 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !13, line: 82, flags: DIFlagFwdDecl)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !1653, file: !13, line: 287, baseType: !1874, size: 64, offset: 11584)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{!1877, !1722}
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !13, line: 120, baseType: !1879)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !13, line: 117, size: 256, elements: !1880)
!1880 = !{!1881, !1883}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1879, file: !13, line: 118, baseType: !1882, size: 128)
!1882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 128, elements: !1538)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !1879, file: !13, line: 119, baseType: !1882, size: 128, offset: 128)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !1653, file: !13, line: 288, baseType: !1885, size: 64, offset: 11648)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64)
!1886 = !DISubroutineType(types: !1887)
!1887 = !{!228, !1722}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !1653, file: !13, line: 289, baseType: !1889, size: 64, offset: 11712)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!1890 = !DISubroutineType(types: !1891)
!1891 = !{null, !1722, !1892}
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1893 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !13, line: 83, flags: DIFlagFwdDecl)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !1653, file: !13, line: 290, baseType: !1895, size: 64, offset: 11776)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64)
!1896 = !DISubroutineType(types: !1897)
!1897 = !{!1898, !1722}
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64)
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !13, line: 126, baseType: !1900)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !13, line: 123, size: 32, elements: !1901)
!1901 = !{!1902, !1903}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1900, file: !13, line: 124, baseType: !219, size: 16)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1900, file: !13, line: 125, baseType: !1359, size: 8, offset: 16)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !1653, file: !13, line: 291, baseType: !1905, size: 64, offset: 11840)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 64)
!1906 = !DISubroutineType(types: !1907)
!1907 = !{!1908, !1722}
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !1653, file: !13, line: 299, baseType: !1910, size: 64, offset: 11904)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!1911 = !DISubroutineType(types: !1912)
!1912 = !{null, !1722, !1913, !207, !1918}
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 64)
!1914 = !DISubroutineType(types: !1915)
!1915 = !{null, !207, !106, !825, !825, !1916}
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64)
!1917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !219)
!1918 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !13, line: 162, baseType: !23)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !1653, file: !13, line: 309, baseType: !1920, size: 64, offset: 11968)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = !DISubroutineType(types: !1922)
!1922 = !{null, !1722, !1923, !207}
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = !DISubroutineType(types: !1925)
!1925 = !{null, !207, !106, !825, !825}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !1653, file: !13, line: 317, baseType: !1927, size: 64, offset: 12032)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 64)
!1928 = !DISubroutineType(types: !1929)
!1929 = !{null, !1722, !1930, !207, !1918}
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!1931 = !DISubroutineType(types: !1932)
!1932 = !{null, !207, !106, !106, !825, !825}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !1653, file: !13, line: 327, baseType: !1934, size: 64, offset: 12096)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = !DISubroutineType(types: !1936)
!1936 = !{null, !1722, !1923, !207, !1918}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !1653, file: !13, line: 337, baseType: !1938, size: 64, offset: 12160)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{null, !1722, !209, !209}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !1653, file: !13, line: 344, baseType: !1942, size: 64, offset: 12224)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = !DISubroutineType(types: !1944)
!1944 = !{null, !1722, !106, !209}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !1653, file: !13, line: 347, baseType: !1946, size: 64, offset: 12288)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{null, !1722, !1949}
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !1653, file: !13, line: 350, baseType: !1942, size: 64, offset: 12352)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !1653, file: !13, line: 351, baseType: !1942, size: 64, offset: 12416)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !1653, file: !13, line: 355, baseType: !1953, size: 64, offset: 12480)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = !DISubroutineType(types: !1955)
!1955 = !{!1956, !1405, !1722}
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64)
!1957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1958)
!1958 = !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !13, line: 355, flags: DIFlagFwdDecl)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !1653, file: !13, line: 359, baseType: !1960, size: 64, offset: 12544)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 64)
!1961 = !DISubroutineType(types: !1962)
!1962 = !{!1963, !1405, !1722}
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!1964 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !13, line: 100, flags: DIFlagFwdDecl)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !1653, file: !13, line: 364, baseType: !1719, size: 64, offset: 12608)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !1653, file: !13, line: 367, baseType: !1719, size: 64, offset: 12672)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !1653, file: !13, line: 373, baseType: !1968, size: 64, offset: 12736)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64)
!1969 = !DISubroutineType(types: !1970)
!1970 = !{null, !1722, !374, !374}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !1653, file: !13, line: 376, baseType: !1719, size: 64, offset: 12800)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !1653, file: !13, line: 385, baseType: !1973, size: 64, offset: 12864)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 64)
!1974 = !DISubroutineType(types: !1975)
!1975 = !{null, !1722, !1976, !374, !1977}
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1977 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !13, line: 146, baseType: !1978)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = !DISubroutineType(types: !1980)
!1980 = !{!106, !106, !207}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !1653, file: !13, line: 391, baseType: !1982, size: 64, offset: 12928)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 64)
!1983 = !DISubroutineType(types: !1984)
!1984 = !{null, !1722, !1985, !2082, !207, !2086}
!1985 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !13, line: 150, baseType: !1986)
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 64)
!1987 = !DISubroutineType(types: !1988)
!1988 = !{!1989, !1990, !950, !106}
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !13, line: 143, baseType: !27)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !1743, line: 160, size: 384, elements: !1992)
!1992 = !{!1993, !1996, !2077, !2078, !2079, !2080, !2081}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !1991, file: !1743, line: 161, baseType: !1994, size: 256)
!1994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 256, elements: !1995)
!1995 = !{!1539, !992}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !1991, file: !1743, line: 162, baseType: !1997, size: 64, offset: 256)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !1999, line: 77, size: 15424, elements: !2000)
!1999 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2000 = !{!2001, !2002, !2003, !2006, !2009, !2012, !2015, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2066, !2067, !2071}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1998, file: !1999, line: 78, baseType: !1339, size: 960)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1998, file: !1999, line: 80, baseType: !1358, size: 8192, offset: 960)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1998, file: !1999, line: 82, baseType: !2004, size: 64, offset: 9152)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !1999, line: 43, flags: DIFlagFwdDecl)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1998, file: !1999, line: 83, baseType: !2007, size: 64, offset: 9216)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 64)
!2008 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !1340, line: 46, flags: DIFlagFwdDecl)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1998, file: !1999, line: 86, baseType: !2010, size: 64, offset: 9280)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 64)
!2011 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !1999, line: 41, flags: DIFlagFwdDecl)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1998, file: !1999, line: 87, baseType: !2013, size: 64, offset: 9344)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1999, line: 44, flags: DIFlagFwdDecl)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1998, file: !1999, line: 89, baseType: !2016, size: 512, offset: 9408)
!2016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2013, size: 512, elements: !2017)
!2017 = !{!1434}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1998, file: !1999, line: 90, baseType: !219, size: 16, offset: 9920)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1998, file: !1999, line: 90, baseType: !219, size: 16, offset: 9936)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1998, file: !1999, line: 92, baseType: !219, size: 16, offset: 9952)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1998, file: !1999, line: 92, baseType: !219, size: 16, offset: 9968)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1998, file: !1999, line: 93, baseType: !219, size: 16, offset: 9984)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1998, file: !1999, line: 93, baseType: !219, size: 16, offset: 10000)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1998, file: !1999, line: 94, baseType: !106, size: 32, offset: 10016)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1998, file: !1999, line: 97, baseType: !219, size: 16, offset: 10048)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1998, file: !1999, line: 97, baseType: !219, size: 16, offset: 10064)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1998, file: !1999, line: 98, baseType: !219, size: 16, offset: 10080)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1998, file: !1999, line: 98, baseType: !219, size: 16, offset: 10096)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1998, file: !1999, line: 99, baseType: !219, size: 16, offset: 10112)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1998, file: !1999, line: 99, baseType: !219, size: 16, offset: 10128)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1998, file: !1999, line: 100, baseType: !5, size: 32, offset: 10144)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1998, file: !1999, line: 101, baseType: !232, size: 64, offset: 10176)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1998, file: !1999, line: 103, baseType: !1365, size: 64, offset: 10240)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1998, file: !1999, line: 104, baseType: !2035, size: 64, offset: 10304)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !1340, line: 159, size: 448, elements: !2037)
!2037 = !{!2038, !2040, !2041, !2043, !2044, !2046}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2036, file: !1340, line: 161, baseType: !2039, size: 64)
!2039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !991)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !2036, file: !1340, line: 162, baseType: !2039, size: 64, offset: 64)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2036, file: !1340, line: 163, baseType: !2042, size: 32, offset: 128)
!2042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !219, size: 32, elements: !991)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !2036, file: !1340, line: 164, baseType: !2042, size: 32, offset: 160)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !2036, file: !1340, line: 165, baseType: !2045, size: 128, offset: 192)
!2045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !232, size: 128, elements: !991)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !2036, file: !1340, line: 166, baseType: !2047, size: 128, offset: 320)
!2047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2007, size: 128, elements: !991)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1998, file: !1999, line: 107, baseType: !208, size: 32, offset: 10368)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1998, file: !1999, line: 108, baseType: !106, size: 32, offset: 10400)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1998, file: !1999, line: 109, baseType: !219, size: 16, offset: 10432)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1998, file: !1999, line: 110, baseType: !219, size: 16, offset: 10448)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1998, file: !1999, line: 113, baseType: !106, size: 32, offset: 10464)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1998, file: !1999, line: 113, baseType: !106, size: 32, offset: 10496)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1998, file: !1999, line: 114, baseType: !1359, size: 8, offset: 10528)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1998, file: !1999, line: 114, baseType: !1359, size: 8, offset: 10536)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1998, file: !1999, line: 115, baseType: !219, size: 16, offset: 10544)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1998, file: !1999, line: 116, baseType: !1537, size: 128, offset: 10560)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1998, file: !1999, line: 119, baseType: !208, size: 32, offset: 10688)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1998, file: !1999, line: 119, baseType: !208, size: 32, offset: 10720)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1998, file: !1999, line: 122, baseType: !2061, size: 512, offset: 10752)
!2061 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !2062, line: 182, baseType: !2063)
!2062 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !2062, line: 180, size: 512, elements: !2064)
!2064 = !{!2065}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2063, file: !2062, line: 181, baseType: !1387, size: 512)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1998, file: !1999, line: 123, baseType: !1359, size: 8, offset: 11264)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1998, file: !1999, line: 125, baseType: !2068, size: 56, offset: 11272)
!2068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 56, elements: !2069)
!2069 = !{!2070}
!2070 = !DISubrange(count: 7)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1998, file: !1999, line: 126, baseType: !2072, size: 4096, offset: 11328)
!2072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2073, size: 4096, elements: !2017)
!2073 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !1999, line: 69, baseType: !2074)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !1999, line: 67, size: 512, elements: !2075)
!2075 = !{!2076}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2074, file: !1999, line: 68, baseType: !1387, size: 512)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1991, file: !1743, line: 163, baseType: !1359, size: 8, offset: 320)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !1991, file: !1743, line: 163, baseType: !1359, size: 8, offset: 328)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1991, file: !1743, line: 164, baseType: !219, size: 16, offset: 336)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1991, file: !1743, line: 164, baseType: !219, size: 16, offset: 352)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !1991, file: !1743, line: 164, baseType: !219, size: 16, offset: 368)
!2082 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !13, line: 147, baseType: !2083)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = !DISubroutineType(types: !2085)
!2085 = !{!106, !207, !106, !106}
!2086 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !13, line: 157, baseType: !33)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !1653, file: !13, line: 400, baseType: !2088, size: 64, offset: 12992)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = !DISubroutineType(types: !2090)
!2090 = !{null, !1722, !1977}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !1653, file: !13, line: 415, baseType: !2092, size: 64, offset: 13056)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64)
!2093 = !DISubroutineType(types: !2094)
!2094 = !{null, !1722, !2095, !1977, !2082, !207, !2086}
!2095 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !13, line: 149, baseType: !2096)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = !DISubroutineType(types: !2098)
!2098 = !{!1989, !207, !106}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !1653, file: !13, line: 425, baseType: !2100, size: 64, offset: 13120)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{null, !1722, !2095, !2082, !207, !2086}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !1653, file: !13, line: 435, baseType: !2104, size: 64, offset: 13184)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64)
!2105 = !DISubroutineType(types: !2106)
!2106 = !{null, !1722, !1977, !2095, !207}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !1653, file: !13, line: 444, baseType: !2108, size: 64, offset: 13248)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!2109 = !DISubroutineType(types: !2110)
!2110 = !{null, !1722, !2095, !207}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !1653, file: !13, line: 455, baseType: !2112, size: 64, offset: 13312)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = !DISubroutineType(types: !2114)
!2114 = !{null, !1722, !2095, !2115, !207}
!2115 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !13, line: 148, baseType: !2116)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = !DISubroutineType(types: !2118)
!2118 = !{null, !207, !106, !208}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !1653, file: !13, line: 464, baseType: !2120, size: 64, offset: 13376)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64)
!2121 = !DISubroutineType(types: !2122)
!2122 = !{null, !1722, !2123, !2126, !207}
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!2124 = !DISubroutineType(types: !2125)
!2125 = !{null, !207, !106, !207}
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DISubroutineType(types: !2128)
!2128 = !{!374, !207, !106}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1653, file: !13, line: 470, baseType: !1719, size: 64, offset: 13440)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !1406, file: !40, line: 277, baseType: !1652, size: 64, offset: 10368)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !1406, file: !40, line: 278, baseType: !2132, size: 64, offset: 10432)
!2132 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !2133, line: 27, baseType: !2134)
!2133 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!2134 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !2135, line: 45, baseType: !2136)
!2135 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2136 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1406, file: !40, line: 279, baseType: !2132, size: 64, offset: 10496)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1406, file: !40, line: 280, baseType: !5, size: 32, offset: 10560)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !1406, file: !40, line: 281, baseType: !5, size: 32, offset: 10592)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !1406, file: !40, line: 283, baseType: !283, size: 128, offset: 10624)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !1406, file: !40, line: 284, baseType: !283, size: 128, offset: 10752)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !1406, file: !40, line: 285, baseType: !282, size: 64, offset: 10880)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !1406, file: !40, line: 287, baseType: !2144, size: 64, offset: 10944)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !40, line: 59, flags: DIFlagFwdDecl)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !1406, file: !40, line: 288, baseType: !2147, size: 64, offset: 11008)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 64)
!2148 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !40, line: 288, flags: DIFlagFwdDecl)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !1406, file: !40, line: 290, baseType: !990, size: 64, offset: 11072)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1406, file: !40, line: 291, baseType: !2151, size: 64, offset: 11136)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !1999, line: 65, baseType: !2153)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !1999, line: 50, size: 320, elements: !2154)
!2154 = !{!2155, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2153, file: !1999, line: 51, baseType: !2156, size: 64)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2153, file: !1999, line: 53, baseType: !106, size: 32, offset: 64)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2153, file: !1999, line: 54, baseType: !106, size: 32, offset: 96)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2153, file: !1999, line: 55, baseType: !106, size: 32, offset: 128)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2153, file: !1999, line: 55, baseType: !106, size: 32, offset: 160)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !2153, file: !1999, line: 56, baseType: !1359, size: 8, offset: 192)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !2153, file: !1999, line: 56, baseType: !1359, size: 8, offset: 200)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2153, file: !1999, line: 57, baseType: !1359, size: 8, offset: 208)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2153, file: !1999, line: 57, baseType: !1359, size: 8, offset: 216)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !2153, file: !1999, line: 59, baseType: !219, size: 16, offset: 224)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !2153, file: !1999, line: 59, baseType: !219, size: 16, offset: 240)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2153, file: !1999, line: 59, baseType: !219, size: 16, offset: 256)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2153, file: !1999, line: 61, baseType: !219, size: 16, offset: 272)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2153, file: !1999, line: 63, baseType: !106, size: 32, offset: 288)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !1406, file: !40, line: 293, baseType: !283, size: 128, offset: 11200)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !1406, file: !40, line: 294, baseType: !2172, size: 64, offset: 11328)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!2173 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !40, line: 113, baseType: !2174)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !40, line: 108, size: 256, elements: !2175)
!2175 = !{!2176, !2178, !2179, !2180, !2181}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2174, file: !40, line: 109, baseType: !2177, size: 64)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2174, file: !40, line: 109, baseType: !2177, size: 64, offset: 64)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2174, file: !40, line: 110, baseType: !1405, size: 64, offset: 128)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2174, file: !40, line: 111, baseType: !106, size: 32, offset: 192)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !2174, file: !40, line: 112, baseType: !208, size: 32, offset: 224)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1336, file: !1335, line: 1221, baseType: !2183, size: 64, offset: 1088)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!2184 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !1335, line: 52, flags: DIFlagFwdDecl)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1336, file: !1335, line: 1223, baseType: !2156, size: 64, offset: 1152)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1336, file: !1335, line: 1225, baseType: !283, size: 128, offset: 1216)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !1336, file: !1335, line: 1226, baseType: !2188, size: 64, offset: 1344)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !1335, line: 69, size: 320, elements: !2190)
!2190 = !{!2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2189, file: !1335, line: 70, baseType: !2188, size: 64)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2189, file: !1335, line: 70, baseType: !2188, size: 64, offset: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2189, file: !1335, line: 71, baseType: !5, size: 32, offset: 128)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !2189, file: !1335, line: 71, baseType: !5, size: 32, offset: 160)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2189, file: !1335, line: 72, baseType: !106, size: 32, offset: 192)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !2189, file: !1335, line: 73, baseType: !219, size: 16, offset: 224)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !2189, file: !1335, line: 73, baseType: !219, size: 16, offset: 240)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2189, file: !1335, line: 74, baseType: !1405, size: 64, offset: 256)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !1336, file: !1335, line: 1227, baseType: !1405, size: 64, offset: 1408)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1336, file: !1335, line: 1229, baseType: !471, size: 96, offset: 1472)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !1336, file: !1335, line: 1230, baseType: !471, size: 96, offset: 1568)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !1336, file: !1335, line: 1231, baseType: !471, size: 96, offset: 1664)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !1336, file: !1335, line: 1231, baseType: !471, size: 96, offset: 1760)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1336, file: !1335, line: 1233, baseType: !5, size: 32, offset: 1856)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !1336, file: !1335, line: 1234, baseType: !106, size: 32, offset: 1888)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !1336, file: !1335, line: 1235, baseType: !5, size: 32, offset: 1920)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1336, file: !1335, line: 1237, baseType: !219, size: 16, offset: 1952)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1336, file: !1335, line: 1239, baseType: !1359, size: 8, offset: 1968)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1336, file: !1335, line: 1240, baseType: !2210, size: 8, offset: 1976)
!2210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 8, elements: !2211)
!2211 = !{!2212}
!2212 = !DISubrange(count: 1)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1336, file: !1335, line: 1242, baseType: !2214, size: 64, offset: 1984)
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2215, size: 64)
!2215 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !1335, line: 57, flags: DIFlagFwdDecl)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !1336, file: !1335, line: 1244, baseType: !2217, size: 64, offset: 2048)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64)
!2218 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1335, line: 59, flags: DIFlagFwdDecl)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !1336, file: !1335, line: 1246, baseType: !2220, size: 64, offset: 2112)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 64)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !1335, line: 1067, size: 5184, elements: !2222)
!2222 = !{!2223, !2261, !2262, !2277, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2299, !2315, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2426}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !2221, file: !1335, line: 1068, baseType: !2224, size: 64)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 64)
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !1335, line: 934, baseType: !2226)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !1335, line: 925, size: 576, elements: !2227)
!2227 = !{!2228, !2244, !2245, !2246, !2247, !2248, !2260}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2226, file: !1335, line: 926, baseType: !2229, size: 320)
!2229 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !1335, line: 830, baseType: !2230)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !1335, line: 813, size: 320, elements: !2231)
!2231 = !{!2232, !2235, !2238, !2239, !2241, !2242, !2243}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2230, file: !1335, line: 814, baseType: !2233, size: 64)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 64)
!2234 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1335, line: 51, flags: DIFlagFwdDecl)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !2230, file: !1335, line: 815, baseType: !2236, size: 64, offset: 64)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 64)
!2237 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1335, line: 815, flags: DIFlagFwdDecl)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !2230, file: !1335, line: 818, baseType: !207, size: 64, offset: 128)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !2230, file: !1335, line: 819, baseType: !2240, size: 32, offset: 192)
!2240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 32, elements: !1538)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2230, file: !1335, line: 822, baseType: !106, size: 32, offset: 224)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !2230, file: !1335, line: 826, baseType: !106, size: 32, offset: 256)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !2230, file: !1335, line: 829, baseType: !106, size: 32, offset: 288)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2226, file: !1335, line: 928, baseType: !219, size: 16, offset: 320)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2226, file: !1335, line: 928, baseType: !219, size: 16, offset: 336)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2226, file: !1335, line: 929, baseType: !106, size: 32, offset: 352)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !2226, file: !1335, line: 930, baseType: !232, size: 64, offset: 384)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !2226, file: !1335, line: 931, baseType: !2249, size: 64, offset: 448)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 64)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !1743, line: 59, size: 128, elements: !2251)
!2251 = !{!2252, !2258, !2259}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !2250, file: !1743, line: 60, baseType: !2253, size: 64)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 64)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !1743, line: 54, size: 64, elements: !2255)
!2255 = !{!2256, !2257}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !2254, file: !1743, line: 55, baseType: !106, size: 32)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2254, file: !1743, line: 56, baseType: !208, size: 32, offset: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !2250, file: !1743, line: 61, baseType: !106, size: 32, offset: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2250, file: !1743, line: 62, baseType: !106, size: 32, offset: 96)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2226, file: !1335, line: 933, baseType: !207, size: 64, offset: 512)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !2221, file: !1335, line: 1069, baseType: !2224, size: 64, offset: 64)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !2221, file: !1335, line: 1070, baseType: !2263, size: 64, offset: 128)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !1335, line: 916, baseType: !2265)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !1335, line: 891, size: 704, elements: !2266)
!2266 = !{!2267, !2268, !2269, !2271, !2272, !2273, !2274, !2275, !2276}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2265, file: !1335, line: 892, baseType: !2229, size: 320)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2265, file: !1335, line: 896, baseType: !106, size: 32, offset: 320)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !2265, file: !1335, line: 900, baseType: !2270, size: 96, offset: 352)
!2270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 96, elements: !472)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !2265, file: !1335, line: 903, baseType: !208, size: 32, offset: 448)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !2265, file: !1335, line: 906, baseType: !106, size: 32, offset: 480)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !2265, file: !1335, line: 909, baseType: !208, size: 32, offset: 512)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !2265, file: !1335, line: 912, baseType: !208, size: 32, offset: 544)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !2265, file: !1335, line: 914, baseType: !1405, size: 64, offset: 576)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2265, file: !1335, line: 915, baseType: !207, size: 64, offset: 640)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !2221, file: !1335, line: 1071, baseType: !2278, size: 64, offset: 192)
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 64)
!2279 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !1335, line: 920, baseType: !2280)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !1335, line: 918, size: 320, elements: !2281)
!2281 = !{!2282}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2280, file: !1335, line: 919, baseType: !2229, size: 320)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !2221, file: !1335, line: 1075, baseType: !208, size: 32, offset: 256)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !2221, file: !1335, line: 1077, baseType: !208, size: 32, offset: 288)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !2221, file: !1335, line: 1078, baseType: !208, size: 32, offset: 320)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !2221, file: !1335, line: 1079, baseType: !219, size: 16, offset: 352)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2221, file: !1335, line: 1082, baseType: !219, size: 16, offset: 368)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !2221, file: !1335, line: 1085, baseType: !1359, size: 8, offset: 384)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !2221, file: !1335, line: 1086, baseType: !1359, size: 8, offset: 392)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !2221, file: !1335, line: 1087, baseType: !1359, size: 8, offset: 400)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !2221, file: !1335, line: 1088, baseType: !1359, size: 8, offset: 408)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !2221, file: !1335, line: 1090, baseType: !208, size: 32, offset: 416)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !2221, file: !1335, line: 1093, baseType: !219, size: 16, offset: 448)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !2221, file: !1335, line: 1096, baseType: !1359, size: 8, offset: 464)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2221, file: !1335, line: 1098, baseType: !2296, size: 40, offset: 472)
!2296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 40, elements: !2297)
!2297 = !{!2298}
!2298 = !DISubrange(count: 5)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !2221, file: !1335, line: 1101, baseType: !2300, size: 832, offset: 512)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !1335, line: 836, size: 832, elements: !2301)
!2301 = !{!2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2300, file: !1335, line: 837, baseType: !2229, size: 320)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2300, file: !1335, line: 839, baseType: !219, size: 16, offset: 320)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !2300, file: !1335, line: 839, baseType: !219, size: 16, offset: 336)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !2300, file: !1335, line: 842, baseType: !219, size: 16, offset: 352)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !2300, file: !1335, line: 842, baseType: !219, size: 16, offset: 368)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !2300, file: !1335, line: 843, baseType: !2042, size: 32, offset: 384)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2300, file: !1335, line: 845, baseType: !106, size: 32, offset: 416)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2300, file: !1335, line: 847, baseType: !207, size: 64, offset: 448)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !2300, file: !1335, line: 848, baseType: !1997, size: 64, offset: 512)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2300, file: !1335, line: 849, baseType: !1997, size: 64, offset: 576)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !2300, file: !1335, line: 850, baseType: !1997, size: 64, offset: 640)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !2300, file: !1335, line: 851, baseType: !471, size: 96, offset: 704)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2300, file: !1335, line: 852, baseType: !208, size: 32, offset: 800)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2221, file: !1335, line: 1104, baseType: !2316, size: 1344, offset: 1344)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !1335, line: 867, size: 1344, elements: !2317)
!2317 = !{!2318, !2319, !2320, !2321, !2322, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2316, file: !1335, line: 868, baseType: !219, size: 16)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !2316, file: !1335, line: 869, baseType: !219, size: 16, offset: 16)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !2316, file: !1335, line: 870, baseType: !219, size: 16, offset: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !2316, file: !1335, line: 871, baseType: !219, size: 16, offset: 48)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2316, file: !1335, line: 873, baseType: !2323, size: 896, offset: 64)
!2323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2324, size: 896, elements: !2069)
!2324 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !1335, line: 864, baseType: !2325)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !1335, line: 859, size: 128, elements: !2326)
!2326 = !{!2327, !2328, !2329, !2330, !2331, !2332}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2325, file: !1335, line: 860, baseType: !219, size: 16)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2325, file: !1335, line: 861, baseType: !219, size: 16, offset: 16)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2325, file: !1335, line: 861, baseType: !219, size: 16, offset: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2325, file: !1335, line: 861, baseType: !219, size: 16, offset: 48)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2325, file: !1335, line: 862, baseType: !106, size: 32, offset: 64)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2325, file: !1335, line: 863, baseType: !208, size: 32, offset: 96)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2316, file: !1335, line: 874, baseType: !207, size: 64, offset: 960)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !2316, file: !1335, line: 876, baseType: !208, size: 32, offset: 1024)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2316, file: !1335, line: 876, baseType: !208, size: 32, offset: 1056)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2316, file: !1335, line: 878, baseType: !106, size: 32, offset: 1088)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !2316, file: !1335, line: 879, baseType: !106, size: 32, offset: 1120)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2316, file: !1335, line: 881, baseType: !106, size: 32, offset: 1152)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !2316, file: !1335, line: 881, baseType: !106, size: 32, offset: 1184)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2316, file: !1335, line: 883, baseType: !2156, size: 64, offset: 1216)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2316, file: !1335, line: 884, baseType: !1405, size: 64, offset: 1280)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !2221, file: !1335, line: 1107, baseType: !208, size: 32, offset: 2688)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !2221, file: !1335, line: 1110, baseType: !208, size: 32, offset: 2720)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !2221, file: !1335, line: 1113, baseType: !219, size: 16, offset: 2752)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !2221, file: !1335, line: 1113, baseType: !219, size: 16, offset: 2768)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !2221, file: !1335, line: 1116, baseType: !1359, size: 8, offset: 2784)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2221, file: !1335, line: 1117, baseType: !2210, size: 8, offset: 2792)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !2221, file: !1335, line: 1120, baseType: !219, size: 16, offset: 2800)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !2221, file: !1335, line: 1121, baseType: !208, size: 32, offset: 2816)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !2221, file: !1335, line: 1122, baseType: !208, size: 32, offset: 2848)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !2221, file: !1335, line: 1123, baseType: !208, size: 32, offset: 2880)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !2221, file: !1335, line: 1124, baseType: !208, size: 32, offset: 2912)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !2221, file: !1335, line: 1125, baseType: !208, size: 32, offset: 2944)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !2221, file: !1335, line: 1126, baseType: !208, size: 32, offset: 2976)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !2221, file: !1335, line: 1127, baseType: !208, size: 32, offset: 3008)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !2221, file: !1335, line: 1128, baseType: !208, size: 32, offset: 3040)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !2221, file: !1335, line: 1129, baseType: !208, size: 32, offset: 3072)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !2221, file: !1335, line: 1130, baseType: !208, size: 32, offset: 3104)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !2221, file: !1335, line: 1131, baseType: !219, size: 16, offset: 3136)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !2221, file: !1335, line: 1132, baseType: !1359, size: 8, offset: 3152)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !2221, file: !1335, line: 1133, baseType: !1359, size: 8, offset: 3160)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !2221, file: !1335, line: 1134, baseType: !2363, size: 24, offset: 3168)
!2363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 24, elements: !472)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !2221, file: !1335, line: 1135, baseType: !1359, size: 8, offset: 3192)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !2221, file: !1335, line: 1138, baseType: !1405, size: 64, offset: 3200)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !2221, file: !1335, line: 1139, baseType: !1359, size: 8, offset: 3264)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !2221, file: !1335, line: 1140, baseType: !1359, size: 8, offset: 3272)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !2221, file: !1335, line: 1141, baseType: !1359, size: 8, offset: 3280)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !2221, file: !1335, line: 1142, baseType: !1359, size: 8, offset: 3288)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !2221, file: !1335, line: 1143, baseType: !1359, size: 8, offset: 3296)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !2221, file: !1335, line: 1144, baseType: !2372, size: 64, offset: 3304)
!2372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 64, elements: !2017)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !2221, file: !1335, line: 1145, baseType: !2372, size: 64, offset: 3368)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !2221, file: !1335, line: 1148, baseType: !1359, size: 8, offset: 3432)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !2221, file: !1335, line: 1149, baseType: !1359, size: 8, offset: 3440)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !2221, file: !1335, line: 1152, baseType: !1359, size: 8, offset: 3448)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !2221, file: !1335, line: 1152, baseType: !1359, size: 8, offset: 3456)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !2221, file: !1335, line: 1153, baseType: !1359, size: 8, offset: 3464)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !2221, file: !1335, line: 1154, baseType: !219, size: 16, offset: 3472)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !2221, file: !1335, line: 1154, baseType: !219, size: 16, offset: 3488)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !2221, file: !1335, line: 1155, baseType: !219, size: 16, offset: 3504)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !2221, file: !1335, line: 1155, baseType: !219, size: 16, offset: 3520)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !2221, file: !1335, line: 1156, baseType: !1359, size: 8, offset: 3536)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !2221, file: !1335, line: 1157, baseType: !1359, size: 8, offset: 3544)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !2221, file: !1335, line: 1159, baseType: !1359, size: 8, offset: 3552)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !2221, file: !1335, line: 1160, baseType: !1359, size: 8, offset: 3560)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !2221, file: !1335, line: 1161, baseType: !1359, size: 8, offset: 3568)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !2221, file: !1335, line: 1162, baseType: !1359, size: 8, offset: 3576)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !2221, file: !1335, line: 1165, baseType: !106, size: 32, offset: 3584)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !2221, file: !1335, line: 1166, baseType: !106, size: 32, offset: 3616)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !2221, file: !1335, line: 1167, baseType: !106, size: 32, offset: 3648)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !2221, file: !1335, line: 1168, baseType: !106, size: 32, offset: 3680)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !2221, file: !1335, line: 1171, baseType: !219, size: 16, offset: 3712)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2221, file: !1335, line: 1171, baseType: !219, size: 16, offset: 3728)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !2221, file: !1335, line: 1172, baseType: !106, size: 32, offset: 3744)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !2221, file: !1335, line: 1173, baseType: !208, size: 32, offset: 3776)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !2221, file: !1335, line: 1174, baseType: !208, size: 32, offset: 3808)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !2221, file: !1335, line: 1177, baseType: !2399, size: 1024, offset: 3840)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !1335, line: 963, size: 1024, elements: !2400)
!2400 = !{!2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2424, !2425}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2399, file: !1335, line: 965, baseType: !106, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2399, file: !1335, line: 968, baseType: !208, size: 32, offset: 32)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2399, file: !1335, line: 971, baseType: !208, size: 32, offset: 64)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2399, file: !1335, line: 974, baseType: !208, size: 32, offset: 96)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2399, file: !1335, line: 977, baseType: !471, size: 96, offset: 128)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2399, file: !1335, line: 979, baseType: !471, size: 96, offset: 224)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2399, file: !1335, line: 982, baseType: !106, size: 32, offset: 320)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2399, file: !1335, line: 987, baseType: !990, size: 64, offset: 352)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2399, file: !1335, line: 989, baseType: !208, size: 32, offset: 416)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2399, file: !1335, line: 994, baseType: !106, size: 32, offset: 448)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2399, file: !1335, line: 995, baseType: !106, size: 32, offset: 480)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2399, file: !1335, line: 997, baseType: !1359, size: 8, offset: 512)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2399, file: !1335, line: 998, baseType: !2068, size: 56, offset: 520)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2399, file: !1335, line: 1000, baseType: !208, size: 32, offset: 576)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2399, file: !1335, line: 1003, baseType: !990, size: 64, offset: 608)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2399, file: !1335, line: 1006, baseType: !106, size: 32, offset: 672)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2399, file: !1335, line: 1009, baseType: !208, size: 32, offset: 704)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2399, file: !1335, line: 1012, baseType: !990, size: 64, offset: 736)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2399, file: !1335, line: 1015, baseType: !990, size: 64, offset: 800)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2399, file: !1335, line: 1018, baseType: !106, size: 32, offset: 864)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2399, file: !1335, line: 1019, baseType: !2422, size: 64, offset: 896)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 64)
!2423 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !1335, line: 63, flags: DIFlagFwdDecl)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2399, file: !1335, line: 1023, baseType: !208, size: 32, offset: 960)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2399, file: !1335, line: 1024, baseType: !106, size: 32, offset: 992)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !2221, file: !1335, line: 1179, baseType: !2427, size: 320, offset: 4864)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !1335, line: 1043, size: 320, elements: !2428)
!2428 = !{!2429, !2430, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2427, file: !1335, line: 1044, baseType: !1359, size: 8)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2427, file: !1335, line: 1045, baseType: !2431, size: 16, offset: 8)
!2431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 16, elements: !991)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2427, file: !1335, line: 1048, baseType: !1359, size: 8, offset: 24)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2427, file: !1335, line: 1049, baseType: !208, size: 32, offset: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2427, file: !1335, line: 1049, baseType: !208, size: 32, offset: 64)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2427, file: !1335, line: 1052, baseType: !208, size: 32, offset: 96)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2427, file: !1335, line: 1052, baseType: !208, size: 32, offset: 128)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2427, file: !1335, line: 1053, baseType: !1359, size: 8, offset: 160)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2427, file: !1335, line: 1054, baseType: !2363, size: 24, offset: 168)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2427, file: !1335, line: 1057, baseType: !208, size: 32, offset: 192)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2427, file: !1335, line: 1057, baseType: !208, size: 32, offset: 224)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2427, file: !1335, line: 1060, baseType: !208, size: 32, offset: 256)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2427, file: !1335, line: 1060, baseType: !208, size: 32, offset: 288)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1336, file: !1335, line: 1247, baseType: !2444, size: 64, offset: 2176)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !1335, line: 60, flags: DIFlagFwdDecl)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1336, file: !1335, line: 1251, baseType: !2447, size: 31872, offset: 2240)
!2447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !1335, line: 403, size: 31872, elements: !2448)
!2448 = !{!2449, !2532, !2552, !2561, !2581, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2721, !2722, !2723, !2727, !2743, !2744}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2447, file: !1335, line: 404, baseType: !2450, size: 1984)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !1335, line: 259, size: 1984, elements: !2451)
!2451 = !{!2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2469, !2527}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2450, file: !1335, line: 260, baseType: !1359, size: 8)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2450, file: !1335, line: 263, baseType: !1359, size: 8, offset: 8)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2450, file: !1335, line: 266, baseType: !1359, size: 8, offset: 16)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2450, file: !1335, line: 267, baseType: !1359, size: 8, offset: 24)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2450, file: !1335, line: 269, baseType: !1359, size: 8, offset: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2450, file: !1335, line: 270, baseType: !1359, size: 8, offset: 40)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2450, file: !1335, line: 276, baseType: !1359, size: 8, offset: 48)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2450, file: !1335, line: 279, baseType: !1359, size: 8, offset: 56)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2450, file: !1335, line: 280, baseType: !219, size: 16, offset: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2450, file: !1335, line: 280, baseType: !219, size: 16, offset: 80)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2450, file: !1335, line: 281, baseType: !208, size: 32, offset: 96)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2450, file: !1335, line: 284, baseType: !1359, size: 8, offset: 128)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2450, file: !1335, line: 285, baseType: !1359, size: 8, offset: 136)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2450, file: !1335, line: 287, baseType: !2466, size: 48, offset: 144)
!2466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 48, elements: !2467)
!2467 = !{!2468}
!2468 = !DISubrange(count: 6)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2450, file: !1335, line: 290, baseType: !2470, size: 1280, offset: 192)
!2470 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !2062, line: 174, baseType: !2471)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !2062, line: 166, size: 1280, elements: !2472)
!2472 = !{!2473, !2474, !2475, !2476, !2477, !2478, !2479, !2526}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2471, file: !2062, line: 167, baseType: !106, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2471, file: !2062, line: 167, baseType: !106, size: 32, offset: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2471, file: !2062, line: 168, baseType: !1387, size: 512, offset: 64)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2471, file: !2062, line: 169, baseType: !1387, size: 512, offset: 576)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2471, file: !2062, line: 170, baseType: !208, size: 32, offset: 1088)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2471, file: !2062, line: 171, baseType: !208, size: 32, offset: 1120)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2471, file: !2062, line: 172, baseType: !2480, size: 64, offset: 1152)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 64)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !2062, line: 72, size: 3072, elements: !2482)
!2482 = !{!2483, !2484, !2485, !2486, !2487, !2496, !2497, !2522, !2523, !2524, !2525}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2481, file: !2062, line: 73, baseType: !106, size: 32)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2481, file: !2062, line: 73, baseType: !106, size: 32, offset: 32)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !2481, file: !2062, line: 74, baseType: !106, size: 32, offset: 64)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !2481, file: !2062, line: 75, baseType: !106, size: 32, offset: 96)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !2481, file: !2062, line: 77, baseType: !2488, size: 128, offset: 128)
!2488 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !2489, line: 95, baseType: !2490)
!2489 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !2489, line: 92, size: 128, elements: !2491)
!2491 = !{!2492, !2493, !2494, !2495}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2490, file: !2489, line: 93, baseType: !208, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2490, file: !2489, line: 93, baseType: !208, size: 32, offset: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2490, file: !2489, line: 94, baseType: !208, size: 32, offset: 64)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2490, file: !2489, line: 94, baseType: !208, size: 32, offset: 96)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !2481, file: !2062, line: 77, baseType: !2488, size: 128, offset: 256)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !2481, file: !2062, line: 79, baseType: !2498, size: 2304, offset: 384)
!2498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2499, size: 2304, elements: !1538)
!2499 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !2062, line: 67, baseType: !2500)
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !2062, line: 55, size: 576, elements: !2501)
!2501 = !{!2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2518, !2519, !2520, !2521}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2500, file: !2062, line: 56, baseType: !219, size: 16)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2500, file: !2062, line: 56, baseType: !219, size: 16, offset: 16)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2500, file: !2062, line: 58, baseType: !208, size: 32, offset: 32)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !2500, file: !2062, line: 59, baseType: !208, size: 32, offset: 64)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !2500, file: !2062, line: 59, baseType: !208, size: 32, offset: 96)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !2500, file: !2062, line: 60, baseType: !990, size: 64, offset: 128)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !2500, file: !2062, line: 60, baseType: !990, size: 64, offset: 192)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2500, file: !2062, line: 61, baseType: !2510, size: 64, offset: 256)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 64)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !2062, line: 47, baseType: !2512)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !2062, line: 44, size: 96, elements: !2513)
!2513 = !{!2514, !2515, !2516, !2517}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2512, file: !2062, line: 45, baseType: !208, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2512, file: !2062, line: 45, baseType: !208, size: 32, offset: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2512, file: !2062, line: 46, baseType: !219, size: 16, offset: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !2512, file: !2062, line: 46, baseType: !219, size: 16, offset: 80)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !2500, file: !2062, line: 62, baseType: !2510, size: 64, offset: 320)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !2500, file: !2062, line: 64, baseType: !2510, size: 64, offset: 384)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !2500, file: !2062, line: 65, baseType: !990, size: 64, offset: 448)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !2500, file: !2062, line: 66, baseType: !990, size: 64, offset: 512)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !2481, file: !2062, line: 80, baseType: !471, size: 96, offset: 2688)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !2481, file: !2062, line: 80, baseType: !471, size: 96, offset: 2784)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !2481, file: !2062, line: 81, baseType: !471, size: 96, offset: 2880)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !2481, file: !2062, line: 83, baseType: !471, size: 96, offset: 2976)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2471, file: !2062, line: 173, baseType: !207, size: 64, offset: 1216)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2450, file: !1335, line: 291, baseType: !2528, size: 512, offset: 1472)
!2528 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !2062, line: 178, baseType: !2529)
!2529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !2062, line: 176, size: 512, elements: !2530)
!2530 = !{!2531}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2529, file: !2062, line: 177, baseType: !1387, size: 512)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2447, file: !1335, line: 406, baseType: !2533, size: 64, offset: 1984)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 64)
!2534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !1335, line: 80, size: 1472, elements: !2535)
!2535 = !{!2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2534, file: !1335, line: 81, baseType: !207, size: 64)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2534, file: !1335, line: 82, baseType: !207, size: 64, offset: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2534, file: !1335, line: 83, baseType: !5, size: 32, offset: 128)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2534, file: !1335, line: 84, baseType: !5, size: 32, offset: 160)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2534, file: !1335, line: 86, baseType: !5, size: 32, offset: 192)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2534, file: !1335, line: 87, baseType: !5, size: 32, offset: 224)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2534, file: !1335, line: 88, baseType: !5, size: 32, offset: 256)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2534, file: !1335, line: 89, baseType: !5, size: 32, offset: 288)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2534, file: !1335, line: 90, baseType: !5, size: 32, offset: 320)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2534, file: !1335, line: 91, baseType: !5, size: 32, offset: 352)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2534, file: !1335, line: 92, baseType: !5, size: 32, offset: 384)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2534, file: !1335, line: 93, baseType: !5, size: 32, offset: 416)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2534, file: !1335, line: 95, baseType: !2549, size: 1024, offset: 448)
!2549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 1024, elements: !2550)
!2550 = !{!2551}
!2551 = !DISubrange(count: 128)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2447, file: !1335, line: 407, baseType: !2553, size: 64, offset: 2048)
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 64)
!2554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !1335, line: 98, size: 1216, elements: !2555)
!2555 = !{!2556, !2557, !2558, !2559, !2560}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2554, file: !1335, line: 100, baseType: !207, size: 64)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2554, file: !1335, line: 101, baseType: !207, size: 64, offset: 64)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2554, file: !1335, line: 103, baseType: !5, size: 32, offset: 128)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2554, file: !1335, line: 104, baseType: !5, size: 32, offset: 160)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2554, file: !1335, line: 106, baseType: !2549, size: 1024, offset: 192)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2447, file: !1335, line: 408, baseType: !2562, size: 512, offset: 2112)
!2562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !1335, line: 109, size: 512, elements: !2563)
!2563 = !{!2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2562, file: !1335, line: 111, baseType: !106, size: 32)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2562, file: !1335, line: 112, baseType: !106, size: 32, offset: 32)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2562, file: !1335, line: 115, baseType: !106, size: 32, offset: 64)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2562, file: !1335, line: 116, baseType: !106, size: 32, offset: 96)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2562, file: !1335, line: 117, baseType: !106, size: 32, offset: 128)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2562, file: !1335, line: 118, baseType: !106, size: 32, offset: 160)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2562, file: !1335, line: 119, baseType: !106, size: 32, offset: 192)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2562, file: !1335, line: 120, baseType: !106, size: 32, offset: 224)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2562, file: !1335, line: 121, baseType: !106, size: 32, offset: 256)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2562, file: !1335, line: 122, baseType: !106, size: 32, offset: 288)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2562, file: !1335, line: 125, baseType: !106, size: 32, offset: 320)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2562, file: !1335, line: 126, baseType: !106, size: 32, offset: 352)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2562, file: !1335, line: 127, baseType: !219, size: 16, offset: 384)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2562, file: !1335, line: 128, baseType: !219, size: 16, offset: 400)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2562, file: !1335, line: 129, baseType: !106, size: 32, offset: 416)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2562, file: !1335, line: 130, baseType: !106, size: 32, offset: 448)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2562, file: !1335, line: 131, baseType: !106, size: 32, offset: 480)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2447, file: !1335, line: 409, baseType: !2582, size: 576, offset: 2624)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !1335, line: 134, size: 576, elements: !2583)
!2583 = !{!2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2582, file: !1335, line: 135, baseType: !106, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2582, file: !1335, line: 136, baseType: !106, size: 32, offset: 32)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2582, file: !1335, line: 137, baseType: !106, size: 32, offset: 64)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2582, file: !1335, line: 138, baseType: !106, size: 32, offset: 96)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2582, file: !1335, line: 139, baseType: !106, size: 32, offset: 128)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2582, file: !1335, line: 140, baseType: !106, size: 32, offset: 160)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2582, file: !1335, line: 141, baseType: !106, size: 32, offset: 192)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2582, file: !1335, line: 142, baseType: !106, size: 32, offset: 224)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2582, file: !1335, line: 143, baseType: !208, size: 32, offset: 256)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2582, file: !1335, line: 144, baseType: !106, size: 32, offset: 288)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2582, file: !1335, line: 145, baseType: !106, size: 32, offset: 320)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2582, file: !1335, line: 147, baseType: !106, size: 32, offset: 352)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2582, file: !1335, line: 148, baseType: !106, size: 32, offset: 384)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2582, file: !1335, line: 149, baseType: !106, size: 32, offset: 416)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2582, file: !1335, line: 150, baseType: !106, size: 32, offset: 448)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2582, file: !1335, line: 151, baseType: !106, size: 32, offset: 480)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2582, file: !1335, line: 152, baseType: !1376, size: 64, offset: 512)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2447, file: !1335, line: 411, baseType: !106, size: 32, offset: 3200)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2447, file: !1335, line: 411, baseType: !106, size: 32, offset: 3232)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2447, file: !1335, line: 411, baseType: !106, size: 32, offset: 3264)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2447, file: !1335, line: 412, baseType: !208, size: 32, offset: 3296)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2447, file: !1335, line: 413, baseType: !106, size: 32, offset: 3328)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2447, file: !1335, line: 413, baseType: !106, size: 32, offset: 3360)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2447, file: !1335, line: 415, baseType: !106, size: 32, offset: 3392)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2447, file: !1335, line: 415, baseType: !106, size: 32, offset: 3424)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2447, file: !1335, line: 416, baseType: !219, size: 16, offset: 3456)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2447, file: !1335, line: 416, baseType: !219, size: 16, offset: 3472)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2447, file: !1335, line: 418, baseType: !208, size: 32, offset: 3488)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2447, file: !1335, line: 418, baseType: !208, size: 32, offset: 3520)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2447, file: !1335, line: 421, baseType: !208, size: 32, offset: 3552)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2447, file: !1335, line: 421, baseType: !208, size: 32, offset: 3584)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2447, file: !1335, line: 421, baseType: !208, size: 32, offset: 3616)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2447, file: !1335, line: 425, baseType: !219, size: 16, offset: 3648)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2447, file: !1335, line: 425, baseType: !219, size: 16, offset: 3664)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2447, file: !1335, line: 425, baseType: !219, size: 16, offset: 3680)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2447, file: !1335, line: 426, baseType: !219, size: 16, offset: 3696)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2447, file: !1335, line: 428, baseType: !219, size: 16, offset: 3712)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2447, file: !1335, line: 428, baseType: !219, size: 16, offset: 3728)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2447, file: !1335, line: 431, baseType: !106, size: 32, offset: 3744)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2447, file: !1335, line: 433, baseType: !219, size: 16, offset: 3776)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2447, file: !1335, line: 435, baseType: !219, size: 16, offset: 3792)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2447, file: !1335, line: 437, baseType: !219, size: 16, offset: 3808)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2447, file: !1335, line: 439, baseType: !219, size: 16, offset: 3824)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2447, file: !1335, line: 441, baseType: !219, size: 16, offset: 3840)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2447, file: !1335, line: 443, baseType: !219, size: 16, offset: 3856)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2447, file: !1335, line: 449, baseType: !106, size: 32, offset: 3872)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2447, file: !1335, line: 453, baseType: !106, size: 32, offset: 3904)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2447, file: !1335, line: 458, baseType: !219, size: 16, offset: 3936)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2447, file: !1335, line: 462, baseType: !219, size: 16, offset: 3952)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2447, file: !1335, line: 467, baseType: !106, size: 32, offset: 3968)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2447, file: !1335, line: 467, baseType: !106, size: 32, offset: 4000)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2447, file: !1335, line: 469, baseType: !219, size: 16, offset: 4032)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2447, file: !1335, line: 469, baseType: !219, size: 16, offset: 4048)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2447, file: !1335, line: 469, baseType: !219, size: 16, offset: 4064)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2447, file: !1335, line: 469, baseType: !219, size: 16, offset: 4080)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2447, file: !1335, line: 474, baseType: !219, size: 16, offset: 4096)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2447, file: !1335, line: 475, baseType: !1359, size: 8, offset: 4112)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2447, file: !1335, line: 476, baseType: !1359, size: 8, offset: 4120)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2447, file: !1335, line: 481, baseType: !106, size: 32, offset: 4128)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2447, file: !1335, line: 486, baseType: !106, size: 32, offset: 4160)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2447, file: !1335, line: 491, baseType: !106, size: 32, offset: 4192)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2447, file: !1335, line: 496, baseType: !219, size: 16, offset: 4224)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2447, file: !1335, line: 498, baseType: !219, size: 16, offset: 4240)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2447, file: !1335, line: 501, baseType: !219, size: 16, offset: 4256)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2447, file: !1335, line: 502, baseType: !219, size: 16, offset: 4272)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2447, file: !1335, line: 508, baseType: !219, size: 16, offset: 4288)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2447, file: !1335, line: 513, baseType: !219, size: 16, offset: 4304)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2447, file: !1335, line: 515, baseType: !219, size: 16, offset: 4320)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2447, file: !1335, line: 515, baseType: !219, size: 16, offset: 4336)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2447, file: !1335, line: 519, baseType: !2488, size: 128, offset: 4352)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2447, file: !1335, line: 519, baseType: !2488, size: 128, offset: 4480)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2447, file: !1335, line: 520, baseType: !2656, size: 128, offset: 4608)
!2656 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !2489, line: 89, baseType: !2657)
!2657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !2489, line: 86, size: 128, elements: !2658)
!2658 = !{!2659, !2660, !2661, !2662}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2657, file: !2489, line: 87, baseType: !106, size: 32)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2657, file: !2489, line: 87, baseType: !106, size: 32, offset: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2657, file: !2489, line: 88, baseType: !106, size: 32, offset: 64)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2657, file: !2489, line: 88, baseType: !106, size: 32, offset: 96)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2447, file: !1335, line: 523, baseType: !283, size: 128, offset: 4736)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2447, file: !1335, line: 524, baseType: !219, size: 16, offset: 4864)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2447, file: !1335, line: 527, baseType: !219, size: 16, offset: 4880)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2447, file: !1335, line: 532, baseType: !208, size: 32, offset: 4896)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2447, file: !1335, line: 532, baseType: !208, size: 32, offset: 4928)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2447, file: !1335, line: 534, baseType: !208, size: 32, offset: 4960)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2447, file: !1335, line: 538, baseType: !208, size: 32, offset: 4992)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2447, file: !1335, line: 542, baseType: !106, size: 32, offset: 5024)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2447, file: !1335, line: 545, baseType: !208, size: 32, offset: 5056)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2447, file: !1335, line: 545, baseType: !208, size: 32, offset: 5088)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2447, file: !1335, line: 545, baseType: !208, size: 32, offset: 5120)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2447, file: !1335, line: 548, baseType: !208, size: 32, offset: 5152)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2447, file: !1335, line: 551, baseType: !219, size: 16, offset: 5184)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2447, file: !1335, line: 551, baseType: !219, size: 16, offset: 5200)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2447, file: !1335, line: 551, baseType: !219, size: 16, offset: 5216)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2447, file: !1335, line: 551, baseType: !219, size: 16, offset: 5232)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2447, file: !1335, line: 552, baseType: !219, size: 16, offset: 5248)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2447, file: !1335, line: 552, baseType: !219, size: 16, offset: 5264)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2447, file: !1335, line: 553, baseType: !208, size: 32, offset: 5280)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2447, file: !1335, line: 553, baseType: !208, size: 32, offset: 5312)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2447, file: !1335, line: 554, baseType: !219, size: 16, offset: 5344)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2447, file: !1335, line: 554, baseType: !219, size: 16, offset: 5360)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2447, file: !1335, line: 555, baseType: !208, size: 32, offset: 5376)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2447, file: !1335, line: 555, baseType: !208, size: 32, offset: 5408)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2447, file: !1335, line: 558, baseType: !1358, size: 8192, offset: 5440)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2447, file: !1335, line: 561, baseType: !106, size: 32, offset: 13632)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2447, file: !1335, line: 562, baseType: !219, size: 16, offset: 13664)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2447, file: !1335, line: 562, baseType: !219, size: 16, offset: 13680)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2447, file: !1335, line: 565, baseType: !2692, size: 6144, offset: 13696)
!2692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 6144, elements: !2693)
!2693 = !{!2694}
!2694 = !DISubrange(count: 768)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2447, file: !1335, line: 568, baseType: !1537, size: 128, offset: 19840)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2447, file: !1335, line: 569, baseType: !1537, size: 128, offset: 19968)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2447, file: !1335, line: 572, baseType: !1359, size: 8, offset: 20096)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2447, file: !1335, line: 573, baseType: !1359, size: 8, offset: 20104)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2447, file: !1335, line: 574, baseType: !1359, size: 8, offset: 20112)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2447, file: !1335, line: 575, baseType: !2296, size: 40, offset: 20120)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2447, file: !1335, line: 578, baseType: !106, size: 32, offset: 20160)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2447, file: !1335, line: 579, baseType: !219, size: 16, offset: 20192)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2447, file: !1335, line: 580, baseType: !219, size: 16, offset: 20208)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2447, file: !1335, line: 581, baseType: !208, size: 32, offset: 20224)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2447, file: !1335, line: 582, baseType: !208, size: 32, offset: 20256)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2447, file: !1335, line: 585, baseType: !219, size: 16, offset: 20288)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2447, file: !1335, line: 585, baseType: !219, size: 16, offset: 20304)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2447, file: !1335, line: 586, baseType: !208, size: 32, offset: 20320)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2447, file: !1335, line: 589, baseType: !219, size: 16, offset: 20352)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2447, file: !1335, line: 589, baseType: !219, size: 16, offset: 20368)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2447, file: !1335, line: 590, baseType: !106, size: 32, offset: 20384)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2447, file: !1335, line: 593, baseType: !219, size: 16, offset: 20416)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2447, file: !1335, line: 593, baseType: !219, size: 16, offset: 20432)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2447, file: !1335, line: 594, baseType: !219, size: 16, offset: 20448)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2447, file: !1335, line: 594, baseType: !219, size: 16, offset: 20464)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2447, file: !1335, line: 595, baseType: !208, size: 32, offset: 20480)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2447, file: !1335, line: 596, baseType: !208, size: 32, offset: 20512)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2447, file: !1335, line: 597, baseType: !2719, size: 64, offset: 20544)
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 64)
!2720 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1621, line: 44, flags: DIFlagFwdDecl)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2447, file: !1335, line: 600, baseType: !106, size: 32, offset: 20608)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2447, file: !1335, line: 601, baseType: !208, size: 32, offset: 20640)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2447, file: !1335, line: 604, baseType: !2724, size: 256, offset: 20672)
!2724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 256, elements: !2725)
!2725 = !{!2726}
!2726 = !DISubrange(count: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2447, file: !1335, line: 607, baseType: !2728, size: 10880, offset: 20928)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !1335, line: 364, size: 10880, elements: !2729)
!2729 = !{!2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2728, file: !1335, line: 365, baseType: !2450, size: 1984)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2728, file: !1335, line: 367, baseType: !1358, size: 8192, offset: 1984)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2728, file: !1335, line: 369, baseType: !219, size: 16, offset: 10176)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2728, file: !1335, line: 369, baseType: !219, size: 16, offset: 10192)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2728, file: !1335, line: 370, baseType: !219, size: 16, offset: 10208)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2728, file: !1335, line: 370, baseType: !219, size: 16, offset: 10224)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2728, file: !1335, line: 372, baseType: !208, size: 32, offset: 10240)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2728, file: !1335, line: 373, baseType: !208, size: 32, offset: 10272)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2728, file: !1335, line: 375, baseType: !2363, size: 24, offset: 10304)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2728, file: !1335, line: 376, baseType: !1359, size: 8, offset: 10328)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2728, file: !1335, line: 378, baseType: !1359, size: 8, offset: 10336)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2728, file: !1335, line: 379, baseType: !2363, size: 24, offset: 10344)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2728, file: !1335, line: 381, baseType: !1387, size: 512, offset: 10368)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2447, file: !1335, line: 609, baseType: !106, size: 32, offset: 31808)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2447, file: !1335, line: 610, baseType: !106, size: 32, offset: 31840)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !1336, file: !1335, line: 1252, baseType: !2746, size: 256, offset: 34112)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !1335, line: 158, size: 256, elements: !2747)
!2747 = !{!2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2746, file: !1335, line: 159, baseType: !106, size: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2746, file: !1335, line: 160, baseType: !208, size: 32, offset: 32)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2746, file: !1335, line: 161, baseType: !208, size: 32, offset: 64)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2746, file: !1335, line: 162, baseType: !208, size: 32, offset: 96)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2746, file: !1335, line: 163, baseType: !106, size: 32, offset: 128)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2746, file: !1335, line: 164, baseType: !219, size: 16, offset: 160)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2746, file: !1335, line: 165, baseType: !219, size: 16, offset: 176)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2746, file: !1335, line: 166, baseType: !208, size: 32, offset: 192)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2746, file: !1335, line: 167, baseType: !208, size: 32, offset: 224)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1336, file: !1335, line: 1254, baseType: !283, size: 128, offset: 34368)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !1336, file: !1335, line: 1255, baseType: !283, size: 128, offset: 34496)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !1336, file: !1335, line: 1257, baseType: !207, size: 64, offset: 34624)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !1336, file: !1335, line: 1258, baseType: !207, size: 64, offset: 34688)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !1336, file: !1335, line: 1259, baseType: !207, size: 64, offset: 34752)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !1336, file: !1335, line: 1260, baseType: !207, size: 64, offset: 34816)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !1336, file: !1335, line: 1262, baseType: !207, size: 64, offset: 34880)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !1336, file: !1335, line: 1265, baseType: !2765, size: 64, offset: 34944)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !1335, line: 1265, flags: DIFlagFwdDecl)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !1336, file: !1335, line: 1266, baseType: !219, size: 16, offset: 35008)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1336, file: !1335, line: 1267, baseType: !219, size: 16, offset: 35024)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !1336, file: !1335, line: 1270, baseType: !106, size: 32, offset: 35040)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !1336, file: !1335, line: 1271, baseType: !283, size: 128, offset: 35072)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1336, file: !1335, line: 1274, baseType: !2772, size: 128, offset: 35200)
!2772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !1335, line: 650, size: 128, elements: !2773)
!2773 = !{!2774, !2775, !2776, !2777, !2778}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2772, file: !1335, line: 651, baseType: !471, size: 96)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2772, file: !1335, line: 652, baseType: !1359, size: 8, offset: 96)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2772, file: !1335, line: 652, baseType: !1359, size: 8, offset: 104)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2772, file: !1335, line: 652, baseType: !1359, size: 8, offset: 112)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2772, file: !1335, line: 652, baseType: !1359, size: 8, offset: 120)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !1336, file: !1335, line: 1275, baseType: !2780, size: 1472, offset: 35328)
!2780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !1335, line: 676, size: 1472, elements: !2781)
!2781 = !{!2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2803, !2804, !2805, !2806, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2780, file: !1335, line: 679, baseType: !2772, size: 128)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2780, file: !1335, line: 680, baseType: !219, size: 16, offset: 128)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2780, file: !1335, line: 680, baseType: !219, size: 16, offset: 144)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2780, file: !1335, line: 680, baseType: !219, size: 16, offset: 160)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2780, file: !1335, line: 680, baseType: !219, size: 16, offset: 176)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2780, file: !1335, line: 681, baseType: !219, size: 16, offset: 192)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2780, file: !1335, line: 681, baseType: !219, size: 16, offset: 208)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2780, file: !1335, line: 681, baseType: !219, size: 16, offset: 224)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2780, file: !1335, line: 681, baseType: !219, size: 16, offset: 240)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2780, file: !1335, line: 682, baseType: !219, size: 16, offset: 256)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2780, file: !1335, line: 682, baseType: !1747, size: 48, offset: 272)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2780, file: !1335, line: 685, baseType: !2794, size: 192, offset: 320)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !1335, line: 633, size: 192, elements: !2795)
!2795 = !{!2796, !2797, !2798, !2799, !2800, !2801, !2802}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2794, file: !1335, line: 634, baseType: !219, size: 16)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2794, file: !1335, line: 634, baseType: !219, size: 16, offset: 16)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2794, file: !1335, line: 635, baseType: !219, size: 16, offset: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2794, file: !1335, line: 635, baseType: !219, size: 16, offset: 48)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2794, file: !1335, line: 636, baseType: !208, size: 32, offset: 64)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2794, file: !1335, line: 636, baseType: !208, size: 32, offset: 96)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2794, file: !1335, line: 637, baseType: !2719, size: 64, offset: 128)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2780, file: !1335, line: 686, baseType: !219, size: 16, offset: 512)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2780, file: !1335, line: 686, baseType: !219, size: 16, offset: 528)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2780, file: !1335, line: 687, baseType: !208, size: 32, offset: 544)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2780, file: !1335, line: 688, baseType: !2807, size: 448, offset: 576)
!2807 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !1335, line: 674, baseType: !2808)
!2808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !1335, line: 659, size: 448, elements: !2809)
!2809 = !{!2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824}
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2808, file: !1335, line: 660, baseType: !208, size: 32)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2808, file: !1335, line: 661, baseType: !208, size: 32, offset: 32)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2808, file: !1335, line: 662, baseType: !208, size: 32, offset: 64)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2808, file: !1335, line: 663, baseType: !208, size: 32, offset: 96)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2808, file: !1335, line: 664, baseType: !208, size: 32, offset: 128)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2808, file: !1335, line: 665, baseType: !208, size: 32, offset: 160)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2808, file: !1335, line: 666, baseType: !208, size: 32, offset: 192)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2808, file: !1335, line: 667, baseType: !208, size: 32, offset: 224)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2808, file: !1335, line: 668, baseType: !208, size: 32, offset: 256)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2808, file: !1335, line: 669, baseType: !208, size: 32, offset: 288)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2808, file: !1335, line: 670, baseType: !106, size: 32, offset: 320)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2808, file: !1335, line: 671, baseType: !208, size: 32, offset: 352)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2808, file: !1335, line: 672, baseType: !208, size: 32, offset: 384)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2808, file: !1335, line: 673, baseType: !219, size: 16, offset: 416)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2808, file: !1335, line: 673, baseType: !219, size: 16, offset: 432)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2780, file: !1335, line: 692, baseType: !208, size: 32, offset: 1024)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2780, file: !1335, line: 697, baseType: !208, size: 32, offset: 1056)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2780, file: !1335, line: 703, baseType: !106, size: 32, offset: 1088)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2780, file: !1335, line: 704, baseType: !219, size: 16, offset: 1120)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2780, file: !1335, line: 704, baseType: !219, size: 16, offset: 1136)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2780, file: !1335, line: 705, baseType: !219, size: 16, offset: 1152)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2780, file: !1335, line: 706, baseType: !219, size: 16, offset: 1168)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2780, file: !1335, line: 707, baseType: !219, size: 16, offset: 1184)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2780, file: !1335, line: 708, baseType: !219, size: 16, offset: 1200)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2780, file: !1335, line: 709, baseType: !219, size: 16, offset: 1216)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2780, file: !1335, line: 709, baseType: !219, size: 16, offset: 1232)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2780, file: !1335, line: 709, baseType: !219, size: 16, offset: 1248)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2780, file: !1335, line: 709, baseType: !219, size: 16, offset: 1264)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2780, file: !1335, line: 710, baseType: !219, size: 16, offset: 1280)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2780, file: !1335, line: 711, baseType: !219, size: 16, offset: 1296)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2780, file: !1335, line: 712, baseType: !208, size: 32, offset: 1312)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2780, file: !1335, line: 713, baseType: !208, size: 32, offset: 1344)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2780, file: !1335, line: 713, baseType: !208, size: 32, offset: 1376)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2780, file: !1335, line: 713, baseType: !208, size: 32, offset: 1408)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2780, file: !1335, line: 713, baseType: !208, size: 32, offset: 1440)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1336, file: !1335, line: 1278, baseType: !2846, size: 64, offset: 36800)
!2846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !1335, line: 1197, size: 64, elements: !2847)
!2847 = !{!2848, !2849, !2850, !2851}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2846, file: !1335, line: 1199, baseType: !208, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2846, file: !1335, line: 1200, baseType: !1359, size: 8, offset: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2846, file: !1335, line: 1201, baseType: !1359, size: 8, offset: 40)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2846, file: !1335, line: 1202, baseType: !219, size: 16, offset: 48)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1336, file: !1335, line: 1281, baseType: !1495, size: 64, offset: 36864)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !1336, file: !1335, line: 1284, baseType: !2854, size: 192, offset: 36928)
!2854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !1335, line: 1208, size: 192, elements: !2855)
!2855 = !{!2856, !2857, !2858, !2859}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2854, file: !1335, line: 1209, baseType: !471, size: 96)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2854, file: !1335, line: 1210, baseType: !106, size: 32, offset: 96)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2854, file: !1335, line: 1210, baseType: !106, size: 32, offset: 128)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2854, file: !1335, line: 1210, baseType: !106, size: 32, offset: 160)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1336, file: !1335, line: 1287, baseType: !2861, size: 64, offset: 37120)
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 64)
!2862 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1335, line: 62, flags: DIFlagFwdDecl)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1336, file: !1335, line: 1289, baseType: !2132, size: 64, offset: 37184)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !1336, file: !1335, line: 1290, baseType: !2132, size: 64, offset: 37248)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1336, file: !1335, line: 1293, baseType: !2470, size: 1280, offset: 37312)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1336, file: !1335, line: 1294, baseType: !2528, size: 512, offset: 38592)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !1336, file: !1335, line: 1295, baseType: !2061, size: 512, offset: 39104)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !1336, file: !1335, line: 1298, baseType: !2869, size: 64, offset: 39616)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64)
!2870 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !1335, line: 1298, flags: DIFlagFwdDecl)
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 64)
!2872 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !40, line: 295, baseType: !1406)
!2873 = !DILocalVariable(name: "scene", arg: 1, scope: !1330, file: !1, line: 706, type: !1333)
!2874 = !DILocation(line: 706, column: 38, scope: !1330)
!2875 = !DILocalVariable(name: "taperobj", arg: 2, scope: !1330, file: !1, line: 706, type: !2871)
!2876 = !DILocation(line: 706, column: 53, scope: !1330)
!2877 = !DILocalVariable(name: "cur", arg: 3, scope: !1330, file: !1, line: 706, type: !106)
!2878 = !DILocation(line: 706, column: 67, scope: !1330)
!2879 = !DILocalVariable(name: "tot", arg: 4, scope: !1330, file: !1, line: 706, type: !106)
!2880 = !DILocation(line: 706, column: 76, scope: !1330)
!2881 = !DILocalVariable(name: "fac", scope: !1330, file: !1, line: 708, type: !208)
!2882 = !DILocation(line: 708, column: 8, scope: !1330)
!2883 = !DILocation(line: 708, column: 22, scope: !1330)
!2884 = !DILocation(line: 708, column: 15, scope: !1330)
!2885 = !DILocation(line: 708, column: 37, scope: !1330)
!2886 = !DILocation(line: 708, column: 41, scope: !1330)
!2887 = !DILocation(line: 708, column: 29, scope: !1330)
!2888 = !DILocation(line: 708, column: 27, scope: !1330)
!2889 = !DILocation(line: 710, column: 29, scope: !1330)
!2890 = !DILocation(line: 710, column: 36, scope: !1330)
!2891 = !DILocation(line: 710, column: 46, scope: !1330)
!2892 = !DILocation(line: 710, column: 9, scope: !1330)
!2893 = !DILocation(line: 710, column: 2, scope: !1330)
!2894 = distinct !DISubprogram(name: "displist_calc_taper", scope: !1, file: !1, line: 666, type: !2895, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!2895 = !DISubroutineType(types: !2896)
!2896 = !{!208, !1333, !2871, !208}
!2897 = !DILocalVariable(name: "scene", arg: 1, scope: !2894, file: !1, line: 666, type: !1333)
!2898 = !DILocation(line: 666, column: 41, scope: !2894)
!2899 = !DILocalVariable(name: "taperobj", arg: 2, scope: !2894, file: !1, line: 666, type: !2871)
!2900 = !DILocation(line: 666, column: 56, scope: !2894)
!2901 = !DILocalVariable(name: "fac", arg: 3, scope: !2894, file: !1, line: 666, type: !208)
!2902 = !DILocation(line: 666, column: 72, scope: !2894)
!2903 = !DILocalVariable(name: "dl", scope: !2894, file: !1, line: 668, type: !210)
!2904 = !DILocation(line: 668, column: 12, scope: !2894)
!2905 = !DILocation(line: 670, column: 6, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2894, file: !1, line: 670, column: 6)
!2907 = !DILocation(line: 670, column: 15, scope: !2906)
!2908 = !DILocation(line: 670, column: 23, scope: !2906)
!2909 = !DILocation(line: 670, column: 26, scope: !2906)
!2910 = !DILocation(line: 670, column: 36, scope: !2906)
!2911 = !DILocation(line: 670, column: 41, scope: !2906)
!2912 = !DILocation(line: 670, column: 6, scope: !2894)
!2913 = !DILocation(line: 671, column: 3, scope: !2906)
!2914 = !DILocation(line: 673, column: 7, scope: !2894)
!2915 = !DILocation(line: 673, column: 17, scope: !2894)
!2916 = !DILocation(line: 673, column: 31, scope: !2894)
!2917 = !DILocation(line: 673, column: 41, scope: !2894)
!2918 = !DILocation(line: 673, column: 54, scope: !2894)
!2919 = !DILocation(line: 673, column: 59, scope: !2894)
!2920 = !DILocation(line: 673, column: 5, scope: !2894)
!2921 = !DILocation(line: 674, column: 6, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2894, file: !1, line: 674, column: 6)
!2923 = !DILocation(line: 674, column: 9, scope: !2922)
!2924 = !DILocation(line: 674, column: 6, scope: !2894)
!2925 = !DILocation(line: 675, column: 32, scope: !2926)
!2926 = distinct !DILexicalBlock(scope: !2922, file: !1, line: 674, column: 18)
!2927 = !DILocation(line: 675, column: 39, scope: !2926)
!2928 = !DILocation(line: 675, column: 3, scope: !2926)
!2929 = !DILocation(line: 676, column: 8, scope: !2926)
!2930 = !DILocation(line: 676, column: 18, scope: !2926)
!2931 = !DILocation(line: 676, column: 31, scope: !2926)
!2932 = !DILocation(line: 676, column: 36, scope: !2926)
!2933 = !DILocation(line: 676, column: 6, scope: !2926)
!2934 = !DILocation(line: 677, column: 2, scope: !2926)
!2935 = !DILocation(line: 678, column: 6, scope: !2936)
!2936 = distinct !DILexicalBlock(scope: !2894, file: !1, line: 678, column: 6)
!2937 = !DILocation(line: 678, column: 6, scope: !2894)
!2938 = !DILocalVariable(name: "minx", scope: !2939, file: !1, line: 679, type: !208)
!2939 = distinct !DILexicalBlock(scope: !2936, file: !1, line: 678, column: 10)
!2940 = !DILocation(line: 679, column: 9, scope: !2939)
!2941 = !DILocalVariable(name: "dx", scope: !2939, file: !1, line: 679, type: !208)
!2942 = !DILocation(line: 679, column: 15, scope: !2939)
!2943 = !DILocalVariable(name: "fp", scope: !2939, file: !1, line: 679, type: !209)
!2944 = !DILocation(line: 679, column: 20, scope: !2939)
!2945 = !DILocalVariable(name: "a", scope: !2939, file: !1, line: 680, type: !106)
!2946 = !DILocation(line: 680, column: 7, scope: !2939)
!2947 = !DILocation(line: 683, column: 10, scope: !2939)
!2948 = !DILocation(line: 683, column: 14, scope: !2939)
!2949 = !DILocation(line: 683, column: 8, scope: !2939)
!2950 = !DILocation(line: 684, column: 8, scope: !2939)
!2951 = !DILocation(line: 684, column: 12, scope: !2939)
!2952 = !DILocation(line: 684, column: 23, scope: !2939)
!2953 = !DILocation(line: 684, column: 27, scope: !2939)
!2954 = !DILocation(line: 684, column: 30, scope: !2939)
!2955 = !DILocation(line: 684, column: 20, scope: !2939)
!2956 = !DILocation(line: 684, column: 38, scope: !2939)
!2957 = !DILocation(line: 684, column: 36, scope: !2939)
!2958 = !DILocation(line: 684, column: 6, scope: !2939)
!2959 = !DILocation(line: 685, column: 7, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2939, file: !1, line: 685, column: 7)
!2961 = !DILocation(line: 685, column: 10, scope: !2960)
!2962 = !DILocation(line: 685, column: 7, scope: !2939)
!2963 = !DILocation(line: 686, column: 9, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2960, file: !1, line: 685, column: 18)
!2965 = !DILocation(line: 686, column: 13, scope: !2964)
!2966 = !DILocation(line: 686, column: 7, scope: !2964)
!2967 = !DILocation(line: 687, column: 11, scope: !2968)
!2968 = distinct !DILexicalBlock(scope: !2964, file: !1, line: 687, column: 4)
!2969 = !DILocation(line: 687, column: 9, scope: !2968)
!2970 = !DILocation(line: 687, column: 16, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2968, file: !1, line: 687, column: 4)
!2972 = !DILocation(line: 687, column: 20, scope: !2971)
!2973 = !DILocation(line: 687, column: 24, scope: !2971)
!2974 = !DILocation(line: 687, column: 18, scope: !2971)
!2975 = !DILocation(line: 687, column: 4, scope: !2968)
!2976 = !DILocation(line: 688, column: 10, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2978, file: !1, line: 688, column: 9)
!2978 = distinct !DILexicalBlock(scope: !2971, file: !1, line: 687, column: 42)
!2979 = !DILocation(line: 688, column: 18, scope: !2977)
!2980 = !DILocation(line: 688, column: 16, scope: !2977)
!2981 = !DILocation(line: 688, column: 26, scope: !2977)
!2982 = !DILocation(line: 688, column: 24, scope: !2977)
!2983 = !DILocation(line: 688, column: 32, scope: !2977)
!2984 = !DILocation(line: 688, column: 29, scope: !2977)
!2985 = !DILocation(line: 688, column: 9, scope: !2978)
!2986 = !DILocation(line: 690, column: 10, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2988, file: !1, line: 690, column: 10)
!2988 = distinct !DILexicalBlock(scope: !2977, file: !1, line: 688, column: 37)
!2989 = !DILocation(line: 690, column: 12, scope: !2987)
!2990 = !DILocation(line: 690, column: 10, scope: !2988)
!2991 = !DILocalVariable(name: "fac1", scope: !2992, file: !1, line: 691, type: !208)
!2992 = distinct !DILexicalBlock(scope: !2987, file: !1, line: 690, column: 17)
!2993 = !DILocation(line: 691, column: 13, scope: !2992)
!2994 = !DILocation(line: 691, column: 21, scope: !2992)
!2995 = !DILocation(line: 691, column: 30, scope: !2992)
!2996 = !DILocation(line: 691, column: 28, scope: !2992)
!2997 = !DILocation(line: 691, column: 38, scope: !2992)
!2998 = !DILocation(line: 691, column: 36, scope: !2992)
!2999 = !DILocalVariable(name: "fac2", scope: !2992, file: !1, line: 692, type: !208)
!3000 = !DILocation(line: 692, column: 13, scope: !2992)
!3001 = !DILocation(line: 692, column: 21, scope: !2992)
!3002 = !DILocation(line: 692, column: 29, scope: !2992)
!3003 = !DILocation(line: 692, column: 27, scope: !2992)
!3004 = !DILocation(line: 692, column: 37, scope: !2992)
!3005 = !DILocation(line: 692, column: 35, scope: !2992)
!3006 = !DILocation(line: 693, column: 11, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !2992, file: !1, line: 693, column: 11)
!3008 = !DILocation(line: 693, column: 19, scope: !3007)
!3009 = !DILocation(line: 693, column: 16, scope: !3007)
!3010 = !DILocation(line: 693, column: 11, scope: !2992)
!3011 = !DILocation(line: 694, column: 15, scope: !3007)
!3012 = !DILocation(line: 694, column: 24, scope: !3007)
!3013 = !DILocation(line: 694, column: 31, scope: !3007)
!3014 = !DILocation(line: 694, column: 29, scope: !3007)
!3015 = !DILocation(line: 694, column: 21, scope: !3007)
!3016 = !DILocation(line: 694, column: 39, scope: !3007)
!3017 = !DILocation(line: 694, column: 46, scope: !3007)
!3018 = !DILocation(line: 694, column: 44, scope: !3007)
!3019 = !DILocation(line: 694, column: 36, scope: !3007)
!3020 = !DILocation(line: 694, column: 54, scope: !3007)
!3021 = !DILocation(line: 694, column: 64, scope: !3007)
!3022 = !DILocation(line: 694, column: 70, scope: !3007)
!3023 = !DILocation(line: 694, column: 68, scope: !3007)
!3024 = !DILocation(line: 694, column: 61, scope: !3007)
!3025 = !DILocation(line: 694, column: 79, scope: !3007)
!3026 = !DILocation(line: 694, column: 86, scope: !3007)
!3027 = !DILocation(line: 694, column: 84, scope: !3007)
!3028 = !DILocation(line: 694, column: 76, scope: !3007)
!3029 = !DILocation(line: 694, column: 52, scope: !3007)
!3030 = !DILocation(line: 694, column: 8, scope: !3007)
!3031 = !DILocation(line: 695, column: 6, scope: !2992)
!3032 = !DILocation(line: 696, column: 13, scope: !2988)
!3033 = !DILocation(line: 696, column: 6, scope: !2988)
!3034 = !DILocation(line: 698, column: 4, scope: !2978)
!3035 = !DILocation(line: 687, column: 29, scope: !2971)
!3036 = !DILocation(line: 687, column: 36, scope: !2971)
!3037 = !DILocation(line: 687, column: 4, scope: !2971)
!3038 = distinct !{!3038, !2975, !3039}
!3039 = !DILocation(line: 698, column: 4, scope: !2968)
!3040 = !DILocation(line: 699, column: 11, scope: !2964)
!3041 = !DILocation(line: 699, column: 4, scope: !2964)
!3042 = !DILocation(line: 701, column: 2, scope: !2939)
!3043 = !DILocation(line: 703, column: 2, scope: !2894)
!3044 = !DILocation(line: 704, column: 1, scope: !2894)
!3045 = distinct !DISubprogram(name: "BKE_displist_make_mball", scope: !1, file: !1, line: 713, type: !3046, scopeLine: 714, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !240)
!3046 = !DISubroutineType(types: !3047)
!3047 = !{null, !3048, !1333, !2871}
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 64)
!3049 = !DIDerivedType(tag: DW_TAG_typedef, name: "EvaluationContext", file: !189, line: 60, baseType: !3050)
!3050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !189, line: 58, size: 32, elements: !3051)
!3051 = !{!3052}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3050, file: !189, line: 59, baseType: !106, size: 32)
!3053 = !DILocalVariable(name: "eval_ctx", arg: 1, scope: !3045, file: !1, line: 713, type: !3048)
!3054 = !DILocation(line: 713, column: 49, scope: !3045)
!3055 = !DILocalVariable(name: "scene", arg: 2, scope: !3045, file: !1, line: 713, type: !1333)
!3056 = !DILocation(line: 713, column: 66, scope: !3045)
!3057 = !DILocalVariable(name: "ob", arg: 3, scope: !3045, file: !1, line: 713, type: !2871)
!3058 = !DILocation(line: 713, column: 81, scope: !3045)
!3059 = !DILocation(line: 715, column: 7, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3045, file: !1, line: 715, column: 6)
!3061 = !DILocation(line: 715, column: 10, scope: !3060)
!3062 = !DILocation(line: 715, column: 13, scope: !3060)
!3063 = !DILocation(line: 715, column: 17, scope: !3060)
!3064 = !DILocation(line: 715, column: 22, scope: !3060)
!3065 = !DILocation(line: 715, column: 6, scope: !3045)
!3066 = !DILocation(line: 716, column: 3, scope: !3060)
!3067 = !DILocation(line: 718, column: 6, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !3045, file: !1, line: 718, column: 6)
!3069 = !DILocation(line: 718, column: 33, scope: !3068)
!3070 = !DILocation(line: 718, column: 40, scope: !3068)
!3071 = !DILocation(line: 718, column: 12, scope: !3068)
!3072 = !DILocation(line: 718, column: 9, scope: !3068)
!3073 = !DILocation(line: 718, column: 6, scope: !3045)
!3074 = !DILocation(line: 719, column: 7, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3076, file: !1, line: 719, column: 7)
!3076 = distinct !DILexicalBlock(scope: !3068, file: !1, line: 718, column: 45)
!3077 = !DILocation(line: 719, column: 11, scope: !3075)
!3078 = !DILocation(line: 719, column: 7, scope: !3076)
!3079 = !DILocation(line: 720, column: 24, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3075, file: !1, line: 719, column: 24)
!3081 = !DILocation(line: 720, column: 28, scope: !3080)
!3082 = !DILocation(line: 720, column: 41, scope: !3080)
!3083 = !DILocation(line: 720, column: 4, scope: !3080)
!3084 = !DILocation(line: 721, column: 3, scope: !3080)
!3085 = !DILocation(line: 723, column: 22, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3075, file: !1, line: 722, column: 8)
!3087 = !DILocation(line: 723, column: 4, scope: !3086)
!3088 = !DILocation(line: 723, column: 8, scope: !3086)
!3089 = !DILocation(line: 723, column: 20, scope: !3086)
!3090 = !DILocation(line: 726, column: 24, scope: !3076)
!3091 = !DILocation(line: 726, column: 34, scope: !3076)
!3092 = !DILocation(line: 726, column: 41, scope: !3076)
!3093 = !DILocation(line: 726, column: 46, scope: !3076)
!3094 = !DILocation(line: 726, column: 50, scope: !3076)
!3095 = !DILocation(line: 726, column: 63, scope: !3076)
!3096 = !DILocation(line: 726, column: 3, scope: !3076)
!3097 = !DILocation(line: 727, column: 27, scope: !3076)
!3098 = !DILocation(line: 727, column: 3, scope: !3076)
!3099 = !DILocation(line: 729, column: 23, scope: !3076)
!3100 = !DILocation(line: 729, column: 28, scope: !3076)
!3101 = !DILocation(line: 729, column: 32, scope: !3076)
!3102 = !DILocation(line: 729, column: 45, scope: !3076)
!3103 = !DILocation(line: 729, column: 3, scope: !3076)
!3104 = !DILocation(line: 732, column: 28, scope: !3076)
!3105 = !DILocation(line: 732, column: 3, scope: !3076)
!3106 = !DILocation(line: 733, column: 2, scope: !3076)
!3107 = !DILocation(line: 734, column: 1, scope: !3045)
!3108 = distinct !DISubprogram(name: "boundbox_displist_object", scope: !1, file: !1, line: 1836, type: !3109, scopeLine: 1837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!3109 = !DISubroutineType(types: !3110)
!3110 = !{null, !2871}
!3111 = !DILocalVariable(name: "ob", arg: 1, scope: !3108, file: !1, line: 1836, type: !2871)
!3112 = !DILocation(line: 1836, column: 46, scope: !3108)
!3113 = !DILocation(line: 1838, column: 6, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3108, file: !1, line: 1838, column: 6)
!3115 = !DILocation(line: 1838, column: 6, scope: !3108)
!3116 = !DILocation(line: 1844, column: 7, scope: !3117)
!3117 = distinct !DILexicalBlock(scope: !3118, file: !1, line: 1844, column: 7)
!3118 = distinct !DILexicalBlock(scope: !3114, file: !1, line: 1838, column: 50)
!3119 = !DILocation(line: 1844, column: 11, scope: !3117)
!3120 = !DILocation(line: 1844, column: 14, scope: !3117)
!3121 = !DILocation(line: 1844, column: 7, scope: !3118)
!3122 = !DILocation(line: 1845, column: 13, scope: !3117)
!3123 = !DILocation(line: 1845, column: 4, scope: !3117)
!3124 = !DILocation(line: 1845, column: 8, scope: !3117)
!3125 = !DILocation(line: 1845, column: 11, scope: !3117)
!3126 = !DILocation(line: 1847, column: 7, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3118, file: !1, line: 1847, column: 7)
!3128 = !DILocation(line: 1847, column: 11, scope: !3127)
!3129 = !DILocation(line: 1847, column: 7, scope: !3118)
!3130 = !DILocation(line: 1848, column: 27, scope: !3131)
!3131 = distinct !DILexicalBlock(scope: !3127, file: !1, line: 1847, column: 25)
!3132 = !DILocation(line: 1848, column: 31, scope: !3131)
!3133 = !DILocation(line: 1848, column: 35, scope: !3131)
!3134 = !DILocation(line: 1848, column: 4, scope: !3131)
!3135 = !DILocation(line: 1849, column: 3, scope: !3131)
!3136 = !DILocalVariable(name: "min", scope: !3137, file: !1, line: 1851, type: !471)
!3137 = distinct !DILexicalBlock(scope: !3127, file: !1, line: 1850, column: 8)
!3138 = !DILocation(line: 1851, column: 10, scope: !3137)
!3139 = !DILocalVariable(name: "max", scope: !3137, file: !1, line: 1851, type: !471)
!3140 = !DILocation(line: 1851, column: 18, scope: !3137)
!3141 = !DILocation(line: 1853, column: 4, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3137, file: !1, line: 1853, column: 4)
!3143 = !DILocation(line: 1854, column: 25, scope: !3137)
!3144 = !DILocation(line: 1854, column: 29, scope: !3137)
!3145 = !DILocation(line: 1854, column: 42, scope: !3137)
!3146 = !DILocation(line: 1854, column: 48, scope: !3137)
!3147 = !DILocation(line: 1854, column: 53, scope: !3137)
!3148 = !DILocation(line: 1854, column: 4, scope: !3137)
!3149 = !DILocation(line: 1855, column: 34, scope: !3137)
!3150 = !DILocation(line: 1855, column: 38, scope: !3137)
!3151 = !DILocation(line: 1855, column: 42, scope: !3137)
!3152 = !DILocation(line: 1855, column: 47, scope: !3137)
!3153 = !DILocation(line: 1855, column: 4, scope: !3137)
!3154 = !DILocation(line: 1857, column: 2, scope: !3118)
!3155 = !DILocation(line: 1858, column: 1, scope: !3108)
!3156 = distinct !DISubprogram(name: "BKE_displist_make_mball_forRender", scope: !1, file: !1, line: 736, type: !3157, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !240)
!3157 = !DISubroutineType(types: !3158)
!3158 = !{null, !3048, !1333, !2871, !282}
!3159 = !DILocalVariable(name: "eval_ctx", arg: 1, scope: !3156, file: !1, line: 736, type: !3048)
!3160 = !DILocation(line: 736, column: 59, scope: !3156)
!3161 = !DILocalVariable(name: "scene", arg: 2, scope: !3156, file: !1, line: 736, type: !1333)
!3162 = !DILocation(line: 736, column: 76, scope: !3156)
!3163 = !DILocalVariable(name: "ob", arg: 3, scope: !3156, file: !1, line: 736, type: !2871)
!3164 = !DILocation(line: 736, column: 91, scope: !3156)
!3165 = !DILocalVariable(name: "dispbase", arg: 4, scope: !3156, file: !1, line: 736, type: !282)
!3166 = !DILocation(line: 736, column: 105, scope: !3156)
!3167 = !DILocation(line: 738, column: 23, scope: !3156)
!3168 = !DILocation(line: 738, column: 33, scope: !3156)
!3169 = !DILocation(line: 738, column: 40, scope: !3156)
!3170 = !DILocation(line: 738, column: 44, scope: !3156)
!3171 = !DILocation(line: 738, column: 2, scope: !3156)
!3172 = !DILocation(line: 739, column: 26, scope: !3156)
!3173 = !DILocation(line: 739, column: 2, scope: !3156)
!3174 = !DILocation(line: 741, column: 22, scope: !3156)
!3175 = !DILocation(line: 741, column: 26, scope: !3156)
!3176 = !DILocation(line: 741, column: 2, scope: !3156)
!3177 = !DILocation(line: 742, column: 1, scope: !3156)
!3178 = distinct !DISubprogram(name: "BKE_displist_make_surf", scope: !1, file: !1, line: 1189, type: !3179, scopeLine: 1192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !240)
!3179 = !DISubroutineType(types: !3180)
!3180 = !{null, !1333, !2871, !282, !3181, !950, !950, !950}
!3181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!3182 = !DILocalVariable(name: "scene", arg: 1, scope: !3178, file: !1, line: 1189, type: !1333)
!3183 = !DILocation(line: 1189, column: 36, scope: !3178)
!3184 = !DILocalVariable(name: "ob", arg: 2, scope: !3178, file: !1, line: 1189, type: !2871)
!3185 = !DILocation(line: 1189, column: 51, scope: !3178)
!3186 = !DILocalVariable(name: "dispbase", arg: 3, scope: !3178, file: !1, line: 1189, type: !282)
!3187 = !DILocation(line: 1189, column: 65, scope: !3178)
!3188 = !DILocalVariable(name: "r_dm_final", arg: 4, scope: !3178, file: !1, line: 1190, type: !3181)
!3189 = !DILocation(line: 1190, column: 43, scope: !3178)
!3190 = !DILocalVariable(name: "for_render", arg: 5, scope: !3178, file: !1, line: 1191, type: !950)
!3191 = !DILocation(line: 1191, column: 40, scope: !3178)
!3192 = !DILocalVariable(name: "for_orco", arg: 6, scope: !3178, file: !1, line: 1191, type: !950)
!3193 = !DILocation(line: 1191, column: 63, scope: !3178)
!3194 = !DILocalVariable(name: "use_render_resolution", arg: 7, scope: !3178, file: !1, line: 1191, type: !950)
!3195 = !DILocation(line: 1191, column: 84, scope: !3178)
!3196 = !DILocalVariable(name: "nubase", scope: !3178, file: !1, line: 1193, type: !283)
!3197 = !DILocation(line: 1193, column: 11, scope: !3178)
!3198 = !DILocalVariable(name: "nu", scope: !3178, file: !1, line: 1194, type: !3199)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3200, size: 64)
!3200 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nurb", file: !193, line: 166, baseType: !3201)
!3201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Nurb", file: !193, line: 147, size: 704, elements: !3202)
!3202 = !{!3203, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3233, !3257, !3258, !3259}
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3201, file: !193, line: 148, baseType: !3204, size: 64)
!3204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3201, size: 64)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3201, file: !193, line: 148, baseType: !3204, size: 64, offset: 64)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3201, file: !193, line: 149, baseType: !219, size: 16, offset: 128)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3201, file: !193, line: 150, baseType: !219, size: 16, offset: 144)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !3201, file: !193, line: 151, baseType: !219, size: 16, offset: 160)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3201, file: !193, line: 151, baseType: !219, size: 16, offset: 176)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "pntsu", scope: !3201, file: !193, line: 152, baseType: !106, size: 32, offset: 192)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "pntsv", scope: !3201, file: !193, line: 152, baseType: !106, size: 32, offset: 224)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3201, file: !193, line: 153, baseType: !2042, size: 32, offset: 256)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !3201, file: !193, line: 154, baseType: !219, size: 16, offset: 288)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !3201, file: !193, line: 154, baseType: !219, size: 16, offset: 304)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "orderu", scope: !3201, file: !193, line: 155, baseType: !219, size: 16, offset: 320)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "orderv", scope: !3201, file: !193, line: 155, baseType: !219, size: 16, offset: 336)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "flagu", scope: !3201, file: !193, line: 156, baseType: !219, size: 16, offset: 352)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "flagv", scope: !3201, file: !193, line: 156, baseType: !219, size: 16, offset: 368)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "knotsu", scope: !3201, file: !193, line: 158, baseType: !209, size: 64, offset: 384)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "knotsv", scope: !3201, file: !193, line: 158, baseType: !209, size: 64, offset: 448)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !3201, file: !193, line: 159, baseType: !3222, size: 64, offset: 512)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 64)
!3223 = !DIDerivedType(tag: DW_TAG_typedef, name: "BPoint", file: !193, line: 141, baseType: !3224)
!3224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BPoint", file: !193, line: 136, size: 288, elements: !3225)
!3225 = !{!3226, !3227, !3228, !3229, !3230, !3231, !3232}
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3224, file: !193, line: 137, baseType: !1537, size: 128)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !3224, file: !193, line: 138, baseType: !208, size: 32, offset: 128)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3224, file: !193, line: 138, baseType: !208, size: 32, offset: 160)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !3224, file: !193, line: 139, baseType: !219, size: 16, offset: 192)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !3224, file: !193, line: 139, baseType: !219, size: 16, offset: 208)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !3224, file: !193, line: 140, baseType: !208, size: 32, offset: 224)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3224, file: !193, line: 140, baseType: !208, size: 32, offset: 256)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !3201, file: !193, line: 160, baseType: !3234, size: 64, offset: 576)
!3234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3235, size: 64)
!3235 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !193, line: 133, baseType: !3236)
!3236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !193, line: 117, size: 576, elements: !3237)
!3237 = !{!3238, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3236, file: !193, line: 118, baseType: !3239, size: 288)
!3239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 288, elements: !3240)
!3240 = !{!473, !473}
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !3236, file: !193, line: 119, baseType: !208, size: 32, offset: 288)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3236, file: !193, line: 119, baseType: !208, size: 32, offset: 320)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !3236, file: !193, line: 119, baseType: !208, size: 32, offset: 352)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3236, file: !193, line: 121, baseType: !1359, size: 8, offset: 384)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !3236, file: !193, line: 123, baseType: !1359, size: 8, offset: 392)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !3236, file: !193, line: 123, baseType: !1359, size: 8, offset: 400)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !3236, file: !193, line: 124, baseType: !1359, size: 8, offset: 408)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !3236, file: !193, line: 124, baseType: !1359, size: 8, offset: 416)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !3236, file: !193, line: 124, baseType: !1359, size: 8, offset: 424)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !3236, file: !193, line: 126, baseType: !1359, size: 8, offset: 432)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !3236, file: !193, line: 128, baseType: !1359, size: 8, offset: 440)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !3236, file: !193, line: 129, baseType: !208, size: 32, offset: 448)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !3236, file: !193, line: 130, baseType: !208, size: 32, offset: 480)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !3236, file: !193, line: 130, baseType: !208, size: 32, offset: 512)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3236, file: !193, line: 132, baseType: !3256, size: 32, offset: 544)
!3256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 32, elements: !1538)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "tilt_interp", scope: !3201, file: !193, line: 162, baseType: !219, size: 16, offset: 640)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "radius_interp", scope: !3201, file: !193, line: 163, baseType: !219, size: 16, offset: 656)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "charidx", scope: !3201, file: !193, line: 165, baseType: !106, size: 32, offset: 672)
!3260 = !DILocation(line: 1194, column: 8, scope: !3178)
!3261 = !DILocalVariable(name: "cu", scope: !3178, file: !1, line: 1195, type: !3262)
!3262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3263, size: 64)
!3263 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curve", file: !193, line: 273, baseType: !3264)
!3264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Curve", file: !193, line: 193, size: 4224, elements: !3265)
!3265 = !{!3266, !3267, !3268, !3269, !3270, !3279, !3280, !3281, !3282, !3283, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3364, !3365, !3377, !3378, !3379, !3380, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3264, file: !193, line: 194, baseType: !1339, size: 960)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3264, file: !193, line: 195, baseType: !1402, size: 64, offset: 960)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3264, file: !193, line: 197, baseType: !1428, size: 64, offset: 1024)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "nurb", scope: !3264, file: !193, line: 199, baseType: !283, size: 128, offset: 1088)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "editnurb", scope: !3264, file: !193, line: 201, baseType: !3271, size: 64, offset: 1216)
!3271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3272, size: 64)
!3272 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditNurb", file: !193, line: 191, baseType: !3273)
!3273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditNurb", file: !193, line: 180, size: 256, elements: !3274)
!3274 = !{!3275, !3276, !3277, !3278}
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "nurbs", scope: !3273, file: !193, line: 182, baseType: !283, size: 128)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "keyindex", scope: !3273, file: !193, line: 185, baseType: !1458, size: 64, offset: 128)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !3273, file: !193, line: 188, baseType: !106, size: 32, offset: 192)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3273, file: !193, line: 190, baseType: !3256, size: 32, offset: 224)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "bevobj", scope: !3264, file: !193, line: 203, baseType: !1405, size: 64, offset: 1280)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "taperobj", scope: !3264, file: !193, line: 203, baseType: !1405, size: 64, offset: 1344)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "textoncurve", scope: !3264, file: !193, line: 203, baseType: !1405, size: 64, offset: 1408)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3264, file: !193, line: 204, baseType: !1425, size: 64, offset: 1472)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3264, file: !193, line: 205, baseType: !3284, size: 64, offset: 1536)
!3284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3285, size: 64)
!3285 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !193, line: 45, flags: DIFlagFwdDecl)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3264, file: !193, line: 206, baseType: !1521, size: 64, offset: 1600)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !3264, file: !193, line: 209, baseType: !471, size: 96, offset: 1664)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3264, file: !193, line: 210, baseType: !471, size: 96, offset: 1760)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !3264, file: !193, line: 211, baseType: !471, size: 96, offset: 1856)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3264, file: !193, line: 213, baseType: !219, size: 16, offset: 1952)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !3264, file: !193, line: 215, baseType: !219, size: 16, offset: 1968)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !3264, file: !193, line: 216, baseType: !219, size: 16, offset: 1984)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "twist_mode", scope: !3264, file: !193, line: 216, baseType: !219, size: 16, offset: 2000)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "twist_smooth", scope: !3264, file: !193, line: 217, baseType: !208, size: 32, offset: 2016)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "smallcaps_scale", scope: !3264, file: !193, line: 217, baseType: !208, size: 32, offset: 2048)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "pathlen", scope: !3264, file: !193, line: 219, baseType: !106, size: 32, offset: 2080)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "bevresol", scope: !3264, file: !193, line: 220, baseType: !219, size: 16, offset: 2112)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !3264, file: !193, line: 220, baseType: !219, size: 16, offset: 2128)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3264, file: !193, line: 221, baseType: !106, size: 32, offset: 2144)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !3264, file: !193, line: 222, baseType: !208, size: 32, offset: 2176)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "ext1", scope: !3264, file: !193, line: 222, baseType: !208, size: 32, offset: 2208)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "ext2", scope: !3264, file: !193, line: 222, baseType: !208, size: 32, offset: 2240)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !3264, file: !193, line: 225, baseType: !219, size: 16, offset: 2272)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !3264, file: !193, line: 225, baseType: !219, size: 16, offset: 2288)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "resolu_ren", scope: !3264, file: !193, line: 226, baseType: !219, size: 16, offset: 2304)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "resolv_ren", scope: !3264, file: !193, line: 226, baseType: !219, size: 16, offset: 2320)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "actnu", scope: !3264, file: !193, line: 229, baseType: !106, size: 32, offset: 2336)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "actvert", scope: !3264, file: !193, line: 231, baseType: !106, size: 32, offset: 2368)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3264, file: !193, line: 233, baseType: !3256, size: 32, offset: 2400)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !3264, file: !193, line: 236, baseType: !219, size: 16, offset: 2432)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "spacemode", scope: !3264, file: !193, line: 237, baseType: !1359, size: 8, offset: 2448)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3264, file: !193, line: 237, baseType: !1359, size: 8, offset: 2456)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !3264, file: !193, line: 238, baseType: !208, size: 32, offset: 2464)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "linedist", scope: !3264, file: !193, line: 238, baseType: !208, size: 32, offset: 2496)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "shear", scope: !3264, file: !193, line: 238, baseType: !208, size: 32, offset: 2528)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !3264, file: !193, line: 238, baseType: !208, size: 32, offset: 2560)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "wordspace", scope: !3264, file: !193, line: 238, baseType: !208, size: 32, offset: 2592)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "ulpos", scope: !3264, file: !193, line: 238, baseType: !208, size: 32, offset: 2624)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "ulheight", scope: !3264, file: !193, line: 238, baseType: !208, size: 32, offset: 2656)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !3264, file: !193, line: 239, baseType: !208, size: 32, offset: 2688)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !3264, file: !193, line: 239, baseType: !208, size: 32, offset: 2720)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "linewidth", scope: !3264, file: !193, line: 240, baseType: !208, size: 32, offset: 2752)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3264, file: !193, line: 244, baseType: !106, size: 32, offset: 2784)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "selstart", scope: !3264, file: !193, line: 245, baseType: !106, size: 32, offset: 2816)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !3264, file: !193, line: 245, baseType: !106, size: 32, offset: 2848)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "len_wchar", scope: !3264, file: !193, line: 248, baseType: !106, size: 32, offset: 2880)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3264, file: !193, line: 249, baseType: !106, size: 32, offset: 2912)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3264, file: !193, line: 250, baseType: !1525, size: 64, offset: 2944)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "editfont", scope: !3264, file: !193, line: 251, baseType: !3330, size: 64, offset: 3008)
!3330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3331, size: 64)
!3331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditFont", file: !3332, line: 60, size: 704, elements: !3333)
!3332 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_font.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3333 = !{!3334, !3338, !3347, !3348, !3349, !3359, !3360, !3361, !3362, !3363}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "copybuf", scope: !3331, file: !3332, line: 61, baseType: !3335, size: 64)
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 64)
!3336 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !3337, line: 74, baseType: !106)
!3337 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "copybufinfo", scope: !3331, file: !3332, line: 62, baseType: !3339, size: 64, offset: 64)
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 64)
!3340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CharInfo", file: !193, line: 168, size: 64, elements: !3341)
!3341 = !{!3342, !3343, !3344, !3345, !3346}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "kern", scope: !3340, file: !193, line: 169, baseType: !219, size: 16)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3340, file: !193, line: 170, baseType: !219, size: 16, offset: 16)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3340, file: !193, line: 171, baseType: !1359, size: 8, offset: 32)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3340, file: !193, line: 172, baseType: !1359, size: 8, offset: 40)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3340, file: !193, line: 173, baseType: !219, size: 16, offset: 48)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "textbuf", scope: !3331, file: !3332, line: 64, baseType: !3335, size: 64, offset: 128)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "textbufinfo", scope: !3331, file: !3332, line: 65, baseType: !3339, size: 64, offset: 192)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "selboxes", scope: !3331, file: !3332, line: 68, baseType: !3350, size: 64, offset: 256)
!3350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 64)
!3351 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditFontSelBox", file: !3332, line: 58, baseType: !3352)
!3352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditFontSelBox", file: !3332, line: 55, size: 160, elements: !3353)
!3353 = !{!3354, !3355, !3356, !3357, !3358}
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3352, file: !3332, line: 56, baseType: !208, size: 32)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3352, file: !3332, line: 56, baseType: !208, size: 32, offset: 32)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !3352, file: !3332, line: 56, baseType: !208, size: 32, offset: 64)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !3352, file: !3332, line: 56, baseType: !208, size: 32, offset: 96)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !3352, file: !3332, line: 57, baseType: !208, size: 32, offset: 128)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "textcurs", scope: !3331, file: !3332, line: 69, baseType: !1994, size: 256, offset: 320)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3331, file: !3332, line: 73, baseType: !106, size: 32, offset: 576)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3331, file: !3332, line: 73, baseType: !106, size: 32, offset: 608)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "selstart", scope: !3331, file: !3332, line: 74, baseType: !106, size: 32, offset: 640)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !3331, file: !3332, line: 74, baseType: !106, size: 32, offset: 672)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !3264, file: !193, line: 253, baseType: !1387, size: 512, offset: 3072)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !3264, file: !193, line: 254, baseType: !3366, size: 64, offset: 3584)
!3366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3367, size: 64)
!3367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VFont", file: !3368, line: 45, size: 9344, elements: !3369)
!3368 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vfont_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3369 = !{!3370, !3371, !3372, !3375, !3376}
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3367, file: !3368, line: 46, baseType: !1339, size: 960)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3367, file: !3368, line: 48, baseType: !1358, size: 8192, offset: 960)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3367, file: !3368, line: 50, baseType: !3373, size: 64, offset: 9152)
!3373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3374, size: 64)
!3374 = !DICompositeType(tag: DW_TAG_structure_type, name: "VFontData", file: !3368, line: 43, flags: DIFlagFwdDecl)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !3367, file: !3368, line: 51, baseType: !1365, size: 64, offset: 9216)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "temp_pf", scope: !3367, file: !3368, line: 55, baseType: !1365, size: 64, offset: 9280)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "vfontb", scope: !3264, file: !193, line: 255, baseType: !3366, size: 64, offset: 3648)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "vfonti", scope: !3264, file: !193, line: 256, baseType: !3366, size: 64, offset: 3712)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "vfontbi", scope: !3264, file: !193, line: 257, baseType: !3366, size: 64, offset: 3776)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "tb", scope: !3264, file: !193, line: 259, baseType: !3381, size: 64, offset: 3840)
!3381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3382, size: 64)
!3382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextBox", file: !193, line: 176, size: 128, elements: !3383)
!3383 = !{!3384, !3385, !3386, !3387}
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3382, file: !193, line: 177, baseType: !208, size: 32)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3382, file: !193, line: 177, baseType: !208, size: 32, offset: 32)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !3382, file: !193, line: 177, baseType: !208, size: 32, offset: 64)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !3382, file: !193, line: 177, baseType: !208, size: 32, offset: 96)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "totbox", scope: !3264, file: !193, line: 260, baseType: !106, size: 32, offset: 3904)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "actbox", scope: !3264, file: !193, line: 260, baseType: !106, size: 32, offset: 3936)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "strinfo", scope: !3264, file: !193, line: 262, baseType: !3339, size: 64, offset: 3968)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "curinfo", scope: !3264, file: !193, line: 263, baseType: !3340, size: 64, offset: 4032)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !3264, file: !193, line: 267, baseType: !208, size: 32, offset: 4096)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1", scope: !3264, file: !193, line: 268, baseType: !208, size: 32, offset: 4128)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2", scope: !3264, file: !193, line: 268, baseType: !208, size: 32, offset: 4160)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1_mapping", scope: !3264, file: !193, line: 269, baseType: !1359, size: 8, offset: 4192)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2_mapping", scope: !3264, file: !193, line: 269, baseType: !1359, size: 8, offset: 4200)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3264, file: !193, line: 271, baseType: !2431, size: 16, offset: 4208)
!3398 = !DILocation(line: 1195, column: 9, scope: !3178)
!3399 = !DILocation(line: 1195, column: 14, scope: !3178)
!3400 = !DILocation(line: 1195, column: 18, scope: !3178)
!3401 = !DILocalVariable(name: "dl", scope: !3178, file: !1, line: 1196, type: !210)
!3402 = !DILocation(line: 1196, column: 12, scope: !3178)
!3403 = !DILocalVariable(name: "data", scope: !3178, file: !1, line: 1197, type: !209)
!3404 = !DILocation(line: 1197, column: 9, scope: !3178)
!3405 = !DILocalVariable(name: "len", scope: !3178, file: !1, line: 1198, type: !106)
!3406 = !DILocation(line: 1198, column: 6, scope: !3178)
!3407 = !DILocation(line: 1200, column: 7, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3178, file: !1, line: 1200, column: 6)
!3409 = !DILocation(line: 1200, column: 18, scope: !3408)
!3410 = !DILocation(line: 1200, column: 21, scope: !3408)
!3411 = !DILocation(line: 1200, column: 25, scope: !3408)
!3412 = !DILocation(line: 1200, column: 6, scope: !3178)
!3413 = !DILocation(line: 1201, column: 59, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3408, file: !1, line: 1200, column: 35)
!3415 = !DILocation(line: 1201, column: 35, scope: !3414)
!3416 = !DILocation(line: 1201, column: 3, scope: !3414)
!3417 = !DILocation(line: 1202, column: 2, scope: !3414)
!3418 = !DILocation(line: 1204, column: 36, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3408, file: !1, line: 1203, column: 7)
!3420 = !DILocation(line: 1204, column: 40, scope: !3419)
!3421 = !DILocation(line: 1204, column: 3, scope: !3419)
!3422 = !DILocation(line: 1207, column: 7, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3178, file: !1, line: 1207, column: 6)
!3424 = !DILocation(line: 1207, column: 6, scope: !3178)
!3425 = !DILocation(line: 1208, column: 28, scope: !3423)
!3426 = !DILocation(line: 1208, column: 35, scope: !3423)
!3427 = !DILocation(line: 1208, column: 48, scope: !3423)
!3428 = !DILocation(line: 1208, column: 60, scope: !3423)
!3429 = !DILocation(line: 1208, column: 3, scope: !3423)
!3430 = !DILocation(line: 1210, column: 19, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3178, file: !1, line: 1210, column: 2)
!3432 = !DILocation(line: 1210, column: 12, scope: !3431)
!3433 = !DILocation(line: 1210, column: 10, scope: !3431)
!3434 = !DILocation(line: 1210, column: 7, scope: !3431)
!3435 = !DILocation(line: 1210, column: 26, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3431, file: !1, line: 1210, column: 2)
!3437 = !DILocation(line: 1210, column: 2, scope: !3431)
!3438 = !DILocation(line: 1211, column: 8, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3440, file: !1, line: 1211, column: 7)
!3440 = distinct !DILexicalBlock(scope: !3436, file: !1, line: 1210, column: 45)
!3441 = !DILocation(line: 1211, column: 19, scope: !3439)
!3442 = !DILocation(line: 1211, column: 22, scope: !3439)
!3443 = !DILocation(line: 1211, column: 26, scope: !3439)
!3444 = !DILocation(line: 1211, column: 31, scope: !3439)
!3445 = !DILocation(line: 1211, column: 37, scope: !3439)
!3446 = !DILocation(line: 1211, column: 64, scope: !3439)
!3447 = !DILocation(line: 1211, column: 40, scope: !3439)
!3448 = !DILocation(line: 1211, column: 7, scope: !3440)
!3449 = !DILocalVariable(name: "resolu", scope: !3450, file: !1, line: 1212, type: !106)
!3450 = distinct !DILexicalBlock(scope: !3439, file: !1, line: 1211, column: 69)
!3451 = !DILocation(line: 1212, column: 8, scope: !3450)
!3452 = !DILocation(line: 1212, column: 17, scope: !3450)
!3453 = !DILocation(line: 1212, column: 21, scope: !3450)
!3454 = !DILocalVariable(name: "resolv", scope: !3450, file: !1, line: 1212, type: !106)
!3455 = !DILocation(line: 1212, column: 29, scope: !3450)
!3456 = !DILocation(line: 1212, column: 38, scope: !3450)
!3457 = !DILocation(line: 1212, column: 42, scope: !3450)
!3458 = !DILocation(line: 1214, column: 8, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3450, file: !1, line: 1214, column: 8)
!3460 = !DILocation(line: 1214, column: 8, scope: !3450)
!3461 = !DILocation(line: 1215, column: 9, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3463, file: !1, line: 1215, column: 9)
!3463 = distinct !DILexicalBlock(scope: !3459, file: !1, line: 1214, column: 31)
!3464 = !DILocation(line: 1215, column: 13, scope: !3462)
!3465 = !DILocation(line: 1215, column: 9, scope: !3463)
!3466 = !DILocation(line: 1216, column: 15, scope: !3462)
!3467 = !DILocation(line: 1216, column: 19, scope: !3462)
!3468 = !DILocation(line: 1216, column: 13, scope: !3462)
!3469 = !DILocation(line: 1216, column: 6, scope: !3462)
!3470 = !DILocation(line: 1217, column: 9, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3463, file: !1, line: 1217, column: 9)
!3472 = !DILocation(line: 1217, column: 13, scope: !3471)
!3473 = !DILocation(line: 1217, column: 9, scope: !3463)
!3474 = !DILocation(line: 1218, column: 15, scope: !3471)
!3475 = !DILocation(line: 1218, column: 19, scope: !3471)
!3476 = !DILocation(line: 1218, column: 13, scope: !3471)
!3477 = !DILocation(line: 1218, column: 6, scope: !3471)
!3478 = !DILocation(line: 1219, column: 4, scope: !3463)
!3479 = !DILocation(line: 1221, column: 8, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3450, file: !1, line: 1221, column: 8)
!3481 = !DILocation(line: 1221, column: 12, scope: !3480)
!3482 = !DILocation(line: 1221, column: 18, scope: !3480)
!3483 = !DILocation(line: 1221, column: 8, scope: !3450)
!3484 = !DILocation(line: 1222, column: 11, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3480, file: !1, line: 1221, column: 24)
!3486 = !DILocation(line: 1222, column: 27, scope: !3485)
!3487 = !DILocation(line: 1222, column: 25, scope: !3485)
!3488 = !DILocation(line: 1222, column: 9, scope: !3485)
!3489 = !DILocation(line: 1224, column: 10, scope: !3485)
!3490 = !DILocation(line: 1224, column: 8, scope: !3485)
!3491 = !DILocation(line: 1225, column: 17, scope: !3485)
!3492 = !DILocation(line: 1225, column: 29, scope: !3485)
!3493 = !DILocation(line: 1225, column: 33, scope: !3485)
!3494 = !DILocation(line: 1225, column: 5, scope: !3485)
!3495 = !DILocation(line: 1225, column: 9, scope: !3485)
!3496 = !DILocation(line: 1225, column: 15, scope: !3485)
!3497 = !DILocation(line: 1227, column: 17, scope: !3485)
!3498 = !DILocation(line: 1227, column: 27, scope: !3485)
!3499 = !DILocation(line: 1227, column: 5, scope: !3485)
!3500 = !DILocation(line: 1228, column: 5, scope: !3485)
!3501 = !DILocation(line: 1228, column: 9, scope: !3485)
!3502 = !DILocation(line: 1228, column: 15, scope: !3485)
!3503 = !DILocation(line: 1229, column: 14, scope: !3485)
!3504 = !DILocation(line: 1229, column: 5, scope: !3485)
!3505 = !DILocation(line: 1229, column: 9, scope: !3485)
!3506 = !DILocation(line: 1229, column: 12, scope: !3485)
!3507 = !DILocation(line: 1230, column: 15, scope: !3485)
!3508 = !DILocation(line: 1230, column: 19, scope: !3485)
!3509 = !DILocation(line: 1230, column: 5, scope: !3485)
!3510 = !DILocation(line: 1230, column: 9, scope: !3485)
!3511 = !DILocation(line: 1230, column: 13, scope: !3485)
!3512 = !DILocation(line: 1231, column: 19, scope: !3485)
!3513 = !DILocation(line: 1231, column: 23, scope: !3485)
!3514 = !DILocation(line: 1231, column: 5, scope: !3485)
!3515 = !DILocation(line: 1231, column: 9, scope: !3485)
!3516 = !DILocation(line: 1231, column: 17, scope: !3485)
!3517 = !DILocation(line: 1235, column: 14, scope: !3485)
!3518 = !DILocation(line: 1235, column: 18, scope: !3485)
!3519 = !DILocation(line: 1235, column: 23, scope: !3485)
!3520 = !DILocation(line: 1235, column: 5, scope: !3485)
!3521 = !DILocation(line: 1235, column: 9, scope: !3485)
!3522 = !DILocation(line: 1235, column: 12, scope: !3485)
!3523 = !DILocation(line: 1237, column: 12, scope: !3485)
!3524 = !DILocation(line: 1237, column: 16, scope: !3485)
!3525 = !DILocation(line: 1237, column: 10, scope: !3485)
!3526 = !DILocation(line: 1238, column: 9, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3485, file: !1, line: 1238, column: 9)
!3528 = !DILocation(line: 1238, column: 13, scope: !3527)
!3529 = !DILocation(line: 1238, column: 19, scope: !3527)
!3530 = !DILocation(line: 1238, column: 9, scope: !3485)
!3531 = !DILocation(line: 1238, column: 37, scope: !3527)
!3532 = !DILocation(line: 1238, column: 41, scope: !3527)
!3533 = !DILocation(line: 1238, column: 46, scope: !3527)
!3534 = !DILocation(line: 1239, column: 10, scope: !3527)
!3535 = !DILocation(line: 1239, column: 14, scope: !3527)
!3536 = !DILocation(line: 1239, column: 19, scope: !3527)
!3537 = !DILocation(line: 1241, column: 24, scope: !3485)
!3538 = !DILocation(line: 1241, column: 28, scope: !3485)
!3539 = !DILocation(line: 1241, column: 52, scope: !3485)
!3540 = !DILocation(line: 1241, column: 5, scope: !3485)
!3541 = !DILocation(line: 1242, column: 4, scope: !3485)
!3542 = !DILocation(line: 1244, column: 12, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3480, file: !1, line: 1243, column: 9)
!3544 = !DILocation(line: 1244, column: 16, scope: !3543)
!3545 = !DILocation(line: 1244, column: 24, scope: !3543)
!3546 = !DILocation(line: 1244, column: 22, scope: !3543)
!3547 = !DILocation(line: 1244, column: 35, scope: !3543)
!3548 = !DILocation(line: 1244, column: 39, scope: !3543)
!3549 = !DILocation(line: 1244, column: 47, scope: !3543)
!3550 = !DILocation(line: 1244, column: 45, scope: !3543)
!3551 = !DILocation(line: 1244, column: 32, scope: !3543)
!3552 = !DILocation(line: 1244, column: 9, scope: !3543)
!3553 = !DILocation(line: 1246, column: 10, scope: !3543)
!3554 = !DILocation(line: 1246, column: 8, scope: !3543)
!3555 = !DILocation(line: 1247, column: 17, scope: !3543)
!3556 = !DILocation(line: 1247, column: 29, scope: !3543)
!3557 = !DILocation(line: 1247, column: 33, scope: !3543)
!3558 = !DILocation(line: 1247, column: 5, scope: !3543)
!3559 = !DILocation(line: 1247, column: 9, scope: !3543)
!3560 = !DILocation(line: 1247, column: 15, scope: !3543)
!3561 = !DILocation(line: 1248, column: 17, scope: !3543)
!3562 = !DILocation(line: 1248, column: 27, scope: !3543)
!3563 = !DILocation(line: 1248, column: 5, scope: !3543)
!3564 = !DILocation(line: 1250, column: 15, scope: !3543)
!3565 = !DILocation(line: 1250, column: 19, scope: !3543)
!3566 = !DILocation(line: 1250, column: 5, scope: !3543)
!3567 = !DILocation(line: 1250, column: 9, scope: !3543)
!3568 = !DILocation(line: 1250, column: 13, scope: !3543)
!3569 = !DILocation(line: 1251, column: 19, scope: !3543)
!3570 = !DILocation(line: 1251, column: 23, scope: !3543)
!3571 = !DILocation(line: 1251, column: 5, scope: !3543)
!3572 = !DILocation(line: 1251, column: 9, scope: !3543)
!3573 = !DILocation(line: 1251, column: 17, scope: !3543)
!3574 = !DILocation(line: 1255, column: 14, scope: !3543)
!3575 = !DILocation(line: 1255, column: 18, scope: !3543)
!3576 = !DILocation(line: 1255, column: 23, scope: !3543)
!3577 = !DILocation(line: 1255, column: 5, scope: !3543)
!3578 = !DILocation(line: 1255, column: 9, scope: !3543)
!3579 = !DILocation(line: 1255, column: 12, scope: !3543)
!3580 = !DILocation(line: 1257, column: 12, scope: !3543)
!3581 = !DILocation(line: 1257, column: 16, scope: !3543)
!3582 = !DILocation(line: 1257, column: 10, scope: !3543)
!3583 = !DILocation(line: 1258, column: 5, scope: !3543)
!3584 = !DILocation(line: 1258, column: 9, scope: !3543)
!3585 = !DILocation(line: 1258, column: 14, scope: !3543)
!3586 = !DILocation(line: 1260, column: 18, scope: !3543)
!3587 = !DILocation(line: 1260, column: 22, scope: !3543)
!3588 = !DILocation(line: 1260, column: 30, scope: !3543)
!3589 = !DILocation(line: 1260, column: 28, scope: !3543)
!3590 = !DILocation(line: 1260, column: 5, scope: !3543)
!3591 = !DILocation(line: 1260, column: 9, scope: !3543)
!3592 = !DILocation(line: 1260, column: 15, scope: !3543)
!3593 = !DILocation(line: 1261, column: 15, scope: !3543)
!3594 = !DILocation(line: 1261, column: 19, scope: !3543)
!3595 = !DILocation(line: 1261, column: 27, scope: !3543)
!3596 = !DILocation(line: 1261, column: 25, scope: !3543)
!3597 = !DILocation(line: 1261, column: 5, scope: !3543)
!3598 = !DILocation(line: 1261, column: 9, scope: !3543)
!3599 = !DILocation(line: 1261, column: 12, scope: !3543)
!3600 = !DILocation(line: 1262, column: 9, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3543, file: !1, line: 1262, column: 9)
!3602 = !DILocation(line: 1262, column: 13, scope: !3601)
!3603 = !DILocation(line: 1262, column: 19, scope: !3601)
!3604 = !DILocation(line: 1262, column: 9, scope: !3543)
!3605 = !DILocation(line: 1262, column: 37, scope: !3601)
!3606 = !DILocation(line: 1262, column: 41, scope: !3601)
!3607 = !DILocation(line: 1262, column: 46, scope: !3601)
!3608 = !DILocation(line: 1263, column: 9, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3543, file: !1, line: 1263, column: 9)
!3610 = !DILocation(line: 1263, column: 13, scope: !3609)
!3611 = !DILocation(line: 1263, column: 19, scope: !3609)
!3612 = !DILocation(line: 1263, column: 9, scope: !3543)
!3613 = !DILocation(line: 1263, column: 37, scope: !3609)
!3614 = !DILocation(line: 1263, column: 41, scope: !3609)
!3615 = !DILocation(line: 1263, column: 46, scope: !3609)
!3616 = !DILocation(line: 1265, column: 24, scope: !3543)
!3617 = !DILocation(line: 1265, column: 28, scope: !3543)
!3618 = !DILocation(line: 1265, column: 37, scope: !3543)
!3619 = !DILocation(line: 1265, column: 45, scope: !3543)
!3620 = !DILocation(line: 1265, column: 5, scope: !3543)
!3621 = !DILocation(line: 1268, column: 27, scope: !3543)
!3622 = !DILocation(line: 1268, column: 5, scope: !3543)
!3623 = !DILocation(line: 1270, column: 3, scope: !3450)
!3624 = !DILocation(line: 1271, column: 2, scope: !3440)
!3625 = !DILocation(line: 1210, column: 35, scope: !3436)
!3626 = !DILocation(line: 1210, column: 39, scope: !3436)
!3627 = !DILocation(line: 1210, column: 33, scope: !3436)
!3628 = !DILocation(line: 1210, column: 2, scope: !3436)
!3629 = distinct !{!3629, !3437, !3630}
!3630 = !DILocation(line: 1271, column: 2, scope: !3431)
!3631 = !DILocation(line: 1273, column: 7, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3178, file: !1, line: 1273, column: 6)
!3633 = !DILocation(line: 1273, column: 6, scope: !3178)
!3634 = !DILocation(line: 1274, column: 27, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3632, file: !1, line: 1273, column: 17)
!3636 = !DILocation(line: 1274, column: 31, scope: !3635)
!3637 = !DILocation(line: 1274, column: 44, scope: !3635)
!3638 = !DILocation(line: 1274, column: 3, scope: !3635)
!3639 = !DILocation(line: 1275, column: 29, scope: !3635)
!3640 = !DILocation(line: 1275, column: 36, scope: !3635)
!3641 = !DILocation(line: 1275, column: 49, scope: !3635)
!3642 = !DILocation(line: 1275, column: 59, scope: !3635)
!3643 = !DILocation(line: 1276, column: 29, scope: !3635)
!3644 = !DILocation(line: 1276, column: 41, scope: !3635)
!3645 = !DILocation(line: 1275, column: 3, scope: !3635)
!3646 = !DILocation(line: 1277, column: 2, scope: !3635)
!3647 = !DILocation(line: 1279, column: 2, scope: !3178)
!3648 = !DILocation(line: 1280, column: 1, scope: !3178)
!3649 = distinct !DISubprogram(name: "curve_calc_modifiers_pre", scope: !1, file: !1, line: 786, type: !3650, scopeLine: 788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!3650 = !DISubroutineType(types: !3651)
!3651 = !{null, !1333, !2871, !282, !950, !950}
!3652 = !DILocalVariable(name: "scene", arg: 1, scope: !3649, file: !1, line: 786, type: !1333)
!3653 = !DILocation(line: 786, column: 45, scope: !3649)
!3654 = !DILocalVariable(name: "ob", arg: 2, scope: !3649, file: !1, line: 786, type: !2871)
!3655 = !DILocation(line: 786, column: 60, scope: !3649)
!3656 = !DILocalVariable(name: "nurb", arg: 3, scope: !3649, file: !1, line: 786, type: !282)
!3657 = !DILocation(line: 786, column: 74, scope: !3649)
!3658 = !DILocalVariable(name: "for_render", arg: 4, scope: !3649, file: !1, line: 787, type: !950)
!3659 = !DILocation(line: 787, column: 49, scope: !3649)
!3660 = !DILocalVariable(name: "use_render_resolution", arg: 5, scope: !3649, file: !1, line: 787, type: !950)
!3661 = !DILocation(line: 787, column: 72, scope: !3649)
!3662 = !DILocalVariable(name: "virtualModifierData", scope: !3649, file: !1, line: 789, type: !3663)
!3663 = !DIDerivedType(tag: DW_TAG_typedef, name: "VirtualModifierData", file: !98, line: 391, baseType: !3664)
!3664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VirtualModifierData", file: !98, line: 386, size: 5568, elements: !3665)
!3665 = !{!3666, !3690, !3699, !3708}
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "amd", scope: !3664, file: !98, line: 387, baseType: !3667, size: 1600)
!3667 = !DIDerivedType(tag: DW_TAG_typedef, name: "ArmatureModifierData", file: !105, line: 535, baseType: !3668)
!3668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArmatureModifierData", file: !105, line: 527, size: 1600, elements: !3669)
!3669 = !{!3670, !3684, !3685, !3686, !3687, !3688, !3689}
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !3668, file: !105, line: 528, baseType: !3671, size: 896)
!3671 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierData", file: !105, line: 110, baseType: !3672)
!3672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierData", file: !105, line: 99, size: 896, elements: !3673)
!3673 = !{!3674, !3676, !3677, !3678, !3679, !3680, !3681, !3682, !3683}
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3672, file: !105, line: 100, baseType: !3675, size: 64)
!3675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3672, size: 64)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3672, file: !105, line: 100, baseType: !3675, size: 64, offset: 64)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3672, file: !105, line: 102, baseType: !106, size: 32, offset: 128)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3672, file: !105, line: 102, baseType: !106, size: 32, offset: 160)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "stackindex", scope: !3672, file: !105, line: 103, baseType: !106, size: 32, offset: 192)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3672, file: !105, line: 103, baseType: !106, size: 32, offset: 224)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3672, file: !105, line: 104, baseType: !1387, size: 512, offset: 256)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3672, file: !105, line: 107, baseType: !2156, size: 64, offset: 768)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !3672, file: !105, line: 109, baseType: !1525, size: 64, offset: 832)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "deformflag", scope: !3668, file: !105, line: 530, baseType: !219, size: 16, offset: 896)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "multi", scope: !3668, file: !105, line: 530, baseType: !219, size: 16, offset: 912)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3668, file: !105, line: 531, baseType: !106, size: 32, offset: 928)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3668, file: !105, line: 532, baseType: !1405, size: 64, offset: 960)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "prevCos", scope: !3668, file: !105, line: 533, baseType: !209, size: 64, offset: 1024)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "defgrp_name", scope: !3668, file: !105, line: 534, baseType: !1387, size: 512, offset: 1088)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !3664, file: !98, line: 388, baseType: !3691, size: 1536, offset: 1600)
!3691 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveModifierData", file: !105, line: 154, baseType: !3692)
!3692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveModifierData", file: !105, line: 147, size: 1536, elements: !3693)
!3693 = !{!3694, !3695, !3696, !3697, !3698}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !3692, file: !105, line: 148, baseType: !3671, size: 896)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3692, file: !105, line: 150, baseType: !1405, size: 64, offset: 896)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3692, file: !105, line: 151, baseType: !1387, size: 512, offset: 960)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "defaxis", scope: !3692, file: !105, line: 152, baseType: !219, size: 16, offset: 1472)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3692, file: !105, line: 153, baseType: !2466, size: 48, offset: 1488)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "lmd", scope: !3664, file: !98, line: 389, baseType: !3700, size: 1536, offset: 3136)
!3700 = !DIDerivedType(tag: DW_TAG_typedef, name: "LatticeModifierData", file: !105, line: 145, baseType: !3701)
!3701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LatticeModifierData", file: !105, line: 138, size: 1536, elements: !3702)
!3702 = !{!3703, !3704, !3705, !3706, !3707}
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !3701, file: !105, line: 139, baseType: !3671, size: 896)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3701, file: !105, line: 141, baseType: !1405, size: 64, offset: 896)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3701, file: !105, line: 142, baseType: !1387, size: 512, offset: 960)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !3701, file: !105, line: 143, baseType: !208, size: 32, offset: 1472)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3701, file: !105, line: 144, baseType: !3256, size: 32, offset: 1504)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "smd", scope: !3664, file: !98, line: 390, baseType: !3709, size: 896, offset: 4672)
!3709 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShapeKeyModifierData", file: !105, line: 816, baseType: !3710)
!3710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShapeKeyModifierData", file: !105, line: 814, size: 896, elements: !3711)
!3711 = !{!3712}
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !3710, file: !105, line: 815, baseType: !3671, size: 896)
!3713 = !DILocation(line: 789, column: 22, scope: !3649)
!3714 = !DILocalVariable(name: "md", scope: !3649, file: !1, line: 790, type: !3715)
!3715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 64)
!3716 = !DILocation(line: 790, column: 16, scope: !3649)
!3717 = !DILocation(line: 790, column: 54, scope: !3649)
!3718 = !DILocation(line: 790, column: 21, scope: !3649)
!3719 = !DILocalVariable(name: "pretessellatePoint", scope: !3649, file: !1, line: 791, type: !3715)
!3720 = !DILocation(line: 791, column: 16, scope: !3649)
!3721 = !DILocalVariable(name: "cu", scope: !3649, file: !1, line: 792, type: !3262)
!3722 = !DILocation(line: 792, column: 9, scope: !3649)
!3723 = !DILocation(line: 792, column: 14, scope: !3649)
!3724 = !DILocation(line: 792, column: 18, scope: !3649)
!3725 = !DILocalVariable(name: "numVerts", scope: !3649, file: !1, line: 793, type: !106)
!3726 = !DILocation(line: 793, column: 6, scope: !3649)
!3727 = !DILocalVariable(name: "editmode", scope: !3649, file: !1, line: 794, type: !950)
!3728 = !DILocation(line: 794, column: 13, scope: !3649)
!3729 = !DILocation(line: 794, column: 26, scope: !3649)
!3730 = !DILocation(line: 794, column: 37, scope: !3649)
!3731 = !DILocation(line: 794, column: 41, scope: !3649)
!3732 = !DILocation(line: 794, column: 45, scope: !3649)
!3733 = !DILocation(line: 794, column: 54, scope: !3649)
!3734 = !DILocation(line: 794, column: 57, scope: !3649)
!3735 = !DILocation(line: 794, column: 61, scope: !3649)
!3736 = !DILocation(line: 0, scope: !3649)
!3737 = !DILocation(line: 794, column: 24, scope: !3649)
!3738 = !DILocalVariable(name: "app_flag", scope: !3649, file: !1, line: 795, type: !3739)
!3739 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierApplyFlag", file: !98, line: 118, baseType: !97)
!3740 = !DILocation(line: 795, column: 20, scope: !3649)
!3741 = !DILocalVariable(name: "deformedVerts", scope: !3649, file: !1, line: 796, type: !1949)
!3742 = !DILocation(line: 796, column: 10, scope: !3649)
!3743 = !DILocalVariable(name: "keyVerts", scope: !3649, file: !1, line: 797, type: !209)
!3744 = !DILocation(line: 797, column: 9, scope: !3649)
!3745 = !DILocalVariable(name: "required_mode", scope: !3649, file: !1, line: 798, type: !106)
!3746 = !DILocation(line: 798, column: 6, scope: !3649)
!3747 = !DILocation(line: 800, column: 24, scope: !3649)
!3748 = !DILocation(line: 800, column: 2, scope: !3649)
!3749 = !DILocation(line: 802, column: 6, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3649, file: !1, line: 802, column: 6)
!3751 = !DILocation(line: 802, column: 6, scope: !3649)
!3752 = !DILocation(line: 803, column: 12, scope: !3750)
!3753 = !DILocation(line: 803, column: 3, scope: !3750)
!3754 = !DILocation(line: 804, column: 6, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3649, file: !1, line: 804, column: 6)
!3756 = !DILocation(line: 804, column: 6, scope: !3649)
!3757 = !DILocation(line: 805, column: 12, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 804, column: 29)
!3759 = !DILocation(line: 806, column: 17, scope: !3758)
!3760 = !DILocation(line: 807, column: 2, scope: !3758)
!3761 = !DILocation(line: 809, column: 17, scope: !3755)
!3762 = !DILocation(line: 811, column: 50, scope: !3649)
!3763 = !DILocation(line: 811, column: 57, scope: !3649)
!3764 = !DILocation(line: 811, column: 61, scope: !3649)
!3765 = !DILocation(line: 811, column: 84, scope: !3649)
!3766 = !DILocation(line: 811, column: 23, scope: !3649)
!3767 = !DILocation(line: 811, column: 21, scope: !3649)
!3768 = !DILocation(line: 813, column: 6, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3649, file: !1, line: 813, column: 6)
!3770 = !DILocation(line: 813, column: 6, scope: !3649)
!3771 = !DILocation(line: 814, column: 17, scope: !3769)
!3772 = !DILocation(line: 814, column: 3, scope: !3769)
!3773 = !DILocation(line: 816, column: 6, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3649, file: !1, line: 816, column: 6)
!3775 = !DILocation(line: 816, column: 10, scope: !3774)
!3776 = !DILocation(line: 816, column: 19, scope: !3774)
!3777 = !DILocation(line: 816, column: 6, scope: !3649)
!3778 = !DILocation(line: 817, column: 38, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3774, file: !1, line: 816, column: 28)
!3780 = !DILocation(line: 817, column: 45, scope: !3779)
!3781 = !DILocation(line: 817, column: 14, scope: !3779)
!3782 = !DILocation(line: 817, column: 12, scope: !3779)
!3783 = !DILocation(line: 819, column: 7, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3779, file: !1, line: 819, column: 7)
!3785 = !DILocation(line: 819, column: 7, scope: !3779)
!3786 = !DILocation(line: 824, column: 53, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3784, file: !1, line: 819, column: 17)
!3788 = !DILocation(line: 824, column: 59, scope: !3787)
!3789 = !DILocation(line: 824, column: 20, scope: !3787)
!3790 = !DILocation(line: 824, column: 18, scope: !3787)
!3791 = !DILocation(line: 826, column: 3, scope: !3787)
!3792 = !DILocation(line: 827, column: 2, scope: !3779)
!3793 = !DILocation(line: 829, column: 6, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3649, file: !1, line: 829, column: 6)
!3795 = !DILocation(line: 829, column: 6, scope: !3649)
!3796 = !DILocation(line: 830, column: 3, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3794, file: !1, line: 829, column: 26)
!3798 = !DILocation(line: 830, column: 10, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3800, file: !1, line: 830, column: 3)
!3800 = distinct !DILexicalBlock(scope: !3797, file: !1, line: 830, column: 3)
!3801 = !DILocation(line: 830, column: 3, scope: !3800)
!3802 = !DILocalVariable(name: "mti", scope: !3803, file: !1, line: 831, type: !3804)
!3803 = distinct !DILexicalBlock(scope: !3799, file: !1, line: 830, column: 29)
!3804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3805, size: 64)
!3805 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeInfo", file: !98, line: 309, baseType: !3806)
!3806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierTypeInfo", file: !98, line: 121, size: 1728, elements: !3807)
!3807 = !{!3808, !3809, !3810, !3811, !3813, !3815, !3819, !3823, !3828, !3834, !3838, !3842, !3846, !3850, !3856, !3857, !3861, !3867, !3871, !3872, !3881, !3890}
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3806, file: !98, line: 123, baseType: !2724, size: 256)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "structName", scope: !3806, file: !98, line: 128, baseType: !2724, size: 256, offset: 256)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "structSize", scope: !3806, file: !98, line: 131, baseType: !106, size: 32, offset: 512)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3806, file: !98, line: 133, baseType: !3812, size: 32, offset: 544)
!3812 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeType", file: !98, line: 71, baseType: !116)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3806, file: !98, line: 134, baseType: !3814, size: 32, offset: 576)
!3814 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeFlag", file: !98, line: 104, baseType: !124)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "copyData", scope: !3806, file: !98, line: 142, baseType: !3816, size: 64, offset: 640)
!3816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3817, size: 64)
!3817 = !DISubroutineType(types: !3818)
!3818 = !{null, !3675, !3675}
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "deformVerts", scope: !3806, file: !98, line: 151, baseType: !3820, size: 64, offset: 704)
!3820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3821, size: 64)
!3821 = !DISubroutineType(types: !3822)
!3822 = !{null, !3675, !1405, !1652, !1949, !106, !3739}
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "deformMatrices", scope: !3806, file: !98, line: 157, baseType: !3824, size: 64, offset: 768)
!3824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3825, size: 64)
!3825 = !DISubroutineType(types: !3826)
!3826 = !{null, !3675, !1405, !1652, !1949, !3827, !106}
!3827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3239, size: 64)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "deformVertsEM", scope: !3806, file: !98, line: 163, baseType: !3829, size: 64, offset: 832)
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!3830 = !DISubroutineType(types: !3831)
!3831 = !{null, !3675, !1405, !3832, !1652, !1949, !106}
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3833, size: 64)
!3833 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !13, line: 91, flags: DIFlagFwdDecl)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "deformMatricesEM", scope: !3806, file: !98, line: 168, baseType: !3835, size: 64, offset: 896)
!3835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3836, size: 64)
!3836 = !DISubroutineType(types: !3837)
!3837 = !{null, !3675, !1405, !3832, !1652, !1949, !3827, !106}
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "applyModifier", scope: !3806, file: !98, line: 193, baseType: !3839, size: 64, offset: 960)
!3839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3840, size: 64)
!3840 = !DISubroutineType(types: !3841)
!3841 = !{!1652, !3675, !1405, !1652, !3739}
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "applyModifierEM", scope: !3806, file: !98, line: 204, baseType: !3843, size: 64, offset: 1024)
!3843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3844, size: 64)
!3844 = !DISubroutineType(types: !3845)
!3845 = !{!1652, !3675, !1405, !3832, !1652, !3739}
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "initData", scope: !3806, file: !98, line: 217, baseType: !3847, size: 64, offset: 1088)
!3847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3848, size: 64)
!3848 = !DISubroutineType(types: !3849)
!3849 = !{null, !3675}
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "requiredDataMask", scope: !3806, file: !98, line: 235, baseType: !3851, size: 64, offset: 1152)
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3852, size: 64)
!3852 = !DISubroutineType(types: !3853)
!3853 = !{!3854, !1405, !3675}
!3854 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !3855, line: 48, baseType: !2132)
!3855 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "freeData", scope: !3806, file: !98, line: 242, baseType: !3847, size: 64, offset: 1216)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "isDisabled", scope: !3806, file: !98, line: 252, baseType: !3858, size: 64, offset: 1280)
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3859, size: 64)
!3859 = !DISubroutineType(types: !3860)
!3860 = !{!374, !3675, !106}
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "updateDepgraph", scope: !3806, file: !98, line: 259, baseType: !3862, size: 64, offset: 1344)
!3862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3863, size: 64)
!3863 = !DISubroutineType(types: !3864)
!3864 = !{null, !3675, !2765, !2156, !1405, !3865}
!3865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3866, size: 64)
!3866 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagNode", file: !98, line: 38, flags: DIFlagFwdDecl)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "dependsOnTime", scope: !3806, file: !98, line: 267, baseType: !3868, size: 64, offset: 1408)
!3868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3869, size: 64)
!3869 = !DISubroutineType(types: !3870)
!3870 = !{!374, !3675}
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "dependsOnNormals", scope: !3806, file: !98, line: 277, baseType: !3868, size: 64, offset: 1472)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "foreachObjectLink", scope: !3806, file: !98, line: 286, baseType: !3873, size: 64, offset: 1536)
!3873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3874, size: 64)
!3874 = !DISubroutineType(types: !3875)
!3875 = !{null, !3675, !1405, !3876, !207}
!3876 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectWalkFunc", file: !98, line: 106, baseType: !3877)
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3878, size: 64)
!3878 = !DISubroutineType(types: !3879)
!3879 = !{null, !207, !1405, !3880}
!3880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "foreachIDLink", scope: !3806, file: !98, line: 297, baseType: !3882, size: 64, offset: 1600)
!3882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3883, size: 64)
!3883 = !DISubroutineType(types: !3884)
!3884 = !{null, !3675, !1405, !3885, !207}
!3885 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDWalkFunc", file: !98, line: 107, baseType: !3886)
!3886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3887, size: 64)
!3887 = !DISubroutineType(types: !3888)
!3888 = !{null, !207, !1405, !3889}
!3889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "foreachTexLink", scope: !3806, file: !98, line: 307, baseType: !3891, size: 64, offset: 1664)
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 64)
!3892 = !DISubroutineType(types: !3893)
!3893 = !{null, !3675, !1405, !3894, !207}
!3894 = !DIDerivedType(tag: DW_TAG_typedef, name: "TexWalkFunc", file: !98, line: 108, baseType: !3895)
!3895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3896, size: 64)
!3896 = !DISubroutineType(types: !3897)
!3897 = !{null, !207, !1405, !3675, !3898}
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3899, size: 64)
!3899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1359)
!3900 = !DILocation(line: 831, column: 22, scope: !3803)
!3901 = !DILocation(line: 831, column: 49, scope: !3803)
!3902 = !DILocation(line: 831, column: 53, scope: !3803)
!3903 = !DILocation(line: 831, column: 28, scope: !3803)
!3904 = !DILocation(line: 833, column: 16, scope: !3803)
!3905 = !DILocation(line: 833, column: 4, scope: !3803)
!3906 = !DILocation(line: 833, column: 8, scope: !3803)
!3907 = !DILocation(line: 833, column: 14, scope: !3803)
!3908 = !DILocation(line: 835, column: 28, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3803, file: !1, line: 835, column: 8)
!3910 = !DILocation(line: 835, column: 35, scope: !3909)
!3911 = !DILocation(line: 835, column: 39, scope: !3909)
!3912 = !DILocation(line: 835, column: 9, scope: !3909)
!3913 = !DILocation(line: 835, column: 8, scope: !3803)
!3914 = !DILocation(line: 836, column: 5, scope: !3909)
!3915 = !DILocation(line: 837, column: 8, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3803, file: !1, line: 837, column: 8)
!3917 = !DILocation(line: 837, column: 13, scope: !3916)
!3918 = !DILocation(line: 837, column: 18, scope: !3916)
!3919 = !DILocation(line: 837, column: 8, scope: !3803)
!3920 = !DILocation(line: 838, column: 5, scope: !3916)
!3921 = !DILocation(line: 840, column: 9, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3803, file: !1, line: 840, column: 8)
!3923 = !DILocation(line: 840, column: 8, scope: !3803)
!3924 = !DILocation(line: 841, column: 51, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3922, file: !1, line: 840, column: 24)
!3926 = !DILocation(line: 841, column: 21, scope: !3925)
!3927 = !DILocation(line: 841, column: 19, scope: !3925)
!3928 = !DILocation(line: 842, column: 4, scope: !3925)
!3929 = !DILocation(line: 844, column: 4, scope: !3803)
!3930 = !DILocation(line: 844, column: 9, scope: !3803)
!3931 = !DILocation(line: 844, column: 21, scope: !3803)
!3932 = !DILocation(line: 844, column: 25, scope: !3803)
!3933 = !DILocation(line: 844, column: 35, scope: !3803)
!3934 = !DILocation(line: 844, column: 50, scope: !3803)
!3935 = !DILocation(line: 844, column: 60, scope: !3803)
!3936 = !DILocation(line: 846, column: 8, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3803, file: !1, line: 846, column: 8)
!3938 = !DILocation(line: 846, column: 14, scope: !3937)
!3939 = !DILocation(line: 846, column: 11, scope: !3937)
!3940 = !DILocation(line: 846, column: 8, scope: !3803)
!3941 = !DILocation(line: 847, column: 5, scope: !3937)
!3942 = !DILocation(line: 848, column: 3, scope: !3803)
!3943 = !DILocation(line: 830, column: 19, scope: !3799)
!3944 = !DILocation(line: 830, column: 23, scope: !3799)
!3945 = !DILocation(line: 830, column: 17, scope: !3799)
!3946 = !DILocation(line: 830, column: 3, scope: !3799)
!3947 = distinct !{!3947, !3801, !3948}
!3948 = !DILocation(line: 848, column: 3, scope: !3800)
!3949 = !DILocation(line: 849, column: 2, scope: !3797)
!3950 = !DILocation(line: 851, column: 6, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3649, file: !1, line: 851, column: 6)
!3952 = !DILocation(line: 851, column: 6, scope: !3649)
!3953 = !DILocation(line: 852, column: 34, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3951, file: !1, line: 851, column: 21)
!3955 = !DILocation(line: 852, column: 40, scope: !3954)
!3956 = !DILocation(line: 852, column: 3, scope: !3954)
!3957 = !DILocation(line: 853, column: 3, scope: !3954)
!3958 = !DILocation(line: 853, column: 13, scope: !3954)
!3959 = !DILocation(line: 854, column: 2, scope: !3954)
!3960 = !DILocation(line: 855, column: 6, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3649, file: !1, line: 855, column: 6)
!3962 = !DILocation(line: 855, column: 6, scope: !3649)
!3963 = !DILocation(line: 856, column: 40, scope: !3961)
!3964 = !DILocation(line: 856, column: 46, scope: !3961)
!3965 = !DILocation(line: 856, column: 3, scope: !3961)
!3966 = !DILocation(line: 858, column: 6, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3649, file: !1, line: 858, column: 6)
!3968 = !DILocation(line: 858, column: 6, scope: !3649)
!3969 = !DILocation(line: 859, column: 3, scope: !3967)
!3970 = !DILocation(line: 859, column: 13, scope: !3967)
!3971 = !DILocation(line: 860, column: 1, scope: !3649)
!3972 = distinct !DISubprogram(name: "displist_surf_indices", scope: !1, file: !1, line: 1050, type: !238, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!3973 = !DILocalVariable(name: "dl", arg: 1, scope: !3972, file: !1, line: 1050, type: !210)
!3974 = !DILocation(line: 1050, column: 45, scope: !3972)
!3975 = !DILocalVariable(name: "a", scope: !3972, file: !1, line: 1052, type: !106)
!3976 = !DILocation(line: 1052, column: 6, scope: !3972)
!3977 = !DILocalVariable(name: "b", scope: !3972, file: !1, line: 1052, type: !106)
!3978 = !DILocation(line: 1052, column: 9, scope: !3972)
!3979 = !DILocalVariable(name: "p1", scope: !3972, file: !1, line: 1052, type: !106)
!3980 = !DILocation(line: 1052, column: 12, scope: !3972)
!3981 = !DILocalVariable(name: "p2", scope: !3972, file: !1, line: 1052, type: !106)
!3982 = !DILocation(line: 1052, column: 16, scope: !3972)
!3983 = !DILocalVariable(name: "p3", scope: !3972, file: !1, line: 1052, type: !106)
!3984 = !DILocation(line: 1052, column: 20, scope: !3972)
!3985 = !DILocalVariable(name: "p4", scope: !3972, file: !1, line: 1052, type: !106)
!3986 = !DILocation(line: 1052, column: 24, scope: !3972)
!3987 = !DILocalVariable(name: "index", scope: !3972, file: !1, line: 1053, type: !228)
!3988 = !DILocation(line: 1053, column: 7, scope: !3972)
!3989 = !DILocation(line: 1055, column: 2, scope: !3972)
!3990 = !DILocation(line: 1055, column: 6, scope: !3972)
!3991 = !DILocation(line: 1055, column: 15, scope: !3972)
!3992 = !DILocation(line: 1057, column: 22, scope: !3972)
!3993 = !DILocation(line: 1057, column: 53, scope: !3972)
!3994 = !DILocation(line: 1057, column: 57, scope: !3972)
!3995 = !DILocation(line: 1057, column: 63, scope: !3972)
!3996 = !DILocation(line: 1057, column: 52, scope: !3972)
!3997 = !DILocation(line: 1057, column: 50, scope: !3972)
!3998 = !DILocation(line: 1057, column: 71, scope: !3972)
!3999 = !DILocation(line: 1057, column: 75, scope: !3972)
!4000 = !DILocation(line: 1057, column: 78, scope: !3972)
!4001 = !DILocation(line: 1057, column: 70, scope: !3972)
!4002 = !DILocation(line: 1057, column: 68, scope: !3972)
!4003 = !DILocation(line: 1057, column: 10, scope: !3972)
!4004 = !DILocation(line: 1057, column: 14, scope: !3972)
!4005 = !DILocation(line: 1057, column: 20, scope: !3972)
!4006 = !DILocation(line: 1057, column: 8, scope: !3972)
!4007 = !DILocation(line: 1059, column: 9, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 1059, column: 2)
!4009 = !DILocation(line: 1059, column: 7, scope: !4008)
!4010 = !DILocation(line: 1059, column: 14, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !4008, file: !1, line: 1059, column: 2)
!4012 = !DILocation(line: 1059, column: 18, scope: !4011)
!4013 = !DILocation(line: 1059, column: 22, scope: !4011)
!4014 = !DILocation(line: 1059, column: 16, scope: !4011)
!4015 = !DILocation(line: 1059, column: 2, scope: !4008)
!4016 = !DILocation(line: 1061, column: 34, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !4018, file: !1, line: 1061, column: 7)
!4018 = distinct !DILexicalBlock(scope: !4011, file: !1, line: 1059, column: 34)
!4019 = !DILocation(line: 1061, column: 38, scope: !4017)
!4020 = !DILocation(line: 1061, column: 7, scope: !4017)
!4021 = !DILocation(line: 1061, column: 65, scope: !4017)
!4022 = !DILocation(line: 1061, column: 7, scope: !4018)
!4023 = !DILocation(line: 1062, column: 4, scope: !4017)
!4024 = !DILocation(line: 1064, column: 3, scope: !4018)
!4025 = !DILocation(line: 1064, column: 10, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !4027, file: !1, line: 1064, column: 3)
!4027 = distinct !DILexicalBlock(scope: !4018, file: !1, line: 1064, column: 3)
!4028 = !DILocation(line: 1064, column: 14, scope: !4026)
!4029 = !DILocation(line: 1064, column: 18, scope: !4026)
!4030 = !DILocation(line: 1064, column: 12, scope: !4026)
!4031 = !DILocation(line: 1064, column: 3, scope: !4027)
!4032 = !DILocation(line: 1065, column: 15, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4026, file: !1, line: 1064, column: 39)
!4034 = !DILocation(line: 1065, column: 4, scope: !4033)
!4035 = !DILocation(line: 1065, column: 13, scope: !4033)
!4036 = !DILocation(line: 1066, column: 15, scope: !4033)
!4037 = !DILocation(line: 1066, column: 4, scope: !4033)
!4038 = !DILocation(line: 1066, column: 13, scope: !4033)
!4039 = !DILocation(line: 1067, column: 15, scope: !4033)
!4040 = !DILocation(line: 1067, column: 4, scope: !4033)
!4041 = !DILocation(line: 1067, column: 13, scope: !4033)
!4042 = !DILocation(line: 1068, column: 15, scope: !4033)
!4043 = !DILocation(line: 1068, column: 4, scope: !4033)
!4044 = !DILocation(line: 1068, column: 13, scope: !4033)
!4045 = !DILocation(line: 1070, column: 4, scope: !4033)
!4046 = !DILocation(line: 1070, column: 8, scope: !4033)
!4047 = !DILocation(line: 1070, column: 16, scope: !4033)
!4048 = !DILocation(line: 1072, column: 9, scope: !4033)
!4049 = !DILocation(line: 1072, column: 7, scope: !4033)
!4050 = !DILocation(line: 1072, column: 15, scope: !4033)
!4051 = !DILocation(line: 1073, column: 9, scope: !4033)
!4052 = !DILocation(line: 1073, column: 7, scope: !4033)
!4053 = !DILocation(line: 1073, column: 15, scope: !4033)
!4054 = !DILocation(line: 1074, column: 3, scope: !4033)
!4055 = !DILocation(line: 1064, column: 23, scope: !4026)
!4056 = !DILocation(line: 1064, column: 33, scope: !4026)
!4057 = !DILocation(line: 1064, column: 3, scope: !4026)
!4058 = distinct !{!4058, !4031, !4059}
!4059 = !DILocation(line: 1074, column: 3, scope: !4027)
!4060 = !DILocation(line: 1075, column: 2, scope: !4018)
!4061 = !DILocation(line: 1059, column: 30, scope: !4011)
!4062 = !DILocation(line: 1059, column: 2, scope: !4011)
!4063 = distinct !{!4063, !4015, !4064}
!4064 = !DILocation(line: 1075, column: 2, scope: !4008)
!4065 = !DILocation(line: 1076, column: 1, scope: !3972)
!4066 = distinct !DISubprogram(name: "curve_calc_modifiers_post", scope: !1, file: !1, line: 896, type: !4067, scopeLine: 899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!4067 = !DISubroutineType(types: !4068)
!4068 = !{null, !1333, !2871, !282, !282, !3181, !950, !950}
!4069 = !DILocalVariable(name: "scene", arg: 1, scope: !4066, file: !1, line: 896, type: !1333)
!4070 = !DILocation(line: 896, column: 46, scope: !4066)
!4071 = !DILocalVariable(name: "ob", arg: 2, scope: !4066, file: !1, line: 896, type: !2871)
!4072 = !DILocation(line: 896, column: 61, scope: !4066)
!4073 = !DILocalVariable(name: "nurb", arg: 3, scope: !4066, file: !1, line: 896, type: !282)
!4074 = !DILocation(line: 896, column: 75, scope: !4066)
!4075 = !DILocalVariable(name: "dispbase", arg: 4, scope: !4066, file: !1, line: 897, type: !282)
!4076 = !DILocation(line: 897, column: 49, scope: !4066)
!4077 = !DILocalVariable(name: "r_dm_final", arg: 5, scope: !4066, file: !1, line: 897, type: !3181)
!4078 = !DILocation(line: 897, column: 73, scope: !4066)
!4079 = !DILocalVariable(name: "for_render", arg: 6, scope: !4066, file: !1, line: 898, type: !950)
!4080 = !DILocation(line: 898, column: 50, scope: !4066)
!4081 = !DILocalVariable(name: "use_render_resolution", arg: 7, scope: !4066, file: !1, line: 898, type: !950)
!4082 = !DILocation(line: 898, column: 73, scope: !4066)
!4083 = !DILocalVariable(name: "virtualModifierData", scope: !4066, file: !1, line: 900, type: !3663)
!4084 = !DILocation(line: 900, column: 22, scope: !4066)
!4085 = !DILocalVariable(name: "md", scope: !4066, file: !1, line: 901, type: !3715)
!4086 = !DILocation(line: 901, column: 16, scope: !4066)
!4087 = !DILocation(line: 901, column: 54, scope: !4066)
!4088 = !DILocation(line: 901, column: 21, scope: !4066)
!4089 = !DILocalVariable(name: "pretessellatePoint", scope: !4066, file: !1, line: 902, type: !3715)
!4090 = !DILocation(line: 902, column: 16, scope: !4066)
!4091 = !DILocalVariable(name: "cu", scope: !4066, file: !1, line: 903, type: !3262)
!4092 = !DILocation(line: 903, column: 9, scope: !4066)
!4093 = !DILocation(line: 903, column: 14, scope: !4066)
!4094 = !DILocation(line: 903, column: 18, scope: !4066)
!4095 = !DILocalVariable(name: "required_mode", scope: !4066, file: !1, line: 904, type: !106)
!4096 = !DILocation(line: 904, column: 6, scope: !4066)
!4097 = !DILocalVariable(name: "totvert", scope: !4066, file: !1, line: 904, type: !106)
!4098 = !DILocation(line: 904, column: 25, scope: !4066)
!4099 = !DILocalVariable(name: "editmode", scope: !4066, file: !1, line: 905, type: !950)
!4100 = !DILocation(line: 905, column: 13, scope: !4066)
!4101 = !DILocation(line: 905, column: 26, scope: !4066)
!4102 = !DILocation(line: 905, column: 37, scope: !4066)
!4103 = !DILocation(line: 905, column: 41, scope: !4066)
!4104 = !DILocation(line: 905, column: 45, scope: !4066)
!4105 = !DILocation(line: 905, column: 54, scope: !4066)
!4106 = !DILocation(line: 905, column: 57, scope: !4066)
!4107 = !DILocation(line: 905, column: 61, scope: !4066)
!4108 = !DILocation(line: 0, scope: !4066)
!4109 = !DILocation(line: 905, column: 24, scope: !4066)
!4110 = !DILocalVariable(name: "dm", scope: !4066, file: !1, line: 906, type: !1722)
!4111 = !DILocation(line: 906, column: 15, scope: !4066)
!4112 = !DILocalVariable(name: "ndm", scope: !4066, file: !1, line: 906, type: !1722)
!4113 = !DILocation(line: 906, column: 27, scope: !4066)
!4114 = !DILocalVariable(name: "vertCos", scope: !4066, file: !1, line: 907, type: !1949)
!4115 = !DILocation(line: 907, column: 10, scope: !4066)
!4116 = !DILocalVariable(name: "useCache", scope: !4066, file: !1, line: 908, type: !106)
!4117 = !DILocation(line: 908, column: 6, scope: !4066)
!4118 = !DILocation(line: 908, column: 18, scope: !4066)
!4119 = !DILocation(line: 908, column: 17, scope: !4066)
!4120 = !DILocalVariable(name: "app_flag", scope: !4066, file: !1, line: 909, type: !3739)
!4121 = !DILocation(line: 909, column: 20, scope: !4066)
!4122 = !DILocation(line: 911, column: 6, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4066, file: !1, line: 911, column: 6)
!4124 = !DILocation(line: 911, column: 6, scope: !4066)
!4125 = !DILocation(line: 912, column: 12, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4123, file: !1, line: 911, column: 29)
!4127 = !DILocation(line: 913, column: 17, scope: !4126)
!4128 = !DILocation(line: 914, column: 2, scope: !4126)
!4129 = !DILocation(line: 916, column: 17, scope: !4123)
!4130 = !DILocation(line: 918, column: 50, scope: !4066)
!4131 = !DILocation(line: 918, column: 57, scope: !4066)
!4132 = !DILocation(line: 918, column: 61, scope: !4066)
!4133 = !DILocation(line: 918, column: 84, scope: !4066)
!4134 = !DILocation(line: 918, column: 23, scope: !4066)
!4135 = !DILocation(line: 918, column: 21, scope: !4066)
!4136 = !DILocation(line: 920, column: 6, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4066, file: !1, line: 920, column: 6)
!4138 = !DILocation(line: 920, column: 6, scope: !4066)
!4139 = !DILocation(line: 921, column: 17, scope: !4137)
!4140 = !DILocation(line: 921, column: 3, scope: !4137)
!4141 = !DILocation(line: 923, column: 6, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4066, file: !1, line: 923, column: 6)
!4143 = !DILocation(line: 923, column: 6, scope: !4066)
!4144 = !DILocation(line: 924, column: 8, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4142, file: !1, line: 923, column: 26)
!4146 = !DILocation(line: 924, column: 28, scope: !4145)
!4147 = !DILocation(line: 924, column: 6, scope: !4145)
!4148 = !DILocation(line: 925, column: 2, scope: !4145)
!4149 = !DILocation(line: 927, column: 6, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4066, file: !1, line: 927, column: 6)
!4151 = !DILocation(line: 927, column: 17, scope: !4150)
!4152 = !DILocation(line: 927, column: 21, scope: !4150)
!4153 = !DILocation(line: 927, column: 20, scope: !4150)
!4154 = !DILocation(line: 927, column: 6, scope: !4066)
!4155 = !DILocation(line: 928, column: 5, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4150, file: !1, line: 927, column: 33)
!4157 = !DILocation(line: 928, column: 4, scope: !4156)
!4158 = !DILocation(line: 928, column: 18, scope: !4156)
!4159 = !DILocation(line: 928, column: 27, scope: !4156)
!4160 = !DILocation(line: 928, column: 26, scope: !4156)
!4161 = !DILocation(line: 928, column: 3, scope: !4156)
!4162 = !DILocation(line: 929, column: 2, scope: !4156)
!4163 = !DILocation(line: 931, column: 2, scope: !4066)
!4164 = !DILocation(line: 931, column: 9, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4166, file: !1, line: 931, column: 2)
!4166 = distinct !DILexicalBlock(scope: !4066, file: !1, line: 931, column: 2)
!4167 = !DILocation(line: 931, column: 2, scope: !4166)
!4168 = !DILocalVariable(name: "mti", scope: !4169, file: !1, line: 932, type: !3804)
!4169 = distinct !DILexicalBlock(scope: !4165, file: !1, line: 931, column: 28)
!4170 = !DILocation(line: 932, column: 21, scope: !4169)
!4171 = !DILocation(line: 932, column: 48, scope: !4169)
!4172 = !DILocation(line: 932, column: 52, scope: !4169)
!4173 = !DILocation(line: 932, column: 27, scope: !4169)
!4174 = !DILocalVariable(name: "appf", scope: !4169, file: !1, line: 933, type: !3739)
!4175 = !DILocation(line: 933, column: 21, scope: !4169)
!4176 = !DILocation(line: 933, column: 28, scope: !4169)
!4177 = !DILocation(line: 935, column: 15, scope: !4169)
!4178 = !DILocation(line: 935, column: 3, scope: !4169)
!4179 = !DILocation(line: 935, column: 7, scope: !4169)
!4180 = !DILocation(line: 935, column: 13, scope: !4169)
!4181 = !DILocation(line: 937, column: 27, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4169, file: !1, line: 937, column: 7)
!4183 = !DILocation(line: 937, column: 34, scope: !4182)
!4184 = !DILocation(line: 937, column: 38, scope: !4182)
!4185 = !DILocation(line: 937, column: 8, scope: !4182)
!4186 = !DILocation(line: 937, column: 7, scope: !4169)
!4187 = !DILocation(line: 938, column: 4, scope: !4182)
!4188 = !DILocation(line: 940, column: 7, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4169, file: !1, line: 940, column: 7)
!4190 = !DILocation(line: 940, column: 12, scope: !4189)
!4191 = !DILocation(line: 940, column: 17, scope: !4189)
!4192 = !DILocation(line: 940, column: 49, scope: !4189)
!4193 = !DILocation(line: 941, column: 8, scope: !4189)
!4194 = !DILocation(line: 941, column: 13, scope: !4189)
!4195 = !DILocation(line: 941, column: 18, scope: !4189)
!4196 = !DILocation(line: 941, column: 57, scope: !4189)
!4197 = !DILocation(line: 941, column: 61, scope: !4189)
!4198 = !DILocation(line: 940, column: 7, scope: !4169)
!4199 = !DILocation(line: 943, column: 8, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4201, file: !1, line: 943, column: 8)
!4201 = distinct !DILexicalBlock(scope: !4189, file: !1, line: 942, column: 3)
!4202 = !DILocation(line: 943, column: 8, scope: !4201)
!4203 = !DILocation(line: 944, column: 10, scope: !4200)
!4204 = !DILocation(line: 944, column: 5, scope: !4200)
!4205 = !DILocation(line: 945, column: 8, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4201, file: !1, line: 945, column: 8)
!4207 = !DILocation(line: 945, column: 8, scope: !4201)
!4208 = !DILocation(line: 946, column: 10, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4210, file: !1, line: 946, column: 9)
!4210 = distinct !DILexicalBlock(scope: !4206, file: !1, line: 945, column: 12)
!4211 = !DILocation(line: 946, column: 9, scope: !4210)
!4212 = !DILocation(line: 947, column: 16, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4209, file: !1, line: 946, column: 19)
!4214 = !DILocation(line: 947, column: 20, scope: !4213)
!4215 = !DILocation(line: 947, column: 32, scope: !4213)
!4216 = !DILocation(line: 947, column: 14, scope: !4213)
!4217 = !DILocation(line: 948, column: 16, scope: !4213)
!4218 = !DILocation(line: 948, column: 47, scope: !4213)
!4219 = !DILocation(line: 948, column: 45, scope: !4213)
!4220 = !DILocation(line: 948, column: 14, scope: !4213)
!4221 = !DILocation(line: 949, column: 6, scope: !4213)
!4222 = !DILocation(line: 949, column: 10, scope: !4213)
!4223 = !DILocation(line: 949, column: 21, scope: !4213)
!4224 = !DILocation(line: 949, column: 25, scope: !4213)
!4225 = !DILocation(line: 950, column: 5, scope: !4213)
!4226 = !DILocation(line: 952, column: 5, scope: !4210)
!4227 = !DILocation(line: 952, column: 10, scope: !4210)
!4228 = !DILocation(line: 952, column: 22, scope: !4210)
!4229 = !DILocation(line: 952, column: 26, scope: !4210)
!4230 = !DILocation(line: 952, column: 30, scope: !4210)
!4231 = !DILocation(line: 952, column: 34, scope: !4210)
!4232 = !DILocation(line: 952, column: 43, scope: !4210)
!4233 = !DILocation(line: 952, column: 52, scope: !4210)
!4234 = !DILocation(line: 953, column: 4, scope: !4210)
!4235 = !DILocation(line: 955, column: 10, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4237, file: !1, line: 955, column: 9)
!4237 = distinct !DILexicalBlock(scope: !4206, file: !1, line: 954, column: 9)
!4238 = !DILocation(line: 955, column: 9, scope: !4237)
!4239 = !DILocation(line: 956, column: 38, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4236, file: !1, line: 955, column: 19)
!4241 = !DILocation(line: 956, column: 16, scope: !4240)
!4242 = !DILocation(line: 956, column: 14, scope: !4240)
!4243 = !DILocation(line: 957, column: 5, scope: !4240)
!4244 = !DILocation(line: 959, column: 5, scope: !4237)
!4245 = !DILocation(line: 959, column: 10, scope: !4237)
!4246 = !DILocation(line: 959, column: 22, scope: !4237)
!4247 = !DILocation(line: 959, column: 26, scope: !4237)
!4248 = !DILocation(line: 959, column: 36, scope: !4237)
!4249 = !DILocation(line: 959, column: 45, scope: !4237)
!4250 = !DILocation(line: 959, column: 54, scope: !4237)
!4251 = !DILocation(line: 961, column: 3, scope: !4201)
!4252 = !DILocation(line: 963, column: 9, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4254, file: !1, line: 963, column: 8)
!4254 = distinct !DILexicalBlock(scope: !4189, file: !1, line: 962, column: 8)
!4255 = !DILocation(line: 963, column: 8, scope: !4254)
!4256 = !DILocation(line: 968, column: 5, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4253, file: !1, line: 963, column: 21)
!4258 = !DILocation(line: 971, column: 8, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4254, file: !1, line: 971, column: 8)
!4260 = !DILocation(line: 971, column: 8, scope: !4254)
!4261 = !DILocation(line: 972, column: 9, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4263, file: !1, line: 972, column: 9)
!4263 = distinct !DILexicalBlock(scope: !4259, file: !1, line: 971, column: 12)
!4264 = !DILocation(line: 972, column: 9, scope: !4263)
!4265 = !DILocalVariable(name: "tdm", scope: !4266, file: !1, line: 973, type: !1722)
!4266 = distinct !DILexicalBlock(scope: !4262, file: !1, line: 972, column: 18)
!4267 = !DILocation(line: 973, column: 19, scope: !4266)
!4268 = !DILocation(line: 973, column: 35, scope: !4266)
!4269 = !DILocation(line: 973, column: 25, scope: !4266)
!4270 = !DILocation(line: 974, column: 6, scope: !4266)
!4271 = !DILocation(line: 974, column: 10, scope: !4266)
!4272 = !DILocation(line: 974, column: 18, scope: !4266)
!4273 = !DILocation(line: 975, column: 11, scope: !4266)
!4274 = !DILocation(line: 975, column: 9, scope: !4266)
!4275 = !DILocation(line: 977, column: 29, scope: !4266)
!4276 = !DILocation(line: 977, column: 33, scope: !4266)
!4277 = !DILocation(line: 977, column: 6, scope: !4266)
!4278 = !DILocation(line: 978, column: 5, scope: !4266)
!4279 = !DILocation(line: 979, column: 4, scope: !4263)
!4280 = !DILocation(line: 981, column: 9, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4282, file: !1, line: 981, column: 9)
!4282 = distinct !DILexicalBlock(scope: !4259, file: !1, line: 980, column: 9)
!4283 = !DILocation(line: 981, column: 9, scope: !4282)
!4284 = !DILocation(line: 982, column: 30, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4281, file: !1, line: 981, column: 18)
!4286 = !DILocation(line: 982, column: 40, scope: !4285)
!4287 = !DILocation(line: 982, column: 6, scope: !4285)
!4288 = !DILocation(line: 983, column: 5, scope: !4285)
!4289 = !DILocation(line: 985, column: 9, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4282, file: !1, line: 985, column: 9)
!4291 = !DILocation(line: 985, column: 43, scope: !4290)
!4292 = !DILocation(line: 985, column: 47, scope: !4290)
!4293 = !DILocation(line: 985, column: 51, scope: !4290)
!4294 = !DILocation(line: 985, column: 56, scope: !4290)
!4295 = !DILocation(line: 985, column: 9, scope: !4282)
!4296 = !DILocation(line: 986, column: 26, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4290, file: !1, line: 985, column: 75)
!4298 = !DILocation(line: 986, column: 30, scope: !4297)
!4299 = !DILocation(line: 986, column: 36, scope: !4297)
!4300 = !DILocation(line: 986, column: 6, scope: !4297)
!4301 = !DILocation(line: 987, column: 5, scope: !4297)
!4302 = !DILocation(line: 989, column: 35, scope: !4282)
!4303 = !DILocation(line: 989, column: 39, scope: !4282)
!4304 = !DILocation(line: 989, column: 10, scope: !4282)
!4305 = !DILocation(line: 989, column: 8, scope: !4282)
!4306 = !DILocation(line: 992, column: 8, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4254, file: !1, line: 992, column: 8)
!4308 = !DILocation(line: 992, column: 8, scope: !4254)
!4309 = !DILocation(line: 994, column: 5, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4307, file: !1, line: 992, column: 17)
!4311 = !DILocation(line: 994, column: 15, scope: !4310)
!4312 = !DILocation(line: 995, column: 13, scope: !4310)
!4313 = !DILocation(line: 996, column: 4, scope: !4310)
!4314 = !DILocation(line: 998, column: 8, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4254, file: !1, line: 998, column: 8)
!4316 = !DILocation(line: 998, column: 8, scope: !4254)
!4317 = !DILocation(line: 999, column: 10, scope: !4315)
!4318 = !DILocation(line: 999, column: 5, scope: !4315)
!4319 = !DILocation(line: 1001, column: 32, scope: !4254)
!4320 = !DILocation(line: 1001, column: 36, scope: !4254)
!4321 = !DILocation(line: 1001, column: 40, scope: !4254)
!4322 = !DILocation(line: 1001, column: 44, scope: !4254)
!4323 = !DILocation(line: 1001, column: 10, scope: !4254)
!4324 = !DILocation(line: 1001, column: 8, scope: !4254)
!4325 = !DILocation(line: 1003, column: 8, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4254, file: !1, line: 1003, column: 8)
!4327 = !DILocation(line: 1003, column: 8, scope: !4254)
!4328 = !DILocation(line: 1006, column: 9, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4330, file: !1, line: 1006, column: 9)
!4330 = distinct !DILexicalBlock(scope: !4326, file: !1, line: 1003, column: 13)
!4331 = !DILocation(line: 1006, column: 12, scope: !4329)
!4332 = !DILocation(line: 1006, column: 15, scope: !4329)
!4333 = !DILocation(line: 1006, column: 21, scope: !4329)
!4334 = !DILocation(line: 1006, column: 18, scope: !4329)
!4335 = !DILocation(line: 1006, column: 9, scope: !4330)
!4336 = !DILocation(line: 1007, column: 6, scope: !4329)
!4337 = !DILocation(line: 1007, column: 10, scope: !4329)
!4338 = !DILocation(line: 1007, column: 18, scope: !4329)
!4339 = !DILocation(line: 1008, column: 10, scope: !4330)
!4340 = !DILocation(line: 1008, column: 8, scope: !4330)
!4341 = !DILocation(line: 1009, column: 4, scope: !4330)
!4342 = !DILocation(line: 1011, column: 2, scope: !4169)
!4343 = !DILocation(line: 931, column: 18, scope: !4165)
!4344 = !DILocation(line: 931, column: 22, scope: !4165)
!4345 = !DILocation(line: 931, column: 16, scope: !4165)
!4346 = !DILocation(line: 931, column: 2, scope: !4165)
!4347 = distinct !{!4347, !4167, !4348}
!4348 = !DILocation(line: 1011, column: 2, scope: !4166)
!4349 = !DILocation(line: 1013, column: 6, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4066, file: !1, line: 1013, column: 6)
!4351 = !DILocation(line: 1013, column: 6, scope: !4066)
!4352 = !DILocation(line: 1014, column: 7, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4354, file: !1, line: 1014, column: 7)
!4354 = distinct !DILexicalBlock(scope: !4350, file: !1, line: 1013, column: 15)
!4355 = !DILocation(line: 1014, column: 7, scope: !4354)
!4356 = !DILocalVariable(name: "tdm", scope: !4357, file: !1, line: 1015, type: !1722)
!4357 = distinct !DILexicalBlock(scope: !4353, file: !1, line: 1014, column: 11)
!4358 = !DILocation(line: 1015, column: 17, scope: !4357)
!4359 = !DILocation(line: 1015, column: 33, scope: !4357)
!4360 = !DILocation(line: 1015, column: 23, scope: !4357)
!4361 = !DILocation(line: 1016, column: 4, scope: !4357)
!4362 = !DILocation(line: 1016, column: 8, scope: !4357)
!4363 = !DILocation(line: 1016, column: 16, scope: !4357)
!4364 = !DILocation(line: 1017, column: 9, scope: !4357)
!4365 = !DILocation(line: 1017, column: 7, scope: !4357)
!4366 = !DILocation(line: 1019, column: 27, scope: !4357)
!4367 = !DILocation(line: 1019, column: 31, scope: !4357)
!4368 = !DILocation(line: 1019, column: 4, scope: !4357)
!4369 = !DILocation(line: 1020, column: 30, scope: !4357)
!4370 = !DILocation(line: 1020, column: 4, scope: !4357)
!4371 = !DILocation(line: 1021, column: 4, scope: !4357)
!4372 = !DILocation(line: 1021, column: 14, scope: !4357)
!4373 = !DILocation(line: 1022, column: 3, scope: !4357)
!4374 = !DILocation(line: 1024, column: 28, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4353, file: !1, line: 1023, column: 8)
!4376 = !DILocation(line: 1024, column: 38, scope: !4375)
!4377 = !DILocation(line: 1024, column: 4, scope: !4375)
!4378 = !DILocation(line: 1025, column: 4, scope: !4375)
!4379 = !DILocation(line: 1025, column: 14, scope: !4375)
!4380 = !DILocation(line: 1026, column: 12, scope: !4375)
!4381 = !DILocation(line: 1028, column: 2, scope: !4354)
!4382 = !DILocation(line: 1030, column: 6, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4066, file: !1, line: 1030, column: 6)
!4384 = !DILocation(line: 1030, column: 6, scope: !4066)
!4385 = !DILocation(line: 1031, column: 7, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4387, file: !1, line: 1031, column: 7)
!4387 = distinct !DILexicalBlock(scope: !4383, file: !1, line: 1030, column: 18)
!4388 = !DILocation(line: 1031, column: 7, scope: !4387)
!4389 = !DILocation(line: 1033, column: 8, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4391, file: !1, line: 1033, column: 8)
!4391 = distinct !DILexicalBlock(scope: !4386, file: !1, line: 1031, column: 11)
!4392 = !DILocation(line: 1033, column: 12, scope: !4390)
!4393 = !DILocation(line: 1033, column: 28, scope: !4390)
!4394 = !DILocation(line: 1033, column: 32, scope: !4390)
!4395 = !DILocation(line: 1033, column: 8, scope: !4391)
!4396 = !DILocation(line: 1034, column: 5, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4390, file: !1, line: 1033, column: 38)
!4398 = !DILocation(line: 1034, column: 9, scope: !4397)
!4399 = !DILocation(line: 1034, column: 28, scope: !4397)
!4400 = !DILocation(line: 1035, column: 4, scope: !4397)
!4401 = !DILocation(line: 1038, column: 13, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4390, file: !1, line: 1038, column: 13)
!4403 = !DILocation(line: 1038, column: 17, scope: !4402)
!4404 = !DILocation(line: 1038, column: 23, scope: !4402)
!4405 = !DILocation(line: 1038, column: 13, scope: !4390)
!4406 = !DILocation(line: 1039, column: 29, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4402, file: !1, line: 1038, column: 49)
!4408 = !DILocation(line: 1039, column: 5, scope: !4407)
!4409 = !DILocation(line: 1040, column: 4, scope: !4407)
!4410 = !DILocation(line: 1042, column: 8, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4391, file: !1, line: 1042, column: 8)
!4412 = !DILocation(line: 1042, column: 12, scope: !4411)
!4413 = !DILocation(line: 1042, column: 17, scope: !4411)
!4414 = !DILocation(line: 1042, column: 8, scope: !4391)
!4415 = !DILocation(line: 1043, column: 34, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4411, file: !1, line: 1042, column: 34)
!4417 = !DILocation(line: 1043, column: 39, scope: !4416)
!4418 = !DILocation(line: 1043, column: 43, scope: !4416)
!4419 = !DILocation(line: 1043, column: 49, scope: !4416)
!4420 = !DILocation(line: 1043, column: 38, scope: !4416)
!4421 = !DILocation(line: 1043, column: 5, scope: !4416)
!4422 = !DILocation(line: 1044, column: 4, scope: !4416)
!4423 = !DILocation(line: 1045, column: 3, scope: !4391)
!4424 = !DILocation(line: 1046, column: 19, scope: !4387)
!4425 = !DILocation(line: 1046, column: 5, scope: !4387)
!4426 = !DILocation(line: 1046, column: 17, scope: !4387)
!4427 = !DILocation(line: 1047, column: 2, scope: !4387)
!4428 = !DILocation(line: 1048, column: 1, scope: !4066)
!4429 = distinct !DISubprogram(name: "BKE_displist_make_curveTypes", scope: !1, file: !1, line: 1746, type: !4430, scopeLine: 1747, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !240)
!4430 = !DISubroutineType(types: !4431)
!4431 = !{null, !1333, !2871, !950}
!4432 = !DILocalVariable(name: "scene", arg: 1, scope: !4429, file: !1, line: 1746, type: !1333)
!4433 = !DILocation(line: 1746, column: 42, scope: !4429)
!4434 = !DILocalVariable(name: "ob", arg: 2, scope: !4429, file: !1, line: 1746, type: !2871)
!4435 = !DILocation(line: 1746, column: 57, scope: !4429)
!4436 = !DILocalVariable(name: "for_orco", arg: 3, scope: !4429, file: !1, line: 1746, type: !950)
!4437 = !DILocation(line: 1746, column: 72, scope: !4429)
!4438 = !DILocalVariable(name: "dispbase", scope: !4429, file: !1, line: 1748, type: !282)
!4439 = !DILocation(line: 1748, column: 12, scope: !4429)
!4440 = !DILocation(line: 1753, column: 7, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4429, file: !1, line: 1753, column: 6)
!4442 = !DILocation(line: 1753, column: 6, scope: !4429)
!4443 = !DILocation(line: 1754, column: 3, scope: !4441)
!4444 = !DILocation(line: 1756, column: 33, scope: !4429)
!4445 = !DILocation(line: 1756, column: 2, scope: !4429)
!4446 = !DILocation(line: 1758, column: 7, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4429, file: !1, line: 1758, column: 6)
!4448 = !DILocation(line: 1758, column: 11, scope: !4447)
!4449 = !DILocation(line: 1758, column: 6, scope: !4429)
!4450 = !DILocation(line: 1759, column: 21, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4447, file: !1, line: 1758, column: 24)
!4452 = !DILocation(line: 1759, column: 3, scope: !4451)
!4453 = !DILocation(line: 1759, column: 7, scope: !4451)
!4454 = !DILocation(line: 1759, column: 19, scope: !4451)
!4455 = !DILocation(line: 1760, column: 2, scope: !4451)
!4456 = !DILocation(line: 1762, column: 15, scope: !4429)
!4457 = !DILocation(line: 1762, column: 19, scope: !4429)
!4458 = !DILocation(line: 1762, column: 32, scope: !4429)
!4459 = !DILocation(line: 1762, column: 11, scope: !4429)
!4460 = !DILocation(line: 1764, column: 28, scope: !4429)
!4461 = !DILocation(line: 1764, column: 35, scope: !4429)
!4462 = !DILocation(line: 1764, column: 39, scope: !4429)
!4463 = !DILocation(line: 1764, column: 50, scope: !4429)
!4464 = !DILocation(line: 1764, column: 54, scope: !4429)
!4465 = !DILocation(line: 1764, column: 71, scope: !4429)
!4466 = !DILocation(line: 1764, column: 2, scope: !4429)
!4467 = !DILocation(line: 1766, column: 27, scope: !4429)
!4468 = !DILocation(line: 1766, column: 2, scope: !4429)
!4469 = !DILocation(line: 1767, column: 1, scope: !4429)
!4470 = distinct !DISubprogram(name: "do_makeDispListCurveTypes", scope: !1, file: !1, line: 1502, type: !3179, scopeLine: 1505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!4471 = !DILocalVariable(name: "scene", arg: 1, scope: !4470, file: !1, line: 1502, type: !1333)
!4472 = !DILocation(line: 1502, column: 46, scope: !4470)
!4473 = !DILocalVariable(name: "ob", arg: 2, scope: !4470, file: !1, line: 1502, type: !2871)
!4474 = !DILocation(line: 1502, column: 61, scope: !4470)
!4475 = !DILocalVariable(name: "dispbase", arg: 3, scope: !4470, file: !1, line: 1502, type: !282)
!4476 = !DILocation(line: 1502, column: 75, scope: !4470)
!4477 = !DILocalVariable(name: "r_dm_final", arg: 4, scope: !4470, file: !1, line: 1503, type: !3181)
!4478 = !DILocation(line: 1503, column: 53, scope: !4470)
!4479 = !DILocalVariable(name: "for_render", arg: 5, scope: !4470, file: !1, line: 1504, type: !950)
!4480 = !DILocation(line: 1504, column: 50, scope: !4470)
!4481 = !DILocalVariable(name: "for_orco", arg: 6, scope: !4470, file: !1, line: 1504, type: !950)
!4482 = !DILocation(line: 1504, column: 73, scope: !4470)
!4483 = !DILocalVariable(name: "use_render_resolution", arg: 7, scope: !4470, file: !1, line: 1504, type: !950)
!4484 = !DILocation(line: 1504, column: 94, scope: !4470)
!4485 = !DILocalVariable(name: "cu", scope: !4470, file: !1, line: 1506, type: !3262)
!4486 = !DILocation(line: 1506, column: 9, scope: !4470)
!4487 = !DILocation(line: 1506, column: 14, scope: !4470)
!4488 = !DILocation(line: 1506, column: 18, scope: !4470)
!4489 = !DILocation(line: 1509, column: 7, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4470, file: !1, line: 1509, column: 6)
!4491 = !DILocation(line: 1509, column: 6, scope: !4470)
!4492 = !DILocation(line: 1509, column: 51, scope: !4490)
!4493 = !DILocation(line: 1511, column: 6, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4470, file: !1, line: 1511, column: 6)
!4495 = !DILocation(line: 1511, column: 10, scope: !4494)
!4496 = !DILocation(line: 1511, column: 15, scope: !4494)
!4497 = !DILocation(line: 1511, column: 6, scope: !4470)
!4498 = !DILocation(line: 1512, column: 26, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4494, file: !1, line: 1511, column: 27)
!4500 = !DILocation(line: 1512, column: 33, scope: !4499)
!4501 = !DILocation(line: 1512, column: 37, scope: !4499)
!4502 = !DILocation(line: 1512, column: 47, scope: !4499)
!4503 = !DILocation(line: 1512, column: 59, scope: !4499)
!4504 = !DILocation(line: 1512, column: 71, scope: !4499)
!4505 = !DILocation(line: 1512, column: 81, scope: !4499)
!4506 = !DILocation(line: 1512, column: 3, scope: !4499)
!4507 = !DILocation(line: 1513, column: 2, scope: !4499)
!4508 = !DILocation(line: 1514, column: 11, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4494, file: !1, line: 1514, column: 11)
!4510 = !DILocation(line: 1514, column: 11, scope: !4494)
!4511 = !DILocalVariable(name: "dlbev", scope: !4512, file: !1, line: 1515, type: !283)
!4512 = distinct !DILexicalBlock(scope: !4509, file: !1, line: 1514, column: 46)
!4513 = !DILocation(line: 1515, column: 12, scope: !4512)
!4514 = !DILocalVariable(name: "nubase", scope: !4512, file: !1, line: 1516, type: !283)
!4515 = !DILocation(line: 1516, column: 12, scope: !4512)
!4516 = !DILocation(line: 1518, column: 29, scope: !4512)
!4517 = !DILocation(line: 1518, column: 33, scope: !4512)
!4518 = !DILocation(line: 1518, column: 46, scope: !4512)
!4519 = !DILocation(line: 1518, column: 3, scope: !4512)
!4520 = !DILocation(line: 1524, column: 8, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4512, file: !1, line: 1524, column: 7)
!4522 = !DILocation(line: 1524, column: 7, scope: !4512)
!4523 = !DILocation(line: 1525, column: 8, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4525, file: !1, line: 1525, column: 8)
!4525 = distinct !DILexicalBlock(scope: !4521, file: !1, line: 1524, column: 18)
!4526 = !DILocation(line: 1525, column: 12, scope: !4524)
!4527 = !DILocation(line: 1525, column: 25, scope: !4524)
!4528 = !DILocation(line: 1525, column: 8, scope: !4525)
!4529 = !DILocation(line: 1525, column: 41, scope: !4524)
!4530 = !DILocation(line: 1525, column: 45, scope: !4524)
!4531 = !DILocation(line: 1525, column: 58, scope: !4524)
!4532 = !DILocation(line: 1525, column: 31, scope: !4524)
!4533 = !DILocation(line: 1526, column: 4, scope: !4525)
!4534 = !DILocation(line: 1526, column: 8, scope: !4525)
!4535 = !DILocation(line: 1526, column: 21, scope: !4525)
!4536 = !DILocation(line: 1526, column: 26, scope: !4525)
!4537 = !DILocation(line: 1527, column: 3, scope: !4525)
!4538 = !DILocation(line: 1529, column: 7, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4512, file: !1, line: 1529, column: 7)
!4540 = !DILocation(line: 1529, column: 11, scope: !4539)
!4541 = !DILocation(line: 1529, column: 16, scope: !4539)
!4542 = !DILocation(line: 1529, column: 7, scope: !4512)
!4543 = !DILocation(line: 1530, column: 32, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4539, file: !1, line: 1529, column: 28)
!4545 = !DILocation(line: 1530, column: 38, scope: !4544)
!4546 = !DILocation(line: 1530, column: 4, scope: !4544)
!4547 = !DILocation(line: 1531, column: 3, scope: !4544)
!4548 = !DILocation(line: 1533, column: 56, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4539, file: !1, line: 1532, column: 8)
!4550 = !DILocation(line: 1533, column: 36, scope: !4549)
!4551 = !DILocation(line: 1533, column: 4, scope: !4549)
!4552 = !DILocation(line: 1536, column: 8, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4512, file: !1, line: 1536, column: 7)
!4554 = !DILocation(line: 1536, column: 7, scope: !4512)
!4555 = !DILocation(line: 1537, column: 29, scope: !4553)
!4556 = !DILocation(line: 1537, column: 36, scope: !4553)
!4557 = !DILocation(line: 1537, column: 49, scope: !4553)
!4558 = !DILocation(line: 1537, column: 61, scope: !4553)
!4559 = !DILocation(line: 1537, column: 4, scope: !4553)
!4560 = !DILocation(line: 1539, column: 28, scope: !4512)
!4561 = !DILocation(line: 1539, column: 41, scope: !4512)
!4562 = !DILocation(line: 1539, column: 52, scope: !4512)
!4563 = !DILocation(line: 1539, column: 3, scope: !4512)
!4564 = !DILocation(line: 1542, column: 24, scope: !4512)
!4565 = !DILocation(line: 1542, column: 31, scope: !4512)
!4566 = !DILocation(line: 1542, column: 43, scope: !4512)
!4567 = !DILocation(line: 1542, column: 55, scope: !4512)
!4568 = !DILocation(line: 1542, column: 3, scope: !4512)
!4569 = !DILocation(line: 1545, column: 14, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4512, file: !1, line: 1545, column: 7)
!4571 = !DILocation(line: 1545, column: 8, scope: !4570)
!4572 = !DILocation(line: 1545, column: 20, scope: !4570)
!4573 = !DILocation(line: 1545, column: 23, scope: !4570)
!4574 = !DILocation(line: 1545, column: 27, scope: !4570)
!4575 = !DILocation(line: 1545, column: 33, scope: !4570)
!4576 = !DILocation(line: 1545, column: 7, scope: !4512)
!4577 = !DILocation(line: 1546, column: 22, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4570, file: !1, line: 1545, column: 42)
!4579 = !DILocation(line: 1546, column: 35, scope: !4578)
!4580 = !DILocation(line: 1546, column: 45, scope: !4578)
!4581 = !DILocation(line: 1546, column: 57, scope: !4578)
!4582 = !DILocation(line: 1546, column: 4, scope: !4578)
!4583 = !DILocation(line: 1547, column: 3, scope: !4578)
!4584 = !DILocalVariable(name: "widfac", scope: !4585, file: !1, line: 1549, type: !208)
!4585 = distinct !DILexicalBlock(scope: !4570, file: !1, line: 1548, column: 8)
!4586 = !DILocation(line: 1549, column: 10, scope: !4585)
!4587 = !DILocation(line: 1549, column: 19, scope: !4585)
!4588 = !DILocation(line: 1549, column: 23, scope: !4585)
!4589 = !DILocation(line: 1549, column: 29, scope: !4585)
!4590 = !DILocalVariable(name: "bl", scope: !4585, file: !1, line: 1550, type: !4591)
!4591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4592, size: 64)
!4592 = !DIDerivedType(tag: DW_TAG_typedef, name: "BevList", file: !193, line: 98, baseType: !4593)
!4593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BevList", file: !193, line: 84, size: 448, elements: !4594)
!4594 = !{!4595, !4597, !4598, !4599, !4600, !4601, !4602, !4603, !4604, !4605}
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4593, file: !193, line: 85, baseType: !4596, size: 64)
!4596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4593, size: 64)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4593, file: !193, line: 85, baseType: !4596, size: 64, offset: 64)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !4593, file: !193, line: 86, baseType: !106, size: 32, offset: 128)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "dupe_nr", scope: !4593, file: !193, line: 86, baseType: !106, size: 32, offset: 160)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "poly", scope: !4593, file: !193, line: 87, baseType: !106, size: 32, offset: 192)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "hole", scope: !4593, file: !193, line: 87, baseType: !106, size: 32, offset: 224)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "charidx", scope: !4593, file: !193, line: 88, baseType: !106, size: 32, offset: 256)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "segbevcount", scope: !4593, file: !193, line: 89, baseType: !228, size: 64, offset: 320)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "seglen", scope: !4593, file: !193, line: 90, baseType: !209, size: 64, offset: 384)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "bevpoints", scope: !4593, file: !193, line: 96, baseType: !4606, offset: 448)
!4606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4607, elements: !4622)
!4607 = !DIDerivedType(tag: DW_TAG_typedef, name: "BevPoint", file: !193, line: 79, baseType: !4608)
!4608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BevPoint", file: !193, line: 74, size: 640, elements: !4609)
!4609 = !{!4610, !4611, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621}
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4608, file: !193, line: 75, baseType: !471, size: 96)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !4608, file: !193, line: 75, baseType: !208, size: 32, offset: 96)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !4608, file: !193, line: 75, baseType: !208, size: 32, offset: 128)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !4608, file: !193, line: 75, baseType: !208, size: 32, offset: 160)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4608, file: !193, line: 75, baseType: !208, size: 32, offset: 192)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "sina", scope: !4608, file: !193, line: 76, baseType: !208, size: 32, offset: 224)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "cosa", scope: !4608, file: !193, line: 76, baseType: !208, size: 32, offset: 256)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4608, file: !193, line: 77, baseType: !471, size: 96, offset: 288)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "tan", scope: !4608, file: !193, line: 77, baseType: !471, size: 96, offset: 384)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !4608, file: !193, line: 77, baseType: !1537, size: 128, offset: 480)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "split_tag", scope: !4608, file: !193, line: 78, baseType: !219, size: 16, offset: 608)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "dupe_tag", scope: !4608, file: !193, line: 78, baseType: !219, size: 16, offset: 624)
!4622 = !{!4623}
!4623 = !DISubrange(count: -1)
!4624 = !DILocation(line: 1550, column: 13, scope: !4585)
!4625 = !DILocation(line: 1550, column: 18, scope: !4585)
!4626 = !DILocation(line: 1550, column: 22, scope: !4585)
!4627 = !DILocation(line: 1550, column: 35, scope: !4585)
!4628 = !DILocation(line: 1550, column: 39, scope: !4585)
!4629 = !DILocalVariable(name: "nu", scope: !4585, file: !1, line: 1551, type: !3199)
!4630 = !DILocation(line: 1551, column: 10, scope: !4585)
!4631 = !DILocation(line: 1551, column: 22, scope: !4585)
!4632 = !DILocation(line: 1551, column: 15, scope: !4585)
!4633 = !DILocation(line: 1553, column: 4, scope: !4585)
!4634 = !DILocation(line: 1553, column: 11, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4636, file: !1, line: 1553, column: 4)
!4636 = distinct !DILexicalBlock(scope: !4585, file: !1, line: 1553, column: 4)
!4637 = !DILocation(line: 1553, column: 14, scope: !4635)
!4638 = !DILocation(line: 1553, column: 17, scope: !4635)
!4639 = !DILocation(line: 0, scope: !4635)
!4640 = !DILocation(line: 1553, column: 4, scope: !4636)
!4641 = !DILocalVariable(name: "dl", scope: !4642, file: !1, line: 1554, type: !210)
!4642 = distinct !DILexicalBlock(scope: !4635, file: !1, line: 1553, column: 51)
!4643 = !DILocation(line: 1554, column: 15, scope: !4642)
!4644 = !DILocalVariable(name: "data", scope: !4642, file: !1, line: 1555, type: !209)
!4645 = !DILocation(line: 1555, column: 12, scope: !4642)
!4646 = !DILocalVariable(name: "a", scope: !4642, file: !1, line: 1556, type: !106)
!4647 = !DILocation(line: 1556, column: 9, scope: !4642)
!4648 = !DILocation(line: 1558, column: 9, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4642, file: !1, line: 1558, column: 9)
!4650 = !DILocation(line: 1558, column: 13, scope: !4649)
!4651 = !DILocation(line: 1558, column: 9, scope: !4642)
!4652 = !DILocation(line: 1561, column: 10, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4654, file: !1, line: 1561, column: 10)
!4654 = distinct !DILexicalBlock(scope: !4649, file: !1, line: 1558, column: 17)
!4655 = !DILocation(line: 1561, column: 10, scope: !4654)
!4656 = !DILocalVariable(name: "bevp", scope: !4657, file: !1, line: 1562, type: !4658)
!4657 = distinct !DILexicalBlock(scope: !4653, file: !1, line: 1561, column: 41)
!4658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4607, size: 64)
!4659 = !DILocation(line: 1562, column: 17, scope: !4657)
!4660 = !DILocation(line: 1563, column: 12, scope: !4657)
!4661 = !DILocation(line: 1563, column: 10, scope: !4657)
!4662 = !DILocation(line: 1564, column: 19, scope: !4657)
!4663 = !DILocation(line: 1564, column: 50, scope: !4657)
!4664 = !DILocation(line: 1564, column: 54, scope: !4657)
!4665 = !DILocation(line: 1564, column: 48, scope: !4657)
!4666 = !DILocation(line: 1564, column: 7, scope: !4657)
!4667 = !DILocation(line: 1564, column: 11, scope: !4657)
!4668 = !DILocation(line: 1564, column: 17, scope: !4657)
!4669 = !DILocation(line: 1565, column: 19, scope: !4657)
!4670 = !DILocation(line: 1565, column: 29, scope: !4657)
!4671 = !DILocation(line: 1565, column: 7, scope: !4657)
!4672 = !DILocation(line: 1567, column: 11, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4657, file: !1, line: 1567, column: 11)
!4674 = !DILocation(line: 1567, column: 15, scope: !4673)
!4675 = !DILocation(line: 1567, column: 20, scope: !4673)
!4676 = !DILocation(line: 1567, column: 11, scope: !4657)
!4677 = !DILocation(line: 1567, column: 27, scope: !4673)
!4678 = !DILocation(line: 1567, column: 31, scope: !4673)
!4679 = !DILocation(line: 1567, column: 36, scope: !4673)
!4680 = !DILocation(line: 1568, column: 12, scope: !4673)
!4681 = !DILocation(line: 1568, column: 16, scope: !4673)
!4682 = !DILocation(line: 1568, column: 21, scope: !4673)
!4683 = !DILocation(line: 1570, column: 11, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4657, file: !1, line: 1570, column: 11)
!4685 = !DILocation(line: 1570, column: 15, scope: !4684)
!4686 = !DILocation(line: 1570, column: 20, scope: !4684)
!4687 = !DILocation(line: 1570, column: 11, scope: !4657)
!4688 = !DILocation(line: 1570, column: 32, scope: !4684)
!4689 = !DILocation(line: 1570, column: 36, scope: !4684)
!4690 = !DILocation(line: 1570, column: 41, scope: !4684)
!4691 = !DILocation(line: 1572, column: 7, scope: !4657)
!4692 = !DILocation(line: 1572, column: 11, scope: !4657)
!4693 = !DILocation(line: 1572, column: 17, scope: !4657)
!4694 = !DILocation(line: 1573, column: 16, scope: !4657)
!4695 = !DILocation(line: 1573, column: 20, scope: !4657)
!4696 = !DILocation(line: 1573, column: 7, scope: !4657)
!4697 = !DILocation(line: 1573, column: 11, scope: !4657)
!4698 = !DILocation(line: 1573, column: 14, scope: !4657)
!4699 = !DILocation(line: 1574, column: 17, scope: !4657)
!4700 = !DILocation(line: 1574, column: 21, scope: !4657)
!4701 = !DILocation(line: 1574, column: 7, scope: !4657)
!4702 = !DILocation(line: 1574, column: 11, scope: !4657)
!4703 = !DILocation(line: 1574, column: 15, scope: !4657)
!4704 = !DILocation(line: 1575, column: 21, scope: !4657)
!4705 = !DILocation(line: 1575, column: 25, scope: !4657)
!4706 = !DILocation(line: 1575, column: 7, scope: !4657)
!4707 = !DILocation(line: 1575, column: 11, scope: !4657)
!4708 = !DILocation(line: 1575, column: 19, scope: !4657)
!4709 = !DILocation(line: 1579, column: 16, scope: !4657)
!4710 = !DILocation(line: 1579, column: 20, scope: !4657)
!4711 = !DILocation(line: 1579, column: 25, scope: !4657)
!4712 = !DILocation(line: 1579, column: 7, scope: !4657)
!4713 = !DILocation(line: 1579, column: 11, scope: !4657)
!4714 = !DILocation(line: 1579, column: 14, scope: !4657)
!4715 = !DILocation(line: 1581, column: 11, scope: !4657)
!4716 = !DILocation(line: 1581, column: 15, scope: !4657)
!4717 = !DILocation(line: 1581, column: 9, scope: !4657)
!4718 = !DILocation(line: 1582, column: 14, scope: !4657)
!4719 = !DILocation(line: 1582, column: 18, scope: !4657)
!4720 = !DILocation(line: 1582, column: 12, scope: !4657)
!4721 = !DILocation(line: 1583, column: 14, scope: !4657)
!4722 = !DILocation(line: 1583, column: 18, scope: !4657)
!4723 = !DILocation(line: 1583, column: 12, scope: !4657)
!4724 = !DILocation(line: 1584, column: 7, scope: !4657)
!4725 = !DILocation(line: 1584, column: 15, scope: !4657)
!4726 = !DILocation(line: 1585, column: 18, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4657, file: !1, line: 1584, column: 19)
!4728 = !DILocation(line: 1585, column: 24, scope: !4727)
!4729 = !DILocation(line: 1585, column: 33, scope: !4727)
!4730 = !DILocation(line: 1585, column: 42, scope: !4727)
!4731 = !DILocation(line: 1585, column: 48, scope: !4727)
!4732 = !DILocation(line: 1585, column: 40, scope: !4727)
!4733 = !DILocation(line: 1585, column: 31, scope: !4727)
!4734 = !DILocation(line: 1585, column: 8, scope: !4727)
!4735 = !DILocation(line: 1585, column: 16, scope: !4727)
!4736 = !DILocation(line: 1586, column: 18, scope: !4727)
!4737 = !DILocation(line: 1586, column: 24, scope: !4727)
!4738 = !DILocation(line: 1586, column: 33, scope: !4727)
!4739 = !DILocation(line: 1586, column: 42, scope: !4727)
!4740 = !DILocation(line: 1586, column: 48, scope: !4727)
!4741 = !DILocation(line: 1586, column: 40, scope: !4727)
!4742 = !DILocation(line: 1586, column: 31, scope: !4727)
!4743 = !DILocation(line: 1586, column: 8, scope: !4727)
!4744 = !DILocation(line: 1586, column: 16, scope: !4727)
!4745 = !DILocation(line: 1587, column: 18, scope: !4727)
!4746 = !DILocation(line: 1587, column: 24, scope: !4727)
!4747 = !DILocation(line: 1587, column: 8, scope: !4727)
!4748 = !DILocation(line: 1587, column: 16, scope: !4727)
!4749 = !DILocation(line: 1588, column: 12, scope: !4727)
!4750 = !DILocation(line: 1589, column: 13, scope: !4727)
!4751 = distinct !{!4751, !4724, !4752}
!4752 = !DILocation(line: 1590, column: 7, scope: !4657)
!4753 = !DILocation(line: 1591, column: 6, scope: !4657)
!4754 = !DILocalVariable(name: "dlb", scope: !4755, file: !1, line: 1593, type: !210)
!4755 = distinct !DILexicalBlock(scope: !4653, file: !1, line: 1592, column: 11)
!4756 = !DILocation(line: 1593, column: 17, scope: !4755)
!4757 = !DILocalVariable(name: "bottom_capbase", scope: !4755, file: !1, line: 1594, type: !283)
!4758 = !DILocation(line: 1594, column: 16, scope: !4755)
!4759 = !DILocalVariable(name: "top_capbase", scope: !4755, file: !1, line: 1595, type: !283)
!4760 = !DILocation(line: 1595, column: 16, scope: !4755)
!4761 = !DILocalVariable(name: "bottom_no", scope: !4755, file: !1, line: 1596, type: !471)
!4762 = !DILocation(line: 1596, column: 13, scope: !4755)
!4763 = !DILocalVariable(name: "top_no", scope: !4755, file: !1, line: 1597, type: !471)
!4764 = !DILocation(line: 1597, column: 13, scope: !4755)
!4765 = !DILocalVariable(name: "firstblend", scope: !4755, file: !1, line: 1598, type: !208)
!4766 = !DILocation(line: 1598, column: 13, scope: !4755)
!4767 = !DILocalVariable(name: "lastblend", scope: !4755, file: !1, line: 1598, type: !208)
!4768 = !DILocation(line: 1598, column: 32, scope: !4755)
!4769 = !DILocalVariable(name: "i", scope: !4755, file: !1, line: 1599, type: !106)
!4770 = !DILocation(line: 1599, column: 11, scope: !4755)
!4771 = !DILocalVariable(name: "start", scope: !4755, file: !1, line: 1599, type: !106)
!4772 = !DILocation(line: 1599, column: 14, scope: !4755)
!4773 = !DILocalVariable(name: "steps", scope: !4755, file: !1, line: 1599, type: !106)
!4774 = !DILocation(line: 1599, column: 21, scope: !4755)
!4775 = !DILocation(line: 1601, column: 11, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4755, file: !1, line: 1601, column: 11)
!4777 = !DILocation(line: 1601, column: 15, scope: !4776)
!4778 = !DILocation(line: 1601, column: 21, scope: !4776)
!4779 = !DILocation(line: 1601, column: 11, scope: !4755)
!4780 = !DILocation(line: 1602, column: 36, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4776, file: !1, line: 1601, column: 39)
!4782 = !DILocation(line: 1602, column: 8, scope: !4781)
!4783 = !DILocation(line: 1604, column: 7, scope: !4781)
!4784 = !DILocation(line: 1606, column: 18, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4786, file: !1, line: 1606, column: 12)
!4786 = distinct !DILexicalBlock(scope: !4776, file: !1, line: 1605, column: 12)
!4787 = !DILocation(line: 1606, column: 22, scope: !4785)
!4788 = !DILocation(line: 1606, column: 32, scope: !4785)
!4789 = !DILocation(line: 1606, column: 36, scope: !4785)
!4790 = !DILocation(line: 1606, column: 30, scope: !4785)
!4791 = !DILocation(line: 1606, column: 12, scope: !4785)
!4792 = !DILocation(line: 1606, column: 45, scope: !4785)
!4793 = !DILocation(line: 1606, column: 12, scope: !4786)
!4794 = !DILocation(line: 1607, column: 9, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4785, file: !1, line: 1606, column: 60)
!4796 = !DILocation(line: 1610, column: 28, scope: !4786)
!4797 = !DILocation(line: 1610, column: 32, scope: !4786)
!4798 = !DILocation(line: 1610, column: 36, scope: !4786)
!4799 = !DILocation(line: 1610, column: 8, scope: !4786)
!4800 = !DILocation(line: 1613, column: 24, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4755, file: !1, line: 1613, column: 7)
!4802 = !DILocation(line: 1613, column: 18, scope: !4801)
!4803 = !DILocation(line: 1613, column: 16, scope: !4801)
!4804 = !DILocation(line: 1613, column: 12, scope: !4801)
!4805 = !DILocation(line: 1613, column: 31, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4801, file: !1, line: 1613, column: 7)
!4807 = !DILocation(line: 1613, column: 7, scope: !4801)
!4808 = !DILocalVariable(name: "bevp_first", scope: !4809, file: !1, line: 1614, type: !4658)
!4809 = distinct !DILexicalBlock(scope: !4806, file: !1, line: 1613, column: 53)
!4810 = !DILocation(line: 1614, column: 18, scope: !4809)
!4811 = !DILocalVariable(name: "bevp_last", scope: !4809, file: !1, line: 1614, type: !4658)
!4812 = !DILocation(line: 1614, column: 31, scope: !4809)
!4813 = !DILocalVariable(name: "bevp", scope: !4809, file: !1, line: 1615, type: !4658)
!4814 = !DILocation(line: 1615, column: 18, scope: !4809)
!4815 = !DILocation(line: 1618, column: 13, scope: !4809)
!4816 = !DILocation(line: 1618, column: 11, scope: !4809)
!4817 = !DILocation(line: 1619, column: 27, scope: !4809)
!4818 = !DILocation(line: 1619, column: 58, scope: !4809)
!4819 = !DILocation(line: 1619, column: 63, scope: !4809)
!4820 = !DILocation(line: 1619, column: 56, scope: !4809)
!4821 = !DILocation(line: 1619, column: 68, scope: !4809)
!4822 = !DILocation(line: 1619, column: 66, scope: !4809)
!4823 = !DILocation(line: 1619, column: 25, scope: !4809)
!4824 = !DILocation(line: 1619, column: 8, scope: !4809)
!4825 = !DILocation(line: 1619, column: 12, scope: !4809)
!4826 = !DILocation(line: 1619, column: 18, scope: !4809)
!4827 = !DILocation(line: 1620, column: 20, scope: !4809)
!4828 = !DILocation(line: 1620, column: 30, scope: !4809)
!4829 = !DILocation(line: 1620, column: 8, scope: !4809)
!4830 = !DILocation(line: 1622, column: 8, scope: !4809)
!4831 = !DILocation(line: 1622, column: 12, scope: !4809)
!4832 = !DILocation(line: 1622, column: 17, scope: !4809)
!4833 = !DILocation(line: 1624, column: 19, scope: !4809)
!4834 = !DILocation(line: 1624, column: 24, scope: !4809)
!4835 = !DILocation(line: 1624, column: 29, scope: !4809)
!4836 = !DILocation(line: 1624, column: 8, scope: !4809)
!4837 = !DILocation(line: 1624, column: 12, scope: !4809)
!4838 = !DILocation(line: 1624, column: 17, scope: !4809)
!4839 = !DILocation(line: 1625, column: 12, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4809, file: !1, line: 1625, column: 12)
!4841 = !DILocation(line: 1625, column: 17, scope: !4840)
!4842 = !DILocation(line: 1625, column: 22, scope: !4840)
!4843 = !DILocation(line: 1625, column: 12, scope: !4809)
!4844 = !DILocation(line: 1625, column: 34, scope: !4840)
!4845 = !DILocation(line: 1625, column: 38, scope: !4840)
!4846 = !DILocation(line: 1625, column: 43, scope: !4840)
!4847 = !DILocation(line: 1626, column: 12, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4809, file: !1, line: 1626, column: 12)
!4849 = !DILocation(line: 1626, column: 16, scope: !4848)
!4850 = !DILocation(line: 1626, column: 21, scope: !4848)
!4851 = !DILocation(line: 1626, column: 12, scope: !4809)
!4852 = !DILocation(line: 1626, column: 27, scope: !4848)
!4853 = !DILocation(line: 1626, column: 31, scope: !4848)
!4854 = !DILocation(line: 1626, column: 36, scope: !4848)
!4855 = !DILocation(line: 1628, column: 20, scope: !4809)
!4856 = !DILocation(line: 1628, column: 8, scope: !4809)
!4857 = !DILocation(line: 1628, column: 12, scope: !4809)
!4858 = !DILocation(line: 1628, column: 18, scope: !4809)
!4859 = !DILocation(line: 1629, column: 17, scope: !4809)
!4860 = !DILocation(line: 1629, column: 22, scope: !4809)
!4861 = !DILocation(line: 1629, column: 8, scope: !4809)
!4862 = !DILocation(line: 1629, column: 12, scope: !4809)
!4863 = !DILocation(line: 1629, column: 15, scope: !4809)
!4864 = !DILocation(line: 1630, column: 18, scope: !4809)
!4865 = !DILocation(line: 1630, column: 22, scope: !4809)
!4866 = !DILocation(line: 1630, column: 8, scope: !4809)
!4867 = !DILocation(line: 1630, column: 12, scope: !4809)
!4868 = !DILocation(line: 1630, column: 16, scope: !4809)
!4869 = !DILocation(line: 1631, column: 22, scope: !4809)
!4870 = !DILocation(line: 1631, column: 26, scope: !4809)
!4871 = !DILocation(line: 1631, column: 8, scope: !4809)
!4872 = !DILocation(line: 1631, column: 12, scope: !4809)
!4873 = !DILocation(line: 1631, column: 20, scope: !4809)
!4874 = !DILocation(line: 1635, column: 17, scope: !4809)
!4875 = !DILocation(line: 1635, column: 21, scope: !4809)
!4876 = !DILocation(line: 1635, column: 26, scope: !4809)
!4877 = !DILocation(line: 1635, column: 8, scope: !4809)
!4878 = !DILocation(line: 1635, column: 12, scope: !4809)
!4879 = !DILocation(line: 1635, column: 15, scope: !4809)
!4880 = !DILocation(line: 1637, column: 29, scope: !4809)
!4881 = !DILocation(line: 1637, column: 73, scope: !4809)
!4882 = !DILocation(line: 1637, column: 79, scope: !4809)
!4883 = !DILocation(line: 1637, column: 87, scope: !4809)
!4884 = !DILocation(line: 1637, column: 71, scope: !4809)
!4885 = !DILocation(line: 1637, column: 69, scope: !4809)
!4886 = !DILocation(line: 1637, column: 8, scope: !4809)
!4887 = !DILocation(line: 1637, column: 12, scope: !4809)
!4888 = !DILocation(line: 1637, column: 27, scope: !4809)
!4889 = !DILocation(line: 1641, column: 22, scope: !4809)
!4890 = !DILocation(line: 1641, column: 26, scope: !4809)
!4891 = !DILocation(line: 1641, column: 19, scope: !4809)
!4892 = !DILocation(line: 1642, column: 22, scope: !4809)
!4893 = !DILocation(line: 1642, column: 26, scope: !4809)
!4894 = !DILocation(line: 1642, column: 36, scope: !4809)
!4895 = !DILocation(line: 1642, column: 40, scope: !4809)
!4896 = !DILocation(line: 1642, column: 43, scope: !4809)
!4897 = !DILocation(line: 1642, column: 19, scope: !4809)
!4898 = !DILocation(line: 1643, column: 22, scope: !4809)
!4899 = !DILocation(line: 1643, column: 26, scope: !4809)
!4900 = !DILocation(line: 1643, column: 36, scope: !4809)
!4901 = !DILocation(line: 1643, column: 19, scope: !4809)
!4902 = !DILocation(line: 1644, column: 17, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4809, file: !1, line: 1644, column: 8)
!4904 = !DILocation(line: 1644, column: 15, scope: !4903)
!4905 = !DILocation(line: 1644, column: 26, scope: !4903)
!4906 = !DILocation(line: 1644, column: 13, scope: !4903)
!4907 = !DILocation(line: 1644, column: 31, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4903, file: !1, line: 1644, column: 8)
!4909 = !DILocation(line: 1644, column: 35, scope: !4908)
!4910 = !DILocation(line: 1644, column: 33, scope: !4908)
!4911 = !DILocation(line: 1644, column: 8, scope: !4903)
!4912 = !DILocalVariable(name: "fac", scope: !4913, file: !1, line: 1645, type: !208)
!4913 = distinct !DILexicalBlock(scope: !4908, file: !1, line: 1644, column: 60)
!4914 = !DILocation(line: 1645, column: 15, scope: !4913)
!4915 = !DILocalVariable(name: "cur_data", scope: !4913, file: !1, line: 1646, type: !209)
!4916 = !DILocation(line: 1646, column: 16, scope: !4913)
!4917 = !DILocation(line: 1646, column: 27, scope: !4913)
!4918 = !DILocation(line: 1648, column: 13, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4913, file: !1, line: 1648, column: 13)
!4920 = !DILocation(line: 1648, column: 17, scope: !4919)
!4921 = !DILocation(line: 1648, column: 26, scope: !4919)
!4922 = !DILocation(line: 1648, column: 13, scope: !4913)
!4923 = !DILocation(line: 1649, column: 16, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4919, file: !1, line: 1648, column: 35)
!4925 = !DILocation(line: 1649, column: 22, scope: !4924)
!4926 = !DILocation(line: 1649, column: 14, scope: !4924)
!4927 = !DILocation(line: 1650, column: 9, scope: !4924)
!4928 = !DILocalVariable(name: "len", scope: !4929, file: !1, line: 1652, type: !208)
!4929 = distinct !DILexicalBlock(scope: !4919, file: !1, line: 1651, column: 14)
!4930 = !DILocation(line: 1652, column: 16, scope: !4929)
!4931 = !DILocalVariable(name: "taper_fac", scope: !4929, file: !1, line: 1652, type: !208)
!4932 = !DILocation(line: 1652, column: 21, scope: !4929)
!4933 = !DILocation(line: 1654, column: 14, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4929, file: !1, line: 1654, column: 14)
!4935 = !DILocation(line: 1654, column: 18, scope: !4934)
!4936 = !DILocation(line: 1654, column: 23, scope: !4934)
!4937 = !DILocation(line: 1654, column: 14, scope: !4929)
!4938 = !DILocation(line: 1655, column: 18, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4934, file: !1, line: 1654, column: 39)
!4940 = !DILocation(line: 1655, column: 24, scope: !4939)
!4941 = !DILocation(line: 1655, column: 17, scope: !4939)
!4942 = !DILocation(line: 1655, column: 31, scope: !4939)
!4943 = !DILocation(line: 1655, column: 29, scope: !4939)
!4944 = !DILocation(line: 1655, column: 44, scope: !4939)
!4945 = !DILocation(line: 1655, column: 42, scope: !4939)
!4946 = !DILocation(line: 1655, column: 15, scope: !4939)
!4947 = !DILocation(line: 1657, column: 15, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4939, file: !1, line: 1657, column: 15)
!4949 = !DILocation(line: 1657, column: 17, scope: !4948)
!4950 = !DILocation(line: 1657, column: 15, scope: !4939)
!4951 = !DILocation(line: 1658, column: 22, scope: !4948)
!4952 = !DILocation(line: 1658, column: 12, scope: !4948)
!4953 = !DILocation(line: 1659, column: 20, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4948, file: !1, line: 1659, column: 20)
!4955 = !DILocation(line: 1659, column: 25, scope: !4954)
!4956 = !DILocation(line: 1659, column: 31, scope: !4954)
!4957 = !DILocation(line: 1659, column: 22, scope: !4954)
!4958 = !DILocation(line: 1659, column: 20, scope: !4948)
!4959 = !DILocation(line: 1660, column: 22, scope: !4954)
!4960 = !DILocation(line: 1660, column: 12, scope: !4954)
!4961 = !DILocation(line: 1662, column: 33, scope: !4954)
!4962 = !DILocation(line: 1662, column: 25, scope: !4954)
!4963 = !DILocation(line: 1662, column: 45, scope: !4954)
!4964 = !DILocation(line: 1662, column: 43, scope: !4954)
!4965 = !DILocation(line: 1662, column: 35, scope: !4954)
!4966 = !DILocation(line: 1662, column: 60, scope: !4954)
!4967 = !DILocation(line: 1662, column: 58, scope: !4954)
!4968 = !DILocation(line: 1662, column: 22, scope: !4954)
!4969 = !DILocation(line: 1663, column: 10, scope: !4939)
!4970 = !DILocation(line: 1665, column: 17, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4934, file: !1, line: 1664, column: 15)
!4972 = !DILocation(line: 1665, column: 21, scope: !4971)
!4973 = !DILocation(line: 1665, column: 24, scope: !4971)
!4974 = !DILocation(line: 1665, column: 15, scope: !4971)
!4975 = !DILocation(line: 1666, column: 31, scope: !4971)
!4976 = !DILocation(line: 1666, column: 23, scope: !4971)
!4977 = !DILocation(line: 1666, column: 35, scope: !4971)
!4978 = !DILocation(line: 1666, column: 33, scope: !4971)
!4979 = !DILocation(line: 1666, column: 21, scope: !4971)
!4980 = !DILocation(line: 1668, column: 15, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4971, file: !1, line: 1668, column: 15)
!4982 = !DILocation(line: 1668, column: 17, scope: !4981)
!4983 = !DILocation(line: 1668, column: 15, scope: !4971)
!4984 = !DILocation(line: 1669, column: 33, scope: !4981)
!4985 = !DILocation(line: 1669, column: 31, scope: !4981)
!4986 = !DILocation(line: 1669, column: 47, scope: !4981)
!4987 = !DILocation(line: 1669, column: 45, scope: !4981)
!4988 = !DILocation(line: 1669, column: 22, scope: !4981)
!4989 = !DILocation(line: 1669, column: 12, scope: !4981)
!4990 = !DILocation(line: 1670, column: 20, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4981, file: !1, line: 1670, column: 20)
!4992 = !DILocation(line: 1670, column: 25, scope: !4991)
!4993 = !DILocation(line: 1670, column: 31, scope: !4991)
!4994 = !DILocation(line: 1670, column: 22, scope: !4991)
!4995 = !DILocation(line: 1670, column: 20, scope: !4981)
!4996 = !DILocation(line: 1671, column: 33, scope: !4991)
!4997 = !DILocation(line: 1671, column: 31, scope: !4991)
!4998 = !DILocation(line: 1671, column: 46, scope: !4991)
!4999 = !DILocation(line: 1671, column: 44, scope: !4991)
!5000 = !DILocation(line: 1671, column: 22, scope: !4991)
!5001 = !DILocation(line: 1671, column: 12, scope: !4991)
!5002 = !DILocation(line: 1674, column: 36, scope: !4929)
!5003 = !DILocation(line: 1674, column: 43, scope: !4929)
!5004 = !DILocation(line: 1674, column: 47, scope: !4929)
!5005 = !DILocation(line: 1674, column: 57, scope: !4929)
!5006 = !DILocation(line: 1674, column: 16, scope: !4929)
!5007 = !DILocation(line: 1674, column: 14, scope: !4929)
!5008 = !DILocation(line: 1677, column: 13, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !4913, file: !1, line: 1677, column: 13)
!5010 = !DILocation(line: 1677, column: 19, scope: !5009)
!5011 = !DILocation(line: 1677, column: 13, scope: !4913)
!5012 = !DILocation(line: 1678, column: 46, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5009, file: !1, line: 1677, column: 30)
!5014 = !DILocation(line: 1678, column: 48, scope: !5013)
!5015 = !DILocation(line: 1678, column: 42, scope: !5013)
!5016 = !DILocation(line: 1678, column: 10, scope: !5013)
!5017 = !DILocation(line: 1678, column: 14, scope: !5013)
!5018 = !DILocation(line: 1678, column: 29, scope: !5013)
!5019 = !DILocation(line: 1678, column: 31, scope: !5013)
!5020 = !DILocation(line: 1678, column: 37, scope: !5013)
!5021 = !DILocation(line: 1679, column: 9, scope: !5013)
!5022 = !DILocation(line: 1682, column: 14, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !4913, file: !1, line: 1682, column: 13)
!5024 = !DILocation(line: 1682, column: 16, scope: !5023)
!5025 = !DILocation(line: 1682, column: 22, scope: !5023)
!5026 = !DILocation(line: 1682, column: 26, scope: !5023)
!5027 = !DILocation(line: 1682, column: 34, scope: !5023)
!5028 = !DILocation(line: 1682, column: 31, scope: !5023)
!5029 = !DILocation(line: 1682, column: 13, scope: !4913)
!5030 = !DILocation(line: 1683, column: 27, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5023, file: !1, line: 1682, column: 46)
!5032 = !DILocation(line: 1683, column: 31, scope: !5031)
!5033 = !DILocation(line: 1683, column: 37, scope: !5031)
!5034 = !DILocation(line: 1683, column: 42, scope: !5031)
!5035 = !DILocation(line: 1683, column: 47, scope: !5031)
!5036 = !DILocation(line: 1683, column: 59, scope: !5031)
!5037 = !DILocation(line: 1683, column: 57, scope: !5031)
!5038 = !DILocation(line: 1683, column: 71, scope: !5031)
!5039 = !DILocation(line: 1683, column: 79, scope: !5031)
!5040 = !DILocation(line: 1683, column: 10, scope: !5031)
!5041 = !DILocation(line: 1684, column: 9, scope: !5031)
!5042 = !DILocation(line: 1685, column: 19, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5023, file: !1, line: 1685, column: 18)
!5044 = !DILocation(line: 1685, column: 24, scope: !5043)
!5045 = !DILocation(line: 1685, column: 30, scope: !5043)
!5046 = !DILocation(line: 1685, column: 21, scope: !5043)
!5047 = !DILocation(line: 1685, column: 35, scope: !5043)
!5048 = !DILocation(line: 1685, column: 39, scope: !5043)
!5049 = !DILocation(line: 1685, column: 47, scope: !5043)
!5050 = !DILocation(line: 1685, column: 44, scope: !5043)
!5051 = !DILocation(line: 1685, column: 18, scope: !5023)
!5052 = !DILocation(line: 1686, column: 27, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5043, file: !1, line: 1685, column: 61)
!5054 = !DILocation(line: 1686, column: 31, scope: !5053)
!5055 = !DILocation(line: 1686, column: 37, scope: !5053)
!5056 = !DILocation(line: 1686, column: 42, scope: !5053)
!5057 = !DILocation(line: 1686, column: 47, scope: !5053)
!5058 = !DILocation(line: 1686, column: 59, scope: !5053)
!5059 = !DILocation(line: 1686, column: 57, scope: !5053)
!5060 = !DILocation(line: 1686, column: 70, scope: !5053)
!5061 = !DILocation(line: 1686, column: 78, scope: !5053)
!5062 = !DILocation(line: 1686, column: 10, scope: !5053)
!5063 = !DILocation(line: 1687, column: 9, scope: !5053)
!5064 = !DILocation(line: 1689, column: 27, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5043, file: !1, line: 1688, column: 14)
!5066 = !DILocation(line: 1689, column: 31, scope: !5065)
!5067 = !DILocation(line: 1689, column: 43, scope: !5065)
!5068 = !DILocation(line: 1689, column: 54, scope: !5065)
!5069 = !DILocation(line: 1689, column: 62, scope: !5065)
!5070 = !DILocation(line: 1689, column: 10, scope: !5065)
!5071 = !DILocation(line: 1692, column: 13, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !4913, file: !1, line: 1692, column: 13)
!5073 = !DILocation(line: 1692, column: 17, scope: !5072)
!5074 = !DILocation(line: 1692, column: 24, scope: !5072)
!5075 = !DILocation(line: 1692, column: 28, scope: !5072)
!5076 = !DILocation(line: 1692, column: 32, scope: !5072)
!5077 = !DILocation(line: 1692, column: 37, scope: !5072)
!5078 = !DILocation(line: 1692, column: 53, scope: !5072)
!5079 = !DILocation(line: 1692, column: 58, scope: !5072)
!5080 = !DILocation(line: 1692, column: 62, scope: !5072)
!5081 = !DILocation(line: 1692, column: 68, scope: !5072)
!5082 = !DILocation(line: 1692, column: 13, scope: !4913)
!5083 = !DILocation(line: 1693, column: 14, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5085, file: !1, line: 1693, column: 14)
!5085 = distinct !DILexicalBlock(scope: !5072, file: !1, line: 1692, column: 87)
!5086 = !DILocation(line: 1693, column: 16, scope: !5084)
!5087 = !DILocation(line: 1693, column: 14, scope: !5085)
!5088 = !DILocation(line: 1694, column: 24, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5084, file: !1, line: 1693, column: 22)
!5090 = !DILocation(line: 1694, column: 28, scope: !5089)
!5091 = !DILocation(line: 1694, column: 33, scope: !5089)
!5092 = !DILocation(line: 1694, column: 48, scope: !5089)
!5093 = !DILocation(line: 1694, column: 53, scope: !5089)
!5094 = !DILocation(line: 1694, column: 46, scope: !5089)
!5095 = !DILocation(line: 1694, column: 42, scope: !5089)
!5096 = !DILocation(line: 1694, column: 11, scope: !5089)
!5097 = !DILocation(line: 1695, column: 24, scope: !5089)
!5098 = !DILocation(line: 1695, column: 35, scope: !5089)
!5099 = !DILocation(line: 1695, column: 41, scope: !5089)
!5100 = !DILocation(line: 1695, column: 11, scope: !5089)
!5101 = !DILocation(line: 1696, column: 10, scope: !5089)
!5102 = !DILocation(line: 1697, column: 14, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5085, file: !1, line: 1697, column: 14)
!5104 = !DILocation(line: 1697, column: 19, scope: !5103)
!5105 = !DILocation(line: 1697, column: 25, scope: !5103)
!5106 = !DILocation(line: 1697, column: 16, scope: !5103)
!5107 = !DILocation(line: 1697, column: 14, scope: !5085)
!5108 = !DILocation(line: 1698, column: 24, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5103, file: !1, line: 1697, column: 30)
!5110 = !DILocation(line: 1698, column: 28, scope: !5109)
!5111 = !DILocation(line: 1698, column: 33, scope: !5109)
!5112 = !DILocation(line: 1698, column: 11, scope: !5109)
!5113 = !DILocation(line: 1699, column: 22, scope: !5109)
!5114 = !DILocation(line: 1699, column: 30, scope: !5109)
!5115 = !DILocation(line: 1699, column: 36, scope: !5109)
!5116 = !DILocation(line: 1699, column: 11, scope: !5109)
!5117 = !DILocation(line: 1700, column: 10, scope: !5109)
!5118 = !DILocation(line: 1701, column: 9, scope: !5085)
!5119 = !DILocation(line: 1702, column: 8, scope: !4913)
!5120 = !DILocation(line: 1644, column: 43, scope: !4908)
!5121 = !DILocation(line: 1644, column: 51, scope: !4908)
!5122 = !DILocation(line: 1644, column: 56, scope: !4908)
!5123 = !DILocation(line: 1644, column: 8, scope: !4908)
!5124 = distinct !{!5124, !4911, !5125}
!5125 = !DILocation(line: 1702, column: 8, scope: !4903)
!5126 = !DILocation(line: 1705, column: 30, scope: !4809)
!5127 = !DILocation(line: 1705, column: 8, scope: !4809)
!5128 = !DILocation(line: 1706, column: 7, scope: !4809)
!5129 = !DILocation(line: 1613, column: 42, scope: !4806)
!5130 = !DILocation(line: 1613, column: 47, scope: !4806)
!5131 = !DILocation(line: 1613, column: 40, scope: !4806)
!5132 = !DILocation(line: 1613, column: 7, scope: !4806)
!5133 = distinct !{!5133, !4807, !5134}
!5134 = !DILocation(line: 1706, column: 7, scope: !4801)
!5135 = !DILocation(line: 1708, column: 26, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !4755, file: !1, line: 1708, column: 11)
!5137 = !DILocation(line: 1708, column: 11, scope: !5136)
!5138 = !DILocation(line: 1708, column: 11, scope: !4755)
!5139 = !DILocation(line: 1709, column: 43, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5136, file: !1, line: 1708, column: 33)
!5141 = !DILocation(line: 1709, column: 53, scope: !5140)
!5142 = !DILocation(line: 1709, column: 8, scope: !5140)
!5143 = !DILocation(line: 1710, column: 40, scope: !5140)
!5144 = !DILocation(line: 1710, column: 50, scope: !5140)
!5145 = !DILocation(line: 1710, column: 8, scope: !5140)
!5146 = !DILocation(line: 1711, column: 8, scope: !5140)
!5147 = !DILocation(line: 1712, column: 8, scope: !5140)
!5148 = !DILocation(line: 1713, column: 7, scope: !5140)
!5149 = !DILocation(line: 1715, column: 5, scope: !4654)
!5150 = !DILocation(line: 1717, column: 4, scope: !4642)
!5151 = !DILocation(line: 1553, column: 26, scope: !4635)
!5152 = !DILocation(line: 1553, column: 30, scope: !4635)
!5153 = !DILocation(line: 1553, column: 24, scope: !4635)
!5154 = !DILocation(line: 1553, column: 41, scope: !4635)
!5155 = !DILocation(line: 1553, column: 45, scope: !4635)
!5156 = !DILocation(line: 1553, column: 39, scope: !4635)
!5157 = !DILocation(line: 1553, column: 4, scope: !4635)
!5158 = distinct !{!5158, !4640, !5159}
!5159 = !DILocation(line: 1717, column: 4, scope: !4636)
!5160 = !DILocation(line: 1718, column: 4, scope: !4585)
!5161 = !DILocation(line: 1721, column: 9, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !4512, file: !1, line: 1721, column: 7)
!5163 = !DILocation(line: 1721, column: 13, scope: !5162)
!5164 = !DILocation(line: 1721, column: 18, scope: !5162)
!5165 = !DILocation(line: 1721, column: 7, scope: !4512)
!5166 = !DILocation(line: 1722, column: 24, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5162, file: !1, line: 1721, column: 37)
!5168 = !DILocation(line: 1722, column: 37, scope: !5167)
!5169 = !DILocation(line: 1722, column: 4, scope: !5167)
!5170 = !DILocation(line: 1723, column: 3, scope: !5167)
!5171 = !DILocation(line: 1725, column: 8, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !4512, file: !1, line: 1725, column: 7)
!5173 = !DILocation(line: 1725, column: 7, scope: !4512)
!5174 = !DILocation(line: 1726, column: 9, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5176, file: !1, line: 1726, column: 8)
!5176 = distinct !DILexicalBlock(scope: !5172, file: !1, line: 1725, column: 18)
!5177 = !DILocation(line: 1726, column: 13, scope: !5175)
!5178 = !DILocation(line: 1726, column: 18, scope: !5175)
!5179 = !DILocation(line: 1726, column: 29, scope: !5175)
!5180 = !DILocation(line: 1727, column: 38, scope: !5175)
!5181 = !DILocation(line: 1727, column: 45, scope: !5175)
!5182 = !DILocation(line: 1727, column: 8, scope: !5175)
!5183 = !DILocation(line: 1727, column: 49, scope: !5175)
!5184 = !DILocation(line: 1726, column: 8, scope: !5176)
!5185 = !DILocation(line: 1729, column: 20, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5175, file: !1, line: 1728, column: 4)
!5187 = !DILocation(line: 1729, column: 5, scope: !5186)
!5188 = !DILocation(line: 1730, column: 4, scope: !5186)
!5189 = !DILocation(line: 1731, column: 3, scope: !5176)
!5190 = !DILocation(line: 1733, column: 8, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !4512, file: !1, line: 1733, column: 7)
!5192 = !DILocation(line: 1733, column: 7, scope: !4512)
!5193 = !DILocation(line: 1734, column: 28, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5191, file: !1, line: 1733, column: 18)
!5195 = !DILocation(line: 1734, column: 32, scope: !5194)
!5196 = !DILocation(line: 1734, column: 45, scope: !5194)
!5197 = !DILocation(line: 1734, column: 4, scope: !5194)
!5198 = !DILocation(line: 1735, column: 30, scope: !5194)
!5199 = !DILocation(line: 1735, column: 37, scope: !5194)
!5200 = !DILocation(line: 1735, column: 50, scope: !5194)
!5201 = !DILocation(line: 1735, column: 60, scope: !5194)
!5202 = !DILocation(line: 1735, column: 72, scope: !5194)
!5203 = !DILocation(line: 1735, column: 84, scope: !5194)
!5204 = !DILocation(line: 1735, column: 4, scope: !5194)
!5205 = !DILocation(line: 1736, column: 3, scope: !5194)
!5206 = !DILocation(line: 1738, column: 7, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !4512, file: !1, line: 1738, column: 7)
!5208 = !DILocation(line: 1738, column: 11, scope: !5207)
!5209 = !DILocation(line: 1738, column: 16, scope: !5207)
!5210 = !DILocation(line: 1738, column: 33, scope: !5207)
!5211 = !DILocation(line: 1738, column: 37, scope: !5207)
!5212 = !DILocation(line: 1738, column: 41, scope: !5207)
!5213 = !DILocation(line: 1738, column: 7, scope: !4512)
!5214 = !DILocation(line: 1739, column: 24, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5207, file: !1, line: 1738, column: 55)
!5216 = !DILocation(line: 1739, column: 37, scope: !5215)
!5217 = !DILocation(line: 1739, column: 4, scope: !5215)
!5218 = !DILocation(line: 1740, column: 3, scope: !5215)
!5219 = !DILocation(line: 1742, column: 3, scope: !4512)
!5220 = !DILocation(line: 1743, column: 2, scope: !4512)
!5221 = !DILocation(line: 1744, column: 1, scope: !4470)
!5222 = distinct !DISubprogram(name: "BKE_displist_make_curveTypes_forRender", scope: !1, file: !1, line: 1769, type: !5223, scopeLine: 1772, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !240)
!5223 = !DISubroutineType(types: !5224)
!5224 = !{null, !1333, !2871, !282, !3181, !950, !950}
!5225 = !DILocalVariable(name: "scene", arg: 1, scope: !5222, file: !1, line: 1769, type: !1333)
!5226 = !DILocation(line: 1769, column: 52, scope: !5222)
!5227 = !DILocalVariable(name: "ob", arg: 2, scope: !5222, file: !1, line: 1769, type: !2871)
!5228 = !DILocation(line: 1769, column: 67, scope: !5222)
!5229 = !DILocalVariable(name: "dispbase", arg: 3, scope: !5222, file: !1, line: 1769, type: !282)
!5230 = !DILocation(line: 1769, column: 81, scope: !5222)
!5231 = !DILocalVariable(name: "r_dm_final", arg: 4, scope: !5222, file: !1, line: 1770, type: !3181)
!5232 = !DILocation(line: 1770, column: 59, scope: !5222)
!5233 = !DILocalVariable(name: "for_orco", arg: 5, scope: !5222, file: !1, line: 1770, type: !950)
!5234 = !DILocation(line: 1770, column: 82, scope: !5222)
!5235 = !DILocalVariable(name: "use_render_resolution", arg: 6, scope: !5222, file: !1, line: 1771, type: !950)
!5236 = !DILocation(line: 1771, column: 56, scope: !5222)
!5237 = !DILocation(line: 1773, column: 6, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5222, file: !1, line: 1773, column: 6)
!5239 = !DILocation(line: 1773, column: 10, scope: !5238)
!5240 = !DILocation(line: 1773, column: 22, scope: !5238)
!5241 = !DILocation(line: 1773, column: 6, scope: !5222)
!5242 = !DILocation(line: 1774, column: 21, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5238, file: !1, line: 1773, column: 31)
!5244 = !DILocation(line: 1774, column: 3, scope: !5243)
!5245 = !DILocation(line: 1774, column: 7, scope: !5243)
!5246 = !DILocation(line: 1774, column: 19, scope: !5243)
!5247 = !DILocation(line: 1775, column: 2, scope: !5243)
!5248 = !DILocation(line: 1777, column: 28, scope: !5222)
!5249 = !DILocation(line: 1777, column: 35, scope: !5222)
!5250 = !DILocation(line: 1777, column: 39, scope: !5222)
!5251 = !DILocation(line: 1777, column: 49, scope: !5222)
!5252 = !DILocation(line: 1777, column: 67, scope: !5222)
!5253 = !DILocation(line: 1777, column: 77, scope: !5222)
!5254 = !DILocation(line: 1777, column: 2, scope: !5222)
!5255 = !DILocation(line: 1778, column: 1, scope: !5222)
!5256 = distinct !DISubprogram(name: "BKE_displist_make_curveTypes_forOrco", scope: !1, file: !1, line: 1780, type: !5257, scopeLine: 1781, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !240)
!5257 = !DISubroutineType(types: !5258)
!5258 = !{null, !2156, !1405, !5259}
!5259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!5260 = !DILocalVariable(name: "scene", arg: 1, scope: !5256, file: !1, line: 1780, type: !2156)
!5261 = !DILocation(line: 1780, column: 57, scope: !5256)
!5262 = !DILocalVariable(name: "ob", arg: 2, scope: !5256, file: !1, line: 1780, type: !1405)
!5263 = !DILocation(line: 1780, column: 79, scope: !5256)
!5264 = !DILocalVariable(name: "dispbase", arg: 3, scope: !5256, file: !1, line: 1780, type: !5259)
!5265 = !DILocation(line: 1780, column: 100, scope: !5256)
!5266 = !DILocation(line: 1782, column: 6, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5256, file: !1, line: 1782, column: 6)
!5268 = !DILocation(line: 1782, column: 10, scope: !5267)
!5269 = !DILocation(line: 1782, column: 22, scope: !5267)
!5270 = !DILocation(line: 1782, column: 6, scope: !5256)
!5271 = !DILocation(line: 1783, column: 21, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5267, file: !1, line: 1782, column: 31)
!5273 = !DILocation(line: 1783, column: 3, scope: !5272)
!5274 = !DILocation(line: 1783, column: 7, scope: !5272)
!5275 = !DILocation(line: 1783, column: 19, scope: !5272)
!5276 = !DILocation(line: 1784, column: 2, scope: !5272)
!5277 = !DILocation(line: 1786, column: 28, scope: !5256)
!5278 = !DILocation(line: 1786, column: 35, scope: !5256)
!5279 = !DILocation(line: 1786, column: 39, scope: !5256)
!5280 = !DILocation(line: 1786, column: 2, scope: !5256)
!5281 = !DILocation(line: 1787, column: 1, scope: !5256)
!5282 = distinct !DISubprogram(name: "BKE_displist_make_orco", scope: !1, file: !1, line: 1790, type: !5283, scopeLine: 1793, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !240)
!5283 = !DISubroutineType(types: !5284)
!5284 = !{!209, !1333, !2871, !1722, !950, !950}
!5285 = !DILocalVariable(name: "scene", arg: 1, scope: !5282, file: !1, line: 1790, type: !1333)
!5286 = !DILocation(line: 1790, column: 38, scope: !5282)
!5287 = !DILocalVariable(name: "ob", arg: 2, scope: !5282, file: !1, line: 1790, type: !2871)
!5288 = !DILocation(line: 1790, column: 53, scope: !5282)
!5289 = !DILocalVariable(name: "dm_final", arg: 3, scope: !5282, file: !1, line: 1790, type: !1722)
!5290 = !DILocation(line: 1790, column: 70, scope: !5282)
!5291 = !DILocalVariable(name: "for_render", arg: 4, scope: !5282, file: !1, line: 1791, type: !950)
!5292 = !DILocation(line: 1791, column: 42, scope: !5282)
!5293 = !DILocalVariable(name: "use_render_resolution", arg: 5, scope: !5282, file: !1, line: 1792, type: !950)
!5294 = !DILocation(line: 1792, column: 42, scope: !5282)
!5295 = !DILocalVariable(name: "orco", scope: !5282, file: !1, line: 1794, type: !209)
!5296 = !DILocation(line: 1794, column: 9, scope: !5282)
!5297 = !DILocation(line: 1796, column: 6, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5282, file: !1, line: 1796, column: 6)
!5299 = !DILocation(line: 1796, column: 15, scope: !5298)
!5300 = !DILocation(line: 1796, column: 6, scope: !5282)
!5301 = !DILocation(line: 1797, column: 14, scope: !5298)
!5302 = !DILocation(line: 1797, column: 18, scope: !5298)
!5303 = !DILocation(line: 1797, column: 12, scope: !5298)
!5304 = !DILocation(line: 1797, column: 3, scope: !5298)
!5305 = !DILocation(line: 1799, column: 7, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5282, file: !1, line: 1799, column: 6)
!5307 = !DILocation(line: 1799, column: 17, scope: !5306)
!5308 = !DILocation(line: 1799, column: 34, scope: !5306)
!5309 = !DILocation(line: 1799, column: 6, scope: !5282)
!5310 = !DILocation(line: 1800, column: 21, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5306, file: !1, line: 1799, column: 54)
!5312 = !DILocation(line: 1800, column: 28, scope: !5311)
!5313 = !DILocation(line: 1800, column: 32, scope: !5311)
!5314 = !DILocation(line: 1800, column: 42, scope: !5311)
!5315 = !DILocation(line: 1800, column: 54, scope: !5311)
!5316 = !DILocation(line: 1800, column: 3, scope: !5311)
!5317 = !DILocation(line: 1801, column: 2, scope: !5311)
!5318 = !DILocation(line: 1803, column: 9, scope: !5282)
!5319 = !DILocation(line: 1803, column: 19, scope: !5282)
!5320 = !DILocation(line: 1803, column: 36, scope: !5282)
!5321 = !DILocation(line: 1803, column: 7, scope: !5282)
!5322 = !DILocation(line: 1805, column: 6, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5282, file: !1, line: 1805, column: 6)
!5324 = !DILocation(line: 1805, column: 6, scope: !5282)
!5325 = !DILocation(line: 1806, column: 10, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5323, file: !1, line: 1805, column: 12)
!5327 = !DILocation(line: 1806, column: 24, scope: !5326)
!5328 = !DILocation(line: 1806, column: 8, scope: !5326)
!5329 = !DILocation(line: 1807, column: 2, scope: !5326)
!5330 = !DILocation(line: 1809, column: 9, scope: !5282)
!5331 = !DILocation(line: 1809, column: 2, scope: !5282)
!5332 = distinct !DISubprogram(name: "curve_calc_orcodm", scope: !1, file: !1, line: 1122, type: !5333, scopeLine: 1124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!5333 = !DISubroutineType(types: !5334)
!5334 = !{null, !1333, !2871, !1722, !950, !950}
!5335 = !DILocalVariable(name: "scene", arg: 1, scope: !5332, file: !1, line: 1122, type: !1333)
!5336 = !DILocation(line: 1122, column: 38, scope: !5332)
!5337 = !DILocalVariable(name: "ob", arg: 2, scope: !5332, file: !1, line: 1122, type: !2871)
!5338 = !DILocation(line: 1122, column: 53, scope: !5332)
!5339 = !DILocalVariable(name: "dm_final", arg: 3, scope: !5332, file: !1, line: 1122, type: !1722)
!5340 = !DILocation(line: 1122, column: 70, scope: !5332)
!5341 = !DILocalVariable(name: "for_render", arg: 4, scope: !5332, file: !1, line: 1123, type: !950)
!5342 = !DILocation(line: 1123, column: 42, scope: !5332)
!5343 = !DILocalVariable(name: "use_render_resolution", arg: 5, scope: !5332, file: !1, line: 1123, type: !950)
!5344 = !DILocation(line: 1123, column: 65, scope: !5332)
!5345 = !DILocalVariable(name: "virtualModifierData", scope: !5332, file: !1, line: 1128, type: !3663)
!5346 = !DILocation(line: 1128, column: 22, scope: !5332)
!5347 = !DILocalVariable(name: "md", scope: !5332, file: !1, line: 1129, type: !3715)
!5348 = !DILocation(line: 1129, column: 16, scope: !5332)
!5349 = !DILocation(line: 1129, column: 54, scope: !5332)
!5350 = !DILocation(line: 1129, column: 21, scope: !5332)
!5351 = !DILocalVariable(name: "pretessellatePoint", scope: !5332, file: !1, line: 1130, type: !3715)
!5352 = !DILocation(line: 1130, column: 16, scope: !5332)
!5353 = !DILocalVariable(name: "cu", scope: !5332, file: !1, line: 1131, type: !3262)
!5354 = !DILocation(line: 1131, column: 9, scope: !5332)
!5355 = !DILocation(line: 1131, column: 14, scope: !5332)
!5356 = !DILocation(line: 1131, column: 18, scope: !5332)
!5357 = !DILocalVariable(name: "required_mode", scope: !5332, file: !1, line: 1132, type: !106)
!5358 = !DILocation(line: 1132, column: 6, scope: !5332)
!5359 = !DILocalVariable(name: "editmode", scope: !5332, file: !1, line: 1133, type: !950)
!5360 = !DILocation(line: 1133, column: 13, scope: !5332)
!5361 = !DILocation(line: 1133, column: 26, scope: !5332)
!5362 = !DILocation(line: 1133, column: 37, scope: !5332)
!5363 = !DILocation(line: 1133, column: 41, scope: !5332)
!5364 = !DILocation(line: 1133, column: 45, scope: !5332)
!5365 = !DILocation(line: 1133, column: 54, scope: !5332)
!5366 = !DILocation(line: 1133, column: 57, scope: !5332)
!5367 = !DILocation(line: 1133, column: 61, scope: !5332)
!5368 = !DILocation(line: 0, scope: !5332)
!5369 = !DILocation(line: 1133, column: 24, scope: !5332)
!5370 = !DILocalVariable(name: "ndm", scope: !5332, file: !1, line: 1134, type: !1722)
!5371 = !DILocation(line: 1134, column: 15, scope: !5332)
!5372 = !DILocalVariable(name: "orcodm", scope: !5332, file: !1, line: 1134, type: !1722)
!5373 = !DILocation(line: 1134, column: 21, scope: !5332)
!5374 = !DILocalVariable(name: "app_flag", scope: !5332, file: !1, line: 1135, type: !3739)
!5375 = !DILocation(line: 1135, column: 20, scope: !5332)
!5376 = !DILocation(line: 1137, column: 6, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5332, file: !1, line: 1137, column: 6)
!5378 = !DILocation(line: 1137, column: 6, scope: !5332)
!5379 = !DILocation(line: 1138, column: 12, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5377, file: !1, line: 1137, column: 29)
!5381 = !DILocation(line: 1139, column: 17, scope: !5380)
!5382 = !DILocation(line: 1140, column: 2, scope: !5380)
!5383 = !DILocation(line: 1142, column: 17, scope: !5377)
!5384 = !DILocation(line: 1144, column: 50, scope: !5332)
!5385 = !DILocation(line: 1144, column: 57, scope: !5332)
!5386 = !DILocation(line: 1144, column: 61, scope: !5332)
!5387 = !DILocation(line: 1144, column: 84, scope: !5332)
!5388 = !DILocation(line: 1144, column: 23, scope: !5332)
!5389 = !DILocation(line: 1144, column: 21, scope: !5332)
!5390 = !DILocation(line: 1146, column: 6, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5332, file: !1, line: 1146, column: 6)
!5392 = !DILocation(line: 1146, column: 6, scope: !5332)
!5393 = !DILocation(line: 1147, column: 17, scope: !5391)
!5394 = !DILocation(line: 1147, column: 3, scope: !5391)
!5395 = !DILocation(line: 1149, column: 6, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5332, file: !1, line: 1149, column: 6)
!5397 = !DILocation(line: 1149, column: 6, scope: !5332)
!5398 = !DILocation(line: 1150, column: 8, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5396, file: !1, line: 1149, column: 26)
!5400 = !DILocation(line: 1150, column: 28, scope: !5399)
!5401 = !DILocation(line: 1150, column: 6, scope: !5399)
!5402 = !DILocation(line: 1151, column: 2, scope: !5399)
!5403 = !DILocation(line: 1160, column: 26, scope: !5332)
!5404 = !DILocation(line: 1160, column: 33, scope: !5332)
!5405 = !DILocation(line: 1160, column: 11, scope: !5332)
!5406 = !DILocation(line: 1160, column: 9, scope: !5332)
!5407 = !DILocation(line: 1162, column: 2, scope: !5332)
!5408 = !DILocation(line: 1162, column: 9, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5410, file: !1, line: 1162, column: 2)
!5410 = distinct !DILexicalBlock(scope: !5332, file: !1, line: 1162, column: 2)
!5411 = !DILocation(line: 1162, column: 2, scope: !5410)
!5412 = !DILocalVariable(name: "mti", scope: !5413, file: !1, line: 1163, type: !3804)
!5413 = distinct !DILexicalBlock(scope: !5409, file: !1, line: 1162, column: 28)
!5414 = !DILocation(line: 1163, column: 21, scope: !5413)
!5415 = !DILocation(line: 1163, column: 48, scope: !5413)
!5416 = !DILocation(line: 1163, column: 52, scope: !5413)
!5417 = !DILocation(line: 1163, column: 27, scope: !5413)
!5418 = !DILocation(line: 1165, column: 15, scope: !5413)
!5419 = !DILocation(line: 1165, column: 3, scope: !5413)
!5420 = !DILocation(line: 1165, column: 7, scope: !5413)
!5421 = !DILocation(line: 1165, column: 13, scope: !5413)
!5422 = !DILocation(line: 1167, column: 27, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5413, file: !1, line: 1167, column: 7)
!5424 = !DILocation(line: 1167, column: 34, scope: !5423)
!5425 = !DILocation(line: 1167, column: 38, scope: !5423)
!5426 = !DILocation(line: 1167, column: 8, scope: !5423)
!5427 = !DILocation(line: 1167, column: 7, scope: !5413)
!5428 = !DILocation(line: 1168, column: 4, scope: !5423)
!5429 = !DILocation(line: 1169, column: 7, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5413, file: !1, line: 1169, column: 7)
!5431 = !DILocation(line: 1169, column: 12, scope: !5430)
!5432 = !DILocation(line: 1169, column: 17, scope: !5430)
!5433 = !DILocation(line: 1169, column: 7, scope: !5413)
!5434 = !DILocation(line: 1170, column: 4, scope: !5430)
!5435 = !DILocation(line: 1172, column: 31, scope: !5413)
!5436 = !DILocation(line: 1172, column: 35, scope: !5413)
!5437 = !DILocation(line: 1172, column: 39, scope: !5413)
!5438 = !DILocation(line: 1172, column: 47, scope: !5413)
!5439 = !DILocation(line: 1172, column: 9, scope: !5413)
!5440 = !DILocation(line: 1172, column: 7, scope: !5413)
!5441 = !DILocation(line: 1174, column: 7, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5413, file: !1, line: 1174, column: 7)
!5443 = !DILocation(line: 1174, column: 7, scope: !5413)
!5444 = !DILocation(line: 1176, column: 8, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5446, file: !1, line: 1176, column: 8)
!5446 = distinct !DILexicalBlock(scope: !5442, file: !1, line: 1174, column: 12)
!5447 = !DILocation(line: 1176, column: 15, scope: !5445)
!5448 = !DILocation(line: 1176, column: 18, scope: !5445)
!5449 = !DILocation(line: 1176, column: 28, scope: !5445)
!5450 = !DILocation(line: 1176, column: 25, scope: !5445)
!5451 = !DILocation(line: 1176, column: 8, scope: !5446)
!5452 = !DILocation(line: 1177, column: 5, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5445, file: !1, line: 1176, column: 33)
!5454 = !DILocation(line: 1177, column: 13, scope: !5453)
!5455 = !DILocation(line: 1177, column: 21, scope: !5453)
!5456 = !DILocation(line: 1178, column: 4, scope: !5453)
!5457 = !DILocation(line: 1179, column: 13, scope: !5446)
!5458 = !DILocation(line: 1179, column: 11, scope: !5446)
!5459 = !DILocation(line: 1180, column: 3, scope: !5446)
!5460 = !DILocation(line: 1181, column: 2, scope: !5413)
!5461 = !DILocation(line: 1162, column: 18, scope: !5409)
!5462 = !DILocation(line: 1162, column: 22, scope: !5409)
!5463 = !DILocation(line: 1162, column: 16, scope: !5409)
!5464 = !DILocation(line: 1162, column: 2, scope: !5409)
!5465 = distinct !{!5465, !5411, !5466}
!5466 = !DILocation(line: 1181, column: 2, scope: !5410)
!5467 = !DILocation(line: 1184, column: 14, scope: !5332)
!5468 = !DILocation(line: 1184, column: 18, scope: !5332)
!5469 = !DILocation(line: 1184, column: 28, scope: !5332)
!5470 = !DILocation(line: 1184, column: 2, scope: !5332)
!5471 = !DILocation(line: 1186, column: 2, scope: !5332)
!5472 = !DILocation(line: 1186, column: 10, scope: !5332)
!5473 = !DILocation(line: 1186, column: 18, scope: !5332)
!5474 = !DILocation(line: 1187, column: 1, scope: !5332)
!5475 = distinct !DISubprogram(name: "BKE_displist_minmax", scope: !1, file: !1, line: 1812, type: !5476, scopeLine: 1813, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !240)
!5476 = !DISubroutineType(types: !5477)
!5477 = !{null, !282, !209, !209}
!5478 = !DILocalVariable(name: "dispbase", arg: 1, scope: !5475, file: !1, line: 1812, type: !282)
!5479 = !DILocation(line: 1812, column: 36, scope: !5475)
!5480 = !DILocalVariable(name: "min", arg: 2, scope: !5475, file: !1, line: 1812, type: !209)
!5481 = !DILocation(line: 1812, column: 52, scope: !5475)
!5482 = !DILocalVariable(name: "max", arg: 3, scope: !5475, file: !1, line: 1812, type: !209)
!5483 = !DILocation(line: 1812, column: 66, scope: !5475)
!5484 = !DILocalVariable(name: "dl", scope: !5475, file: !1, line: 1814, type: !210)
!5485 = !DILocation(line: 1814, column: 12, scope: !5475)
!5486 = !DILocalVariable(name: "vert", scope: !5475, file: !1, line: 1815, type: !825)
!5487 = !DILocation(line: 1815, column: 15, scope: !5475)
!5488 = !DILocalVariable(name: "a", scope: !5475, file: !1, line: 1816, type: !106)
!5489 = !DILocation(line: 1816, column: 6, scope: !5475)
!5490 = !DILocalVariable(name: "tot", scope: !5475, file: !1, line: 1816, type: !106)
!5491 = !DILocation(line: 1816, column: 9, scope: !5475)
!5492 = !DILocalVariable(name: "doit", scope: !5475, file: !1, line: 1817, type: !106)
!5493 = !DILocation(line: 1817, column: 6, scope: !5475)
!5494 = !DILocation(line: 1819, column: 12, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5475, file: !1, line: 1819, column: 2)
!5496 = !DILocation(line: 1819, column: 22, scope: !5495)
!5497 = !DILocation(line: 1819, column: 10, scope: !5495)
!5498 = !DILocation(line: 1819, column: 7, scope: !5495)
!5499 = !DILocation(line: 1819, column: 29, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5495, file: !1, line: 1819, column: 2)
!5501 = !DILocation(line: 1819, column: 2, scope: !5495)
!5502 = !DILocation(line: 1820, column: 10, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5500, file: !1, line: 1819, column: 48)
!5504 = !DILocation(line: 1820, column: 14, scope: !5503)
!5505 = !DILocation(line: 1820, column: 19, scope: !5503)
!5506 = !DILocation(line: 1820, column: 9, scope: !5503)
!5507 = !DILocation(line: 1820, column: 35, scope: !5503)
!5508 = !DILocation(line: 1820, column: 39, scope: !5503)
!5509 = !DILocation(line: 1820, column: 44, scope: !5503)
!5510 = !DILocation(line: 1820, column: 48, scope: !5503)
!5511 = !DILocation(line: 1820, column: 53, scope: !5503)
!5512 = !DILocation(line: 1820, column: 57, scope: !5503)
!5513 = !DILocation(line: 1820, column: 51, scope: !5503)
!5514 = !DILocation(line: 1820, column: 7, scope: !5503)
!5515 = !DILocation(line: 1821, column: 10, scope: !5503)
!5516 = !DILocation(line: 1821, column: 14, scope: !5503)
!5517 = !DILocation(line: 1821, column: 8, scope: !5503)
!5518 = !DILocation(line: 1822, column: 10, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5503, file: !1, line: 1822, column: 3)
!5520 = !DILocation(line: 1822, column: 8, scope: !5519)
!5521 = !DILocation(line: 1822, column: 15, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5519, file: !1, line: 1822, column: 3)
!5523 = !DILocation(line: 1822, column: 19, scope: !5522)
!5524 = !DILocation(line: 1822, column: 17, scope: !5522)
!5525 = !DILocation(line: 1822, column: 3, scope: !5519)
!5526 = !DILocation(line: 1823, column: 19, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5522, file: !1, line: 1822, column: 40)
!5528 = !DILocation(line: 1823, column: 24, scope: !5527)
!5529 = !DILocation(line: 1823, column: 29, scope: !5527)
!5530 = !DILocation(line: 1823, column: 4, scope: !5527)
!5531 = !DILocation(line: 1824, column: 3, scope: !5527)
!5532 = !DILocation(line: 1822, column: 25, scope: !5522)
!5533 = !DILocation(line: 1822, column: 34, scope: !5522)
!5534 = !DILocation(line: 1822, column: 3, scope: !5522)
!5535 = distinct !{!5535, !5525, !5536}
!5536 = !DILocation(line: 1824, column: 3, scope: !5519)
!5537 = !DILocation(line: 1825, column: 12, scope: !5503)
!5538 = !DILocation(line: 1825, column: 16, scope: !5503)
!5539 = !DILocation(line: 1825, column: 8, scope: !5503)
!5540 = !DILocation(line: 1826, column: 2, scope: !5503)
!5541 = !DILocation(line: 1819, column: 38, scope: !5500)
!5542 = !DILocation(line: 1819, column: 42, scope: !5500)
!5543 = !DILocation(line: 1819, column: 36, scope: !5500)
!5544 = !DILocation(line: 1819, column: 2, scope: !5500)
!5545 = distinct !{!5545, !5501, !5546}
!5546 = !DILocation(line: 1826, column: 2, scope: !5495)
!5547 = !DILocation(line: 1828, column: 7, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5475, file: !1, line: 1828, column: 6)
!5549 = !DILocation(line: 1828, column: 6, scope: !5475)
!5550 = !DILocation(line: 1830, column: 11, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5548, file: !1, line: 1828, column: 13)
!5552 = !DILocation(line: 1830, column: 3, scope: !5551)
!5553 = !DILocation(line: 1831, column: 11, scope: !5551)
!5554 = !DILocation(line: 1831, column: 3, scope: !5551)
!5555 = !DILocation(line: 1832, column: 2, scope: !5551)
!5556 = !DILocation(line: 1833, column: 1, scope: !5475)
!5557 = distinct !DISubprogram(name: "zero_v3", scope: !822, file: !822, line: 43, type: !5558, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!5558 = !DISubroutineType(types: !5559)
!5559 = !{null, !209}
!5560 = !DILocalVariable(name: "r", arg: 1, scope: !5557, file: !822, line: 43, type: !209)
!5561 = !DILocation(line: 43, column: 28, scope: !5557)
!5562 = !DILocation(line: 45, column: 2, scope: !5557)
!5563 = !DILocation(line: 45, column: 7, scope: !5557)
!5564 = !DILocation(line: 46, column: 2, scope: !5557)
!5565 = !DILocation(line: 46, column: 7, scope: !5557)
!5566 = !DILocation(line: 47, column: 2, scope: !5557)
!5567 = !DILocation(line: 47, column: 7, scope: !5557)
!5568 = !DILocation(line: 48, column: 1, scope: !5557)
!5569 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !822, file: !822, line: 788, type: !5570, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!5570 = !DISubroutineType(types: !5571)
!5571 = !{!208, !209, !825}
!5572 = !DILocalVariable(name: "r", arg: 1, scope: !5569, file: !822, line: 788, type: !209)
!5573 = !DILocation(line: 788, column: 37, scope: !5569)
!5574 = !DILocalVariable(name: "a", arg: 2, scope: !5569, file: !822, line: 788, type: !825)
!5575 = !DILocation(line: 788, column: 55, scope: !5569)
!5576 = !DILocalVariable(name: "d", scope: !5569, file: !822, line: 790, type: !208)
!5577 = !DILocation(line: 790, column: 8, scope: !5569)
!5578 = !DILocation(line: 790, column: 21, scope: !5569)
!5579 = !DILocation(line: 790, column: 24, scope: !5569)
!5580 = !DILocation(line: 790, column: 12, scope: !5569)
!5581 = !DILocation(line: 794, column: 6, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5569, file: !822, line: 794, column: 6)
!5583 = !DILocation(line: 794, column: 8, scope: !5582)
!5584 = !DILocation(line: 794, column: 6, scope: !5569)
!5585 = !DILocation(line: 795, column: 13, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5582, file: !822, line: 794, column: 20)
!5587 = !DILocation(line: 795, column: 7, scope: !5586)
!5588 = !DILocation(line: 795, column: 5, scope: !5586)
!5589 = !DILocation(line: 796, column: 15, scope: !5586)
!5590 = !DILocation(line: 796, column: 18, scope: !5586)
!5591 = !DILocation(line: 796, column: 28, scope: !5586)
!5592 = !DILocation(line: 796, column: 26, scope: !5586)
!5593 = !DILocation(line: 796, column: 3, scope: !5586)
!5594 = !DILocation(line: 797, column: 2, scope: !5586)
!5595 = !DILocation(line: 799, column: 11, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5582, file: !822, line: 798, column: 7)
!5597 = !DILocation(line: 799, column: 3, scope: !5596)
!5598 = !DILocation(line: 800, column: 5, scope: !5596)
!5599 = !DILocation(line: 803, column: 9, scope: !5569)
!5600 = !DILocation(line: 803, column: 2, scope: !5569)
!5601 = distinct !DISubprogram(name: "dot_v3v3", scope: !822, file: !822, line: 619, type: !5602, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!5602 = !DISubroutineType(types: !5603)
!5603 = !{!208, !825, !825}
!5604 = !DILocalVariable(name: "a", arg: 1, scope: !5601, file: !822, line: 619, type: !825)
!5605 = !DILocation(line: 619, column: 36, scope: !5601)
!5606 = !DILocalVariable(name: "b", arg: 2, scope: !5601, file: !822, line: 619, type: !825)
!5607 = !DILocation(line: 619, column: 54, scope: !5601)
!5608 = !DILocation(line: 621, column: 9, scope: !5601)
!5609 = !DILocation(line: 621, column: 16, scope: !5601)
!5610 = !DILocation(line: 621, column: 14, scope: !5601)
!5611 = !DILocation(line: 621, column: 23, scope: !5601)
!5612 = !DILocation(line: 621, column: 30, scope: !5601)
!5613 = !DILocation(line: 621, column: 28, scope: !5601)
!5614 = !DILocation(line: 621, column: 21, scope: !5601)
!5615 = !DILocation(line: 621, column: 37, scope: !5601)
!5616 = !DILocation(line: 621, column: 44, scope: !5601)
!5617 = !DILocation(line: 621, column: 42, scope: !5601)
!5618 = !DILocation(line: 621, column: 35, scope: !5601)
!5619 = !DILocation(line: 621, column: 2, scope: !5601)
!5620 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !822, file: !822, line: 399, type: !5621, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!5621 = !DISubroutineType(types: !5622)
!5622 = !{null, !209, !825, !208}
!5623 = !DILocalVariable(name: "r", arg: 1, scope: !5620, file: !822, line: 399, type: !209)
!5624 = !DILocation(line: 399, column: 32, scope: !5620)
!5625 = !DILocalVariable(name: "a", arg: 2, scope: !5620, file: !822, line: 399, type: !825)
!5626 = !DILocation(line: 399, column: 50, scope: !5620)
!5627 = !DILocalVariable(name: "f", arg: 3, scope: !5620, file: !822, line: 399, type: !208)
!5628 = !DILocation(line: 399, column: 62, scope: !5620)
!5629 = !DILocation(line: 401, column: 9, scope: !5620)
!5630 = !DILocation(line: 401, column: 16, scope: !5620)
!5631 = !DILocation(line: 401, column: 14, scope: !5620)
!5632 = !DILocation(line: 401, column: 2, scope: !5620)
!5633 = !DILocation(line: 401, column: 7, scope: !5620)
!5634 = !DILocation(line: 402, column: 9, scope: !5620)
!5635 = !DILocation(line: 402, column: 16, scope: !5620)
!5636 = !DILocation(line: 402, column: 14, scope: !5620)
!5637 = !DILocation(line: 402, column: 2, scope: !5620)
!5638 = !DILocation(line: 402, column: 7, scope: !5620)
!5639 = !DILocation(line: 403, column: 9, scope: !5620)
!5640 = !DILocation(line: 403, column: 16, scope: !5620)
!5641 = !DILocation(line: 403, column: 14, scope: !5620)
!5642 = !DILocation(line: 403, column: 2, scope: !5620)
!5643 = !DILocation(line: 403, column: 7, scope: !5620)
!5644 = !DILocation(line: 404, column: 1, scope: !5620)
!5645 = distinct !DISubprogram(name: "curve_get_tessellate_point", scope: !1, file: !1, line: 744, type: !5646, scopeLine: 746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!5646 = !DISubroutineType(types: !5647)
!5647 = !{!3715, !1333, !2871, !950, !950}
!5648 = !DILocalVariable(name: "scene", arg: 1, scope: !5645, file: !1, line: 744, type: !1333)
!5649 = !DILocation(line: 744, column: 56, scope: !5645)
!5650 = !DILocalVariable(name: "ob", arg: 2, scope: !5645, file: !1, line: 744, type: !2871)
!5651 = !DILocation(line: 744, column: 71, scope: !5645)
!5652 = !DILocalVariable(name: "use_render_resolution", arg: 3, scope: !5645, file: !1, line: 745, type: !950)
!5653 = !DILocation(line: 745, column: 60, scope: !5645)
!5654 = !DILocalVariable(name: "editmode", arg: 4, scope: !5645, file: !1, line: 745, type: !950)
!5655 = !DILocation(line: 745, column: 94, scope: !5645)
!5656 = !DILocalVariable(name: "virtualModifierData", scope: !5645, file: !1, line: 747, type: !3663)
!5657 = !DILocation(line: 747, column: 22, scope: !5645)
!5658 = !DILocalVariable(name: "md", scope: !5645, file: !1, line: 748, type: !3715)
!5659 = !DILocation(line: 748, column: 16, scope: !5645)
!5660 = !DILocation(line: 748, column: 54, scope: !5645)
!5661 = !DILocation(line: 748, column: 21, scope: !5645)
!5662 = !DILocalVariable(name: "pretessellatePoint", scope: !5645, file: !1, line: 749, type: !3715)
!5663 = !DILocation(line: 749, column: 16, scope: !5645)
!5664 = !DILocalVariable(name: "required_mode", scope: !5645, file: !1, line: 750, type: !106)
!5665 = !DILocation(line: 750, column: 6, scope: !5645)
!5666 = !DILocation(line: 752, column: 6, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5645, file: !1, line: 752, column: 6)
!5668 = !DILocation(line: 752, column: 6, scope: !5645)
!5669 = !DILocation(line: 753, column: 17, scope: !5667)
!5670 = !DILocation(line: 753, column: 3, scope: !5667)
!5671 = !DILocation(line: 755, column: 17, scope: !5667)
!5672 = !DILocation(line: 757, column: 6, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5645, file: !1, line: 757, column: 6)
!5674 = !DILocation(line: 757, column: 6, scope: !5645)
!5675 = !DILocation(line: 758, column: 17, scope: !5673)
!5676 = !DILocation(line: 758, column: 3, scope: !5673)
!5677 = !DILocation(line: 760, column: 21, scope: !5645)
!5678 = !DILocation(line: 761, column: 2, scope: !5645)
!5679 = !DILocation(line: 761, column: 9, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5681, file: !1, line: 761, column: 2)
!5681 = distinct !DILexicalBlock(scope: !5645, file: !1, line: 761, column: 2)
!5682 = !DILocation(line: 761, column: 2, scope: !5681)
!5683 = !DILocalVariable(name: "mti", scope: !5684, file: !1, line: 762, type: !3804)
!5684 = distinct !DILexicalBlock(scope: !5680, file: !1, line: 761, column: 28)
!5685 = !DILocation(line: 762, column: 21, scope: !5684)
!5686 = !DILocation(line: 762, column: 48, scope: !5684)
!5687 = !DILocation(line: 762, column: 52, scope: !5684)
!5688 = !DILocation(line: 762, column: 27, scope: !5684)
!5689 = !DILocation(line: 764, column: 27, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5684, file: !1, line: 764, column: 7)
!5691 = !DILocation(line: 764, column: 34, scope: !5690)
!5692 = !DILocation(line: 764, column: 38, scope: !5690)
!5693 = !DILocation(line: 764, column: 8, scope: !5690)
!5694 = !DILocation(line: 764, column: 7, scope: !5684)
!5695 = !DILocation(line: 765, column: 4, scope: !5690)
!5696 = !DILocation(line: 766, column: 7, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5684, file: !1, line: 766, column: 7)
!5698 = !DILocation(line: 766, column: 12, scope: !5697)
!5699 = !DILocation(line: 766, column: 17, scope: !5697)
!5700 = !DILocation(line: 766, column: 7, scope: !5684)
!5701 = !DILocation(line: 767, column: 11, scope: !5697)
!5702 = !DILocation(line: 767, column: 4, scope: !5697)
!5703 = !DILocation(line: 769, column: 7, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5684, file: !1, line: 769, column: 7)
!5705 = !DILocation(line: 769, column: 7, scope: !5684)
!5706 = !DILocation(line: 770, column: 25, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5704, file: !1, line: 769, column: 93)
!5708 = !DILocation(line: 770, column: 23, scope: !5707)
!5709 = !DILocation(line: 776, column: 4, scope: !5707)
!5710 = !DILocation(line: 776, column: 8, scope: !5707)
!5711 = !DILocation(line: 776, column: 13, scope: !5707)
!5712 = !DILocation(line: 777, column: 3, scope: !5707)
!5713 = !DILocation(line: 778, column: 12, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5704, file: !1, line: 778, column: 12)
!5715 = !DILocation(line: 778, column: 16, scope: !5714)
!5716 = !DILocation(line: 778, column: 21, scope: !5714)
!5717 = !DILocation(line: 778, column: 12, scope: !5704)
!5718 = !DILocation(line: 779, column: 25, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5714, file: !1, line: 778, column: 52)
!5720 = !DILocation(line: 779, column: 23, scope: !5719)
!5721 = !DILocation(line: 780, column: 3, scope: !5719)
!5722 = !DILocation(line: 781, column: 2, scope: !5684)
!5723 = !DILocation(line: 761, column: 18, scope: !5680)
!5724 = !DILocation(line: 761, column: 22, scope: !5680)
!5725 = !DILocation(line: 761, column: 16, scope: !5680)
!5726 = !DILocation(line: 761, column: 2, scope: !5680)
!5727 = distinct !{!5727, !5682, !5728}
!5728 = !DILocation(line: 781, column: 2, scope: !5681)
!5729 = !DILocation(line: 783, column: 9, scope: !5645)
!5730 = !DILocation(line: 783, column: 2, scope: !5645)
!5731 = !DILocation(line: 784, column: 1, scope: !5645)
!5732 = distinct !DISubprogram(name: "displist_get_allverts", scope: !1, file: !1, line: 862, type: !5733, scopeLine: 863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!5733 = !DISubroutineType(types: !5734)
!5734 = !{!1949, !282, !228}
!5735 = !DILocalVariable(name: "dispbase", arg: 1, scope: !5732, file: !1, line: 862, type: !282)
!5736 = !DILocation(line: 862, column: 48, scope: !5732)
!5737 = !DILocalVariable(name: "totvert", arg: 2, scope: !5732, file: !1, line: 862, type: !228)
!5738 = !DILocation(line: 862, column: 63, scope: !5732)
!5739 = !DILocalVariable(name: "dl", scope: !5732, file: !1, line: 864, type: !210)
!5740 = !DILocation(line: 864, column: 12, scope: !5732)
!5741 = !DILocalVariable(name: "allverts", scope: !5732, file: !1, line: 865, type: !1949)
!5742 = !DILocation(line: 865, column: 10, scope: !5732)
!5743 = !DILocalVariable(name: "fp", scope: !5732, file: !1, line: 865, type: !209)
!5744 = !DILocation(line: 865, column: 25, scope: !5732)
!5745 = !DILocation(line: 867, column: 3, scope: !5732)
!5746 = !DILocation(line: 867, column: 11, scope: !5732)
!5747 = !DILocation(line: 869, column: 12, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5732, file: !1, line: 869, column: 2)
!5749 = !DILocation(line: 869, column: 22, scope: !5748)
!5750 = !DILocation(line: 869, column: 10, scope: !5748)
!5751 = !DILocation(line: 869, column: 7, scope: !5748)
!5752 = !DILocation(line: 869, column: 29, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5748, file: !1, line: 869, column: 2)
!5754 = !DILocation(line: 869, column: 2, scope: !5748)
!5755 = !DILocation(line: 870, column: 16, scope: !5753)
!5756 = !DILocation(line: 870, column: 20, scope: !5753)
!5757 = !DILocation(line: 870, column: 25, scope: !5753)
!5758 = !DILocation(line: 870, column: 15, scope: !5753)
!5759 = !DILocation(line: 870, column: 41, scope: !5753)
!5760 = !DILocation(line: 870, column: 45, scope: !5753)
!5761 = !DILocation(line: 870, column: 50, scope: !5753)
!5762 = !DILocation(line: 870, column: 54, scope: !5753)
!5763 = !DILocation(line: 870, column: 62, scope: !5753)
!5764 = !DILocation(line: 870, column: 66, scope: !5753)
!5765 = !DILocation(line: 870, column: 60, scope: !5753)
!5766 = !DILocation(line: 870, column: 4, scope: !5753)
!5767 = !DILocation(line: 870, column: 12, scope: !5753)
!5768 = !DILocation(line: 870, column: 3, scope: !5753)
!5769 = !DILocation(line: 869, column: 38, scope: !5753)
!5770 = !DILocation(line: 869, column: 42, scope: !5753)
!5771 = !DILocation(line: 869, column: 36, scope: !5753)
!5772 = !DILocation(line: 869, column: 2, scope: !5753)
!5773 = distinct !{!5773, !5754, !5774}
!5774 = !DILocation(line: 870, column: 66, scope: !5748)
!5775 = !DILocation(line: 872, column: 13, scope: !5732)
!5776 = !DILocation(line: 872, column: 27, scope: !5732)
!5777 = !DILocation(line: 872, column: 26, scope: !5732)
!5778 = !DILocation(line: 872, column: 25, scope: !5732)
!5779 = !DILocation(line: 872, column: 36, scope: !5732)
!5780 = !DILocation(line: 872, column: 52, scope: !5732)
!5781 = !DILocation(line: 872, column: 11, scope: !5732)
!5782 = !DILocation(line: 873, column: 16, scope: !5732)
!5783 = !DILocation(line: 873, column: 7, scope: !5732)
!5784 = !DILocation(line: 873, column: 5, scope: !5732)
!5785 = !DILocation(line: 874, column: 12, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5732, file: !1, line: 874, column: 2)
!5787 = !DILocation(line: 874, column: 22, scope: !5786)
!5788 = !DILocation(line: 874, column: 10, scope: !5786)
!5789 = !DILocation(line: 874, column: 7, scope: !5786)
!5790 = !DILocation(line: 874, column: 29, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5786, file: !1, line: 874, column: 2)
!5792 = !DILocation(line: 874, column: 2, scope: !5786)
!5793 = !DILocalVariable(name: "offs", scope: !5794, file: !1, line: 875, type: !106)
!5794 = distinct !DILexicalBlock(scope: !5791, file: !1, line: 874, column: 48)
!5795 = !DILocation(line: 875, column: 7, scope: !5794)
!5796 = !DILocation(line: 875, column: 20, scope: !5794)
!5797 = !DILocation(line: 875, column: 24, scope: !5794)
!5798 = !DILocation(line: 875, column: 29, scope: !5794)
!5799 = !DILocation(line: 875, column: 19, scope: !5794)
!5800 = !DILocation(line: 875, column: 45, scope: !5794)
!5801 = !DILocation(line: 875, column: 49, scope: !5794)
!5802 = !DILocation(line: 875, column: 54, scope: !5794)
!5803 = !DILocation(line: 875, column: 58, scope: !5794)
!5804 = !DILocation(line: 875, column: 66, scope: !5794)
!5805 = !DILocation(line: 875, column: 70, scope: !5794)
!5806 = !DILocation(line: 875, column: 64, scope: !5794)
!5807 = !DILocation(line: 875, column: 16, scope: !5794)
!5808 = !DILocation(line: 876, column: 10, scope: !5794)
!5809 = !DILocation(line: 876, column: 3, scope: !5794)
!5810 = !DILocation(line: 876, column: 14, scope: !5794)
!5811 = !DILocation(line: 876, column: 18, scope: !5794)
!5812 = !DILocation(line: 876, column: 41, scope: !5794)
!5813 = !DILocation(line: 876, column: 39, scope: !5794)
!5814 = !DILocation(line: 877, column: 9, scope: !5794)
!5815 = !DILocation(line: 877, column: 6, scope: !5794)
!5816 = !DILocation(line: 878, column: 2, scope: !5794)
!5817 = !DILocation(line: 874, column: 38, scope: !5791)
!5818 = !DILocation(line: 874, column: 42, scope: !5791)
!5819 = !DILocation(line: 874, column: 36, scope: !5791)
!5820 = !DILocation(line: 874, column: 2, scope: !5791)
!5821 = distinct !{!5821, !5792, !5822}
!5822 = !DILocation(line: 878, column: 2, scope: !5786)
!5823 = !DILocation(line: 880, column: 9, scope: !5732)
!5824 = !DILocation(line: 880, column: 2, scope: !5732)
!5825 = distinct !DISubprogram(name: "displist_apply_allverts", scope: !1, file: !1, line: 883, type: !5826, scopeLine: 884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!5826 = !DISubroutineType(types: !5827)
!5827 = !{null, !282, !1949}
!5828 = !DILocalVariable(name: "dispbase", arg: 1, scope: !5825, file: !1, line: 883, type: !282)
!5829 = !DILocation(line: 883, column: 47, scope: !5825)
!5830 = !DILocalVariable(name: "allverts", arg: 2, scope: !5825, file: !1, line: 883, type: !1949)
!5831 = !DILocation(line: 883, column: 65, scope: !5825)
!5832 = !DILocalVariable(name: "dl", scope: !5825, file: !1, line: 885, type: !210)
!5833 = !DILocation(line: 885, column: 12, scope: !5825)
!5834 = !DILocalVariable(name: "fp", scope: !5825, file: !1, line: 886, type: !825)
!5835 = !DILocation(line: 886, column: 15, scope: !5825)
!5836 = !DILocation(line: 888, column: 16, scope: !5825)
!5837 = !DILocation(line: 888, column: 7, scope: !5825)
!5838 = !DILocation(line: 888, column: 5, scope: !5825)
!5839 = !DILocation(line: 889, column: 12, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5825, file: !1, line: 889, column: 2)
!5841 = !DILocation(line: 889, column: 22, scope: !5840)
!5842 = !DILocation(line: 889, column: 10, scope: !5840)
!5843 = !DILocation(line: 889, column: 7, scope: !5840)
!5844 = !DILocation(line: 889, column: 29, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5840, file: !1, line: 889, column: 2)
!5846 = !DILocation(line: 889, column: 2, scope: !5840)
!5847 = !DILocalVariable(name: "offs", scope: !5848, file: !1, line: 890, type: !106)
!5848 = distinct !DILexicalBlock(scope: !5845, file: !1, line: 889, column: 48)
!5849 = !DILocation(line: 890, column: 7, scope: !5848)
!5850 = !DILocation(line: 890, column: 20, scope: !5848)
!5851 = !DILocation(line: 890, column: 24, scope: !5848)
!5852 = !DILocation(line: 890, column: 29, scope: !5848)
!5853 = !DILocation(line: 890, column: 19, scope: !5848)
!5854 = !DILocation(line: 890, column: 45, scope: !5848)
!5855 = !DILocation(line: 890, column: 49, scope: !5848)
!5856 = !DILocation(line: 890, column: 54, scope: !5848)
!5857 = !DILocation(line: 890, column: 58, scope: !5848)
!5858 = !DILocation(line: 890, column: 66, scope: !5848)
!5859 = !DILocation(line: 890, column: 70, scope: !5848)
!5860 = !DILocation(line: 890, column: 64, scope: !5848)
!5861 = !DILocation(line: 890, column: 16, scope: !5848)
!5862 = !DILocation(line: 891, column: 10, scope: !5848)
!5863 = !DILocation(line: 891, column: 14, scope: !5848)
!5864 = !DILocation(line: 891, column: 3, scope: !5848)
!5865 = !DILocation(line: 891, column: 21, scope: !5848)
!5866 = !DILocation(line: 891, column: 41, scope: !5848)
!5867 = !DILocation(line: 891, column: 39, scope: !5848)
!5868 = !DILocation(line: 892, column: 9, scope: !5848)
!5869 = !DILocation(line: 892, column: 6, scope: !5848)
!5870 = !DILocation(line: 893, column: 2, scope: !5848)
!5871 = !DILocation(line: 889, column: 38, scope: !5845)
!5872 = !DILocation(line: 889, column: 42, scope: !5845)
!5873 = !DILocation(line: 889, column: 36, scope: !5845)
!5874 = !DILocation(line: 889, column: 2, scope: !5845)
!5875 = distinct !{!5875, !5846, !5876}
!5876 = !DILocation(line: 893, column: 2, scope: !5840)
!5877 = !DILocation(line: 894, column: 1, scope: !5825)
!5878 = distinct !DISubprogram(name: "curve_to_filledpoly", scope: !1, file: !1, line: 647, type: !5879, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!5879 = !DISubroutineType(types: !5880)
!5880 = !{null, !3262, !282, !282}
!5881 = !DILocalVariable(name: "cu", arg: 1, scope: !5878, file: !1, line: 647, type: !3262)
!5882 = !DILocation(line: 647, column: 40, scope: !5878)
!5883 = !DILocalVariable(name: "UNUSED_nurb", arg: 2, scope: !5878, file: !1, line: 647, type: !282)
!5884 = !DILocation(line: 647, column: 54, scope: !5878)
!5885 = !DILocalVariable(name: "dispbase", arg: 3, scope: !5878, file: !1, line: 647, type: !282)
!5886 = !DILocation(line: 647, column: 78, scope: !5878)
!5887 = !DILocation(line: 649, column: 7, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5878, file: !1, line: 649, column: 6)
!5889 = !DILocation(line: 649, column: 6, scope: !5878)
!5890 = !DILocation(line: 650, column: 3, scope: !5888)
!5891 = !DILocation(line: 652, column: 6, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5878, file: !1, line: 652, column: 6)
!5893 = !DILocation(line: 652, column: 16, scope: !5892)
!5894 = !DILocation(line: 652, column: 22, scope: !5892)
!5895 = !DILocation(line: 652, column: 39, scope: !5892)
!5896 = !DILocation(line: 652, column: 49, scope: !5892)
!5897 = !DILocation(line: 652, column: 26, scope: !5892)
!5898 = !DILocation(line: 652, column: 57, scope: !5892)
!5899 = !DILocation(line: 652, column: 25, scope: !5892)
!5900 = !DILocation(line: 652, column: 62, scope: !5892)
!5901 = !DILocation(line: 652, column: 6, scope: !5878)
!5902 = !DILocation(line: 653, column: 24, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5892, file: !1, line: 652, column: 74)
!5904 = !DILocation(line: 653, column: 28, scope: !5903)
!5905 = !DILocation(line: 653, column: 3, scope: !5903)
!5906 = !DILocation(line: 654, column: 2, scope: !5903)
!5907 = !DILocalVariable(name: "z_up", scope: !5908, file: !1, line: 656, type: !5909)
!5908 = distinct !DILexicalBlock(scope: !5892, file: !1, line: 655, column: 7)
!5909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !826, size: 96, elements: !472)
!5910 = !DILocation(line: 656, column: 15, scope: !5908)
!5911 = !DILocation(line: 657, column: 21, scope: !5908)
!5912 = !DILocation(line: 657, column: 31, scope: !5908)
!5913 = !DILocation(line: 657, column: 41, scope: !5908)
!5914 = !DILocation(line: 657, column: 3, scope: !5908)
!5915 = !DILocation(line: 659, column: 1, scope: !5878)
!5916 = distinct !DISubprogram(name: "bevels_to_filledpoly", scope: !1, file: !1, line: 578, type: !5917, scopeLine: 579, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!5917 = !DISubroutineType(types: !5918)
!5918 = !{null, !3262, !282}
!5919 = !DILocalVariable(name: "cu", arg: 1, scope: !5916, file: !1, line: 578, type: !3262)
!5920 = !DILocation(line: 578, column: 41, scope: !5916)
!5921 = !DILocalVariable(name: "dispbase", arg: 2, scope: !5916, file: !1, line: 578, type: !282)
!5922 = !DILocation(line: 578, column: 55, scope: !5916)
!5923 = !DILocalVariable(name: "z_up", scope: !5916, file: !1, line: 580, type: !5909)
!5924 = !DILocation(line: 580, column: 14, scope: !5916)
!5925 = !DILocalVariable(name: "front", scope: !5916, file: !1, line: 581, type: !283)
!5926 = !DILocation(line: 581, column: 11, scope: !5916)
!5927 = !DILocalVariable(name: "back", scope: !5916, file: !1, line: 581, type: !283)
!5928 = !DILocation(line: 581, column: 18, scope: !5916)
!5929 = !DILocalVariable(name: "dl", scope: !5916, file: !1, line: 582, type: !210)
!5930 = !DILocation(line: 582, column: 12, scope: !5916)
!5931 = !DILocalVariable(name: "dlnew", scope: !5916, file: !1, line: 582, type: !210)
!5932 = !DILocation(line: 582, column: 17, scope: !5916)
!5933 = !DILocalVariable(name: "fp", scope: !5916, file: !1, line: 583, type: !209)
!5934 = !DILocation(line: 583, column: 9, scope: !5916)
!5935 = !DILocalVariable(name: "fp1", scope: !5916, file: !1, line: 583, type: !209)
!5936 = !DILocation(line: 583, column: 14, scope: !5916)
!5937 = !DILocalVariable(name: "a", scope: !5916, file: !1, line: 584, type: !106)
!5938 = !DILocation(line: 584, column: 6, scope: !5916)
!5939 = !DILocalVariable(name: "dpoly", scope: !5916, file: !1, line: 584, type: !106)
!5940 = !DILocation(line: 584, column: 9, scope: !5916)
!5941 = !DILocation(line: 586, column: 2, scope: !5916)
!5942 = !DILocation(line: 587, column: 2, scope: !5916)
!5943 = !DILocation(line: 589, column: 7, scope: !5916)
!5944 = !DILocation(line: 589, column: 17, scope: !5916)
!5945 = !DILocation(line: 589, column: 5, scope: !5916)
!5946 = !DILocation(line: 590, column: 2, scope: !5916)
!5947 = !DILocation(line: 590, column: 9, scope: !5916)
!5948 = !DILocation(line: 591, column: 7, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5950, file: !1, line: 591, column: 7)
!5950 = distinct !DILexicalBlock(scope: !5916, file: !1, line: 590, column: 13)
!5951 = !DILocation(line: 591, column: 11, scope: !5949)
!5952 = !DILocation(line: 591, column: 16, scope: !5949)
!5953 = !DILocation(line: 591, column: 7, scope: !5950)
!5954 = !DILocation(line: 592, column: 9, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5956, file: !1, line: 592, column: 8)
!5956 = distinct !DILexicalBlock(scope: !5949, file: !1, line: 591, column: 28)
!5957 = !DILocation(line: 592, column: 13, scope: !5955)
!5958 = !DILocation(line: 592, column: 18, scope: !5955)
!5959 = !DILocation(line: 592, column: 31, scope: !5955)
!5960 = !DILocation(line: 592, column: 35, scope: !5955)
!5961 = !DILocation(line: 592, column: 39, scope: !5955)
!5962 = !DILocation(line: 592, column: 44, scope: !5955)
!5963 = !DILocation(line: 592, column: 57, scope: !5955)
!5964 = !DILocation(line: 592, column: 8, scope: !5956)
!5965 = !DILocation(line: 593, column: 10, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5967, file: !1, line: 593, column: 9)
!5967 = distinct !DILexicalBlock(scope: !5955, file: !1, line: 592, column: 63)
!5968 = !DILocation(line: 593, column: 14, scope: !5966)
!5969 = !DILocation(line: 593, column: 19, scope: !5966)
!5970 = !DILocation(line: 593, column: 30, scope: !5966)
!5971 = !DILocation(line: 593, column: 34, scope: !5966)
!5972 = !DILocation(line: 593, column: 38, scope: !5966)
!5973 = !DILocation(line: 593, column: 43, scope: !5966)
!5974 = !DILocation(line: 593, column: 9, scope: !5967)
!5975 = !DILocation(line: 594, column: 14, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5966, file: !1, line: 593, column: 61)
!5977 = !DILocation(line: 594, column: 12, scope: !5976)
!5978 = !DILocation(line: 595, column: 26, scope: !5976)
!5979 = !DILocation(line: 595, column: 6, scope: !5976)
!5980 = !DILocation(line: 596, column: 27, scope: !5976)
!5981 = !DILocation(line: 596, column: 59, scope: !5976)
!5982 = !DILocation(line: 596, column: 63, scope: !5976)
!5983 = !DILocation(line: 596, column: 57, scope: !5976)
!5984 = !DILocation(line: 596, column: 25, scope: !5976)
!5985 = !DILocation(line: 596, column: 6, scope: !5976)
!5986 = !DILocation(line: 596, column: 13, scope: !5976)
!5987 = !DILocation(line: 596, column: 19, scope: !5976)
!5988 = !DILocation(line: 597, column: 18, scope: !5976)
!5989 = !DILocation(line: 597, column: 22, scope: !5976)
!5990 = !DILocation(line: 597, column: 6, scope: !5976)
!5991 = !DILocation(line: 597, column: 13, scope: !5976)
!5992 = !DILocation(line: 597, column: 16, scope: !5976)
!5993 = !DILocation(line: 598, column: 6, scope: !5976)
!5994 = !DILocation(line: 598, column: 13, scope: !5976)
!5995 = !DILocation(line: 598, column: 19, scope: !5976)
!5996 = !DILocation(line: 599, column: 6, scope: !5976)
!5997 = !DILocation(line: 599, column: 13, scope: !5976)
!5998 = !DILocation(line: 599, column: 18, scope: !5976)
!5999 = !DILocation(line: 600, column: 19, scope: !5976)
!6000 = !DILocation(line: 600, column: 23, scope: !5976)
!6001 = !DILocation(line: 600, column: 6, scope: !5976)
!6002 = !DILocation(line: 600, column: 13, scope: !5976)
!6003 = !DILocation(line: 600, column: 17, scope: !5976)
!6004 = !DILocation(line: 601, column: 23, scope: !5976)
!6005 = !DILocation(line: 601, column: 27, scope: !5976)
!6006 = !DILocation(line: 601, column: 6, scope: !5976)
!6007 = !DILocation(line: 601, column: 13, scope: !5976)
!6008 = !DILocation(line: 601, column: 21, scope: !5976)
!6009 = !DILocation(line: 603, column: 11, scope: !5976)
!6010 = !DILocation(line: 603, column: 15, scope: !5976)
!6011 = !DILocation(line: 603, column: 9, scope: !5976)
!6012 = !DILocation(line: 604, column: 18, scope: !5976)
!6013 = !DILocation(line: 604, column: 22, scope: !5976)
!6014 = !DILocation(line: 604, column: 16, scope: !5976)
!6015 = !DILocation(line: 604, column: 12, scope: !5976)
!6016 = !DILocation(line: 606, column: 10, scope: !5976)
!6017 = !DILocation(line: 606, column: 14, scope: !5976)
!6018 = !DILocation(line: 606, column: 8, scope: !5976)
!6019 = !DILocation(line: 607, column: 6, scope: !5976)
!6020 = !DILocation(line: 607, column: 14, scope: !5976)
!6021 = !DILocation(line: 608, column: 18, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !5976, file: !1, line: 607, column: 18)
!6023 = !DILocation(line: 608, column: 23, scope: !6022)
!6024 = !DILocation(line: 608, column: 7, scope: !6022)
!6025 = !DILocation(line: 609, column: 11, scope: !6022)
!6026 = !DILocation(line: 610, column: 13, scope: !6022)
!6027 = !DILocation(line: 610, column: 10, scope: !6022)
!6028 = distinct !{!6028, !6019, !6029}
!6029 = !DILocation(line: 611, column: 6, scope: !5976)
!6030 = !DILocation(line: 612, column: 5, scope: !5976)
!6031 = !DILocation(line: 613, column: 10, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !5967, file: !1, line: 613, column: 9)
!6033 = !DILocation(line: 613, column: 14, scope: !6032)
!6034 = !DILocation(line: 613, column: 19, scope: !6032)
!6035 = !DILocation(line: 613, column: 31, scope: !6032)
!6036 = !DILocation(line: 613, column: 35, scope: !6032)
!6037 = !DILocation(line: 613, column: 39, scope: !6032)
!6038 = !DILocation(line: 613, column: 44, scope: !6032)
!6039 = !DILocation(line: 613, column: 9, scope: !5967)
!6040 = !DILocation(line: 614, column: 14, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6032, file: !1, line: 613, column: 63)
!6042 = !DILocation(line: 614, column: 12, scope: !6041)
!6043 = !DILocation(line: 615, column: 25, scope: !6041)
!6044 = !DILocation(line: 615, column: 6, scope: !6041)
!6045 = !DILocation(line: 616, column: 27, scope: !6041)
!6046 = !DILocation(line: 616, column: 59, scope: !6041)
!6047 = !DILocation(line: 616, column: 63, scope: !6041)
!6048 = !DILocation(line: 616, column: 57, scope: !6041)
!6049 = !DILocation(line: 616, column: 25, scope: !6041)
!6050 = !DILocation(line: 616, column: 6, scope: !6041)
!6051 = !DILocation(line: 616, column: 13, scope: !6041)
!6052 = !DILocation(line: 616, column: 19, scope: !6041)
!6053 = !DILocation(line: 617, column: 18, scope: !6041)
!6054 = !DILocation(line: 617, column: 22, scope: !6041)
!6055 = !DILocation(line: 617, column: 6, scope: !6041)
!6056 = !DILocation(line: 617, column: 13, scope: !6041)
!6057 = !DILocation(line: 617, column: 16, scope: !6041)
!6058 = !DILocation(line: 618, column: 6, scope: !6041)
!6059 = !DILocation(line: 618, column: 13, scope: !6041)
!6060 = !DILocation(line: 618, column: 19, scope: !6041)
!6061 = !DILocation(line: 619, column: 6, scope: !6041)
!6062 = !DILocation(line: 619, column: 13, scope: !6041)
!6063 = !DILocation(line: 619, column: 18, scope: !6041)
!6064 = !DILocation(line: 620, column: 19, scope: !6041)
!6065 = !DILocation(line: 620, column: 23, scope: !6041)
!6066 = !DILocation(line: 620, column: 6, scope: !6041)
!6067 = !DILocation(line: 620, column: 13, scope: !6041)
!6068 = !DILocation(line: 620, column: 17, scope: !6041)
!6069 = !DILocation(line: 621, column: 23, scope: !6041)
!6070 = !DILocation(line: 621, column: 27, scope: !6041)
!6071 = !DILocation(line: 621, column: 6, scope: !6041)
!6072 = !DILocation(line: 621, column: 13, scope: !6041)
!6073 = !DILocation(line: 621, column: 21, scope: !6041)
!6074 = !DILocation(line: 623, column: 11, scope: !6041)
!6075 = !DILocation(line: 623, column: 15, scope: !6041)
!6076 = !DILocation(line: 623, column: 28, scope: !6041)
!6077 = !DILocation(line: 623, column: 32, scope: !6041)
!6078 = !DILocation(line: 623, column: 35, scope: !6041)
!6079 = !DILocation(line: 623, column: 25, scope: !6041)
!6080 = !DILocation(line: 623, column: 21, scope: !6041)
!6081 = !DILocation(line: 623, column: 9, scope: !6041)
!6082 = !DILocation(line: 624, column: 18, scope: !6041)
!6083 = !DILocation(line: 624, column: 22, scope: !6041)
!6084 = !DILocation(line: 624, column: 16, scope: !6041)
!6085 = !DILocation(line: 624, column: 12, scope: !6041)
!6086 = !DILocation(line: 626, column: 10, scope: !6041)
!6087 = !DILocation(line: 626, column: 14, scope: !6041)
!6088 = !DILocation(line: 626, column: 8, scope: !6041)
!6089 = !DILocation(line: 627, column: 6, scope: !6041)
!6090 = !DILocation(line: 627, column: 14, scope: !6041)
!6091 = !DILocation(line: 628, column: 18, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6041, file: !1, line: 627, column: 18)
!6093 = !DILocation(line: 628, column: 23, scope: !6092)
!6094 = !DILocation(line: 628, column: 7, scope: !6092)
!6095 = !DILocation(line: 629, column: 11, scope: !6092)
!6096 = !DILocation(line: 630, column: 13, scope: !6092)
!6097 = !DILocation(line: 630, column: 10, scope: !6092)
!6098 = distinct !{!6098, !6089, !6099}
!6099 = !DILocation(line: 631, column: 6, scope: !6041)
!6100 = !DILocation(line: 632, column: 5, scope: !6041)
!6101 = !DILocation(line: 633, column: 4, scope: !5967)
!6102 = !DILocation(line: 634, column: 3, scope: !5956)
!6103 = !DILocation(line: 635, column: 8, scope: !5950)
!6104 = !DILocation(line: 635, column: 12, scope: !5950)
!6105 = !DILocation(line: 635, column: 6, scope: !5950)
!6106 = distinct !{!6106, !5946, !6107}
!6107 = !DILocation(line: 636, column: 2, scope: !5916)
!6108 = !DILocation(line: 638, column: 28, scope: !5916)
!6109 = !DILocation(line: 638, column: 38, scope: !5916)
!6110 = !DILocation(line: 638, column: 2, scope: !5916)
!6111 = !DILocation(line: 639, column: 27, scope: !5916)
!6112 = !DILocation(line: 639, column: 37, scope: !5916)
!6113 = !DILocation(line: 639, column: 2, scope: !5916)
!6114 = !DILocation(line: 641, column: 2, scope: !5916)
!6115 = !DILocation(line: 642, column: 2, scope: !5916)
!6116 = !DILocation(line: 644, column: 20, scope: !5916)
!6117 = !DILocation(line: 644, column: 30, scope: !5916)
!6118 = !DILocation(line: 644, column: 40, scope: !5916)
!6119 = !DILocation(line: 644, column: 2, scope: !5916)
!6120 = !DILocation(line: 645, column: 1, scope: !5916)
!6121 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !1303, file: !1303, line: 89, type: !6122, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!6122 = !DISubroutineType(types: !6123)
!6123 = !{null, !5259}
!6124 = !DILocalVariable(name: "lb", arg: 1, scope: !6121, file: !1303, line: 89, type: !5259)
!6125 = !DILocation(line: 89, column: 53, scope: !6121)
!6126 = !DILocation(line: 89, column: 71, scope: !6121)
!6127 = !DILocation(line: 89, column: 75, scope: !6121)
!6128 = !DILocation(line: 89, column: 80, scope: !6121)
!6129 = !DILocation(line: 89, column: 59, scope: !6121)
!6130 = !DILocation(line: 89, column: 63, scope: !6121)
!6131 = !DILocation(line: 89, column: 69, scope: !6121)
!6132 = !DILocation(line: 89, column: 93, scope: !6121)
!6133 = distinct !DISubprogram(name: "curve_to_displist", scope: !1, file: !1, line: 298, type: !6134, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!6134 = !DISubroutineType(types: !6135)
!6135 = !{null, !3262, !282, !282, !950, !950}
!6136 = !DILocalVariable(name: "cu", arg: 1, scope: !6133, file: !1, line: 298, type: !3262)
!6137 = !DILocation(line: 298, column: 38, scope: !6133)
!6138 = !DILocalVariable(name: "nubase", arg: 2, scope: !6133, file: !1, line: 298, type: !282)
!6139 = !DILocation(line: 298, column: 52, scope: !6133)
!6140 = !DILocalVariable(name: "dispbase", arg: 3, scope: !6133, file: !1, line: 298, type: !282)
!6141 = !DILocation(line: 298, column: 70, scope: !6133)
!6142 = !DILocalVariable(name: "for_render", arg: 4, scope: !6133, file: !1, line: 299, type: !950)
!6143 = !DILocation(line: 299, column: 42, scope: !6133)
!6144 = !DILocalVariable(name: "use_render_resolution", arg: 5, scope: !6133, file: !1, line: 299, type: !950)
!6145 = !DILocation(line: 299, column: 65, scope: !6133)
!6146 = !DILocalVariable(name: "nu", scope: !6133, file: !1, line: 301, type: !3199)
!6147 = !DILocation(line: 301, column: 8, scope: !6133)
!6148 = !DILocalVariable(name: "dl", scope: !6133, file: !1, line: 302, type: !210)
!6149 = !DILocation(line: 302, column: 12, scope: !6133)
!6150 = !DILocalVariable(name: "bezt", scope: !6133, file: !1, line: 303, type: !3234)
!6151 = !DILocation(line: 303, column: 13, scope: !6133)
!6152 = !DILocalVariable(name: "prevbezt", scope: !6133, file: !1, line: 303, type: !3234)
!6153 = !DILocation(line: 303, column: 20, scope: !6133)
!6154 = !DILocalVariable(name: "bp", scope: !6133, file: !1, line: 304, type: !3222)
!6155 = !DILocation(line: 304, column: 10, scope: !6133)
!6156 = !DILocalVariable(name: "data", scope: !6133, file: !1, line: 305, type: !209)
!6157 = !DILocation(line: 305, column: 9, scope: !6133)
!6158 = !DILocalVariable(name: "a", scope: !6133, file: !1, line: 306, type: !106)
!6159 = !DILocation(line: 306, column: 6, scope: !6133)
!6160 = !DILocalVariable(name: "len", scope: !6133, file: !1, line: 306, type: !106)
!6161 = !DILocation(line: 306, column: 9, scope: !6133)
!6162 = !DILocalVariable(name: "resolu", scope: !6133, file: !1, line: 306, type: !106)
!6163 = !DILocation(line: 306, column: 14, scope: !6133)
!6164 = !DILocalVariable(name: "editmode", scope: !6133, file: !1, line: 307, type: !950)
!6165 = !DILocation(line: 307, column: 13, scope: !6133)
!6166 = !DILocation(line: 307, column: 26, scope: !6133)
!6167 = !DILocation(line: 307, column: 37, scope: !6133)
!6168 = !DILocation(line: 307, column: 41, scope: !6133)
!6169 = !DILocation(line: 307, column: 45, scope: !6133)
!6170 = !DILocation(line: 307, column: 54, scope: !6133)
!6171 = !DILocation(line: 307, column: 57, scope: !6133)
!6172 = !DILocation(line: 307, column: 61, scope: !6133)
!6173 = !DILocation(line: 0, scope: !6133)
!6174 = !DILocation(line: 307, column: 24, scope: !6133)
!6175 = !DILocation(line: 309, column: 7, scope: !6133)
!6176 = !DILocation(line: 309, column: 15, scope: !6133)
!6177 = !DILocation(line: 309, column: 5, scope: !6133)
!6178 = !DILocation(line: 310, column: 2, scope: !6133)
!6179 = !DILocation(line: 310, column: 9, scope: !6133)
!6180 = !DILocation(line: 311, column: 7, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6182, file: !1, line: 311, column: 7)
!6182 = distinct !DILexicalBlock(scope: !6133, file: !1, line: 310, column: 13)
!6183 = !DILocation(line: 311, column: 11, scope: !6181)
!6184 = !DILocation(line: 311, column: 16, scope: !6181)
!6185 = !DILocation(line: 311, column: 21, scope: !6181)
!6186 = !DILocation(line: 311, column: 24, scope: !6181)
!6187 = !DILocation(line: 311, column: 33, scope: !6181)
!6188 = !DILocation(line: 311, column: 7, scope: !6182)
!6189 = !DILocation(line: 312, column: 8, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6191, file: !1, line: 312, column: 8)
!6191 = distinct !DILexicalBlock(scope: !6181, file: !1, line: 311, column: 43)
!6192 = !DILocation(line: 312, column: 30, scope: !6190)
!6193 = !DILocation(line: 312, column: 33, scope: !6190)
!6194 = !DILocation(line: 312, column: 37, scope: !6190)
!6195 = !DILocation(line: 312, column: 48, scope: !6190)
!6196 = !DILocation(line: 312, column: 8, scope: !6191)
!6197 = !DILocation(line: 313, column: 14, scope: !6190)
!6198 = !DILocation(line: 313, column: 18, scope: !6190)
!6199 = !DILocation(line: 313, column: 12, scope: !6190)
!6200 = !DILocation(line: 313, column: 5, scope: !6190)
!6201 = !DILocation(line: 315, column: 14, scope: !6190)
!6202 = !DILocation(line: 315, column: 18, scope: !6190)
!6203 = !DILocation(line: 315, column: 12, scope: !6190)
!6204 = !DILocation(line: 317, column: 32, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6191, file: !1, line: 317, column: 8)
!6206 = !DILocation(line: 317, column: 9, scope: !6205)
!6207 = !DILocation(line: 317, column: 8, scope: !6191)
!6208 = !DILocation(line: 319, column: 4, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6205, file: !1, line: 317, column: 37)
!6210 = !DILocation(line: 320, column: 13, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6205, file: !1, line: 320, column: 13)
!6212 = !DILocation(line: 320, column: 17, scope: !6211)
!6213 = !DILocation(line: 320, column: 22, scope: !6211)
!6214 = !DILocation(line: 320, column: 13, scope: !6205)
!6215 = !DILocation(line: 322, column: 9, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6211, file: !1, line: 320, column: 36)
!6217 = !DILocation(line: 323, column: 9, scope: !6216)
!6218 = !DILocation(line: 323, column: 13, scope: !6216)
!6219 = !DILocation(line: 323, column: 19, scope: !6216)
!6220 = !DILocation(line: 323, column: 7, scope: !6216)
!6221 = !DILocation(line: 324, column: 9, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6216, file: !1, line: 324, column: 9)
!6223 = !DILocation(line: 324, column: 13, scope: !6222)
!6224 = !DILocation(line: 324, column: 19, scope: !6222)
!6225 = !DILocation(line: 324, column: 9, scope: !6216)
!6226 = !DILocation(line: 324, column: 38, scope: !6222)
!6227 = !DILocation(line: 324, column: 37, scope: !6222)
!6228 = !DILocation(line: 326, column: 16, scope: !6216)
!6229 = !DILocation(line: 326, column: 20, scope: !6216)
!6230 = !DILocation(line: 326, column: 14, scope: !6216)
!6231 = !DILocation(line: 327, column: 12, scope: !6216)
!6232 = !DILocation(line: 327, column: 21, scope: !6216)
!6233 = !DILocation(line: 327, column: 10, scope: !6216)
!6234 = !DILocation(line: 328, column: 5, scope: !6216)
!6235 = !DILocation(line: 328, column: 13, scope: !6216)
!6236 = !DILocation(line: 329, column: 10, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6238, file: !1, line: 329, column: 10)
!6238 = distinct !DILexicalBlock(scope: !6216, file: !1, line: 328, column: 17)
!6239 = !DILocation(line: 329, column: 12, scope: !6237)
!6240 = !DILocation(line: 329, column: 17, scope: !6237)
!6241 = !DILocation(line: 329, column: 21, scope: !6237)
!6242 = !DILocation(line: 329, column: 25, scope: !6237)
!6243 = !DILocation(line: 329, column: 31, scope: !6237)
!6244 = !DILocation(line: 329, column: 10, scope: !6238)
!6245 = !DILocation(line: 330, column: 14, scope: !6237)
!6246 = !DILocation(line: 330, column: 18, scope: !6237)
!6247 = !DILocation(line: 330, column: 12, scope: !6237)
!6248 = !DILocation(line: 330, column: 7, scope: !6237)
!6249 = !DILocation(line: 332, column: 10, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6238, file: !1, line: 332, column: 10)
!6251 = !DILocation(line: 332, column: 20, scope: !6250)
!6252 = !DILocation(line: 332, column: 23, scope: !6250)
!6253 = !DILocation(line: 332, column: 34, scope: !6250)
!6254 = !DILocation(line: 332, column: 37, scope: !6250)
!6255 = !DILocation(line: 332, column: 43, scope: !6250)
!6256 = !DILocation(line: 332, column: 46, scope: !6250)
!6257 = !DILocation(line: 332, column: 10, scope: !6238)
!6258 = !DILocation(line: 333, column: 10, scope: !6250)
!6259 = !DILocation(line: 333, column: 7, scope: !6250)
!6260 = !DILocation(line: 335, column: 14, scope: !6250)
!6261 = !DILocation(line: 335, column: 11, scope: !6250)
!6262 = !DILocation(line: 337, column: 10, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6238, file: !1, line: 337, column: 10)
!6264 = !DILocation(line: 337, column: 12, scope: !6263)
!6265 = !DILocation(line: 337, column: 17, scope: !6263)
!6266 = !DILocation(line: 337, column: 21, scope: !6263)
!6267 = !DILocation(line: 337, column: 25, scope: !6263)
!6268 = !DILocation(line: 337, column: 31, scope: !6263)
!6269 = !DILocation(line: 337, column: 49, scope: !6263)
!6270 = !DILocation(line: 337, column: 10, scope: !6238)
!6271 = !DILocation(line: 338, column: 10, scope: !6263)
!6272 = !DILocation(line: 338, column: 7, scope: !6263)
!6273 = !DILocation(line: 340, column: 17, scope: !6238)
!6274 = !DILocation(line: 340, column: 15, scope: !6238)
!6275 = !DILocation(line: 341, column: 10, scope: !6238)
!6276 = distinct !{!6276, !6234, !6277}
!6277 = !DILocation(line: 342, column: 5, scope: !6216)
!6278 = !DILocation(line: 344, column: 10, scope: !6216)
!6279 = !DILocation(line: 344, column: 8, scope: !6216)
!6280 = !DILocation(line: 346, column: 17, scope: !6216)
!6281 = !DILocation(line: 346, column: 30, scope: !6216)
!6282 = !DILocation(line: 346, column: 34, scope: !6216)
!6283 = !DILocation(line: 346, column: 29, scope: !6216)
!6284 = !DILocation(line: 346, column: 39, scope: !6216)
!6285 = !DILocation(line: 346, column: 5, scope: !6216)
!6286 = !DILocation(line: 346, column: 9, scope: !6216)
!6287 = !DILocation(line: 346, column: 15, scope: !6216)
!6288 = !DILocation(line: 347, column: 17, scope: !6216)
!6289 = !DILocation(line: 347, column: 27, scope: !6216)
!6290 = !DILocation(line: 347, column: 5, scope: !6216)
!6291 = !DILocation(line: 348, column: 5, scope: !6216)
!6292 = !DILocation(line: 348, column: 9, scope: !6216)
!6293 = !DILocation(line: 348, column: 15, scope: !6216)
!6294 = !DILocation(line: 349, column: 14, scope: !6216)
!6295 = !DILocation(line: 349, column: 5, scope: !6216)
!6296 = !DILocation(line: 349, column: 9, scope: !6216)
!6297 = !DILocation(line: 349, column: 12, scope: !6216)
!6298 = !DILocation(line: 350, column: 15, scope: !6216)
!6299 = !DILocation(line: 350, column: 19, scope: !6216)
!6300 = !DILocation(line: 350, column: 5, scope: !6216)
!6301 = !DILocation(line: 350, column: 9, scope: !6216)
!6302 = !DILocation(line: 350, column: 13, scope: !6216)
!6303 = !DILocation(line: 351, column: 19, scope: !6216)
!6304 = !DILocation(line: 351, column: 23, scope: !6216)
!6305 = !DILocation(line: 351, column: 5, scope: !6216)
!6306 = !DILocation(line: 351, column: 9, scope: !6216)
!6307 = !DILocation(line: 351, column: 17, scope: !6216)
!6308 = !DILocation(line: 353, column: 12, scope: !6216)
!6309 = !DILocation(line: 353, column: 16, scope: !6216)
!6310 = !DILocation(line: 353, column: 10, scope: !6216)
!6311 = !DILocation(line: 355, column: 9, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6216, file: !1, line: 355, column: 9)
!6313 = !DILocation(line: 355, column: 13, scope: !6312)
!6314 = !DILocation(line: 355, column: 19, scope: !6312)
!6315 = !DILocation(line: 355, column: 9, scope: !6216)
!6316 = !DILocation(line: 356, column: 6, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6312, file: !1, line: 355, column: 37)
!6318 = !DILocation(line: 356, column: 10, scope: !6317)
!6319 = !DILocation(line: 356, column: 15, scope: !6317)
!6320 = !DILocation(line: 357, column: 10, scope: !6317)
!6321 = !DILocation(line: 357, column: 14, scope: !6317)
!6322 = !DILocation(line: 357, column: 8, scope: !6317)
!6323 = !DILocation(line: 358, column: 5, scope: !6317)
!6324 = !DILocation(line: 360, column: 6, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6312, file: !1, line: 359, column: 10)
!6326 = !DILocation(line: 360, column: 10, scope: !6325)
!6327 = !DILocation(line: 360, column: 15, scope: !6325)
!6328 = !DILocation(line: 361, column: 10, scope: !6325)
!6329 = !DILocation(line: 361, column: 14, scope: !6325)
!6330 = !DILocation(line: 361, column: 20, scope: !6325)
!6331 = !DILocation(line: 361, column: 8, scope: !6325)
!6332 = !DILocation(line: 364, column: 16, scope: !6216)
!6333 = !DILocation(line: 364, column: 20, scope: !6216)
!6334 = !DILocation(line: 364, column: 14, scope: !6216)
!6335 = !DILocation(line: 365, column: 12, scope: !6216)
!6336 = !DILocation(line: 365, column: 21, scope: !6216)
!6337 = !DILocation(line: 365, column: 10, scope: !6216)
!6338 = !DILocation(line: 367, column: 5, scope: !6216)
!6339 = !DILocation(line: 367, column: 13, scope: !6216)
!6340 = !DILocation(line: 368, column: 10, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6342, file: !1, line: 368, column: 10)
!6342 = distinct !DILexicalBlock(scope: !6216, file: !1, line: 367, column: 17)
!6343 = !DILocation(line: 368, column: 12, scope: !6341)
!6344 = !DILocation(line: 368, column: 17, scope: !6341)
!6345 = !DILocation(line: 368, column: 20, scope: !6341)
!6346 = !DILocation(line: 368, column: 24, scope: !6341)
!6347 = !DILocation(line: 368, column: 29, scope: !6341)
!6348 = !DILocation(line: 368, column: 10, scope: !6342)
!6349 = !DILocation(line: 369, column: 14, scope: !6341)
!6350 = !DILocation(line: 369, column: 18, scope: !6341)
!6351 = !DILocation(line: 369, column: 12, scope: !6341)
!6352 = !DILocation(line: 369, column: 7, scope: !6341)
!6353 = !DILocation(line: 371, column: 10, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6342, file: !1, line: 371, column: 10)
!6355 = !DILocation(line: 371, column: 20, scope: !6354)
!6356 = !DILocation(line: 371, column: 23, scope: !6354)
!6357 = !DILocation(line: 371, column: 34, scope: !6354)
!6358 = !DILocation(line: 371, column: 37, scope: !6354)
!6359 = !DILocation(line: 371, column: 43, scope: !6354)
!6360 = !DILocation(line: 371, column: 46, scope: !6354)
!6361 = !DILocation(line: 371, column: 10, scope: !6342)
!6362 = !DILocation(line: 372, column: 18, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6354, file: !1, line: 371, column: 58)
!6364 = !DILocation(line: 372, column: 24, scope: !6363)
!6365 = !DILocation(line: 372, column: 34, scope: !6363)
!6366 = !DILocation(line: 372, column: 7, scope: !6363)
!6367 = !DILocation(line: 373, column: 12, scope: !6363)
!6368 = !DILocation(line: 374, column: 6, scope: !6363)
!6369 = !DILocalVariable(name: "j", scope: !6370, file: !1, line: 376, type: !106)
!6370 = distinct !DILexicalBlock(scope: !6354, file: !1, line: 375, column: 11)
!6371 = !DILocation(line: 376, column: 11, scope: !6370)
!6372 = !DILocation(line: 377, column: 14, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6370, file: !1, line: 377, column: 7)
!6374 = !DILocation(line: 377, column: 12, scope: !6373)
!6375 = !DILocation(line: 377, column: 19, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6373, file: !1, line: 377, column: 7)
!6377 = !DILocation(line: 377, column: 21, scope: !6376)
!6378 = !DILocation(line: 377, column: 7, scope: !6373)
!6379 = !DILocation(line: 378, column: 38, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6376, file: !1, line: 377, column: 31)
!6381 = !DILocation(line: 378, column: 48, scope: !6380)
!6382 = !DILocation(line: 378, column: 55, scope: !6380)
!6383 = !DILocation(line: 379, column: 38, scope: !6380)
!6384 = !DILocation(line: 379, column: 48, scope: !6380)
!6385 = !DILocation(line: 379, column: 55, scope: !6380)
!6386 = !DILocation(line: 380, column: 38, scope: !6380)
!6387 = !DILocation(line: 380, column: 44, scope: !6380)
!6388 = !DILocation(line: 380, column: 51, scope: !6380)
!6389 = !DILocation(line: 381, column: 38, scope: !6380)
!6390 = !DILocation(line: 381, column: 44, scope: !6380)
!6391 = !DILocation(line: 381, column: 51, scope: !6380)
!6392 = !DILocation(line: 382, column: 38, scope: !6380)
!6393 = !DILocation(line: 382, column: 45, scope: !6380)
!6394 = !DILocation(line: 382, column: 43, scope: !6380)
!6395 = !DILocation(line: 382, column: 48, scope: !6380)
!6396 = !DILocation(line: 378, column: 8, scope: !6380)
!6397 = !DILocation(line: 383, column: 7, scope: !6380)
!6398 = !DILocation(line: 377, column: 27, scope: !6376)
!6399 = !DILocation(line: 377, column: 7, scope: !6376)
!6400 = distinct !{!6400, !6378, !6401}
!6401 = !DILocation(line: 383, column: 7, scope: !6373)
!6402 = !DILocation(line: 385, column: 19, scope: !6370)
!6403 = !DILocation(line: 385, column: 17, scope: !6370)
!6404 = !DILocation(line: 385, column: 12, scope: !6370)
!6405 = !DILocation(line: 388, column: 10, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6342, file: !1, line: 388, column: 10)
!6407 = !DILocation(line: 388, column: 12, scope: !6406)
!6408 = !DILocation(line: 388, column: 17, scope: !6406)
!6409 = !DILocation(line: 388, column: 20, scope: !6406)
!6410 = !DILocation(line: 388, column: 24, scope: !6406)
!6411 = !DILocation(line: 388, column: 29, scope: !6406)
!6412 = !DILocation(line: 388, column: 10, scope: !6342)
!6413 = !DILocation(line: 389, column: 18, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6406, file: !1, line: 388, column: 41)
!6415 = !DILocation(line: 389, column: 24, scope: !6414)
!6416 = !DILocation(line: 389, column: 30, scope: !6414)
!6417 = !DILocation(line: 389, column: 7, scope: !6414)
!6418 = !DILocation(line: 390, column: 6, scope: !6414)
!6419 = !DILocation(line: 392, column: 17, scope: !6342)
!6420 = !DILocation(line: 392, column: 15, scope: !6342)
!6421 = !DILocation(line: 393, column: 10, scope: !6342)
!6422 = distinct !{!6422, !6338, !6423}
!6423 = !DILocation(line: 394, column: 5, scope: !6216)
!6424 = !DILocation(line: 395, column: 4, scope: !6216)
!6425 = !DILocation(line: 396, column: 13, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6211, file: !1, line: 396, column: 13)
!6427 = !DILocation(line: 396, column: 17, scope: !6426)
!6428 = !DILocation(line: 396, column: 22, scope: !6426)
!6429 = !DILocation(line: 396, column: 13, scope: !6211)
!6430 = !DILocation(line: 397, column: 12, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6426, file: !1, line: 396, column: 35)
!6432 = !DILocation(line: 397, column: 21, scope: !6431)
!6433 = !DILocation(line: 397, column: 19, scope: !6431)
!6434 = !DILocation(line: 397, column: 9, scope: !6431)
!6435 = !DILocation(line: 399, column: 10, scope: !6431)
!6436 = !DILocation(line: 399, column: 8, scope: !6431)
!6437 = !DILocation(line: 400, column: 17, scope: !6431)
!6438 = !DILocation(line: 400, column: 29, scope: !6431)
!6439 = !DILocation(line: 400, column: 33, scope: !6431)
!6440 = !DILocation(line: 400, column: 5, scope: !6431)
!6441 = !DILocation(line: 400, column: 9, scope: !6431)
!6442 = !DILocation(line: 400, column: 15, scope: !6431)
!6443 = !DILocation(line: 401, column: 17, scope: !6431)
!6444 = !DILocation(line: 401, column: 27, scope: !6431)
!6445 = !DILocation(line: 401, column: 5, scope: !6431)
!6446 = !DILocation(line: 402, column: 5, scope: !6431)
!6447 = !DILocation(line: 402, column: 9, scope: !6431)
!6448 = !DILocation(line: 402, column: 15, scope: !6431)
!6449 = !DILocation(line: 404, column: 14, scope: !6431)
!6450 = !DILocation(line: 404, column: 5, scope: !6431)
!6451 = !DILocation(line: 404, column: 9, scope: !6431)
!6452 = !DILocation(line: 404, column: 12, scope: !6431)
!6453 = !DILocation(line: 405, column: 15, scope: !6431)
!6454 = !DILocation(line: 405, column: 19, scope: !6431)
!6455 = !DILocation(line: 405, column: 5, scope: !6431)
!6456 = !DILocation(line: 405, column: 9, scope: !6431)
!6457 = !DILocation(line: 405, column: 13, scope: !6431)
!6458 = !DILocation(line: 406, column: 19, scope: !6431)
!6459 = !DILocation(line: 406, column: 23, scope: !6431)
!6460 = !DILocation(line: 406, column: 5, scope: !6431)
!6461 = !DILocation(line: 406, column: 9, scope: !6431)
!6462 = !DILocation(line: 406, column: 17, scope: !6431)
!6463 = !DILocation(line: 408, column: 12, scope: !6431)
!6464 = !DILocation(line: 408, column: 16, scope: !6431)
!6465 = !DILocation(line: 408, column: 10, scope: !6431)
!6466 = !DILocation(line: 409, column: 9, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6431, file: !1, line: 409, column: 9)
!6468 = !DILocation(line: 409, column: 13, scope: !6467)
!6469 = !DILocation(line: 409, column: 19, scope: !6467)
!6470 = !DILocation(line: 409, column: 9, scope: !6431)
!6471 = !DILocation(line: 410, column: 6, scope: !6467)
!6472 = !DILocation(line: 410, column: 10, scope: !6467)
!6473 = !DILocation(line: 410, column: 15, scope: !6467)
!6474 = !DILocation(line: 411, column: 10, scope: !6467)
!6475 = !DILocation(line: 411, column: 14, scope: !6467)
!6476 = !DILocation(line: 411, column: 19, scope: !6467)
!6477 = !DILocation(line: 412, column: 24, scope: !6431)
!6478 = !DILocation(line: 412, column: 28, scope: !6431)
!6479 = !DILocation(line: 412, column: 52, scope: !6431)
!6480 = !DILocation(line: 412, column: 5, scope: !6431)
!6481 = !DILocation(line: 413, column: 4, scope: !6431)
!6482 = !DILocation(line: 414, column: 13, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6426, file: !1, line: 414, column: 13)
!6484 = !DILocation(line: 414, column: 17, scope: !6483)
!6485 = !DILocation(line: 414, column: 22, scope: !6483)
!6486 = !DILocation(line: 414, column: 13, scope: !6426)
!6487 = !DILocation(line: 415, column: 11, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6483, file: !1, line: 414, column: 34)
!6489 = !DILocation(line: 415, column: 15, scope: !6488)
!6490 = !DILocation(line: 415, column: 9, scope: !6488)
!6491 = !DILocation(line: 416, column: 10, scope: !6488)
!6492 = !DILocation(line: 416, column: 8, scope: !6488)
!6493 = !DILocation(line: 417, column: 17, scope: !6488)
!6494 = !DILocation(line: 417, column: 29, scope: !6488)
!6495 = !DILocation(line: 417, column: 33, scope: !6488)
!6496 = !DILocation(line: 417, column: 5, scope: !6488)
!6497 = !DILocation(line: 417, column: 9, scope: !6488)
!6498 = !DILocation(line: 417, column: 15, scope: !6488)
!6499 = !DILocation(line: 418, column: 17, scope: !6488)
!6500 = !DILocation(line: 418, column: 27, scope: !6488)
!6501 = !DILocation(line: 418, column: 5, scope: !6488)
!6502 = !DILocation(line: 419, column: 5, scope: !6488)
!6503 = !DILocation(line: 419, column: 9, scope: !6488)
!6504 = !DILocation(line: 419, column: 15, scope: !6488)
!6505 = !DILocation(line: 420, column: 14, scope: !6488)
!6506 = !DILocation(line: 420, column: 5, scope: !6488)
!6507 = !DILocation(line: 420, column: 9, scope: !6488)
!6508 = !DILocation(line: 420, column: 12, scope: !6488)
!6509 = !DILocation(line: 421, column: 15, scope: !6488)
!6510 = !DILocation(line: 421, column: 19, scope: !6488)
!6511 = !DILocation(line: 421, column: 5, scope: !6488)
!6512 = !DILocation(line: 421, column: 9, scope: !6488)
!6513 = !DILocation(line: 421, column: 13, scope: !6488)
!6514 = !DILocation(line: 422, column: 19, scope: !6488)
!6515 = !DILocation(line: 422, column: 23, scope: !6488)
!6516 = !DILocation(line: 422, column: 5, scope: !6488)
!6517 = !DILocation(line: 422, column: 9, scope: !6488)
!6518 = !DILocation(line: 422, column: 17, scope: !6488)
!6519 = !DILocation(line: 424, column: 12, scope: !6488)
!6520 = !DILocation(line: 424, column: 16, scope: !6488)
!6521 = !DILocation(line: 424, column: 10, scope: !6488)
!6522 = !DILocation(line: 425, column: 9, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6488, file: !1, line: 425, column: 9)
!6524 = !DILocation(line: 425, column: 13, scope: !6523)
!6525 = !DILocation(line: 425, column: 19, scope: !6523)
!6526 = !DILocation(line: 425, column: 9, scope: !6488)
!6527 = !DILocation(line: 425, column: 37, scope: !6523)
!6528 = !DILocation(line: 425, column: 41, scope: !6523)
!6529 = !DILocation(line: 425, column: 46, scope: !6523)
!6530 = !DILocation(line: 426, column: 10, scope: !6523)
!6531 = !DILocation(line: 426, column: 14, scope: !6523)
!6532 = !DILocation(line: 426, column: 19, scope: !6523)
!6533 = !DILocation(line: 428, column: 9, scope: !6488)
!6534 = !DILocation(line: 428, column: 7, scope: !6488)
!6535 = !DILocation(line: 429, column: 10, scope: !6488)
!6536 = !DILocation(line: 429, column: 14, scope: !6488)
!6537 = !DILocation(line: 429, column: 8, scope: !6488)
!6538 = !DILocation(line: 430, column: 5, scope: !6488)
!6539 = !DILocation(line: 430, column: 13, scope: !6488)
!6540 = !DILocation(line: 431, column: 17, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6488, file: !1, line: 430, column: 17)
!6542 = !DILocation(line: 431, column: 23, scope: !6541)
!6543 = !DILocation(line: 431, column: 27, scope: !6541)
!6544 = !DILocation(line: 431, column: 6, scope: !6541)
!6545 = !DILocation(line: 432, column: 8, scope: !6541)
!6546 = !DILocation(line: 433, column: 11, scope: !6541)
!6547 = distinct !{!6547, !6538, !6548}
!6548 = !DILocation(line: 434, column: 5, scope: !6488)
!6549 = !DILocation(line: 435, column: 4, scope: !6488)
!6550 = !DILocation(line: 436, column: 3, scope: !6191)
!6551 = !DILocation(line: 437, column: 8, scope: !6182)
!6552 = !DILocation(line: 437, column: 12, scope: !6182)
!6553 = !DILocation(line: 437, column: 6, scope: !6182)
!6554 = distinct !{!6554, !6178, !6555}
!6555 = !DILocation(line: 438, column: 2, scope: !6133)
!6556 = !DILocation(line: 439, column: 1, scope: !6133)
!6557 = distinct !DISubprogram(name: "calc_bevfac_mapping_default", scope: !1, file: !1, line: 1408, type: !6558, scopeLine: 1411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!6558 = !DISubroutineType(types: !6559)
!6559 = !{null, !4591, !228, !209, !228, !209}
!6560 = !DILocalVariable(name: "bl", arg: 1, scope: !6557, file: !1, line: 1408, type: !4591)
!6561 = !DILocation(line: 1408, column: 50, scope: !6557)
!6562 = !DILocalVariable(name: "r_start", arg: 2, scope: !6557, file: !1, line: 1409, type: !228)
!6563 = !DILocation(line: 1409, column: 46, scope: !6557)
!6564 = !DILocalVariable(name: "r_firstblend", arg: 3, scope: !6557, file: !1, line: 1409, type: !209)
!6565 = !DILocation(line: 1409, column: 62, scope: !6557)
!6566 = !DILocalVariable(name: "r_steps", arg: 4, scope: !6557, file: !1, line: 1410, type: !228)
!6567 = !DILocation(line: 1410, column: 46, scope: !6557)
!6568 = !DILocalVariable(name: "r_lastblend", arg: 5, scope: !6557, file: !1, line: 1410, type: !209)
!6569 = !DILocation(line: 1410, column: 62, scope: !6557)
!6570 = !DILocation(line: 1412, column: 3, scope: !6557)
!6571 = !DILocation(line: 1412, column: 11, scope: !6557)
!6572 = !DILocation(line: 1413, column: 13, scope: !6557)
!6573 = !DILocation(line: 1413, column: 17, scope: !6557)
!6574 = !DILocation(line: 1413, column: 3, scope: !6557)
!6575 = !DILocation(line: 1413, column: 11, scope: !6557)
!6576 = !DILocation(line: 1414, column: 3, scope: !6557)
!6577 = !DILocation(line: 1414, column: 16, scope: !6557)
!6578 = !DILocation(line: 1415, column: 3, scope: !6557)
!6579 = !DILocation(line: 1415, column: 15, scope: !6557)
!6580 = !DILocation(line: 1416, column: 1, scope: !6557)
!6581 = distinct !DISubprogram(name: "calc_bevfac_mapping", scope: !1, file: !1, line: 1418, type: !6582, scopeLine: 1420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!6582 = !DISubroutineType(types: !6583)
!6583 = !{null, !3262, !4591, !3199, !228, !209, !228, !209}
!6584 = !DILocalVariable(name: "cu", arg: 1, scope: !6581, file: !1, line: 1418, type: !3262)
!6585 = !DILocation(line: 1418, column: 40, scope: !6581)
!6586 = !DILocalVariable(name: "bl", arg: 2, scope: !6581, file: !1, line: 1418, type: !4591)
!6587 = !DILocation(line: 1418, column: 53, scope: !6581)
!6588 = !DILocalVariable(name: "nu", arg: 3, scope: !6581, file: !1, line: 1418, type: !3199)
!6589 = !DILocation(line: 1418, column: 63, scope: !6581)
!6590 = !DILocalVariable(name: "r_start", arg: 4, scope: !6581, file: !1, line: 1419, type: !228)
!6591 = !DILocation(line: 1419, column: 14, scope: !6581)
!6592 = !DILocalVariable(name: "r_firstblend", arg: 5, scope: !6581, file: !1, line: 1419, type: !209)
!6593 = !DILocation(line: 1419, column: 30, scope: !6581)
!6594 = !DILocalVariable(name: "r_steps", arg: 6, scope: !6581, file: !1, line: 1419, type: !228)
!6595 = !DILocation(line: 1419, column: 49, scope: !6581)
!6596 = !DILocalVariable(name: "r_lastblend", arg: 7, scope: !6581, file: !1, line: 1419, type: !209)
!6597 = !DILocation(line: 1419, column: 65, scope: !6581)
!6598 = !DILocalVariable(name: "tmpf", scope: !6581, file: !1, line: 1421, type: !208)
!6599 = !DILocation(line: 1421, column: 8, scope: !6581)
!6600 = !DILocalVariable(name: "total_length", scope: !6581, file: !1, line: 1421, type: !208)
!6601 = !DILocation(line: 1421, column: 14, scope: !6581)
!6602 = !DILocalVariable(name: "end", scope: !6581, file: !1, line: 1422, type: !106)
!6603 = !DILocation(line: 1422, column: 6, scope: !6581)
!6604 = !DILocalVariable(name: "i", scope: !6581, file: !1, line: 1422, type: !106)
!6605 = !DILocation(line: 1422, column: 15, scope: !6581)
!6606 = !DILocation(line: 1424, column: 30, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6581, file: !1, line: 1424, column: 6)
!6608 = !DILocation(line: 1424, column: 7, scope: !6607)
!6609 = !DILocation(line: 1424, column: 34, scope: !6607)
!6610 = !DILocation(line: 1424, column: 44, scope: !6607)
!6611 = !DILocation(line: 1426, column: 14, scope: !6607)
!6612 = !DILocation(line: 1426, column: 18, scope: !6607)
!6613 = !DILocation(line: 1426, column: 27, scope: !6607)
!6614 = !DILocation(line: 1426, column: 31, scope: !6607)
!6615 = !DILocation(line: 1426, column: 7, scope: !6607)
!6616 = !DILocation(line: 1426, column: 40, scope: !6607)
!6617 = !DILocation(line: 1426, column: 48, scope: !6607)
!6618 = !DILocation(line: 1427, column: 14, scope: !6607)
!6619 = !DILocation(line: 1427, column: 18, scope: !6607)
!6620 = !DILocation(line: 1427, column: 27, scope: !6607)
!6621 = !DILocation(line: 1427, column: 31, scope: !6607)
!6622 = !DILocation(line: 1427, column: 7, scope: !6607)
!6623 = !DILocation(line: 1427, column: 40, scope: !6607)
!6624 = !DILocation(line: 1424, column: 6, scope: !6581)
!6625 = !DILocation(line: 1429, column: 31, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6607, file: !1, line: 1428, column: 2)
!6627 = !DILocation(line: 1429, column: 35, scope: !6626)
!6628 = !DILocation(line: 1429, column: 44, scope: !6626)
!6629 = !DILocation(line: 1429, column: 58, scope: !6626)
!6630 = !DILocation(line: 1429, column: 67, scope: !6626)
!6631 = !DILocation(line: 1429, column: 3, scope: !6626)
!6632 = !DILocation(line: 1430, column: 3, scope: !6626)
!6633 = !DILocation(line: 1433, column: 6, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6581, file: !1, line: 1433, column: 6)
!6635 = !DILocation(line: 1433, column: 6, scope: !6581)
!6636 = !DILocation(line: 1437, column: 10, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6638, file: !1, line: 1437, column: 3)
!6638 = distinct !DILexicalBlock(scope: !6634, file: !1, line: 1436, column: 2)
!6639 = !DILocation(line: 1437, column: 8, scope: !6637)
!6640 = !DILocation(line: 1437, column: 15, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6637, file: !1, line: 1437, column: 3)
!6642 = !DILocation(line: 1437, column: 19, scope: !6641)
!6643 = !DILocation(line: 1437, column: 17, scope: !6641)
!6644 = !DILocation(line: 1437, column: 3, scope: !6637)
!6645 = !DILocation(line: 1438, column: 20, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6641, file: !1, line: 1437, column: 39)
!6647 = !DILocation(line: 1438, column: 24, scope: !6646)
!6648 = !DILocation(line: 1438, column: 31, scope: !6646)
!6649 = !DILocation(line: 1438, column: 17, scope: !6646)
!6650 = !DILocation(line: 1439, column: 3, scope: !6646)
!6651 = !DILocation(line: 1437, column: 35, scope: !6641)
!6652 = !DILocation(line: 1437, column: 3, scope: !6641)
!6653 = distinct !{!6653, !6644, !6654}
!6654 = !DILocation(line: 1439, column: 3, scope: !6637)
!6655 = !DILocation(line: 1440, column: 2, scope: !6638)
!6656 = !DILocation(line: 1442, column: 10, scope: !6581)
!6657 = !DILocation(line: 1442, column: 14, scope: !6581)
!6658 = !DILocation(line: 1442, column: 2, scope: !6581)
!6659 = !DILocalVariable(name: "start_fl", scope: !6660, file: !1, line: 1445, type: !826)
!6660 = distinct !DILexicalBlock(scope: !6661, file: !1, line: 1444, column: 3)
!6661 = distinct !DILexicalBlock(scope: !6581, file: !1, line: 1442, column: 31)
!6662 = !DILocation(line: 1445, column: 16, scope: !6660)
!6663 = !DILocation(line: 1445, column: 27, scope: !6660)
!6664 = !DILocation(line: 1445, column: 31, scope: !6660)
!6665 = !DILocation(line: 1445, column: 42, scope: !6660)
!6666 = !DILocation(line: 1445, column: 46, scope: !6660)
!6667 = !DILocation(line: 1445, column: 49, scope: !6660)
!6668 = !DILocation(line: 1445, column: 41, scope: !6660)
!6669 = !DILocation(line: 1445, column: 39, scope: !6660)
!6670 = !DILocation(line: 1446, column: 20, scope: !6660)
!6671 = !DILocation(line: 1446, column: 15, scope: !6660)
!6672 = !DILocation(line: 1446, column: 5, scope: !6660)
!6673 = !DILocation(line: 1446, column: 13, scope: !6660)
!6674 = !DILocation(line: 1447, column: 28, scope: !6660)
!6675 = !DILocation(line: 1447, column: 41, scope: !6660)
!6676 = !DILocation(line: 1447, column: 40, scope: !6660)
!6677 = !DILocation(line: 1447, column: 39, scope: !6660)
!6678 = !DILocation(line: 1447, column: 37, scope: !6660)
!6679 = !DILocation(line: 1447, column: 25, scope: !6660)
!6680 = !DILocation(line: 1447, column: 5, scope: !6660)
!6681 = !DILocation(line: 1447, column: 18, scope: !6660)
!6682 = !DILocation(line: 1448, column: 4, scope: !6660)
!6683 = !DILocation(line: 1452, column: 32, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6661, file: !1, line: 1451, column: 3)
!6685 = !DILocation(line: 1452, column: 36, scope: !6684)
!6686 = !DILocation(line: 1452, column: 40, scope: !6684)
!6687 = !DILocation(line: 1452, column: 49, scope: !6684)
!6688 = !DILocation(line: 1452, column: 63, scope: !6684)
!6689 = !DILocation(line: 1452, column: 72, scope: !6684)
!6690 = !DILocation(line: 1452, column: 4, scope: !6684)
!6691 = !DILocation(line: 1453, column: 28, scope: !6684)
!6692 = !DILocation(line: 1453, column: 27, scope: !6684)
!6693 = !DILocation(line: 1453, column: 25, scope: !6684)
!6694 = !DILocation(line: 1453, column: 5, scope: !6684)
!6695 = !DILocation(line: 1453, column: 18, scope: !6684)
!6696 = !DILocation(line: 1454, column: 4, scope: !6684)
!6697 = !DILocation(line: 1458, column: 31, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6661, file: !1, line: 1457, column: 3)
!6699 = !DILocation(line: 1458, column: 35, scope: !6698)
!6700 = !DILocation(line: 1458, column: 39, scope: !6698)
!6701 = !DILocation(line: 1458, column: 48, scope: !6698)
!6702 = !DILocation(line: 1458, column: 62, scope: !6698)
!6703 = !DILocation(line: 1458, column: 71, scope: !6698)
!6704 = !DILocation(line: 1458, column: 4, scope: !6698)
!6705 = !DILocation(line: 1459, column: 28, scope: !6698)
!6706 = !DILocation(line: 1459, column: 27, scope: !6698)
!6707 = !DILocation(line: 1459, column: 25, scope: !6698)
!6708 = !DILocation(line: 1459, column: 5, scope: !6698)
!6709 = !DILocation(line: 1459, column: 18, scope: !6698)
!6710 = !DILocation(line: 1460, column: 4, scope: !6698)
!6711 = !DILocation(line: 1464, column: 10, scope: !6581)
!6712 = !DILocation(line: 1464, column: 14, scope: !6581)
!6713 = !DILocation(line: 1464, column: 2, scope: !6581)
!6714 = !DILocalVariable(name: "end_fl", scope: !6715, file: !1, line: 1467, type: !826)
!6715 = distinct !DILexicalBlock(scope: !6716, file: !1, line: 1466, column: 3)
!6716 = distinct !DILexicalBlock(scope: !6581, file: !1, line: 1464, column: 31)
!6717 = !DILocation(line: 1467, column: 16, scope: !6715)
!6718 = !DILocation(line: 1467, column: 25, scope: !6715)
!6719 = !DILocation(line: 1467, column: 29, scope: !6715)
!6720 = !DILocation(line: 1467, column: 40, scope: !6715)
!6721 = !DILocation(line: 1467, column: 44, scope: !6715)
!6722 = !DILocation(line: 1467, column: 47, scope: !6715)
!6723 = !DILocation(line: 1467, column: 39, scope: !6715)
!6724 = !DILocation(line: 1467, column: 37, scope: !6715)
!6725 = !DILocation(line: 1468, column: 15, scope: !6715)
!6726 = !DILocation(line: 1468, column: 10, scope: !6715)
!6727 = !DILocation(line: 1468, column: 8, scope: !6715)
!6728 = !DILocation(line: 1470, column: 19, scope: !6715)
!6729 = !DILocation(line: 1470, column: 17, scope: !6715)
!6730 = !DILocation(line: 1470, column: 26, scope: !6715)
!6731 = !DILocation(line: 1470, column: 25, scope: !6715)
!6732 = !DILocation(line: 1470, column: 23, scope: !6715)
!6733 = !DILocation(line: 1470, column: 5, scope: !6715)
!6734 = !DILocation(line: 1470, column: 13, scope: !6715)
!6735 = !DILocation(line: 1471, column: 19, scope: !6715)
!6736 = !DILocation(line: 1471, column: 28, scope: !6715)
!6737 = !DILocation(line: 1471, column: 26, scope: !6715)
!6738 = !DILocation(line: 1471, column: 5, scope: !6715)
!6739 = !DILocation(line: 1471, column: 17, scope: !6715)
!6740 = !DILocation(line: 1472, column: 4, scope: !6715)
!6741 = !DILocation(line: 1476, column: 32, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6716, file: !1, line: 1475, column: 3)
!6743 = !DILocation(line: 1476, column: 36, scope: !6742)
!6744 = !DILocation(line: 1476, column: 40, scope: !6742)
!6745 = !DILocation(line: 1476, column: 49, scope: !6742)
!6746 = !DILocation(line: 1476, column: 69, scope: !6742)
!6747 = !DILocation(line: 1476, column: 4, scope: !6742)
!6748 = !DILocation(line: 1477, column: 15, scope: !6742)
!6749 = !DILocation(line: 1477, column: 22, scope: !6742)
!6750 = !DILocation(line: 1477, column: 21, scope: !6742)
!6751 = !DILocation(line: 1477, column: 19, scope: !6742)
!6752 = !DILocation(line: 1477, column: 30, scope: !6742)
!6753 = !DILocation(line: 1477, column: 5, scope: !6742)
!6754 = !DILocation(line: 1477, column: 13, scope: !6742)
!6755 = !DILocation(line: 1478, column: 4, scope: !6742)
!6756 = !DILocation(line: 1482, column: 31, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6716, file: !1, line: 1481, column: 3)
!6758 = !DILocation(line: 1482, column: 35, scope: !6757)
!6759 = !DILocation(line: 1482, column: 39, scope: !6757)
!6760 = !DILocation(line: 1482, column: 48, scope: !6757)
!6761 = !DILocation(line: 1482, column: 68, scope: !6757)
!6762 = !DILocation(line: 1482, column: 4, scope: !6757)
!6763 = !DILocation(line: 1483, column: 15, scope: !6757)
!6764 = !DILocation(line: 1483, column: 22, scope: !6757)
!6765 = !DILocation(line: 1483, column: 21, scope: !6757)
!6766 = !DILocation(line: 1483, column: 19, scope: !6757)
!6767 = !DILocation(line: 1483, column: 30, scope: !6757)
!6768 = !DILocation(line: 1483, column: 5, scope: !6757)
!6769 = !DILocation(line: 1483, column: 13, scope: !6757)
!6770 = !DILocation(line: 1484, column: 4, scope: !6757)
!6771 = !DILocation(line: 1488, column: 6, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6581, file: !1, line: 1488, column: 6)
!6773 = !DILocation(line: 1488, column: 13, scope: !6772)
!6774 = !DILocation(line: 1488, column: 12, scope: !6772)
!6775 = !DILocation(line: 1488, column: 10, scope: !6772)
!6776 = !DILocation(line: 1488, column: 21, scope: !6772)
!6777 = !DILocation(line: 1488, column: 25, scope: !6772)
!6778 = !DILocation(line: 1488, column: 33, scope: !6772)
!6779 = !DILocation(line: 1488, column: 32, scope: !6772)
!6780 = !DILocation(line: 1488, column: 29, scope: !6772)
!6781 = !DILocation(line: 1488, column: 41, scope: !6772)
!6782 = !DILocation(line: 1488, column: 45, scope: !6772)
!6783 = !DILocation(line: 1488, column: 44, scope: !6772)
!6784 = !DILocation(line: 1488, column: 67, scope: !6772)
!6785 = !DILocation(line: 1488, column: 66, scope: !6772)
!6786 = !DILocation(line: 1488, column: 64, scope: !6772)
!6787 = !DILocation(line: 1488, column: 57, scope: !6772)
!6788 = !DILocation(line: 1488, column: 6, scope: !6581)
!6789 = !DILocalVariable(name: "sw_ap", scope: !6790, file: !1, line: 1489, type: !106)
!6790 = distinct !DILexicalBlock(scope: !6791, file: !1, line: 1489, column: 3)
!6791 = distinct !DILexicalBlock(scope: !6772, file: !1, line: 1488, column: 83)
!6792 = !DILocation(line: 1489, column: 3, scope: !6790)
!6793 = !DILocation(line: 1490, column: 11, scope: !6791)
!6794 = !DILocation(line: 1490, column: 10, scope: !6791)
!6795 = !DILocation(line: 1490, column: 8, scope: !6791)
!6796 = !DILocation(line: 1491, column: 26, scope: !6791)
!6797 = !DILocation(line: 1491, column: 25, scope: !6791)
!6798 = !DILocation(line: 1491, column: 23, scope: !6791)
!6799 = !DILocation(line: 1491, column: 4, scope: !6791)
!6800 = !DILocation(line: 1491, column: 16, scope: !6791)
!6801 = !DILocation(line: 1492, column: 26, scope: !6791)
!6802 = !DILocation(line: 1492, column: 24, scope: !6791)
!6803 = !DILocation(line: 1492, column: 4, scope: !6791)
!6804 = !DILocation(line: 1492, column: 17, scope: !6791)
!6805 = !DILocation(line: 1493, column: 14, scope: !6791)
!6806 = !DILocation(line: 1493, column: 21, scope: !6791)
!6807 = !DILocation(line: 1493, column: 20, scope: !6791)
!6808 = !DILocation(line: 1493, column: 18, scope: !6791)
!6809 = !DILocation(line: 1493, column: 29, scope: !6791)
!6810 = !DILocation(line: 1493, column: 4, scope: !6791)
!6811 = !DILocation(line: 1493, column: 12, scope: !6791)
!6812 = !DILocation(line: 1494, column: 2, scope: !6791)
!6813 = !DILocation(line: 1496, column: 7, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6581, file: !1, line: 1496, column: 6)
!6815 = !DILocation(line: 1496, column: 6, scope: !6814)
!6816 = !DILocation(line: 1496, column: 18, scope: !6814)
!6817 = !DILocation(line: 1496, column: 17, scope: !6814)
!6818 = !DILocation(line: 1496, column: 15, scope: !6814)
!6819 = !DILocation(line: 1496, column: 28, scope: !6814)
!6820 = !DILocation(line: 1496, column: 32, scope: !6814)
!6821 = !DILocation(line: 1496, column: 26, scope: !6814)
!6822 = !DILocation(line: 1496, column: 6, scope: !6581)
!6823 = !DILocation(line: 1497, column: 14, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6814, file: !1, line: 1496, column: 36)
!6825 = !DILocation(line: 1497, column: 18, scope: !6824)
!6826 = !DILocation(line: 1497, column: 24, scope: !6824)
!6827 = !DILocation(line: 1497, column: 23, scope: !6824)
!6828 = !DILocation(line: 1497, column: 21, scope: !6824)
!6829 = !DILocation(line: 1497, column: 4, scope: !6824)
!6830 = !DILocation(line: 1497, column: 12, scope: !6824)
!6831 = !DILocation(line: 1498, column: 4, scope: !6824)
!6832 = !DILocation(line: 1498, column: 16, scope: !6824)
!6833 = !DILocation(line: 1499, column: 2, scope: !6824)
!6834 = !DILocation(line: 1500, column: 1, scope: !6581)
!6835 = distinct !DISubprogram(name: "rotateBevelPiece", scope: !1, file: !1, line: 1282, type: !6836, scopeLine: 1283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!6836 = !DISubroutineType(types: !6837)
!6837 = !{null, !3262, !4658, !4658, !210, !208, !208, !208, !6838}
!6838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 64)
!6839 = !DILocalVariable(name: "cu", arg: 1, scope: !6835, file: !1, line: 1282, type: !3262)
!6840 = !DILocation(line: 1282, column: 37, scope: !6835)
!6841 = !DILocalVariable(name: "bevp", arg: 2, scope: !6835, file: !1, line: 1282, type: !4658)
!6842 = !DILocation(line: 1282, column: 51, scope: !6835)
!6843 = !DILocalVariable(name: "nbevp", arg: 3, scope: !6835, file: !1, line: 1282, type: !4658)
!6844 = !DILocation(line: 1282, column: 67, scope: !6835)
!6845 = !DILocalVariable(name: "dlb", arg: 4, scope: !6835, file: !1, line: 1282, type: !210)
!6846 = !DILocation(line: 1282, column: 84, scope: !6835)
!6847 = !DILocalVariable(name: "bev_blend", arg: 5, scope: !6835, file: !1, line: 1282, type: !208)
!6848 = !DILocation(line: 1282, column: 95, scope: !6835)
!6849 = !DILocalVariable(name: "widfac", arg: 6, scope: !6835, file: !1, line: 1282, type: !208)
!6850 = !DILocation(line: 1282, column: 112, scope: !6835)
!6851 = !DILocalVariable(name: "fac", arg: 7, scope: !6835, file: !1, line: 1282, type: !208)
!6852 = !DILocation(line: 1282, column: 126, scope: !6835)
!6853 = !DILocalVariable(name: "r_data", arg: 8, scope: !6835, file: !1, line: 1282, type: !6838)
!6854 = !DILocation(line: 1282, column: 139, scope: !6835)
!6855 = !DILocalVariable(name: "fp", scope: !6835, file: !1, line: 1284, type: !209)
!6856 = !DILocation(line: 1284, column: 9, scope: !6835)
!6857 = !DILocalVariable(name: "data", scope: !6835, file: !1, line: 1284, type: !209)
!6858 = !DILocation(line: 1284, column: 14, scope: !6835)
!6859 = !DILocation(line: 1284, column: 22, scope: !6835)
!6860 = !DILocation(line: 1284, column: 21, scope: !6835)
!6861 = !DILocalVariable(name: "b", scope: !6835, file: !1, line: 1285, type: !106)
!6862 = !DILocation(line: 1285, column: 6, scope: !6835)
!6863 = !DILocation(line: 1287, column: 7, scope: !6835)
!6864 = !DILocation(line: 1287, column: 12, scope: !6835)
!6865 = !DILocation(line: 1287, column: 5, scope: !6835)
!6866 = !DILocation(line: 1288, column: 9, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6835, file: !1, line: 1288, column: 2)
!6868 = !DILocation(line: 1288, column: 7, scope: !6867)
!6869 = !DILocation(line: 1288, column: 14, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6867, file: !1, line: 1288, column: 2)
!6871 = !DILocation(line: 1288, column: 18, scope: !6870)
!6872 = !DILocation(line: 1288, column: 23, scope: !6870)
!6873 = !DILocation(line: 1288, column: 16, scope: !6870)
!6874 = !DILocation(line: 1288, column: 2, scope: !6867)
!6875 = !DILocation(line: 1289, column: 7, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6877, file: !1, line: 1289, column: 7)
!6877 = distinct !DILexicalBlock(scope: !6870, file: !1, line: 1288, column: 52)
!6878 = !DILocation(line: 1289, column: 11, scope: !6876)
!6879 = !DILocation(line: 1289, column: 16, scope: !6876)
!6880 = !DILocation(line: 1289, column: 7, scope: !6877)
!6881 = !DILocalVariable(name: "vec", scope: !6882, file: !1, line: 1290, type: !471)
!6882 = distinct !DILexicalBlock(scope: !6876, file: !1, line: 1289, column: 25)
!6883 = !DILocation(line: 1290, column: 10, scope: !6882)
!6884 = !DILocalVariable(name: "quat", scope: !6882, file: !1, line: 1290, type: !1537)
!6885 = !DILocation(line: 1290, column: 18, scope: !6882)
!6886 = !DILocation(line: 1292, column: 13, scope: !6882)
!6887 = !DILocation(line: 1292, column: 21, scope: !6882)
!6888 = !DILocation(line: 1292, column: 19, scope: !6882)
!6889 = !DILocation(line: 1292, column: 4, scope: !6882)
!6890 = !DILocation(line: 1292, column: 11, scope: !6882)
!6891 = !DILocation(line: 1293, column: 13, scope: !6882)
!6892 = !DILocation(line: 1293, column: 4, scope: !6882)
!6893 = !DILocation(line: 1293, column: 11, scope: !6882)
!6894 = !DILocation(line: 1294, column: 4, scope: !6882)
!6895 = !DILocation(line: 1294, column: 11, scope: !6882)
!6896 = !DILocation(line: 1296, column: 8, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6882, file: !1, line: 1296, column: 8)
!6898 = !DILocation(line: 1296, column: 14, scope: !6897)
!6899 = !DILocation(line: 1296, column: 8, scope: !6882)
!6900 = !DILocation(line: 1297, column: 16, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6897, file: !1, line: 1296, column: 23)
!6902 = !DILocation(line: 1297, column: 22, scope: !6901)
!6903 = !DILocation(line: 1297, column: 28, scope: !6901)
!6904 = !DILocation(line: 1297, column: 5, scope: !6901)
!6905 = !DILocation(line: 1298, column: 16, scope: !6901)
!6906 = !DILocation(line: 1298, column: 22, scope: !6901)
!6907 = !DILocation(line: 1298, column: 28, scope: !6901)
!6908 = !DILocation(line: 1298, column: 5, scope: !6901)
!6909 = !DILocation(line: 1299, column: 4, scope: !6901)
!6910 = !DILocation(line: 1301, column: 20, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6897, file: !1, line: 1300, column: 9)
!6912 = !DILocation(line: 1301, column: 26, scope: !6911)
!6913 = !DILocation(line: 1301, column: 32, scope: !6911)
!6914 = !DILocation(line: 1301, column: 37, scope: !6911)
!6915 = !DILocation(line: 1301, column: 44, scope: !6911)
!6916 = !DILocation(line: 1301, column: 49, scope: !6911)
!6917 = !DILocation(line: 1301, column: 5, scope: !6911)
!6918 = !DILocation(line: 1302, column: 20, scope: !6911)
!6919 = !DILocation(line: 1302, column: 26, scope: !6911)
!6920 = !DILocation(line: 1302, column: 32, scope: !6911)
!6921 = !DILocation(line: 1302, column: 38, scope: !6911)
!6922 = !DILocation(line: 1302, column: 45, scope: !6911)
!6923 = !DILocation(line: 1302, column: 51, scope: !6911)
!6924 = !DILocation(line: 1302, column: 5, scope: !6911)
!6925 = !DILocation(line: 1305, column: 14, scope: !6882)
!6926 = !DILocation(line: 1305, column: 20, scope: !6882)
!6927 = !DILocation(line: 1305, column: 4, scope: !6882)
!6928 = !DILocation(line: 1307, column: 15, scope: !6882)
!6929 = !DILocation(line: 1307, column: 21, scope: !6882)
!6930 = !DILocation(line: 1307, column: 19, scope: !6882)
!6931 = !DILocation(line: 1307, column: 4, scope: !6882)
!6932 = !DILocation(line: 1307, column: 12, scope: !6882)
!6933 = !DILocation(line: 1308, column: 15, scope: !6882)
!6934 = !DILocation(line: 1308, column: 21, scope: !6882)
!6935 = !DILocation(line: 1308, column: 19, scope: !6882)
!6936 = !DILocation(line: 1308, column: 4, scope: !6882)
!6937 = !DILocation(line: 1308, column: 12, scope: !6882)
!6938 = !DILocation(line: 1309, column: 15, scope: !6882)
!6939 = !DILocation(line: 1309, column: 21, scope: !6882)
!6940 = !DILocation(line: 1309, column: 19, scope: !6882)
!6941 = !DILocation(line: 1309, column: 4, scope: !6882)
!6942 = !DILocation(line: 1309, column: 12, scope: !6882)
!6943 = !DILocation(line: 1310, column: 3, scope: !6882)
!6944 = !DILocalVariable(name: "sina", scope: !6945, file: !1, line: 1312, type: !208)
!6945 = distinct !DILexicalBlock(scope: !6876, file: !1, line: 1311, column: 8)
!6946 = !DILocation(line: 1312, column: 10, scope: !6945)
!6947 = !DILocalVariable(name: "cosa", scope: !6945, file: !1, line: 1312, type: !208)
!6948 = !DILocation(line: 1312, column: 16, scope: !6945)
!6949 = !DILocation(line: 1314, column: 8, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6945, file: !1, line: 1314, column: 8)
!6951 = !DILocation(line: 1314, column: 14, scope: !6950)
!6952 = !DILocation(line: 1314, column: 8, scope: !6945)
!6953 = !DILocation(line: 1315, column: 16, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6950, file: !1, line: 1314, column: 23)
!6955 = !DILocation(line: 1315, column: 22, scope: !6954)
!6956 = !DILocation(line: 1315, column: 28, scope: !6954)
!6957 = !DILocation(line: 1315, column: 5, scope: !6954)
!6958 = !DILocation(line: 1316, column: 12, scope: !6954)
!6959 = !DILocation(line: 1316, column: 18, scope: !6954)
!6960 = !DILocation(line: 1316, column: 10, scope: !6954)
!6961 = !DILocation(line: 1317, column: 12, scope: !6954)
!6962 = !DILocation(line: 1317, column: 18, scope: !6954)
!6963 = !DILocation(line: 1317, column: 10, scope: !6954)
!6964 = !DILocation(line: 1318, column: 4, scope: !6954)
!6965 = !DILocation(line: 1320, column: 20, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6950, file: !1, line: 1319, column: 9)
!6967 = !DILocation(line: 1320, column: 26, scope: !6966)
!6968 = !DILocation(line: 1320, column: 32, scope: !6966)
!6969 = !DILocation(line: 1320, column: 37, scope: !6966)
!6970 = !DILocation(line: 1320, column: 44, scope: !6966)
!6971 = !DILocation(line: 1320, column: 49, scope: !6966)
!6972 = !DILocation(line: 1320, column: 5, scope: !6966)
!6973 = !DILocation(line: 1325, column: 12, scope: !6966)
!6974 = !DILocation(line: 1325, column: 19, scope: !6966)
!6975 = !DILocation(line: 1325, column: 26, scope: !6966)
!6976 = !DILocation(line: 1325, column: 24, scope: !6966)
!6977 = !DILocation(line: 1325, column: 38, scope: !6966)
!6978 = !DILocation(line: 1325, column: 44, scope: !6966)
!6979 = !DILocation(line: 1325, column: 59, scope: !6966)
!6980 = !DILocation(line: 1325, column: 57, scope: !6966)
!6981 = !DILocation(line: 1325, column: 49, scope: !6966)
!6982 = !DILocation(line: 1325, column: 36, scope: !6966)
!6983 = !DILocation(line: 1325, column: 10, scope: !6966)
!6984 = !DILocation(line: 1326, column: 12, scope: !6966)
!6985 = !DILocation(line: 1326, column: 19, scope: !6966)
!6986 = !DILocation(line: 1326, column: 26, scope: !6966)
!6987 = !DILocation(line: 1326, column: 24, scope: !6966)
!6988 = !DILocation(line: 1326, column: 38, scope: !6966)
!6989 = !DILocation(line: 1326, column: 44, scope: !6966)
!6990 = !DILocation(line: 1326, column: 59, scope: !6966)
!6991 = !DILocation(line: 1326, column: 57, scope: !6966)
!6992 = !DILocation(line: 1326, column: 49, scope: !6966)
!6993 = !DILocation(line: 1326, column: 36, scope: !6966)
!6994 = !DILocation(line: 1326, column: 10, scope: !6966)
!6995 = !DILocation(line: 1329, column: 15, scope: !6945)
!6996 = !DILocation(line: 1329, column: 22, scope: !6945)
!6997 = !DILocation(line: 1329, column: 31, scope: !6945)
!6998 = !DILocation(line: 1329, column: 29, scope: !6945)
!6999 = !DILocation(line: 1329, column: 19, scope: !6945)
!7000 = !DILocation(line: 1329, column: 40, scope: !6945)
!7001 = !DILocation(line: 1329, column: 38, scope: !6945)
!7002 = !DILocation(line: 1329, column: 4, scope: !6945)
!7003 = !DILocation(line: 1329, column: 12, scope: !6945)
!7004 = !DILocation(line: 1330, column: 15, scope: !6945)
!7005 = !DILocation(line: 1330, column: 22, scope: !6945)
!7006 = !DILocation(line: 1330, column: 31, scope: !6945)
!7007 = !DILocation(line: 1330, column: 29, scope: !6945)
!7008 = !DILocation(line: 1330, column: 19, scope: !6945)
!7009 = !DILocation(line: 1330, column: 40, scope: !6945)
!7010 = !DILocation(line: 1330, column: 38, scope: !6945)
!7011 = !DILocation(line: 1330, column: 4, scope: !6945)
!7012 = !DILocation(line: 1330, column: 12, scope: !6945)
!7013 = !DILocation(line: 1331, column: 15, scope: !6945)
!7014 = !DILocation(line: 1331, column: 21, scope: !6945)
!7015 = !DILocation(line: 1331, column: 19, scope: !6945)
!7016 = !DILocation(line: 1331, column: 4, scope: !6945)
!7017 = !DILocation(line: 1331, column: 12, scope: !6945)
!7018 = !DILocation(line: 1333, column: 2, scope: !6877)
!7019 = !DILocation(line: 1288, column: 28, scope: !6870)
!7020 = !DILocation(line: 1288, column: 35, scope: !6870)
!7021 = !DILocation(line: 1288, column: 46, scope: !6870)
!7022 = !DILocation(line: 1288, column: 2, scope: !6870)
!7023 = distinct !{!7023, !6874, !7024}
!7024 = !DILocation(line: 1333, column: 2, scope: !6867)
!7025 = !DILocation(line: 1335, column: 12, scope: !6835)
!7026 = !DILocation(line: 1335, column: 3, scope: !6835)
!7027 = !DILocation(line: 1335, column: 10, scope: !6835)
!7028 = !DILocation(line: 1336, column: 1, scope: !6835)
!7029 = distinct !DISubprogram(name: "fillBevelCap", scope: !1, file: !1, line: 1338, type: !7030, scopeLine: 1339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!7030 = !DISubroutineType(types: !7031)
!7031 = !{null, !3199, !210, !209, !282}
!7032 = !DILocalVariable(name: "nu", arg: 1, scope: !7029, file: !1, line: 1338, type: !3199)
!7033 = !DILocation(line: 1338, column: 32, scope: !7029)
!7034 = !DILocalVariable(name: "dlb", arg: 2, scope: !7029, file: !1, line: 1338, type: !210)
!7035 = !DILocation(line: 1338, column: 46, scope: !7029)
!7036 = !DILocalVariable(name: "prev_fp", arg: 3, scope: !7029, file: !1, line: 1338, type: !209)
!7037 = !DILocation(line: 1338, column: 58, scope: !7029)
!7038 = !DILocalVariable(name: "dispbase", arg: 4, scope: !7029, file: !1, line: 1338, type: !282)
!7039 = !DILocation(line: 1338, column: 77, scope: !7029)
!7040 = !DILocalVariable(name: "dl", scope: !7029, file: !1, line: 1340, type: !210)
!7041 = !DILocation(line: 1340, column: 12, scope: !7029)
!7042 = !DILocation(line: 1342, column: 7, scope: !7029)
!7043 = !DILocation(line: 1342, column: 5, scope: !7029)
!7044 = !DILocation(line: 1343, column: 14, scope: !7029)
!7045 = !DILocation(line: 1343, column: 45, scope: !7029)
!7046 = !DILocation(line: 1343, column: 50, scope: !7029)
!7047 = !DILocation(line: 1343, column: 43, scope: !7029)
!7048 = !DILocation(line: 1343, column: 2, scope: !7029)
!7049 = !DILocation(line: 1343, column: 6, scope: !7029)
!7050 = !DILocation(line: 1343, column: 12, scope: !7029)
!7051 = !DILocation(line: 1344, column: 9, scope: !7029)
!7052 = !DILocation(line: 1344, column: 13, scope: !7029)
!7053 = !DILocation(line: 1344, column: 2, scope: !7029)
!7054 = !DILocation(line: 1344, column: 20, scope: !7029)
!7055 = !DILocation(line: 1344, column: 49, scope: !7029)
!7056 = !DILocation(line: 1344, column: 54, scope: !7029)
!7057 = !DILocation(line: 1344, column: 47, scope: !7029)
!7058 = !DILocation(line: 1346, column: 2, scope: !7029)
!7059 = !DILocation(line: 1346, column: 6, scope: !7029)
!7060 = !DILocation(line: 1346, column: 11, scope: !7029)
!7061 = !DILocation(line: 1348, column: 2, scope: !7029)
!7062 = !DILocation(line: 1348, column: 6, scope: !7029)
!7063 = !DILocation(line: 1348, column: 12, scope: !7029)
!7064 = !DILocation(line: 1349, column: 11, scope: !7029)
!7065 = !DILocation(line: 1349, column: 16, scope: !7029)
!7066 = !DILocation(line: 1349, column: 2, scope: !7029)
!7067 = !DILocation(line: 1349, column: 6, scope: !7029)
!7068 = !DILocation(line: 1349, column: 9, scope: !7029)
!7069 = !DILocation(line: 1350, column: 12, scope: !7029)
!7070 = !DILocation(line: 1350, column: 16, scope: !7029)
!7071 = !DILocation(line: 1350, column: 2, scope: !7029)
!7072 = !DILocation(line: 1350, column: 6, scope: !7029)
!7073 = !DILocation(line: 1350, column: 10, scope: !7029)
!7074 = !DILocation(line: 1351, column: 16, scope: !7029)
!7075 = !DILocation(line: 1351, column: 20, scope: !7029)
!7076 = !DILocation(line: 1351, column: 2, scope: !7029)
!7077 = !DILocation(line: 1351, column: 6, scope: !7029)
!7078 = !DILocation(line: 1351, column: 14, scope: !7029)
!7079 = !DILocation(line: 1355, column: 11, scope: !7029)
!7080 = !DILocation(line: 1355, column: 15, scope: !7029)
!7081 = !DILocation(line: 1355, column: 20, scope: !7029)
!7082 = !DILocation(line: 1355, column: 2, scope: !7029)
!7083 = !DILocation(line: 1355, column: 6, scope: !7029)
!7084 = !DILocation(line: 1355, column: 9, scope: !7029)
!7085 = !DILocation(line: 1357, column: 14, scope: !7029)
!7086 = !DILocation(line: 1357, column: 24, scope: !7029)
!7087 = !DILocation(line: 1357, column: 2, scope: !7029)
!7088 = !DILocation(line: 1358, column: 1, scope: !7029)
!7089 = distinct !DISubprogram(name: "negate_v3_v3", scope: !822, file: !822, line: 583, type: !823, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!7090 = !DILocalVariable(name: "r", arg: 1, scope: !7089, file: !822, line: 583, type: !209)
!7091 = !DILocation(line: 583, column: 33, scope: !7089)
!7092 = !DILocalVariable(name: "a", arg: 2, scope: !7089, file: !822, line: 583, type: !825)
!7093 = !DILocation(line: 583, column: 51, scope: !7089)
!7094 = !DILocation(line: 585, column: 10, scope: !7089)
!7095 = !DILocation(line: 585, column: 9, scope: !7089)
!7096 = !DILocation(line: 585, column: 2, scope: !7089)
!7097 = !DILocation(line: 585, column: 7, scope: !7089)
!7098 = !DILocation(line: 586, column: 10, scope: !7089)
!7099 = !DILocation(line: 586, column: 9, scope: !7089)
!7100 = !DILocation(line: 586, column: 2, scope: !7089)
!7101 = !DILocation(line: 586, column: 7, scope: !7089)
!7102 = !DILocation(line: 587, column: 10, scope: !7089)
!7103 = !DILocation(line: 587, column: 9, scope: !7089)
!7104 = !DILocation(line: 587, column: 2, scope: !7089)
!7105 = !DILocation(line: 587, column: 7, scope: !7089)
!7106 = !DILocation(line: 588, column: 1, scope: !7089)
!7107 = distinct !DISubprogram(name: "min_ff", scope: !7108, file: !7108, line: 202, type: !7109, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!7108 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7109 = !DISubroutineType(types: !7110)
!7110 = !{!208, !208, !208}
!7111 = !DILocalVariable(name: "a", arg: 1, scope: !7107, file: !7108, line: 202, type: !208)
!7112 = !DILocation(line: 202, column: 28, scope: !7107)
!7113 = !DILocalVariable(name: "b", arg: 2, scope: !7107, file: !7108, line: 202, type: !208)
!7114 = !DILocation(line: 202, column: 37, scope: !7107)
!7115 = !DILocation(line: 204, column: 10, scope: !7107)
!7116 = !DILocation(line: 204, column: 14, scope: !7107)
!7117 = !DILocation(line: 204, column: 12, scope: !7107)
!7118 = !DILocation(line: 204, column: 9, scope: !7107)
!7119 = !DILocation(line: 204, column: 19, scope: !7107)
!7120 = !DILocation(line: 204, column: 23, scope: !7107)
!7121 = !DILocation(line: 204, column: 2, scope: !7107)
!7122 = distinct !DISubprogram(name: "max_ff", scope: !7108, file: !7108, line: 206, type: !7109, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!7123 = !DILocalVariable(name: "a", arg: 1, scope: !7122, file: !7108, line: 206, type: !208)
!7124 = !DILocation(line: 206, column: 28, scope: !7122)
!7125 = !DILocalVariable(name: "b", arg: 2, scope: !7122, file: !7108, line: 206, type: !208)
!7126 = !DILocation(line: 206, column: 37, scope: !7122)
!7127 = !DILocation(line: 208, column: 10, scope: !7122)
!7128 = !DILocation(line: 208, column: 14, scope: !7122)
!7129 = !DILocation(line: 208, column: 12, scope: !7122)
!7130 = !DILocation(line: 208, column: 9, scope: !7122)
!7131 = !DILocation(line: 208, column: 19, scope: !7122)
!7132 = !DILocation(line: 208, column: 23, scope: !7122)
!7133 = !DILocation(line: 208, column: 2, scope: !7122)
!7134 = distinct !DISubprogram(name: "calc_bevfac_segment_mapping", scope: !1, file: !1, line: 1360, type: !7135, scopeLine: 1361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!7135 = !DISubroutineType(types: !7136)
!7136 = !{null, !4591, !208, !208, !228, !209}
!7137 = !DILocalVariable(name: "bl", arg: 1, scope: !7134, file: !1, line: 1360, type: !4591)
!7138 = !DILocation(line: 1360, column: 50, scope: !7134)
!7139 = !DILocalVariable(name: "bevfac", arg: 2, scope: !7134, file: !1, line: 1360, type: !208)
!7140 = !DILocation(line: 1360, column: 60, scope: !7134)
!7141 = !DILocalVariable(name: "spline_length", arg: 3, scope: !7134, file: !1, line: 1360, type: !208)
!7142 = !DILocation(line: 1360, column: 74, scope: !7134)
!7143 = !DILocalVariable(name: "r_bev", arg: 4, scope: !7134, file: !1, line: 1360, type: !228)
!7144 = !DILocation(line: 1360, column: 94, scope: !7134)
!7145 = !DILocalVariable(name: "r_blend", arg: 5, scope: !7134, file: !1, line: 1360, type: !209)
!7146 = !DILocation(line: 1360, column: 108, scope: !7134)
!7147 = !DILocalVariable(name: "normlen", scope: !7134, file: !1, line: 1362, type: !208)
!7148 = !DILocation(line: 1362, column: 8, scope: !7134)
!7149 = !DILocalVariable(name: "normsum", scope: !7134, file: !1, line: 1362, type: !208)
!7150 = !DILocation(line: 1362, column: 17, scope: !7134)
!7151 = !DILocalVariable(name: "seglen", scope: !7134, file: !1, line: 1363, type: !209)
!7152 = !DILocation(line: 1363, column: 9, scope: !7134)
!7153 = !DILocation(line: 1363, column: 18, scope: !7134)
!7154 = !DILocation(line: 1363, column: 22, scope: !7134)
!7155 = !DILocalVariable(name: "segbevcount", scope: !7134, file: !1, line: 1364, type: !228)
!7156 = !DILocation(line: 1364, column: 7, scope: !7134)
!7157 = !DILocation(line: 1364, column: 21, scope: !7134)
!7158 = !DILocation(line: 1364, column: 25, scope: !7134)
!7159 = !DILocalVariable(name: "bevcount", scope: !7134, file: !1, line: 1365, type: !106)
!7160 = !DILocation(line: 1365, column: 6, scope: !7134)
!7161 = !DILocalVariable(name: "nr", scope: !7134, file: !1, line: 1365, type: !106)
!7162 = !DILocation(line: 1365, column: 20, scope: !7134)
!7163 = !DILocation(line: 1365, column: 25, scope: !7134)
!7164 = !DILocation(line: 1365, column: 29, scope: !7134)
!7165 = !DILocalVariable(name: "bev_fl", scope: !7134, file: !1, line: 1367, type: !208)
!7166 = !DILocation(line: 1367, column: 8, scope: !7134)
!7167 = !DILocation(line: 1367, column: 17, scope: !7134)
!7168 = !DILocation(line: 1367, column: 27, scope: !7134)
!7169 = !DILocation(line: 1367, column: 31, scope: !7134)
!7170 = !DILocation(line: 1367, column: 34, scope: !7134)
!7171 = !DILocation(line: 1367, column: 26, scope: !7134)
!7172 = !DILocation(line: 1367, column: 24, scope: !7134)
!7173 = !DILocation(line: 1368, column: 16, scope: !7134)
!7174 = !DILocation(line: 1368, column: 11, scope: !7134)
!7175 = !DILocation(line: 1368, column: 3, scope: !7134)
!7176 = !DILocation(line: 1368, column: 9, scope: !7134)
!7177 = !DILocation(line: 1370, column: 2, scope: !7134)
!7178 = !DILocation(line: 1370, column: 9, scope: !7134)
!7179 = !DILocation(line: 1370, column: 20, scope: !7134)
!7180 = !DILocation(line: 1370, column: 23, scope: !7134)
!7181 = !DILocation(line: 1370, column: 18, scope: !7134)
!7182 = !DILocation(line: 1371, column: 14, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7134, file: !1, line: 1370, column: 28)
!7184 = !DILocation(line: 1371, column: 13, scope: !7183)
!7185 = !DILocation(line: 1371, column: 23, scope: !7183)
!7186 = !DILocation(line: 1371, column: 21, scope: !7183)
!7187 = !DILocation(line: 1371, column: 11, scope: !7183)
!7188 = !DILocation(line: 1372, column: 7, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7183, file: !1, line: 1372, column: 7)
!7190 = !DILocation(line: 1372, column: 17, scope: !7189)
!7191 = !DILocation(line: 1372, column: 15, scope: !7189)
!7192 = !DILocation(line: 1372, column: 27, scope: !7189)
!7193 = !DILocation(line: 1372, column: 25, scope: !7189)
!7194 = !DILocation(line: 1372, column: 7, scope: !7183)
!7195 = !DILocation(line: 1373, column: 13, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7189, file: !1, line: 1372, column: 35)
!7197 = !DILocation(line: 1373, column: 25, scope: !7196)
!7198 = !DILocation(line: 1373, column: 34, scope: !7196)
!7199 = !DILocation(line: 1373, column: 32, scope: !7196)
!7200 = !DILocation(line: 1373, column: 45, scope: !7196)
!7201 = !DILocation(line: 1373, column: 43, scope: !7196)
!7202 = !DILocation(line: 1373, column: 56, scope: !7196)
!7203 = !DILocation(line: 1373, column: 55, scope: !7196)
!7204 = !DILocation(line: 1373, column: 53, scope: !7196)
!7205 = !DILocation(line: 1373, column: 22, scope: !7196)
!7206 = !DILocation(line: 1373, column: 11, scope: !7196)
!7207 = !DILocation(line: 1374, column: 19, scope: !7196)
!7208 = !DILocation(line: 1374, column: 13, scope: !7196)
!7209 = !DILocation(line: 1374, column: 5, scope: !7196)
!7210 = !DILocation(line: 1374, column: 11, scope: !7196)
!7211 = !DILocation(line: 1375, column: 15, scope: !7196)
!7212 = !DILocation(line: 1375, column: 25, scope: !7196)
!7213 = !DILocation(line: 1375, column: 24, scope: !7196)
!7214 = !DILocation(line: 1375, column: 22, scope: !7196)
!7215 = !DILocation(line: 1375, column: 5, scope: !7196)
!7216 = !DILocation(line: 1375, column: 13, scope: !7196)
!7217 = !DILocation(line: 1376, column: 4, scope: !7196)
!7218 = !DILocation(line: 1378, column: 14, scope: !7183)
!7219 = !DILocation(line: 1378, column: 11, scope: !7183)
!7220 = !DILocation(line: 1379, column: 16, scope: !7183)
!7221 = !DILocation(line: 1379, column: 15, scope: !7183)
!7222 = !DILocation(line: 1379, column: 12, scope: !7183)
!7223 = !DILocation(line: 1380, column: 14, scope: !7183)
!7224 = !DILocation(line: 1381, column: 9, scope: !7183)
!7225 = distinct !{!7225, !7177, !7226}
!7226 = !DILocation(line: 1382, column: 2, scope: !7134)
!7227 = !DILocation(line: 1383, column: 1, scope: !7134)
!7228 = distinct !DISubprogram(name: "calc_bevfac_spline_mapping", scope: !1, file: !1, line: 1385, type: !7135, scopeLine: 1388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!7229 = !DILocalVariable(name: "bl", arg: 1, scope: !7228, file: !1, line: 1385, type: !4591)
!7230 = !DILocation(line: 1385, column: 49, scope: !7228)
!7231 = !DILocalVariable(name: "bevfac", arg: 2, scope: !7228, file: !1, line: 1385, type: !208)
!7232 = !DILocation(line: 1385, column: 59, scope: !7228)
!7233 = !DILocalVariable(name: "spline_length", arg: 3, scope: !7228, file: !1, line: 1386, type: !208)
!7234 = !DILocation(line: 1386, column: 46, scope: !7228)
!7235 = !DILocalVariable(name: "r_bev", arg: 4, scope: !7228, file: !1, line: 1387, type: !228)
!7236 = !DILocation(line: 1387, column: 45, scope: !7228)
!7237 = !DILocalVariable(name: "r_blend", arg: 5, scope: !7228, file: !1, line: 1387, type: !209)
!7238 = !DILocation(line: 1387, column: 59, scope: !7228)
!7239 = !DILocalVariable(name: "len_target", scope: !7228, file: !1, line: 1389, type: !826)
!7240 = !DILocation(line: 1389, column: 14, scope: !7228)
!7241 = !DILocation(line: 1389, column: 27, scope: !7228)
!7242 = !DILocation(line: 1389, column: 36, scope: !7228)
!7243 = !DILocation(line: 1389, column: 34, scope: !7228)
!7244 = !DILocalVariable(name: "bevp", scope: !7228, file: !1, line: 1390, type: !4658)
!7245 = !DILocation(line: 1390, column: 12, scope: !7228)
!7246 = !DILocation(line: 1390, column: 19, scope: !7228)
!7247 = !DILocation(line: 1390, column: 23, scope: !7228)
!7248 = !DILocalVariable(name: "len_next", scope: !7228, file: !1, line: 1391, type: !208)
!7249 = !DILocation(line: 1391, column: 8, scope: !7228)
!7250 = !DILocalVariable(name: "len", scope: !7228, file: !1, line: 1391, type: !208)
!7251 = !DILocation(line: 1391, column: 25, scope: !7228)
!7252 = !DILocalVariable(name: "i", scope: !7228, file: !1, line: 1392, type: !106)
!7253 = !DILocation(line: 1392, column: 6, scope: !7228)
!7254 = !DILocalVariable(name: "nr", scope: !7228, file: !1, line: 1392, type: !106)
!7255 = !DILocation(line: 1392, column: 13, scope: !7228)
!7256 = !DILocation(line: 1392, column: 18, scope: !7228)
!7257 = !DILocation(line: 1392, column: 22, scope: !7228)
!7258 = !DILocation(line: 1394, column: 2, scope: !7228)
!7259 = !DILocation(line: 1394, column: 11, scope: !7228)
!7260 = !DILocation(line: 1395, column: 7, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7228, file: !1, line: 1394, column: 15)
!7262 = !DILocation(line: 1396, column: 14, scope: !7261)
!7263 = !DILocation(line: 1396, column: 20, scope: !7261)
!7264 = !DILocation(line: 1396, column: 26, scope: !7261)
!7265 = !DILocation(line: 1396, column: 18, scope: !7261)
!7266 = !DILocation(line: 1396, column: 12, scope: !7261)
!7267 = !DILocation(line: 1397, column: 7, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7261, file: !1, line: 1397, column: 7)
!7269 = !DILocation(line: 1397, column: 18, scope: !7268)
!7270 = !DILocation(line: 1397, column: 16, scope: !7268)
!7271 = !DILocation(line: 1397, column: 7, scope: !7261)
!7272 = !DILocation(line: 1398, column: 4, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7268, file: !1, line: 1397, column: 30)
!7274 = !DILocation(line: 1400, column: 9, scope: !7261)
!7275 = !DILocation(line: 1400, column: 7, scope: !7261)
!7276 = !DILocation(line: 1401, column: 4, scope: !7261)
!7277 = distinct !{!7277, !7258, !7278}
!7278 = !DILocation(line: 1402, column: 2, scope: !7228)
!7279 = !DILocation(line: 1404, column: 11, scope: !7228)
!7280 = !DILocation(line: 1404, column: 3, scope: !7228)
!7281 = !DILocation(line: 1404, column: 9, scope: !7228)
!7282 = !DILocation(line: 1405, column: 14, scope: !7228)
!7283 = !DILocation(line: 1405, column: 27, scope: !7228)
!7284 = !DILocation(line: 1405, column: 25, scope: !7228)
!7285 = !DILocation(line: 1405, column: 34, scope: !7228)
!7286 = !DILocation(line: 1405, column: 40, scope: !7228)
!7287 = !DILocation(line: 1405, column: 32, scope: !7228)
!7288 = !DILocation(line: 1405, column: 3, scope: !7228)
!7289 = !DILocation(line: 1405, column: 11, scope: !7228)
!7290 = !DILocation(line: 1406, column: 1, scope: !7228)
!7291 = distinct !DISubprogram(name: "create_orco_dm", scope: !1, file: !1, line: 1078, type: !7292, scopeLine: 1079, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!7292 = !DISubroutineType(types: !7293)
!7293 = !{!1722, !1333, !2871}
!7294 = !DILocalVariable(name: "scene", arg: 1, scope: !7291, file: !1, line: 1078, type: !1333)
!7295 = !DILocation(line: 1078, column: 43, scope: !7291)
!7296 = !DILocalVariable(name: "ob", arg: 2, scope: !7291, file: !1, line: 1078, type: !2871)
!7297 = !DILocation(line: 1078, column: 58, scope: !7291)
!7298 = !DILocalVariable(name: "dm", scope: !7291, file: !1, line: 1080, type: !1722)
!7299 = !DILocation(line: 1080, column: 15, scope: !7291)
!7300 = !DILocalVariable(name: "disp", scope: !7291, file: !1, line: 1081, type: !283)
!7301 = !DILocation(line: 1081, column: 11, scope: !7291)
!7302 = !DILocation(line: 1084, column: 39, scope: !7291)
!7303 = !DILocation(line: 1084, column: 46, scope: !7291)
!7304 = !DILocation(line: 1084, column: 2, scope: !7291)
!7305 = !DILocation(line: 1085, column: 32, scope: !7291)
!7306 = !DILocation(line: 1085, column: 7, scope: !7291)
!7307 = !DILocation(line: 1085, column: 5, scope: !7291)
!7308 = !DILocation(line: 1087, column: 2, scope: !7291)
!7309 = !DILocation(line: 1089, column: 9, scope: !7291)
!7310 = !DILocation(line: 1089, column: 2, scope: !7291)
!7311 = distinct !DISubprogram(name: "add_orco_dm", scope: !1, file: !1, line: 1092, type: !7312, scopeLine: 1093, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !240)
!7312 = !DISubroutineType(types: !7313)
!7313 = !{null, !2871, !1722, !1722}
!7314 = !DILocalVariable(name: "ob", arg: 1, scope: !7311, file: !1, line: 1092, type: !2871)
!7315 = !DILocation(line: 1092, column: 33, scope: !7311)
!7316 = !DILocalVariable(name: "dm", arg: 2, scope: !7311, file: !1, line: 1092, type: !1722)
!7317 = !DILocation(line: 1092, column: 50, scope: !7311)
!7318 = !DILocalVariable(name: "orcodm", arg: 3, scope: !7311, file: !1, line: 1092, type: !1722)
!7319 = !DILocation(line: 1092, column: 67, scope: !7311)
!7320 = !DILocalVariable(name: "orco", scope: !7311, file: !1, line: 1094, type: !1949)
!7321 = !DILocation(line: 1094, column: 10, scope: !7311)
!7322 = !DILocalVariable(name: "layerorco", scope: !7311, file: !1, line: 1094, type: !1949)
!7323 = !DILocation(line: 1094, column: 22, scope: !7311)
!7324 = !DILocalVariable(name: "totvert", scope: !7311, file: !1, line: 1095, type: !106)
!7325 = !DILocation(line: 1095, column: 6, scope: !7311)
!7326 = !DILocalVariable(name: "a", scope: !7311, file: !1, line: 1095, type: !106)
!7327 = !DILocation(line: 1095, column: 15, scope: !7311)
!7328 = !DILocalVariable(name: "cu", scope: !7311, file: !1, line: 1096, type: !3262)
!7329 = !DILocation(line: 1096, column: 9, scope: !7311)
!7330 = !DILocation(line: 1096, column: 14, scope: !7311)
!7331 = !DILocation(line: 1096, column: 18, scope: !7311)
!7332 = !DILocation(line: 1098, column: 12, scope: !7311)
!7333 = !DILocation(line: 1098, column: 16, scope: !7311)
!7334 = !DILocation(line: 1098, column: 28, scope: !7311)
!7335 = !DILocation(line: 1098, column: 10, scope: !7311)
!7336 = !DILocation(line: 1100, column: 9, scope: !7311)
!7337 = !DILocation(line: 1100, column: 41, scope: !7311)
!7338 = !DILocation(line: 1100, column: 39, scope: !7311)
!7339 = !DILocation(line: 1100, column: 7, scope: !7311)
!7340 = !DILocation(line: 1102, column: 6, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7311, file: !1, line: 1102, column: 6)
!7342 = !DILocation(line: 1102, column: 14, scope: !7341)
!7343 = !DILocation(line: 1102, column: 26, scope: !7341)
!7344 = !DILocation(line: 1102, column: 37, scope: !7341)
!7345 = !DILocation(line: 1102, column: 34, scope: !7341)
!7346 = !DILocation(line: 1102, column: 6, scope: !7311)
!7347 = !DILocation(line: 1103, column: 3, scope: !7341)
!7348 = !DILocation(line: 1103, column: 11, scope: !7341)
!7349 = !DILocation(line: 1103, column: 22, scope: !7341)
!7350 = !DILocation(line: 1103, column: 30, scope: !7341)
!7351 = !DILocation(line: 1105, column: 3, scope: !7341)
!7352 = !DILocation(line: 1105, column: 7, scope: !7341)
!7353 = !DILocation(line: 1105, column: 18, scope: !7341)
!7354 = !DILocation(line: 1105, column: 22, scope: !7341)
!7355 = !DILocation(line: 1107, column: 9, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7311, file: !1, line: 1107, column: 2)
!7357 = !DILocation(line: 1107, column: 7, scope: !7356)
!7358 = !DILocation(line: 1107, column: 14, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7356, file: !1, line: 1107, column: 2)
!7360 = !DILocation(line: 1107, column: 18, scope: !7359)
!7361 = !DILocation(line: 1107, column: 16, scope: !7359)
!7362 = !DILocation(line: 1107, column: 2, scope: !7356)
!7363 = !DILocalVariable(name: "co", scope: !7364, file: !1, line: 1108, type: !209)
!7364 = distinct !DILexicalBlock(scope: !7359, file: !1, line: 1107, column: 32)
!7365 = !DILocation(line: 1108, column: 10, scope: !7364)
!7366 = !DILocation(line: 1108, column: 15, scope: !7364)
!7367 = !DILocation(line: 1108, column: 20, scope: !7364)
!7368 = !DILocation(line: 1109, column: 12, scope: !7364)
!7369 = !DILocation(line: 1109, column: 20, scope: !7364)
!7370 = !DILocation(line: 1109, column: 24, scope: !7364)
!7371 = !DILocation(line: 1109, column: 18, scope: !7364)
!7372 = !DILocation(line: 1109, column: 34, scope: !7364)
!7373 = !DILocation(line: 1109, column: 38, scope: !7364)
!7374 = !DILocation(line: 1109, column: 32, scope: !7364)
!7375 = !DILocation(line: 1109, column: 3, scope: !7364)
!7376 = !DILocation(line: 1109, column: 9, scope: !7364)
!7377 = !DILocation(line: 1110, column: 12, scope: !7364)
!7378 = !DILocation(line: 1110, column: 20, scope: !7364)
!7379 = !DILocation(line: 1110, column: 24, scope: !7364)
!7380 = !DILocation(line: 1110, column: 18, scope: !7364)
!7381 = !DILocation(line: 1110, column: 34, scope: !7364)
!7382 = !DILocation(line: 1110, column: 38, scope: !7364)
!7383 = !DILocation(line: 1110, column: 32, scope: !7364)
!7384 = !DILocation(line: 1110, column: 3, scope: !7364)
!7385 = !DILocation(line: 1110, column: 9, scope: !7364)
!7386 = !DILocation(line: 1111, column: 12, scope: !7364)
!7387 = !DILocation(line: 1111, column: 20, scope: !7364)
!7388 = !DILocation(line: 1111, column: 24, scope: !7364)
!7389 = !DILocation(line: 1111, column: 18, scope: !7364)
!7390 = !DILocation(line: 1111, column: 34, scope: !7364)
!7391 = !DILocation(line: 1111, column: 38, scope: !7364)
!7392 = !DILocation(line: 1111, column: 32, scope: !7364)
!7393 = !DILocation(line: 1111, column: 3, scope: !7364)
!7394 = !DILocation(line: 1111, column: 9, scope: !7364)
!7395 = !DILocation(line: 1112, column: 2, scope: !7364)
!7396 = !DILocation(line: 1107, column: 28, scope: !7359)
!7397 = !DILocation(line: 1107, column: 2, scope: !7359)
!7398 = distinct !{!7398, !7362, !7399}
!7399 = !DILocation(line: 1112, column: 2, scope: !7356)
!7400 = !DILocation(line: 1114, column: 42, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7311, file: !1, line: 1114, column: 6)
!7402 = !DILocation(line: 1114, column: 19, scope: !7401)
!7403 = !DILocation(line: 1114, column: 17, scope: !7401)
!7404 = !DILocation(line: 1114, column: 6, scope: !7311)
!7405 = !DILocation(line: 1115, column: 10, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7401, file: !1, line: 1114, column: 57)
!7407 = !DILocation(line: 1115, column: 3, scope: !7406)
!7408 = !DILocation(line: 1115, column: 21, scope: !7406)
!7409 = !DILocation(line: 1115, column: 43, scope: !7406)
!7410 = !DILocation(line: 1115, column: 41, scope: !7406)
!7411 = !DILocation(line: 1116, column: 3, scope: !7406)
!7412 = !DILocation(line: 1116, column: 13, scope: !7406)
!7413 = !DILocation(line: 1117, column: 2, scope: !7406)
!7414 = !DILocation(line: 1119, column: 21, scope: !7401)
!7415 = !DILocation(line: 1119, column: 45, scope: !7401)
!7416 = !DILocation(line: 1119, column: 3, scope: !7401)
!7417 = !DILocation(line: 1120, column: 1, scope: !7311)
