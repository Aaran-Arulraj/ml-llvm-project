; ModuleID = 'ipa-utils.c'
source_filename = "ipa-utils.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.cgraph_node = type { %union.tree_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.htab*, i8*, %struct.VEC_ipa_opt_pass_heap*, %struct.cgraph_local_info, %struct.cgraph_global_info, %struct.cgraph_rtl_info, %struct.cgraph_clone_info, %struct.cgraph_thunk_info, i64, i32, i32, i32, i16 }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.cgraph_edge = type { i64, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %union.gimple_statement_d*, i8*, i32, i32, i32, i32, i16, i8 }
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.VEC_ipa_opt_pass_heap = type { %struct.VEC_ipa_opt_pass_base }
%struct.VEC_ipa_opt_pass_base = type { i32, i32, [1 x %struct.ipa_opt_pass_d*] }
%struct.ipa_opt_pass_d = type { %struct.opt_pass, void ()*, void (%struct.cgraph_node_set_def*)*, void ()*, void (%struct.cgraph_node*)*, void (%struct.cgraph_node*, %union.gimple_statement_d**)*, i32, i32 (%struct.cgraph_node*)*, void (%struct.varpool_node*)* }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.cgraph_node_set_def = type { %struct.htab*, %struct.VEC_cgraph_node_ptr_gc*, i8* }
%struct.VEC_cgraph_node_ptr_gc = type { %struct.VEC_cgraph_node_ptr_base }
%struct.VEC_cgraph_node_ptr_base = type { i32, i32, [1 x %struct.cgraph_node*] }
%struct.varpool_node = type { %union.tree_node*, %struct.varpool_node*, %struct.varpool_node*, %struct.varpool_node*, i32, i8 }
%struct.cgraph_local_info = type { %struct.lto_file_decl_data*, %struct.inline_summary, i8 }
%struct.lto_file_decl_data = type opaque
%struct.inline_summary = type { i64, i32, i32, i32, i32 }
%struct.cgraph_global_info = type { i64, i64, %struct.cgraph_node*, i32, i32, i32, i8 }
%struct.cgraph_rtl_info = type { i32 }
%struct.cgraph_clone_info = type { %struct.VEC_ipa_replace_map_p_gc*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.VEC_ipa_replace_map_p_gc = type { %struct.VEC_ipa_replace_map_p_base }
%struct.VEC_ipa_replace_map_p_base = type { i32, i32, [1 x %struct.ipa_replace_map*] }
%struct.ipa_replace_map = type { %union.tree_node*, %union.tree_node*, i8, i8 }
%struct.cgraph_thunk_info = type { i64, i64, %union.tree_node*, i8, i8, i8 }
%struct.searchc_env = type { %struct.cgraph_node**, i32, %struct.cgraph_node**, i32, %struct.splay_tree_s*, i8, i32 }
%struct.splay_tree_s = type { %struct.splay_tree_node_s*, i32 (i64, i64)*, void (i64)*, void (i64)*, i8* (i32, i8*)*, void (i8*, i8*)*, i8* }
%struct.splay_tree_node_s = type { i64, i64, %struct.splay_tree_node_s*, %struct.splay_tree_node_s* }
%struct.ipa_dfs_info = type { i32, i32, i8, i8, %struct.cgraph_node*, i8* }
%struct.tree_ssa_name = type { %struct.tree_common, %union.tree_node*, %union.gimple_statement_d*, i32, %struct.ptr_info_def*, %struct.ssa_use_operand_d }
%struct.ptr_info_def = type { %struct.pt_solution }
%struct.tree_exp = type { %struct.tree_common, i32, %union.tree_node*, [1 x %union.tree_node*] }

@.str = private unnamed_addr constant [27 x i8] c"\0A\0A ordered call graph: %s\0A\00", align 1
@dump_file = external dso_local global %struct._IO_FILE*, align 8
@.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@cgraph_n_nodes = external dso_local global i32, align 4
@cgraph_nodes = external dso_local global %struct.cgraph_node*, align 8
@tree_code_type = external dso_local constant [0 x i32], align 4

; Function Attrs: noinline nounwind uwtable
define dso_local void @ipa_utils_print_order(%struct._IO_FILE* %out, i8* %note, %struct.cgraph_node** %order, i32 %count) #0 !dbg !1904 {
entry:
  %out.addr = alloca %struct._IO_FILE*, align 8
  %note.addr = alloca i8*, align 8
  %order.addr = alloca %struct.cgraph_node**, align 8
  %count.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct._IO_FILE* %out, %struct._IO_FILE** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %out.addr, metadata !1958, metadata !DIExpression()), !dbg !1959
  store i8* %note, i8** %note.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %note.addr, metadata !1960, metadata !DIExpression()), !dbg !1961
  store %struct.cgraph_node** %order, %struct.cgraph_node*** %order.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cgraph_node*** %order.addr, metadata !1962, metadata !DIExpression()), !dbg !1963
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !1964, metadata !DIExpression()), !dbg !1965
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1966, metadata !DIExpression()), !dbg !1967
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %out.addr, align 8, !dbg !1968
  %1 = load i8*, i8** %note.addr, align 8, !dbg !1969
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* %1), !dbg !1970
  %2 = load i32, i32* %count.addr, align 4, !dbg !1971
  %sub = sub nsw i32 %2, 1, !dbg !1973
  store i32 %sub, i32* %i, align 4, !dbg !1974
  br label %for.cond, !dbg !1975

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !1976
  %cmp = icmp sge i32 %3, 0, !dbg !1978
  br i1 %cmp, label %for.body, label %for.end, !dbg !1979

for.body:                                         ; preds = %for.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !1980
  %5 = load %struct.cgraph_node**, %struct.cgraph_node*** %order.addr, align 8, !dbg !1981
  %6 = load i32, i32* %i, align 4, !dbg !1982
  %idxprom = sext i32 %6 to i64, !dbg !1981
  %arrayidx = getelementptr inbounds %struct.cgraph_node*, %struct.cgraph_node** %5, i64 %idxprom, !dbg !1981
  %7 = load %struct.cgraph_node*, %struct.cgraph_node** %arrayidx, align 8, !dbg !1981
  call void @dump_cgraph_node(%struct._IO_FILE* %4, %struct.cgraph_node* %7), !dbg !1983
  br label %for.inc, !dbg !1983

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !1984
  %dec = add nsw i32 %8, -1, !dbg !1984
  store i32 %dec, i32* %i, align 4, !dbg !1984
  br label %for.cond, !dbg !1985, !llvm.loop !1986

for.end:                                          ; preds = %for.cond
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %out.addr, align 8, !dbg !1988
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !1989
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %out.addr, align 8, !dbg !1990
  %call2 = call i32 @fflush(%struct._IO_FILE* %10), !dbg !1991
  ret void, !dbg !1992
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

declare dso_local void @dump_cgraph_node(%struct._IO_FILE*, %struct.cgraph_node*) #2

declare dso_local i32 @fflush(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ipa_utils_reduced_inorder(%struct.cgraph_node** %order, i8 zeroext %reduce, i8 zeroext %allow_overwritable, i8 (%struct.cgraph_edge*)* %ignore_edge) #0 !dbg !1993 {
entry:
  %order.addr = alloca %struct.cgraph_node**, align 8
  %reduce.addr = alloca i8, align 1
  %allow_overwritable.addr = alloca i8, align 1
  %ignore_edge.addr = alloca i8 (%struct.cgraph_edge*)*, align 8
  %node = alloca %struct.cgraph_node*, align 8
  %env = alloca %struct.searchc_env, align 8
  %result = alloca %struct.splay_tree_node_s*, align 8
  %avail = alloca i32, align 4
  %info = alloca %struct.ipa_dfs_info*, align 8
  store %struct.cgraph_node** %order, %struct.cgraph_node*** %order.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cgraph_node*** %order.addr, metadata !1999, metadata !DIExpression()), !dbg !2000
  store i8 %reduce, i8* %reduce.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reduce.addr, metadata !2001, metadata !DIExpression()), !dbg !2002
  store i8 %allow_overwritable, i8* %allow_overwritable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %allow_overwritable.addr, metadata !2003, metadata !DIExpression()), !dbg !2004
  store i8 (%struct.cgraph_edge*)* %ignore_edge, i8 (%struct.cgraph_edge*)** %ignore_edge.addr, align 8
  call void @llvm.dbg.declare(metadata i8 (%struct.cgraph_edge*)** %ignore_edge.addr, metadata !2005, metadata !DIExpression()), !dbg !2006
  call void @llvm.dbg.declare(metadata %struct.cgraph_node** %node, metadata !2007, metadata !DIExpression()), !dbg !2008
  call void @llvm.dbg.declare(metadata %struct.searchc_env* %env, metadata !2009, metadata !DIExpression()), !dbg !2055
  call void @llvm.dbg.declare(metadata %struct.splay_tree_node_s** %result, metadata !2056, metadata !DIExpression()), !dbg !2057
  %0 = load i32, i32* @cgraph_n_nodes, align 4, !dbg !2058
  %conv = sext i32 %0 to i64, !dbg !2058
  %call = call i8* @xcalloc(i64 %conv, i64 8), !dbg !2058
  %1 = bitcast i8* %call to %struct.cgraph_node**, !dbg !2058
  %stack = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %env, i32 0, i32 0, !dbg !2059
  store %struct.cgraph_node** %1, %struct.cgraph_node*** %stack, align 8, !dbg !2060
  %stack_size = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %env, i32 0, i32 1, !dbg !2061
  store i32 0, i32* %stack_size, align 8, !dbg !2062
  %2 = load %struct.cgraph_node**, %struct.cgraph_node*** %order.addr, align 8, !dbg !2063
  %result1 = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %env, i32 0, i32 2, !dbg !2064
  store %struct.cgraph_node** %2, %struct.cgraph_node*** %result1, align 8, !dbg !2065
  %order_pos = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %env, i32 0, i32 3, !dbg !2066
  store i32 0, i32* %order_pos, align 8, !dbg !2067
  %call2 = call %struct.splay_tree_s* @splay_tree_new(i32 (i64, i64)* @splay_tree_compare_ints, void (i64)* null, void (i64)* null), !dbg !2068
  %nodes_marked_new = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %env, i32 0, i32 4, !dbg !2069
  store %struct.splay_tree_s* %call2, %struct.splay_tree_s** %nodes_marked_new, align 8, !dbg !2070
  %count = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %env, i32 0, i32 6, !dbg !2071
  store i32 1, i32* %count, align 4, !dbg !2072
  %3 = load i8, i8* %reduce.addr, align 1, !dbg !2073
  %reduce3 = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %env, i32 0, i32 5, !dbg !2074
  store i8 %3, i8* %reduce3, align 8, !dbg !2075
  %4 = load %struct.cgraph_node*, %struct.cgraph_node** @cgraph_nodes, align 8, !dbg !2076
  store %struct.cgraph_node* %4, %struct.cgraph_node** %node, align 8, !dbg !2078
  br label %for.cond, !dbg !2079

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.cgraph_node*, %struct.cgraph_node** %node, align 8, !dbg !2080
  %tobool = icmp ne %struct.cgraph_node* %5, null, !dbg !2082
  br i1 %tobool, label %for.body, label %for.end, !dbg !2082

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %avail, metadata !2083, metadata !DIExpression()), !dbg !2085
  %6 = load %struct.cgraph_node*, %struct.cgraph_node** %node, align 8, !dbg !2086
  %call4 = call i32 @cgraph_function_body_availability(%struct.cgraph_node* %6), !dbg !2087
  store i32 %call4, i32* %avail, align 4, !dbg !2085
  %7 = load i32, i32* %avail, align 4, !dbg !2088
  %cmp = icmp ugt i32 %7, 2, !dbg !2090
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2091

lor.lhs.false:                                    ; preds = %for.body
  %8 = load i8, i8* %allow_overwritable.addr, align 1, !dbg !2092
  %conv6 = zext i8 %8 to i32, !dbg !2092
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !2092
  br i1 %tobool7, label %land.lhs.true, label %if.else, !dbg !2093

land.lhs.true:                                    ; preds = %lor.lhs.false
  %9 = load i32, i32* %avail, align 4, !dbg !2094
  %cmp8 = icmp eq i32 %9, 2, !dbg !2095
  br i1 %cmp8, label %if.then, label %if.else, !dbg !2096

if.then:                                          ; preds = %land.lhs.true, %for.body
  call void @llvm.dbg.declare(metadata %struct.ipa_dfs_info** %info, metadata !2097, metadata !DIExpression()), !dbg !2099
  %10 = load %struct.cgraph_node*, %struct.cgraph_node** %node, align 8, !dbg !2100
  %aux = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %10, i32 0, i32 16, !dbg !2101
  %11 = load i8*, i8** %aux, align 8, !dbg !2101
  %12 = bitcast i8* %11 to %struct.ipa_dfs_info*, !dbg !2102
  store %struct.ipa_dfs_info* %12, %struct.ipa_dfs_info** %info, align 8, !dbg !2099
  %13 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %info, align 8, !dbg !2103
  %tobool10 = icmp ne %struct.ipa_dfs_info* %13, null, !dbg !2103
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !2105

if.then11:                                        ; preds = %if.then
  %call12 = call i8* @xcalloc(i64 1, i64 32), !dbg !2106
  %14 = bitcast i8* %call12 to %struct.ipa_dfs_info*, !dbg !2106
  store %struct.ipa_dfs_info* %14, %struct.ipa_dfs_info** %info, align 8, !dbg !2107
  br label %if.end, !dbg !2108

if.end:                                           ; preds = %if.then11, %if.then
  %15 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %info, align 8, !dbg !2109
  %new_node = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %15, i32 0, i32 2, !dbg !2110
  store i8 1, i8* %new_node, align 8, !dbg !2111
  %16 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %info, align 8, !dbg !2112
  %on_stack = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %16, i32 0, i32 3, !dbg !2113
  store i8 0, i8* %on_stack, align 1, !dbg !2114
  %17 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %info, align 8, !dbg !2115
  %next_cycle = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %17, i32 0, i32 4, !dbg !2116
  store %struct.cgraph_node* null, %struct.cgraph_node** %next_cycle, align 8, !dbg !2117
  %18 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %info, align 8, !dbg !2118
  %19 = bitcast %struct.ipa_dfs_info* %18 to i8*, !dbg !2118
  %20 = load %struct.cgraph_node*, %struct.cgraph_node** %node, align 8, !dbg !2119
  %aux13 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %20, i32 0, i32 16, !dbg !2120
  store i8* %19, i8** %aux13, align 8, !dbg !2121
  %nodes_marked_new14 = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %env, i32 0, i32 4, !dbg !2122
  %21 = load %struct.splay_tree_s*, %struct.splay_tree_s** %nodes_marked_new14, align 8, !dbg !2122
  %22 = load %struct.cgraph_node*, %struct.cgraph_node** %node, align 8, !dbg !2123
  %uid = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %22, i32 0, i32 24, !dbg !2124
  %23 = load i32, i32* %uid, align 8, !dbg !2124
  %conv15 = sext i32 %23 to i64, !dbg !2125
  %24 = load %struct.cgraph_node*, %struct.cgraph_node** %node, align 8, !dbg !2126
  %25 = ptrtoint %struct.cgraph_node* %24 to i64, !dbg !2127
  %call16 = call %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s* %21, i64 %conv15, i64 %25), !dbg !2128
  br label %if.end18, !dbg !2129

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %26 = load %struct.cgraph_node*, %struct.cgraph_node** %node, align 8, !dbg !2130
  %aux17 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %26, i32 0, i32 16, !dbg !2131
  store i8* null, i8** %aux17, align 8, !dbg !2132
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.end
  br label %for.inc, !dbg !2133

for.inc:                                          ; preds = %if.end18
  %27 = load %struct.cgraph_node*, %struct.cgraph_node** %node, align 8, !dbg !2134
  %next = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %27, i32 0, i32 3, !dbg !2135
  %28 = load %struct.cgraph_node*, %struct.cgraph_node** %next, align 8, !dbg !2135
  store %struct.cgraph_node* %28, %struct.cgraph_node** %node, align 8, !dbg !2136
  br label %for.cond, !dbg !2137, !llvm.loop !2138

for.end:                                          ; preds = %for.cond
  %nodes_marked_new19 = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %env, i32 0, i32 4, !dbg !2140
  %29 = load %struct.splay_tree_s*, %struct.splay_tree_s** %nodes_marked_new19, align 8, !dbg !2140
  %call20 = call %struct.splay_tree_node_s* @splay_tree_min(%struct.splay_tree_s* %29), !dbg !2141
  store %struct.splay_tree_node_s* %call20, %struct.splay_tree_node_s** %result, align 8, !dbg !2142
  br label %while.cond, !dbg !2143

while.cond:                                       ; preds = %while.body, %for.end
  %30 = load %struct.splay_tree_node_s*, %struct.splay_tree_node_s** %result, align 8, !dbg !2144
  %tobool21 = icmp ne %struct.splay_tree_node_s* %30, null, !dbg !2143
  br i1 %tobool21, label %while.body, label %while.end, !dbg !2143

while.body:                                       ; preds = %while.cond
  %31 = load %struct.splay_tree_node_s*, %struct.splay_tree_node_s** %result, align 8, !dbg !2145
  %value = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %31, i32 0, i32 1, !dbg !2147
  %32 = load i64, i64* %value, align 8, !dbg !2147
  %33 = inttoptr i64 %32 to %struct.cgraph_node*, !dbg !2148
  store %struct.cgraph_node* %33, %struct.cgraph_node** %node, align 8, !dbg !2149
  %34 = load %struct.cgraph_node*, %struct.cgraph_node** %node, align 8, !dbg !2150
  %35 = load i8 (%struct.cgraph_edge*)*, i8 (%struct.cgraph_edge*)** %ignore_edge.addr, align 8, !dbg !2151
  call void @searchc(%struct.searchc_env* %env, %struct.cgraph_node* %34, i8 (%struct.cgraph_edge*)* %35), !dbg !2152
  %nodes_marked_new22 = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %env, i32 0, i32 4, !dbg !2153
  %36 = load %struct.splay_tree_s*, %struct.splay_tree_s** %nodes_marked_new22, align 8, !dbg !2153
  %call23 = call %struct.splay_tree_node_s* @splay_tree_min(%struct.splay_tree_s* %36), !dbg !2154
  store %struct.splay_tree_node_s* %call23, %struct.splay_tree_node_s** %result, align 8, !dbg !2155
  br label %while.cond, !dbg !2143, !llvm.loop !2156

while.end:                                        ; preds = %while.cond
  %nodes_marked_new24 = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %env, i32 0, i32 4, !dbg !2158
  %37 = load %struct.splay_tree_s*, %struct.splay_tree_s** %nodes_marked_new24, align 8, !dbg !2158
  call void @splay_tree_delete(%struct.splay_tree_s* %37), !dbg !2159
  %stack25 = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %env, i32 0, i32 0, !dbg !2160
  %38 = load %struct.cgraph_node**, %struct.cgraph_node*** %stack25, align 8, !dbg !2160
  %39 = bitcast %struct.cgraph_node** %38 to i8*, !dbg !2161
  call void @free(i8* %39), !dbg !2162
  %order_pos26 = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %env, i32 0, i32 3, !dbg !2163
  %40 = load i32, i32* %order_pos26, align 8, !dbg !2163
  ret i32 %40, !dbg !2164
}

declare dso_local i8* @xcalloc(i64, i64) #2

declare dso_local %struct.splay_tree_s* @splay_tree_new(i32 (i64, i64)*, void (i64)*, void (i64)*) #2

declare dso_local i32 @splay_tree_compare_ints(i64, i64) #2

declare dso_local i32 @cgraph_function_body_availability(%struct.cgraph_node*) #2

declare dso_local %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s*, i64, i64) #2

declare dso_local %struct.splay_tree_node_s* @splay_tree_min(%struct.splay_tree_s*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @searchc(%struct.searchc_env* %env, %struct.cgraph_node* %v, i8 (%struct.cgraph_edge*)* %ignore_edge) #0 !dbg !2165 {
entry:
  %env.addr = alloca %struct.searchc_env*, align 8
  %v.addr = alloca %struct.cgraph_node*, align 8
  %ignore_edge.addr = alloca i8 (%struct.cgraph_edge*)*, align 8
  %edge = alloca %struct.cgraph_edge*, align 8
  %v_info = alloca %struct.ipa_dfs_info*, align 8
  %w_info = alloca %struct.ipa_dfs_info*, align 8
  %w = alloca %struct.cgraph_node*, align 8
  %last = alloca %struct.cgraph_node*, align 8
  %x = alloca %struct.cgraph_node*, align 8
  %x_info = alloca %struct.ipa_dfs_info*, align 8
  store %struct.searchc_env* %env, %struct.searchc_env** %env.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.searchc_env** %env.addr, metadata !2169, metadata !DIExpression()), !dbg !2170
  store %struct.cgraph_node* %v, %struct.cgraph_node** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cgraph_node** %v.addr, metadata !2171, metadata !DIExpression()), !dbg !2172
  store i8 (%struct.cgraph_edge*)* %ignore_edge, i8 (%struct.cgraph_edge*)** %ignore_edge.addr, align 8
  call void @llvm.dbg.declare(metadata i8 (%struct.cgraph_edge*)** %ignore_edge.addr, metadata !2173, metadata !DIExpression()), !dbg !2174
  call void @llvm.dbg.declare(metadata %struct.cgraph_edge** %edge, metadata !2175, metadata !DIExpression()), !dbg !2176
  call void @llvm.dbg.declare(metadata %struct.ipa_dfs_info** %v_info, metadata !2177, metadata !DIExpression()), !dbg !2178
  %0 = load %struct.cgraph_node*, %struct.cgraph_node** %v.addr, align 8, !dbg !2179
  %aux = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %0, i32 0, i32 16, !dbg !2180
  %1 = load i8*, i8** %aux, align 8, !dbg !2180
  %2 = bitcast i8* %1 to %struct.ipa_dfs_info*, !dbg !2181
  store %struct.ipa_dfs_info* %2, %struct.ipa_dfs_info** %v_info, align 8, !dbg !2178
  %3 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %v_info, align 8, !dbg !2182
  %new_node = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %3, i32 0, i32 2, !dbg !2183
  store i8 0, i8* %new_node, align 8, !dbg !2184
  %4 = load %struct.searchc_env*, %struct.searchc_env** %env.addr, align 8, !dbg !2185
  %nodes_marked_new = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %4, i32 0, i32 4, !dbg !2186
  %5 = load %struct.splay_tree_s*, %struct.splay_tree_s** %nodes_marked_new, align 8, !dbg !2186
  %6 = load %struct.cgraph_node*, %struct.cgraph_node** %v.addr, align 8, !dbg !2187
  %uid = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %6, i32 0, i32 24, !dbg !2188
  %7 = load i32, i32* %uid, align 8, !dbg !2188
  %conv = sext i32 %7 to i64, !dbg !2187
  call void @splay_tree_remove(%struct.splay_tree_s* %5, i64 %conv), !dbg !2189
  %8 = load %struct.searchc_env*, %struct.searchc_env** %env.addr, align 8, !dbg !2190
  %count = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %8, i32 0, i32 6, !dbg !2191
  %9 = load i32, i32* %count, align 4, !dbg !2191
  %10 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %v_info, align 8, !dbg !2192
  %dfn_number = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %10, i32 0, i32 0, !dbg !2193
  store i32 %9, i32* %dfn_number, align 8, !dbg !2194
  %11 = load %struct.searchc_env*, %struct.searchc_env** %env.addr, align 8, !dbg !2195
  %count1 = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %11, i32 0, i32 6, !dbg !2196
  %12 = load i32, i32* %count1, align 4, !dbg !2196
  %13 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %v_info, align 8, !dbg !2197
  %low_link = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %13, i32 0, i32 1, !dbg !2198
  store i32 %12, i32* %low_link, align 4, !dbg !2199
  %14 = load %struct.searchc_env*, %struct.searchc_env** %env.addr, align 8, !dbg !2200
  %count2 = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %14, i32 0, i32 6, !dbg !2201
  %15 = load i32, i32* %count2, align 4, !dbg !2202
  %inc = add nsw i32 %15, 1, !dbg !2202
  store i32 %inc, i32* %count2, align 4, !dbg !2202
  %16 = load %struct.cgraph_node*, %struct.cgraph_node** %v.addr, align 8, !dbg !2203
  %17 = load %struct.searchc_env*, %struct.searchc_env** %env.addr, align 8, !dbg !2204
  %stack = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %17, i32 0, i32 0, !dbg !2205
  %18 = load %struct.cgraph_node**, %struct.cgraph_node*** %stack, align 8, !dbg !2205
  %19 = load %struct.searchc_env*, %struct.searchc_env** %env.addr, align 8, !dbg !2206
  %stack_size = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %19, i32 0, i32 1, !dbg !2207
  %20 = load i32, i32* %stack_size, align 8, !dbg !2208
  %inc3 = add nsw i32 %20, 1, !dbg !2208
  store i32 %inc3, i32* %stack_size, align 8, !dbg !2208
  %idxprom = sext i32 %20 to i64, !dbg !2204
  %arrayidx = getelementptr inbounds %struct.cgraph_node*, %struct.cgraph_node** %18, i64 %idxprom, !dbg !2204
  store %struct.cgraph_node* %16, %struct.cgraph_node** %arrayidx, align 8, !dbg !2209
  %21 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %v_info, align 8, !dbg !2210
  %on_stack = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %21, i32 0, i32 3, !dbg !2211
  store i8 1, i8* %on_stack, align 1, !dbg !2212
  %22 = load %struct.cgraph_node*, %struct.cgraph_node** %v.addr, align 8, !dbg !2213
  %callees = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %22, i32 0, i32 1, !dbg !2215
  %23 = load %struct.cgraph_edge*, %struct.cgraph_edge** %callees, align 8, !dbg !2215
  store %struct.cgraph_edge* %23, %struct.cgraph_edge** %edge, align 8, !dbg !2216
  br label %for.cond, !dbg !2217

for.cond:                                         ; preds = %for.inc, %entry
  %24 = load %struct.cgraph_edge*, %struct.cgraph_edge** %edge, align 8, !dbg !2218
  %tobool = icmp ne %struct.cgraph_edge* %24, null, !dbg !2220
  br i1 %tobool, label %for.body, label %for.end, !dbg !2220

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ipa_dfs_info** %w_info, metadata !2221, metadata !DIExpression()), !dbg !2223
  call void @llvm.dbg.declare(metadata %struct.cgraph_node** %w, metadata !2224, metadata !DIExpression()), !dbg !2225
  %25 = load %struct.cgraph_edge*, %struct.cgraph_edge** %edge, align 8, !dbg !2226
  %callee = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %25, i32 0, i32 2, !dbg !2227
  %26 = load %struct.cgraph_node*, %struct.cgraph_node** %callee, align 8, !dbg !2227
  store %struct.cgraph_node* %26, %struct.cgraph_node** %w, align 8, !dbg !2225
  %27 = load i8 (%struct.cgraph_edge*)*, i8 (%struct.cgraph_edge*)** %ignore_edge.addr, align 8, !dbg !2228
  %tobool4 = icmp ne i8 (%struct.cgraph_edge*)* %27, null, !dbg !2228
  br i1 %tobool4, label %land.lhs.true, label %if.end, !dbg !2230

land.lhs.true:                                    ; preds = %for.body
  %28 = load i8 (%struct.cgraph_edge*)*, i8 (%struct.cgraph_edge*)** %ignore_edge.addr, align 8, !dbg !2231
  %29 = load %struct.cgraph_edge*, %struct.cgraph_edge** %edge, align 8, !dbg !2232
  %call = call zeroext i8 %28(%struct.cgraph_edge* %29), !dbg !2231
  %conv5 = zext i8 %call to i32, !dbg !2231
  %tobool6 = icmp ne i32 %conv5, 0, !dbg !2231
  br i1 %tobool6, label %if.then, label %if.end, !dbg !2233

if.then:                                          ; preds = %land.lhs.true
  br label %for.inc, !dbg !2234

if.end:                                           ; preds = %land.lhs.true, %for.body
  %30 = load %struct.cgraph_node*, %struct.cgraph_node** %w, align 8, !dbg !2235
  %aux7 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %30, i32 0, i32 16, !dbg !2237
  %31 = load i8*, i8** %aux7, align 8, !dbg !2237
  %tobool8 = icmp ne i8* %31, null, !dbg !2235
  br i1 %tobool8, label %land.lhs.true9, label %if.end47, !dbg !2238

land.lhs.true9:                                   ; preds = %if.end
  %32 = load %struct.cgraph_edge*, %struct.cgraph_edge** %edge, align 8, !dbg !2239
  %callee10 = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %32, i32 0, i32 2, !dbg !2240
  %33 = load %struct.cgraph_node*, %struct.cgraph_node** %callee10, align 8, !dbg !2240
  %call11 = call i32 @cgraph_function_body_availability(%struct.cgraph_node* %33), !dbg !2241
  %cmp = icmp ugt i32 %call11, 2, !dbg !2242
  br i1 %cmp, label %if.then13, label %if.end47, !dbg !2243

if.then13:                                        ; preds = %land.lhs.true9
  %34 = load %struct.cgraph_node*, %struct.cgraph_node** %w, align 8, !dbg !2244
  %aux14 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %34, i32 0, i32 16, !dbg !2246
  %35 = load i8*, i8** %aux14, align 8, !dbg !2246
  %36 = bitcast i8* %35 to %struct.ipa_dfs_info*, !dbg !2247
  store %struct.ipa_dfs_info* %36, %struct.ipa_dfs_info** %w_info, align 8, !dbg !2248
  %37 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %w_info, align 8, !dbg !2249
  %new_node15 = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %37, i32 0, i32 2, !dbg !2251
  %38 = load i8, i8* %new_node15, align 8, !dbg !2251
  %tobool16 = icmp ne i8 %38, 0, !dbg !2249
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !2252

if.then17:                                        ; preds = %if.then13
  %39 = load %struct.searchc_env*, %struct.searchc_env** %env.addr, align 8, !dbg !2253
  %40 = load %struct.cgraph_node*, %struct.cgraph_node** %w, align 8, !dbg !2255
  %41 = load i8 (%struct.cgraph_edge*)*, i8 (%struct.cgraph_edge*)** %ignore_edge.addr, align 8, !dbg !2256
  call void @searchc(%struct.searchc_env* %39, %struct.cgraph_node* %40, i8 (%struct.cgraph_edge*)* %41), !dbg !2257
  %42 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %v_info, align 8, !dbg !2258
  %low_link18 = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %42, i32 0, i32 1, !dbg !2259
  %43 = load i32, i32* %low_link18, align 4, !dbg !2259
  %44 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %w_info, align 8, !dbg !2260
  %low_link19 = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %44, i32 0, i32 1, !dbg !2261
  %45 = load i32, i32* %low_link19, align 4, !dbg !2261
  %cmp20 = icmp slt i32 %43, %45, !dbg !2262
  br i1 %cmp20, label %cond.true, label %cond.false, !dbg !2263

cond.true:                                        ; preds = %if.then17
  %46 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %v_info, align 8, !dbg !2264
  %low_link22 = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %46, i32 0, i32 1, !dbg !2265
  %47 = load i32, i32* %low_link22, align 4, !dbg !2265
  br label %cond.end, !dbg !2263

cond.false:                                       ; preds = %if.then17
  %48 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %w_info, align 8, !dbg !2266
  %low_link23 = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %48, i32 0, i32 1, !dbg !2267
  %49 = load i32, i32* %low_link23, align 4, !dbg !2267
  br label %cond.end, !dbg !2263

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %47, %cond.true ], [ %49, %cond.false ], !dbg !2263
  %50 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %v_info, align 8, !dbg !2268
  %low_link24 = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %50, i32 0, i32 1, !dbg !2269
  store i32 %cond, i32* %low_link24, align 4, !dbg !2270
  br label %if.end46, !dbg !2271

if.else:                                          ; preds = %if.then13
  %51 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %w_info, align 8, !dbg !2272
  %dfn_number25 = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %51, i32 0, i32 0, !dbg !2274
  %52 = load i32, i32* %dfn_number25, align 8, !dbg !2274
  %53 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %v_info, align 8, !dbg !2275
  %dfn_number26 = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %53, i32 0, i32 0, !dbg !2276
  %54 = load i32, i32* %dfn_number26, align 8, !dbg !2276
  %cmp27 = icmp slt i32 %52, %54, !dbg !2277
  br i1 %cmp27, label %land.lhs.true29, label %if.end45, !dbg !2278

land.lhs.true29:                                  ; preds = %if.else
  %55 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %w_info, align 8, !dbg !2279
  %on_stack30 = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %55, i32 0, i32 3, !dbg !2280
  %56 = load i8, i8* %on_stack30, align 1, !dbg !2280
  %conv31 = zext i8 %56 to i32, !dbg !2281
  %tobool32 = icmp ne i32 %conv31, 0, !dbg !2281
  br i1 %tobool32, label %if.then33, label %if.end45, !dbg !2282

if.then33:                                        ; preds = %land.lhs.true29
  %57 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %w_info, align 8, !dbg !2283
  %dfn_number34 = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %57, i32 0, i32 0, !dbg !2284
  %58 = load i32, i32* %dfn_number34, align 8, !dbg !2284
  %59 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %v_info, align 8, !dbg !2285
  %low_link35 = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %59, i32 0, i32 1, !dbg !2286
  %60 = load i32, i32* %low_link35, align 4, !dbg !2286
  %cmp36 = icmp slt i32 %58, %60, !dbg !2287
  br i1 %cmp36, label %cond.true38, label %cond.false40, !dbg !2288

cond.true38:                                      ; preds = %if.then33
  %61 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %w_info, align 8, !dbg !2289
  %dfn_number39 = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %61, i32 0, i32 0, !dbg !2290
  %62 = load i32, i32* %dfn_number39, align 8, !dbg !2290
  br label %cond.end42, !dbg !2288

cond.false40:                                     ; preds = %if.then33
  %63 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %v_info, align 8, !dbg !2291
  %low_link41 = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %63, i32 0, i32 1, !dbg !2292
  %64 = load i32, i32* %low_link41, align 4, !dbg !2292
  br label %cond.end42, !dbg !2288

cond.end42:                                       ; preds = %cond.false40, %cond.true38
  %cond43 = phi i32 [ %62, %cond.true38 ], [ %64, %cond.false40 ], !dbg !2288
  %65 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %v_info, align 8, !dbg !2293
  %low_link44 = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %65, i32 0, i32 1, !dbg !2294
  store i32 %cond43, i32* %low_link44, align 4, !dbg !2295
  br label %if.end45, !dbg !2293

if.end45:                                         ; preds = %cond.end42, %land.lhs.true29, %if.else
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %cond.end
  br label %if.end47, !dbg !2296

if.end47:                                         ; preds = %if.end46, %land.lhs.true9, %if.end
  br label %for.inc, !dbg !2297

for.inc:                                          ; preds = %if.end47, %if.then
  %66 = load %struct.cgraph_edge*, %struct.cgraph_edge** %edge, align 8, !dbg !2298
  %next_callee = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %66, i32 0, i32 6, !dbg !2299
  %67 = load %struct.cgraph_edge*, %struct.cgraph_edge** %next_callee, align 8, !dbg !2299
  store %struct.cgraph_edge* %67, %struct.cgraph_edge** %edge, align 8, !dbg !2300
  br label %for.cond, !dbg !2301, !llvm.loop !2302

for.end:                                          ; preds = %for.cond
  %68 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %v_info, align 8, !dbg !2304
  %low_link48 = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %68, i32 0, i32 1, !dbg !2306
  %69 = load i32, i32* %low_link48, align 4, !dbg !2306
  %70 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %v_info, align 8, !dbg !2307
  %dfn_number49 = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %70, i32 0, i32 0, !dbg !2308
  %71 = load i32, i32* %dfn_number49, align 8, !dbg !2308
  %cmp50 = icmp eq i32 %69, %71, !dbg !2309
  br i1 %cmp50, label %if.then52, label %if.end77, !dbg !2310

if.then52:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.cgraph_node** %last, metadata !2311, metadata !DIExpression()), !dbg !2313
  store %struct.cgraph_node* null, %struct.cgraph_node** %last, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata %struct.cgraph_node** %x, metadata !2314, metadata !DIExpression()), !dbg !2315
  call void @llvm.dbg.declare(metadata %struct.ipa_dfs_info** %x_info, metadata !2316, metadata !DIExpression()), !dbg !2317
  br label %do.body, !dbg !2318

do.body:                                          ; preds = %do.cond, %if.then52
  %72 = load %struct.searchc_env*, %struct.searchc_env** %env.addr, align 8, !dbg !2319
  %stack53 = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %72, i32 0, i32 0, !dbg !2321
  %73 = load %struct.cgraph_node**, %struct.cgraph_node*** %stack53, align 8, !dbg !2321
  %74 = load %struct.searchc_env*, %struct.searchc_env** %env.addr, align 8, !dbg !2322
  %stack_size54 = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %74, i32 0, i32 1, !dbg !2323
  %75 = load i32, i32* %stack_size54, align 8, !dbg !2324
  %dec = add nsw i32 %75, -1, !dbg !2324
  store i32 %dec, i32* %stack_size54, align 8, !dbg !2324
  %idxprom55 = sext i32 %dec to i64, !dbg !2319
  %arrayidx56 = getelementptr inbounds %struct.cgraph_node*, %struct.cgraph_node** %73, i64 %idxprom55, !dbg !2319
  %76 = load %struct.cgraph_node*, %struct.cgraph_node** %arrayidx56, align 8, !dbg !2319
  store %struct.cgraph_node* %76, %struct.cgraph_node** %x, align 8, !dbg !2325
  %77 = load %struct.cgraph_node*, %struct.cgraph_node** %x, align 8, !dbg !2326
  %aux57 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %77, i32 0, i32 16, !dbg !2327
  %78 = load i8*, i8** %aux57, align 8, !dbg !2327
  %79 = bitcast i8* %78 to %struct.ipa_dfs_info*, !dbg !2328
  store %struct.ipa_dfs_info* %79, %struct.ipa_dfs_info** %x_info, align 8, !dbg !2329
  %80 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %x_info, align 8, !dbg !2330
  %on_stack58 = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %80, i32 0, i32 3, !dbg !2331
  store i8 0, i8* %on_stack58, align 1, !dbg !2332
  %81 = load %struct.searchc_env*, %struct.searchc_env** %env.addr, align 8, !dbg !2333
  %reduce = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %81, i32 0, i32 5, !dbg !2335
  %82 = load i8, i8* %reduce, align 8, !dbg !2335
  %tobool59 = icmp ne i8 %82, 0, !dbg !2333
  br i1 %tobool59, label %if.then60, label %if.else61, !dbg !2336

if.then60:                                        ; preds = %do.body
  %83 = load %struct.cgraph_node*, %struct.cgraph_node** %last, align 8, !dbg !2337
  %84 = load %struct.ipa_dfs_info*, %struct.ipa_dfs_info** %x_info, align 8, !dbg !2339
  %next_cycle = getelementptr inbounds %struct.ipa_dfs_info, %struct.ipa_dfs_info* %84, i32 0, i32 4, !dbg !2340
  store %struct.cgraph_node* %83, %struct.cgraph_node** %next_cycle, align 8, !dbg !2341
  %85 = load %struct.cgraph_node*, %struct.cgraph_node** %x, align 8, !dbg !2342
  store %struct.cgraph_node* %85, %struct.cgraph_node** %last, align 8, !dbg !2343
  br label %if.end65, !dbg !2344

if.else61:                                        ; preds = %do.body
  %86 = load %struct.cgraph_node*, %struct.cgraph_node** %x, align 8, !dbg !2345
  %87 = load %struct.searchc_env*, %struct.searchc_env** %env.addr, align 8, !dbg !2346
  %result = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %87, i32 0, i32 2, !dbg !2347
  %88 = load %struct.cgraph_node**, %struct.cgraph_node*** %result, align 8, !dbg !2347
  %89 = load %struct.searchc_env*, %struct.searchc_env** %env.addr, align 8, !dbg !2348
  %order_pos = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %89, i32 0, i32 3, !dbg !2349
  %90 = load i32, i32* %order_pos, align 8, !dbg !2350
  %inc62 = add nsw i32 %90, 1, !dbg !2350
  store i32 %inc62, i32* %order_pos, align 8, !dbg !2350
  %idxprom63 = sext i32 %90 to i64, !dbg !2346
  %arrayidx64 = getelementptr inbounds %struct.cgraph_node*, %struct.cgraph_node** %88, i64 %idxprom63, !dbg !2346
  store %struct.cgraph_node* %86, %struct.cgraph_node** %arrayidx64, align 8, !dbg !2351
  br label %if.end65

if.end65:                                         ; preds = %if.else61, %if.then60
  br label %do.cond, !dbg !2352

do.cond:                                          ; preds = %if.end65
  %91 = load %struct.cgraph_node*, %struct.cgraph_node** %v.addr, align 8, !dbg !2353
  %92 = load %struct.cgraph_node*, %struct.cgraph_node** %x, align 8, !dbg !2354
  %cmp66 = icmp ne %struct.cgraph_node* %91, %92, !dbg !2355
  br i1 %cmp66, label %do.body, label %do.end, !dbg !2352, !llvm.loop !2356

do.end:                                           ; preds = %do.cond
  %93 = load %struct.searchc_env*, %struct.searchc_env** %env.addr, align 8, !dbg !2358
  %reduce68 = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %93, i32 0, i32 5, !dbg !2360
  %94 = load i8, i8* %reduce68, align 8, !dbg !2360
  %tobool69 = icmp ne i8 %94, 0, !dbg !2358
  br i1 %tobool69, label %if.then70, label %if.end76, !dbg !2361

if.then70:                                        ; preds = %do.end
  %95 = load %struct.cgraph_node*, %struct.cgraph_node** %v.addr, align 8, !dbg !2362
  %96 = load %struct.searchc_env*, %struct.searchc_env** %env.addr, align 8, !dbg !2363
  %result71 = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %96, i32 0, i32 2, !dbg !2364
  %97 = load %struct.cgraph_node**, %struct.cgraph_node*** %result71, align 8, !dbg !2364
  %98 = load %struct.searchc_env*, %struct.searchc_env** %env.addr, align 8, !dbg !2365
  %order_pos72 = getelementptr inbounds %struct.searchc_env, %struct.searchc_env* %98, i32 0, i32 3, !dbg !2366
  %99 = load i32, i32* %order_pos72, align 8, !dbg !2367
  %inc73 = add nsw i32 %99, 1, !dbg !2367
  store i32 %inc73, i32* %order_pos72, align 8, !dbg !2367
  %idxprom74 = sext i32 %99 to i64, !dbg !2363
  %arrayidx75 = getelementptr inbounds %struct.cgraph_node*, %struct.cgraph_node** %97, i64 %idxprom74, !dbg !2363
  store %struct.cgraph_node* %95, %struct.cgraph_node** %arrayidx75, align 8, !dbg !2368
  br label %if.end76, !dbg !2363

if.end76:                                         ; preds = %if.then70, %do.end
  br label %if.end77, !dbg !2369

if.end77:                                         ; preds = %if.end76, %for.end
  ret void, !dbg !2370
}

declare dso_local void @splay_tree_delete(%struct.splay_tree_s*) #2

declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %union.tree_node* @get_base_var(%union.tree_node* %t) #0 !dbg !2371 {
entry:
  %t.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %t, %union.tree_node** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %union.tree_node** %t.addr, metadata !2374, metadata !DIExpression()), !dbg !2375
  br label %while.cond, !dbg !2376

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %union.tree_node*, %union.tree_node** %t.addr, align 8, !dbg !2377
  %base = bitcast %union.tree_node* %0 to %struct.tree_base*, !dbg !2377
  %1 = bitcast %struct.tree_base* %base to i64*, !dbg !2377
  %bf.load = load i64, i64* %1, align 8, !dbg !2377
  %bf.clear = and i64 %bf.load, 65535, !dbg !2377
  %bf.cast = trunc i64 %bf.clear to i32, !dbg !2377
  %cmp = icmp eq i32 %bf.cast, 32, !dbg !2377
  br i1 %cmp, label %land.end, label %lor.lhs.false, !dbg !2377

lor.lhs.false:                                    ; preds = %while.cond
  %2 = load %union.tree_node*, %union.tree_node** %t.addr, align 8, !dbg !2377
  %base1 = bitcast %union.tree_node* %2 to %struct.tree_base*, !dbg !2377
  %3 = bitcast %struct.tree_base* %base1 to i64*, !dbg !2377
  %bf.load2 = load i64, i64* %3, align 8, !dbg !2377
  %bf.clear3 = and i64 %bf.load2, 65535, !dbg !2377
  %bf.cast4 = trunc i64 %bf.clear3 to i32, !dbg !2377
  %cmp5 = icmp eq i32 %bf.cast4, 34, !dbg !2377
  br i1 %cmp5, label %land.end, label %lor.lhs.false6, !dbg !2377

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %4 = load %union.tree_node*, %union.tree_node** %t.addr, align 8, !dbg !2377
  %base7 = bitcast %union.tree_node* %4 to %struct.tree_base*, !dbg !2377
  %5 = bitcast %struct.tree_base* %base7 to i64*, !dbg !2377
  %bf.load8 = load i64, i64* %5, align 8, !dbg !2377
  %bf.clear9 = and i64 %bf.load8, 65535, !dbg !2377
  %bf.cast10 = trunc i64 %bf.clear9 to i32, !dbg !2377
  %cmp11 = icmp eq i32 %bf.cast10, 36, !dbg !2377
  br i1 %cmp11, label %land.end, label %lor.lhs.false12, !dbg !2377

lor.lhs.false12:                                  ; preds = %lor.lhs.false6
  %6 = load %union.tree_node*, %union.tree_node** %t.addr, align 8, !dbg !2377
  %base13 = bitcast %union.tree_node* %6 to %struct.tree_base*, !dbg !2377
  %7 = bitcast %struct.tree_base* %base13 to i64*, !dbg !2377
  %bf.load14 = load i64, i64* %7, align 8, !dbg !2377
  %bf.clear15 = and i64 %bf.load14, 65535, !dbg !2377
  %bf.cast16 = trunc i64 %bf.clear15 to i32, !dbg !2377
  %cmp17 = icmp eq i32 %bf.cast16, 141, !dbg !2377
  br i1 %cmp17, label %land.lhs.true, label %land.lhs.true39, !dbg !2377

land.lhs.true:                                    ; preds = %lor.lhs.false12
  %8 = load %union.tree_node*, %union.tree_node** %t.addr, align 8, !dbg !2377
  %ssa_name = bitcast %union.tree_node* %8 to %struct.tree_ssa_name*, !dbg !2377
  %var = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %ssa_name, i32 0, i32 1, !dbg !2377
  %9 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !2377
  %base18 = bitcast %union.tree_node* %9 to %struct.tree_base*, !dbg !2377
  %10 = bitcast %struct.tree_base* %base18 to i64*, !dbg !2377
  %bf.load19 = load i64, i64* %10, align 8, !dbg !2377
  %bf.clear20 = and i64 %bf.load19, 65535, !dbg !2377
  %bf.cast21 = trunc i64 %bf.clear20 to i32, !dbg !2377
  %cmp22 = icmp eq i32 %bf.cast21, 32, !dbg !2377
  br i1 %cmp22, label %land.end, label %lor.lhs.false23, !dbg !2377

lor.lhs.false23:                                  ; preds = %land.lhs.true
  %11 = load %union.tree_node*, %union.tree_node** %t.addr, align 8, !dbg !2377
  %ssa_name24 = bitcast %union.tree_node* %11 to %struct.tree_ssa_name*, !dbg !2377
  %var25 = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %ssa_name24, i32 0, i32 1, !dbg !2377
  %12 = load %union.tree_node*, %union.tree_node** %var25, align 8, !dbg !2377
  %base26 = bitcast %union.tree_node* %12 to %struct.tree_base*, !dbg !2377
  %13 = bitcast %struct.tree_base* %base26 to i64*, !dbg !2377
  %bf.load27 = load i64, i64* %13, align 8, !dbg !2377
  %bf.clear28 = and i64 %bf.load27, 65535, !dbg !2377
  %bf.cast29 = trunc i64 %bf.clear28 to i32, !dbg !2377
  %cmp30 = icmp eq i32 %bf.cast29, 34, !dbg !2377
  br i1 %cmp30, label %land.end, label %lor.lhs.false31, !dbg !2377

lor.lhs.false31:                                  ; preds = %lor.lhs.false23
  %14 = load %union.tree_node*, %union.tree_node** %t.addr, align 8, !dbg !2377
  %ssa_name32 = bitcast %union.tree_node* %14 to %struct.tree_ssa_name*, !dbg !2377
  %var33 = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %ssa_name32, i32 0, i32 1, !dbg !2377
  %15 = load %union.tree_node*, %union.tree_node** %var33, align 8, !dbg !2377
  %base34 = bitcast %union.tree_node* %15 to %struct.tree_base*, !dbg !2377
  %16 = bitcast %struct.tree_base* %base34 to i64*, !dbg !2377
  %bf.load35 = load i64, i64* %16, align 8, !dbg !2377
  %bf.clear36 = and i64 %bf.load35, 65535, !dbg !2377
  %bf.cast37 = trunc i64 %bf.clear36 to i32, !dbg !2377
  %cmp38 = icmp eq i32 %bf.cast37, 36, !dbg !2377
  br i1 %cmp38, label %land.end, label %land.lhs.true39, !dbg !2378

land.lhs.true39:                                  ; preds = %lor.lhs.false31, %lor.lhs.false12
  %17 = load %union.tree_node*, %union.tree_node** %t.addr, align 8, !dbg !2379
  %base40 = bitcast %union.tree_node* %17 to %struct.tree_base*, !dbg !2379
  %18 = bitcast %struct.tree_base* %base40 to i64*, !dbg !2379
  %bf.load41 = load i64, i64* %18, align 8, !dbg !2379
  %bf.clear42 = and i64 %bf.load41, 65535, !dbg !2379
  %bf.cast43 = trunc i64 %bf.clear42 to i32, !dbg !2379
  %idxprom = sext i32 %bf.cast43 to i64, !dbg !2379
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !2379
  %19 = load i32, i32* %arrayidx, align 4, !dbg !2379
  %cmp44 = icmp eq i32 %19, 1, !dbg !2379
  br i1 %cmp44, label %land.end, label %land.lhs.true45, !dbg !2380

land.lhs.true45:                                  ; preds = %land.lhs.true39
  %20 = load %union.tree_node*, %union.tree_node** %t.addr, align 8, !dbg !2381
  %base46 = bitcast %union.tree_node* %20 to %struct.tree_base*, !dbg !2381
  %21 = bitcast %struct.tree_base* %base46 to i64*, !dbg !2381
  %bf.load47 = load i64, i64* %21, align 8, !dbg !2381
  %bf.clear48 = and i64 %bf.load47, 65535, !dbg !2381
  %bf.cast49 = trunc i64 %bf.clear48 to i32, !dbg !2381
  %cmp50 = icmp ne i32 %bf.cast49, 30, !dbg !2382
  br i1 %cmp50, label %land.lhs.true51, label %land.end, !dbg !2383

land.lhs.true51:                                  ; preds = %land.lhs.true45
  %22 = load %union.tree_node*, %union.tree_node** %t.addr, align 8, !dbg !2384
  %base52 = bitcast %union.tree_node* %22 to %struct.tree_base*, !dbg !2384
  %23 = bitcast %struct.tree_base* %base52 to i64*, !dbg !2384
  %bf.load53 = load i64, i64* %23, align 8, !dbg !2384
  %bf.clear54 = and i64 %bf.load53, 65535, !dbg !2384
  %bf.cast55 = trunc i64 %bf.clear54 to i32, !dbg !2384
  %cmp56 = icmp ne i32 %bf.cast55, 29, !dbg !2385
  br i1 %cmp56, label %land.lhs.true57, label %land.end, !dbg !2386

land.lhs.true57:                                  ; preds = %land.lhs.true51
  %24 = load %union.tree_node*, %union.tree_node** %t.addr, align 8, !dbg !2387
  %base58 = bitcast %union.tree_node* %24 to %struct.tree_base*, !dbg !2387
  %25 = bitcast %struct.tree_base* %base58 to i64*, !dbg !2387
  %bf.load59 = load i64, i64* %25, align 8, !dbg !2387
  %bf.clear60 = and i64 %bf.load59, 65535, !dbg !2387
  %bf.cast61 = trunc i64 %bf.clear60 to i32, !dbg !2387
  %cmp62 = icmp ne i32 %bf.cast61, 33, !dbg !2388
  br i1 %cmp62, label %land.rhs, label %land.end, !dbg !2389

land.rhs:                                         ; preds = %land.lhs.true57
  %26 = load %union.tree_node*, %union.tree_node** %t.addr, align 8, !dbg !2390
  %base63 = bitcast %union.tree_node* %26 to %struct.tree_base*, !dbg !2390
  %27 = bitcast %struct.tree_base* %base63 to i64*, !dbg !2390
  %bf.load64 = load i64, i64* %27, align 8, !dbg !2390
  %bf.clear65 = and i64 %bf.load64, 65535, !dbg !2390
  %bf.cast66 = trunc i64 %bf.clear65 to i32, !dbg !2390
  %cmp67 = icmp ne i32 %bf.cast66, 51, !dbg !2391
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true57, %land.lhs.true51, %land.lhs.true45, %land.lhs.true39, %lor.lhs.false31, %lor.lhs.false23, %land.lhs.true, %lor.lhs.false6, %lor.lhs.false, %while.cond
  %28 = phi i1 [ false, %land.lhs.true57 ], [ false, %land.lhs.true51 ], [ false, %land.lhs.true45 ], [ false, %land.lhs.true39 ], [ false, %lor.lhs.false31 ], [ false, %lor.lhs.false23 ], [ false, %land.lhs.true ], [ false, %lor.lhs.false6 ], [ false, %lor.lhs.false ], [ false, %while.cond ], [ %cmp67, %land.rhs ], !dbg !2392
  br i1 %28, label %while.body, label %while.end, !dbg !2376

while.body:                                       ; preds = %land.end
  %29 = load %union.tree_node*, %union.tree_node** %t.addr, align 8, !dbg !2393
  %exp = bitcast %union.tree_node* %29 to %struct.tree_exp*, !dbg !2393
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 3, !dbg !2393
  %arrayidx68 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i64 0, i64 0, !dbg !2393
  %30 = load %union.tree_node*, %union.tree_node** %arrayidx68, align 8, !dbg !2393
  store %union.tree_node* %30, %union.tree_node** %t.addr, align 8, !dbg !2395
  br label %while.cond, !dbg !2376, !llvm.loop !2396

while.end:                                        ; preds = %land.end
  %31 = load %union.tree_node*, %union.tree_node** %t.addr, align 8, !dbg !2398
  ret %union.tree_node* %31, !dbg !2399
}

declare dso_local void @splay_tree_remove(%struct.splay_tree_s*, i64) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1900, !1901, !1902}
!llvm.ident = !{!1903}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !473, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "ipa-utils.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !199, !205, !210, !215, !233, !240, !247, !270, !277, !453, !460}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !4, line: 39, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "./tree.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198}
!7 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!9 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!10 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!11 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!12 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!13 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!14 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!15 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!16 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!17 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!18 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!19 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!20 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!21 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!22 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!23 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!24 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!25 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!26 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!27 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!28 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!29 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!30 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!31 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!32 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!33 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!34 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!35 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!36 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!37 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!38 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!39 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!40 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!41 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!42 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!43 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!44 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!45 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!46 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!47 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!48 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!49 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!50 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!51 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!52 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!53 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!54 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!55 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!56 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!57 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!58 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!59 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!60 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!61 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!62 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!63 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!64 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!65 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!66 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!67 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!68 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!69 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!70 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!71 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!72 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!73 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!74 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!75 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!76 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!77 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!78 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!79 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!80 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!81 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!82 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!83 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!84 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!85 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!86 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!87 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!88 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!89 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!90 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!91 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!92 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!93 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!94 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!95 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!96 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!97 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!98 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!99 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!100 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!101 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!102 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!103 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!104 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!105 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!106 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!107 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!108 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!109 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!110 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!111 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!112 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!113 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!114 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!115 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!116 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!117 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!118 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!119 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!120 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!121 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!122 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!123 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!124 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!125 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!126 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!127 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!128 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!129 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!130 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!131 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!132 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!133 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!134 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!135 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!136 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!137 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!138 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!139 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!140 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!141 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!142 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!143 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!144 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!145 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!146 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!147 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!148 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!149 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!150 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!151 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!152 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!153 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!154 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!155 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!156 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!157 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!158 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!159 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!160 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!169 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!170 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!171 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!172 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!173 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!174 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!175 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!176 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!177 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!178 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!179 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!180 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!181 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!182 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!183 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!184 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!185 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!186 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!187 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!188 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!189 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!190 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!191 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!192 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!193 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!194 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!195 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!196 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!197 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!198 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!199 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !200, line: 363, baseType: !5, size: 32, elements: !201)
!200 = !DIFile(filename: "./basic-block.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!201 = !{!202, !203, !204}
!202 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!203 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!204 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!205 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !200, line: 355, baseType: !5, size: 32, elements: !206)
!206 = !{!207, !208, !209}
!207 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!208 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!209 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!210 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !211, line: 474, baseType: !5, size: 32, elements: !212)
!211 = !DIFile(filename: "./config/i386/i386.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!212 = !{!213, !214}
!213 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!214 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!215 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !4, line: 280, baseType: !5, size: 32, elements: !216)
!216 = !{!217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232}
!217 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!218 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!219 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!220 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!221 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!222 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!223 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!224 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!225 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!226 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!227 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!228 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!229 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!230 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!231 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!232 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!233 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !4, line: 1817, baseType: !5, size: 32, elements: !234)
!234 = !{!235, !236, !237, !238, !239}
!235 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!236 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!237 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!238 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!239 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!240 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !4, line: 1805, baseType: !5, size: 32, elements: !241)
!241 = !{!242, !243, !244, !245, !246}
!242 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!243 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!244 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!245 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!246 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!247 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !248, line: 309, baseType: !5, size: 32, elements: !249)
!248 = !DIFile(filename: "./cgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!249 = !{!250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269}
!250 = !DIEnumerator(name: "CIF_OK", value: 0, isUnsigned: true)
!251 = !DIEnumerator(name: "CIF_UNSPECIFIED", value: 1, isUnsigned: true)
!252 = !DIEnumerator(name: "CIF_FUNCTION_NOT_CONSIDERED", value: 2, isUnsigned: true)
!253 = !DIEnumerator(name: "CIF_BODY_NOT_AVAILABLE", value: 3, isUnsigned: true)
!254 = !DIEnumerator(name: "CIF_REDEFINED_EXTERN_INLINE", value: 4, isUnsigned: true)
!255 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINABLE", value: 5, isUnsigned: true)
!256 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINE_CANDIDATE", value: 6, isUnsigned: true)
!257 = !DIEnumerator(name: "CIF_LARGE_FUNCTION_GROWTH_LIMIT", value: 7, isUnsigned: true)
!258 = !DIEnumerator(name: "CIF_LARGE_STACK_FRAME_GROWTH_LIMIT", value: 8, isUnsigned: true)
!259 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_SINGLE_LIMIT", value: 9, isUnsigned: true)
!260 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_AUTO_LIMIT", value: 10, isUnsigned: true)
!261 = !DIEnumerator(name: "CIF_INLINE_UNIT_GROWTH_LIMIT", value: 11, isUnsigned: true)
!262 = !DIEnumerator(name: "CIF_RECURSIVE_INLINING", value: 12, isUnsigned: true)
!263 = !DIEnumerator(name: "CIF_UNLIKELY_CALL", value: 13, isUnsigned: true)
!264 = !DIEnumerator(name: "CIF_NOT_DECLARED_INLINED", value: 14, isUnsigned: true)
!265 = !DIEnumerator(name: "CIF_OPTIMIZING_FOR_SIZE", value: 15, isUnsigned: true)
!266 = !DIEnumerator(name: "CIF_TARGET_OPTION_MISMATCH", value: 16, isUnsigned: true)
!267 = !DIEnumerator(name: "CIF_MISMATCHED_ARGUMENTS", value: 17, isUnsigned: true)
!268 = !DIEnumerator(name: "CIF_ORIGINALLY_INDIRECT_CALL", value: 18, isUnsigned: true)
!269 = !DIEnumerator(name: "CIF_N_REASONS", value: 19, isUnsigned: true)
!270 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !271, line: 104, baseType: !5, size: 32, elements: !272)
!271 = !DIFile(filename: "./tree-pass.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!272 = !{!273, !274, !275, !276}
!273 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!274 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!275 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!276 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!277 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !278, line: 74, baseType: !5, size: 32, elements: !279)
!278 = !DIFile(filename: "./timevar.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!279 = !{!280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452}
!280 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!281 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!282 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!283 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!284 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!285 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!286 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!287 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!288 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!289 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!290 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!291 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!292 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!293 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!294 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!295 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!296 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!297 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!298 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!299 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!300 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!301 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!302 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!303 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!304 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!305 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!306 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!307 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!308 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!309 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!310 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!311 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!312 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!313 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!314 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!315 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!316 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!317 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!318 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!319 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!320 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!321 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!322 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!323 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!324 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!325 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!326 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!327 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!328 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!329 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!330 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!331 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!332 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!333 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!334 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!335 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!336 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!337 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!338 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!339 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!340 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!341 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!342 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!343 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!344 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!345 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!346 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!347 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!348 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!349 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!350 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!351 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!352 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!353 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!354 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!355 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!356 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!357 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!358 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!359 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!360 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!361 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!362 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!363 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!364 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!365 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!366 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!367 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!368 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!369 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!370 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!371 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!372 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!373 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!374 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!375 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!376 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!377 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!378 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!379 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!380 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!381 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!382 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!383 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!384 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!385 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!386 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!387 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!388 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!389 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!390 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!391 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!392 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!393 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!394 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!395 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!396 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!397 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!398 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!399 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!400 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!401 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!402 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!403 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!404 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!405 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!406 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!407 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!408 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!409 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!410 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!411 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!412 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!413 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!414 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!415 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!416 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!417 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!418 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!419 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!420 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!421 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!422 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!423 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!424 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!425 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!426 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!427 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!428 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!429 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!430 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!431 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!432 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!433 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!434 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!435 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!436 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!437 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!438 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!439 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!440 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!441 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!442 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!443 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!444 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!445 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!446 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!447 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!448 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!449 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!450 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!451 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!452 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!453 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "availability", file: !248, line: 27, baseType: !5, size: 32, elements: !454)
!454 = !{!455, !456, !457, !458, !459}
!455 = !DIEnumerator(name: "AVAIL_UNSET", value: 0, isUnsigned: true)
!456 = !DIEnumerator(name: "AVAIL_NOT_AVAILABLE", value: 1, isUnsigned: true)
!457 = !DIEnumerator(name: "AVAIL_OVERWRITABLE", value: 2, isUnsigned: true)
!458 = !DIEnumerator(name: "AVAIL_AVAILABLE", value: 3, isUnsigned: true)
!459 = !DIEnumerator(name: "AVAIL_LOCAL", value: 4, isUnsigned: true)
!460 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code_class", file: !4, line: 58, baseType: !5, size: 32, elements: !461)
!461 = !{!462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!462 = !DIEnumerator(name: "tcc_exceptional", value: 0, isUnsigned: true)
!463 = !DIEnumerator(name: "tcc_constant", value: 1, isUnsigned: true)
!464 = !DIEnumerator(name: "tcc_type", value: 2, isUnsigned: true)
!465 = !DIEnumerator(name: "tcc_declaration", value: 3, isUnsigned: true)
!466 = !DIEnumerator(name: "tcc_reference", value: 4, isUnsigned: true)
!467 = !DIEnumerator(name: "tcc_comparison", value: 5, isUnsigned: true)
!468 = !DIEnumerator(name: "tcc_unary", value: 6, isUnsigned: true)
!469 = !DIEnumerator(name: "tcc_binary", value: 7, isUnsigned: true)
!470 = !DIEnumerator(name: "tcc_statement", value: 8, isUnsigned: true)
!471 = !DIEnumerator(name: "tcc_vl_exp", value: 9, isUnsigned: true)
!472 = !DIEnumerator(name: "tcc_expression", value: 10, isUnsigned: true)
!473 = !{!474, !1886, !1896, !1899, !986, !475, !3, !560}
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node", file: !248, line: 181, size: 2496, elements: !477)
!477 = !{!478, !1661, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1801, !1823, !1833, !1837, !1863, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !476, file: !248, line: 182, baseType: !479, size: 64)
!479 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !480, line: 56, baseType: !481)
!480 = !DIFile(filename: "./coretypes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !4, line: 3371, size: 1792, elements: !483)
!483 = !{!484, !517, !523, !536, !543, !550, !555, !566, !572, !586, !598, !636, !644, !672, !689, !690, !695, !704, !710, !715, !719, !723, !1310, !1359, !1365, !1371, !1378, !1391, !1405, !1422, !1434, !1456, !1471, !1643}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !482, file: !4, line: 3372, baseType: !485, size: 64)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !4, line: 360, size: 64, elements: !486)
!486 = !{!487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !485, file: !4, line: 361, baseType: !5, size: 16, flags: DIFlagBitField, extraData: i64 0)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !485, file: !4, line: 363, baseType: !5, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !485, file: !4, line: 364, baseType: !5, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !485, file: !4, line: 365, baseType: !5, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !485, file: !4, line: 366, baseType: !5, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !485, file: !4, line: 367, baseType: !5, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !485, file: !4, line: 368, baseType: !5, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !485, file: !4, line: 369, baseType: !5, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !485, file: !4, line: 370, baseType: !5, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !485, file: !4, line: 372, baseType: !5, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !485, file: !4, line: 373, baseType: !5, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !485, file: !4, line: 374, baseType: !5, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !485, file: !4, line: 375, baseType: !5, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !485, file: !4, line: 376, baseType: !5, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !485, file: !4, line: 377, baseType: !5, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !485, file: !4, line: 378, baseType: !5, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !485, file: !4, line: 379, baseType: !5, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !485, file: !4, line: 381, baseType: !5, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !485, file: !4, line: 382, baseType: !5, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !485, file: !4, line: 383, baseType: !5, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !485, file: !4, line: 384, baseType: !5, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !485, file: !4, line: 385, baseType: !5, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !485, file: !4, line: 386, baseType: !5, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !485, file: !4, line: 387, baseType: !5, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !485, file: !4, line: 388, baseType: !5, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !485, file: !4, line: 390, baseType: !5, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !485, file: !4, line: 391, baseType: !5, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !485, file: !4, line: 392, baseType: !5, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !485, file: !4, line: 394, baseType: !5, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !485, file: !4, line: 399, baseType: !5, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !482, file: !4, line: 3373, baseType: !518, size: 192)
!518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !4, line: 402, size: 192, elements: !519)
!519 = !{!520, !521, !522}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !518, file: !4, line: 403, baseType: !485, size: 64)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !518, file: !4, line: 404, baseType: !479, size: 64, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !518, file: !4, line: 405, baseType: !479, size: 64, offset: 128)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !482, file: !4, line: 3374, baseType: !524, size: 320)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !4, line: 1384, size: 320, elements: !525)
!525 = !{!526, !527}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !524, file: !4, line: 1385, baseType: !518, size: 192)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !524, file: !4, line: 1386, baseType: !528, size: 128, offset: 192)
!528 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !529, line: 58, baseType: !530)
!529 = !DIFile(filename: "./double-int.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !529, line: 54, size: 128, elements: !531)
!531 = !{!532, !534}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !530, file: !529, line: 56, baseType: !533, size: 64)
!533 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !530, file: !529, line: 57, baseType: !535, size: 64, offset: 64)
!535 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !482, file: !4, line: 3375, baseType: !537, size: 256)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !4, line: 1397, size: 256, elements: !538)
!538 = !{!539, !540}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !537, file: !4, line: 1398, baseType: !518, size: 192)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !537, file: !4, line: 1399, baseType: !541, size: 64, offset: 192)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !4, line: 1392, flags: DIFlagFwdDecl)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !482, file: !4, line: 3376, baseType: !544, size: 256)
!544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !4, line: 1408, size: 256, elements: !545)
!545 = !{!546, !547}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !544, file: !4, line: 1409, baseType: !518, size: 192)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !544, file: !4, line: 1410, baseType: !548, size: 64, offset: 192)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!549 = !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !4, line: 1403, flags: DIFlagFwdDecl)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !482, file: !4, line: 3377, baseType: !551, size: 256)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !4, line: 1437, size: 256, elements: !552)
!552 = !{!553, !554}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !551, file: !4, line: 1438, baseType: !518, size: 192)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !551, file: !4, line: 1439, baseType: !479, size: 64, offset: 192)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !482, file: !4, line: 3378, baseType: !556, size: 256)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !4, line: 1418, size: 256, elements: !557)
!557 = !{!558, !559, !561}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !556, file: !4, line: 1419, baseType: !518, size: 192)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !556, file: !4, line: 1420, baseType: !560, size: 32, offset: 192)
!560 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !556, file: !4, line: 1421, baseType: !562, size: 8, offset: 224)
!562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !563, size: 8, elements: !564)
!563 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!564 = !{!565}
!565 = !DISubrange(count: 1)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !482, file: !4, line: 3379, baseType: !567, size: 320)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !4, line: 1428, size: 320, elements: !568)
!568 = !{!569, !570, !571}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !567, file: !4, line: 1429, baseType: !518, size: 192)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !567, file: !4, line: 1430, baseType: !479, size: 64, offset: 192)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !567, file: !4, line: 1431, baseType: !479, size: 64, offset: 256)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !482, file: !4, line: 3380, baseType: !573, size: 320)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !4, line: 1460, size: 320, elements: !574)
!574 = !{!575, !576}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !573, file: !4, line: 1461, baseType: !518, size: 192)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !573, file: !4, line: 1462, baseType: !577, size: 128, offset: 192)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !578, line: 31, size: 128, elements: !579)
!578 = !DIFile(filename: "./symtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!579 = !{!580, !584, !585}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !577, file: !578, line: 32, baseType: !581, size: 64)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 64)
!582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !583)
!583 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !577, file: !578, line: 33, baseType: !5, size: 32, offset: 64)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !577, file: !578, line: 34, baseType: !5, size: 32, offset: 96)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !482, file: !4, line: 3381, baseType: !587, size: 384)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !4, line: 2507, size: 384, elements: !588)
!588 = !{!589, !590, !595, !596, !597}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !587, file: !4, line: 2508, baseType: !518, size: 192)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !587, file: !4, line: 2509, baseType: !591, size: 32, offset: 192)
!591 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !592, line: 58, baseType: !593)
!592 = !DIFile(filename: "./input.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!593 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !594, line: 44, baseType: !5)
!594 = !DIFile(filename: "./line-map.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!595 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !587, file: !4, line: 2510, baseType: !5, size: 32, offset: 224)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !587, file: !4, line: 2511, baseType: !479, size: 64, offset: 256)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !587, file: !4, line: 2512, baseType: !479, size: 64, offset: 320)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !482, file: !4, line: 3382, baseType: !599, size: 896)
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !4, line: 2652, size: 896, elements: !600)
!600 = !{!601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !599, file: !4, line: 2653, baseType: !587, size: 384)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !599, file: !4, line: 2654, baseType: !479, size: 64, offset: 384)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !599, file: !4, line: 2656, baseType: !5, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !599, file: !4, line: 2658, baseType: !5, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !599, file: !4, line: 2659, baseType: !5, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !599, file: !4, line: 2660, baseType: !5, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !599, file: !4, line: 2661, baseType: !5, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !599, file: !4, line: 2662, baseType: !5, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !599, file: !4, line: 2663, baseType: !5, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !599, file: !4, line: 2664, baseType: !5, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !599, file: !4, line: 2666, baseType: !5, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !599, file: !4, line: 2667, baseType: !5, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !599, file: !4, line: 2668, baseType: !5, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !599, file: !4, line: 2669, baseType: !5, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !599, file: !4, line: 2670, baseType: !5, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !599, file: !4, line: 2671, baseType: !5, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !599, file: !4, line: 2672, baseType: !5, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !599, file: !4, line: 2673, baseType: !5, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !599, file: !4, line: 2674, baseType: !5, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !599, file: !4, line: 2678, baseType: !5, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !599, file: !4, line: 2682, baseType: !5, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !599, file: !4, line: 2685, baseType: !5, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !599, file: !4, line: 2688, baseType: !5, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !599, file: !4, line: 2690, baseType: !5, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !599, file: !4, line: 2692, baseType: !5, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !599, file: !4, line: 2695, baseType: !5, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !599, file: !4, line: 2698, baseType: !5, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !599, file: !4, line: 2703, baseType: !5, size: 32, offset: 512)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !599, file: !4, line: 2705, baseType: !479, size: 64, offset: 576)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !599, file: !4, line: 2706, baseType: !479, size: 64, offset: 640)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !599, file: !4, line: 2707, baseType: !479, size: 64, offset: 704)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !599, file: !4, line: 2708, baseType: !479, size: 64, offset: 768)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !599, file: !4, line: 2711, baseType: !634, size: 64, offset: 832)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!635 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !4, line: 2711, flags: DIFlagFwdDecl)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !482, file: !4, line: 3383, baseType: !637, size: 960)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !4, line: 2756, size: 960, elements: !638)
!638 = !{!639, !640}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !637, file: !4, line: 2757, baseType: !599, size: 896)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !637, file: !4, line: 2758, baseType: !641, size: 64, offset: 896)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !480, line: 50, baseType: !642)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !480, line: 49, flags: DIFlagFwdDecl)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !482, file: !4, line: 3384, baseType: !645, size: 1472)
!645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !4, line: 3114, size: 1472, elements: !646)
!646 = !{!647, !668, !669, !670, !671}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !645, file: !4, line: 3115, baseType: !648, size: 1216)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !4, line: 2984, size: 1216, elements: !649)
!649 = !{!650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !648, file: !4, line: 2985, baseType: !637, size: 960)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !648, file: !4, line: 2986, baseType: !479, size: 64, offset: 960)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !648, file: !4, line: 2987, baseType: !479, size: 64, offset: 1024)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !648, file: !4, line: 2988, baseType: !479, size: 64, offset: 1088)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !648, file: !4, line: 2991, baseType: !5, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !648, file: !4, line: 2992, baseType: !5, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !648, file: !4, line: 2993, baseType: !5, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !648, file: !4, line: 2994, baseType: !5, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !648, file: !4, line: 2995, baseType: !5, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !648, file: !4, line: 2996, baseType: !5, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !648, file: !4, line: 2998, baseType: !5, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !648, file: !4, line: 3000, baseType: !5, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !648, file: !4, line: 3002, baseType: !5, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !648, file: !4, line: 3003, baseType: !5, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !648, file: !4, line: 3004, baseType: !5, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !648, file: !4, line: 3005, baseType: !5, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !648, file: !4, line: 3007, baseType: !5, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !648, file: !4, line: 3010, baseType: !5, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !645, file: !4, line: 3117, baseType: !479, size: 64, offset: 1216)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !645, file: !4, line: 3119, baseType: !479, size: 64, offset: 1280)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !645, file: !4, line: 3121, baseType: !479, size: 64, offset: 1344)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !645, file: !4, line: 3123, baseType: !479, size: 64, offset: 1408)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !482, file: !4, line: 3385, baseType: !673, size: 1088)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !4, line: 2874, size: 1088, elements: !674)
!674 = !{!675, !676, !677}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !673, file: !4, line: 2875, baseType: !637, size: 960)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !673, file: !4, line: 2876, baseType: !641, size: 64, offset: 960)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !673, file: !4, line: 2877, baseType: !678, size: 64, offset: 1024)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !680, line: 172, size: 128, elements: !681)
!680 = !DIFile(filename: "./tree-flow.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!681 = !{!682, !683, !684, !685, !686, !687, !688}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !679, file: !680, line: 174, baseType: !5, size: 1, flags: DIFlagBitField, extraData: i64 0)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !679, file: !680, line: 178, baseType: !5, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !679, file: !680, line: 183, baseType: !5, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !679, file: !680, line: 187, baseType: !5, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !679, file: !680, line: 192, baseType: !5, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !679, file: !680, line: 195, baseType: !5, size: 32, offset: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !679, file: !680, line: 199, baseType: !479, size: 64, offset: 64)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !482, file: !4, line: 3386, baseType: !648, size: 1216)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !482, file: !4, line: 3387, baseType: !691, size: 1280)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !4, line: 3093, size: 1280, elements: !692)
!692 = !{!693, !694}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !691, file: !4, line: 3094, baseType: !648, size: 1216)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !691, file: !4, line: 3095, baseType: !678, size: 64, offset: 1216)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !482, file: !4, line: 3388, baseType: !696, size: 1216)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !4, line: 2824, size: 1216, elements: !697)
!697 = !{!698, !699, !700, !701, !702, !703}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !696, file: !4, line: 2825, baseType: !599, size: 896)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !696, file: !4, line: 2827, baseType: !479, size: 64, offset: 896)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !696, file: !4, line: 2828, baseType: !479, size: 64, offset: 960)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !696, file: !4, line: 2829, baseType: !479, size: 64, offset: 1024)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !696, file: !4, line: 2830, baseType: !479, size: 64, offset: 1088)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !696, file: !4, line: 2831, baseType: !479, size: 64, offset: 1152)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !482, file: !4, line: 3389, baseType: !705, size: 1024)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !4, line: 2850, size: 1024, elements: !706)
!706 = !{!707, !708, !709}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !705, file: !4, line: 2851, baseType: !637, size: 960)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !705, file: !4, line: 2852, baseType: !560, size: 32, offset: 960)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !705, file: !4, line: 2853, baseType: !560, size: 32, offset: 992)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !482, file: !4, line: 3390, baseType: !711, size: 1024)
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !4, line: 2857, size: 1024, elements: !712)
!712 = !{!713, !714}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !711, file: !4, line: 2858, baseType: !637, size: 960)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !711, file: !4, line: 2859, baseType: !678, size: 64, offset: 960)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !482, file: !4, line: 3391, baseType: !716, size: 960)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !4, line: 2862, size: 960, elements: !717)
!717 = !{!718}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !716, file: !4, line: 2863, baseType: !637, size: 960)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !482, file: !4, line: 3392, baseType: !720, size: 1472)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !4, line: 3304, size: 1472, elements: !721)
!721 = !{!722}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !720, file: !4, line: 3305, baseType: !645, size: 1472)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !482, file: !4, line: 3393, baseType: !724, size: 1792)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !4, line: 3248, size: 1792, elements: !725)
!725 = !{!726, !727, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !724, file: !4, line: 3249, baseType: !645, size: 1472)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !724, file: !4, line: 3251, baseType: !728, size: 64, offset: 1472)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !730, line: 463, size: 1152, elements: !731)
!730 = !DIFile(filename: "./function.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!731 = !{!732, !735, !1056, !1057, !1230, !1233, !1234, !1235, !1236, !1237, !1238, !1262, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !729, file: !730, line: 464, baseType: !733, size: 64)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !730, line: 464, flags: DIFlagFwdDecl)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !729, file: !730, line: 467, baseType: !736, size: 64, offset: 64)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !200, line: 374, size: 640, elements: !738)
!738 = !{!739, !1031, !1032, !1045, !1046, !1047, !1048, !1049, !1050, !1052, !1054, !1055}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !737, file: !200, line: 377, baseType: !740, size: 64)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !480, line: 111, baseType: !741)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !200, line: 217, size: 832, elements: !743)
!743 = !{!744, !994, !995, !996, !999, !1005, !1006, !1007, !1025, !1026, !1027, !1028, !1029, !1030}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !742, file: !200, line: 219, baseType: !745, size: 64)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!746 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !200, line: 151, baseType: !747)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !200, line: 151, size: 128, elements: !748)
!748 = !{!749}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !747, file: !200, line: 151, baseType: !750, size: 128)
!750 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !200, line: 150, baseType: !751)
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !200, line: 150, size: 128, elements: !752)
!752 = !{!753, !754, !755}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !751, file: !200, line: 150, baseType: !5, size: 32)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !751, file: !200, line: 150, baseType: !5, size: 32, offset: 32)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !751, file: !200, line: 150, baseType: !756, size: 64, offset: 64)
!756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !757, size: 64, elements: !564)
!757 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !480, line: 108, baseType: !758)
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !200, line: 122, size: 512, elements: !760)
!760 = !{!761, !762, !763, !985, !987, !988, !989, !990, !991, !992}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !759, file: !200, line: 124, baseType: !741, size: 64)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !759, file: !200, line: 125, baseType: !741, size: 64, offset: 64)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !759, file: !200, line: 131, baseType: !764, size: 64, offset: 128)
!764 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !200, line: 128, size: 64, elements: !765)
!765 = !{!766, !984}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !764, file: !200, line: 129, baseType: !767, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !480, line: 66, baseType: !768)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !770, line: 143, size: 192, elements: !771)
!770 = !DIFile(filename: "./gimple.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!771 = !{!772, !982, !983}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !769, file: !770, line: 145, baseType: !773, size: 64)
!773 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !480, line: 69, baseType: !774)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !770, line: 136, size: 192, elements: !776)
!776 = !{!777, !980, !981}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !775, file: !770, line: 137, baseType: !778, size: 64)
!778 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !480, line: 58, baseType: !779)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !770, line: 737, size: 768, elements: !781)
!781 = !{!782, !799, !833, !839, !844, !849, !856, !862, !868, !873, !887, !892, !898, !903, !915, !920, !938, !945, !952, !958, !963, !969, !975}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !780, file: !770, line: 738, baseType: !783, size: 256)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !770, line: 271, size: 256, elements: !784)
!784 = !{!785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !783, file: !770, line: 274, baseType: !5, size: 8, flags: DIFlagBitField, extraData: i64 0)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !783, file: !770, line: 277, baseType: !5, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !783, file: !770, line: 281, baseType: !5, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !783, file: !770, line: 284, baseType: !5, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !783, file: !770, line: 291, baseType: !5, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !783, file: !770, line: 295, baseType: !5, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !783, file: !770, line: 298, baseType: !5, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !783, file: !770, line: 301, baseType: !5, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !783, file: !770, line: 307, baseType: !5, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !783, file: !770, line: 312, baseType: !5, size: 32, offset: 32)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !783, file: !770, line: 316, baseType: !591, size: 32, offset: 64)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !783, file: !770, line: 319, baseType: !5, size: 32, offset: 96)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !783, file: !770, line: 323, baseType: !741, size: 64, offset: 128)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !783, file: !770, line: 327, baseType: !479, size: 64, offset: 192)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !780, file: !770, line: 739, baseType: !800, size: 448)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !770, line: 350, size: 448, elements: !801)
!801 = !{!802, !831}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !800, file: !770, line: 353, baseType: !803, size: 384)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !770, line: 333, size: 384, elements: !804)
!804 = !{!805, !806, !814}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !803, file: !770, line: 336, baseType: !783, size: 256)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !803, file: !770, line: 343, baseType: !807, size: 64, offset: 256)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !809, line: 37, size: 128, elements: !810)
!809 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!810 = !{!811, !812}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !808, file: !809, line: 39, baseType: !807, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !808, file: !809, line: 40, baseType: !813, size: 64, offset: 64)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !803, file: !770, line: 344, baseType: !815, size: 64, offset: 320)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !809, line: 45, size: 320, elements: !817)
!817 = !{!818, !819}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !816, file: !809, line: 47, baseType: !815, size: 64)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !816, file: !809, line: 48, baseType: !820, size: 256, offset: 64)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !4, line: 1883, size: 256, elements: !821)
!821 = !{!822, !824, !825, !830}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !820, file: !4, line: 1884, baseType: !823, size: 64)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !820, file: !4, line: 1885, baseType: !823, size: 64, offset: 64)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !820, file: !4, line: 1891, baseType: !826, size: 64, offset: 128)
!826 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !820, file: !4, line: 1891, size: 64, elements: !827)
!827 = !{!828, !829}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !826, file: !4, line: 1891, baseType: !778, size: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !826, file: !4, line: 1891, baseType: !479, size: 64)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !820, file: !4, line: 1892, baseType: !813, size: 64, offset: 192)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !800, file: !770, line: 359, baseType: !832, size: 64, offset: 384)
!832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !479, size: 64, elements: !564)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !780, file: !770, line: 740, baseType: !834, size: 512)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !770, line: 365, size: 512, elements: !835)
!835 = !{!836, !837, !838}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !834, file: !770, line: 368, baseType: !803, size: 384)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !834, file: !770, line: 373, baseType: !479, size: 64, offset: 384)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !834, file: !770, line: 374, baseType: !479, size: 64, offset: 448)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !780, file: !770, line: 741, baseType: !840, size: 576)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !770, line: 380, size: 576, elements: !841)
!841 = !{!842, !843}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !840, file: !770, line: 383, baseType: !834, size: 512)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !840, file: !770, line: 389, baseType: !832, size: 64, offset: 512)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !780, file: !770, line: 742, baseType: !845, size: 320)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !770, line: 395, size: 320, elements: !846)
!846 = !{!847, !848}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !845, file: !770, line: 397, baseType: !783, size: 256)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !845, file: !770, line: 400, baseType: !767, size: 64, offset: 256)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !780, file: !770, line: 743, baseType: !850, size: 448)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !770, line: 406, size: 448, elements: !851)
!851 = !{!852, !853, !854, !855}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !850, file: !770, line: 408, baseType: !783, size: 256)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !850, file: !770, line: 412, baseType: !479, size: 64, offset: 256)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !850, file: !770, line: 420, baseType: !479, size: 64, offset: 320)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !850, file: !770, line: 423, baseType: !767, size: 64, offset: 384)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !780, file: !770, line: 744, baseType: !857, size: 384)
!857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !770, line: 429, size: 384, elements: !858)
!858 = !{!859, !860, !861}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !857, file: !770, line: 431, baseType: !783, size: 256)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !857, file: !770, line: 434, baseType: !479, size: 64, offset: 256)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !857, file: !770, line: 437, baseType: !767, size: 64, offset: 320)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !780, file: !770, line: 745, baseType: !863, size: 384)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !770, line: 443, size: 384, elements: !864)
!864 = !{!865, !866, !867}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !863, file: !770, line: 445, baseType: !783, size: 256)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !863, file: !770, line: 449, baseType: !479, size: 64, offset: 256)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !863, file: !770, line: 453, baseType: !767, size: 64, offset: 320)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !780, file: !770, line: 746, baseType: !869, size: 320)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !770, line: 459, size: 320, elements: !870)
!870 = !{!871, !872}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !869, file: !770, line: 461, baseType: !783, size: 256)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !869, file: !770, line: 464, baseType: !479, size: 64, offset: 256)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !780, file: !770, line: 747, baseType: !874, size: 768)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !770, line: 469, size: 768, elements: !875)
!875 = !{!876, !877, !878, !879, !880}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !874, file: !770, line: 471, baseType: !783, size: 256)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !874, file: !770, line: 474, baseType: !5, size: 32, offset: 256)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !874, file: !770, line: 475, baseType: !5, size: 32, offset: 288)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !874, file: !770, line: 478, baseType: !479, size: 64, offset: 320)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !874, file: !770, line: 481, baseType: !881, size: 384, offset: 384)
!881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !882, size: 384, elements: !564)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !4, line: 1917, size: 384, elements: !883)
!883 = !{!884, !885, !886}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !882, file: !4, line: 1920, baseType: !820, size: 256)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !882, file: !4, line: 1921, baseType: !479, size: 64, offset: 256)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !882, file: !4, line: 1922, baseType: !591, size: 32, offset: 320)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !780, file: !770, line: 748, baseType: !888, size: 320)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !770, line: 487, size: 320, elements: !889)
!889 = !{!890, !891}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !888, file: !770, line: 490, baseType: !783, size: 256)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !888, file: !770, line: 494, baseType: !560, size: 32, offset: 256)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !780, file: !770, line: 749, baseType: !893, size: 384)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !770, line: 500, size: 384, elements: !894)
!894 = !{!895, !896, !897}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !893, file: !770, line: 502, baseType: !783, size: 256)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !893, file: !770, line: 506, baseType: !767, size: 64, offset: 256)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !893, file: !770, line: 510, baseType: !767, size: 64, offset: 320)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !780, file: !770, line: 750, baseType: !899, size: 320)
!899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !770, line: 529, size: 320, elements: !900)
!900 = !{!901, !902}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !899, file: !770, line: 531, baseType: !783, size: 256)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !899, file: !770, line: 540, baseType: !767, size: 64, offset: 256)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !780, file: !770, line: 751, baseType: !904, size: 704)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !770, line: 546, size: 704, elements: !905)
!905 = !{!906, !907, !910, !911, !912, !913, !914}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !904, file: !770, line: 549, baseType: !834, size: 512)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !904, file: !770, line: 553, baseType: !908, size: 64, offset: 512)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !563)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !904, file: !770, line: 557, baseType: !583, size: 8, offset: 576)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !904, file: !770, line: 558, baseType: !583, size: 8, offset: 584)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !904, file: !770, line: 559, baseType: !583, size: 8, offset: 592)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !904, file: !770, line: 560, baseType: !583, size: 8, offset: 600)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !904, file: !770, line: 566, baseType: !832, size: 64, offset: 640)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !780, file: !770, line: 752, baseType: !916, size: 384)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !770, line: 571, size: 384, elements: !917)
!917 = !{!918, !919}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !916, file: !770, line: 573, baseType: !845, size: 320)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !916, file: !770, line: 577, baseType: !479, size: 64, offset: 320)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !780, file: !770, line: 753, baseType: !921, size: 576)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !770, line: 600, size: 576, elements: !922)
!922 = !{!923, !924, !925, !928, !937}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !921, file: !770, line: 602, baseType: !845, size: 320)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !921, file: !770, line: 605, baseType: !479, size: 64, offset: 320)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !921, file: !770, line: 609, baseType: !926, size: 64, offset: 384)
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !927, line: 46, baseType: !533)
!927 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!928 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !921, file: !770, line: 612, baseType: !929, size: 64, offset: 448)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !770, line: 581, size: 320, elements: !931)
!931 = !{!932, !933, !934, !935, !936}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !930, file: !770, line: 583, baseType: !3, size: 32)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !930, file: !770, line: 586, baseType: !479, size: 64, offset: 64)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !930, file: !770, line: 589, baseType: !479, size: 64, offset: 128)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !930, file: !770, line: 592, baseType: !479, size: 64, offset: 192)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !930, file: !770, line: 595, baseType: !479, size: 64, offset: 256)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !921, file: !770, line: 616, baseType: !767, size: 64, offset: 512)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !780, file: !770, line: 754, baseType: !939, size: 512)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !770, line: 622, size: 512, elements: !940)
!940 = !{!941, !942, !943, !944}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !939, file: !770, line: 624, baseType: !845, size: 320)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !939, file: !770, line: 628, baseType: !479, size: 64, offset: 320)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !939, file: !770, line: 632, baseType: !479, size: 64, offset: 384)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !939, file: !770, line: 636, baseType: !479, size: 64, offset: 448)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !780, file: !770, line: 755, baseType: !946, size: 704)
!946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !770, line: 642, size: 704, elements: !947)
!947 = !{!948, !949, !950, !951}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !946, file: !770, line: 644, baseType: !939, size: 512)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !946, file: !770, line: 648, baseType: !479, size: 64, offset: 512)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !946, file: !770, line: 652, baseType: !479, size: 64, offset: 576)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !946, file: !770, line: 653, baseType: !479, size: 64, offset: 640)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !780, file: !770, line: 756, baseType: !953, size: 448)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !770, line: 663, size: 448, elements: !954)
!954 = !{!955, !956, !957}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !953, file: !770, line: 665, baseType: !845, size: 320)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !953, file: !770, line: 668, baseType: !479, size: 64, offset: 320)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !953, file: !770, line: 673, baseType: !479, size: 64, offset: 384)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !780, file: !770, line: 757, baseType: !959, size: 384)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !770, line: 694, size: 384, elements: !960)
!960 = !{!961, !962}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !959, file: !770, line: 696, baseType: !845, size: 320)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !959, file: !770, line: 699, baseType: !479, size: 64, offset: 320)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !780, file: !770, line: 758, baseType: !964, size: 384)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !770, line: 681, size: 384, elements: !965)
!965 = !{!966, !967, !968}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !964, file: !770, line: 683, baseType: !783, size: 256)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !964, file: !770, line: 686, baseType: !479, size: 64, offset: 256)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !964, file: !770, line: 689, baseType: !479, size: 64, offset: 320)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !780, file: !770, line: 759, baseType: !970, size: 384)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !770, line: 707, size: 384, elements: !971)
!971 = !{!972, !973, !974}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !970, file: !770, line: 709, baseType: !783, size: 256)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !970, file: !770, line: 712, baseType: !479, size: 64, offset: 256)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !970, file: !770, line: 712, baseType: !479, size: 64, offset: 320)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !780, file: !770, line: 760, baseType: !976, size: 320)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !770, line: 718, size: 320, elements: !977)
!977 = !{!978, !979}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !976, file: !770, line: 720, baseType: !783, size: 256)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !976, file: !770, line: 723, baseType: !479, size: 64, offset: 256)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !775, file: !770, line: 138, baseType: !774, size: 64, offset: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !775, file: !770, line: 139, baseType: !774, size: 64, offset: 128)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !769, file: !770, line: 146, baseType: !773, size: 64, offset: 64)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !769, file: !770, line: 152, baseType: !767, size: 64, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !764, file: !200, line: 130, baseType: !641, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !759, file: !200, line: 134, baseType: !986, size: 64, offset: 192)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !759, file: !200, line: 137, baseType: !479, size: 64, offset: 256)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !759, file: !200, line: 138, baseType: !591, size: 32, offset: 320)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !759, file: !200, line: 142, baseType: !5, size: 32, offset: 352)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !759, file: !200, line: 144, baseType: !560, size: 32, offset: 384)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !759, file: !200, line: 145, baseType: !560, size: 32, offset: 416)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !759, file: !200, line: 146, baseType: !993, size: 64, offset: 448)
!993 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !200, line: 119, baseType: !535)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !742, file: !200, line: 220, baseType: !745, size: 64, offset: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !742, file: !200, line: 223, baseType: !986, size: 64, offset: 128)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !742, file: !200, line: 226, baseType: !997, size: 64, offset: 192)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!998 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !200, line: 185, flags: DIFlagFwdDecl)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !742, file: !200, line: 229, baseType: !1000, size: 128, offset: 256)
!1000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1001, size: 128, elements: !1003)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !200, line: 229, flags: DIFlagFwdDecl)
!1003 = !{!1004}
!1004 = !DISubrange(count: 2)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !742, file: !200, line: 232, baseType: !741, size: 64, offset: 384)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !742, file: !200, line: 233, baseType: !741, size: 64, offset: 448)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !742, file: !200, line: 238, baseType: !1008, size: 64, offset: 512)
!1008 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !200, line: 235, size: 64, elements: !1009)
!1009 = !{!1010, !1016}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1008, file: !200, line: 236, baseType: !1011, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !200, line: 273, size: 128, elements: !1013)
!1013 = !{!1014, !1015}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1012, file: !200, line: 275, baseType: !767, size: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1012, file: !200, line: 278, baseType: !767, size: 64, offset: 64)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1008, file: !200, line: 237, baseType: !1017, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !200, line: 259, size: 320, elements: !1019)
!1019 = !{!1020, !1021, !1022, !1023, !1024}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1018, file: !200, line: 261, baseType: !641, size: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1018, file: !200, line: 262, baseType: !641, size: 64, offset: 64)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1018, file: !200, line: 266, baseType: !641, size: 64, offset: 128)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1018, file: !200, line: 267, baseType: !641, size: 64, offset: 192)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1018, file: !200, line: 270, baseType: !560, size: 32, offset: 256)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !742, file: !200, line: 241, baseType: !993, size: 64, offset: 576)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !742, file: !200, line: 244, baseType: !560, size: 32, offset: 640)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !742, file: !200, line: 247, baseType: !560, size: 32, offset: 672)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !742, file: !200, line: 250, baseType: !560, size: 32, offset: 704)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !742, file: !200, line: 253, baseType: !560, size: 32, offset: 736)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !742, file: !200, line: 256, baseType: !560, size: 32, offset: 768)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !737, file: !200, line: 378, baseType: !740, size: 64, offset: 64)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !737, file: !200, line: 381, baseType: !1033, size: 64, offset: 128)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !200, line: 282, baseType: !1035)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !200, line: 282, size: 128, elements: !1036)
!1036 = !{!1037}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1035, file: !200, line: 282, baseType: !1038, size: 128)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !200, line: 281, baseType: !1039)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !200, line: 281, size: 128, elements: !1040)
!1040 = !{!1041, !1042, !1043}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1039, file: !200, line: 281, baseType: !5, size: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1039, file: !200, line: 281, baseType: !5, size: 32, offset: 32)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1039, file: !200, line: 281, baseType: !1044, size: 64, offset: 64)
!1044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !740, size: 64, elements: !564)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !737, file: !200, line: 384, baseType: !560, size: 32, offset: 192)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !737, file: !200, line: 387, baseType: !560, size: 32, offset: 224)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !737, file: !200, line: 390, baseType: !560, size: 32, offset: 256)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !737, file: !200, line: 394, baseType: !1033, size: 64, offset: 320)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !737, file: !200, line: 396, baseType: !199, size: 32, offset: 384)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !737, file: !200, line: 399, baseType: !1051, size: 64, offset: 416)
!1051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 64, elements: !1003)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !737, file: !200, line: 402, baseType: !1053, size: 64, offset: 480)
!1053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !1003)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !737, file: !200, line: 406, baseType: !560, size: 32, offset: 544)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !737, file: !200, line: 409, baseType: !560, size: 32, offset: 576)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !729, file: !730, line: 470, baseType: !768, size: 64, offset: 128)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !729, file: !730, line: 473, baseType: !1058, size: 64, offset: 192)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !680, line: 39, size: 1152, elements: !1060)
!1060 = !{!1061, !1111, !1124, !1136, !1137, !1207, !1208, !1212, !1213, !1214, !1215, !1216}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1059, file: !680, line: 41, baseType: !1062, size: 64)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1063, line: 144, baseType: !1064)
!1063 = !DIFile(filename: "./include/hashtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1063, line: 100, size: 896, elements: !1066)
!1066 = !{!1067, !1075, !1080, !1085, !1087, !1088, !1089, !1090, !1091, !1092, !1097, !1099, !1100, !1105, !1110}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1065, file: !1063, line: 102, baseType: !1068, size: 64)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1063, line: 52, baseType: !1069)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!1072, !1073}
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1063, line: 47, baseType: !5)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1065, file: !1063, line: 105, baseType: !1076, size: 64, offset: 64)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1063, line: 59, baseType: !1077)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!560, !1073, !1073}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1065, file: !1063, line: 108, baseType: !1081, size: 64, offset: 128)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1063, line: 63, baseType: !1082)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = !DISubroutineType(types: !1084)
!1084 = !{null, !986}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1065, file: !1063, line: 111, baseType: !1086, size: 64, offset: 192)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1065, file: !1063, line: 114, baseType: !926, size: 64, offset: 256)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1065, file: !1063, line: 117, baseType: !926, size: 64, offset: 320)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1065, file: !1063, line: 120, baseType: !926, size: 64, offset: 384)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1065, file: !1063, line: 124, baseType: !5, size: 32, offset: 448)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1065, file: !1063, line: 128, baseType: !5, size: 32, offset: 480)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1065, file: !1063, line: 131, baseType: !1093, size: 64, offset: 512)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1063, line: 75, baseType: !1094)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!986, !926, !926}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1065, file: !1063, line: 132, baseType: !1098, size: 64, offset: 576)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1063, line: 78, baseType: !1082)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1065, file: !1063, line: 135, baseType: !986, size: 64, offset: 640)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1065, file: !1063, line: 136, baseType: !1101, size: 64, offset: 704)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1063, line: 82, baseType: !1102)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!986, !986, !926, !926}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1065, file: !1063, line: 137, baseType: !1106, size: 64, offset: 768)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1063, line: 83, baseType: !1107)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{null, !986, !986}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1065, file: !1063, line: 141, baseType: !5, size: 32, offset: 832)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1059, file: !680, line: 48, baseType: !1112, size: 64, offset: 64)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64)
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !770, line: 35, baseType: !1114)
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !770, line: 35, size: 128, elements: !1115)
!1115 = !{!1116}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1114, file: !770, line: 35, baseType: !1117, size: 128)
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !770, line: 33, baseType: !1118)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !770, line: 33, size: 128, elements: !1119)
!1119 = !{!1120, !1121, !1122}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1118, file: !770, line: 33, baseType: !5, size: 32)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1118, file: !770, line: 33, baseType: !5, size: 32, offset: 32)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1118, file: !770, line: 33, baseType: !1123, size: 64, offset: 64)
!1123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !778, size: 64, elements: !564)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1059, file: !680, line: 51, baseType: !1125, size: 64, offset: 128)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1126 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !4, line: 183, baseType: !1127)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !4, line: 183, size: 128, elements: !1128)
!1128 = !{!1129}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1127, file: !4, line: 183, baseType: !1130, size: 128)
!1130 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !4, line: 182, baseType: !1131)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !4, line: 182, size: 128, elements: !1132)
!1132 = !{!1133, !1134, !1135}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1131, file: !4, line: 182, baseType: !5, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1131, file: !4, line: 182, baseType: !5, size: 32, offset: 32)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1131, file: !4, line: 182, baseType: !832, size: 64, offset: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1059, file: !680, line: 54, baseType: !479, size: 64, offset: 192)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1059, file: !680, line: 57, baseType: !1138, size: 128, offset: 256)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1139, line: 31, size: 128, elements: !1140)
!1139 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1140 = !{!1141, !1142, !1143, !1144, !1145, !1146, !1147}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1138, file: !1139, line: 35, baseType: !5, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1138, file: !1139, line: 39, baseType: !5, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1138, file: !1139, line: 42, baseType: !5, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1138, file: !1139, line: 46, baseType: !5, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1138, file: !1139, line: 50, baseType: !5, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1138, file: !1139, line: 53, baseType: !5, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1138, file: !1139, line: 56, baseType: !1148, size: 64, offset: 64)
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !480, line: 47, baseType: !1149)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64)
!1150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !1151, line: 75, size: 256, elements: !1152)
!1151 = !DIFile(filename: "./bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1152 = !{!1153, !1165, !1166, !1167}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1150, file: !1151, line: 76, baseType: !1154, size: 64)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1155 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !1151, line: 68, baseType: !1156)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !1151, line: 63, size: 320, elements: !1157)
!1157 = !{!1158, !1160, !1161, !1162}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1156, file: !1151, line: 64, baseType: !1159, size: 64)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1156, file: !1151, line: 65, baseType: !1159, size: 64, offset: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1156, file: !1151, line: 66, baseType: !5, size: 32, offset: 128)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1156, file: !1151, line: 67, baseType: !1163, size: 128, offset: 192)
!1163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1164, size: 128, elements: !1003)
!1164 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !1151, line: 29, baseType: !533)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1150, file: !1151, line: 77, baseType: !1154, size: 64, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1150, file: !1151, line: 78, baseType: !5, size: 32, offset: 128)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1150, file: !1151, line: 79, baseType: !1168, size: 64, offset: 192)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !1151, line: 49, baseType: !1170)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !1151, line: 45, size: 832, elements: !1171)
!1171 = !{!1172, !1173, !1174}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1170, file: !1151, line: 46, baseType: !1159, size: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !1170, file: !1151, line: 47, baseType: !1149, size: 64, offset: 64)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1170, file: !1151, line: 48, baseType: !1175, size: 704, offset: 128)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !1176, line: 164, size: 704, elements: !1177)
!1176 = !DIFile(filename: "./include/obstack.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1177 = !{!1178, !1179, !1190, !1191, !1192, !1193, !1194, !1195, !1199, !1203, !1204, !1205, !1206}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !1175, file: !1176, line: 166, baseType: !535, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !1175, file: !1176, line: 167, baseType: !1180, size: 64, offset: 64)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !1176, line: 157, size: 192, elements: !1182)
!1182 = !{!1183, !1185, !1186}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1181, file: !1176, line: 159, baseType: !1184, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1181, file: !1176, line: 160, baseType: !1180, size: 64, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !1181, file: !1176, line: 161, baseType: !1187, size: 32, offset: 128)
!1187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !563, size: 32, elements: !1188)
!1188 = !{!1189}
!1189 = !DISubrange(count: 4)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !1175, file: !1176, line: 168, baseType: !1184, size: 64, offset: 128)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1175, file: !1176, line: 169, baseType: !1184, size: 64, offset: 192)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !1175, file: !1176, line: 170, baseType: !1184, size: 64, offset: 256)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1175, file: !1176, line: 171, baseType: !535, size: 64, offset: 320)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !1175, file: !1176, line: 172, baseType: !560, size: 32, offset: 384)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !1175, file: !1176, line: 176, baseType: !1196, size: 64, offset: 448)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = !DISubroutineType(types: !1198)
!1198 = !{!1180, !986, !535}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !1175, file: !1176, line: 177, baseType: !1200, size: 64, offset: 512)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DISubroutineType(types: !1202)
!1202 = !{null, !986, !1180}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !1175, file: !1176, line: 178, baseType: !986, size: 64, offset: 576)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !1175, file: !1176, line: 179, baseType: !5, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !1175, file: !1176, line: 180, baseType: !5, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !1175, file: !1176, line: 184, baseType: !5, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1059, file: !680, line: 60, baseType: !1138, size: 128, offset: 384)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1059, file: !680, line: 64, baseType: !1209, size: 64, offset: 512)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64)
!1210 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1211, line: 33, flags: DIFlagFwdDecl)
!1211 = !DIFile(filename: "./pointer-set.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1059, file: !680, line: 67, baseType: !479, size: 64, offset: 576)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1059, file: !680, line: 73, baseType: !1062, size: 64, offset: 640)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1059, file: !680, line: 77, baseType: !1148, size: 64, offset: 704)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1059, file: !680, line: 80, baseType: !5, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1059, file: !680, line: 82, baseType: !1217, size: 320, offset: 832)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !809, line: 62, size: 320, elements: !1218)
!1218 = !{!1219, !1225, !1226, !1227, !1228, !1229}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1217, file: !809, line: 63, baseType: !1220, size: 64)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !809, line: 56, size: 128, elements: !1222)
!1222 = !{!1223, !1224}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1221, file: !809, line: 57, baseType: !1220, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1221, file: !809, line: 58, baseType: !562, size: 8, offset: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1217, file: !809, line: 64, baseType: !5, size: 32, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1217, file: !809, line: 66, baseType: !5, size: 32, offset: 96)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1217, file: !809, line: 68, baseType: !583, size: 8, offset: 128)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1217, file: !809, line: 70, baseType: !807, size: 64, offset: 192)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1217, file: !809, line: 71, baseType: !815, size: 64, offset: 256)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !729, file: !730, line: 476, baseType: !1231, size: 64, offset: 256)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !730, line: 476, flags: DIFlagFwdDecl)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !729, file: !730, line: 479, baseType: !1062, size: 64, offset: 320)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !729, file: !730, line: 484, baseType: !479, size: 64, offset: 384)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !729, file: !730, line: 488, baseType: !479, size: 64, offset: 448)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !729, file: !730, line: 493, baseType: !479, size: 64, offset: 512)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !729, file: !730, line: 496, baseType: !479, size: 64, offset: 576)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !729, file: !730, line: 501, baseType: !1239, size: 64, offset: 640)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !211, line: 2355, size: 576, elements: !1241)
!1241 = !{!1242, !1245, !1246, !1247, !1248, !1250, !1251, !1256, !1257, !1258, !1259, !1260, !1261}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1240, file: !211, line: 2356, baseType: !1243, size: 64)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1244 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !211, line: 2356, flags: DIFlagFwdDecl)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1240, file: !211, line: 2357, baseType: !908, size: 64, offset: 64)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1240, file: !211, line: 2358, baseType: !560, size: 32, offset: 128)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1240, file: !211, line: 2359, baseType: !560, size: 32, offset: 160)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1240, file: !211, line: 2360, baseType: !1249, size: 128, offset: 192)
!1249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !560, size: 128, elements: !1188)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1240, file: !211, line: 2364, baseType: !560, size: 32, offset: 320)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1240, file: !211, line: 2367, baseType: !1252, size: 128, offset: 384)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !211, line: 2349, size: 128, elements: !1253)
!1253 = !{!1254, !1255}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1252, file: !211, line: 2351, baseType: !641, size: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1252, file: !211, line: 2352, baseType: !535, size: 64, offset: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1240, file: !211, line: 2371, baseType: !210, size: 32, offset: 512)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1240, file: !211, line: 2374, baseType: !5, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1240, file: !211, line: 2377, baseType: !5, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1240, file: !211, line: 2381, baseType: !5, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1240, file: !211, line: 2392, baseType: !5, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1240, file: !211, line: 2396, baseType: !5, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !729, file: !730, line: 504, baseType: !1263, size: 64, offset: 704)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64)
!1264 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !730, line: 504, flags: DIFlagFwdDecl)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !729, file: !730, line: 507, baseType: !1062, size: 64, offset: 768)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !729, file: !730, line: 510, baseType: !560, size: 32, offset: 832)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !729, file: !730, line: 513, baseType: !560, size: 32, offset: 864)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !729, file: !730, line: 516, baseType: !591, size: 32, offset: 896)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !729, file: !730, line: 519, baseType: !591, size: 32, offset: 928)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !729, file: !730, line: 522, baseType: !5, size: 32, offset: 960)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !729, file: !730, line: 523, baseType: !5, size: 32, offset: 992)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !729, file: !730, line: 528, baseType: !908, size: 64, offset: 1024)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !729, file: !730, line: 535, baseType: !5, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !729, file: !730, line: 539, baseType: !5, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !729, file: !730, line: 543, baseType: !5, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !729, file: !730, line: 546, baseType: !5, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !729, file: !730, line: 550, baseType: !5, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !729, file: !730, line: 554, baseType: !5, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !729, file: !730, line: 559, baseType: !5, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !729, file: !730, line: 562, baseType: !5, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !729, file: !730, line: 571, baseType: !5, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !729, file: !730, line: 573, baseType: !5, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !729, file: !730, line: 574, baseType: !5, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !729, file: !730, line: 581, baseType: !5, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !729, file: !730, line: 585, baseType: !5, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !729, file: !730, line: 588, baseType: !5, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !729, file: !730, line: 592, baseType: !5, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !729, file: !730, line: 598, baseType: !5, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !724, file: !4, line: 3254, baseType: !479, size: 64, offset: 1536)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !724, file: !4, line: 3257, baseType: !479, size: 64, offset: 1600)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !724, file: !4, line: 3258, baseType: !479, size: 64, offset: 1664)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !724, file: !4, line: 3264, baseType: !5, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !724, file: !4, line: 3265, baseType: !5, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !724, file: !4, line: 3267, baseType: !5, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !724, file: !4, line: 3268, baseType: !5, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !724, file: !4, line: 3269, baseType: !5, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !724, file: !4, line: 3271, baseType: !5, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !724, file: !4, line: 3272, baseType: !5, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !724, file: !4, line: 3273, baseType: !5, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !724, file: !4, line: 3274, baseType: !5, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !724, file: !4, line: 3275, baseType: !5, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !724, file: !4, line: 3276, baseType: !5, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !724, file: !4, line: 3277, baseType: !5, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !724, file: !4, line: 3279, baseType: !5, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !724, file: !4, line: 3280, baseType: !5, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !724, file: !4, line: 3281, baseType: !5, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !724, file: !4, line: 3282, baseType: !5, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !724, file: !4, line: 3283, baseType: !5, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !724, file: !4, line: 3284, baseType: !5, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !482, file: !4, line: 3394, baseType: !1311, size: 1344)
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !4, line: 2279, size: 1344, elements: !1312)
!1312 = !{!1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1338, !1339, !1340, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1311, file: !4, line: 2280, baseType: !518, size: 192)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1311, file: !4, line: 2281, baseType: !479, size: 64, offset: 192)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1311, file: !4, line: 2282, baseType: !479, size: 64, offset: 256)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1311, file: !4, line: 2283, baseType: !479, size: 64, offset: 320)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1311, file: !4, line: 2284, baseType: !479, size: 64, offset: 384)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1311, file: !4, line: 2285, baseType: !5, size: 32, offset: 448)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1311, file: !4, line: 2287, baseType: !5, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1311, file: !4, line: 2288, baseType: !5, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1311, file: !4, line: 2289, baseType: !5, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1311, file: !4, line: 2290, baseType: !5, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1311, file: !4, line: 2291, baseType: !5, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1311, file: !4, line: 2292, baseType: !5, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1311, file: !4, line: 2294, baseType: !5, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1311, file: !4, line: 2296, baseType: !5, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1311, file: !4, line: 2297, baseType: !5, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1311, file: !4, line: 2298, baseType: !5, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1311, file: !4, line: 2299, baseType: !5, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1311, file: !4, line: 2300, baseType: !5, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1311, file: !4, line: 2301, baseType: !5, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1311, file: !4, line: 2302, baseType: !5, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1311, file: !4, line: 2303, baseType: !5, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1311, file: !4, line: 2305, baseType: !5, size: 32, offset: 512)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1311, file: !4, line: 2306, baseType: !1336, size: 32, offset: 544)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1337, line: 31, baseType: !560)
!1337 = !DIFile(filename: "./alias.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1311, file: !4, line: 2307, baseType: !479, size: 64, offset: 576)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1311, file: !4, line: 2308, baseType: !479, size: 64, offset: 640)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1311, file: !4, line: 2314, baseType: !1341, size: 64, offset: 704)
!1341 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !4, line: 2309, size: 64, elements: !1342)
!1342 = !{!1343, !1344, !1345}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1341, file: !4, line: 2310, baseType: !560, size: 32)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1341, file: !4, line: 2311, baseType: !908, size: 64)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1341, file: !4, line: 2312, baseType: !1346, size: 64)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !4, line: 2277, flags: DIFlagFwdDecl)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1311, file: !4, line: 2315, baseType: !479, size: 64, offset: 768)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1311, file: !4, line: 2316, baseType: !479, size: 64, offset: 832)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1311, file: !4, line: 2317, baseType: !479, size: 64, offset: 896)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1311, file: !4, line: 2318, baseType: !479, size: 64, offset: 960)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1311, file: !4, line: 2319, baseType: !479, size: 64, offset: 1024)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1311, file: !4, line: 2320, baseType: !479, size: 64, offset: 1088)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1311, file: !4, line: 2321, baseType: !479, size: 64, offset: 1152)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1311, file: !4, line: 2322, baseType: !479, size: 64, offset: 1216)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1311, file: !4, line: 2324, baseType: !1357, size: 64, offset: 1280)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !4, line: 2324, flags: DIFlagFwdDecl)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !482, file: !4, line: 3395, baseType: !1360, size: 320)
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !4, line: 1469, size: 320, elements: !1361)
!1361 = !{!1362, !1363, !1364}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1360, file: !4, line: 1470, baseType: !518, size: 192)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1360, file: !4, line: 1471, baseType: !479, size: 64, offset: 192)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1360, file: !4, line: 1472, baseType: !479, size: 64, offset: 256)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !482, file: !4, line: 3396, baseType: !1366, size: 320)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !4, line: 1482, size: 320, elements: !1367)
!1367 = !{!1368, !1369, !1370}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1366, file: !4, line: 1483, baseType: !518, size: 192)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1366, file: !4, line: 1484, baseType: !560, size: 32, offset: 192)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1366, file: !4, line: 1485, baseType: !832, size: 64, offset: 256)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !482, file: !4, line: 3397, baseType: !1372, size: 384)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !4, line: 1829, size: 384, elements: !1373)
!1373 = !{!1374, !1375, !1376, !1377}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1372, file: !4, line: 1830, baseType: !518, size: 192)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1372, file: !4, line: 1831, baseType: !591, size: 32, offset: 192)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1372, file: !4, line: 1832, baseType: !479, size: 64, offset: 256)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1372, file: !4, line: 1835, baseType: !832, size: 64, offset: 320)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !482, file: !4, line: 3398, baseType: !1379, size: 704)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !4, line: 1898, size: 704, elements: !1380)
!1380 = !{!1381, !1382, !1383, !1384, !1385, !1390}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1379, file: !4, line: 1899, baseType: !518, size: 192)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1379, file: !4, line: 1902, baseType: !479, size: 64, offset: 192)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1379, file: !4, line: 1905, baseType: !778, size: 64, offset: 256)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1379, file: !4, line: 1908, baseType: !5, size: 32, offset: 320)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1379, file: !4, line: 1911, baseType: !1386, size: 64, offset: 384)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !680, line: 117, size: 128, elements: !1388)
!1388 = !{!1389}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1387, file: !680, line: 120, baseType: !1138, size: 128)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1379, file: !4, line: 1914, baseType: !820, size: 256, offset: 448)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !482, file: !4, line: 3399, baseType: !1392, size: 704)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !4, line: 2008, size: 704, elements: !1393)
!1393 = !{!1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1392, file: !4, line: 2009, baseType: !518, size: 192)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1392, file: !4, line: 2011, baseType: !5, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1392, file: !4, line: 2012, baseType: !5, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1392, file: !4, line: 2014, baseType: !591, size: 32, offset: 224)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1392, file: !4, line: 2016, baseType: !479, size: 64, offset: 256)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1392, file: !4, line: 2017, baseType: !1125, size: 64, offset: 320)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1392, file: !4, line: 2019, baseType: !479, size: 64, offset: 384)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1392, file: !4, line: 2020, baseType: !479, size: 64, offset: 448)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1392, file: !4, line: 2021, baseType: !479, size: 64, offset: 512)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1392, file: !4, line: 2022, baseType: !479, size: 64, offset: 576)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1392, file: !4, line: 2023, baseType: !479, size: 64, offset: 640)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !482, file: !4, line: 3400, baseType: !1406, size: 832)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !4, line: 2430, size: 832, elements: !1407)
!1407 = !{!1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1406, file: !4, line: 2431, baseType: !518, size: 192)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1406, file: !4, line: 2433, baseType: !479, size: 64, offset: 192)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1406, file: !4, line: 2434, baseType: !479, size: 64, offset: 256)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1406, file: !4, line: 2435, baseType: !479, size: 64, offset: 320)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1406, file: !4, line: 2436, baseType: !479, size: 64, offset: 384)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1406, file: !4, line: 2437, baseType: !1125, size: 64, offset: 448)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1406, file: !4, line: 2438, baseType: !479, size: 64, offset: 512)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1406, file: !4, line: 2440, baseType: !479, size: 64, offset: 576)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1406, file: !4, line: 2441, baseType: !479, size: 64, offset: 640)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1406, file: !4, line: 2443, baseType: !1418, size: 128, offset: 704)
!1418 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !4, line: 182, baseType: !1419)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !4, line: 182, size: 128, elements: !1420)
!1420 = !{!1421}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1419, file: !4, line: 182, baseType: !1130, size: 128)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !482, file: !4, line: 3401, baseType: !1423, size: 320)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !4, line: 3327, size: 320, elements: !1424)
!1424 = !{!1425, !1426, !1433}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1423, file: !4, line: 3329, baseType: !518, size: 192)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1423, file: !4, line: 3330, baseType: !1427, size: 64, offset: 192)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !4, line: 3320, size: 192, elements: !1429)
!1429 = !{!1430, !1431, !1432}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1428, file: !4, line: 3322, baseType: !1427, size: 64)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1428, file: !4, line: 3323, baseType: !1427, size: 64, offset: 64)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1428, file: !4, line: 3324, baseType: !479, size: 64, offset: 128)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1423, file: !4, line: 3331, baseType: !1427, size: 64, offset: 256)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !482, file: !4, line: 3402, baseType: !1435, size: 256)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !4, line: 1540, size: 256, elements: !1436)
!1436 = !{!1437, !1438}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1435, file: !4, line: 1541, baseType: !518, size: 192)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1435, file: !4, line: 1542, baseType: !1439, size: 64, offset: 192)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !4, line: 1538, baseType: !1441)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !4, line: 1538, size: 192, elements: !1442)
!1442 = !{!1443}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1441, file: !4, line: 1538, baseType: !1444, size: 192)
!1444 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !4, line: 1537, baseType: !1445)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !4, line: 1537, size: 192, elements: !1446)
!1446 = !{!1447, !1448, !1449}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1445, file: !4, line: 1537, baseType: !5, size: 32)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1445, file: !4, line: 1537, baseType: !5, size: 32, offset: 32)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1445, file: !4, line: 1537, baseType: !1450, size: 128, offset: 64)
!1450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 128, elements: !564)
!1451 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !4, line: 1535, baseType: !1452)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !4, line: 1532, size: 128, elements: !1453)
!1453 = !{!1454, !1455}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1452, file: !4, line: 1533, baseType: !479, size: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1452, file: !4, line: 1534, baseType: !479, size: 64, offset: 64)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !482, file: !4, line: 3403, baseType: !1457, size: 512)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !4, line: 1938, size: 512, elements: !1458)
!1458 = !{!1459, !1460, !1461, !1462, !1468, !1469, !1470}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1457, file: !4, line: 1939, baseType: !518, size: 192)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1457, file: !4, line: 1940, baseType: !591, size: 32, offset: 192)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1457, file: !4, line: 1941, baseType: !215, size: 32, offset: 224)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1457, file: !4, line: 1946, baseType: !1463, size: 32, offset: 256)
!1463 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !4, line: 1942, size: 32, elements: !1464)
!1464 = !{!1465, !1466, !1467}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1463, file: !4, line: 1943, baseType: !233, size: 32)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1463, file: !4, line: 1944, baseType: !240, size: 32)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1463, file: !4, line: 1945, baseType: !3, size: 32)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1457, file: !4, line: 1950, baseType: !767, size: 64, offset: 320)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1457, file: !4, line: 1951, baseType: !767, size: 64, offset: 384)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1457, file: !4, line: 1953, baseType: !832, size: 64, offset: 448)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !482, file: !4, line: 3404, baseType: !1472, size: 1664)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !4, line: 3337, size: 1664, elements: !1473)
!1473 = !{!1474, !1475}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1472, file: !4, line: 3338, baseType: !518, size: 192)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1472, file: !4, line: 3341, baseType: !1476, size: 1472, offset: 192)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1477, line: 410, size: 1472, elements: !1478)
!1477 = !DIFile(filename: "./options.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1478 = !{!1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1476, file: !1477, line: 412, baseType: !560, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1476, file: !1477, line: 413, baseType: !560, size: 32, offset: 32)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1476, file: !1477, line: 414, baseType: !560, size: 32, offset: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1476, file: !1477, line: 415, baseType: !560, size: 32, offset: 96)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1476, file: !1477, line: 416, baseType: !560, size: 32, offset: 128)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1476, file: !1477, line: 417, baseType: !560, size: 32, offset: 160)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1476, file: !1477, line: 418, baseType: !583, size: 8, offset: 192)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1476, file: !1477, line: 419, baseType: !583, size: 8, offset: 200)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1476, file: !1477, line: 420, baseType: !1488, size: 8, offset: 208)
!1488 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1476, file: !1477, line: 421, baseType: !1488, size: 8, offset: 216)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1476, file: !1477, line: 422, baseType: !1488, size: 8, offset: 224)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1476, file: !1477, line: 423, baseType: !1488, size: 8, offset: 232)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1476, file: !1477, line: 424, baseType: !1488, size: 8, offset: 240)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1476, file: !1477, line: 425, baseType: !1488, size: 8, offset: 248)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1476, file: !1477, line: 426, baseType: !1488, size: 8, offset: 256)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1476, file: !1477, line: 427, baseType: !1488, size: 8, offset: 264)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1476, file: !1477, line: 428, baseType: !1488, size: 8, offset: 272)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1476, file: !1477, line: 429, baseType: !1488, size: 8, offset: 280)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1476, file: !1477, line: 430, baseType: !1488, size: 8, offset: 288)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1476, file: !1477, line: 431, baseType: !1488, size: 8, offset: 296)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1476, file: !1477, line: 432, baseType: !1488, size: 8, offset: 304)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1476, file: !1477, line: 433, baseType: !1488, size: 8, offset: 312)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1476, file: !1477, line: 434, baseType: !1488, size: 8, offset: 320)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1476, file: !1477, line: 435, baseType: !1488, size: 8, offset: 328)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1476, file: !1477, line: 436, baseType: !1488, size: 8, offset: 336)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1476, file: !1477, line: 437, baseType: !1488, size: 8, offset: 344)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1476, file: !1477, line: 438, baseType: !1488, size: 8, offset: 352)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1476, file: !1477, line: 439, baseType: !1488, size: 8, offset: 360)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1476, file: !1477, line: 440, baseType: !1488, size: 8, offset: 368)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1476, file: !1477, line: 441, baseType: !1488, size: 8, offset: 376)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1476, file: !1477, line: 442, baseType: !1488, size: 8, offset: 384)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1476, file: !1477, line: 443, baseType: !1488, size: 8, offset: 392)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1476, file: !1477, line: 444, baseType: !1488, size: 8, offset: 400)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1476, file: !1477, line: 445, baseType: !1488, size: 8, offset: 408)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1476, file: !1477, line: 446, baseType: !1488, size: 8, offset: 416)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1476, file: !1477, line: 447, baseType: !1488, size: 8, offset: 424)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1476, file: !1477, line: 448, baseType: !1488, size: 8, offset: 432)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1476, file: !1477, line: 449, baseType: !1488, size: 8, offset: 440)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1476, file: !1477, line: 450, baseType: !1488, size: 8, offset: 448)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1476, file: !1477, line: 451, baseType: !1488, size: 8, offset: 456)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1476, file: !1477, line: 452, baseType: !1488, size: 8, offset: 464)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1476, file: !1477, line: 453, baseType: !1488, size: 8, offset: 472)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1476, file: !1477, line: 454, baseType: !1488, size: 8, offset: 480)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1476, file: !1477, line: 455, baseType: !1488, size: 8, offset: 488)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1476, file: !1477, line: 456, baseType: !1488, size: 8, offset: 496)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1476, file: !1477, line: 457, baseType: !1488, size: 8, offset: 504)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1476, file: !1477, line: 458, baseType: !1488, size: 8, offset: 512)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1476, file: !1477, line: 459, baseType: !1488, size: 8, offset: 520)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1476, file: !1477, line: 460, baseType: !1488, size: 8, offset: 528)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1476, file: !1477, line: 461, baseType: !1488, size: 8, offset: 536)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1476, file: !1477, line: 462, baseType: !1488, size: 8, offset: 544)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1476, file: !1477, line: 463, baseType: !1488, size: 8, offset: 552)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1476, file: !1477, line: 464, baseType: !1488, size: 8, offset: 560)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1476, file: !1477, line: 465, baseType: !1488, size: 8, offset: 568)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1476, file: !1477, line: 466, baseType: !1488, size: 8, offset: 576)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1476, file: !1477, line: 467, baseType: !1488, size: 8, offset: 584)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1476, file: !1477, line: 468, baseType: !1488, size: 8, offset: 592)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1476, file: !1477, line: 469, baseType: !1488, size: 8, offset: 600)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1476, file: !1477, line: 470, baseType: !1488, size: 8, offset: 608)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1476, file: !1477, line: 471, baseType: !1488, size: 8, offset: 616)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1476, file: !1477, line: 472, baseType: !1488, size: 8, offset: 624)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1476, file: !1477, line: 473, baseType: !1488, size: 8, offset: 632)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1476, file: !1477, line: 474, baseType: !1488, size: 8, offset: 640)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1476, file: !1477, line: 475, baseType: !1488, size: 8, offset: 648)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1476, file: !1477, line: 476, baseType: !1488, size: 8, offset: 656)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1476, file: !1477, line: 477, baseType: !1488, size: 8, offset: 664)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1476, file: !1477, line: 478, baseType: !1488, size: 8, offset: 672)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1476, file: !1477, line: 479, baseType: !1488, size: 8, offset: 680)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1476, file: !1477, line: 480, baseType: !1488, size: 8, offset: 688)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1476, file: !1477, line: 481, baseType: !1488, size: 8, offset: 696)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1476, file: !1477, line: 482, baseType: !1488, size: 8, offset: 704)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1476, file: !1477, line: 483, baseType: !1488, size: 8, offset: 712)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1476, file: !1477, line: 484, baseType: !1488, size: 8, offset: 720)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1476, file: !1477, line: 485, baseType: !1488, size: 8, offset: 728)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1476, file: !1477, line: 486, baseType: !1488, size: 8, offset: 736)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1476, file: !1477, line: 487, baseType: !1488, size: 8, offset: 744)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1476, file: !1477, line: 488, baseType: !1488, size: 8, offset: 752)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1476, file: !1477, line: 489, baseType: !1488, size: 8, offset: 760)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1476, file: !1477, line: 490, baseType: !1488, size: 8, offset: 768)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1476, file: !1477, line: 491, baseType: !1488, size: 8, offset: 776)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1476, file: !1477, line: 492, baseType: !1488, size: 8, offset: 784)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1476, file: !1477, line: 493, baseType: !1488, size: 8, offset: 792)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1476, file: !1477, line: 494, baseType: !1488, size: 8, offset: 800)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1476, file: !1477, line: 495, baseType: !1488, size: 8, offset: 808)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1476, file: !1477, line: 496, baseType: !1488, size: 8, offset: 816)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1476, file: !1477, line: 497, baseType: !1488, size: 8, offset: 824)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1476, file: !1477, line: 498, baseType: !1488, size: 8, offset: 832)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1476, file: !1477, line: 499, baseType: !1488, size: 8, offset: 840)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1476, file: !1477, line: 500, baseType: !1488, size: 8, offset: 848)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1476, file: !1477, line: 501, baseType: !1488, size: 8, offset: 856)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1476, file: !1477, line: 502, baseType: !1488, size: 8, offset: 864)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1476, file: !1477, line: 503, baseType: !1488, size: 8, offset: 872)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1476, file: !1477, line: 504, baseType: !1488, size: 8, offset: 880)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1476, file: !1477, line: 505, baseType: !1488, size: 8, offset: 888)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1476, file: !1477, line: 506, baseType: !1488, size: 8, offset: 896)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1476, file: !1477, line: 507, baseType: !1488, size: 8, offset: 904)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1476, file: !1477, line: 508, baseType: !1488, size: 8, offset: 912)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1476, file: !1477, line: 509, baseType: !1488, size: 8, offset: 920)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1476, file: !1477, line: 510, baseType: !1488, size: 8, offset: 928)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1476, file: !1477, line: 511, baseType: !1488, size: 8, offset: 936)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1476, file: !1477, line: 512, baseType: !1488, size: 8, offset: 944)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1476, file: !1477, line: 513, baseType: !1488, size: 8, offset: 952)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1476, file: !1477, line: 514, baseType: !1488, size: 8, offset: 960)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1476, file: !1477, line: 515, baseType: !1488, size: 8, offset: 968)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1476, file: !1477, line: 516, baseType: !1488, size: 8, offset: 976)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1476, file: !1477, line: 517, baseType: !1488, size: 8, offset: 984)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1476, file: !1477, line: 518, baseType: !1488, size: 8, offset: 992)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1476, file: !1477, line: 519, baseType: !1488, size: 8, offset: 1000)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1476, file: !1477, line: 520, baseType: !1488, size: 8, offset: 1008)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1476, file: !1477, line: 521, baseType: !1488, size: 8, offset: 1016)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1476, file: !1477, line: 522, baseType: !1488, size: 8, offset: 1024)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1476, file: !1477, line: 523, baseType: !1488, size: 8, offset: 1032)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1476, file: !1477, line: 524, baseType: !1488, size: 8, offset: 1040)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1476, file: !1477, line: 525, baseType: !1488, size: 8, offset: 1048)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1476, file: !1477, line: 526, baseType: !1488, size: 8, offset: 1056)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1476, file: !1477, line: 527, baseType: !1488, size: 8, offset: 1064)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1476, file: !1477, line: 528, baseType: !1488, size: 8, offset: 1072)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1476, file: !1477, line: 529, baseType: !1488, size: 8, offset: 1080)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1476, file: !1477, line: 530, baseType: !1488, size: 8, offset: 1088)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1476, file: !1477, line: 531, baseType: !1488, size: 8, offset: 1096)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1476, file: !1477, line: 532, baseType: !1488, size: 8, offset: 1104)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1476, file: !1477, line: 533, baseType: !1488, size: 8, offset: 1112)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1476, file: !1477, line: 534, baseType: !1488, size: 8, offset: 1120)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1476, file: !1477, line: 535, baseType: !1488, size: 8, offset: 1128)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1476, file: !1477, line: 536, baseType: !1488, size: 8, offset: 1136)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1476, file: !1477, line: 537, baseType: !1488, size: 8, offset: 1144)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1476, file: !1477, line: 538, baseType: !1488, size: 8, offset: 1152)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1476, file: !1477, line: 539, baseType: !1488, size: 8, offset: 1160)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1476, file: !1477, line: 540, baseType: !1488, size: 8, offset: 1168)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1476, file: !1477, line: 541, baseType: !1488, size: 8, offset: 1176)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1476, file: !1477, line: 542, baseType: !1488, size: 8, offset: 1184)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1476, file: !1477, line: 543, baseType: !1488, size: 8, offset: 1192)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1476, file: !1477, line: 544, baseType: !1488, size: 8, offset: 1200)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1476, file: !1477, line: 545, baseType: !1488, size: 8, offset: 1208)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1476, file: !1477, line: 546, baseType: !1488, size: 8, offset: 1216)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1476, file: !1477, line: 547, baseType: !1488, size: 8, offset: 1224)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1476, file: !1477, line: 548, baseType: !1488, size: 8, offset: 1232)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1476, file: !1477, line: 549, baseType: !1488, size: 8, offset: 1240)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1476, file: !1477, line: 550, baseType: !1488, size: 8, offset: 1248)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1476, file: !1477, line: 551, baseType: !1488, size: 8, offset: 1256)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1476, file: !1477, line: 552, baseType: !1488, size: 8, offset: 1264)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1476, file: !1477, line: 553, baseType: !1488, size: 8, offset: 1272)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1476, file: !1477, line: 554, baseType: !1488, size: 8, offset: 1280)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1476, file: !1477, line: 555, baseType: !1488, size: 8, offset: 1288)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1476, file: !1477, line: 556, baseType: !1488, size: 8, offset: 1296)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1476, file: !1477, line: 557, baseType: !1488, size: 8, offset: 1304)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1476, file: !1477, line: 558, baseType: !1488, size: 8, offset: 1312)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1476, file: !1477, line: 559, baseType: !1488, size: 8, offset: 1320)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1476, file: !1477, line: 560, baseType: !1488, size: 8, offset: 1328)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1476, file: !1477, line: 561, baseType: !1488, size: 8, offset: 1336)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1476, file: !1477, line: 562, baseType: !1488, size: 8, offset: 1344)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1476, file: !1477, line: 563, baseType: !1488, size: 8, offset: 1352)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1476, file: !1477, line: 564, baseType: !1488, size: 8, offset: 1360)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1476, file: !1477, line: 565, baseType: !1488, size: 8, offset: 1368)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1476, file: !1477, line: 566, baseType: !1488, size: 8, offset: 1376)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1476, file: !1477, line: 567, baseType: !1488, size: 8, offset: 1384)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1476, file: !1477, line: 568, baseType: !1488, size: 8, offset: 1392)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1476, file: !1477, line: 569, baseType: !1488, size: 8, offset: 1400)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1476, file: !1477, line: 570, baseType: !1488, size: 8, offset: 1408)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1476, file: !1477, line: 571, baseType: !1488, size: 8, offset: 1416)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1476, file: !1477, line: 572, baseType: !1488, size: 8, offset: 1424)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1476, file: !1477, line: 573, baseType: !1488, size: 8, offset: 1432)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1476, file: !1477, line: 574, baseType: !1488, size: 8, offset: 1440)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !482, file: !4, line: 3405, baseType: !1644, size: 384)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !4, line: 3352, size: 384, elements: !1645)
!1645 = !{!1646, !1647}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1644, file: !4, line: 3353, baseType: !518, size: 192)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1644, file: !4, line: 3356, baseType: !1648, size: 192, offset: 192)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1477, line: 578, size: 192, elements: !1649)
!1649 = !{!1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1648, file: !1477, line: 580, baseType: !560, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1648, file: !1477, line: 581, baseType: !560, size: 32, offset: 32)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1648, file: !1477, line: 582, baseType: !560, size: 32, offset: 64)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1648, file: !1477, line: 583, baseType: !560, size: 32, offset: 96)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1648, file: !1477, line: 584, baseType: !583, size: 8, offset: 128)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1648, file: !1477, line: 585, baseType: !583, size: 8, offset: 136)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1648, file: !1477, line: 586, baseType: !583, size: 8, offset: 144)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1648, file: !1477, line: 587, baseType: !583, size: 8, offset: 152)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1648, file: !1477, line: 588, baseType: !583, size: 8, offset: 160)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1648, file: !1477, line: 589, baseType: !583, size: 8, offset: 168)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1648, file: !1477, line: 590, baseType: !583, size: 8, offset: 176)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "callees", scope: !476, file: !248, line: 183, baseType: !1662, size: 64, offset: 64)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_edge", file: !248, line: 314, size: 768, elements: !1664)
!1664 = !{!1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1676, !1677, !1678, !1679, !1681, !1682, !1683}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1663, file: !248, line: 316, baseType: !993, size: 64)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !1663, file: !248, line: 317, baseType: !475, size: 64, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "callee", scope: !1663, file: !248, line: 318, baseType: !475, size: 64, offset: 128)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "prev_caller", scope: !1663, file: !248, line: 319, baseType: !1662, size: 64, offset: 192)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "next_caller", scope: !1663, file: !248, line: 320, baseType: !1662, size: 64, offset: 256)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "prev_callee", scope: !1663, file: !248, line: 321, baseType: !1662, size: 64, offset: 320)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "next_callee", scope: !1663, file: !248, line: 322, baseType: !1662, size: 64, offset: 384)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt", scope: !1663, file: !248, line: 323, baseType: !778, size: 64, offset: 448)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1663, file: !248, line: 324, baseType: !986, size: 64, offset: 512)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "inline_failed", scope: !1663, file: !248, line: 327, baseType: !1675, size: 32, offset: 576)
!1675 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_inline_failed_t", file: !248, line: 312, baseType: !247)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "lto_stmt_uid", scope: !1663, file: !248, line: 330, baseType: !5, size: 32, offset: 608)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1663, file: !248, line: 334, baseType: !560, size: 32, offset: 640)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1663, file: !248, line: 336, baseType: !560, size: 32, offset: 672)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !1663, file: !248, line: 338, baseType: !1680, size: 16, offset: 704)
!1680 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "indirect_call", scope: !1663, file: !248, line: 340, baseType: !5, size: 1, offset: 720, flags: DIFlagBitField, extraData: i64 720)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt_cannot_inline_p", scope: !1663, file: !248, line: 342, baseType: !5, size: 1, offset: 721, flags: DIFlagBitField, extraData: i64 720)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "can_throw_external", scope: !1663, file: !248, line: 344, baseType: !5, size: 1, offset: 722, flags: DIFlagBitField, extraData: i64 720)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "callers", scope: !476, file: !248, line: 184, baseType: !1662, size: 64, offset: 128)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !476, file: !248, line: 185, baseType: !475, size: 64, offset: 192)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !476, file: !248, line: 186, baseType: !475, size: 64, offset: 256)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !476, file: !248, line: 188, baseType: !475, size: 64, offset: 320)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !476, file: !248, line: 190, baseType: !475, size: 64, offset: 384)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "next_nested", scope: !476, file: !248, line: 192, baseType: !475, size: 64, offset: 448)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !476, file: !248, line: 194, baseType: !475, size: 64, offset: 512)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "next_sibling_clone", scope: !476, file: !248, line: 196, baseType: !475, size: 64, offset: 576)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sibling_clone", scope: !476, file: !248, line: 197, baseType: !475, size: 64, offset: 640)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "clones", scope: !476, file: !248, line: 198, baseType: !475, size: 64, offset: 704)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "clone_of", scope: !476, file: !248, line: 199, baseType: !475, size: 64, offset: 768)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "same_body", scope: !476, file: !248, line: 202, baseType: !475, size: 64, offset: 832)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "same_comdat_group", scope: !476, file: !248, line: 204, baseType: !475, size: 64, offset: 896)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "call_site_hash", scope: !476, file: !248, line: 207, baseType: !1062, size: 64, offset: 960)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !476, file: !248, line: 209, baseType: !986, size: 64, offset: 1024)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "ipa_transforms_to_apply", scope: !476, file: !248, line: 214, baseType: !1700, size: 64, offset: 1088)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_heap", file: !730, line: 177, baseType: !1702)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_heap", file: !730, line: 177, size: 128, elements: !1703)
!1703 = !{!1704}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1702, file: !730, line: 177, baseType: !1705, size: 128)
!1705 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_base", file: !730, line: 176, baseType: !1706)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_base", file: !730, line: 176, size: 128, elements: !1707)
!1707 = !{!1708, !1709, !1710}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1706, file: !730, line: 176, baseType: !5, size: 32)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1706, file: !730, line: 176, baseType: !5, size: 32, offset: 32)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1706, file: !730, line: 176, baseType: !1711, size: 64, offset: 64)
!1711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1712, size: 64, elements: !564)
!1712 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_opt_pass", file: !730, line: 174, baseType: !1713)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 64)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_opt_pass_d", file: !271, line: 173, size: 1152, elements: !1715)
!1715 = !{!1716, !1740, !1744, !1767, !1768, !1772, !1777, !1778, !1782}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1714, file: !271, line: 175, baseType: !1717, size: 640)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !271, line: 114, size: 640, elements: !1718)
!1718 = !{!1719, !1720, !1721, !1725, !1729, !1731, !1732, !1733, !1735, !1736, !1737, !1738, !1739}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1717, file: !271, line: 117, baseType: !270, size: 32)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1717, file: !271, line: 121, baseType: !908, size: 64, offset: 64)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !1717, file: !271, line: 125, baseType: !1722, size: 64, offset: 128)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1723 = !DISubroutineType(types: !1724)
!1724 = !{!583}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1717, file: !271, line: 130, baseType: !1726, size: 64, offset: 192)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 64)
!1727 = !DISubroutineType(types: !1728)
!1728 = !{!5}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !1717, file: !271, line: 133, baseType: !1730, size: 64, offset: 256)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1717, file: !271, line: 136, baseType: !1730, size: 64, offset: 320)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !1717, file: !271, line: 139, baseType: !560, size: 32, offset: 384)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !1717, file: !271, line: 143, baseType: !1734, size: 32, offset: 416)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !278, line: 80, baseType: !277)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !1717, file: !271, line: 146, baseType: !5, size: 32, offset: 448)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !1717, file: !271, line: 147, baseType: !5, size: 32, offset: 480)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !1717, file: !271, line: 148, baseType: !5, size: 32, offset: 512)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !1717, file: !271, line: 151, baseType: !5, size: 32, offset: 544)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !1717, file: !271, line: 152, baseType: !5, size: 32, offset: 576)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "generate_summary", scope: !1714, file: !271, line: 179, baseType: !1741, size: 64, offset: 640)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64)
!1742 = !DISubroutineType(types: !1743)
!1743 = !{null}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "write_summary", scope: !1714, file: !271, line: 182, baseType: !1745, size: 64, offset: 704)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64)
!1746 = !DISubroutineType(types: !1747)
!1747 = !{null, !1748}
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node_set_def", file: !248, line: 276, size: 192, elements: !1750)
!1750 = !{!1751, !1752, !1766}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "hashtab", scope: !1749, file: !248, line: 278, baseType: !1062, size: 64)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !1749, file: !248, line: 279, baseType: !1753, size: 64, offset: 64)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 64)
!1754 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_gc", file: !248, line: 272, baseType: !1755)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_gc", file: !248, line: 272, size: 128, elements: !1756)
!1756 = !{!1757}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1755, file: !248, line: 272, baseType: !1758, size: 128)
!1758 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_base", file: !248, line: 270, baseType: !1759)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_base", file: !248, line: 270, size: 128, elements: !1760)
!1760 = !{!1761, !1762, !1763}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1759, file: !248, line: 270, baseType: !5, size: 32)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1759, file: !248, line: 270, baseType: !5, size: 32, offset: 32)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1759, file: !248, line: 270, baseType: !1764, size: 64, offset: 64)
!1764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1765, size: 64, elements: !564)
!1765 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_node_ptr", file: !248, line: 268, baseType: !475)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1749, file: !248, line: 280, baseType: !986, size: 64, offset: 128)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "read_summary", scope: !1714, file: !271, line: 187, baseType: !1741, size: 64, offset: 768)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "function_read_summary", scope: !1714, file: !271, line: 188, baseType: !1769, size: 64, offset: 832)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 64)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{null, !475}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_fixup", scope: !1714, file: !271, line: 191, baseType: !1773, size: 64, offset: 896)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 64)
!1774 = !DISubroutineType(types: !1775)
!1775 = !{null, !475, !1776}
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform_todo_flags_start", scope: !1714, file: !271, line: 195, baseType: !5, size: 32, offset: 960)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform", scope: !1714, file: !271, line: 196, baseType: !1779, size: 64, offset: 1024)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = !DISubroutineType(types: !1781)
!1781 = !{!5, !475}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "variable_transform", scope: !1714, file: !271, line: 197, baseType: !1783, size: 64, offset: 1088)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{null, !1786}
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "varpool_node", file: !248, line: 358, size: 320, elements: !1788)
!1788 = !{!1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1787, file: !248, line: 359, baseType: !479, size: 64)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1787, file: !248, line: 361, baseType: !1786, size: 64, offset: 64)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !1787, file: !248, line: 363, baseType: !1786, size: 64, offset: 128)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "extra_name", scope: !1787, file: !248, line: 366, baseType: !1786, size: 64, offset: 192)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !1787, file: !248, line: 368, baseType: !560, size: 32, offset: 256)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !1787, file: !248, line: 372, baseType: !5, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "force_output", scope: !1787, file: !248, line: 375, baseType: !5, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !1787, file: !248, line: 378, baseType: !5, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !1787, file: !248, line: 380, baseType: !5, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1787, file: !248, line: 382, baseType: !5, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !1787, file: !248, line: 384, baseType: !5, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1787, file: !248, line: 387, baseType: !5, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !476, file: !248, line: 216, baseType: !1802, size: 320, offset: 1152)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_local_info", file: !248, line: 88, size: 320, elements: !1803)
!1803 = !{!1804, !1807, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "lto_file_data", scope: !1802, file: !248, line: 90, baseType: !1805, size: 64)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = !DICompositeType(tag: DW_TAG_structure_type, name: "lto_file_decl_data", file: !248, line: 51, flags: DIFlagFwdDecl)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "inline_summary", scope: !1802, file: !248, line: 92, baseType: !1808, size: 192, offset: 64)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inline_summary", file: !248, line: 57, size: 192, elements: !1809)
!1809 = !{!1810, !1811, !1812, !1813, !1814}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_self_stack_size", scope: !1808, file: !248, line: 60, baseType: !535, size: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "self_size", scope: !1808, file: !248, line: 63, baseType: !560, size: 32, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "size_inlining_benefit", scope: !1808, file: !248, line: 65, baseType: !560, size: 32, offset: 96)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "self_time", scope: !1808, file: !248, line: 67, baseType: !560, size: 32, offset: 128)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "time_inlining_benefit", scope: !1808, file: !248, line: 69, baseType: !560, size: 32, offset: 160)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !1802, file: !248, line: 96, baseType: !5, size: 1, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !1802, file: !248, line: 99, baseType: !5, size: 1, offset: 257, flags: DIFlagBitField, extraData: i64 256)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !1802, file: !248, line: 102, baseType: !5, size: 1, offset: 258, flags: DIFlagBitField, extraData: i64 256)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "inlinable", scope: !1802, file: !248, line: 105, baseType: !5, size: 1, offset: 259, flags: DIFlagBitField, extraData: i64 256)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1802, file: !248, line: 108, baseType: !5, size: 1, offset: 260, flags: DIFlagBitField, extraData: i64 256)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "redefined_extern_inline", scope: !1802, file: !248, line: 112, baseType: !5, size: 1, offset: 261, flags: DIFlagBitField, extraData: i64 256)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "for_functions_valid", scope: !1802, file: !248, line: 116, baseType: !5, size: 1, offset: 262, flags: DIFlagBitField, extraData: i64 256)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_method", scope: !1802, file: !248, line: 120, baseType: !5, size: 1, offset: 263, flags: DIFlagBitField, extraData: i64 256)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !476, file: !248, line: 217, baseType: !1824, size: 320, offset: 1472)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_global_info", file: !248, line: 126, size: 320, elements: !1825)
!1825 = !{!1826, !1827, !1828, !1829, !1830, !1831, !1832}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_stack_size", scope: !1824, file: !248, line: 128, baseType: !535, size: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "stack_frame_offset", scope: !1824, file: !248, line: 130, baseType: !535, size: 64, offset: 64)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "inlined_to", scope: !1824, file: !248, line: 134, baseType: !475, size: 64, offset: 128)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1824, file: !248, line: 137, baseType: !560, size: 32, offset: 192)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1824, file: !248, line: 138, baseType: !560, size: 32, offset: 224)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_growth", scope: !1824, file: !248, line: 141, baseType: !560, size: 32, offset: 256)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "inlined", scope: !1824, file: !248, line: 144, baseType: !583, size: 8, offset: 288)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !476, file: !248, line: 218, baseType: !1834, size: 32, offset: 1792)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_rtl_info", file: !248, line: 150, size: 32, elements: !1835)
!1835 = !{!1836}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_incoming_stack_boundary", scope: !1834, file: !248, line: 151, baseType: !5, size: 32)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !476, file: !248, line: 219, baseType: !1838, size: 192, offset: 1856)
!1838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_clone_info", file: !248, line: 171, size: 192, elements: !1839)
!1839 = !{!1840, !1861, !1862}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "tree_map", scope: !1838, file: !248, line: 173, baseType: !1841, size: 64)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_gc", file: !248, line: 169, baseType: !1843)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_gc", file: !248, line: 169, size: 128, elements: !1844)
!1844 = !{!1845}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1843, file: !248, line: 169, baseType: !1846, size: 128)
!1846 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_base", file: !248, line: 168, baseType: !1847)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_base", file: !248, line: 168, size: 128, elements: !1848)
!1848 = !{!1849, !1850, !1851}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1847, file: !248, line: 168, baseType: !5, size: 32)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1847, file: !248, line: 168, baseType: !5, size: 32, offset: 32)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1847, file: !248, line: 168, baseType: !1852, size: 64, offset: 64)
!1852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1853, size: 64, elements: !564)
!1853 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_replace_map_p", file: !248, line: 167, baseType: !1854)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_replace_map", file: !248, line: 156, size: 192, elements: !1856)
!1856 = !{!1857, !1858, !1859, !1860}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "old_tree", scope: !1855, file: !248, line: 159, baseType: !479, size: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "new_tree", scope: !1855, file: !248, line: 161, baseType: !479, size: 64, offset: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "replace_p", scope: !1855, file: !248, line: 163, baseType: !583, size: 8, offset: 128)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "ref_p", scope: !1855, file: !248, line: 165, baseType: !583, size: 8, offset: 136)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "args_to_skip", scope: !1838, file: !248, line: 174, baseType: !1148, size: 64, offset: 64)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "combined_args_to_skip", scope: !1838, file: !248, line: 175, baseType: !1148, size: 64, offset: 128)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "thunk", scope: !476, file: !248, line: 220, baseType: !1864, size: 256, offset: 2048)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_thunk_info", file: !248, line: 74, size: 256, elements: !1865)
!1865 = !{!1866, !1867, !1868, !1869, !1870, !1871}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_offset", scope: !1864, file: !248, line: 76, baseType: !535, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_value", scope: !1864, file: !248, line: 77, baseType: !535, size: 64, offset: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1864, file: !248, line: 78, baseType: !479, size: 64, offset: 128)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "this_adjusting", scope: !1864, file: !248, line: 79, baseType: !583, size: 8, offset: 192)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_offset_p", scope: !1864, file: !248, line: 80, baseType: !583, size: 8, offset: 200)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "thunk_p", scope: !1864, file: !248, line: 82, baseType: !583, size: 8, offset: 208)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !476, file: !248, line: 223, baseType: !993, size: 64, offset: 2304)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !476, file: !248, line: 225, baseType: !560, size: 32, offset: 2368)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !476, file: !248, line: 227, baseType: !560, size: 32, offset: 2400)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !476, file: !248, line: 231, baseType: !560, size: 32, offset: 2432)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !476, file: !248, line: 238, baseType: !5, size: 1, offset: 2464, flags: DIFlagBitField, extraData: i64 2464)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "address_taken", scope: !476, file: !248, line: 241, baseType: !5, size: 1, offset: 2465, flags: DIFlagBitField, extraData: i64 2464)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_and_needed", scope: !476, file: !248, line: 244, baseType: !5, size: 1, offset: 2466, flags: DIFlagBitField, extraData: i64 2464)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "reachable", scope: !476, file: !248, line: 251, baseType: !5, size: 1, offset: 2467, flags: DIFlagBitField, extraData: i64 2464)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "lowered", scope: !476, file: !248, line: 253, baseType: !5, size: 1, offset: 2468, flags: DIFlagBitField, extraData: i64 2464)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !476, file: !248, line: 256, baseType: !5, size: 1, offset: 2469, flags: DIFlagBitField, extraData: i64 2464)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !476, file: !248, line: 258, baseType: !5, size: 1, offset: 2470, flags: DIFlagBitField, extraData: i64 2464)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !476, file: !248, line: 260, baseType: !5, size: 1, offset: 2471, flags: DIFlagBitField, extraData: i64 2464)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "finalized_by_frontend", scope: !476, file: !248, line: 262, baseType: !5, size: 1, offset: 2472, flags: DIFlagBitField, extraData: i64 2464)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "same_body_alias", scope: !476, file: !248, line: 265, baseType: !5, size: 1, offset: 2473, flags: DIFlagBitField, extraData: i64 2464)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_dfs_info", file: !1888, line: 26, size: 256, elements: !1889)
!1888 = !DIFile(filename: "./ipa-utils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1889 = !{!1890, !1891, !1892, !1893, !1894, !1895}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "dfn_number", scope: !1887, file: !1888, line: 27, baseType: !560, size: 32)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "low_link", scope: !1887, file: !1888, line: 28, baseType: !560, size: 32, offset: 32)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "new_node", scope: !1887, file: !1888, line: 29, baseType: !583, size: 8, offset: 64)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "on_stack", scope: !1887, file: !1888, line: 30, baseType: !583, size: 8, offset: 72)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "next_cycle", scope: !1887, file: !1888, line: 31, baseType: !475, size: 64, offset: 128)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1887, file: !1888, line: 32, baseType: !986, size: 64, offset: 192)
!1896 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_key", file: !1897, line: 62, baseType: !1898)
!1897 = !DIFile(filename: "./include/splay-tree.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1898 = !DIDerivedType(tag: DW_TAG_typedef, name: "libi_uhostptr_t", file: !1897, line: 41, baseType: !533)
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_value", file: !1897, line: 63, baseType: !1898)
!1900 = !{i32 7, !"Dwarf Version", i32 4}
!1901 = !{i32 2, !"Debug Info Version", i32 3}
!1902 = !{i32 1, !"wchar_size", i32 4}
!1903 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!1904 = distinct !DISubprogram(name: "ipa_utils_print_order", scope: !1, file: !1, line: 48, type: !1905, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1957)
!1905 = !DISubroutineType(types: !1906)
!1906 = !{null, !1907, !908, !474, !560}
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1909, line: 7, baseType: !1910)
!1909 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1911, line: 49, size: 1728, elements: !1912)
!1911 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!1912 = !{!1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1928, !1930, !1931, !1932, !1935, !1936, !1937, !1938, !1941, !1943, !1946, !1949, !1950, !1951, !1952, !1953}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1910, file: !1911, line: 51, baseType: !560, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1910, file: !1911, line: 54, baseType: !1184, size: 64, offset: 64)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1910, file: !1911, line: 55, baseType: !1184, size: 64, offset: 128)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1910, file: !1911, line: 56, baseType: !1184, size: 64, offset: 192)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1910, file: !1911, line: 57, baseType: !1184, size: 64, offset: 256)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1910, file: !1911, line: 58, baseType: !1184, size: 64, offset: 320)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1910, file: !1911, line: 59, baseType: !1184, size: 64, offset: 384)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1910, file: !1911, line: 60, baseType: !1184, size: 64, offset: 448)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1910, file: !1911, line: 61, baseType: !1184, size: 64, offset: 512)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1910, file: !1911, line: 64, baseType: !1184, size: 64, offset: 576)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1910, file: !1911, line: 65, baseType: !1184, size: 64, offset: 640)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1910, file: !1911, line: 66, baseType: !1184, size: 64, offset: 704)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1910, file: !1911, line: 68, baseType: !1926, size: 64, offset: 768)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1911, line: 36, flags: DIFlagFwdDecl)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1910, file: !1911, line: 70, baseType: !1929, size: 64, offset: 832)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1910, file: !1911, line: 72, baseType: !560, size: 32, offset: 896)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1910, file: !1911, line: 73, baseType: !560, size: 32, offset: 928)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1910, file: !1911, line: 74, baseType: !1933, size: 64, offset: 960)
!1933 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1934, line: 152, baseType: !535)
!1934 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1910, file: !1911, line: 77, baseType: !1680, size: 16, offset: 1024)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1910, file: !1911, line: 78, baseType: !1488, size: 8, offset: 1040)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1910, file: !1911, line: 79, baseType: !562, size: 8, offset: 1048)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1910, file: !1911, line: 81, baseType: !1939, size: 64, offset: 1088)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1911, line: 43, baseType: null)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1910, file: !1911, line: 89, baseType: !1942, size: 64, offset: 1152)
!1942 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !1934, line: 153, baseType: !535)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1910, file: !1911, line: 91, baseType: !1944, size: 64, offset: 1216)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64)
!1945 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !1911, line: 37, flags: DIFlagFwdDecl)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1910, file: !1911, line: 92, baseType: !1947, size: 64, offset: 1280)
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 64)
!1948 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !1911, line: 38, flags: DIFlagFwdDecl)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1910, file: !1911, line: 93, baseType: !1929, size: 64, offset: 1344)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1910, file: !1911, line: 94, baseType: !986, size: 64, offset: 1408)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1910, file: !1911, line: 95, baseType: !926, size: 64, offset: 1472)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1910, file: !1911, line: 96, baseType: !560, size: 32, offset: 1536)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1910, file: !1911, line: 98, baseType: !1954, size: 160, offset: 1568)
!1954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !563, size: 160, elements: !1955)
!1955 = !{!1956}
!1956 = !DISubrange(count: 20)
!1957 = !{}
!1958 = !DILocalVariable(name: "out", arg: 1, scope: !1904, file: !1, line: 48, type: !1907)
!1959 = !DILocation(line: 48, column: 30, scope: !1904)
!1960 = !DILocalVariable(name: "note", arg: 2, scope: !1904, file: !1, line: 49, type: !908)
!1961 = !DILocation(line: 49, column: 23, scope: !1904)
!1962 = !DILocalVariable(name: "order", arg: 3, scope: !1904, file: !1, line: 50, type: !474)
!1963 = !DILocation(line: 50, column: 31, scope: !1904)
!1964 = !DILocalVariable(name: "count", arg: 4, scope: !1904, file: !1, line: 51, type: !560)
!1965 = !DILocation(line: 51, column: 14, scope: !1904)
!1966 = !DILocalVariable(name: "i", scope: !1904, file: !1, line: 53, type: !560)
!1967 = !DILocation(line: 53, column: 7, scope: !1904)
!1968 = !DILocation(line: 54, column: 12, scope: !1904)
!1969 = !DILocation(line: 54, column: 50, scope: !1904)
!1970 = !DILocation(line: 54, column: 3, scope: !1904)
!1971 = !DILocation(line: 56, column: 12, scope: !1972)
!1972 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 56, column: 3)
!1973 = !DILocation(line: 56, column: 18, scope: !1972)
!1974 = !DILocation(line: 56, column: 10, scope: !1972)
!1975 = !DILocation(line: 56, column: 8, scope: !1972)
!1976 = !DILocation(line: 56, column: 23, scope: !1977)
!1977 = distinct !DILexicalBlock(scope: !1972, file: !1, line: 56, column: 3)
!1978 = !DILocation(line: 56, column: 25, scope: !1977)
!1979 = !DILocation(line: 56, column: 3, scope: !1972)
!1980 = !DILocation(line: 57, column: 22, scope: !1977)
!1981 = !DILocation(line: 57, column: 33, scope: !1977)
!1982 = !DILocation(line: 57, column: 39, scope: !1977)
!1983 = !DILocation(line: 57, column: 5, scope: !1977)
!1984 = !DILocation(line: 56, column: 32, scope: !1977)
!1985 = !DILocation(line: 56, column: 3, scope: !1977)
!1986 = distinct !{!1986, !1979, !1987}
!1987 = !DILocation(line: 57, column: 41, scope: !1972)
!1988 = !DILocation(line: 58, column: 12, scope: !1904)
!1989 = !DILocation(line: 58, column: 3, scope: !1904)
!1990 = !DILocation(line: 59, column: 10, scope: !1904)
!1991 = !DILocation(line: 59, column: 3, scope: !1904)
!1992 = !DILocation(line: 60, column: 1, scope: !1904)
!1993 = distinct !DISubprogram(name: "ipa_utils_reduced_inorder", scope: !1, file: !1, line: 158, type: !1994, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1957)
!1994 = !DISubroutineType(types: !1995)
!1995 = !{!560, !474, !583, !583, !1996}
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 64)
!1997 = !DISubroutineType(types: !1998)
!1998 = !{!583, !1662}
!1999 = !DILocalVariable(name: "order", arg: 1, scope: !1993, file: !1, line: 158, type: !474)
!2000 = !DILocation(line: 158, column: 49, scope: !1993)
!2001 = !DILocalVariable(name: "reduce", arg: 2, scope: !1993, file: !1, line: 159, type: !583)
!2002 = !DILocation(line: 159, column: 12, scope: !1993)
!2003 = !DILocalVariable(name: "allow_overwritable", arg: 3, scope: !1993, file: !1, line: 159, type: !583)
!2004 = !DILocation(line: 159, column: 25, scope: !1993)
!2005 = !DILocalVariable(name: "ignore_edge", arg: 4, scope: !1993, file: !1, line: 160, type: !1996)
!2006 = !DILocation(line: 160, column: 14, scope: !1993)
!2007 = !DILocalVariable(name: "node", scope: !1993, file: !1, line: 162, type: !475)
!2008 = !DILocation(line: 162, column: 23, scope: !1993)
!2009 = !DILocalVariable(name: "env", scope: !1993, file: !1, line: 163, type: !2010)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "searchc_env", file: !1, line: 63, size: 384, elements: !2011)
!2011 = !{!2012, !2013, !2014, !2015, !2016, !2053, !2054}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2010, file: !1, line: 64, baseType: !474, size: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "stack_size", scope: !2010, file: !1, line: 65, baseType: !560, size: 32, offset: 64)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !2010, file: !1, line: 66, baseType: !474, size: 64, offset: 128)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "order_pos", scope: !2010, file: !1, line: 67, baseType: !560, size: 32, offset: 192)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "nodes_marked_new", scope: !2010, file: !1, line: 68, baseType: !2017, size: 64, offset: 256)
!2017 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree", file: !1897, line: 128, baseType: !2018)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "splay_tree_s", file: !1897, line: 109, size: 448, elements: !2020)
!2020 = !{!2021, !2030, !2035, !2040, !2045, !2050, !2052}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2019, file: !1897, line: 111, baseType: !2022, size: 64)
!2022 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_node", file: !1897, line: 66, baseType: !2023)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 64)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "splay_tree_node_s", file: !1897, line: 96, size: 256, elements: !2025)
!2025 = !{!2026, !2027, !2028, !2029}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2024, file: !1897, line: 98, baseType: !1896, size: 64)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2024, file: !1897, line: 101, baseType: !1899, size: 64, offset: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !2024, file: !1897, line: 104, baseType: !2022, size: 64, offset: 128)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !2024, file: !1897, line: 105, baseType: !2022, size: 64, offset: 192)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !2019, file: !1897, line: 114, baseType: !2031, size: 64, offset: 64)
!2031 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_compare_fn", file: !1897, line: 70, baseType: !2032)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 64)
!2033 = !DISubroutineType(types: !2034)
!2034 = !{!560, !1896, !1896}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "delete_key", scope: !2019, file: !1897, line: 117, baseType: !2036, size: 64, offset: 128)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_delete_key_fn", file: !1897, line: 74, baseType: !2037)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!2038 = !DISubroutineType(types: !2039)
!2039 = !{null, !1896}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "delete_value", scope: !2019, file: !1897, line: 120, baseType: !2041, size: 64, offset: 192)
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_delete_value_fn", file: !1897, line: 78, baseType: !2042)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64)
!2043 = !DISubroutineType(types: !2044)
!2044 = !{null, !1899}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "allocate", scope: !2019, file: !1897, line: 123, baseType: !2046, size: 64, offset: 256)
!2046 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_allocate_fn", file: !1897, line: 87, baseType: !2047)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64)
!2048 = !DISubroutineType(types: !2049)
!2049 = !{!986, !560, !986}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "deallocate", scope: !2019, file: !1897, line: 124, baseType: !2051, size: 64, offset: 320)
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_deallocate_fn", file: !1897, line: 93, baseType: !1107)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_data", scope: !2019, file: !1897, line: 125, baseType: !986, size: 64, offset: 384)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "reduce", scope: !2010, file: !1, line: 69, baseType: !583, size: 8, offset: 320)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2010, file: !1, line: 70, baseType: !560, size: 32, offset: 352)
!2055 = !DILocation(line: 163, column: 22, scope: !1993)
!2056 = !DILocalVariable(name: "result", scope: !1993, file: !1, line: 164, type: !2022)
!2057 = !DILocation(line: 164, column: 19, scope: !1993)
!2058 = !DILocation(line: 165, column: 15, scope: !1993)
!2059 = !DILocation(line: 165, column: 7, scope: !1993)
!2060 = !DILocation(line: 165, column: 13, scope: !1993)
!2061 = !DILocation(line: 166, column: 7, scope: !1993)
!2062 = !DILocation(line: 166, column: 18, scope: !1993)
!2063 = !DILocation(line: 167, column: 16, scope: !1993)
!2064 = !DILocation(line: 167, column: 7, scope: !1993)
!2065 = !DILocation(line: 167, column: 14, scope: !1993)
!2066 = !DILocation(line: 168, column: 7, scope: !1993)
!2067 = !DILocation(line: 168, column: 17, scope: !1993)
!2068 = !DILocation(line: 169, column: 26, scope: !1993)
!2069 = !DILocation(line: 169, column: 7, scope: !1993)
!2070 = !DILocation(line: 169, column: 24, scope: !1993)
!2071 = !DILocation(line: 170, column: 7, scope: !1993)
!2072 = !DILocation(line: 170, column: 13, scope: !1993)
!2073 = !DILocation(line: 171, column: 16, scope: !1993)
!2074 = !DILocation(line: 171, column: 7, scope: !1993)
!2075 = !DILocation(line: 171, column: 14, scope: !1993)
!2076 = !DILocation(line: 173, column: 15, scope: !2077)
!2077 = distinct !DILexicalBlock(scope: !1993, file: !1, line: 173, column: 3)
!2078 = !DILocation(line: 173, column: 13, scope: !2077)
!2079 = !DILocation(line: 173, column: 8, scope: !2077)
!2080 = !DILocation(line: 173, column: 29, scope: !2081)
!2081 = distinct !DILexicalBlock(scope: !2077, file: !1, line: 173, column: 3)
!2082 = !DILocation(line: 173, column: 3, scope: !2077)
!2083 = !DILocalVariable(name: "avail", scope: !2084, file: !1, line: 175, type: !453)
!2084 = distinct !DILexicalBlock(scope: !2081, file: !1, line: 174, column: 5)
!2085 = !DILocation(line: 175, column: 25, scope: !2084)
!2086 = !DILocation(line: 175, column: 68, scope: !2084)
!2087 = !DILocation(line: 175, column: 33, scope: !2084)
!2088 = !DILocation(line: 177, column: 11, scope: !2089)
!2089 = distinct !DILexicalBlock(scope: !2084, file: !1, line: 177, column: 11)
!2090 = !DILocation(line: 177, column: 17, scope: !2089)
!2091 = !DILocation(line: 178, column: 4, scope: !2089)
!2092 = !DILocation(line: 178, column: 8, scope: !2089)
!2093 = !DILocation(line: 179, column: 8, scope: !2089)
!2094 = !DILocation(line: 179, column: 12, scope: !2089)
!2095 = !DILocation(line: 179, column: 18, scope: !2089)
!2096 = !DILocation(line: 177, column: 11, scope: !2084)
!2097 = !DILocalVariable(name: "info", scope: !2098, file: !1, line: 182, type: !1886)
!2098 = distinct !DILexicalBlock(scope: !2089, file: !1, line: 180, column: 2)
!2099 = !DILocation(line: 182, column: 25, scope: !2098)
!2100 = !DILocation(line: 182, column: 56, scope: !2098)
!2101 = !DILocation(line: 182, column: 62, scope: !2098)
!2102 = !DILocation(line: 182, column: 32, scope: !2098)
!2103 = !DILocation(line: 183, column: 9, scope: !2104)
!2104 = distinct !DILexicalBlock(scope: !2098, file: !1, line: 183, column: 8)
!2105 = !DILocation(line: 183, column: 8, scope: !2098)
!2106 = !DILocation(line: 184, column: 13, scope: !2104)
!2107 = !DILocation(line: 184, column: 11, scope: !2104)
!2108 = !DILocation(line: 184, column: 6, scope: !2104)
!2109 = !DILocation(line: 185, column: 4, scope: !2098)
!2110 = !DILocation(line: 185, column: 10, scope: !2098)
!2111 = !DILocation(line: 185, column: 19, scope: !2098)
!2112 = !DILocation(line: 186, column: 4, scope: !2098)
!2113 = !DILocation(line: 186, column: 10, scope: !2098)
!2114 = !DILocation(line: 186, column: 19, scope: !2098)
!2115 = !DILocation(line: 187, column: 4, scope: !2098)
!2116 = !DILocation(line: 187, column: 10, scope: !2098)
!2117 = !DILocation(line: 187, column: 21, scope: !2098)
!2118 = !DILocation(line: 188, column: 16, scope: !2098)
!2119 = !DILocation(line: 188, column: 4, scope: !2098)
!2120 = !DILocation(line: 188, column: 10, scope: !2098)
!2121 = !DILocation(line: 188, column: 14, scope: !2098)
!2122 = !DILocation(line: 190, column: 27, scope: !2098)
!2123 = !DILocation(line: 191, column: 25, scope: !2098)
!2124 = !DILocation(line: 191, column: 31, scope: !2098)
!2125 = !DILocation(line: 191, column: 9, scope: !2098)
!2126 = !DILocation(line: 192, column: 27, scope: !2098)
!2127 = !DILocation(line: 192, column: 9, scope: !2098)
!2128 = !DILocation(line: 190, column: 4, scope: !2098)
!2129 = !DILocation(line: 193, column: 2, scope: !2098)
!2130 = !DILocation(line: 195, column: 2, scope: !2089)
!2131 = !DILocation(line: 195, column: 8, scope: !2089)
!2132 = !DILocation(line: 195, column: 12, scope: !2089)
!2133 = !DILocation(line: 196, column: 5, scope: !2084)
!2134 = !DILocation(line: 173, column: 42, scope: !2081)
!2135 = !DILocation(line: 173, column: 48, scope: !2081)
!2136 = !DILocation(line: 173, column: 40, scope: !2081)
!2137 = !DILocation(line: 173, column: 3, scope: !2081)
!2138 = distinct !{!2138, !2082, !2139}
!2139 = !DILocation(line: 196, column: 5, scope: !2077)
!2140 = !DILocation(line: 197, column: 32, scope: !1993)
!2141 = !DILocation(line: 197, column: 12, scope: !1993)
!2142 = !DILocation(line: 197, column: 10, scope: !1993)
!2143 = !DILocation(line: 198, column: 3, scope: !1993)
!2144 = !DILocation(line: 198, column: 10, scope: !1993)
!2145 = !DILocation(line: 200, column: 36, scope: !2146)
!2146 = distinct !DILexicalBlock(scope: !1993, file: !1, line: 199, column: 5)
!2147 = !DILocation(line: 200, column: 44, scope: !2146)
!2148 = !DILocation(line: 200, column: 14, scope: !2146)
!2149 = !DILocation(line: 200, column: 12, scope: !2146)
!2150 = !DILocation(line: 201, column: 22, scope: !2146)
!2151 = !DILocation(line: 201, column: 28, scope: !2146)
!2152 = !DILocation(line: 201, column: 7, scope: !2146)
!2153 = !DILocation(line: 202, column: 36, scope: !2146)
!2154 = !DILocation(line: 202, column: 16, scope: !2146)
!2155 = !DILocation(line: 202, column: 14, scope: !2146)
!2156 = distinct !{!2156, !2143, !2157}
!2157 = !DILocation(line: 203, column: 5, scope: !1993)
!2158 = !DILocation(line: 204, column: 26, scope: !1993)
!2159 = !DILocation(line: 204, column: 3, scope: !1993)
!2160 = !DILocation(line: 205, column: 13, scope: !1993)
!2161 = !DILocation(line: 205, column: 9, scope: !1993)
!2162 = !DILocation(line: 205, column: 3, scope: !1993)
!2163 = !DILocation(line: 207, column: 14, scope: !1993)
!2164 = !DILocation(line: 207, column: 3, scope: !1993)
!2165 = distinct !DISubprogram(name: "searchc", scope: !1, file: !1, line: 84, type: !2166, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1957)
!2166 = !DISubroutineType(types: !2167)
!2167 = !{null, !2168, !475, !1996}
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2169 = !DILocalVariable(name: "env", arg: 1, scope: !2165, file: !1, line: 84, type: !2168)
!2170 = !DILocation(line: 84, column: 30, scope: !2165)
!2171 = !DILocalVariable(name: "v", arg: 2, scope: !2165, file: !1, line: 84, type: !475)
!2172 = !DILocation(line: 84, column: 55, scope: !2165)
!2173 = !DILocalVariable(name: "ignore_edge", arg: 3, scope: !2165, file: !1, line: 85, type: !1996)
!2174 = !DILocation(line: 85, column: 10, scope: !2165)
!2175 = !DILocalVariable(name: "edge", scope: !2165, file: !1, line: 87, type: !1662)
!2176 = !DILocation(line: 87, column: 23, scope: !2165)
!2177 = !DILocalVariable(name: "v_info", scope: !2165, file: !1, line: 88, type: !1886)
!2178 = !DILocation(line: 88, column: 24, scope: !2165)
!2179 = !DILocation(line: 88, column: 57, scope: !2165)
!2180 = !DILocation(line: 88, column: 60, scope: !2165)
!2181 = !DILocation(line: 88, column: 33, scope: !2165)
!2182 = !DILocation(line: 91, column: 3, scope: !2165)
!2183 = !DILocation(line: 91, column: 11, scope: !2165)
!2184 = !DILocation(line: 91, column: 20, scope: !2165)
!2185 = !DILocation(line: 92, column: 22, scope: !2165)
!2186 = !DILocation(line: 92, column: 27, scope: !2165)
!2187 = !DILocation(line: 92, column: 45, scope: !2165)
!2188 = !DILocation(line: 92, column: 48, scope: !2165)
!2189 = !DILocation(line: 92, column: 3, scope: !2165)
!2190 = !DILocation(line: 94, column: 24, scope: !2165)
!2191 = !DILocation(line: 94, column: 29, scope: !2165)
!2192 = !DILocation(line: 94, column: 3, scope: !2165)
!2193 = !DILocation(line: 94, column: 11, scope: !2165)
!2194 = !DILocation(line: 94, column: 22, scope: !2165)
!2195 = !DILocation(line: 95, column: 22, scope: !2165)
!2196 = !DILocation(line: 95, column: 27, scope: !2165)
!2197 = !DILocation(line: 95, column: 3, scope: !2165)
!2198 = !DILocation(line: 95, column: 11, scope: !2165)
!2199 = !DILocation(line: 95, column: 20, scope: !2165)
!2200 = !DILocation(line: 96, column: 3, scope: !2165)
!2201 = !DILocation(line: 96, column: 8, scope: !2165)
!2202 = !DILocation(line: 96, column: 13, scope: !2165)
!2203 = !DILocation(line: 97, column: 37, scope: !2165)
!2204 = !DILocation(line: 97, column: 3, scope: !2165)
!2205 = !DILocation(line: 97, column: 8, scope: !2165)
!2206 = !DILocation(line: 97, column: 15, scope: !2165)
!2207 = !DILocation(line: 97, column: 20, scope: !2165)
!2208 = !DILocation(line: 97, column: 31, scope: !2165)
!2209 = !DILocation(line: 97, column: 35, scope: !2165)
!2210 = !DILocation(line: 98, column: 3, scope: !2165)
!2211 = !DILocation(line: 98, column: 11, scope: !2165)
!2212 = !DILocation(line: 98, column: 20, scope: !2165)
!2213 = !DILocation(line: 100, column: 15, scope: !2214)
!2214 = distinct !DILexicalBlock(scope: !2165, file: !1, line: 100, column: 3)
!2215 = !DILocation(line: 100, column: 18, scope: !2214)
!2216 = !DILocation(line: 100, column: 13, scope: !2214)
!2217 = !DILocation(line: 100, column: 8, scope: !2214)
!2218 = !DILocation(line: 100, column: 27, scope: !2219)
!2219 = distinct !DILexicalBlock(scope: !2214, file: !1, line: 100, column: 3)
!2220 = !DILocation(line: 100, column: 3, scope: !2214)
!2221 = !DILocalVariable(name: "w_info", scope: !2222, file: !1, line: 102, type: !1886)
!2222 = distinct !DILexicalBlock(scope: !2219, file: !1, line: 101, column: 5)
!2223 = !DILocation(line: 102, column: 29, scope: !2222)
!2224 = !DILocalVariable(name: "w", scope: !2222, file: !1, line: 103, type: !475)
!2225 = !DILocation(line: 103, column: 27, scope: !2222)
!2226 = !DILocation(line: 103, column: 31, scope: !2222)
!2227 = !DILocation(line: 103, column: 37, scope: !2222)
!2228 = !DILocation(line: 105, column: 11, scope: !2229)
!2229 = distinct !DILexicalBlock(scope: !2222, file: !1, line: 105, column: 11)
!2230 = !DILocation(line: 105, column: 23, scope: !2229)
!2231 = !DILocation(line: 105, column: 26, scope: !2229)
!2232 = !DILocation(line: 105, column: 39, scope: !2229)
!2233 = !DILocation(line: 105, column: 11, scope: !2222)
!2234 = !DILocation(line: 106, column: 9, scope: !2229)
!2235 = !DILocation(line: 108, column: 11, scope: !2236)
!2236 = distinct !DILexicalBlock(scope: !2222, file: !1, line: 108, column: 11)
!2237 = !DILocation(line: 108, column: 14, scope: !2236)
!2238 = !DILocation(line: 108, column: 18, scope: !2236)
!2239 = !DILocation(line: 108, column: 56, scope: !2236)
!2240 = !DILocation(line: 108, column: 62, scope: !2236)
!2241 = !DILocation(line: 108, column: 21, scope: !2236)
!2242 = !DILocation(line: 108, column: 70, scope: !2236)
!2243 = !DILocation(line: 108, column: 11, scope: !2222)
!2244 = !DILocation(line: 110, column: 37, scope: !2245)
!2245 = distinct !DILexicalBlock(scope: !2236, file: !1, line: 109, column: 2)
!2246 = !DILocation(line: 110, column: 40, scope: !2245)
!2247 = !DILocation(line: 110, column: 13, scope: !2245)
!2248 = !DILocation(line: 110, column: 11, scope: !2245)
!2249 = !DILocation(line: 111, column: 8, scope: !2250)
!2250 = distinct !DILexicalBlock(scope: !2245, file: !1, line: 111, column: 8)
!2251 = !DILocation(line: 111, column: 16, scope: !2250)
!2252 = !DILocation(line: 111, column: 8, scope: !2245)
!2253 = !DILocation(line: 113, column: 17, scope: !2254)
!2254 = distinct !DILexicalBlock(scope: !2250, file: !1, line: 112, column: 6)
!2255 = !DILocation(line: 113, column: 22, scope: !2254)
!2256 = !DILocation(line: 113, column: 25, scope: !2254)
!2257 = !DILocation(line: 113, column: 8, scope: !2254)
!2258 = !DILocation(line: 115, column: 4, scope: !2254)
!2259 = !DILocation(line: 115, column: 12, scope: !2254)
!2260 = !DILocation(line: 115, column: 23, scope: !2254)
!2261 = !DILocation(line: 115, column: 31, scope: !2254)
!2262 = !DILocation(line: 115, column: 21, scope: !2254)
!2263 = !DILocation(line: 115, column: 3, scope: !2254)
!2264 = !DILocation(line: 116, column: 3, scope: !2254)
!2265 = !DILocation(line: 116, column: 11, scope: !2254)
!2266 = !DILocation(line: 116, column: 22, scope: !2254)
!2267 = !DILocation(line: 116, column: 30, scope: !2254)
!2268 = !DILocation(line: 114, column: 8, scope: !2254)
!2269 = !DILocation(line: 114, column: 16, scope: !2254)
!2270 = !DILocation(line: 114, column: 25, scope: !2254)
!2271 = !DILocation(line: 117, column: 6, scope: !2254)
!2272 = !DILocation(line: 119, column: 11, scope: !2273)
!2273 = distinct !DILexicalBlock(scope: !2250, file: !1, line: 119, column: 10)
!2274 = !DILocation(line: 119, column: 19, scope: !2273)
!2275 = !DILocation(line: 119, column: 32, scope: !2273)
!2276 = !DILocation(line: 119, column: 40, scope: !2273)
!2277 = !DILocation(line: 119, column: 30, scope: !2273)
!2278 = !DILocation(line: 120, column: 3, scope: !2273)
!2279 = !DILocation(line: 120, column: 7, scope: !2273)
!2280 = !DILocation(line: 120, column: 15, scope: !2273)
!2281 = !DILocation(line: 120, column: 6, scope: !2273)
!2282 = !DILocation(line: 119, column: 10, scope: !2250)
!2283 = !DILocation(line: 122, column: 4, scope: !2273)
!2284 = !DILocation(line: 122, column: 12, scope: !2273)
!2285 = !DILocation(line: 122, column: 25, scope: !2273)
!2286 = !DILocation(line: 122, column: 33, scope: !2273)
!2287 = !DILocation(line: 122, column: 23, scope: !2273)
!2288 = !DILocation(line: 122, column: 3, scope: !2273)
!2289 = !DILocation(line: 123, column: 3, scope: !2273)
!2290 = !DILocation(line: 123, column: 11, scope: !2273)
!2291 = !DILocation(line: 123, column: 24, scope: !2273)
!2292 = !DILocation(line: 123, column: 32, scope: !2273)
!2293 = !DILocation(line: 121, column: 8, scope: !2273)
!2294 = !DILocation(line: 121, column: 16, scope: !2273)
!2295 = !DILocation(line: 121, column: 25, scope: !2273)
!2296 = !DILocation(line: 124, column: 2, scope: !2245)
!2297 = !DILocation(line: 125, column: 5, scope: !2222)
!2298 = !DILocation(line: 100, column: 40, scope: !2219)
!2299 = !DILocation(line: 100, column: 46, scope: !2219)
!2300 = !DILocation(line: 100, column: 38, scope: !2219)
!2301 = !DILocation(line: 100, column: 3, scope: !2219)
!2302 = distinct !{!2302, !2220, !2303}
!2303 = !DILocation(line: 125, column: 5, scope: !2214)
!2304 = !DILocation(line: 128, column: 7, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !2165, file: !1, line: 128, column: 7)
!2306 = !DILocation(line: 128, column: 15, scope: !2305)
!2307 = !DILocation(line: 128, column: 27, scope: !2305)
!2308 = !DILocation(line: 128, column: 35, scope: !2305)
!2309 = !DILocation(line: 128, column: 24, scope: !2305)
!2310 = !DILocation(line: 128, column: 7, scope: !2165)
!2311 = !DILocalVariable(name: "last", scope: !2312, file: !1, line: 130, type: !475)
!2312 = distinct !DILexicalBlock(scope: !2305, file: !1, line: 129, column: 5)
!2313 = !DILocation(line: 130, column: 27, scope: !2312)
!2314 = !DILocalVariable(name: "x", scope: !2312, file: !1, line: 131, type: !475)
!2315 = !DILocation(line: 131, column: 27, scope: !2312)
!2316 = !DILocalVariable(name: "x_info", scope: !2312, file: !1, line: 132, type: !1886)
!2317 = !DILocation(line: 132, column: 28, scope: !2312)
!2318 = !DILocation(line: 133, column: 7, scope: !2312)
!2319 = !DILocation(line: 134, column: 6, scope: !2320)
!2320 = distinct !DILexicalBlock(scope: !2312, file: !1, line: 133, column: 10)
!2321 = !DILocation(line: 134, column: 11, scope: !2320)
!2322 = !DILocation(line: 134, column: 20, scope: !2320)
!2323 = !DILocation(line: 134, column: 25, scope: !2320)
!2324 = !DILocation(line: 134, column: 17, scope: !2320)
!2325 = !DILocation(line: 134, column: 4, scope: !2320)
!2326 = !DILocation(line: 135, column: 35, scope: !2320)
!2327 = !DILocation(line: 135, column: 38, scope: !2320)
!2328 = !DILocation(line: 135, column: 11, scope: !2320)
!2329 = !DILocation(line: 135, column: 9, scope: !2320)
!2330 = !DILocation(line: 136, column: 2, scope: !2320)
!2331 = !DILocation(line: 136, column: 10, scope: !2320)
!2332 = !DILocation(line: 136, column: 19, scope: !2320)
!2333 = !DILocation(line: 138, column: 6, scope: !2334)
!2334 = distinct !DILexicalBlock(scope: !2320, file: !1, line: 138, column: 6)
!2335 = !DILocation(line: 138, column: 11, scope: !2334)
!2336 = !DILocation(line: 138, column: 6, scope: !2320)
!2337 = !DILocation(line: 140, column: 27, scope: !2338)
!2338 = distinct !DILexicalBlock(scope: !2334, file: !1, line: 139, column: 4)
!2339 = !DILocation(line: 140, column: 6, scope: !2338)
!2340 = !DILocation(line: 140, column: 14, scope: !2338)
!2341 = !DILocation(line: 140, column: 25, scope: !2338)
!2342 = !DILocation(line: 141, column: 13, scope: !2338)
!2343 = !DILocation(line: 141, column: 11, scope: !2338)
!2344 = !DILocation(line: 142, column: 4, scope: !2338)
!2345 = !DILocation(line: 144, column: 36, scope: !2334)
!2346 = !DILocation(line: 144, column: 4, scope: !2334)
!2347 = !DILocation(line: 144, column: 9, scope: !2334)
!2348 = !DILocation(line: 144, column: 16, scope: !2334)
!2349 = !DILocation(line: 144, column: 21, scope: !2334)
!2350 = !DILocation(line: 144, column: 30, scope: !2334)
!2351 = !DILocation(line: 144, column: 34, scope: !2334)
!2352 = !DILocation(line: 145, column: 7, scope: !2320)
!2353 = !DILocation(line: 146, column: 14, scope: !2312)
!2354 = !DILocation(line: 146, column: 19, scope: !2312)
!2355 = !DILocation(line: 146, column: 16, scope: !2312)
!2356 = distinct !{!2356, !2318, !2357}
!2357 = !DILocation(line: 146, column: 20, scope: !2312)
!2358 = !DILocation(line: 147, column: 11, scope: !2359)
!2359 = distinct !DILexicalBlock(scope: !2312, file: !1, line: 147, column: 11)
!2360 = !DILocation(line: 147, column: 16, scope: !2359)
!2361 = !DILocation(line: 147, column: 11, scope: !2312)
!2362 = !DILocation(line: 148, column: 34, scope: !2359)
!2363 = !DILocation(line: 148, column: 2, scope: !2359)
!2364 = !DILocation(line: 148, column: 7, scope: !2359)
!2365 = !DILocation(line: 148, column: 14, scope: !2359)
!2366 = !DILocation(line: 148, column: 19, scope: !2359)
!2367 = !DILocation(line: 148, column: 28, scope: !2359)
!2368 = !DILocation(line: 148, column: 32, scope: !2359)
!2369 = !DILocation(line: 149, column: 5, scope: !2312)
!2370 = !DILocation(line: 150, column: 1, scope: !2165)
!2371 = distinct !DISubprogram(name: "get_base_var", scope: !1, file: !1, line: 216, type: !2372, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1957)
!2372 = !DISubroutineType(types: !2373)
!2373 = !{!479, !479}
!2374 = !DILocalVariable(name: "t", arg: 1, scope: !2371, file: !1, line: 216, type: !479)
!2375 = !DILocation(line: 216, column: 20, scope: !2371)
!2376 = !DILocation(line: 218, column: 3, scope: !2371)
!2377 = !DILocation(line: 218, column: 11, scope: !2371)
!2378 = !DILocation(line: 219, column: 3, scope: !2371)
!2379 = !DILocation(line: 219, column: 8, scope: !2371)
!2380 = !DILocation(line: 220, column: 3, scope: !2371)
!2381 = !DILocation(line: 220, column: 6, scope: !2371)
!2382 = !DILocation(line: 220, column: 20, scope: !2371)
!2383 = !DILocation(line: 221, column: 3, scope: !2371)
!2384 = !DILocation(line: 221, column: 6, scope: !2371)
!2385 = !DILocation(line: 221, column: 20, scope: !2371)
!2386 = !DILocation(line: 222, column: 3, scope: !2371)
!2387 = !DILocation(line: 222, column: 6, scope: !2371)
!2388 = !DILocation(line: 222, column: 20, scope: !2371)
!2389 = !DILocation(line: 223, column: 3, scope: !2371)
!2390 = !DILocation(line: 223, column: 6, scope: !2371)
!2391 = !DILocation(line: 223, column: 20, scope: !2371)
!2392 = !DILocation(line: 0, scope: !2371)
!2393 = !DILocation(line: 225, column: 11, scope: !2394)
!2394 = distinct !DILexicalBlock(scope: !2371, file: !1, line: 224, column: 5)
!2395 = !DILocation(line: 225, column: 9, scope: !2394)
!2396 = distinct !{!2396, !2376, !2397}
!2397 = !DILocation(line: 226, column: 5, scope: !2371)
!2398 = !DILocation(line: 227, column: 10, scope: !2371)
!2399 = !DILocation(line: 227, column: 3, scope: !2371)
